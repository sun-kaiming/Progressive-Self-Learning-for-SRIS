{"x1": "- 10 + 2 + 4 + 0 - 22 - 14 + 0 + 0 + 0 + 42 + 60 + 80 + 354 + 546 + 792 + 3366 + 5670 + 8954 + 4 668 + 7 4022 + 12 5706 + 61 410 + 118 4784", "x2": "mul sub n INT+ 7 relu add n add INT+ 4 x_0_3", "tree": "((n sub 7) mul relu((n add (4 add x_0_3))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 5 + 5 + 0 + 20 + 35 + 0 + 21 + 16 + 0 + 50 + 99 + 0 + 39 + 28 + 0 + 112 + 187 + 0 + 57 + 40 + 0 + 198", "x2": "mul sub n sign mul x_0_1 n relu idiv sqr n x_0_3", "tree": "((n sub sign((x_0_1 mul n))) mul relu(((n)**2 idiv x_0_3)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 1 + 8 + 8 + 9 - 1 + 15 + 18 + 7 + 25 + 38 + 20 + 38 + 50 + 35 + 54 + 66 + 53 + 73 + 85 + 74 + 95 + 107 + 98 + 120 + 132", "x2": "sub add n x_0_3 idiv add x_0_6 mul sqr mod mul abs add INT- 2 n n n INT- 3 x_0_5", "tree": "((n add x_0_3) sub ((x_0_6 add ((((abs((-2 add n)) mul n) mod n))**2 mul -3)) idiv x_0_5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 10 - 7 + 4 - 10 - 7 + 10 + 76 + 181 + 160 + 45 + 208 + 178 - 54 - 1055 - 2812 - 2637 - 728 - 3871 - 3480 + 1213 + 2 3288 + 6 4753 + 6 3364 + 1 8275 + 10 720 + 9 4033", "x2": "sub sqr INT+ 1 0 mul add mod abs sign add idiv INT+ 5 INT- 9 n INT+ 8 x_0_7 n", "tree": "((10)**2 sub (((abs(sign(((5 idiv -9) add n))) mod 8) add x_0_7) mul n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 3 + 3 - 5 + 5 - 23 + 7 - 47 + 9 - 79 + 11 - 120 + 13 - 168 + 15 - 224 + 17 - 288 + 19 - 360 + 21", "x2": "mod mod n sqr n sub idiv relu INT+ 9 add n idiv INT- 3 INT+ 4 mul n x_0_1", "tree": "((n mod (n)**2) mod ((relu(9) idiv (n add (-3 idiv 4))) sub (n mul x_0_1)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 2 + 10 - 8 + 11 - 19 + 18 - 31 + 36 - 50 + 66 - 87 + 115 - 154 + 201 - 270 + 354 - 472 + 623 - 827 + 1094 - 1451 + 1920 - 2546", "x2": "sub add x_0_2 sub mod relu x_0_3 x_0_3 INT+ 1 mul sign n x_0_3", "tree": "((x_0_2 add ((relu(x_0_3) mod x_0_3) sub 1)) sub (sign(n) mul x_0_3))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 4 + 6 + 4 + 10 + 12 + 7 + 16 + 18 + 10 + 22 + 24 + 13 + 28 + 30 + 16 + 34 + 36 + 19 + 40 + 42", "x2": "add abs mul mod x_0_1 abs add sign x_0_1 abs INT- 2 n n", "tree": "(abs(((x_0_1 mod abs((sign(x_0_1) add abs(-2)))) mul n)) add n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 3 + 4 - 4 + 8 - 4 - 4 - 1 - 2 + 6 - 6 + 6 + 6 + 3 + 4 - 4 + 8 - 4 - 4 - 1 - 2 + 6 - 6 + 6 + 6 + 3 + 4", "x2": "sub sign n add sign add INT- 1 0 x_0_7 x_0_6", "tree": "(sign(n) sub (sign((-10 add x_0_7)) add x_0_6))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 10 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506", "x2": "add n idiv sqr abs n mod sign x_0_2 add mod abs n n n", "tree": "(n add ((abs(n))**2 idiv (sign(x_0_2) mod ((abs(n) mod n) add n))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 2 - 5 - 6 - 7 - 8 + 0 - 7 - 9 - 6 - 2 + 11 + 3 + 1 + 1 + 1 + 1 + 10 + 4 + 3 + 7 + 12 + 26 + 19 + 18 + 19 + 20 + 21 + 31 + 26 + 26", "x2": "add n sub x_0_11 abs INT+ 8", "tree": "(n add (x_0_11 sub abs(8)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 9 - 6 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484", "x2": "sub mul n idiv sub x_0_2 x_0_2 idiv INT- 2 idiv n x_0_1 sqr n", "tree": "((n mul ((x_0_2 sub x_0_2) idiv (-2 idiv (n idiv x_0_1)))) sub (n)**2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 9 - 10 + 2 + 10 - 3 + 3 - 1 - 10 + 3 - 3 + 1 + 10 - 3 + 3 - 1 - 10 + 3 - 3 + 1 + 10 - 3 + 3 - 1 - 10 + 3 - 3", "x2": "idiv x_0_4 idiv add INT- 6 mod add x_0_6 n x_0_2 n", "tree": "(x_0_4 idiv ((-6 add ((x_0_6 add n) mod x_0_2)) idiv n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 + 10 - 5 - 20 - 12 - 30 - 48 - 43 - 64 - 85 - 83 - 107 - 131 - 132 - 159 - 186 - 190 - 220 - 250 - 257 - 290 - 323 - 333", "x2": "sub sub x_0_3 n abs relu add add INT+ 7 n n", "tree": "((x_0_3 sub n) sub abs(relu(((7 add n) add n))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 10 + 10 - 10 + 2 + 2 + 3 + 7 + 2 - 90 - 131 - 134 - 179 - 194 - 223 - 253 - 282 - 322 - 451 - 531 - 575 - 663 - 723 - 799 - 878 - 958 - 1051 - 1235 - 1372", "x2": "sub x_0_9 sqr n", "tree": "(x_0_9 sub (n)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 8 + 7 + 8 + 0 + 10 + 0 - 8 + 7 + 8 + 0 + 10 + 0 - 8 + 7 + 8 + 0 + 10 + 0 - 8 + 7 + 8 + 0 + 10 + 0 - 8 + 7", "x2": "mul x_0_6 INT+ 1", "tree": "(x_0_6 mul 1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 9 - 4 + 2 - 8 - 6 + 10 - 16 + 0 - 6 - 13 - 4 - 7 - 24 + 1 - 16 - 11 - 5 - 15 - 13 + 3 - 23 - 7 - 13 - 20 - 11 - 14", "x2": "sub mul x_0_7 INT- 1 n", "tree": "((x_0_7 mul -1) sub n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 10 - 1 + 3 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sub mod n x_0_2 x_0_2", "tree": "((n mod x_0_2) sub x_0_2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 8 + 4 + 3 + 12 + 1 + 2 + 11 + 1 + 1 + 10 + 0 + 9 + 10 + 9 + 1 + 1 + 8 + 0 + 7 + 8 + 7 + 1", "x2": "abs sub mod abs x_0_2 n x_0_3", "tree": "abs(((abs(x_0_2) mod n) sub x_0_3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 8 + 8 - 6 + 4 + 6 + 1 - 10 - 7 - 23 - 21 - 39 - 41 - 63 - 65 - 94 - 89 - 123 - 123 - 162 - 147 - 187 - 176 - 218 - 207 - 259 - 246 - 304 - 287", "x2": "sub mod abs x_0_9 n sub n sub x_0_2 n", "tree": "((abs(x_0_9) mod n) sub (n sub (x_0_2 sub n)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 2 - 8 - 3 - 10 + 10 + 5 - 10 - 8 + 5 - 20 - 88 - 36 + 0 + 0 - 75 + 0 - 136 - 90 + 0 - 160 - 126 + 0 + 0 - 120 + 0 - 156 + 0 + 0 + 0", "x2": "mul mod x_0_9 INT- 1 0 n", "tree": "((x_0_9 mod -10) mul n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 9 + 3 - 4 + 5 - 72 + 24 - 32 + 40 - 576 + 192 - 256 + 320 - 4608 + 1536 - 2048 + 2560 - 3 6864 + 1 2288 - 1 6384 + 2 480 - 29 4912 + 9 8304 - 13 1072 + 16 3840", "x2": "mul x_0_4 INT+ 8", "tree": "(x_0_4 mul 8)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 - 9 + 10 - 1 - 4 - 4 - 36 + 40 - 1 - 16 - 16 - 144 + 160 - 1 - 64 - 64 - 576 + 640 - 1 - 256 - 256 - 2304 + 2560 - 1 - 1024", "x2": "mul x_0_5 mod sign x_0_1 INT+ 5", "tree": "(x_0_5 mul (sign(x_0_1) mod 5))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 5 - 4 + 2 + 5 + 5 - 10 + 6 - 3 - 9 + 6 - 2 + 60 + 78 + 168 + 225 + 240 + 0 + 288 + 133 + 20 + 336 + 176 + 1610 + 2112 + 4450 + 6110 + 6750 + 280 + 8642 + 4290 + 930", "x2": "mul n add INT+ 1 0 x_0_11", "tree": "(n mul (10 add x_0_11))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 6 + 0 - 6 + 7 - 6 + 18 + 0 + 16 + 45 + 20 + 44 + 0 + 52 + 56 + 60 + 64 + 0 + 72 + 76 + 80 + 84 + 0 + 92 + 96 + 100", "x2": "relu sub mul n idiv n x_0_5 mul n INT- 4", "tree": "relu(((n mul (n idiv x_0_5)) sub (n mul -4)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 + 6 + 4 + 10 - 100 - 2700 - 2 2680 + 5 4430 + 5 4500 + 19 7100 - 269 8920 - 9704 8690 - 10 4656 3500 + 32 997 600 + 40 1869 1880 + 179 5400 7650 - 2982 7059 7500 - 12 8655 6216 4800 - 164 1474 8853 480 + 592 8233 7859 5350 + 865 8795 4454 2500 + 4490 811 9551 5200 - 8 5684 9890 1291 560 - 422 3866 5724 9186 8750", "x2": "mul x_0_4 idiv mul mul INT+ 3 n x_0_1 x_0_3", "tree": "(x_0_4 mul (((3 mul n) mul x_0_1) idiv x_0_3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 - 9 - 2 + 10 + 1 + 4 - 8 - 12 + 11 + 1 + 18 + 12 - 13 + 22 - 2 + 24 + 46 - 11 + 51 + 5 + 13 + 96 - 19 + 93 + 43", "x2": "sub sub idiv sqr n sub abs sub sign sqr INT- 7 INT+ 5 INT- 7 INT+ 5 sub x_0_4 x_0_5", "tree": "((((n)**2 idiv (abs((sign((-7)**2) sub 5)) sub -7)) sub 5) sub (x_0_4 sub x_0_5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 7 - 5 - 10 - 4 + 6 + 3 - 4 + 9 + 5 + 144 + 36 + 324 + 100 + 9 + 64 + 169 + 16 + 25 + 1 6129 + 1024 + 9 4864 + 8281 + 81 + 3969 + 2 3409 + 81 + 225 + 2 5962 8769 + 103 8361", "x2": "sqr sub relu mod x_0_8 n x_0_9", "tree": "((relu((x_0_8 mod n)) sub x_0_9))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 3 + 2 - 2 + 0 - 8 + 4 - 7 + 2 + 3 + 3 + 4 + 0 + 12 + 5 + 10 + 13 + 13 + 2 + 9 + 15 + 7 + 7 + 16 + 17 + 6 + 17 + 26", "x2": "mod add add sub sub abs n n sqr x_0_5 sqr INT+ 1 add x_0_8 mod INT+ 9 n n", "tree": "(((((abs(n) sub n) sub (x_0_5)**2) add (1)**2) add (x_0_8 add (9 mod n))) mod n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 5 + 0 + 5 + 5 + 0 + 5 + 5 + 0 + 5 + 5 + 0 + 5 + 5 + 0 + 5 + 5 + 0 + 5 + 5 + 0 + 5 + 5", "x2": "mul sign abs sign mul n add add sqr x_0_1 sqr INT+ 8 INT+ 8 x_0_3", "tree": "(sign(abs(sign((n mul (((x_0_1)**2 add (8)**2) add 8))))) mul x_0_3)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 5 + 6 + 7 - 1 - 2 - 10 + 6 - 5 - 6 + 2 + 3 + 11 - 5 + 6 + 7 - 1 - 2 - 10 + 6 - 5 - 6 + 2 + 3 + 11 - 5 + 6", "x2": "sub sqr sign x_0_6 x_0_6", "tree": "((sign(x_0_6))**2 sub x_0_6)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 5 + 6 - 9 + 7 - 12 + 11 - 18 + 15 - 24 + 19 - 30 + 23 - 36 + 27 - 42 + 31 - 48 + 35 - 54 + 39 - 60 + 43", "x2": "sub mul x_0_1 sign INT- 7 abs abs sub relu n relu x_0_2", "tree": "((x_0_1 mul sign(-7)) sub abs(abs((relu(n) sub relu(x_0_2)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 5 + 14 + 30 + 64 + 134 + 276 + 553 + 1108 + 2219 + 4442 + 8889 + 1 7784 + 3 5575 + 7 1158 + 14 2325 + 28 4660 + 56 9331 + 113 8674 + 227 7361", "x2": "add n add sub x_0_1 mod relu sub INT+ 8 idiv n INT- 1 n x_0_1", "tree": "(n add ((x_0_1 sub (relu((8 sub (n idiv -1))) mod n)) add x_0_1))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 - 10 + 3 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign mod INT- 5 relu idiv n x_0_4", "tree": "sign((-5 mod relu((n idiv x_0_4))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 + 5 + 10 - 6 + 1 + 49 + 25 + 100 + 36 + 1 + 2401 + 625 + 1 0 + 1296 + 1 + 576 4801 + 39 625 + 1 0 0 + 167 9616 + 1 + 33 2329 3056 9601 + 1525 8789 625 + 1 0 0 0 0 + 2 8211 990 7456 + 1", "x2": "sqr add idiv INT- 2 INT- 4 x_0_5", "tree": "(((-2 idiv -4) add x_0_5))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 52 + 62 + 73 + 85 + 98 + 112 + 127 + 143 + 160 + 178 + 197 + 217 + 238", "x2": "sub add n add abs x_0_1 abs sub x_0_1 mod x_0_1 x_0_1 x_0_1", "tree": "((n add (abs(x_0_1) add abs((x_0_1 sub (x_0_1 mod x_0_1))))) sub x_0_1)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 7 + 2 - 8 + 5 + 2 + 21 + 12 + 32 + 2 + 51 - 7 + 93 - 43 + 165 - 114 + 317 - 219 + 614 - 403 + 1170 - 777 + 2209 - 1521 + 4180", "x2": "add x_0_2 add n sub abs x_0_4 x_0_3", "tree": "(x_0_2 add (n add (abs(x_0_4) sub x_0_3)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 8 + 3 - 7 - 7 - 7 - 1 - 7 - 5 - 7 - 1 - 7 - 5 - 7 - 1 - 7 - 5 - 7 - 1 - 7 - 5 - 7 - 1", "x2": "mod mod INT- 7 sub mul mul x_0_3 INT- 5 n n INT- 8", "tree": "((-7 mod (((x_0_3 mul -5) mul n) sub n)) mod -8)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 3 + 6 + 0 + 10 + 66 + 448 + 3616 + 3 2490 + 32 4280 + 356 2196 + 4270 3008 + 5 5471 6786 + 77 6149 5140 + 1163 6899 4220 + 1 8612 2065 9456 + 31 6313 2102 5458 + 569 2240 7154 5796 + 1 813 463 4848 20 + 21 6223 7025 5641 1360 + 454 33 4959 4310 4026 + 9986 8213 9811 7428 1148 + 22 9672 221 5009 9342 6036 + 551 1609 5947 1624 8835 2320", "x2": "mul n relu add sub INT+ 4 x_0_4 x_0_1", "tree": "(n mul relu(((4 sub x_0_4) add x_0_1)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 9 + 13 + 23 + 35 + 56 + 80 + 116 + 156 + 211 + 271 + 349 + 433 + 538 + 650 + 786 + 930 + 1101 + 1281 + 1491 + 1711", "x2": "add x_0_1 abs mul idiv n INT+ 2 add n sign add sqr INT- 2 n", "tree": "(x_0_1 add abs(((n idiv 2) mul (n add sign(((-2)**2 add n))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 7 + 4 + 1 - 10 - 3 + 6 + 5 + 3 + 4 + 0 + 5 + 9 + 4 + 0 + 5 + 9 + 0 + 0 + 9 + 9 + 0 + 0 + 9 + 0 + 0 + 9", "x2": "relu sub mod sqr INT- 3 add idiv x_0_5 x_0_7 mul n mod INT- 7 add relu n INT- 4 x_0_2", "tree": "relu((((-3)**2 mod ((x_0_5 idiv x_0_7) add (n mul (-7 mod (relu(n) add -4))))) sub x_0_2))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 + 1 + 2 + 1 + 4 + 1 + 6 + 1 + 8 + 1 + 10 + 1 + 12", "x2": "sub sub n relu mod x_0_1 sqr relu idiv abs sqr x_0_1 x_0_1 INT+ 9", "tree": "((n sub relu((x_0_1 mod (relu((abs((x_0_1)**2) idiv x_0_1)))**2))) sub 9)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 8 - 9 + 146 + 25 + 26 + 1533 + 332 + 351 + 1 5430 + 3429 + 3628 + 15 4427 + 3 4426 + 3 6425 + 154 4424 + 34 4423 + 36 4422 + 1544 4421 + 344 4420 + 364 4419 + 1 5444 4418 + 3444 4417", "x2": "abs add mul add n add sign n x_0_3 mul INT- 1 0 sign INT+ 8 relu n", "tree": "abs((((n add (sign(n) add x_0_3)) mul (-10 mul sign(8))) add relu(n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 4 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign abs idiv x_0_2 sub x_0_1 relu x_0_2", "tree": "sign(abs((x_0_2 idiv (x_0_1 sub relu(x_0_2)))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 4 - 2 + 10 + 5 - 6 + 7 + 5 + 0 + 4 + 0 + 10 + 5 + 0 + 7 + 5 + 0 + 4 + 0 + 10 + 5 + 0 + 7 + 5 + 0 + 4 + 0 + 10", "x2": "relu x_0_8", "tree": "relu(x_0_8)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 6 - 7 - 9 - 5 - 9 + 9 + 5 - 4 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1", "x2": "sign idiv add x_0_9 sign relu INT+ 8 x_0_7", "tree": "sign(((x_0_9 add sign(relu(8))) idiv x_0_7))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 1 + 2 - 3 + 10 - 6 - 1 - 1 - 3 - 8 - 89 - 24 + 12 + 13 + 6 - 48 - 7904 - 558 - 125 - 149 - 15 - 2282 - 6247 3193 - 31 1340 - 1 5600 - 2 2175", "x2": "sub relu mod n sqr add n INT- 7 sqr x_0_6", "tree": "(relu((n mod ((n add -7))**2)) sub (x_0_6)**2)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 4 + 1 - 1 - 2 + 10 + 2 + 4 - 1 - 1 + 5 - 9 + 1728 + 5577 + 3332 + 4950 + 7424 + 578 + 1296 + 2888 + 1 800 + 1 143 + 1452 + 92 7866 + 321 2352 + 209 7500 + 334 6200 + 543 1779 + 45 3152 + 110 8438 + 259 9200 + 1039 332", "x2": "mul n mul n add x_0_11 mod mul x_0_6 add sub x_0_7 n INT- 8 sqr INT- 6", "tree": "(n mul (n mul (x_0_11 add ((x_0_6 mul ((x_0_7 sub n) add -8)) mod (-6)**2))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 3 - 7 + 9 - 28 + 45 - 168 + 315 - 1344 + 2835 - 1 3440 + 3 1185 - 16 1280 + 40 5405 - 225 7920 + 608 1075 - 3612 6720 + 1 337 8275 - 6 5028 960 + 19 6418 7225 - 130 561 9200 + 412 4793 1725 - 2861 2362 2400", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 5 - 3 + 9 - 10 - 2 - 7 - 8 - 8 - 6 - 16 - 24 - 7 - 78 - 96 + 1 - 43 - 57 - 56 - 27 - 246 - 565 - 37 - 6071 - 9202 + 14 - 1833 - 3232 - 3118 - 710", "x2": "sub INT- 7 add sub INT+ 4 n sqr x_0_10", "tree": "(-7 sub ((4 sub n) add (x_0_10)**2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 4 - 3 - 4 - 3 - 4 + 0 - 3 - 1 - 1 + 0 - 4 - 4 - 3 + 0 + 0 - 4 - 4 - 3 + 0 + 0", "x2": "mod abs add n sub mul INT- 2 mod x_0_1 n relu sign n INT- 5", "tree": "(abs((n add ((-2 mul (x_0_1 mod n)) sub relu(sign(n))))) mod -5)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 + 2 + 9 - 4 + 2 + 5 + 1 - 9 - 10 + 10 + 45 - 20 + 10 + 25 + 5 - 45 - 50 + 50 + 225 - 100 + 50 + 125 + 25 - 225 - 250 + 250 + 1125 - 500", "x2": "mul mul x_0_8 add sign INT+ 8 mod n n INT+ 5", "tree": "((x_0_8 mul (sign(8) add (n mod n))) mul 5)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 3 - 10 - 9 - 1 + 3 + 6 + 7 + 8 + 9 + 10 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 20 + 21 + 22 + 23", "x2": "sub mul n mod x_0_5 sign x_0_5 sub idiv x_0_1 INT+ 1 0 n", "tree": "((n mul (x_0_5 mod sign(x_0_5))) sub ((x_0_1 idiv 10) sub n))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 + 10 - 4 + 8 - 11 + 4 - 9 + 11 - 5 + 9 - 12 + 5 - 10 + 12 - 6 + 10 - 13 + 6 - 11 + 13 - 7 + 11 - 14", "x2": "sub idiv INT+ 2 idiv relu sqr INT+ 7 x_0_2 x_0_3", "tree": "((2 idiv (relu((7)**2) idiv x_0_2)) sub x_0_3)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 7 - 9 - 3 + 8 + 0 + 0 + 0 + 8 + 0 + 0 + 0 + 8 + 0 + 0 + 0 + 8 + 0 + 0 + 0 + 8 + 0 + 0 + 0", "x2": "relu sub x_0_4 x_0_1", "tree": "relu((x_0_4 sub x_0_1))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 4 + 9 + 2 + 2 - 5 + 5 + 3 + 1 - 6 + 9 + 16 + 81 + 4 + 4 + 25 + 25 + 9 + 1 + 36 + 81 + 256 + 6561 + 16 + 16 + 625 + 625 + 81 + 1 + 1296", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 4 + 6 + 0 + 11 + 6 + 18 + 14 + 27 + 24 + 38 + 36 + 51 + 50 + 66 + 66 + 83 + 84 + 102 + 104 + 123 + 126", "x2": "relu add x_0_2 n", "tree": "relu((x_0_2 add n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 2 + 9 + 0 + 6 + 63 + 117 + 63 + 90 + 90 + 117 + 108 + 162 + 171 + 153 + 171 + 198 + 198 + 225 + 216 + 198 + 207 + 261 + 207 + 234", "x2": "mul sub relu n mod x_0_4 INT- 8 relu INT+ 9", "tree": "((relu(n) sub (x_0_4 mod -8)) mul relu(9))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 7 + 8 - 28 + 16 - 60 + 24 - 92 + 32 - 124 + 40 - 156 + 48 - 188 + 56 - 220 + 64 - 252 + 72 - 284 + 80 - 316", "x2": "sub mul mod n mul sign INT- 3 x_0_1 INT+ 5 n", "tree": "(((n mod (sign(-3) mul x_0_1)) mul 5) sub n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 4 + 5 - 3 - 5 - 9 - 4 + 6 + 9 + 6 + 8 + 9 + 2 + 4 + 9 + 0 + 8 + 9 + 0 + 12 + 15 + 0 + 8 + 15 + 0 + 18 + 0 + 0 + 11", "x2": "mod mul x_0_9 mul x_0_3 x_0_9 relu n", "tree": "((x_0_9 mul (x_0_3 mul x_0_9)) mod relu(n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 4 - 7 - 4 + 4 - 6 - 5 + 2 - 4 - 7 - 1 + 2 - 11 - 3 - 13 - 3 - 5 - 19 - 5 - 12 - 24 - 7 - 17 - 26", "x2": "add x_0_3 idiv n mul idiv n n x_0_4", "tree": "(x_0_3 add (n idiv ((n idiv n) mul x_0_4)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 1 - 8 + 4 - 3 - 10 - 2 + 1 + 0 + 6 + 0 - 9 + 3 - 4 - 11 - 1 + 0 + 1 + 7 + 1 - 10 + 2 - 5 - 12 + 0 - 1 + 2 + 8 + 0", "x2": "sub x_0_9 sign x_0_4", "tree": "(x_0_9 sub sign(x_0_4))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 8 + 10 - 1 - 5 - 8 - 9 + 100 - 64 - 100 - 1 - 25 + 64 - 81 - 1 0 - 4096 - 1 0 + 1 - 625 - 4096 - 6561 - 1 0 0 + 1677 7216 - 1 0 0 - 1 - 39 625 - 1677 7216", "x2": "mul sign mul x_0_5 mul sign relu n n sqr x_0_7", "tree": "(sign((x_0_5 mul (sign(relu(n)) mul n))) mul (x_0_7)**2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 7 + 7 + 2 - 9 + 456 + 654 + 1950 + 2770 + 5882 + 9114 + 1 6528 + 2 6522 + 4 4084 + 7 1558 + 11 4588 + 18 5998 + 29 3884 + 47 3882 + 74 6884 + 119 5462 + 188 7060 + 300 3026 + 474 9532 + 753 1070", "x2": "mul add add x_0_5 mul n sqr n x_0_2 INT+ 2", "tree": "(((x_0_5 add (n mul (n)**2)) add x_0_2) mul 2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 7 + 7 + 6 - 3 - 6 + 6 - 36 + 60 + 72 - 36 + 216 - 324 - 432 + 576 - 864 + 1944 + 3888 - 3456 + 5184 - 8208 - 2 3328 + 3 2400 - 7776 + 4 9248 + 17 1072", "x2": "mul sub relu x_0_6 x_0_4 relu INT+ 6", "tree": "((relu(x_0_6) sub x_0_4) mul relu(6))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 9 - 4 - 10 + 0 + 11 + 12 - 13 - 14 + 15 + 16 + 17 - 18 - 19 + 20 + 21 + 22 - 23 - 24 + 25 + 26 + 27 - 28 - 29 + 30", "x2": "mul add n INT+ 5 sign x_0_5", "tree": "((n add 5) mul sign(x_0_5))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 0 + 1 + 10 + 15 + 6 + 8 + 18 + 24 + 16 + 19 + 30 + 37 + 30 + 34 + 46 + 54 + 48 + 53 + 66 + 75 + 70 + 76 + 90", "x2": "add n x_0_4", "tree": "(n add x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 - 9 - 7 - 5 + 5 - 6 - 9 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign mul mul relu mul sqr idiv INT- 8 relu x_0_7 n sqr INT+ 4 INT- 1", "tree": "sign(((relu((((-8 idiv relu(x_0_7)))**2 mul n)) mul (4)**2) mul -1))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 8 + 10 + 10 + 1 + 1 + 6 - 8 + 1 + 5 + 7 + 7 + 2 + 2 + 3 + 11 + 2 + 2 + 4 + 4 + 1 + 1 + 0 + 8 + 1 + 1 + 1 + 1", "x2": "mod abs sub x_0_8 INT+ 3 add x_0_5 sqr abs n", "tree": "(abs((x_0_8 sub 3)) mod (x_0_5 add (abs(n))**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 8 + 1 - 6 - 5 - 10 + 0 + 9 - 5 + 10 - 3 + 3 - 9 + 826 + 16 + 540 + 396 + 1691 + 2 + 1549 + 496 + 2111 + 207 + 211 + 1936 + 1705 7727 + 6673 + 787 3741 + 439 1245 + 8292 6641 + 123 + 7438 2981 + 787 3009", "x2": "add mul mul x_0_12 x_0_12 relu n add relu idiv n x_0_4 add x_0_12 sign relu INT- 2", "tree": "(((x_0_12 mul x_0_12) mul relu(n)) add (relu((n idiv x_0_4)) add (x_0_12 add sign(relu(-2)))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 2 - 1 - 5 - 1 - 8 - 8 + 3 - 4 + 63 - 70 - 77 - 84 - 91 - 98 + 105 - 112 + 119 - 126 - 133 - 140 - 147 - 154 + 161 - 168 + 175 - 182 - 189 - 196", "x2": "mul idiv abs mul n sign INT- 7 sign x_0_8 relu INT+ 7", "tree": "((abs((n mul sign(-7))) idiv sign(x_0_8)) mul relu(7))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 6 + 8 + 6 - 2 - 10 + 0 + 1 + 2 + 3 + 4 + 4 + 0 + 1 + 2 + 3 + 4 + 3 + 0 + 1 + 2 + 3 + 4 + 2 + 0 + 1", "x2": "mod mod n mul add INT- 7 mod sign x_0_1 add x_0_4 x_0_5 idiv INT+ 3 idiv n INT- 3 mul INT+ 1 INT+ 6", "tree": "((n mod ((-7 add (sign(x_0_1) mod (x_0_4 add x_0_5))) mul (3 idiv (n idiv -3)))) mod (1 mul 6))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 3 - 10 + 8 + 8 + 2 - 6 + 5 - 6 - 1 - 2 - 7 - 10 - 6 - 20 - 19 + 0 - 34 - 34 - 6 - 8 - 55 - 10 - 13 - 60 - 15 - 34 - 60 - 18 - 49", "x2": "mod add abs x_0_10 x_0_8 sub x_0_3 n", "tree": "((abs(x_0_10) add x_0_8) mod (x_0_3 sub n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 14 + 56 + 126 + 224 + 350 + 504 + 686 + 896 + 1134 + 1400 + 1694 + 2016 + 2366 + 2744 + 3150 + 3584 + 4046 + 4536 + 5054 + 5600", "x2": "mul mul n relu relu INT+ 7 add n n", "tree": "((n mul relu(relu(7))) mul (n add n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 2 + 10 - 7 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 5 + 0 + 20 + 0 + 120 + 0 + 960 + 0 + 9600 + 0 + 11 5200 + 0 + 161 2800 + 0 + 2580 4800 + 0 + 4 6448 6400 + 0 + 92 8972 8000 + 0 + 2043 7401 6000", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 9 + 3 + 5 - 8 - 1 - 3 + 10 + 13 + 1 + 9 + 8 + 22 + 26 + 15 + 24 + 24 + 39 + 44 + 34 + 44 + 45 + 61 + 67 + 58 + 69", "x2": "add n x_0_5", "tree": "(n add x_0_5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 10 + 1 + 0 - 10 + 1 + 0 - 10 + 1 + 0 - 10 + 1 + 0 - 10 + 1 + 0 - 10 + 1 + 0 - 10 + 1 + 0 - 10 + 1", "x2": "sub x_0_3 relu INT- 7", "tree": "(x_0_3 sub relu(-7))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 324 + 289 + 256 + 225 + 196 + 169 + 144 + 121 + 100 + 81 + 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1", "x2": "relu sqr add INT- 9 add n INT- 1 0", "tree": "relu(((-9 add (n add -10)))**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 1 - 2 - 8 + 15 + 7 + 11 + 18 - 4 + 5 + 2 - 4 + 19 + 11 + 15 + 22 + 0 + 9 + 6 + 0 + 23 + 15 + 19 + 26", "x2": "add n mul INT- 1 sub x_0_4 INT+ 2", "tree": "(n add (-1 mul (x_0_4 sub 2)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 + 4 + 2 + 8 + 3 - 1 + 0 + 4 + 2 + 8 + 3 + 0 + 0 + 4 + 2 + 8 + 3 + 0 + 0 + 4 + 2 + 8 + 3 + 0 + 0 + 4", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 0 - 4 + 3 - 1 + 1 - 1 - 8 + 10 - 3 + 0 + 9 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 25 + 0 + 25 + 25 + 25 + 0 + 36 + 1 + 1 + 0", "x2": "sqr idiv n sub INT- 5 mul mul x_0_10 n add INT+ 1 0 mul mul add INT- 9 sub n x_0_4 x_0_2 INT- 8", "tree": "((n idiv (-5 sub ((x_0_10 mul n) mul (10 add (((-9 add (n sub x_0_4)) mul x_0_2) mul -8))))))**2", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 + 5 - 3 + 6 - 2 + 7 - 1 + 8 + 0 + 9 + 1 + 10 + 2 + 11 + 3 + 12 + 4 + 13 + 5 + 14 + 6 + 15", "x2": "add INT+ 1 x_0_2", "tree": "(1 add x_0_2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 1 + 8 - 9 - 4 + 1 + 2 + 4 + 6 - 5 + 6 + 4 + 5 + 8 + 8 + 9 + 9 + 8 + 9 + 10 + 10 + 11 + 11 + 11 + 12 + 12 + 13 + 13", "x2": "add idiv abs x_0_6 x_0_8 abs x_0_2", "tree": "((abs(x_0_6) idiv x_0_8) add abs(x_0_2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 3 - 2 + 21 + 28 - 140 - 168 + 980 + 1176 - 6804 - 8190 + 4 7663 + 5 7372 - 33 3606 - 40 1604 + 233 5305 + 281 1312 - 1634 7030 - 1967 9184 + 1 1442 9210 + 1 3775 4400 - 8 100 4470 - 9 6428 702", "x2": "mul mul INT- 7 idiv x_0_2 n n", "tree": "((-7 mul (x_0_2 idiv n)) mul n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 7 - 8 - 1 + 8 - 5 - 40 + 17 + 232 - 127 - 1864 + 1135 + 1 8632 - 1 2493 - 22 3592 + 16 2401 + 313 280 - 243 6023 - 5008 4488 + 4141 2383 + 9 152 776 - 7 8683 5285", "x2": "sub mul sub INT+ 3 abs n x_0_2 sub INT+ 4 INT- 4", "tree": "(((3 sub abs(n)) mul x_0_2) sub (4 sub -4))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 9 + 5 + 7 + 0 + 0 + 9 + 11 + 4 + 4 + 13 + 15 + 8 + 8 + 17 + 19 + 12 + 12 + 21 + 23 + 16 + 16 + 25 + 27 + 20", "x2": "relu add sqr mul sign n INT+ 2 x_0_4", "tree": "relu((((sign(n) mul 2))**2 add x_0_4))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 18 + 18 + 12 + 0 + 198 + 252 + 312 + 378 + 450 + 528 + 612 + 702 + 798 + 900 + 1008 + 1122 + 1242 + 1368 + 1500", "x2": "mul mul n INT+ 3 mod mul add abs INT- 5 n sqr sign n add n abs n", "tree": "((n mul 3) mul (((abs(-5) add n) mul (sign(n))**2) mod (n add abs(n))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 4 - 7 + 3 - 16 - 1 + 111 - 1 - 1 + 6 - 1 - 1 + 6 - 1 - 1 + 6 - 1 - 1 + 6 - 1 - 1 + 6 - 1", "x2": "idiv mod abs sign INT- 7 mul abs INT+ 7 x_0_2 x_0_1", "tree": "((abs(sign(-7)) mod (abs(7) mul x_0_2)) idiv x_0_1)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 3 - 10 - 3 - 10 + 4 + 5 - 3 - 5 + 16 + 144 + 1600 + 144 + 1600 + 256 + 400 + 144 + 400 + 4096 + 33 1776 + 4096 0 + 33 1776 + 4096 0 + 104 8576 + 256 0 + 33 1776 + 256 0 + 2 6843 5456 + 1 7612 502 6816", "x2": "mul sqr x_0_9 add INT+ 6 INT+ 1 0", "tree": "((x_0_9)**2 mul (6 add 10))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 3 + 1 - 3 - 7 - 4 - 9 - 14 - 12 - 18 - 24 - 23 - 30 - 37 - 37 - 45 - 53 - 54 - 63 - 72 - 74 - 84 - 94 - 97", "x2": "sub x_0_3 n", "tree": "(x_0_3 sub n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 2 + 0 + 3 - 2 + 0 + 3 - 2 + 0 + 3 - 2 + 0 + 3 - 2 + 0 + 3 - 2 + 0 + 3 - 2 + 0 + 3 - 2", "x2": "idiv x_0_3 sign relu sign sign add add x_0_3 x_0_1 abs x_0_2", "tree": "(x_0_3 idiv sign(relu(sign(sign(((x_0_3 add x_0_1) add abs(x_0_2)))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 2 - 10 + 4 + 0 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 0 + 6 + 0 + 0 + 0 + 0 + 12 + 0 + 0 + 0 + 0 + 8 + 0", "x2": "relu idiv mul n mul sqr INT- 1 INT+ 4 abs relu x_0_5", "tree": "relu(((n mul ((-1)**2 mul 4)) idiv abs(relu(x_0_5))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 10 + 7 + 6 + 8 + 8 - 2 + 8 - 4 + 90 + 70 + 66 + 96 + 104 + 28 + 120 + 64 + 1530 + 1260 + 1254 + 1920 + 2184 + 616 + 2760 + 1536 + 3 8250 + 3 2760 + 3 3858 + 5 3760", "x2": "abs mul n x_0_8", "tree": "abs((n mul x_0_8))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 6 - 5 - 9 + 5 + 0 + 0 + 9 + 8 + 0 + 0 + 24 + 8 + 0 + 0 + 24 + 8 + 0 + 0 + 24 + 8 + 0 + 0 + 24 + 8", "x2": "relu add add mod x_0_3 x_0_4 INT+ 8 x_0_3", "tree": "relu((((x_0_3 mod x_0_4) add 8) add x_0_3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 - 8 - 10 - 1 - 6 + 7 + 4 + 8 + 10 + 1 + 6 - 6 - 3 - 7 - 9 - 1 - 5 + 6 + 3 + 7 + 9 + 1 + 5 - 5 - 2 - 6", "x2": "sub relu sign add mod mul n add sqr x_0_5 INT+ 4 INT- 3 x_0_6 x_0_6", "tree": "(relu(sign((((n mul ((x_0_5)**2 add 4)) mod -3) add x_0_6))) sub x_0_6)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 1 - 6 + 6 + 4 + 1 + 10 + 8 + 4 + 14 + 12 + 8 + 18 + 16 + 12 + 22 + 20 + 16 + 26 + 24 + 20 + 30 + 28 + 24", "x2": "abs add sub idiv sign x_0_1 x_0_3 x_0_3 INT- 4", "tree": "abs((((sign(x_0_1) idiv x_0_3) sub x_0_3) add -4))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 6 - 3 + 4 - 1 + 130 - 127 + 58 - 19 + 28 + 4271 - 4544 + 6533 - 5342 + 7793 + 19 9666 - 22 3951 + 55 2448 - 52 8445 + 102 28 + 1205 513 - 1376 738 + 5016 9425 - 5180 8778 + 1 2667 1525", "x2": "add x_0_2 mul x_0_5 mul n INT+ 3", "tree": "(x_0_2 add (x_0_5 mul (n mul 3)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 7 + 5 + 10 + 5 - 3 + 0 - 49 + 40 + 90 + 50 - 33 + 0 - 637 + 560 + 1350 + 800 - 561 + 0 - 1 2103 + 1 1200 + 2 8350 + 1 7600 - 1 2903 + 0 - 30 2575 + 29 1200", "x2": "mul n x_0_6", "tree": "(n mul x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 16 + 45 + 176 + 875 + 5244 + 3 6701 + 29 3600 + 264 2391 + 2642 3900 + 2 9066 2889 + 34 8795 4656 + 453 4341 515 + 6348 774 7196 + 9 5221 1620 7925 + 152 3538 5932 6784 + 2590 156 855 5311 + 4 6620 2809 5399 5580 + 88 5785 3381 2591 6001 + 1771 5706 7625 1832 0 + 3 7202 9842 128 8471 9979", "x2": "sub mul x_0_1 n n", "tree": "((x_0_1 mul n) sub n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 7 - 8 + 5 - 9 + 6 + 1 - 2 - 2 + 2 - 2 + 2 + 13 - 7 - 8 + 8 - 9 + 9 + 1 - 3 - 3 + 2 - 3 + 2 + 25 - 9", "x2": "add mod relu n relu n idiv relu n x_0_6", "tree": "((relu(n) mod relu(n)) add (relu(n) idiv x_0_6))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 10 + 15 + 22 + 31 + 42 + 55 + 70 + 87 + 106 + 127 + 150 + 175 + 202 + 231 + 262 + 295 + 330 + 367 + 406", "x2": "add mul INT+ 4 INT+ 2 sub sqr n INT+ 2", "tree": "((4 mul 2) add ((n)**2 sub 2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 10 + 0 + 31 + 34 + 33 + 30 + 25 + 18 + 9 + 108 + 105 + 100 + 93 + 84 + 73 + 60 + 45 + 28 + 9 + 198 + 185", "x2": "mod add sign sign x_0_2 sub INT+ 8 sqr n mul INT+ 1 0 n", "tree": "((sign(sign(x_0_2)) add (8 sub (n)**2)) mod (10 mul n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 5 - 6 + 6 + 6 + 8 - 6 - 7 + 8 + 9 + 10 - 11 - 12 + 13 + 14 + 15 - 16 - 17 + 18 + 19 + 20 - 21 - 22 + 23 + 24 + 25", "x2": "idiv n sign x_0_5", "tree": "(n idiv sign(x_0_5))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 2 - 8 + 8 + 17 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483", "x2": "add sign mod sqr INT+ 1 0 sub mul x_0_2 INT- 6 mul INT+ 1 0 sqr INT- 2 sqr n", "tree": "(sign(((10)**2 mod ((x_0_2 mul -6) sub (10 mul (-2)**2)))) add (n)**2)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 1 - 2 + 9 + 0 + 4 - 2 + 16 + 16 + 28 + 20 + 25 + 20 + 39 + 40 + 53 + 46 + 52 + 48 + 68 + 70 + 84 + 78 + 85 + 82 + 103 + 106", "x2": "add x_0_6 sub n INT- 1 0", "tree": "(x_0_6 add (n sub -10))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr add mod INT- 1 0 INT+ 4 n", "tree": "(((-10 mod 4) add n))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401", "x2": "add abs sign n sqr n", "tree": "(abs(sign(n)) add (n)**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 - 1 + 0 - 10 - 11 - 11 - 21 - 32 - 43 - 64 - 96 - 139 - 203 - 299 - 438 - 641 - 940 - 1378 - 2019 - 2959 - 4337 - 6356 - 9315", "x2": "add x_0_1 x_0_3", "tree": "(x_0_1 add x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 2 - 9 - 5 + 4 + 0 - 2 + 10 + 2 - 10 + 18 + 45 + 57 + 72 + 170 + 166 + 276 + 633 + 2723 + 6036 + 1 1327 + 4 291 + 6 7994 + 14 4561 + 54 7637 + 796 7960 + 4441 1674 + 1 7274 9538 + 17 9617 3454 + 64 1948 4688", "x2": "add x_0_1 sub x_0_6 sub add x_0_9 x_0_10 sqr x_0_7", "tree": "(x_0_1 add (x_0_6 sub ((x_0_9 add x_0_10) sub (x_0_7)**2)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 3 - 14 - 17 - 24 - 35 - 42 - 45 - 52 - 63 - 70 - 73 - 80 - 91 - 98 - 101 - 108 - 119 - 126 - 129 - 136 - 147", "x2": "sub sqr mod mod mul add x_0_1 sub INT+ 9 INT- 6 mul INT+ 9 x_0_1 INT+ 4 n mul n INT+ 7", "tree": "((((((x_0_1 add (9 sub -6)) mul (9 mul x_0_1)) mod 4) mod n))**2 sub (n mul 7))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 - 3 + 10 + 1 - 10 - 7 + 6 + 5400 + 253 + 619 + 2326 + 10 + 7840 + 202 + 13 2694 1990 + 1 6831 225 + 1 6415 + 245 2481 850 + 47 3724 + 570 5921 + 3042 4591 2760 + 124 9215 6024 14 + 10 8988 2854 6872 1055 7250 1743 + 460 1055 6707 + 23 8112 2471 6269 2975 7754 + 1107 5202 6843 2652 4793 3202 + 4 3489", "x2": "idiv sqr mul n mul sub n sub sub n x_0_8 sub sign n x_0_7 x_0_8 x_0_1", "tree": "(((n mul ((n sub ((n sub x_0_8) sub (sign(n) sub x_0_7))) mul x_0_8)))**2 idiv x_0_1)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 9 + 1 - 5 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1", "x2": "abs relu x_0_3", "tree": "abs(relu(x_0_3))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 5 - 4 + 7 - 5 + 0 - 2 - 4 + 0 - 5 + 0 - 2 - 4 + 0 - 5 + 0 - 2 - 4 + 0 - 5 + 0 - 2 - 4 + 0 - 5", "x2": "mod x_0_5 INT- 7", "tree": "(x_0_5 mod -7)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 6 - 7 + 3 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0", "x2": "idiv x_0_4 add sqr n relu x_0_1", "tree": "(x_0_4 idiv ((n)**2 add relu(x_0_1)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 - 9 - 2 1660 - 8 2944 - 3 6432 1200 - 23 119 8336 - 15 5157 1126 5600 - 142 5638 3931 1872 - 134 1116 189 5340 1600 - 1662 8646 2173 3675 80 - 2054 1069 3926 9788 266 2400 - 3 2693 2487 5498 1437 5972 8640 - 5 853 9363 1688 9996 1327 3569 2800 - 100 2558 890 2075 8772 7833 4582 7840 - 190 4276 4993 2226 2795 1864 2075 2588 8000 - 4527 3919 2072 3503 2964 8594 4423 1929 8560 - 1 256 9664 2276 9517 6484 5671 4371 2540 166 4000 - 28 8029 520 8289 2700 9197 9859 5447 9991 8948 3520 - 76 4016 8121 1268 6722 7911 8435 7400 2195 7434 7366 4000 - 2492 2577 8186 2853 9625 1883 3286 6924 4738 6763 18 5600 - 7624 9183 4555 7098 9 2493 1534 2284 8736 769 6905 6665 6000 - 28 5026 5627 7118 8920 8526 7386 5065 9244 689 7673 3546 6106 8800", "x2": "mul mul sqr add INT- 8 mul n INT- 1 0 x_0_2 abs idiv n INT+ 1", "tree": "((((-8 add (n mul -10)))**2 mul x_0_2) mul abs((n idiv 1)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 1 - 5 + 4 + 11 + 3 - 3 + 6 + 13 + 5 - 1 + 8 + 15 + 7 + 1 + 10 + 17 + 9 + 3 + 12 + 19 + 11", "x2": "idiv add sub x_0_2 n INT- 1 sign INT- 8", "tree": "(((x_0_2 sub n) add -1) idiv sign(-8))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 23 + 48 + 41 + 82 + 119 + 176 + 193 + 194 + 215 + 304 + 377 + 482 + 511 + 512 + 545 + 682 + 791 + 944 + 985 + 986", "x2": "add add x_0_1 sign x_0_1 mul mul n sub mod x_0_1 INT+ 6 sign sign relu INT+ 1 INT+ 2", "tree": "((x_0_1 add sign(x_0_1)) add ((n mul ((x_0_1 mod 6) sub sign(sign(relu(1))))) mul 2))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 6 + 1 + 8 - 171 - 213 - 51 - 507 - 1 4025 - 2 1516 - 6225 - 7 3518 - 238 4253 - 423 8655 - 140 6853 - 1889 4129 - 6 9143 3373 - 13 7756 2878 - 5 928 789 - 75 7654 5732 - 3056 1355 869 - 6681 1799 5833 - 2699 1881 8173 - 4 3716 6688 7367", "x2": "add sub x_0_4 mul sqr abs n abs x_0_4 add sqr mod INT+ 1 INT+ 9 INT- 4", "tree": "((x_0_4 sub ((abs(n))**2 mul abs(x_0_4))) add (((1 mod 9))**2 add -4))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 4 + 625 + 2 1025 + 8 7025 + 25 5025 + 60 625 + 122 1025 + 223 5025 + 378 3025 + 602 7025 + 915 625 + 1335 9025 + 1887 9025 + 2595 9025 + 3486 9025 + 4590 625 + 5936 7025 + 7560 3025 + 9496 5025 + 1 1783 1025 + 1 4460 625", "x2": "sqr mul abs sub mul mod sqr x_0_1 add n mod INT- 1 x_0_1 mul INT+ 3 INT+ 2 INT- 5 INT- 5", "tree": "((abs(((((x_0_1)**2 mod (n add (-1 mod x_0_1))) mul (3 mul 2)) sub -5)) mul -5))**2", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 0 + 0 + 56 + 84 + 0 + 98 + 112 + 126 + 154 + 154 + 182 + 182 + 196 + 210 + 224 + 238 + 252 + 266 + 294 + 294", "x2": "mul mul abs INT- 2 relu add n idiv mod x_0_1 n mod INT+ 6 n INT+ 7", "tree": "((abs(-2) mul relu((n add ((x_0_1 mod n) idiv (6 mod n))))) mul 7)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 1 + 30 + 4 + 150 + 24 + 1050 + 192 + 9450 + 1920 + 10 3950 + 2 3040 + 135 1350 + 32 2560 + 2027 250 + 516 960 + 3 4459 4250 + 9289 7280 + 65 4729 750 + 18 5794 5600 + 1374 9310 5750 + 408 7480 3200", "x2": "mul n relu x_0_2", "tree": "(n mul relu(x_0_2))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 + 1 - 1 + 5 - 3 - 6 - 3 + 10 + 5 + 3 + 1 6641 + 100 + 2209 + 1 4400 + 1 1025 + 3 6100 + 1 1449 + 6 5536 + 1 3225 + 3364 + 2170 8237 8241 + 768 3984 + 38 2208 3329 + 1625 4604 8900 + 952 7655 1561 + 1 216 5194 9824 + 1027 4525 521 + 3 3671 2958 676 + 1370 9617 225 + 88 6535 2336", "x2": "sqr sub sub mul mul INT+ 7 x_0_10 abs INT- 4 n INT+ 6", "tree": "(((((7 mul x_0_10) mul abs(-4)) sub n) sub 6))**2", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 1 + 1 - 6 - 8 - 8 - 6 + 10 + 8 + 2 + 2 + 7 + 9 + 9 + 7 + 11 + 9 + 3 + 3 + 8 + 10 + 10 + 8 + 12 + 10 + 4 + 4 + 9", "x2": "add INT+ 1 abs x_0_8", "tree": "(1 add abs(x_0_8))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 6 - 2 - 1 - 1 + 0 + 6 + 0 + 0 + 0 + 0 + 6 + 0 + 0 + 0 + 0 + 6 + 0 + 0 + 0 + 0 + 6 + 0 + 0 + 0", "x2": "sub relu x_0_5 idiv sign relu x_0_1 n", "tree": "(relu(x_0_5) sub (sign(relu(x_0_1)) idiv n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 8 - 21 - 35 - 50 - 66 - 83 - 101 - 120 - 140 - 161 - 183 - 206 - 230 - 255 - 281 - 308 - 336 - 365 - 395 - 426", "x2": "sub x_0_1 abs sub INT- 1 0 n", "tree": "(x_0_1 sub abs((-10 sub n)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 - 9 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign add INT- 3 idiv INT- 9 mod add n add add relu x_0_2 mod n sqr n x_0_2 INT- 6", "tree": "sign((-3 add (-9 idiv ((n add ((relu(x_0_2) add (n mod (n)**2)) add x_0_2)) mod -6))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 + 2 - 10 - 9 - 1 + 9 - 1 - 14 + 112 + 31 + 14 - 113 - 85 - 200 - 209 - 524 - 122 + 2197 + 1734 + 4108 + 4535 - 113 9353 - 20 8805 + 896 9852 + 781 8510 - 10 8692 - 12 5218", "x2": "add n sub x_0_8 mul x_0_6 sub abs n relu x_0_4", "tree": "(n add (x_0_8 sub (x_0_6 mul (abs(n) sub relu(x_0_4)))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 3 - 4 + 0 + 10 + 5 - 1 - 2 - 12 - 16 + 0 + 0 + 405 - 81 - 162 + 0 + 0 + 0 + 0 + 3 2805 - 6561 - 1 3122 + 0 + 0 + 0 + 0 + 265 7205 - 53 1441", "x2": "mul x_0_7 sqr relu mod INT+ 9 add x_0_2 n", "tree": "(x_0_7 mul (relu((9 mod (x_0_2 add n))))**2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 9 - 2 - 1 - 4 + 2 - 1 + 10 - 2 - 8 + 5 - 2 + 19 + 11 + 13 + 10 + 7 - 1 + 0 + 18 + 11 + 5 - 9 - 22 - 16 - 15 - 9 + 2 + 9 - 10 - 21 - 8", "x2": "mul sign abs x_0_9 sub INT+ 8 add x_0_11 x_0_10", "tree": "(sign(abs(x_0_9)) mul (8 sub (x_0_11 add x_0_10)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 4 - 4 - 1 + 0 + 2 - 3 + 64 + 81 + 25 + 25 + 36 + 36 + 16 + 49 + 25 + 25 + 36 + 36 + 36 + 25 + 25 + 25 + 36 + 36 + 25 + 25", "x2": "sqr idiv n idiv sub idiv mul n sign mul x_0_7 n n n INT- 5", "tree": "((n idiv ((((n mul sign((x_0_7 mul n))) idiv n) sub n) idiv -5)))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 1 + 8 + 0 + 8 + 15 + 7 + 15 + 22 + 14 + 22 + 29 + 21 + 29 + 36 + 28 + 36 + 43 + 35 + 43 + 50 + 42 + 50 + 57", "x2": "add abs x_0_3 INT+ 7", "tree": "(abs(x_0_3) add 7)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 4 - 9 + 9 + 4 - 7 + 7 - 2 + 6 + 9 + 9 + 25 + 64 + 81 + 16 + 49 + 49 + 4 + 36 + 81 + 81 + 625 + 4356 + 6561 + 256 + 2401 + 2401 + 16 + 1296 + 6561", "x2": "sqr add x_0_10 idiv x_0_4 sqr x_0_5", "tree": "((x_0_10 add (x_0_4 idiv (x_0_5)**2)))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 6 + 9 - 7 - 6 + 9 + 90 + 27 + 9 + 199 + 33 + 9 + 217 + 434 + 9 + 229 + 1449 3074 + 9 + 229 + 2977 1176 + 9 + 229 + 4305 6482 + 9 + 229", "x2": "add idiv sqr sqr abs mod x_0_4 add x_0_3 INT- 1 0 mul abs x_0_5 n x_0_3", "tree": "((((abs((x_0_4 mod (x_0_3 add -10))))**2)**2 idiv (abs(x_0_5) mul n)) add x_0_3)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 1 - 9 - 1 + 0 - 9 - 8 - 7 + 8 + 559 - 80 - 575 + 64 - 8 - 6488 - 4 1408 + 4024 + 568 + 3264 1120 - 2981 3768 + 2082 4192 - 32 7176 + 23 5016 632 - 1 7408 8554 1064 + 7 7605 9328 1016 + 118 4900 6008 - 12 140 2115 792 + 5 1142 84 6692 1456 5112 + 20 8235 2748 6031 2845 4584", "x2": "sub mul mul x_0_4 add INT- 9 relu INT- 6 x_0_9 INT+ 8", "tree": "(((x_0_4 mul (-9 add relu(-6))) mul x_0_9) sub 8)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 8 - 10 + 8 + 5 + 3 + 9 - 1 + 1 - 2 - 10 - 8 - 12 + 0 - 18 - 18 - 14 - 8 - 10 + 6 - 18 - 18 - 18 - 18 - 18 - 8 - 12 + 18 - 18 - 18", "x2": "add mul abs mod x_0_9 INT+ 3 abs x_0_7 add n sub sub INT- 9 INT+ 9 n", "tree": "((abs((x_0_9 mod 3)) mul abs(x_0_7)) add (n add ((-9 sub 9) sub n)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 6 - 39 - 269 - 1878 - 1 3140 - 9 1973 - 64 3803 - 450 6612 - 3154 6274 - 2 2082 3907 - 15 4576 7337 - 108 2037 1346 - 757 4259 9408 - 5301 9819 5841 - 3 7113 8737 871 - 25 9797 1159 6080 - 181 8579 8117 2542 - 1273 58 6820 7775 - 8911 410 7745 4405 - 6 2377 2875 4218 814 - 43 6641 127 9526 5676", "x2": "mod sub n sign x_0_1 mul INT+ 7 x_0_1", "tree": "((n sub sign(x_0_1)) mod (7 mul x_0_1))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 10 - 1 - 4 + 4 + 4 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 11 + 12 + 12 + 13 + 14 + 16 + 14 + 15 + 16 + 18", "x2": "add mod n n add relu mod add x_0_4 idiv mod n INT- 1 0 INT+ 5 x_0_2 sub INT+ 6 INT+ 2", "tree": "((n mod n) add (relu(((x_0_4 add ((n mod -10) idiv 5)) mod x_0_2)) add (6 sub 2)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 1 + 1 + 4 - 6 + 9 + 347 + 513 + 730 + 1004 + 1337 + 1737 + 2544 + 3257 + 4105 + 5100 + 6250 + 7569 + 9403 + 1 1257 + 1 3366 + 1 5748 + 1 8417 + 2 1393 + 2 5028 + 2 8833", "x2": "relu add mul n mul n n idiv x_0_6 sign idiv x_0_6 INT+ 2", "tree": "relu(((n mul (n mul n)) add (x_0_6 idiv sign((x_0_6 idiv 2)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 5 - 9 + 6 + 0 - 3 - 3 + 0 - 2 - 1 - 1 - 2 + 0 - 3 - 3 + 0 - 2 - 1 - 1 - 2 + 0 - 3 - 3 + 0", "x2": "add INT- 3 mod sub add x_0_3 n sqr relu idiv mul sub INT- 7 relu INT+ 1 0 n n INT+ 4", "tree": "(-3 add (((x_0_3 add n) sub (relu((((-7 sub relu(10)) mul n) idiv n)))**2) mod 4))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 - 10 - 12 - 8 - 16 - 18 - 20 - 16 - 24 - 26 - 28 - 24 - 32 - 34 - 36 - 32 - 40 - 42 - 44 - 40", "x2": "sub mul n INT- 2 relu add INT+ 6 idiv idiv INT- 8 n mul mod n INT- 4 sqr INT+ 4", "tree": "((n mul -2) sub relu((6 add ((-8 idiv n) idiv ((n mod -4) mul (4)**2)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 10 + 6 - 3 + 2 - 10 - 2 + 510 + 1203 + 2163 + 3428 + 5015 + 7160 + 9848 + 1 3163 + 1 7100 + 2 1844 + 2 7532 + 3 4353 + 4 2353 + 5 1614 + 6 2043 + 7 4026 + 8 7658 + 10 3083 + 12 296 + 13 9602", "x2": "add x_0_1 idiv sqr add mod x_0_7 INT- 8 sqr n n", "tree": "(x_0_1 add ((((x_0_7 mod -8) add (n)**2))**2 idiv n))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 9 - 2 - 8 - 5 + 9 - 9 + 0 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 0 + 0 + 9 + 0 + 0 + 0", "x2": "relu relu x_0_6", "tree": "relu(relu(x_0_6))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 3 - 245 - 420 + 0 + 0 - 245 - 455 + 0 + 0 - 385 - 595 + 0 + 0 - 525 - 735 + 0 + 0 - 665 - 875 + 0 + 0", "x2": "mul mul mul INT+ 7 relu add x_0_2 add n relu mod x_0_1 INT+ 1 0 sub INT- 4 sign n INT+ 1", "tree": "(((7 mul relu((x_0_2 add (n add relu((x_0_1 mod 10)))))) mul (-4 sub sign(n))) mul 1)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 3 + 1 + 3 + 2 - 1 + 10 - 4 - 8 + 4 - 2 - 1 - 10 - 4 - 8 - 4 - 2 + 1 + 10 - 4 + 8 + 4 + 2 - 1 - 10 + 4 - 8 - 4 - 2 + 1", "x2": "idiv x_0_6 sign mod INT+ 7 relu mod abs idiv x_0_6 n x_0_10", "tree": "(x_0_6 idiv sign((7 mod relu((abs((x_0_6 idiv n)) mod x_0_10)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 1 - 1 + 2 - 1 - 3 + 4 + 9 - 18 - 21 - 22 - 17 - 24 - 29 - 16 - 7 - 62 - 69 - 72 - 63 - 78 - 89 - 64 - 47 - 158 - 173 - 180 - 163", "x2": "sub x_0_8 sub sqr INT+ 3 sub x_0_8 n", "tree": "(x_0_8 sub ((3)**2 sub (x_0_8 sub n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 10 + 0 - 50 + 0 - 250 + 0 - 1250 + 0 - 6250 + 0 - 3 1250 + 0 - 15 6250 + 0 - 78 1250 + 0 - 390 6250 + 0 - 1953 1250 + 0 - 9765 6250", "x2": "mul x_0_2 INT+ 5", "tree": "(x_0_2 mul 5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 - 4 + 9 + 7 + 4 + 4 + 7 + 38 + 56 + 40 + 305 + 521 + 308 + 4310 + 7775 + 4426 + 7 6948 + 14 3054 + 8 345 + 161 1041 + 306 9756 + 170 4352 + 3858 4063", "x2": "mod idiv x_0_4 sign INT- 8 mul abs sub n x_0_3 n", "tree": "((x_0_4 idiv sign(-8)) mod (abs((n sub x_0_3)) mul n))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 7 - 8 + 6 + 8 - 7 + 7 + 9 - 6 + 8 + 10 - 5 + 9 + 11 - 4 + 10 + 12 - 3 + 11 + 13 - 2 + 12 + 14", "x2": "add sign sqr INT+ 1 0 x_0_3", "tree": "(sign((10)**2) add x_0_3)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 6 + 16 + 33 + 59 + 96 + 146 + 211 + 293 + 394 + 516 + 661 + 831 + 1028 + 1254 + 1511 + 1801 + 2126 + 2488 + 2889 + 3331", "x2": "add x_0_1 add sign x_0_1 mul sqr relu n sign sqr mul INT+ 9 INT- 3", "tree": "(x_0_1 add (sign(x_0_1) add ((relu(n))**2 mul sign(((9 mul -3))**2))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 3 + 7 - 6 + 9 + 6 + 1 - 4 + 1 - 3 - 1 + 279 + 501 + 1352 - 1356 + 2294 + 1718 + 302 - 1462 + 377 - 1345 - 227 + 14 8069 + 28 9904 + 84 3619 - 91 4388 + 167 4017 + 134 7186 + 25 2491 - 131 5453 + 36 921", "x2": "add sub x_0_10 n mul x_0_11 sqr n", "tree": "((x_0_10 sub n) add (x_0_11 mul (n)**2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 0 - 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401", "x2": "add sign sub sqr INT+ 9 sqr n sub sub n sqr n relu n", "tree": "(sign(((9)**2 sub (n)**2)) add ((n sub (n)**2) sub relu(n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 + 7 + 6 - 7 - 12 - 11 - 1 - 3 - 17 - 23 - 23 - 14 - 17 - 32 - 39 - 40 - 32 - 36 - 52 - 60 - 62 - 55 - 60 - 77", "x2": "sub x_0_5 n", "tree": "(x_0_5 sub n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 0 + 2 + 2 + 4 + 4 + 6 + 6 + 8 + 8 + 10 + 10 + 12 + 12 + 14 + 14 + 16 + 16 + 18 + 18 + 20", "x2": "mod sub INT- 4 x_0_1 add n n", "tree": "((-4 sub x_0_1) mod (n add n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 10 - 5 - 3 + 2 + 1 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1", "x2": "idiv x_0_4 n", "tree": "(x_0_4 idiv n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 + 0 + 10 + 0 + 8 + 5 - 7 - 7 - 6 + 0 - 1 + 0 + 10 + 0 + 8 + 5 - 7 - 7 - 6 + 0 - 1 + 0 + 10 + 0 + 8 + 5 - 7 - 7 - 6 + 0", "x2": "sub x_0_10 mod idiv sign INT- 4 n idiv mod sub INT+ 3 INT+ 8 INT+ 9 INT+ 4", "tree": "(x_0_10 sub ((sign(-4) idiv n) mod (((3 sub 8) mod 9) idiv 4)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 3 + 0 + 4 + 4 - 4 + 12 - 20 + 44 - 84 + 4 - 4 + 12 - 20 + 44 - 84 + 4 - 4 + 12 - 20 + 44 - 84 + 4", "x2": "add INT+ 4 mul add x_0_1 x_0_1 idiv sign idiv idiv idiv sub n n INT- 1 0 x_0_2 mod x_0_1 INT- 7 INT- 2", "tree": "(4 add ((x_0_1 add x_0_1) mul (sign(((((n sub n) idiv -10) idiv x_0_2) idiv (x_0_1 mod -7))) idiv -2)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 7 + 14 + 28 + 56 + 112 + 224 + 448 + 896 + 1792 + 3584 + 7168 + 1 4336 + 2 8672 + 5 7344 + 11 4688 + 22 9376 + 45 8752 + 91 7504 + 183 5008 + 367 16 + 734 32", "x2": "mul x_0_1 add idiv mul INT- 8 sign x_0_2 INT- 5 sign x_0_1", "tree": "(x_0_1 mul (((-8 mul sign(x_0_2)) idiv -5) add sign(x_0_1)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 3 + 4 + 9 + 12 + 13 + 12 + 9 + 4 - 3 - 12 - 1 + 12 + 27 + 44 + 63 + 84 + 107 + 132 + 159 + 188", "x2": "add INT- 4 sub abs mul sub n INT+ 1 0 n abs relu INT+ 8", "tree": "(-4 add (abs(((n sub 10) mul n)) sub abs(relu(8))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 4 + 10 + 18 + 28 + 40 + 54 + 70 + 88 + 108 + 130 + 154 + 180 + 208 + 238 + 270 + 304 + 340 + 378 + 418 + 460", "x2": "add n add x_0_1 n", "tree": "(n add (x_0_1 add n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 8 + 2 + 6 + 0 + 4 + 8 + 2 + 6 + 0 + 4 + 8 + 2 + 6 + 0 + 4 + 8 + 2 + 6 + 0", "x2": "mod mul abs n INT+ 4 INT+ 1 0", "tree": "((abs(n) mul 4) mod 10)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 - 2 + 0 - 7 - 5 - 3 - 1 - 8 - 6 - 4 - 2 + 0 - 7 - 5 - 3 - 1 - 8 - 6 - 4", "x2": "sub mod add n n INT+ 9 mul abs sign n INT+ 8", "tree": "(((n add n) mod 9) sub (abs(sign(n)) mul 8))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 1 + 6 - 1 + 5 + 8 + 26 + 61 + 26 + 56 + 71 + 161 + 336 + 161 + 311 + 386 + 836 + 1711 + 836 + 1586 + 1961 + 4211 + 8586 + 4211 + 7961 + 9836", "x2": "sub INT+ 6 sub mul sub x_0_5 INT- 7 INT- 5 INT- 1 0", "tree": "(6 sub (((x_0_5 sub -7) mul -5) sub -10))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 11 + 7 + 3 + 14 + 10 + 6 + 2 + 13 + 9 + 5 + 1 + 12 + 8 + 4 + 0 + 11 + 7 + 3 + 14 + 10", "x2": "mod mul INT- 4 n sub INT+ 1 0 INT- 5", "tree": "((-4 mul n) mod (10 sub -5))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 6 - 6 - 10 + 10 - 5 + 3 + 6 + 6 + 10 + 10 + 5 + 3 + 6 + 6 + 10 + 10 + 5 + 3 + 6 + 6 + 10 + 10 + 5 + 3 + 6", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 10 - 10 - 8 + 6 - 3 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr sub n sign sqr x_0_6", "tree": "((n sub sign((x_0_6)**2)))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 - 10 + 8 + 13 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483", "x2": "sub mul n n sub sign sub n mod idiv relu x_0_1 INT+ 4 n idiv x_0_2 x_0_1", "tree": "((n mul n) sub (sign((n sub ((relu(x_0_1) idiv 4) mod n))) sub (x_0_2 idiv x_0_1)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 7 + 2 + 18 + 26 + 25 + 45 + 57 + 60 + 84 + 100 + 107 + 135 + 155 + 166 + 198 + 222 + 237 + 273 + 301 + 320 + 360", "x2": "add sub sub n sub add n x_0_2 INT- 9 sub x_0_1 add sqr relu n n sqr n", "tree": "(((n sub ((n add x_0_2) sub -9)) sub (x_0_1 sub ((relu(n))**2 add n))) add (n)**2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 4 + 10 - 6 - 5 - 8 + 16 + 100 + 36 + 25 + 64 + 256 + 1 0 + 1296 + 625 + 4096 + 6 5536 + 1 0 0 + 167 9616 + 39 625 + 1677 7216 + 42 9496 7296 + 1 0 0 0 0 + 2 8211 990 7456 + 1525 8789 625 + 281 4749 7671 656", "x2": "abs sqr x_0_5", "tree": "abs((x_0_5)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 9 + 5 + 15 + 19 + 45 + 101 + 165 + 235 + 339 + 485 + 651 + 835 + 1065 + 1349 + 1665 + 2011 + 2415 + 2885 + 3399 + 3955 + 4581 + 5285", "x2": "sub add add n n mul n mul mod INT- 3 n n x_0_2", "tree": "(((n add n) add (n mul ((-3 mod n) mul n))) sub x_0_2)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 10 - 10 - 10 - 2 + 10 - 10 - 3 + 6 + 17 + 30 + 45 + 62 + 81 + 102 + 125 + 150 + 177 + 206 + 237 + 270", "x2": "sub relu abs mul mod INT- 6 n n INT+ 1 0", "tree": "(relu(abs(((-6 mod n) mul n))) sub 10)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr add n sqr INT- 2", "tree": "((n add (-2)**2))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 5 + 2 - 4 - 3 - 10 - 1 + 40 + 63 + 140 + 88 + 108 + 26 + 154 + 780 + 1200 + 2584 + 1800 + 2280 + 760 + 3486 + 1 7424 + 2 7876 + 6 2304 + 4 5300 + 5 9592 + 2 844", "x2": "mul n add add x_0_7 sqr INT- 3 INT+ 3", "tree": "(n mul ((x_0_7 add (-3)**2) add 3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 6 + 0 - 1 - 9 - 1 - 1 - 15 - 8 - 7 - 21 - 12 - 19 - 21 - 13 - 30 - 26 - 17 - 43 - 43 - 19 - 55 - 53 - 31", "x2": "add mul mod sub x_0_4 INT- 7 n idiv INT- 3 n x_0_3", "tree": "((((x_0_4 sub -7) mod n) mul (-3 idiv n)) add x_0_3)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 81 + 110 + 143 + 180 + 221 + 266 + 315 + 368 + 425 + 324 + 380 + 440 + 504", "x2": "mul n abs add mod mul mod INT+ 1 0 mul n x_0_1 n INT+ 9 n", "tree": "(n mul abs(((((10 mod (n mul x_0_1)) mul n) mod 9) add n)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 6 - 3 + 3 - 7 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 0 + 3 + 0", "x2": "relu idiv abs INT+ 6 x_0_5", "tree": "relu((abs(6) idiv x_0_5))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 9 + 1 + 8 + 8 - 3 + 4 - 9 - 8 + 3 + 72 + 8 + 64 + 64 + 24 + 32 + 72 + 64 + 24 + 576 + 64 + 512 + 512 + 192 + 256 + 576 + 512 + 192 + 4608 + 512", "x2": "relu abs mul x_0_9 mod INT- 8 mul INT- 9 sign relu n", "tree": "relu(abs((x_0_9 mul (-8 mod (-9 mul sign(relu(n)))))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 2 - 9 - 10 + 8 - 2 + 4 - 5 + 1 - 5 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign mod n mul idiv mul INT+ 6 x_0_5 n mod x_0_10 mul INT+ 2 n", "tree": "sign((n mod (((6 mul x_0_5) idiv n) mul (x_0_10 mod (2 mul n)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 6 - 2 + 4 - 9 - 6 + 2 - 4 + 9 + 6 - 2 + 4 - 9 - 6 + 2 - 4 + 9 + 6 - 2 + 4 - 9 - 6 + 2 - 4", "x2": "sub sub relu n x_0_4 n", "tree": "((relu(n) sub x_0_4) sub n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 8 - 7 + 7 + 4 - 5 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign idiv x_0_5 add INT+ 6 relu sign abs sub x_0_1 n", "tree": "sign((x_0_5 idiv (6 add relu(sign(abs((x_0_1 sub n)))))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 6 - 8 + 10 - 9 - 7 + 9 - 6 + 9 + 25 + 81 + 81 + 100 + 64 + 100 + 49 + 64 + 576 + 6400 + 6400 + 9801 + 3969 + 9801 + 2500 + 3969 + 33 625 + 4094 7201 + 4097 2801", "x2": "sqr sub x_0_8 sign idiv relu abs INT- 1 mod abs add n x_0_4 INT+ 8", "tree": "((x_0_8 sub sign((relu(abs(-1)) idiv (abs((n add x_0_4)) mod 8)))))**2", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 5 + 1 - 9 - 5 - 5 - 3 - 6 - 5 - 5 - 4 - 5 - 5 - 5 - 4 - 5 - 5 - 5 - 4 - 5 - 5 - 5 - 4 - 5 - 5", "x2": "add idiv n add INT+ 3 sqr sub INT- 4 abs n idiv add x_0_4 INT- 8 INT+ 3", "tree": "((n idiv (3 add ((-4 sub abs(n)))**2)) add ((x_0_4 add -8) idiv 3))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 1 + 10 - 10 + 7 - 10 - 9 - 4 + 2 + 508 + 164 + 508 + 173 + 517 + 534 + 686 + 538 + 26 786 + 45 2122 + 71 2370 + 91 5883 + 118 8470 + 202 484 + 267 6870 + 351 8660 + 682 9290 9846 + 5082 4133 5124 + 1 4243 3452 7910 + 3 1594 4916 7133", "x2": "sub x_0_2 mul idiv INT- 8 add n x_0_3 abs sqr add x_0_8 x_0_9", "tree": "(x_0_2 sub ((-8 idiv (n add x_0_3)) mul abs(((x_0_8 add x_0_9))**2)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 1 + 11 + 49 + 262 + 1653 + 1 2014 + 9 8975 + 91 1940 + 929 6185 + 1 390 5130 + 12 6380 6835 + 166 2035 3840 + 2350 2170 2445 + 3 5562 2949 5670 + 57 3388 1137 6615 + 981 4331 1294 7900 + 1 7773 8003 3626 9985 + 33 9557 683 1181 7730 + 682 4834 1049 8620 6555 + 1 4396 6937 6025 8412 1160 + 31 8027 6874 689 4929 5125", "x2": "add add mod mul x_0_2 add idiv relu n x_0_1 n x_0_1 x_0_2 mul x_0_1 n", "tree": "((((x_0_2 mul ((relu(n) idiv x_0_1) add n)) mod x_0_1) add x_0_2) add (x_0_1 mul n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 121 + 392 + 1083 + 2704 + 6125 + 1 2696 + 2 4367 + 4 3808 + 7 4529 + 12 1000 + 18 8771 + 28 4592 + 41 6533 + 59 4104 + 82 8375 + 113 2096 + 151 9817 + 200 8008 + 261 5179 + 336 2000", "x2": "mul sqr add mul INT- 1 0 sign INT- 9 mul n idiv sqr n abs n n", "tree": "((((-10 mul sign(-9)) add (n mul ((n)**2 idiv abs(n)))))**2 mul n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 10 - 8 + 6 - 5 - 8 + 6 + 3 + 1 + 16 + 14 + 13 + 29 + 28 + 28 + 45 + 45 + 46 + 64 + 65 + 67 + 86 + 88", "x2": "add x_0_3 mod n add x_0_1 mod n sqr sqr n", "tree": "(x_0_3 add (n mod (x_0_1 add (n mod ((n)**2)**2))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 - 8 + 10 - 2 - 4 - 6 - 2632 + 5120 - 1458 - 4000 - 7986 - 448 4928 + 1124 8640 - 400 752 - 1350 0 - 3271 656 + 3575 706 5664 + 656 206 8480 - 274 4115 7968 - 1080 0 0 + 8912 2033 3680 2304 - 2 392 42 5154 6050 8160 + 798 1803 6719 6160 - 379 3465 6774 9632 + 469 2383 39 7000 0 0 + 1 5664 885 8476 3729 5104", "x2": "mul mul x_0_5 add mul n n mod relu mul add n x_0_4 INT+ 8 x_0_6 n", "tree": "((x_0_5 mul ((n mul n) add (relu(((n add x_0_4) mul 8)) mod x_0_6))) mul n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 1 + 3 + 5 + 6 - 1 - 1 - 2 - 2 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3", "x2": "idiv add n x_0_4 INT- 9", "tree": "((n add x_0_4) idiv -9)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 2 - 6 - 6 + 9 + 10 - 1 + 1 - 270 + 110 + 77 + 91 - 104 - 13 3254 + 0 + 0 + 4607 - 1962 - 1482 - 1840 + 21 8612 410 + 293 1610 + 23 + 24 - 220 1263 7990 9675 2478 3750 + 1 6853 4952 3375 9086 + 82 4548 + 111 1964", "x2": "mul add n abs sqr relu x_0_4 sub sign x_0_1 x_0_8", "tree": "((n add abs((relu(x_0_4))**2)) mul (sign(x_0_1) sub x_0_8))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 7 - 5 + 4 - 5 + 55 + 0 + 0 - 432 + 0 + 0 + 1760 + 0 + 0 - 7000 + 0 + 0 + 2 8016 + 0 + 0 - 11 2000 + 0 + 0 + 44 8040 + 0", "x2": "mul n mul add x_0_4 INT- 4 idiv x_0_3 n", "tree": "(n mul ((x_0_4 add -4) mul (x_0_3 idiv n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 6 + 6 - 4 - 4 + 7 - 4 - 5 + 7 + 1 + 4 + 25 + 20 + 24 + 46 + 42 + 47 + 70 + 67 + 73 + 97 + 95 + 102 + 127 + 126 + 134 + 160 + 160 + 169 + 196 + 197", "x2": "add add INT+ 6 mul n mod sign idiv sign x_0_8 x_0_11 relu INT+ 2 x_0_3", "tree": "((6 add (n mul (sign((sign(x_0_8) idiv x_0_11)) mod relu(2)))) add x_0_3)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 2 + 5 - 7 - 4 - 2 - 5 + 0 + 0 + 0 - 3 + 0 + 0 - 3 + 0 - 3 - 3 + 0 - 3 - 3 + 0 + 0 + 0 - 3 - 3 - 3 + 0", "x2": "mod sqr add sub INT+ 5 add x_0_1 x_0_6 INT- 4 INT- 4", "tree": "((((5 sub (x_0_1 add x_0_6)) add -4))**2 mod -4)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 - 2 + 4 + 10 - 4 + 3 - 5 + 13 + 31 - 23 - 113 + 81 - 15 + 117 - 185 - 995 + 273 + 3613 - 489 + 387 - 3981 + 6657 + 1 7907 - 9285 - 5 585 + 1 5645 - 3873", "x2": "sub mul x_0_7 sub INT- 1 relu mod x_0_7 add n n INT+ 3", "tree": "((x_0_7 mul (-1 sub relu((x_0_7 mod (n add n))))) sub 3)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 4 + 3 + 2 + 9 + 1 + 8 + 2 + 64 + 77 + 91 + 112 + 142 + 161 + 183 + 149 + 170 + 188 + 202 + 209 + 229 + 248 + 324 + 345 + 374 + 409 + 452 + 484", "x2": "sub sub sqr n abs relu x_0_7 mod idiv x_0_1 n x_0_6", "tree": "(((n)**2 sub abs(relu(x_0_7))) sub ((x_0_1 idiv n) mod x_0_6))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2", "x2": "mod mul sign INT+ 1 0 add add relu INT- 3 sign abs x_0_1 x_0_1 add sign x_0_1 INT- 5", "tree": "((sign(10) mul ((relu(-3) add sign(abs(x_0_1))) add x_0_1)) mod (sign(x_0_1) add -5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 - 12 - 27 - 48 - 75 - 108 - 147 - 192 - 243 - 300 - 363 - 432 - 507 - 588 - 675 - 768 - 867 - 972 - 1083 - 1200 - 1323", "x2": "mul sqr n add idiv relu INT- 2 idiv x_0_1 n INT- 3", "tree": "((n)**2 mul ((relu(-2) idiv (x_0_1 idiv n)) add -3))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 1 + 10 - 10 - 6 - 2 + 5 + 16 + 1 0 + 3600 + 144 + 0 + 400 + 4096 + 16 0 0 + 2 736 0 + 0 + 0 + 256 0 + 2 6843 5456 + 4096 0 0 0 0 + 0 + 0 + 0 + 104 8576 0 0 + 115 2921 5046 684 6976 + 0", "x2": "sqr mul x_0_6 mod INT+ 4 sub x_0_5 INT+ 4", "tree": "((x_0_6 mul (4 mod (x_0_5 sub 4))))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 5 + 6 + 14 + 10 + 12 + 28 + 20 + 24 + 56 + 40 + 48 + 112 + 80 + 96 + 224 + 160 + 192 + 448 + 320 + 384 + 896 + 640", "x2": "sub x_0_3 sub idiv relu INT+ 4 x_0_2 x_0_3", "tree": "(x_0_3 sub ((relu(4) idiv x_0_2) sub x_0_3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3", "x2": "idiv abs abs n INT- 9", "tree": "(abs(abs(n)) idiv -9)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 13 + 21 + 30 + 40 + 51 + 63 + 76 + 90 + 105 + 121 + 138 + 156 + 175 + 195 + 216 + 238 + 261 + 285 + 310 + 336", "x2": "add add INT+ 1 0 add INT- 5 x_0_1 n", "tree": "((10 add (-5 add x_0_1)) add n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 10 - 6 - 2 - 11 - 9 - 5 - 15 - 12 - 8 - 19 - 15 - 11 - 23 - 18 - 14 - 27 - 21 - 17 - 31 - 24 - 20 - 35", "x2": "sub idiv n x_0_1 abs sub INT+ 2 x_0_3", "tree": "((n idiv x_0_1) sub abs((2 sub x_0_3)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 - 4 - 9 + 3 + 9 + 7 - 3 + 9 - 7 - 5 - 4 - 8 + 5 + 12 + 11 + 2 + 9 - 6 - 3 - 1 - 4 + 10 + 12 + 12 + 4 + 12 - 2 + 2 - 1", "x2": "mul INT+ 1 add x_0_9 mod add n sqr INT+ 5 INT+ 6", "tree": "(1 mul (x_0_9 add ((n add (5)**2) mod 6)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 5 + 10 - 9 + 56 + 36 + 31 + 113 + 23 + 120 + 117 + 42 + 226 + 51 + 163 + 247 + 0 + 371 + 96 + 136 + 479 - 127 + 531 + 482", "x2": "sub add sub n sub x_0_1 n add abs sub abs x_0_2 mul INT- 1 0 n sub x_0_3 INT- 4 x_0_2", "tree": "(((n sub (x_0_1 sub n)) add (abs((abs(x_0_2) sub (-10 mul n))) add (x_0_3 sub -4))) sub x_0_2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 10 + 2 + 3 + 0 - 2 - 10 + 6 + 8 + 0 + 1 - 3 - 4 + 95 - 12 + 7 - 8 + 0 + 3 + 27 + 55 + 86 - 21 + 96 - 26 + 9026 - 11 + 70 + 52 + 107 + 37 + 905", "x2": "add sub n sub n add sqr relu x_0_12 x_0_8 idiv add x_0_10 INT- 6 sign sqr x_0_9", "tree": "((n sub (n sub ((relu(x_0_12))**2 add x_0_8))) add ((x_0_10 add -6) idiv sign((x_0_9)**2)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 8 + 11 + 16 + 23 + 32 + 43 + 56 + 71 + 88 + 107 + 128 + 151 + 176 + 203 + 232 + 263 + 296 + 331 + 368 + 407", "x2": "add abs abs INT+ 7 abs sqr n", "tree": "(abs(abs(7)) add abs((n)**2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 - 8 - 7 - 4 + 3 + 7 + 3 - 3 - 1 + 3 + 11 + 16 + 13 + 8 + 11 + 16 + 25 + 31 + 29 + 25 + 29 + 35 + 45 + 52 + 51 + 48", "x2": "add mul n INT+ 1 add add idiv mod INT- 8 INT- 1 0 INT+ 4 x_0_6 sign INT- 7", "tree": "((n mul 1) add ((((-8 mod -10) idiv 4) add x_0_6) add sign(-7)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 - 1 + 8 + 16 + 25 + 36 + 4 + 121 + 25 + 81 + 196 + 36 + 169 + 484 + 100 + 2916 + 6889 + 4 + 114 624 + 256 + 441 + 2401 + 2 6244", "x2": "sqr sub mod x_0_1 sub x_0_1 mod x_0_2 add mod idiv n x_0_2 x_0_2 x_0_3 n", "tree": "(((x_0_1 mod (x_0_1 sub (x_0_2 mod (((n idiv x_0_2) mod x_0_2) add x_0_3)))) sub n))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 10 + 10 + 3 + 14 + 8 + 20 + 15 + 28 + 24 + 38 + 35 + 50 + 48 + 64 + 63 + 80 + 80 + 98 + 99 + 118 + 120 + 140", "x2": "add n relu x_0_2", "tree": "(n add relu(x_0_2))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576 + 209 7152 + 419 4304", "x2": "add sub x_0_1 mul x_0_2 relu mul add relu add x_0_1 x_0_2 n INT- 4 abs x_0_1", "tree": "((x_0_1 sub (x_0_2 mul relu(((relu((x_0_1 add x_0_2)) add n) mul -4)))) add abs(x_0_1))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 10 + 5 + 10 + 7 + 6 - 1 - 8 + 10 + 7 + 6 - 1 - 8 + 10 + 7 + 6 - 1 - 8 + 10 + 7 + 6 - 1 - 8 + 10 + 7 + 6 - 1 - 8", "x2": "mul x_0_5 sign mul x_0_4 mod n sign add INT- 4 x_0_7", "tree": "(x_0_5 mul sign((x_0_4 mul (n mod sign((-4 add x_0_7))))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 9 + 3 + 6 - 8 - 64 - 3 + 6 - 136 - 730 - 153 - 82 - 1960 - 1 454 - 2575 - 1642 - 3 3704 - 18 8614 - 4 9429 - 3 3410 - 70 8424 - 415 222 - 113 7659 - 80 2714 - 1771 1560", "x2": "add add x_0_4 mul sub x_0_4 add add INT- 7 n n n n", "tree": "((x_0_4 add ((x_0_4 sub ((-7 add n) add n)) mul n)) add n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 106 - 54 - 35 - 25 - 18 - 12 - 8 - 4 - 1 + 2 + 5 + 8 + 11 + 13 + 16 + 18 + 21 + 23 + 25 + 27", "x2": "sub add n add n INT- 8 idiv sqr INT+ 1 0 n", "tree": "((n add (n add -8)) sub ((10)**2 idiv n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 3 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 2 - 6 - 5 + 1 + 5 + 6 - 1 - 27 - 33 + 3 + 11 + 12 - 5 - 63 - 69 + 16 + 17 + 18 - 61 - 99 - 105 + 22 + 23 + 24", "x2": "mod n mul x_0_3 mod sqr add x_0_3 n sub INT- 7 sign x_0_4", "tree": "(n mod (x_0_3 mul (((x_0_3 add n))**2 mod (-7 sub sign(x_0_4)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 4 + 3 - 3 + 4 - 3 + 3 - 4 + 3 - 3 + 4 - 3 + 3 - 4 + 3 - 3 + 4 - 3 + 3 - 4 + 3 - 3 + 4 - 3", "x2": "sub relu mod mod x_0_3 n INT- 1 0 x_0_3", "tree": "(relu(((x_0_3 mod n) mod -10)) sub x_0_3)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "mul abs abs n abs n", "tree": "(abs(abs(n)) mul abs(n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 7 - 3 + 1 - 1 + 51 + 62 + 120 + 153 + 229 + 336 + 447 + 638 + 810 + 1107 + 1418 + 1860 + 2398 + 3050 + 3925 + 4930 + 6291 + 7880 + 9941 + 1 2455", "x2": "add x_0_2 add n add x_0_5 sqr n", "tree": "(x_0_2 add (n add (x_0_5 add (n)**2)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign add mod n mod n mod n INT- 9 INT+ 7", "tree": "sign(((n mod (n mod (n mod -9))) add 7))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 5 + 5 + 57 + 464 + 3194 + 2 1681 + 14 6207 + 98 5130 + 663 5748 + 4469 5763 + 3 104 8793 + 20 2771 2588 + 136 5763 8974 + 919 9088 7317 + 6196 366 179 + 4 1733 3395 3582 + 28 1094 4702 7288 + 189 3308 8526 8887 + 1275 2361 8943 9245 + 8589 3399 6174 7280 + 5 7853 4091 900 4338 + 38 9671 294 8975 9449", "x2": "abs sub mul x_0_1 INT- 7 sub n sub mul x_0_3 add INT+ 9 INT+ 4 mul sign INT+ 9 x_0_3", "tree": "abs(((x_0_1 mul -7) sub (n sub ((x_0_3 mul (9 add 4)) sub (sign(9) mul x_0_3)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 1 + 12 + 4 + 20 + 24 + 28 + 0 + 36 + 0 + 44 + 0 + 52 + 0 + 60 + 0 + 68 + 0 + 76 + 0 + 84 + 0", "x2": "abs mul mod x_0_2 INT- 8 n", "tree": "abs(((x_0_2 mod -8) mul n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 9 + 4 - 7 + 2 + 4 + 12 - 10 + 40 + 25 + 10 - 15 + 4 + 7 + 22 - 18 + 72 + 46 + 16 - 23 + 6 + 10 + 33 - 26", "x2": "idiv sqr n x_0_4", "tree": "((n)**2 idiv x_0_4)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 4 + 6 - 10 - 3 + 8 + 0 - 3 - 4 + 1 - 7 + 16 + 36 + 100 + 9 + 64 + 0 + 9 + 16 + 1 + 49 + 256 + 1296 + 1 0 + 81 + 4096 + 0 + 81 + 256 + 1 + 2401", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 8 + 7 + 1 - 1 - 7 + 0 - 3 - 18 - 3 - 28 + 0 - 18 - 56 - 24 - 72 + 0 - 88 - 72 - 52 - 28 + 0 - 128 - 34 - 36 - 152", "x2": "mul mod x_0_5 INT- 1 0 mod INT- 5 add sign idiv INT- 8 mod n mod idiv n x_0_5 n abs n", "tree": "((x_0_5 mod -10) mul (-5 mod (sign((-8 idiv (n mod ((n idiv x_0_5) mod n)))) add abs(n))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 2 - 100 - 14 - 38 - 26 - 37 - 35 - 41 - 42 - 47 - 49 - 52 - 55 - 58 - 62 - 64 - 68 - 70 - 74 - 76", "x2": "idiv mul add add n mul n INT- 7 x_0_1 add INT+ 7 n abs x_0_1", "tree": "((((n add (n mul -7)) add x_0_1) mul (7 add n)) idiv abs(x_0_1))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 - 4 + 2 - 4 - 5 - 10 - 8 + 0 + 8 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 0 + 2", "x2": "relu mod abs INT- 6 mod add sign INT- 1 INT+ 5 sqr sqr x_0_10", "tree": "relu((abs(-6) mod ((sign(-1) add 5) mod ((x_0_10)**2)**2)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 5 + 10 - 9 - 1 - 4 - 2 + 4 - 5 - 31 - 4 - 42 - 28 - 38 - 30 - 25 - 30 - 66 - 39 - 133 - 52 - 109 - 59 - 31 - 57 - 78 - 116 - 282 - 44", "x2": "sub idiv sub x_0_1 x_0_3 n mul mul abs sub mod sqr INT- 7 x_0_8 INT+ 9 sign x_0_1 INT- 3", "tree": "(((x_0_1 sub x_0_3) idiv n) sub ((abs((((-7)**2 mod x_0_8) sub 9)) mul sign(x_0_1)) mul -3))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 0 - 1 - 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 1 + 0 + 1 + 0 + 0", "x2": "idiv n add n add INT+ 1 sign mul sign sqr INT- 2 mod INT- 2 x_0_4", "tree": "(n idiv (n add (1 add sign((sign((-2)**2) mul (-2 mod x_0_4))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 10 + 0 - 1 + 2 - 10 - 9 + 19 - 6 + 5 + 1 + 16 + 3 - 24 + 29 - 7 + 8 - 11 + 17 + 31 - 49 + 40 - 11 + 23 - 24 - 10 + 84", "x2": "add relu INT+ 4 sub x_0_7 x_0_6", "tree": "(relu(4) add (x_0_7 sub x_0_6))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 2 - 7 + 3 - 2 - 4 + 0 - 8 + 0 - 1 + 10 + 10 + 2 + 23 + 16 - 8 + 32 + 25 + 50 - 6 - 30 + 27 + 52 - 4 + 76 + 29 - 50 - 2 - 22 + 27", "x2": "sub n mul x_0_2 sign x_0_9", "tree": "(n sub (x_0_2 mul sign(x_0_9)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 2 + 0 + 0 - 1 + 0 + 0 + 2 + 3 + 6 + 8 + 12 + 15 + 20 + 24 + 30 + 35 + 42 + 48 + 56 + 63 + 72", "x2": "sub x_0_2 sub INT+ 6 n", "tree": "(x_0_2 sub (6 sub n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 6 - 2 - 10 + 4 - 7 - 1 + 8 + 6 + 6 - 2 - 10 + 4 - 7 - 1 + 8 + 6 + 6 - 2 - 10 + 4 - 7 - 1 + 8 + 6 + 6 - 2 - 10", "x2": "mul sign sqr INT+ 8 x_0_8", "tree": "(sign((8)**2) mul x_0_8)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 3 + 9 - 2 - 2 - 3 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8", "x2": "idiv add n sign x_0_3 mul INT- 3 INT+ 1", "tree": "((n add sign(x_0_3)) idiv (-3 mul 1))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 10 - 3 - 2 + 146 + 121 + 104 + 91 + 83 + 75 + 68 + 62 + 58 + 54 + 50 + 47 + 45 + 42 + 40 + 38 + 37 + 35 + 34 + 33", "x2": "idiv add add sqr sqr INT- 9 sqr n x_0_4 mul INT+ 9 n", "tree": "(((((-9)**2)**2 add (n)**2) add x_0_4) idiv (9 mul n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 10 - 5 - 8 - 3 + 10 + 5 + 8 + 3 + 10 + 5 + 8 + 3 + 10 + 5 + 8 + 3 + 10 + 5 + 8 + 3 + 10 + 5 + 8 + 3", "x2": "abs idiv x_0_4 sign INT- 7", "tree": "abs((x_0_4 idiv sign(-7)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 7 - 1 - 8 + 0 + 0 - 8 + 2 - 6 + 0 - 10 - 112 - 48 + 120 + 184 + 128 + 136 + 208 + 136 + 208 + 168 + 256 + 1080 + 576 - 760 - 1264 - 808 - 864 - 1432 - 848 - 1416", "x2": "mul add mul n sign idiv abs x_0_7 mul INT+ 1 0 idiv n x_0_1 x_0_11 INT- 8", "tree": "(((n mul sign((abs(x_0_7) idiv (10 mul (n idiv x_0_1))))) add x_0_11) mul -8)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 5 + 10 - 8 + 2 + 1 - 4 - 32 - 17 - 34 + 19 + 20 + 37 - 38 - 39 - 40 + 25 + 26 + 27 - 44 - 45 - 46 + 31 + 32 + 33 - 50 - 51", "x2": "idiv add n sqr add INT- 4 sign x_0_6 sign mul sub idiv INT- 9 INT+ 1 x_0_3 n", "tree": "((n add ((-4 add sign(x_0_6)))**2) idiv sign((((-9 idiv 1) sub x_0_3) mul n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 6 + 1 - 6 - 15 - 26 - 39 - 54 - 71 - 90 - 111 - 134 - 159 - 186 - 215 - 246 - 279 - 314 - 351 - 390", "x2": "sub INT+ 1 0 sqr n", "tree": "(10 sub (n)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 + 5 - 10 + 7 + 8 + 8 + 8 + 10 + 11 + 12 + 13 + 10 + 12 + 16 + 17 + 14 + 19 + 17 + 21 + 19 + 20 + 24 + 22 + 23", "x2": "sub relu add n add INT- 1 0 relu mod sqr x_0_4 INT+ 5 INT- 8", "tree": "(relu((n add (-10 add relu(((x_0_4)**2 mod 5))))) sub -8)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 1 + 3 + 0 + 15 + 24 + 0 + 0 + 36 + 80 + 44 + 48 + 143 + 0 + 195 + 128 + 272 + 72 + 133 + 160 + 147 + 88", "x2": "mul mod mul sub INT- 8 sub x_0_2 x_0_2 sqr INT- 7 n n", "tree": "((((-8 sub (x_0_2 sub x_0_2)) mul (-7)**2) mod n) mul n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400", "x2": "idiv sqr n idiv sign idiv idiv n INT- 1 0 sqr sub n INT- 5 n", "tree": "((n)**2 idiv (sign(((n idiv -10) idiv ((n sub -5))**2)) idiv n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 4 + 8 + 9 - 1 - 9 + 9 - 1 - 8 - 6 + 2 + 1 - 12 - 26 - 27 - 21 - 15 - 33 - 27 - 22 - 26 - 36 - 37 - 26 - 14 - 15 - 23 - 31 - 15 - 23 - 30 - 28", "x2": "sub sub abs sub INT+ 8 x_0_11 relu relu abs mul n idiv n abs n n", "tree": "((abs((8 sub x_0_11)) sub relu(relu(abs((n mul (n idiv abs(n))))))) sub n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 4 + 7 + 7 - 9 + 0 - 1 + 1 + 121 + 144 + 9 + 49 + 49 + 100 + 1 7161 + 2 4025 + 441 + 3844 + 3969 + 1 3225 + 2 9504 9329 + 5 7801 7764 + 21 681 + 1492 2769 + 1591 2121 + 1 7545 6516 + 8 7054 1195 2552 1201", "x2": "sqr sub sub sqr INT- 2 n x_0_6", "tree": "((((-2)**2 sub n) sub x_0_6))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 9 - 4 + 9 + 4 + 4 + 3 + 10 + 3 + 103 - 23 - 933 - 287 - 1 4961 + 0 - 183 1168 - 773 8570 - 4 6373 832 + 0 + 0 - 6 6980 1092 3520 - 6051 8778 2655 5858 + 529 + 0 + 0 - 3 5409 6785 3504 4353 5028 3083 + 729 + 784 + 0", "x2": "sub relu add x_0_3 sqr n mul n relu idiv mul n mul x_0_5 x_0_4 abs x_0_9", "tree": "(relu((x_0_3 add (n)**2)) sub (n mul relu(((n mul (x_0_5 mul x_0_4)) idiv abs(x_0_9)))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 4 - 8 + 23 + 24 + 19 + 15 + 12 + 10 + 0 + 7 + 7 + 6 + 5 + 5 + 4 + 4 + 4 + 4 + 3 + 3 + 3 + 3", "x2": "idiv relu sub sub INT- 7 sub mod x_0_2 sub n INT+ 9 sqr INT+ 9 sub sign n x_0_1 n", "tree": "(relu(((-7 sub ((x_0_2 mod (n sub 9)) sub (9)**2)) sub (sign(n) sub x_0_1))) idiv n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 2 + 0 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign add sign INT- 3 x_0_3", "tree": "sign((sign(-3) add x_0_3))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 2 - 10 - 7 - 1 + 9 + 5 + 1 + 8 - 8 - 1 + 115 + 148 + 9 - 1 - 10 - 8 - 8 + 333 + 115 + 54 + 9 - 1 + 541 + 582 + 634 + 333 + 115 + 54", "x2": "mod x_0_8 sub mod x_0_9 sqr n n", "tree": "(x_0_8 mod ((x_0_9 mod (n)**2) sub n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 7 + 6 - 1 + 1 - 10 + 6 + 11 + 5 + 6 - 5 + 12 + 16 + 11 + 11 + 1 + 18 + 21 + 17 + 17 + 7 + 24 + 27 + 23 + 23 + 13 + 30", "x2": "add mul idiv sign x_0_4 mul INT- 3 x_0_7 INT- 1 add INT+ 5 x_0_5", "tree": "(((sign(x_0_4) idiv (-3 mul x_0_7)) mul -1) add (5 add x_0_5))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 4 + 1 - 10 - 9 + 30 + 36 + 56 + 72 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "mul abs relu sub n idiv sign x_0_4 INT+ 1 0 n", "tree": "(abs(relu((n sub (sign(x_0_4) idiv 10)))) mul n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 18 + 20 + 22 + 24 + 26 + 28 + 30 + 32 + 51 + 54 + 57 + 60", "x2": "mul idiv n INT- 8 idiv n idiv INT+ 2 INT- 1 0", "tree": "((n idiv -8) mul (n idiv (2 idiv -10)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 - 5 - 9 + 4 + 9 + 4 - 9 + 4 - 4 + 3 + 2 + 3 + 15 + 6 + 4 + 18 + 3 + 22 + 21 + 24 + 25 + 23 + 25 + 27 + 26 + 32 + 31 + 32 + 32 + 31 + 31", "x2": "add idiv mod abs x_0_12 INT+ 7 mod sign INT+ 8 INT+ 3 mod idiv sub sign INT- 1 0 x_0_8 x_0_5 n", "tree": "(((abs(x_0_12) mod 7) idiv (sign(8) mod 3)) add (((sign(-10) sub x_0_8) idiv x_0_5) mod n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 8 - 4 - 6 - 10 - 5 - 5 + 2 + 7 + 3 - 3 - 440 - 240 - 390 - 700 - 375 - 400 - 170 - 630 - 285 - 300 - 4 6200 - 2 6400 - 4 4850 - 8 4000 - 4 6875 - 5 2000 - 2 2950 - 8 8200 - 4 1325 - 4 5000", "x2": "mul mul INT- 5 abs abs abs x_0_10 n", "tree": "((-5 mul abs(abs(abs(x_0_10)))) mul n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 6 - 2 - 2 + 9 - 4 + 4 + 3 + 5 + 2 + 7 + 8 + 9 + 8 + 4 + 3 + 5 + 2 + 7 + 8 + 9 + 8 + 4 + 3 + 5 + 2 + 7 + 8 + 9", "x2": "mod x_0_8 sub n sqr sign INT+ 5", "tree": "(x_0_8 mod (n sub (sign(5))**2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380", "x2": "sub n sqr abs n", "tree": "(n sub (abs(n))**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 7 + 15 + 19 + 13 + 27 + 45 + 67 + 93 + 23 + 36 + 51 + 68 + 87 + 108 + 131 + 156 + 183 + 212 + 243", "x2": "sub add sub n INT- 2 mul n sub mul n sign abs INT- 4 mod INT+ 9 n INT- 1", "tree": "(((n sub -2) add (n mul ((n mul sign(abs(-4))) sub (9 mod n)))) sub -1)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 10 - 1 + 9 - 8 - 4 + 7 + 3 - 10 + 67 - 7 - 223 + 814 - 67 - 3115 + 1 2433 - 1886 - 52 9483 + 22 6909 - 112 3287 - 12 3898 8334 + 4341 5284 - 109 9720 6639 - 50 6386 9107 5627 + 2815 2806 1838 - 2 795 7177 9776 4284 - 4267 9099 465 9843 8993 + 121 9816 8556 7829 221 - 103 626 674 4796 1445 8634 1854", "x2": "sub mul x_0_3 mul abs idiv x_0_8 INT- 7 n x_0_4", "tree": "((x_0_3 mul (abs((x_0_8 idiv -7)) mul n)) sub x_0_4)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 201 + 13 1769 + 61 9369 + 188 5129 + 449 8641 + 918 6961 + 1683 4609 + 2848 3569 + 4533 3289 + 6874 681 + 1 22 121 + 1 4144 3449 + 1 9423 9969 + 2 6059 6449 + 3 4265 7121 + 4 4272 3681 + 5 6325 5289 + 7 686 8569 + 8 7633 7609 + 10 7459 3961", "x2": "sqr add sqr sub mul INT- 9 n sign INT+ 2 n", "tree": "(((((-9 mul n) sub sign(2)))**2 add n))**2", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 8 + 34 + 230 + 2048 + 2 2488 + 29 2282 + 438 4142 + 7453 296 + 14 1607 5472 + 297 3758 4722 + 6839 6444 8374 + 17 991 1120 9072 + 461 6760 264 4616 + 1 3388 6040 7669 3482 + 41 5046 7263 7749 7502 + 1369 6541 9704 5741 7064 + 4 7937 8968 9660 959 6672 + 177 3702 1851 7423 5507 6226 + 6917 4385 2217 9518 4797 2102 + 28 3614 9794 936 257 6685 5392 + 1219 5444 1146 249 1079 7478 984", "x2": "add abs add abs add mul mul sub n x_0_1 INT+ 2 n INT- 4 x_0_1 INT+ 6", "tree": "(abs((abs(((((n sub x_0_1) mul 2) mul n) add -4)) add x_0_1)) add 6)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 6 + 10 - 4 + 45 + 36 + 70 - 32 + 405 + 360 + 770 - 384 + 5265 + 5040 + 1 1550 - 6144 + 8 9505 + 9 720 + 21 9450 - 12 2880 + 187 9605 + 199 5840 + 504 7350 - 294 9120", "x2": "mul x_0_4 abs n", "tree": "(x_0_4 mul abs(n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 8 - 5 + 3 + 8 - 9 + 169 + 256 + 144 + 361 + 441 + 484 + 625 + 676 + 784 + 961 + 1024 + 1156 + 1369 + 1444 + 1600 + 1849 + 1936 + 2116 + 2401 + 2500", "x2": "sqr add add add idiv mul mod n INT+ 3 INT- 7 x_0_5 n n sign n", "tree": "(((((((n mod 3) mul -7) idiv x_0_5) add n) add n) add sign(n)))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 14 + 24 + 36 + 50 + 66 + 84 + 104 + 126 + 150 + 176 + 204 + 234 + 266 + 300 + 336 + 374 + 414 + 456 + 500", "x2": "abs sub sqr n mul n INT- 5", "tree": "abs(((n)**2 sub (n mul -5)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2", "x2": "mod n add INT+ 6 abs relu INT- 3", "tree": "(n mod (6 add abs(relu(-3))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 10 + 4 + 8 - 8 + 5 - 10 + 5 + 5 + 5 + 1 + 5 + 1 + 5 + 1 + 1 + 1 + 5 + 1 + 5 + 1 + 5 + 5 + 5 + 1 + 5 + 1", "x2": "add abs INT+ 4 sub INT+ 1 mod sqr INT- 2 mod x_0_7 n", "tree": "(abs(4) add (1 sub ((-2)**2 mod (x_0_7 mod n))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 10 - 10 - 7 + 1 - 4 + 8 - 9 - 10 - 5 + 0 + 1 + 5 + 1 + 10 + 8 + 7 + 7 + 13 + 0 + 1 + 5 + 1 + 10 + 8 + 7 + 7 + 13 + 0 + 1", "x2": "abs mod sub add x_0_9 mod INT- 2 sqr sign mod INT- 1 0 relu x_0_9 n n", "tree": "abs((((x_0_9 add (-2 mod (sign((-10 mod relu(x_0_9))))**2)) sub n) mod n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 4 + 5 + 2 - 6 + 1 + 8 + 1 + 4 + 0 + 4 + 1 + 1 + 1 + 4 + 4 + 4 + 1 + 1 + 1 + 4 + 4 + 4 + 1 + 1 + 1 + 4", "x2": "mod sqr sub x_0_6 idiv INT- 4 INT- 2 mul INT+ 5 sign abs n", "tree": "(((x_0_6 sub (-4 idiv -2)))**2 mod (5 mul sign(abs(n))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 8 + 9 + 10 + 12 + 15 + 19 + 24 + 30 + 37 + 45 + 54 + 64 + 75 + 87 + 100 + 114 + 129 + 145 + 162 + 180 + 199 + 219", "x2": "sub x_0_1 add sub sign x_0_1 n abs sign mod x_0_2 sqr x_0_2", "tree": "(x_0_1 sub ((sign(x_0_1) sub n) add abs(sign((x_0_2 mod (x_0_2)**2)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 32 - 64 - 96 - 128 - 160 - 192 - 224 - 256 - 288 - 316 - 348 - 380 - 412 - 444 - 476 - 508 - 540 - 572 - 604 - 632", "x2": "mul INT+ 4 sub add mul n INT- 7 idiv idiv idiv n relu sign INT+ 7 INT+ 1 INT+ 1 0 n", "tree": "(4 mul (((n mul -7) add (((n idiv relu(sign(7))) idiv 1) idiv 10)) sub n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 7 + 5 + 4 + 7 + 1 - 4 + 8 + 6 + 7 + 5 - 5 + 7 + 1 - 4 + 8 + 6 + 7 + 5 - 22 + 6 + 1 - 4 + 8 + 6 + 7 + 5 - 47", "x2": "sub x_0_8 idiv add add INT- 9 relu n abs INT+ 6 relu mul x_0_6 x_0_6", "tree": "(x_0_8 sub (((-9 add relu(n)) add abs(6)) idiv relu((x_0_6 mul x_0_6))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 5 + 10 - 6 - 4 + 11 - 5 - 3 + 12 - 4 - 2 + 13 - 3 - 1 + 14 - 2 + 0 + 15 - 1 + 1 + 16 + 0 + 2 + 17", "x2": "add INT+ 1 idiv x_0_3 sign mod add mul INT- 4 INT- 3 INT+ 2 add x_0_4 abs n", "tree": "(1 add (x_0_3 idiv sign((((-4 mul -3) add 2) mod (x_0_4 add abs(n))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 4 - 9 + 10 - 8 - 13 - 23 - 14 - 23 - 37 - 61 - 76 - 100 - 138 - 200 - 277 - 378 - 517 - 718 - 996 - 1375 - 1893 - 2612 - 3609 - 4985", "x2": "sub x_0_4 add relu abs x_0_1 idiv n n", "tree": "(x_0_4 sub (relu(abs(x_0_1)) add (n idiv n)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 10 + 8 - 22 - 4 - 8 - 68 - 32 - 40 - 160 - 88 - 104 - 344 - 200 - 232 - 712 - 424 - 488 - 1448 - 872 - 1000 - 2920 - 1768", "x2": "add mul INT+ 3 INT- 8 add x_0_3 x_0_3", "tree": "((3 mul -8) add (x_0_3 add x_0_3))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 17 + 103 + 539 + 2725 + 1 3661 + 6 8347 + 34 1783 + 170 8969 + 854 4905 + 4272 4591 + 2 1362 3027 + 10 6811 5213 + 53 4057 6149 + 267 288 835 + 1335 1440 4271 + 6675 7202 1457 + 3 3378 6010 7393 + 16 6893 53 7079 + 83 4465 268 5515 + 417 2325 1342 7701", "x2": "add abs n mul add n x_0_1 INT+ 5", "tree": "(abs(n) add ((n add x_0_1) mul 5))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 4 - 2 + 3 - 5 + 7 + 2 + 0 + 2 + 7 + 5 + 3 + 12 + 10 + 8 + 17 + 15 + 13 + 22 + 20 + 18 + 27 + 25 + 23 + 32", "x2": "abs sub mul sign mod n relu idiv sqr INT+ 5 x_0_4 INT- 5 x_0_3", "tree": "abs(((sign((n mod relu(((5)**2 idiv x_0_4)))) mul -5) sub x_0_3))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 + 3 + 5 - 7 + 7 + 3 + 0 + 2 + 1 - 7 + 9 + 11 - 45 - 79 + 107 - 125 - 61 - 8 - 49 - 31 + 143 - 219 - 277 + 1111 + 2039 - 2905 + 3483 + 1751 + 221 + 1499 + 971", "x2": "sub INT+ 1 0 add n mul add INT+ 1 abs n x_0_11", "tree": "(10 sub (n add ((1 add abs(n)) mul x_0_11)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 8 - 3 - 6 - 6 - 8 + 7 + 12 + 7 + 12 + 14 + 19 - 1 - 1 - 1 - 1 - 1 - 1 + 11 + 11 + 12 + 13 + 13 + 14 - 1 - 1 - 1", "x2": "idiv mod INT- 3 sub n sub sub mul x_0_6 n n sub n INT+ 2 INT+ 6", "tree": "((-3 mod (n sub (((x_0_6 mul n) sub n) sub (n sub 2)))) idiv 6)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 2 - 10 - 2 - 3 - 4 - 5 - 2 - 3 - 4 - 5 - 3 - 5 + 0 - 1 - 2 - 7 - 3 - 1 + 0 - 9 - 2 - 1 - 3", "x2": "mod n mod INT+ 5 sub mod x_0_4 n sub n INT- 8", "tree": "(n mod (5 mod ((x_0_4 mod n) sub (n sub -8))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 + 4 + 4 + 2 + 5 + 1 + 3 + 4 + 0 + 0 + 3 + 1 + 1 + 0 + 2 + 0 + 5 + 5 + 5 + 0 + 0 + 2", "x2": "mod sub sub x_0_2 INT- 4 sub x_0_1 n INT+ 6", "tree": "(((x_0_2 sub -4) sub (x_0_1 sub n)) mod 6)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 3 + 10 - 9 - 7 + 2 - 5 - 21 + 80 - 81 - 70 + 22 - 60 - 273 + 1120 - 1215 - 1120 + 374 - 1080 - 5187 + 2 2400 - 2 5515 - 2 4640 + 8602 - 2 5920 - 12 9675 + 58 2400", "x2": "mul x_0_6 n", "tree": "(x_0_6 mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 6 + 3 + 8 + 2 - 3 + 6 - 2 - 7 + 30 - 13 + 42 + 68 - 157 + 112 - 224 - 383 + 1006 - 649 + 1424 + 2406 - 6151 + 4050 - 8722 - 1 4771 + 3 7962 - 2 4897 + 5 3810 + 9 1088", "x2": "add sub x_0_8 mul INT+ 6 x_0_4 add n n", "tree": "((x_0_8 sub (6 mul x_0_4)) add (n add n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 1 - 3 + 7 - 9 - 1 - 3 + 7 - 9 - 1 - 3 + 7 - 9 - 1 - 3 + 7 - 9 - 1 - 3 + 7 - 9 - 1 - 3 + 7 - 9", "x2": "idiv x_0_4 idiv sign n sign mod mod idiv sub x_0_3 mod INT+ 9 INT+ 4 INT- 5 INT- 1 INT+ 8", "tree": "(x_0_4 idiv (sign(n) idiv sign(((((x_0_3 sub (9 mod 4)) idiv -5) mod -1) mod 8))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 10 + 9 - 2 - 10 - 4 + 2 + 5 + 59 - 55 + 13 + 61 + 25 - 11 - 29 - 355 + 329 - 77 - 365 - 149 + 67 + 175 + 2129 - 1975 + 463 + 2191 + 895 - 401", "x2": "add mul INT- 6 x_0_7 sign idiv mul x_0_1 n add x_0_5 x_0_4", "tree": "((-6 mul x_0_7) add sign(((x_0_1 mul n) idiv (x_0_5 add x_0_4))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 8 + 10 + 7 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10", "x2": "abs sub n x_0_1", "tree": "abs((n sub x_0_1))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 6 + 5 + 5 + 4 + 4 + 3 + 4 + 2 + 5 - 1 + 10 - 14 + 41 - 95 + 261 - 732 + 2204 - 6971 + 2 3245 - 8 1350", "x2": "add idiv add INT- 8 mul x_0_1 n INT- 6 INT+ 7", "tree": "(((-8 add (x_0_1 mul n)) idiv -6) add 7)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 + 4 + 10 - 6 + 9 - 8 + 7 - 10 - 7 + 0 + 4 + 10 + 0 + 9 + 0 + 7 + 0 + 0 + 0 + 4 + 10 + 0 + 9 + 0 + 7 + 0 + 0 + 0 + 4", "x2": "relu x_0_9", "tree": "relu(x_0_9)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 8 - 8 + 5 - 8 - 8 + 5 - 8 - 8 + 5 - 8 - 8 + 5 - 8 - 8 + 5 - 8 - 8 + 5 - 8 - 8 + 5 - 8", "x2": "mul x_0_3 sqr sqr sign n", "tree": "(x_0_3 mul ((sign(n))**2)**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 8 + 5 + 8 + 5 + 3 - 8 - 2 + 10 + 21 + 0 - 14 + 50 + 147 + 0 - 168 + 350 + 294 + 0 - 2352 + 3150 + 588 + 0 - 1 6464 + 2 5200 + 1176 + 0 - 32 9280", "x2": "mul mod add abs INT+ 1 add x_0_7 sign n n x_0_4", "tree": "(((abs(1) add (x_0_7 add sign(n))) mod n) mul x_0_4)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 1 + 9 - 2 + 4 - 9 + 2 + 4 + 2 + 3 + 0 + 3 + 1 + 1 + 2 + 3 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 0 + 1 + 3", "x2": "mod abs idiv relu add x_0_1 relu add add sqr n n x_0_6 sub INT+ 4 n INT+ 5", "tree": "(abs((relu((x_0_1 add relu((((n)**2 add n) add x_0_6)))) idiv (4 sub n))) mod 5)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 1 - 2 - 10 - 60 - 420 - 3360 - 3 240 - 30 2400 - 332 6400 - 3991 6800 - 5 1891 8400 - 72 6485 7600 - 1089 7286 4000 - 1 7435 6582 4000 - 29 6406 1900 8000 - 533 5311 4214 4000 - 1 137 917 73 6000 - 20 2741 8340 1472 0 - 425 7578 5143 912 0 - 9366 6727 3148 64 0 - 21 5433 4728 2404 1472 0", "x2": "mul x_0_1 add n mod relu INT+ 2 n", "tree": "(x_0_1 mul (n add (relu(2) mod n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 3 + 5 + 1 + 25 + 2 + 7 + 12 + 8 + 13 + 9 + 14 + 10 + 15 + 11 + 16 + 11 + 18 + 11 + 20 + 11", "x2": "sub idiv add mul n mod INT+ 1 0 add n x_0_1 n x_0_1 relu INT- 1", "tree": "((((n mul (10 mod (n add x_0_1))) add n) idiv x_0_1) sub relu(-1))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 4 + 5 - 9 + 5 + 3 - 1 + 8 - 6 + 8 + 6 + 2 + 11 - 3 + 11 + 9 + 5 + 14 + 0 + 14 + 12 + 8 + 17 + 3 + 17 + 15", "x2": "add x_0_5 abs INT- 3", "tree": "(x_0_5 add abs(-3))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 - 1 - 9 + 5 + 8 + 8 + 8 + 7 + 35 + 45 + 45 + 20 + 10 + 15 + 30 + 15 + 35 + 30 + 10 + 10 + 20 + 70 + 30 + 30 + 15 + 35 + 15 + 10", "x2": "abs mul sub mod x_0_1 n add sub mod abs x_0_2 INT+ 9 mod sign x_0_8 x_0_7 INT+ 6 INT- 5", "tree": "abs((((x_0_1 mod n) sub (((abs(x_0_2) mod 9) sub (sign(x_0_8) mod x_0_7)) add 6)) mul -5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 4 + 6 + 8 + 5 + 8 + 11 + 9 + 13 + 17 + 16 + 21 + 26 + 26 + 32 + 38 + 39 + 46 + 53 + 55 + 63 + 71 + 74", "x2": "relu add n sub x_0_3 abs INT+ 4", "tree": "relu((n add (x_0_3 sub abs(4))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 - 8 + 0 + 4 - 3 + 3 - 9 - 1 + 7 - 1 - 5 + 2 - 2 + 7 + 0 - 8 + 0 + 4 - 1 - 2 - 6 - 1 + 7 - 1 - 5 + 0 + 1", "x2": "sub sub sign add x_0_7 INT- 2 x_0_7 relu mod INT- 5 x_0_2", "tree": "((sign((x_0_7 add -2)) sub x_0_7) sub relu((-5 mod x_0_2)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 3 - 5 + 6 + 10 - 5 - 5 - 7 - 8 - 12 - 7 - 7 - 9 - 10 - 14 - 9 - 9 - 11 - 12 - 16 - 11 - 11 - 13 - 14 - 18", "x2": "sub INT- 1 add abs idiv sign mul idiv n INT- 9 n INT+ 9 abs x_0_5", "tree": "(-1 sub (abs((sign(((n idiv -9) mul n)) idiv 9)) add abs(x_0_5)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 10 - 12 - 14 - 22 - 29 - 38 - 49 - 62 - 77 - 94 - 113 - 134 - 157 - 182 - 209 - 238 - 269 - 302 - 337 - 374", "x2": "add sub n mod INT+ 4 mul n sign INT- 4 sub INT- 1 0 sqr n", "tree": "((n sub (4 mod (n mul sign(-4)))) add (-10 sub (n)**2))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 7 - 7 + 2 - 5 - 9 + 0 + 8 + 0 + 20 + 42 + 49 + 16 + 45 + 90 + 0 + 96 + 0 + 280 + 630 + 784 + 272 + 810 + 1710 + 0 + 2016 + 0 + 6440 + 1 5120", "x2": "mul abs x_0_9 mod INT- 5 mod n sqr add mul n sqr mul n INT- 3 n", "tree": "(abs(x_0_9) mul (-5 mod (n mod (((n mul ((n mul -3))**2) add n))**2)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 1 - 7 + 0 - 2 - 5 + 10 - 4 + 3 - 9 + 10 + 0 + 12 - 13 + 0 - 15 + 0 - 17 + 0 + 0 + 0 - 21 + 0 - 23 + 0 - 25 + 0 + 0 + 0", "x2": "mul idiv idiv x_0_8 n sign mod x_0_3 x_0_8 n", "tree": "(((x_0_8 idiv n) idiv sign((x_0_3 mod x_0_8))) mul n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 6 + 9 + 1 - 7 + 1 + 4 - 1 + 1 + 0 - 2 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "sub idiv x_0_6 INT+ 6 idiv INT- 8 INT- 9", "tree": "((x_0_6 idiv 6) sub (-8 idiv -9))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 2 + 0 + 6 + 9 + 5 + 6 + 7 + 24 + 45 + 10 + 11 + 12 + 13 + 14 + 30 + 32 + 17 + 18 + 76 + 20 + 42 + 22 + 23 + 24", "x2": "add relu mul n mod n mod mod x_0_4 relu mod x_0_2 n sqr INT- 3 n", "tree": "(relu((n mul (n mod ((x_0_4 mod relu((x_0_2 mod n))) mod (-3)**2)))) add n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 10 + 6 + 60 + 18 + 240 + 90 + 1440 + 630 + 1 1520 + 5670 + 11 5200 + 6 2370 + 138 2400 + 81 810 + 1935 3600 + 1216 2150 + 3 965 7600 + 2 675 6550 + 55 7383 6800 + 39 2837 4450 + 1114 7673 6000 + 824 9586 3450", "x2": "add mul x_0_2 idiv abs sub idiv mod n x_0_2 n n sign x_0_2 sub n n", "tree": "((x_0_2 mul (abs((((n mod x_0_2) idiv n) sub n)) idiv sign(x_0_2))) add (n sub n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 7 - 10 + 6 + 10 + 8 + 4 + 0 + 324 + 144 + 324 + 196 + 361 + 0 + 484 + 529 + 576 + 400 + 676 + 0 + 784 + 841 + 900 + 676 + 1024 + 0", "x2": "relu sqr add sub n idiv INT+ 5 mod INT+ 7 x_0_6 mod INT+ 7 add INT+ 5 x_0_4", "tree": "relu((((n sub (5 idiv (7 mod x_0_6))) add (7 mod (5 add x_0_4))))**2)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 7 - 6 + 10 - 3 + 1 + 6 + 2 - 171 - 27 + 9 - 63 + 9 + 9 + 45 - 5859 - 639 + 45 - 1539 + 117 + 153 + 1161 - 3339 - 4599 + 1269 - 4 5027 + 2313 + 4941", "x2": "sub add add mul sqr INT+ 6 mod sub sub n x_0_3 INT- 2 x_0_7 n INT+ 9 idiv n INT+ 1", "tree": "(((((6)**2 mul (((n sub x_0_3) sub -2) mod x_0_7)) add n) add 9) sub (n idiv 1))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 2 - 9 + 7 + 6 + 5 + 30 + 42 + 64 + 63 + 60 + 99 + 84 + 169 + 112 + 15 + 64 + 289 + 144 + 342 + 320 + 42 + 88 + 161 + 168 + 525", "x2": "mul add sign mul sqr x_0_5 INT+ 8 mod x_0_5 n relu n", "tree": "((sign(((x_0_5)**2 mul 8)) add (x_0_5 mod n)) mul relu(n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 7 + 8 - 7 + 5 - 5 - 8 + 7 + 1 + 4 - 5 + 7 - 7 - 8 - 7 - 5 - 5 - 8 - 7 - 1 - 4 - 5 - 7 - 7 - 8 - 7 - 5 - 5 - 8 - 7 - 1 - 4", "x2": "mul x_0_11 sign idiv sub INT- 1 x_0_11 INT+ 5", "tree": "(x_0_11 mul sign(((-1 sub x_0_11) idiv 5)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 1 - 8 + 10 - 8 + 10 + 1 + 8 - 1 + 8 + 8 + 8 - 71 + 8 - 1 + 8 - 8 + 8 - 75 + 8 - 145 + 8 - 872 + 8 - 91 + 8 - 181 + 8 - 872 + 8 - 3887", "x2": "sub x_0_6 mul mod mul relu x_0_1 INT+ 7 n relu sub INT+ 1 mul abs x_0_10 INT- 1", "tree": "(x_0_6 sub (((relu(x_0_1) mul 7) mod n) mul relu((1 sub (abs(x_0_10) mul -1)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 2 - 8 + 21 - 7 + 38 - 24 + 57 - 43 + 78 - 64 + 101 - 87 + 126 - 112 + 153 - 139 + 182 - 168 + 213 - 199 + 246 - 232", "x2": "add relu mod add x_0_1 n x_0_2 sub sub sign x_0_1 add x_0_1 INT- 4 INT- 9", "tree": "(relu(((x_0_1 add n) mod x_0_2)) add ((sign(x_0_1) sub (x_0_1 add -4)) sub -9))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 20 + 60 + 240 + 1200 + 7200 + 5 400 + 40 3200 + 362 8800 + 3628 8000 + 3 9916 8000 + 47 9001 6000 + 622 7020 8000 + 8717 8291 2000 + 13 767 4368 0 + 209 2278 9888 0 + 3556 8742 8096 0 + 6 4023 7370 5728 0 + 121 6451 40 8832 0 + 2432 9020 817 6640 0 + 5 1090 9421 7170 9440 0", "x2": "abs mul n x_0_1", "tree": "abs((n mul x_0_1))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 - 4 - 6 - 1 - 9 + 4 + 13 + 26 + 36 + 56 + 65 + 67 + 58 + 41 + 6 + 18 + 6 + 7 - 5 + 20 + 35 + 64 + 94 + 138 + 159", "x2": "sub add relu abs sub n sub x_0_5 add x_0_1 n INT- 3 INT+ 6", "tree": "((relu(abs((n sub (x_0_5 sub (x_0_1 add n))))) add -3) sub 6)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 1 + 7 - 3 - 13 - 8 - 11 - 10 - 13 - 12 - 15 - 14 - 17 - 16 - 19 - 18 - 21 - 20 - 23 - 22 - 25 - 24 - 27", "x2": "sub idiv mul n n x_0_1 sub INT+ 7 add INT+ 3 idiv x_0_3 mul sqr n INT- 6", "tree": "(((n mul n) idiv x_0_1) sub (7 sub (3 add (x_0_3 idiv ((n)**2 mul -6)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 2 + 5 - 9 - 7 - 1 + 1 - 2 - 2 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1", "x2": "idiv x_0_4 sub sqr idiv abs INT+ 1 n INT- 5", "tree": "(x_0_4 idiv (((abs(1) idiv n))**2 sub -5))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 3 + 7 + 2 + 1 - 1 - 6 - 3 + 4 + 0 - 63 - 4 - 3 + 0 - 90 - 9 - 52 + 0 - 1197 - 12 - 15 + 0 - 2070 - 216 - 1300 + 0 - 3 2319 - 336 - 435", "x2": "mul x_0_8 mod n sub mul idiv n INT- 5 x_0_8 sign idiv n x_0_9", "tree": "(x_0_8 mul (n mod (((n idiv -5) mul x_0_8) sub sign((n idiv x_0_9)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 5 + 0 + 10 - 3 - 4 - 14 - 1 + 0 + 10 - 3 - 4 - 14 - 1 + 0 + 10 - 3 - 4 - 14 - 1 + 0 + 10 - 3 - 4 - 14", "x2": "add INT- 1 sub mod mul INT- 5 relu mul x_0_5 INT- 1 0 sign INT- 6 add INT+ 3 x_0_3", "tree": "(-1 add (((-5 mul relu((x_0_5 mul -10))) mod sign(-6)) sub (3 add x_0_3)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 1 - 1 - 5 + 0 + 0 - 4 + 1 + 1 - 1 + 2 + 2 + 0 + 3 + 3 + 1 + 4 + 4 + 2 + 5 + 5 + 3 + 6", "x2": "sub add sub sub INT- 5 sign mul n sub sub INT+ 9 n x_0_2 add x_0_2 INT+ 4 n x_0_1", "tree": "((((-5 sub sign((n mul ((9 sub n) sub x_0_2)))) sub (x_0_2 add 4)) add n) sub x_0_1)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 - 3 + 6 + 22 + 47 + 83 + 132 + 196 + 277 + 377 + 498 + 642 + 811 + 1007 + 1232 + 1488 + 1777 + 2101 + 2462 + 2862 + 3303", "x2": "add abs sqr abs n x_0_1", "tree": "(abs((abs(n))**2) add x_0_1)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5", "x2": "idiv n INT- 4", "tree": "(n idiv -4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000 + 5 1218 9896 4582 4000 + 97 3160 8032 7065 6000 + 1946 3216 654 1312 0 + 4 872 7537 3736 7552 0", "x2": "mul sub mul relu x_0_1 n idiv idiv n INT+ 5 n idiv x_0_1 x_0_1", "tree": "(((relu(x_0_1) mul n) sub ((n idiv 5) idiv n)) mul (x_0_1 idiv x_0_1))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 - 5 + 1 + 21 + 1 + 141 + 1 + 1261 + 1 + 1 3861 + 1 + 18 181 + 1 + 270 2701 + 1 + 4594 5901 + 1 + 8 7297 2101 + 1 + 183 3241 4101 + 1 + 4216 4552 4301", "x2": "sub abs mul sub idiv INT- 3 n n x_0_2 n", "tree": "(abs((((-3 idiv n) sub n) mul x_0_2)) sub n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 7 + 6 + 5 - 6 - 10 + 1 - 6 - 10 - 10 + 63 + 144 + 507 + 588 + 225 + 256 + 867 + 324 + 361 + 400 + 1323 + 1452 + 1587 + 1728 + 1875 + 2028 + 2187 + 2352 + 2523 + 2700", "x2": "mul sub sign x_0_10 INT- 2 mod sqr n sqr x_0_1", "tree": "((sign(x_0_10) sub -2) mul ((n)**2 mod (x_0_1)**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 2 - 3 - 2 + 8 + 2 + 6 - 8 - 7 - 2 - 2 - 1 - 2 - 3 - 3 - 1 - 1 - 2 - 2 - 1 - 3 - 3 - 2 + 0 - 2 - 3 - 2 - 1 - 4 - 2", "x2": "mod sub x_0_8 add sub INT+ 8 abs sign INT- 9 x_0_9 INT- 5", "tree": "((x_0_8 sub ((8 sub abs(sign(-9))) add x_0_9)) mod -5)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 4 + 5 + 10 - 2 - 8 + 2 + 12 + 18 + 7 + 2 + 13 + 24 + 31 + 21 + 17 + 29 + 41 + 49 + 40 + 37 + 50 + 63 + 72 + 64 + 62", "x2": "mul sign mod mul mod x_0_4 abs INT+ 9 x_0_1 n add x_0_5 n", "tree": "(sign((((x_0_4 mod abs(9)) mul x_0_1) mod n)) mul (x_0_5 add n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 9 + 10 + 1 - 3 - 10 - 4 + 5 + 4 - 8 - 6 + 13 + 4 + 25 + 1 + 27 + 3 + 9 + 25 + 31 + 7 + 23 + 49 + 5 + 6 + 17 + 83 + 29 + 85 + 41 + 67", "x2": "mod sub sub n mul x_0_10 INT+ 1 0 INT+ 8 mul INT+ 5 abs mod INT- 2 sub n INT+ 5", "tree": "(((n sub (x_0_10 mul 10)) sub 8) mod (5 mul abs((-2 mod (n sub 5)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 9 + 8 - 9 - 7 - 2 + 3 + 10 - 10 - 7 - 63 - 56 + 63 + 49 + 14 - 21 - 70 + 70 + 49 + 441 + 392 - 441 - 343 - 98 + 147 + 490 - 490 - 343 - 3087", "x2": "mul INT- 7 x_0_9", "tree": "(-7 mul x_0_9)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 4096 + 2401 + 1296 + 625 + 256 + 81 + 16 + 1 + 0 + 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641", "x2": "sqr sqr add add mod n abs n n INT- 9", "tree": "(((((n mod abs(n)) add n) add -9))**2)**2", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 9 + 7 - 2 - 9 - 6 - 2 + 539 - 3 4944 + 283 626 - 2 8300 7800 + 342 4394 4526 - 4 9307 2040 1312 + 833 2917 4773 637 - 16 3318 4707 3522 8732 + 3674 6655 9147 8957 3850 - 94 693 591 4262 6186 5728 + 2 7186 294 912 2931 7922 7378 - 880 8154 4693 7469 448 3771 7984 + 31 7974 3763 4412 5506 8654 8543 2267 - 1 2718 8663 964 851 440 6283 9046 2800 + 560 9020 425 4999 4782 9058 6979 9202 6950 - 27 1475 310 6339 2712 3811 2836 6224 4881 4220 + 1 4361 291 4325 2036 3440 594 7970 1836 1143 9418 - 827 1920 4785 5722 496 4800 4051 845 8902 5602 2784 + 51 6995 299 980 6407 6314 8102 4083 6890 4816 1907 3125 - 3 4948 7669 4134 5044 9767 5990 26 3185 2256 6612 753 3132", "x2": "mul sub sub relu x_0_3 x_0_6 x_0_1 mul n n", "tree": "(((relu(x_0_3) sub x_0_6) sub x_0_1) mul (n mul n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 7 + 5 + 3 - 10 - 8 + 5 + 10 - 7 - 5 + 77 - 444 - 156 + 70 - 510 - 1344 - 136 - 1476 - 3363 - 5380 - 903 - 2684 - 7774 - 7200 + 400 + 676 - 1458 - 1 5344 - 6583 - 2 2620", "x2": "mul add mul sqr x_0_2 relu idiv INT+ 5 INT- 1 0 sub n sqr mod x_0_10 add n INT+ 2 n", "tree": "((((x_0_2)**2 mul relu((5 idiv -10))) add (n sub ((x_0_10 mod (n add 2)))**2)) mul n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 9 - 6 + 1 + 12 - 3 + 4 + 15 + 0 + 7 + 18 + 3 + 10 + 21 + 6 + 13 + 24 + 9 + 16 + 27 + 12 + 19 + 30 + 15", "x2": "add INT+ 3 x_0_3", "tree": "(3 add x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 7 + 7 - 10 - 2 - 2 + 10 + 8 + 7 + 7 + 10 + 2 + 2 + 10 + 8 + 7 + 7 + 10 + 2 + 2 + 10 + 8 + 7 + 7 + 10 + 2 + 2", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 10 - 5 + 3 + 2 - 2 + 5 + 0 + 1 - 8 - 18 - 7 - 19 - 32 - 46 - 61 - 77 - 94 - 112 - 131 - 151 - 172 - 194 - 217 - 241 - 266 - 292 - 319 - 347", "x2": "sub x_0_1 idiv n sign mod x_0_7 idiv add n add INT+ 4 mul INT- 9 x_0_8 sign INT+ 3", "tree": "(x_0_1 sub (n idiv sign((x_0_7 mod ((n add (4 add (-9 mul x_0_8))) idiv sign(3))))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 3 + 7 + 10 + 4 - 2 - 4 + 3 + 2 + 2 - 30 - 70 - 100 - 40 - 20 - 40 - 30 - 20 - 20 - 300 - 700 - 1000 - 400 - 200 - 400 - 300 - 200 - 200 - 3000 - 7000", "x2": "mul abs x_0_9 INT- 1 0", "tree": "(abs(x_0_9) mul -10)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 1 + 2 + 3 + 6 + 5 + 6 + 7 + 10 + 9 + 12 + 11 + 14 + 13 + 14 + 15 + 18 + 17 + 20 + 19", "x2": "add sign add mod idiv n mod n idiv n mod n INT- 8 add INT+ 5 n sign INT- 9 n", "tree": "(sign((((n idiv (n mod (n idiv (n mod -8)))) mod (5 add n)) add sign(-9))) add n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 7 - 2 + 2 + 3 - 10 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign idiv n sign idiv sign x_0_5 x_0_1", "tree": "sign((n idiv sign((sign(x_0_5) idiv x_0_1))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 8 + 5 + 4 - 2 + 4 - 2 + 7 + 5 + 10 + 6 + 8 + 0 + 67 + 2 + 0 + 6 + 0 + 17 + 3 + 0 + 0 + 6 + 0 + 65 + 0 + 0 + 4 + 0 + 15 + 1 + 0", "x2": "relu sub x_0_11 sub add mul x_0_12 x_0_2 idiv idiv relu INT+ 5 sub idiv x_0_1 n INT- 6 INT+ 2 INT- 2", "tree": "relu((x_0_11 sub (((x_0_12 mul x_0_2) add ((relu(5) idiv ((x_0_1 idiv n) sub -6)) idiv 2)) sub -2)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 9 + 12 + 17 + 24 + 33 + 44 + 57 + 72 + 89 + 108 + 129 + 152 + 177 + 204 + 233 + 264 + 297 + 332 + 369 + 408", "x2": "add sqr n INT+ 8", "tree": "((n)**2 add 8)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 7 + 0 + 9 + 32 + 36 + 40 + 32 + 45 + 60 + 89 + 99 + 109 + 107 + 126 + 147 + 182 + 198 + 214 + 218 + 243 + 270 + 311", "x2": "sub sqr n x_0_3", "tree": "((n)**2 sub x_0_3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 6 - 4 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528", "x2": "sub sqr n sign abs sqr x_0_3", "tree": "((n)**2 sub sign(abs((x_0_3)**2)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 8 + 0 - 9 + 3 + 1 + 6 + 8 + 0 + 11 + 3 + 1 + 6 + 8 + 0 + 11 + 3 + 1 + 6 + 8 + 0 + 11 + 3 + 1 + 6 + 8", "x2": "mod x_0_6 add relu n n", "tree": "(x_0_6 mod (relu(n) add n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 3 + 6 + 17 + 23 + 38 + 44 + 63 + 84 + 90 + 115 + 142 + 171 + 177 + 235 + 241 + 278 + 317 + 358 + 401 + 407 + 493", "x2": "add sub INT+ 6 relu sqr idiv abs x_0_1 n add sqr n x_0_1", "tree": "((6 sub relu(((abs(x_0_1) idiv n))**2)) add ((n)**2 add x_0_1))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 0 + 8 + 0 + 7 - 216 - 686 + 0 - 1458 + 0 - 1331 - 1728 - 4394 - 2744 - 6750 - 4096 - 4913 - 5832 - 6859 - 8000 - 9261 - 1 648 - 1 2167 - 1 3824 - 1 5625", "x2": "mul n mul sqr relu n idiv sub INT+ 5 INT+ 1 sub x_0_5 INT+ 2", "tree": "(n mul ((relu(n))**2 mul ((5 sub 1) idiv (x_0_5 sub 2))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 8 - 6 + 2 + 7 - 7 + 10 + 9 + 2 + 2 - 3 - 1 + 3 - 2 - 2 - 5 - 4 + 3 + 3 + 2 + 4 + 2 + 3 + 3 + 0 + 1 + 2 + 2 + 3", "x2": "sub abs INT- 5 abs x_0_9", "tree": "(abs(-5) sub abs(x_0_9))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 3 + 10 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2", "x2": "mod x_0_3 mod INT+ 5 sqr sub relu INT+ 8 x_0_1", "tree": "(x_0_3 mod (5 mod ((relu(8) sub x_0_1))**2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 6 + 18 + 24 - 6 - 12 + 6 - 12 - 6 - 36 - 42 - 24 - 42 - 36 - 66 - 72 - 54 - 72 - 66 - 96 - 102", "x2": "mul sub n mod x_0_1 abs INT+ 1 0 INT- 6", "tree": "((n sub (x_0_1 mod abs(10))) mul -6)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 5 + 1 + 8 - 6 - 3 + 4 + 1 - 117 - 300 - 165 - 528 + 143 - 28 - 465 - 320 + 7667 + 2 1276 + 1 2179 + 4 1840 - 1 2453 + 1980 + 4 2251 + 3 144 - 76 7325 - 221 3380 - 131 6061 - 468 6864", "x2": "mul n sub mul x_0_8 INT- 4 n", "tree": "(n mul ((x_0_8 mul -4) sub n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 3 - 3 - 9 - 5 + 3 - 2 - 3 + 2 + 3 - 8 + 1 + 18 + 9 + 8 + 19 + 22 + 1 + 20 + 55 + 38 + 37 + 60 + 67 + 26 + 65 + 194 + 125", "x2": "sub abs abs sub n x_0_7 mul x_0_7 INT- 3", "tree": "(abs(abs((n sub x_0_7))) sub (x_0_7 mul -3))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 2 - 1 + 12 + 3 + 5 + 19 + 11 + 14 + 29 + 22 + 26 + 42 + 36 + 41 + 58 + 53 + 59 + 77 + 73 + 80 + 99 + 96", "x2": "add x_0_3 relu n", "tree": "(x_0_3 add relu(n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 - 1 - 4 - 9 + 10 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 5 - 10 + 0 - 9 + 5 + 10 - 10 + 4 + 2 + 10 - 7 8383 - 1 3820 2360 4002 + 14 - 16 6440 + 11 + 7 - 11 5572 + 15 + 18 + 11 - 17 5611 - 17 8902 9589 6600 + 10 - 12 5135 + 15 + 20 - 69 4400 + 14 + 12", "x2": "sub n mod x_0_10 sqr mul add INT+ 1 0 x_0_1 add n INT+ 2", "tree": "(n sub (x_0_10 mod (((10 add x_0_1) mul (n add 2)))**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 8 - 9 - 5 + 184 + 552 + 1227 + 2521 + 4584 + 7724 + 1 2457 + 1 9161 + 2 8396 + 4 954 + 5 7513 + 7 8957 + 10 6426 + 14 970 + 18 3869 + 23 6683 + 30 906 + 37 8286 + 47 875 + 58 683", "x2": "add sqr relu sqr n sub x_0_3 abs sqr INT- 8", "tree": "((relu((n)**2))**2 add (x_0_3 sub abs((-8)**2)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420", "x2": "mul add relu mod INT- 9 INT+ 5 n relu n", "tree": "((relu((-9 mod 5)) add n) mul relu(n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 1 - 7 - 4 + 7 - 10 + 7 - 8 + 9 - 10 - 11 - 12 - 13 - 14 - 15 + 16 + 17 + 18 + 19 + 20 - 21 + 22 + 23 + 24 + 25 - 26", "x2": "idiv n sign idiv x_0_5 x_0_6", "tree": "(n idiv sign((x_0_5 idiv x_0_6)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 42 + 294 + 2058 + 1 4406 + 10 842 + 70 5894 + 494 1258 + 3458 8806 + 2 4212 1642 + 16 9485 1494 + 118 6396 458 + 830 4772 3206 + 5813 3406 2442 + 4 693 3843 7094 + 28 4853 6905 9658 + 199 3975 8341 7606 + 1395 7830 8392 3242 + 9770 4815 8746 2694 + 6 8393 3711 1223 8858 + 47 8753 5977 8567 2006", "x2": "add mul INT+ 7 x_0_1 idiv sign sign INT+ 5 add mod idiv INT- 8 x_0_1 INT- 9 mod x_0_1 sqr INT+ 8", "tree": "((7 mul x_0_1) add (sign(sign(5)) idiv (((-8 idiv x_0_1) mod -9) add (x_0_1 mod (8)**2))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 1 + 0 + 2 + 7 + 6 + 7 + 0 - 8 + 0 - 7 - 2 - 3 - 2 + 0 - 8 + 0 - 7 - 2 - 3 - 2 + 0 - 8 + 0 - 7 - 2 - 3", "x2": "mod x_0_7 sub mod relu relu INT- 9 INT- 6 INT+ 9", "tree": "(x_0_7 mod ((relu(relu(-9)) mod -6) sub 9))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 + 4 + 2 - 7 - 1 - 8 - 1 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 - 1 + 0", "x2": "idiv x_0_6 sub n INT+ 3", "tree": "(x_0_6 idiv (n sub 3))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 6 - 1 + 5 + 5 - 5 + 0 + 6 + 0 + 0 + 0 + 5 + 11 + 5 + 2 + 5 + 0 + 11 + 0 + 3 + 0 + 5 + 16 + 5 + 2 + 5", "x2": "abs abs mod abs mod sub INT+ 5 x_0_5 n abs sub x_0_2 n", "tree": "abs(abs((abs(((5 sub x_0_5) mod n)) mod abs((x_0_2 sub n)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 410 625 + 1575 2961 + 4304 6721 + 9605 9601 + 1 8738 8721 + 3 3215 625 + 5 4798 1281 + 8 5503 6081 + 12 7598 9841 + 18 3603 6801 + 25 6289 625 + 34 8678 4401 + 46 4047 641 + 60 5922 1281 + 77 8082 7681 + 98 4560 625 + 122 9637 321 + 151 7848 6401 + 185 3981 7921 + 224 3075 3361", "x2": "abs sqr sqr mul add relu add mod n sub mul n n INT- 7 n INT+ 3 INT+ 9", "tree": "abs(((((relu(((n mod ((n mul n) sub -7)) add n)) add 3) mul 9))**2)**2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000", "x2": "mul abs n mul n n", "tree": "(abs(n) mul (n mul n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 5 - 240 - 32 + 1 8720 + 2448 - 784 - 960 + 11 1744 + 15 2240 - 1584 - 1824 + 32 7392 + 40 6224 - 2640 - 2944 + 71 4816 + 84 4272 - 3952 - 4320 + 132 3168 + 151 5536", "x2": "mul mul sign n mul mul n INT- 1 INT+ 8 mod add n INT+ 7 mul x_0_2 mod INT+ 2 INT+ 7", "tree": "((sign(n) mul ((n mul -1) mul 8)) mul ((n add 7) mod (x_0_2 mul (2 mod 7))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 8 + 5 + 3 - 5 - 3 - 7 - 8 - 10 - 2 - 7 - 58 - 73 - 34 - 18 - 34 - 18 - 58 - 73 - 109 - 13 - 58 - 3373 - 5338 - 1165 - 333 - 1165 - 333 - 3373 - 5338 - 1 1890", "x2": "sub INT- 9 sqr x_0_11", "tree": "(-9 sub (x_0_11)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 0 - 7 - 3 + 7 + 8 - 2 - 9 + 1 + 52 + 70 + 57 + 17 + 9 + 734 + 1118 + 4569 + 4297 + 1150 + 1 4119 + 2 8987 + 91 6583 + 520 2699 + 1965 9467 + 528 431 + 1696 1551 + 4 3309 8638 + 267 946 4322", "x2": "add mul x_0_7 abs x_0_6 add sign mul n n relu add mul n x_0_5 relu n", "tree": "((x_0_7 mul abs(x_0_6)) add (sign((n mul n)) add relu(((n mul x_0_5) add relu(n)))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 3 - 10 - 2 + 0 + 4 + 0 + 1 - 8 - 8 - 8 - 8 - 8 + 56 - 7 - 7 - 7 - 7 + 41 - 7 - 7 - 7 - 7 + 28 - 7 - 7 - 7", "x2": "sub relu sqr idiv x_0_5 x_0_6 abs INT- 8", "tree": "(relu(((x_0_5 idiv x_0_6))**2) sub abs(-8))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 5 - 1 - 8 - 16 - 25 - 35 - 46 - 58 - 71 - 85 - 100 - 116 - 133 - 151 - 170 - 190 - 211 - 233 - 256 - 280", "x2": "sub x_0_1 abs mul idiv INT+ 8 INT+ 7 add n INT+ 3", "tree": "(x_0_1 sub abs(((8 idiv 7) mul (n add 3))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 - 3 + 7 + 4 - 6 + 1 + 2 + 5 - 1 + 0 + 7 + 7 + 35 - 28 + 42 + 7 + 35 + 42 + 49 + 294 - 147 + 539 - 147 + 539 + 343 + 588 + 2352 - 686 + 5831", "x2": "mul INT+ 7 add x_0_9 x_0_7", "tree": "(7 mul (x_0_9 add x_0_7))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 3 + 6 + 1 + 6 + 3 + 9 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0", "x2": "idiv x_0_6 n", "tree": "(x_0_6 idiv n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 9 + 15 + 0 - 2 + 47 - 9 + 36 - 24 + 17 + 195 + 36 + 214 + 55 + 233 + 74 + 252 + 93 + 271 + 112 + 290", "x2": "sub add abs mul mul abs mod INT+ 1 0 n mul n INT- 1 INT+ 2 sub INT+ 3 x_0_1 n", "tree": "((abs(((abs((10 mod n)) mul (n mul -1)) mul 2)) add (3 sub x_0_1)) sub n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "mul relu relu n n", "tree": "(relu(relu(n)) mul n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 9 - 10 - 4 + 4 - 60 - 21 + 40 - 459 - 170 + 451 - 5496 - 2210 + 6328 - 8 2425 - 3 5360 + 10 7593 - 148 3632 - 67 1840 + 215 1880 - 3115 6251 - 1478 480 + 4949 3263 - 7 4775 0 - 3 6951 2000", "x2": "mul n add x_0_3 abs sqr mul idiv n x_0_5 INT+ 1", "tree": "(n mul (x_0_3 add abs((((n idiv x_0_5) mul 1))**2)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 10 + 0 + 9 - 2 + 6 - 1 + 7 + 2 - 10 + 7 - 1 1844 - 9 189 - 198 - 5 9256 - 360 - 1 1889 - 243 - 2 1852 - 396 - 9 261 - 2 1879 - 17 7107 1540 1445 6343 - 5 9546 5762 2509 9546 8857 - 138 3258 2841 - 1 1096 1376 6015 2548 9970 - 1511 6544 315 - 17 9814 1306 4567 1693 - 313 8105 9942 - 205 2141 3757 6280 3286 - 2213 2132 1055", "x2": "mul add sub relu relu sqr sqr x_0_11 INT- 8 n INT- 9", "tree": "(((relu(relu(((x_0_11)**2)**2)) sub -8) add n) mul -9)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 10 + 25 + 94 + 463 + 2770 + 1 9381 + 15 5038 + 139 5331 + 1395 3298 + 1 5348 6265 + 18 4183 5166 + 239 4385 7143 + 3352 1399 9986 + 5 282 999 9773 + 80 4513 5999 6350 + 1367 6731 1993 7931 + 2 4618 1161 5888 2738 + 46 7744 2070 1877 2001 + 935 4884 1403 7543 9998 + 1 9645 2566 9478 8423 9935", "x2": "sub relu sub mul x_0_1 n n INT+ 2", "tree": "(relu(((x_0_1 mul n) sub n)) sub 2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 10 - 5 - 5 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 8 - 3 + 9 + 8 + 7 + 10 + 7 - 2 + 9 + 9 + 8 + 22 + 9 + 7 + 4 + 8 + 9 + 21 + 32 + 8 + 7 + 2 + 7 + 9 + 42 + 68 + 7 + 3 + 1", "x2": "idiv add sqr abs INT+ 8 sqr abs x_0_7 add x_0_10 INT+ 8", "tree": "(((abs(8))**2 add (abs(x_0_7))**2) idiv (x_0_10 add 8))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 3 + 7 + 1 - 3 + 2 - 8 + 5 + 0 + 1 + 1 + 2 + 5 + 5 + 0 + 1 + 1 + 2 + 5 + 5 + 0 + 1 + 1 + 2 + 5 + 5 + 0", "x2": "mod mod x_0_6 add n INT+ 8 INT+ 7", "tree": "((x_0_6 mod (n add 8)) mod 7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 2 + 11 + 2 + 16 + 8 + 23 + 16 + 32 + 26 + 43 + 38 + 56 + 52 + 71 + 68 + 88 + 86 + 107 + 106 + 128 + 128", "x2": "abs add add x_0_2 n idiv n add sub x_0_2 mod n add INT+ 3 abs n sqr x_0_1", "tree": "abs(((x_0_2 add n) add (n idiv ((x_0_2 sub (n mod (3 add abs(n)))) add (x_0_1)**2))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 5 + 8 + 10 - 7 - 6 - 7 + 2421 + 528 - 100 + 2306 + 391 + 10 + 357 + 266 + 696 7048 + 24 9677 - 68 + 314 4305 + 1511 + 259 1118 + 112 5244 + 1050 + 1 5584 6455 4462 + 8 2708 + 247 1663 4573 4881 + 503 3889", "x2": "sub mod sub x_0_3 x_0_5 sqr mul x_0_7 INT+ 5 sqr n", "tree": "(((x_0_3 sub x_0_5) mod ((x_0_7 mul 5))**2) sub (n)**2)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 7 + 8 + 20 + 20 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552", "x2": "mul add sign mul x_0_3 sign mul idiv n sqr INT+ 4 relu x_0_3 n n", "tree": "((sign((x_0_3 mul sign(((n idiv (4)**2) mul relu(x_0_3))))) add n) mul n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 7 + 6 + 3 + 1 + 0 + 0 + 8 + 0 + 0 + 1 + 0 + 0 + 44 + 0 + 0 - 29 + 0 + 0 + 188 + 0 + 0 - 167 + 0 + 0", "x2": "mul sub sub n add INT+ 1 x_0_4 x_0_3 sqr mod x_0_3 INT- 3", "tree": "(((n sub (1 add x_0_4)) sub x_0_3) mul ((x_0_3 mod -3))**2)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 - 6 + 2 + 3 - 2 + 10 + 3 - 5 + 2 + 4 + 16 + 1 + 8 + 4 + 6 + 13 + 6 + 6 + 0 + 10 + 12 + 2 + 2 + 6 + 3 + 6 + 4 + 2", "x2": "add abs sub x_0_5 x_0_9 relu mod INT+ 1 0 INT- 2", "tree": "(abs((x_0_5 sub x_0_9)) add relu((10 mod -2)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 1 - 7 + 4 - 1 + 7 + 2 + 9 + 16 + 6 + 12 + 5 + 11 + 5 - 1 + 10 + 5 + 13 + 8 + 15 + 22 + 12 + 18 + 11 + 17 + 11", "x2": "sub n x_0_6", "tree": "(n sub x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 4 + 15 + 6 + 39 + 12 + 111 + 30 + 327 + 84 + 975 + 246 + 2919 + 732 + 8751 + 2190 + 2 6247 + 6564 + 7 8735 + 1 9686 + 23 6199 + 5 9052", "x2": "sub INT- 6 mul relu abs x_0_2 INT- 3", "tree": "(-6 sub (relu(abs(x_0_2)) mul -3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 2 + 7 - 2 - 7 - 10 - 1 - 9 + 6 + 4 + 10 + 2 - 2 - 4 + 6 - 9 + 7 + 6 + 13 + 6 + 3 + 2 + 13 - 9 + 8 + 8 + 20 + 10", "x2": "add x_0_8 mod n sub INT+ 9 sign sub sqr x_0_5 mod add n n x_0_2", "tree": "(x_0_8 add (n mod (9 sub sign(((x_0_5)**2 sub ((n add n) mod x_0_2))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 5 - 5 - 2 + 3 - 4 - 7 - 12 - 12 - 68 - 84 - 390 - 352 - 794 - 1820 - 4030 - 1 1328 - 1 2342 - 4 6872 - 5 776 - 23 8330 - 21 384 - 72 7080 - 66 5136 - 369 7110 - 356 40 - 1873 9430", "x2": "mul add x_0_7 x_0_2 mod sub sub x_0_4 n n INT+ 7", "tree": "((x_0_7 add x_0_2) mul (((x_0_4 sub n) sub n) mod 7))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800", "x2": "mul abs n add n abs n", "tree": "(abs(n) mul (n add abs(n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 7 + 8 + 1 + 10 - 10 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1", "x2": "idiv x_0_6 n", "tree": "(x_0_6 idiv n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 6 - 7 - 7 + 4 + 7 + 7 + 8 + 8 + 5 + 8 + 8 + 9 + 9 + 6 + 9 + 9 + 10 + 10 + 7 + 10 + 10 + 11 + 11 + 8 + 11", "x2": "add INT+ 1 abs x_0_5", "tree": "(1 add abs(x_0_5))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 3 + 3 + 1 + 1 + 6 + 7 + 1 + 1 + 10 + 11 + 1 + 1 + 14 + 15 + 1 + 1 + 18 + 19 + 1 + 1 + 22", "x2": "idiv sub n idiv n abs mul INT- 3 INT+ 9 x_0_2", "tree": "((n sub (n idiv abs((-3 mul 9)))) idiv x_0_2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 0 + 2 - 388 + 5 - 92 + 1 9019 - 237 + 4517 - 93 1921 + 1 1624 - 22 1321 + 4566 4142 - 56 9562 + 1084 4744 - 22 3754 2942 + 2790 8555 - 5 3139 2438 + 1096 3960 4177 - 13 6751 9175 + 260 3822 9483 - 5 3723 4060 4651 + 670 843 9598", "x2": "add n mul mul INT- 7 x_0_3 INT+ 7", "tree": "(n add ((-7 mul x_0_3) mul 7))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 6 + 10 + 1 + 8 - 6 + 0 + 7 + 2 + 104 + 122 + 156 + 274 + 326 + 375 + 530 + 622 + 701 + 995 + 1144 + 1298 + 1753 + 1999 + 2249 + 2908 + 3297 + 3679 + 4687 + 5282", "x2": "add add x_0_9 x_0_3 sqr n", "tree": "((x_0_9 add x_0_3) add (n)**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 6 + 3 + 23 + 15 + 5 + 135 - 43 - 11 + 801 - 1057 - 1121 + 3687 - 1 27 - 1 6751 + 5373 - 6 5533 - 16 6037 - 13 3797 - 52 6993 - 152 3213 - 232 5993 - 548 7949", "x2": "sub mul x_0_3 mod INT+ 6 relu sqr add n mod INT- 6 INT+ 1 0 sub abs x_0_1 INT+ 2", "tree": "((x_0_3 mul (6 mod relu(((n add (-6 mod 10)))**2))) sub (abs(x_0_1) sub 2))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 - 2 - 5 + 2 + 1 + 7 - 6 - 6 + 0 + 0 + 0 + 2 + 1 + 7 + 0 + 0 + 0 + 0 + 0 + 2 + 1 + 7 + 0 + 0 + 0 + 0 + 0 + 2", "x2": "relu x_0_8", "tree": "relu(x_0_8)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399", "x2": "sub mul n n sign n", "tree": "((n mul n) sub sign(n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 10 + 45 + 224 + 1250 + 8280 + 6 1593 + 53 432 + 498 9762 + 5304 4200 + 6 376 2533 + 76 3836 6528 + 1020 3587 274 + 1 4971 1984 2232 + 22 9580 7081 5025 + 383 2626 7961 5488 + 6634 8824 6554 7138 + 12 4177 1081 9542 3944 + 239 5192 5700 6252 3677 + 4967 843 2781 6958 5600 + 10 5627 9923 3975 7295 818 + 240 4068 8146 6340 7944 1048", "x2": "abs mul sqr n add n abs relu x_0_2", "tree": "abs(((n)**2 mul (n add abs(relu(x_0_2)))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 + 7 - 9 + 9 - 10 + 10 - 11 + 11 - 12 + 12 - 13 + 13 - 14 + 14 - 15 + 15 - 16 + 16 - 17 + 17 - 18 + 18", "x2": "sub idiv abs x_0_2 mul x_0_1 INT- 1 x_0_1", "tree": "((abs(x_0_2) idiv (x_0_1 mul -1)) sub x_0_1)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 11 + 14 + 19 + 26 + 35 + 46 + 59 + 74 + 91 + 110 + 131 + 154 + 179 + 206 + 235 + 266 + 299 + 334 + 371 + 410", "x2": "add INT+ 9 add sqr n abs INT+ 1", "tree": "(9 add ((n)**2 add abs(1)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 1 - 10 - 4 - 4 + 8 + 7 + 7 + 0 + 3 + 3 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign mod INT+ 4 add idiv INT+ 4 sign x_0_11 sub INT- 2 x_0_11", "tree": "sign((4 mod ((4 idiv sign(x_0_11)) add (-2 sub x_0_11))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 9 - 8 + 4 - 5 - 1 - 5 - 4 + 79 + 80 + 51 + 65 + 23 + 77 + 69 + 1201 + 1297 + 885 + 1189 + 457 + 1561 + 1471 + 2 6445 + 2 9855 + 2 1265", "x2": "add abs sub sign INT- 1 0 mul x_0_7 n n", "tree": "(abs((sign(-10) sub (x_0_7 mul n))) add n)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 10 + 5 - 5 - 8 + 7 + 10 - 10 - 3 + 4 + 63 - 90 + 45 - 45 - 72 + 63 + 90 - 90 - 27 + 36 + 567 - 810 + 405 - 405 - 648 + 567 + 810", "x2": "mul x_0_10 mod INT+ 9 sqr sqr INT- 8", "tree": "(x_0_10 mul (9 mod ((-8)**2)**2))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 2 - 7 + 6 - 6 + 5 + 0 - 8 - 191 + 1 - 857 - 329 - 4901 - 2261 - 2 9453 - 1 3229 - 16 7597 - 7 9469 - 96 4493 - 46 1069 - 555 1757 - 265 7933 - 3189 6845 - 1531 2653 - 1 8333 6461", "x2": "sub INT+ 7 mul INT+ 6 add relu INT- 6 sub add mul x_0_8 INT+ 8 INT+ 9 x_0_2", "tree": "(7 sub (6 mul (relu(-6) add (((x_0_8 mul 8) add 9) sub x_0_2))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000", "x2": "relu abs mul x_0_1 mul INT- 1 n", "tree": "relu(abs((x_0_1 mul (-1 mul n))))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 8 - 7 - 9 - 7 + 8 - 9 + 4 - 4 - 8 - 6 - 3 + 78 + 196 + 150 - 880 - 2074 - 2664 + 1 6891 + 4 1400 + 5 6028 - 36 1328 - 93 8630 - 132 6648 + 903 1250 + 2439 9284 + 3581 5446 - 2 8784 - 7 700 5703", "x2": "mul sub relu mod add x_0_10 sub sqr n n x_0_3 add x_0_12 x_0_3 n", "tree": "((relu(((x_0_10 add ((n)**2 sub n)) mod x_0_3)) sub (x_0_12 add x_0_3)) mul n)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "+ 2 + 4 - 6 + 2 + 4 - 6 + 2 + 4 - 6 + 2 + 4 - 6 + 2 + 4 - 6 + 2 + 4 - 6 + 2 + 4", "x2": "add x_0_3 relu mod sqr n INT- 7", "tree": "(x_0_3 add relu(((n)**2 mod -7)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 + 10 - 3 + 2 - 2 + 10 + 4 + 6 - 3 - 10 - 1 + 12 - 3 + 4 + 0 + 12 + 4 + 6 - 1 - 8 + 1 + 14 - 1 + 6 + 2 + 14 + 6", "x2": "add x_0_10 mod INT+ 2 sub add x_0_8 add INT- 4 n x_0_11", "tree": "(x_0_10 add (2 mod ((x_0_8 add (-4 add n)) sub x_0_11)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 7 + 0 + 8 + 0 - 49 - 8 + 56 + 49 - 335 - 112 + 343 + 678 - 2233 - 1127 + 1723 + 6979 - 1 4504 - 9612 + 5082 + 6 3357 - 9 1916", "x2": "sub mul INT+ 7 x_0_4 x_0_3", "tree": "((7 mul x_0_4) sub x_0_3)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 8 - 6 - 5 - 6 + 8 - 6 + 50 + 446 + 4 + 8 + 6 + 67 + 12 + 176 + 2808 + 4 7730 + 85 9127 + 1632 3401 + 3 2646 8004 + 68 5582 8069 + 1508 2821 7506 + 3 4690 4900 2630 + 83 2571 7606 3103", "x2": "abs add mul n mul x_0_1 idiv idiv INT- 1 0 abs abs x_0_7 x_0_7 mod x_0_5 n", "tree": "abs(((n mul (x_0_1 mul ((-10 idiv abs(abs(x_0_7))) idiv x_0_7))) add (x_0_5 mod n)))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 1296 + 648 + 432 + 324 + 259 + 216 + 185 + 162 + 144 + 129 + 117 + 108 + 99 + 92 + 86 + 81 + 76", "x2": "idiv sqr relu sqr INT+ 6 n", "tree": "((relu((6)**2))**2 idiv n)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 9 + 8 + 8 + 14 + 16 + 16 + 17 + 24 + 27 + 28 + 30 + 38 + 42 + 44 + 47 + 56 + 61 + 64 + 68", "x2": "add idiv x_0_4 idiv n n n", "tree": "((x_0_4 idiv (n idiv n)) add n)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 4 - 9 + 3 - 9 + 1 + 40 + 117 - 30 + 99 + 1 - 400 - 962 + 300 - 902 + 890 + 4864 + 1 2765 + 4611 + 1 1152 - 7884 - 4 2439 - 8 6632", "x2": "sub mod sqr mul abs x_0_5 mod n x_0_3 abs sub n x_0_1 mul INT+ 1 0 x_0_5", "tree": "((((abs(x_0_5) mul (n mod x_0_3)))**2 mod abs((n sub x_0_1))) sub (10 mul x_0_5))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 7 - 1 + 7 + 4 - 3 + 4 + 7 + 8 + 11 + 8 + 8 + 11 + 11 + 8 + 8 + 8 + 11 + 11 + 8 + 8 + 11 + 11 + 11", "x2": "add sqr idiv sub x_0_7 add sign sub sign INT- 7 x_0_2 n x_0_2 INT+ 7", "tree": "((((x_0_7 sub (sign((sign(-7) sub x_0_2)) add n)) idiv x_0_2))**2 add 7)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 8 + 9 - 6 - 3 - 3 + 2 - 9 - 1 - 64 - 81 - 36 - 9 - 9 - 4 - 81 - 1 - 4096 - 6561 - 1296 - 81 - 81 - 16 - 6561 - 1", "x2": "mul sqr x_0_8 sign sign INT- 1 0", "tree": "((x_0_8)**2 mul sign(sign(-10)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 10 - 10 - 7 + 15 + 6 + 4 + 16 + 30 + 20 + 31 + 58 + 63 + 65 + 104 + 137 + 145 + 187 + 260 + 302 + 353", "x2": "sub n sub sub n add x_0_4 abs x_0_3 n", "tree": "(n sub ((n sub (x_0_4 add abs(x_0_3))) sub n))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 6 + 3 + 4 - 2 - 7 - 2 - 1 + 13 + 1 + 6 + 3 + 1 + 3 + 1 + 7 + 12 + 5 + 7 + 2 + 11 + 5 + 6 + 10 + 9", "x2": "add abs sub add add relu INT- 8 relu INT+ 6 x_0_8 x_0_1 mod mul sqr x_0_3 INT- 9 x_0_5", "tree": "(abs((((relu(-8) add relu(6)) add x_0_8) sub x_0_1)) add (((x_0_3)**2 mul -9) mod x_0_5))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 10 + 0 - 7 + 3 + 10 + 0 + 8 + 3 + 10 + 0 + 8 + 3 + 10 + 0 + 8 + 3 + 10 + 0 + 8 + 3", "x2": "mod x_0_4 add n INT+ 7", "tree": "(x_0_4 mod (n add 7))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 8 + 1 + 3 + 7 + 16 + 29 + 50 + 81 + 123 + 180 + 256 + 352 + 474 + 625 + 809 + 1031 + 1296 + 1608", "x2": "idiv sqr sqr n sqr add mod x_0_2 sign n INT- 9", "tree": "(((n)**2)**2 idiv (((x_0_2 mod sign(n)) add -9))**2)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 + 2 - 2 - 4 - 3 + 5 + 7 + 5 + 0 + 0 + 0 + 0 + 0 + 4 + 1 + 1 + 0 + 0 + 0 + 0 + 0 + 2 + 0 + 0 + 0", "x2": "relu mod n x_0_8", "tree": "relu((n mod x_0_8))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 1 + 5 + 55 + 125 + 216 + 318 + 443 + 675 + 829 + 1015 + 1692 + 2181 + 2741 + 2358 + 3418 + 2878 + 5724 + 4883 + 5410", "x2": "sub mul mul n sqr n INT+ 1 abs mod mul INT+ 9 x_0_2 x_0_3", "tree": "(((n mul (n)**2) mul 1) sub abs(((9 mul x_0_2) mod x_0_3)))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 4 + 4 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9", "x2": "mod abs add mul x_0_2 mul n INT- 1 0 relu x_0_1 n", "tree": "(abs(((x_0_2 mul (n mul -10)) add relu(x_0_1))) mod n)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 3 + 4 + 7 - 7 - 7 + 1 - 1 + 2 - 9 + 1089 + 3 2400 + 1 3689 + 9604 + 10 8900 + 13 5424 + 7 3984 + 11 6964 + 10 4329 + 33 6400 + 5 301 5184 + 5073 9408 3856 + 987 9580 5124 + 528 6320 6400 + 7 4086 351 5625 + 12 3928 5004 1104 + 3 9873 6599 1921", "x2": "sqr mul sub x_0_10 abs n n", "tree": "(((x_0_10 sub abs(n)) mul n))**2", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 9 - 1 - 1 - 4 + 0 + 0 + 1 + 0 + 0 + 0 + 8 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 8 + 0 + 0", "x2": "abs mod mul x_0_4 mod n INT+ 2 INT- 9", "tree": "abs(((x_0_4 mul (n mod 2)) mod -9))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 + 7 - 6 + 8 - 7 + 9 - 8 + 10 - 9 + 11 - 10 + 12 - 11 + 13 - 12 + 14 - 13 + 15", "x2": "add idiv sign mul abs INT- 1 INT- 2 mul n x_0_1 sub INT+ 2 x_0_1", "tree": "((sign((abs(-1) mul -2)) idiv (n mul x_0_1)) add (2 sub x_0_1))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 8 + 3 + 18 + 8 - 6 + 5 + 20 + 10 - 4 + 7 + 22 + 12 - 2 + 9 + 24 + 14 + 0 + 11 + 26", "x2": "sub add INT+ 7 n x_0_2", "tree": "((7 add n) sub x_0_2)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 6 + 0 - 3 - 2 + 6 + 11 + 8 + 11 + 12 + 5 + 7 + 9 + 7 + 9 + 13 + 11 + 12 + 14 + 14 + 12 + 16", "x2": "add idiv mul x_0_5 x_0_1 sub idiv INT+ 5 INT- 8 n n", "tree": "(((x_0_5 mul x_0_1) idiv ((5 idiv -8) sub n)) add n)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 7 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859", "x2": "mul mul relu n relu n mod n abs x_0_2", "tree": "((relu(n) mul relu(n)) mul (n mod abs(x_0_2)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 4 - 88 - 1772 - 3 5456 - 70 9140 - 1418 2824 - 2 8365 6508 - 56 7313 192 - 1134 6260 3876 - 2 2692 5207 7560 - 45 3850 4155 1244 - 907 7008 3102 4928 - 1 8154 166 2049 8612 - 36 3080 3324 997 2296 - 726 1606 6481 9944 5980 - 1 4523 2132 9639 8891 9664 - 29 464 2659 2797 7839 3348 - 580 9285 3185 5955 6786 7032", "x2": "mul add n mul x_0_1 INT- 5 INT- 4", "tree": "((n add (x_0_1 mul -5)) mul -4)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 - 2 + 3 + 5 + 1 + 576 + 625 + 900 + 1024 + 784 + 36 3609 + 42 5104 + 85 9329 + 110 4601 + 65 7721 + 1322 3114 496 + 1807 3636 7161 + 7384 9273 4736 + 1 2202 301 8384 + 4326 3243 1504 + 174 8507 4524 133 7271 3529 + 326 6563 4424 3155 6302 7344", "x2": "sqr add relu mul INT- 9 INT- 3 x_0_5", "tree": "((relu((-9 mul -3)) add x_0_5))**2", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 16 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr abs mul idiv n sqr abs idiv INT- 1 relu INT+ 3 idiv INT- 3 n", "tree": "(abs(((n idiv (abs((-1 idiv relu(3))))**2) mul (-3 idiv n))))**2", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 6 + 10 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign mul x_0_3 add INT+ 7 idiv idiv n abs n idiv x_0_2 INT+ 8", "tree": "sign((x_0_3 mul (7 add ((n idiv abs(n)) idiv (x_0_2 idiv 8)))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 3 + 9 + 1 + 3 + 2 + 1 + 3 + 2 + 1 + 3 + 2 + 1 + 3 + 2 + 1 + 3 + 2 + 1 + 3", "x2": "mod x_0_3 abs add n x_0_2", "tree": "(x_0_3 mod abs((n add x_0_2)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 5 - 2 - 4 - 1 - 4 - 1 - 2 + 0 + 0 - 8 - 5 - 5 - 4 - 3 - 3 - 2 - 1 + 0", "x2": "add relu abs idiv x_0_1 idiv n INT- 4 mod n INT- 9", "tree": "(relu(abs((x_0_1 idiv (n idiv -4)))) add (n mod -9))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 7 - 1 + 8 + 2 - 1 - 9 + 3 - 10 - 1 - 9 + 3 - 9 - 1 - 9 + 3 - 8 - 1 - 9 + 2 - 8 - 1 - 9 + 2 - 7 - 1", "x2": "sub x_0_4 idiv mul mod mod sub INT+ 4 abs x_0_9 x_0_4 INT- 3 mod n x_0_5 INT+ 9", "tree": "(x_0_4 sub (((((4 sub abs(x_0_9)) mod x_0_4) mod -3) mul (n mod x_0_5)) idiv 9))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 5 - 5 + 7 - 4 - 6 + 6 + 8 - 5 - 5 - 3 + 4 + 4 - 7 + 4 + 5 - 7 - 9 + 5 + 5 + 2 - 4 - 4 + 6 - 5 - 5 + 7", "x2": "sub idiv idiv x_0_7 n n x_0_10", "tree": "(((x_0_7 idiv n) idiv n) sub x_0_10)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 4 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 3 + 8 - 12 + 20 + 60 - 220 + 20 + 60 - 220 + 20 + 60 - 220 + 20 + 60 - 220 + 20 + 60 - 220", "x2": "mul sign x_0_2 mul sub relu x_0_1 INT+ 5 INT- 4", "tree": "(sign(x_0_2) mul ((relu(x_0_1) sub 5) mul -4))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 + 7 - 7 + 6 + 5 + 17 + 2 + 15 + 14 + 26 + 11 + 24 + 23 + 35 + 20 + 33 + 32 + 44 + 29 + 42 + 41", "x2": "add INT+ 9 sub x_0_4 mul idiv mod mod n x_0_4 INT+ 5 x_0_3 sign INT+ 8", "tree": "(9 add (x_0_4 sub ((((n mod x_0_4) mod 5) idiv x_0_3) mul sign(8))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 4 - 7 + 10 - 3 - 6 + 4 + 7 - 3 - 6 + 4 + 7 - 3 - 6 + 4 + 7 - 3 - 6 + 4 + 7 - 3 - 6 + 4", "x2": "sub sqr sign x_0_6 x_0_2", "tree": "((sign(x_0_6))**2 sub x_0_2)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 5 - 8 + 7 + 8 - 23 + 13 - 31 + 15 - 40 + 18 - 48 + 21 - 56 + 24 - 64 + 27 - 72 + 30 - 80 + 33 - 88", "x2": "idiv mul add idiv n x_0_5 mul INT- 6 n n x_0_1", "tree": "((((n idiv x_0_5) add (-6 mul n)) mul n) idiv x_0_1)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 25 + 25 + 45 + 25 + 25 + 45 + 55 + 25 + 45 + 35 + 25 + 45 + 65 + 55 + 45 + 45 + 55", "x2": "sub mod mul INT- 8 mul n INT+ 5 sub x_0_1 INT- 5 mul INT+ 5 INT- 5", "tree": "(((-8 mul (n mul 5)) mod (x_0_1 sub -5)) sub (5 mul -5))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 - 9 - 5 + 9 - 9 - 1 - 2 + 1 - 1 - 9 - 5 + 9 - 9 - 1 - 2 + 1 - 1 - 9 - 5 + 9", "x2": "idiv INT+ 9 x_0_4", "tree": "(9 idiv x_0_4)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 + 3 + 2 - 9 - 2 - 9 - 3 + 1 - 10 - 3 - 10 - 4 + 0 - 11 - 4 - 11 - 5 - 1 - 12 - 5 - 12 - 6 - 2 - 13", "x2": "sub x_0_5 relu sign add sqr sign INT- 6 mod x_0_7 n", "tree": "(x_0_5 sub relu(sign(((sign(-6))**2 add (x_0_7 mod n)))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "mul n mod n add sqr sign n n", "tree": "(n mul (n mod ((sign(n))**2 add n)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 10 - 2 - 4 - 10 - 20 - 30 - 100 - 90 - 300 - 270 - 900 - 810 - 2700 - 2430 - 8100 - 7290 - 2 4300 - 2 1870 - 7 2900 - 6 5610", "x2": "mul x_0_2 add INT+ 4 sign mod n mul x_0_4 sign n", "tree": "(x_0_2 mul (4 add sign((n mod (x_0_4 mul sign(n))))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 2 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign mul mul sign n x_0_2 x_0_1", "tree": "sign(((sign(n) mul x_0_2) mul x_0_1))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 9 + 11 - 20 + 31 - 51 + 82 - 133 + 215 - 348 + 563 - 911 + 1474 - 2385 + 3859 - 6244 + 1 103 - 1 6347 + 2 6450", "x2": "sub x_0_2 x_0_1", "tree": "(x_0_2 sub x_0_1)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 + 3 + 4 - 5 + 3 + 4 - 5 + 3 + 4 - 5 + 3 + 4 - 5 + 3 + 4 - 5 + 3 + 4 - 5 + 3", "x2": "add n add x_0_3 idiv abs n sign INT- 5", "tree": "(n add (x_0_3 add (abs(n) idiv sign(-5))))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 9 - 5 - 4 - 10 + 10 + 10 - 4 + 4 + 4 + 15 + 12 + 22 + 26 + 16 + 21 + 26 + 21 + 27 + 12 + 20 + 4 + 2 + 7 + 16 + 16", "x2": "abs sub add add idiv x_0_3 INT- 8 x_0_9 INT- 2 x_0_2", "tree": "abs(((((x_0_3 idiv -8) add x_0_9) add -2) sub x_0_2))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 7 - 9 + 10 - 5 - 6 + 8 - 9 + 4 + 5 - 7 + 8 - 3 - 4 + 6 - 7 + 2 + 3 - 5 + 6 - 1", "x2": "sub sign sign x_0_4 x_0_4", "tree": "(sign(sign(x_0_4)) sub x_0_4)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 7 - 10 - 10 + 7 - 7 + 3 + 8 + 3 - 8 - 1 + 3 + 0 + 4 + 0 + 2 + 3 + 2 + 3 + 0 + 2 + 0 + 0 + 0 + 0 + 2 + 1 + 2", "x2": "mod relu mod x_0_10 abs x_0_9 mod add sign x_0_6 INT- 6 sqr abs INT- 7", "tree": "(relu((x_0_10 mod abs(x_0_9))) mod ((sign(x_0_6) add -6) mod (abs(-7))**2))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 7 + 3 + 5 + 7 + 10 + 13 + 17 + 21 + 26 + 31 + 37 + 43 + 50 + 57 + 65 + 73 + 82 + 91 + 101", "x2": "add mod x_0_2 x_0_1 n", "tree": "((x_0_2 mod x_0_1) add n)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272", "x2": "sub mul n n relu n", "tree": "((n mul n) sub relu(n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 + 4 - 1 + 2 + 4 + 4 + 1 + 2 + 4 + 4 + 1 + 2 + 4 + 4 + 1 + 2 + 4 + 4 + 1 + 2", "x2": "abs sub relu INT- 3 x_0_4", "tree": "abs((relu(-3) sub x_0_4))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000 + 6 5383 7184 0 + 104 6139 4944 0 + 1778 4371 4048 0 + 3 2011 8685 2864 0", "x2": "mul x_0_1 n", "tree": "(x_0_1 mul n)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 1 - 7 - 6 - 7 + 9 + 36 + 1 + 9 + 9 + 81 + 0 + 1 + 81 + 81 + 1 + 0 + 1 + 25 + 1 + 1 + 0", "x2": "sqr mod x_0_5 n", "tree": "((x_0_5 mod n))**2", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 6 + 4 - 5 - 1 - 420 - 294 - 392 + 420 + 105 + 4 7040 + 3 870 + 5 2136 - 4 1160 - 1 5435 - 625 6320 - 475 3980 - 839 3896 + 633 8640 + 280 9170 + 9 1967 9040 + 9 3178 80", "x2": "mul mul INT- 7 x_0_5 sub n mod sqr n INT- 7", "tree": "((-7 mul x_0_5) mul (n sub ((n)**2 mod -7)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 8 - 6 - 7 + 5 - 7 + 8 + 8 + 58 + 29 + 5 + 18 + 8 + 8 + 58 + 29 + 5 + 18 + 8 + 8 + 58 + 29 + 5 + 18", "x2": "mod x_0_6 sqr idiv x_0_7 sign relu x_0_7", "tree": "(x_0_6 mod ((x_0_7 idiv sign(relu(x_0_7))))**2)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 - 8 + 10 - 9 + 16 - 12 + 18 - 20 + 29 - 26 + 38 - 10 + 45 + 3 + 45 - 9 + 31 - 28 + 40 - 36 + 25", "x2": "add mul idiv x_0_4 INT+ 3 mod mod sqr add x_0_3 n n INT- 5 sub x_0_2 mod n x_0_1", "tree": "(((x_0_4 idiv 3) mul ((((x_0_3 add n))**2 mod n) mod -5)) add (x_0_2 sub (n mod x_0_1)))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 3 + 6 + 8 + 5 - 7 - 15 - 3 + 17 + 17 + 5 - 51 - 51 - 3 + 17 + 17 + 5 - 51 - 51 - 3 + 17", "x2": "mod add abs INT+ 7 INT+ 1 0 mul x_0_3 INT- 4", "tree": "((abs(7) add 10) mod (x_0_3 mul -4))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 0 + 4 + 10 + 2 + 5 + 7 - 24 + 9 - 30 - 99 - 12 - 52 - 84 + 375 - 128 + 527 + 1800 + 247 + 1060 + 1785 - 8228 + 2967 - 1 2624", "x2": "sub n mul n x_0_7", "tree": "(n sub (n mul x_0_7))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 5 - 1 + 7 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 6 - 5 + 9 - 10 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 0 + 9 + 0 + 0 + 0", "x2": "relu add x_0_5 relu mul abs relu x_0_1 x_0_2", "tree": "relu((x_0_5 add relu((abs(relu(x_0_1)) mul x_0_2))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 - 10 + 3 - 1 + 8 + 2 + 0 + 6 + 7 + 9 + 11 + 12 + 13 + 11 + 13 + 15 + 15 + 15 + 17 + 19 + 17 + 22 + 22 + 21", "x2": "add n mod relu abs mul INT- 3 add x_0_7 n add INT- 5 mul relu sub INT+ 5 n x_0_3", "tree": "(n add (relu(abs((-3 mul (x_0_7 add n)))) mod (-5 add (relu((5 sub n)) mul x_0_3))))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 10 + 7 + 6 + 4 + 2 + 7 + 2 + 5 + 8 + 4 + 10 + 8 + 6 + 11 + 6 + 9 + 12 + 8 + 14 + 12", "x2": "sub n mod relu x_0_4 n", "tree": "(n sub (relu(x_0_4) mod n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 8 - 1 + 0 - 4 + 33 + 13 + 15 + 9 - 4 + 22 - 11 - 24 - 47 - 79 - 74 - 130 - 168 - 218 - 279 - 305 - 394", "x2": "sub x_0_5 mul n sub n INT+ 1 0", "tree": "(x_0_5 sub (n mul (n sub 10)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 1 - 6 - 9 + 16 + 1 + 36 + 81 + 256 + 1 + 1296 + 6561 + 6 5536 + 1 + 167 9616 + 4304 6721 + 42 9496 7296 + 1 + 2 8211 990 7456 + 1853 201 8885 1841 + 1844 6744 737 955 1616", "x2": "mul sign INT+ 6 sqr x_0_4", "tree": "(sign(6) mul (x_0_4)**2)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 1 + 3 + 2 + 7 + 7 + 13 + 14 + 21 + 23 + 31 + 34 + 43 + 47 + 57 + 62 + 73 + 79 + 91", "x2": "sub x_0_2 sub sqr sign mul relu x_0_2 INT- 3 relu n", "tree": "(x_0_2 sub ((sign((relu(x_0_2) mul -3)))**2 sub relu(n)))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 - 10 - 2 - 6 - 2 + 12 - 7 + 3 - 6 + 8 - 6 + 28 - 27 + 40 - 36 + 56 - 50 + 92 - 105 + 161 - 181 + 255", "x2": "add n sub sub INT- 6 sub idiv sqr INT- 4 x_0_1 x_0_6 x_0_1", "tree": "(n add ((-6 sub (((-4)**2 idiv x_0_1) sub x_0_6)) sub x_0_1))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 8 - 1 - 4 - 5 + 0 + 1 + 4 + 0 + 9 + 10 + 5 + 529 + 1 + 1 + 1 + 1 + 1 + 4 + 121 + 1 + 676 + 841 + 196 + 251 5396 + 4 + 4 + 4 + 4", "x2": "sqr sub mul abs INT- 3 relu x_0_12 sign sqr n", "tree": "(((abs(-3) mul relu(x_0_12)) sub sign((n)**2)))**2", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "- 6 + 5 - 10 + 4 + 15 + 0 + 14 + 25 + 10 + 24 + 35 + 20 + 34 + 45 + 30 + 44 + 55 + 40 + 54 + 65", "x2": "add INT+ 9 add x_0_3 sqr sign n", "tree": "(9 add (x_0_3 add (sign(n))**2))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 9 - 178 - 574 - 3 1148 - 18 5974 - 1678 8770 - 1 712 1022 - 135 9890 3698 - 1606 8153 2998 - 24 6820 1021 1868 - 485 9009 5578 5950 - 10 110 2334 1933 6606 - 238 914 6833 5115 4998 - 4 544 6445 3483 1325 4298 - 103 6174 701 9442 2655 1294 - 2 3434 8045 4113 2506 984 2438 - 104 733 2361 327 8114 8119 6934 - 2 7917 8826 4985 1154 5150 5296 3892", "x2": "add INT+ 2 mul mul add n mod mod sub n INT+ 4 idiv x_0_2 abs INT- 2 n x_0_2 mul n n", "tree": "(2 add (((n add (((n sub 4) mod (x_0_2 idiv abs(-2))) mod n)) mul x_0_2) mul (n mul n)))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 2 + 1 - 9 - 3 + 63 + 18 - 45 - 108 + 135 + 594 + 54 - 648 - 729 + 2268 + 5427 - 567 - 6939 - 3348 + 2 7729 + 4 8114 - 1 3635", "x2": "mul add x_0_5 mul relu add INT+ 1 INT+ 2 idiv x_0_4 n INT+ 9", "tree": "((x_0_5 add (relu((1 add 2)) mul (x_0_4 idiv n))) mul 9)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 2 - 15 - 76 - 405 - 2466 - 1 7311 - 13 8552 - 124 7049 - 1247 590 - 1 3717 6611 - 16 4611 9476 - 213 9955 3357 - 2995 9374 7194 - 4 4939 620 8135 - 71 9024 9933 416 - 1222 3424 8861 7361 - 2 2002 1647 9511 2822", "x2": "mul sub x_0_1 n n", "tree": "((x_0_1 sub n) mul n)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 + 2 - 1 - 6 + 1 - 4 - 2 - 6 + 7 - 2 + 7 + 10 + 7 - 17 + 6 - 6 - 13 - 8 + 13 - 4 + 7 + 12 + 8 - 15 + 7 - 7", "x2": "sub sub idiv sub idiv x_0_2 INT- 4 x_0_3 x_0_9 idiv x_0_5 add idiv INT- 2 sign sign n n x_0_5", "tree": "(((((x_0_2 idiv -4) sub x_0_3) idiv x_0_9) sub (x_0_5 idiv ((-2 idiv sign(sign(n))) add n))) sub x_0_5)", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 7 + 7 + 5 - 2 - 8 + 4 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mul mul relu sub INT+ 1 idiv n x_0_6 x_0_3 n", "tree": "sign(((relu((1 sub (n idiv x_0_6))) mul x_0_3) mul n))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 128 + 3072 + 9 8304 + 393 2160 + 1 8874 3680 + 105 6964 6080 + 6764 5734 9120 + 48 7049 2913 6640 + 3896 3943 3093 1200 + 34 2882 7011 2194 5600 + 3291 6739 3077 677 7600 + 34 2334 888 15 487 400 + 3834 1417 9456 1685 4548 4800 + 46 97 153 4740 2254 5817 6000 + 5889 2417 9644 6748 8586 4652 8000 + 80 936 8843 1675 7844 7759 2780 8000 + 1 1533 4911 3416 1312 9647 7336 435 2000", "x2": "abs add sub n n mul x_0_1 idiv sub relu n mul relu n INT+ 9 sign n", "tree": "abs(((n sub n) add (x_0_1 mul ((relu(n) sub (relu(n) mul 9)) idiv sign(n)))))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 2 + 3 - 5 + 0 + 2 + 0 - 25 - 100 - 71 - 177 - 145 - 144 - 197 - 601 - 1857 - 1497 - 3511 - 3117 - 3281 - 4579 - 1 3707 - 4 3241 - 3 6505", "x2": "add mul n sub x_0_7 n INT- 1", "tree": "((n mul (x_0_7 sub n)) add -1)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 10 + 9 + 0 + 10 - 4 - 4 + 2 + 0 - 10 - 1 - 16 - 17 - 12 - 15 - 26 - 18 - 34 - 36 - 32 - 36 - 48 - 41", "x2": "sub mul x_0_6 sign idiv n n n", "tree": "((x_0_6 mul sign((n idiv n))) sub n)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 46 + 154 + 334 + 586 + 910 + 1306 + 1774 + 2314 + 2926 + 3610 + 4366 + 5194 + 6094 + 7066 + 8110 + 9226 + 1 414", "x2": "add sqr mul INT- 6 n INT+ 1 0", "tree": "(((-6 mul n))**2 add 10)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 9 + 0 + 5 - 15 - 12 + 2 + 18 + 2 - 29 - 32 + 14 + 47 + 5 - 75 - 69 + 52 + 125 - 1 - 196 - 146", "x2": "sub sub sign sub idiv INT- 1 sqr abs add INT+ 1 0 n x_0_4 n add x_0_3 x_0_2", "tree": "((sign(((-1 idiv (abs((10 add n)))**2) sub x_0_4)) sub n) sub (x_0_3 add x_0_2))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 45 + 34 + 25 + 18 + 13 + 10 + 9 + 10 + 13 + 18 + 25 + 34 + 45 + 58 + 73 + 90 + 109", "x2": "add sqr sub add INT- 1 0 n INT- 3 abs INT+ 9", "tree": "((((-10 add n) sub -3))**2 add abs(9))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 7 - 19 - 2 + 10 - 7 - 19 - 2 + 10 - 7 - 19 - 2 + 10 - 7 - 19 - 2 + 10 - 7 - 19", "x2": "sub INT- 8 add x_0_2 sign add sqr abs x_0_2 INT- 1", "tree": "(-8 sub (x_0_2 add sign(((abs(x_0_2))**2 add -1))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 7 - 5 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign sign idiv n mod idiv x_0_2 INT+ 9 n", "tree": "sign(sign((n idiv ((x_0_2 idiv 9) mod n))))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr add INT+ 8 n", "tree": "((8 add n))**2", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 + 6 + 0 + 0 - 5 - 6 + 96 + 106 + 100 + 100 + 95 + 94 + 196 + 206 + 200 + 200 + 195 + 194 + 296 + 306 + 300 + 300 + 295", "x2": "add sqr add mod n n INT- 1 0 x_0_6", "tree": "((((n mod n) add -10))**2 add x_0_6)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 1 - 3 - 8 - 6 - 3 - 4 + 10 - 3 - 63 - 100 - 199 - 334 - 574 - 956 - 1581 - 2606 - 4247 - 6857 - 1 1075 - 1 7808 - 2 8628 - 4 5945 - 7 3704 - 11 8159 - 18 9352", "x2": "sub mod INT+ 7 mul INT- 5 n add abs add x_0_1 add INT+ 2 add x_0_2 n x_0_9", "tree": "((7 mod (-5 mul n)) sub (abs((x_0_1 add (2 add (x_0_2 add n)))) add x_0_9))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 1 + 7 + 5 + 7 + 15 + 6 + 42 + 24 + 216 + 60 + 660 + 864 + 1 1232 + 2016 + 3 240 + 2 3040 + 39 1680 + 28 5120 + 541 7280 + 357 1200 + 7499 5200", "x2": "mul relu mod x_0_1 add abs abs x_0_2 x_0_4 n", "tree": "(relu((x_0_1 mod (abs(abs(x_0_2)) add x_0_4))) mul n)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 3 + 2 + 0 + 96 + 125 + 3672 + 6468 + 23 5520 + 52 4637 + 2355 3000 + 6348 2408 + 33 9163 3728 + 107 2852 9149 + 6647 6021 3432 + 2 4139 1906 1900 + 170 1786 1464 2688 + 697 6226 889 4013 + 5 5137 8711 4423 6744 + 25 1841 7618 1074 5552", "x2": "mul n mul n add n x_0_2", "tree": "(n mul (n mul (n add x_0_2)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 9 + 4 - 6 + 8 - 1 + 14 + 6 + 22 + 15 + 32 + 26 + 44 + 39 + 58 + 54 + 74 + 71 + 92 + 90", "x2": "add abs relu idiv n INT- 1 0 add n x_0_2", "tree": "(abs(relu((n idiv -10))) add (n add x_0_2))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 - 6 - 9 - 8 - 7 - 6 - 9 - 8 - 7 - 6 - 9 - 8 - 7 - 6 - 9 - 8 - 7", "x2": "add INT- 6 mod add add add INT- 1 n INT- 4 INT+ 7 INT- 4", "tree": "(-6 add ((((-1 add n) add -4) add 7) mod -4))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 + 1 + 10 + 5 + 6 + 4 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr mul sign n sub n abs sign idiv sign add INT- 1 0 INT- 7 sub n x_0_6", "tree": "((sign(n) mul (n sub abs(sign((sign((-10 add -7)) idiv (n sub x_0_6)))))))**2", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 4 - 4 + 7 + 5 - 8 - 8 + 14 + 10 - 16 - 16 + 28 + 20 - 32 - 32 + 56 + 40 - 64 - 64 + 112 + 80 - 128", "x2": "mul x_0_4 INT+ 2", "tree": "(x_0_4 mul 2)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 + 10 - 3 + 900 + 0 + 324 + 0 + 4 + 0 + 16 + 0 + 36 + 0 + 64 + 0 + 100 + 0 + 144 + 0 + 196", "x2": "sqr relu sub add n INT- 6 mul x_0_3 n", "tree": "(relu(((n add -6) sub (x_0_3 mul n))))**2", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 2 + 2 + 8 + 1 + 1 + 7 + 0 + 0 + 2 + 10 + 1 + 1 + 9 + 0 + 0 + 7 + 17 + 1 + 6", "x2": "abs sub x_0_3 mod sign idiv INT+ 6 sqr x_0_2 n", "tree": "abs((x_0_3 sub (sign((6 idiv (x_0_2)**2)) mod n)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 4 - 8 + 1 - 7 + 0 - 1 + 2 - 4 - 8 - 59 - 7 + 0 - 1 - 82 - 4 - 8 - 59 - 7 + 0 - 1 - 82 - 4 - 8 - 59", "x2": "mod x_0_7 mul INT- 6 n", "tree": "(x_0_7 mod (-6 mul n))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 3 - 4 - 1 - 9 + 1 + 6724 + 1296 + 2304 + 484 + 1 2321 + 576 + 76 4295 5776 + 3 2964 336 + 11 9522 3184 + 6015 5536 + 438 7726 1961 + 1 774 4400 + 210 8773 3054 2801 1397 9536 + 4346 5100 6055 451 9824 + 6 2999 4281 2732 4663 9376 + 175 1445 2713 261 4416 + 1 184 3826 8019 9613 4076 3225", "x2": "sqr add add add INT- 1 abs mul x_0_6 n INT+ 5 INT+ 8", "tree": "((((-1 add abs((x_0_6 mul n))) add 5) add 8))**2", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 6 - 7 + 7 + 10 + 8 + 7 - 1 - 4 + 19 + 44 + 56 + 66 + 79 + 94 + 118 + 146 + 152 + 134 + 105 + 67 + 17 - 47 - 134 - 248 - 367", "x2": "add add add sub n x_0_8 sign n x_0_1 INT+ 7", "tree": "((((n sub x_0_8) add sign(n)) add x_0_1) add 7)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 1 - 4 - 8 - 4 + 5 + 3 + 0 + 5 + 15 + 14 + 12 + 18 + 29 + 29 + 28 + 35 + 47 + 48 + 48 + 56 + 69 + 71 + 72 + 81 + 95 + 98 + 100 + 110 + 125 + 129 + 132 + 143", "x2": "add x_0_4 n", "tree": "(x_0_4 add n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 - 5 - 9 - 15 - 23 - 33 - 45 - 59 - 75 - 93 - 113 - 135 - 159 - 185 - 213 - 243 - 275 - 309 - 345 - 383 - 423 - 465 - 509 - 555 - 603 - 653 - 705 - 759 - 815", "x2": "sub sub n INT+ 3 abs sqr n", "tree": "((n sub 3) sub abs((n)**2))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 + 8 + 7 - 4 + 6 + 4 + 5 - 4 - 1 - 1 + 4 + 5 + 2 + 1 + 1 + 4 + 8 + 2 + 2 + 1 + 4 + 10 + 4 + 2 + 1 + 4 + 10 + 12 + 2 + 1 + 4 + 10 + 18 + 14 + 11 + 12 + 10 + 26 + 36", "x2": "abs add mod mul relu mod sub n mul INT- 4 mod INT+ 6 n n x_0_10 x_0_1 x_0_5", "tree": "abs((((relu(((n sub (-4 mul (6 mod n))) mod n)) mul x_0_10) mod x_0_1) add x_0_5))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 6 + 9 + 3 + 4 - 1 - 10 + 10 - 37 - 82 - 10 - 17 - 2 - 101 - 101 - 1370 - 6725 - 101 - 290 - 5 - 1 202 - 1 202 - 187 6901 - 4522 5626 - 1 202 - 8 4101 - 26 - 1 408 805 - 1 408 805 - 3 5227 5736 3802 - 2045 3572 4709 1877 - 1 408 805 - 70 7297 8202 - 677 - 1 832 8139 6944 8026 - 1 832 8139 6944 8026 - 12 4098 1944 4221 2165 7989 5205", "x2": "sub sign INT- 4 sqr x_0_7", "tree": "(sign(-4) sub (x_0_7)**2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 9 + 0 + 8 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 0 + 0 + 24 + 16 + 8 + 24 + 16 + 0 + 8 + 0 + 16 + 16 + 0 + 8 + 0 + 16", "x2": "mul mod mul mod idiv sign sqr x_0_1 sub INT- 7 x_0_1 sub n x_0_1 idiv INT+ 8 INT- 2 INT+ 1 0 INT+ 4", "tree": "(((((sign((x_0_1)**2) idiv (-7 sub x_0_1)) mod (n sub x_0_1)) mul (8 idiv -2)) mod 10) mul 4)", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 3 + 0 - 4 - 9 - 15 - 22 - 30 - 39 - 49 - 60 - 72 - 85 - 99 - 114 - 130 - 147 - 165 - 184 - 204 - 225 - 247 - 270 - 294 - 319 - 345 - 372 - 400 - 429 - 459", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 2 + 1 + 4 - 1 + 30 - 84 + 42 - 408 + 54 - 564 + 66 - 720 + 78 - 876 + 90 - 1032 + 102 - 1188 + 114 - 1344 + 126 - 1500 + 138 - 1656 + 150 - 1812 + 162 - 1968 + 174 - 2124 + 186 - 2280 + 198", "x2": "mul add mul add mod x_0_4 INT- 1 add x_0_3 n sign x_0_1 x_0_3 INT- 6", "tree": "(((((x_0_4 mod -1) add (x_0_3 add n)) mul sign(x_0_1)) add x_0_3) mul -6)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 - 3 - 4 + 10 - 3 - 3 - 5 + 8 - 70 - 70 - 77 - 69 - 88 - 94 - 102 - 95 - 179 - 185 - 198 - 196 - 221 - 233 - 247 - 246 - 336 - 348 - 367 - 371 - 402 - 420 - 440 - 445 - 541 - 559 - 584 - 594 - 631", "x2": "add sub x_0_8 mul INT+ 6 n INT- 7", "tree": "((x_0_8 sub (6 mul n)) add -7)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 2 + 4 - 10 + 47 + 17 + 163 + 623 + 231 + 2887 + 1 2407 + 5023 + 6 9223 + 32 2511 + 14 567 + 207 6607 + 1032 263 + 477 9183 + 7475 7751 + 3 9216 9887 + 1 9116 7207 + 31 3982 5423 + 172 5547 4903 + 87 9369 1391 + 1507 1162 167 + 8627 7374 5007 + 4572 7195 2183 + 8 1384 2748 8863 + 48 3153 2972 231 + 26 5217 7322 6447 + 488 3056 4933 1607 + 2995 5504 4265 4143 + 1697 3934 8649 2423", "x2": "add mul abs add INT- 6 mul x_0_3 INT+ 2 n INT+ 7", "tree": "((abs((-6 add (x_0_3 mul 2))) mul n) add 7)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 - 10 - 4 + 8 + 3 + 8 + 0 + 12 + 17 + 25 + 36 + 37 + 61 + 68 + 101 + 120 + 155 + 199 + 242 + 320 + 383 + 497 + 605 + 763 + 950 + 1172 + 1474 + 1805 + 2266 + 2785 + 3469 + 4291 + 5307 + 6591", "x2": "add add abs n x_0_5 x_0_2", "tree": "((abs(n) add x_0_5) add x_0_2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 6 - 6 + 1 + 11 + 8 + 7 + 56 + 7 + 11 + 107 + 23 + 8 + 176 + 203 + 56 + 263 + 296 + 331 + 368 + 407 + 448 + 491 + 536 + 583 + 632 + 683 + 736 + 791 + 848 + 907 + 968 + 1031", "x2": "add sqr mod n x_0_3 mod idiv sign INT+ 9 mul mul INT- 8 INT+ 3 n INT+ 8", "tree": "(((n mod x_0_3))**2 add ((sign(9) idiv ((-8 mul 3) mul n)) mod 8))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 + 7 - 1 - 1 - 5 + 10 - 5 + 2 - 6 + 4 - 11 - 24 - 17 - 16 - 12 - 27 - 12 - 19 - 11 - 21 - 6 + 7 + 0 - 1 - 18 - 4 - 5 + 2 - 6 + 4 - 30 - 24 - 38 - 16 + 1 - 13 - 12 - 45 - 11", "x2": "sub sub mod sign x_0_3 add INT- 1 0 n add x_0_10 INT+ 6 n", "tree": "(((sign(x_0_3) mod (-10 add n)) sub (x_0_10 add 6)) sub n)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 5 - 9 + 10 + 5 - 9 + 7 + 8 + 10 + 15 + 11 + 12 + 15 + 18 + 25 + 26 + 23 + 27 + 33 + 43 + 51 + 49 + 50 + 60 + 76 + 94 + 100 + 99 + 110 + 136 + 170 + 194 + 199 + 209 + 246", "x2": "add relu sub x_0_5 add n mul x_0_6 idiv INT- 2 add x_0_6 sqr mod INT- 8 INT+ 8 n", "tree": "(relu((x_0_5 sub (n add (x_0_6 mul (-2 idiv (x_0_6 add ((-8 mod 8))**2)))))) add n)", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 9 + 0 + 7 + 0 + 7 - 8 - 3 - 64 - 3 - 64 + 69 + 26 + 574 + 23 + 574 - 625 - 235 - 5168 - 211 - 5168 + 5621 + 2114 + 4 6510 + 1895 + 4 6510 - 5 593 - 1 9027 - 41 8592 - 1 7059 - 41 8592 + 45 5333 + 17 1242 + 376 7326 + 15 3527 + 376 7326", "x2": "idiv add sub idiv relu INT+ 8 x_0_2 mul x_0_5 mul relu INT+ 9 x_0_2 sub x_0_6 x_0_2 x_0_2", "tree": "((((relu(8) idiv x_0_2) sub (x_0_5 mul (relu(9) mul x_0_2))) add (x_0_6 sub x_0_2)) idiv x_0_2)", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 5 + 5 - 97 - 341 - 800 - 1729 - 3302 - 5760 - 9550 - 1 5062 - 2 2777 - 3 3406 - 4 7627 - 6 6233 - 9 271 - 12 779 - 15 8934 - 20 6191 - 26 4020 - 33 4054 - 41 8228 - 51 8516 - 63 7079 - 77 6404 - 93 9041 - 112 7751 - 134 5645 - 159 5921 - 188 2012 - 220 7725 - 257 6978", "x2": "mod sqr n sub x_0_3 sqr sub mod INT- 1 mul sqr n INT+ 1 n", "tree": "((n)**2 mod (x_0_3 sub (((-1 mod ((n)**2 mul 1)) sub n))**2))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 9 + 4 - 5 - 2 - 5 - 8 - 2 + 3 + 4 + 11 + 119 + 1 4156 + 2 39 2328 + 4 157 851 2125 9582 + 3 + 4 + 11 + 119 + 1 4156 + 2 39 2328 + 4 157 851 2125 9582 + 3 + 4 + 11 + 119 + 1 4156 + 2 39 2328 + 4 157 851 2125 9582 + 3 + 4 + 11 + 119 + 1 4156 + 2 39 2328 + 4 157 851 2125 9582 + 3", "x2": "mod x_0_7 abs sqr x_0_1", "tree": "(x_0_7 mod abs((x_0_1)**2))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 4 - 4 - 6 - 16 - 27 - 47 - 63 - 89 - 118 - 158 - 196 - 246 - 301 - 369 - 437 - 519 - 608 - 712 - 818 - 940 - 1071 - 1219 - 1371 - 1541 - 1722 - 1922 - 2128 - 2354 - 2593 - 2853 - 3121 - 3411", "x2": "sub sub add x_0_4 n sign INT+ 3 relu mul n n", "tree": "(((x_0_4 add n) sub sign(3)) sub relu((n mul n)))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 5 + 7 - 7 - 5 - 1 + 7 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1", "x2": "idiv n idiv sub sub relu sub sub INT- 5 INT+ 7 n x_0_6 sqr add sign INT- 9 INT+ 9 INT- 2", "tree": "(n idiv (((relu(((-5 sub 7) sub n)) sub x_0_6) sub ((sign(-9) add 9))**2) idiv -2))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 10 + 7 + 5 + 4 + 1 + 6 - 7 + 8 + 10 + 10 + 11 + 12 - 13 + 14 + 16 + 16 + 17 + 18 - 19 + 20 + 22 + 22 + 23 + 24 - 25 + 26 + 28 + 28 + 29 + 30 - 31 + 32 + 34 + 34", "x2": "sub mul add abs n mod sub x_0_3 mod INT- 3 abs x_0_3 INT- 2 sign x_0_6 idiv x_0_2 n", "tree": "(((abs(n) add ((x_0_3 sub (-3 mod abs(x_0_3))) mod -2)) mul sign(x_0_6)) sub (x_0_2 idiv n))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 10 + 2 + 9 + 5 + 5 + 0 - 3 - 7 + 0 - 80 + 16 + 72 + 40 + 40 + 0 - 24 - 56 + 0 - 640 + 128 + 576 + 320 + 320 + 0 - 192 - 448 + 0 - 5120 + 1024 + 4608 + 2560 + 2560 + 0 - 1536 - 3584 + 0 - 4 960", "x2": "mul mul relu INT+ 8 x_0_9 sign n", "tree": "((relu(8) mul x_0_9) mul sign(n))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 64 + 512 - 4096 + 3 2768 - 26 2144 + 209 7152 - 1677 7216 + 1 3421 7728 - 10 7374 1824 + 85 8993 4592 - 687 1947 6736 + 5497 5581 3888 - 4 3980 4651 1104 + 35 1843 7208 8832 - 281 4749 7671 656 + 2251 7998 1368 5248 - 1 8014 3985 948 1984 + 14 4115 1880 7585 5872 - 115 2921 5046 684 6976 + 922 3372 368 5477 5808 - 7378 6976 2948 3820 6464 + 5 9029 5810 3587 565 1712 - 47 2236 6482 8696 4521 3696 + 377 7893 1862 9571 6170 9568 - 3022 3145 4903 6572 9367 6544 + 2 4178 5163 9229 2583 4941 2352 - 19 3428 1311 3834 667 9529 8816 + 154 7425 491 672 5343 6239 528 - 1237 9400 3928 5380 2748 9912 4224", "x2": "mul INT+ 8 sub mul mod mod INT+ 1 sign idiv mul INT- 1 0 x_0_1 INT+ 6 mul INT+ 9 n n x_0_1", "tree": "(8 mul ((((1 mod sign(((-10 mul x_0_1) idiv 6))) mod (9 mul n)) mul n) sub x_0_1))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 1 + 6 + 1 - 9 + 9 + 70 + 56 + 135 + 110 + 22 + 252 + 1079 + 980 + 2250 + 2016 + 663 + 4860 + 2 862 + 2 0 + 4 7691 + 4 4836 + 1 5778 + 11 7216 + 52 2175 + 52 676 + 128 8386 + 125 6192 + 45 8403 + 351 7380 + 1618 8386 + 1666 2656 + 4251 7827 + 4271 1684 + 1604 5330", "x2": "mul n add x_0_6 n", "tree": "(n mul (x_0_6 add n))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 0 + 1 - 9 + 7 + 12 + 14 + 16 + 18 + 20 - 22 - 24 + 26 + 28 - 30 + 32 - 34 - 36 + 38 - 40 - 42 - 44 - 46 + 48 - 50 + 52 - 54 + 56 + 58 + 60 - 62 + 64 + 66 - 68", "x2": "mul mul sign add idiv x_0_2 idiv x_0_5 relu n sign INT+ 2 INT- 2 n", "tree": "((sign(((x_0_2 idiv (x_0_5 idiv relu(n))) add sign(2))) mul -2) mul n)", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 5 - 2 + 2 + 3 - 1 - 10 - 2 - 3 + 14 + 12 + 13 + 64 + 52 + 46 + 222 + 180 + 179 + 743 + 578 + 62 + 2472 + 2323 + 231 + 7774 + 9270 + 371 + 2 2436 + 3 6804 + 807 + 5 5298 + 14 6676 + 891 + 8 3824 + 58 6223 + 2753 + 12 1211 + 234 2988", "x2": "add abs add n sub INT- 2 mod sub x_0_2 x_0_8 sub INT+ 3 mul INT+ 4 x_0_3 INT+ 1 0", "tree": "(abs((n add (-2 sub ((x_0_2 sub x_0_8) mod (3 sub (4 mul x_0_3)))))) add 10)", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 2 + 8 - 8 - 3 + 7 - 9 - 4 + 6 - 10 - 5 + 5 - 11 - 6 + 4 - 12 - 7 + 3 - 13 - 8 + 2 - 14 - 9 + 1 - 15 - 10 + 0 - 16 - 11 - 1 - 17 - 12", "x2": "sub sub sub sqr INT+ 1 x_0_2 n x_0_1", "tree": "((((1)**2 sub x_0_2) sub n) sub x_0_1)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 - 2 - 2 + 144 + 100 + 324 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281 + 81 0 + 92 3521 + 104 8576", "x2": "sqr add n mul n sub idiv INT- 5 x_0_3 n", "tree": "((n add (n mul ((-5 idiv x_0_3) sub n))))**2", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 256 + 6561 + 6 5536 + 39 625 + 167 9616 + 576 4801 + 1677 7216 + 4304 6721 + 1 0 0 + 2 1435 8881 + 4 2998 1696 + 8 1573 721 + 14 7578 9056 + 25 6289 625 + 42 9496 7296 + 69 7575 7441 + 110 1996 576 + 169 8356 3041 + 256 0 0 + 378 2285 9361 + 548 7587 3536 + 783 1098 5281 + 1100 7531 4176 + 1525 8789 625 + 2088 2706 4576 + 2824 2953 6481 + 3778 199 8336 + 5002 4641 2961", "x2": "abs sqr sqr sqr n", "tree": "abs((((n)**2)**2)**2)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 3 + 0 + 1 + 5 - 4 + 9 + 8 + 11 + 17 + 10 + 25 + 26 + 31 + 39 + 34 + 51 + 54 + 61 + 71 + 68 + 87 + 92 + 101 + 113 + 112 + 133 + 140 + 151 + 165 + 166 + 189 + 198 + 211", "x2": "add add INT- 8 relu n add x_0_5 n", "tree": "((-8 add relu(n)) add (x_0_5 add n))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 8 + 7 + 7 - 7 - 12 - 7 - 8 + 0 - 60 - 11 - 48 + 0 + 168 - 15 - 128 + 0 - 612 + 0 - 260 + 0 + 2684 + 0 + 1248 + 0 - 1 3962 + 0 - 7000 + 0 + 8 3760 + 0 + 4 4800 + 0 - 56 9568", "x2": "mul idiv x_0_4 add INT+ 6 add add INT- 1 0 sub abs INT- 2 x_0_5 INT- 3 n", "tree": "((x_0_4 idiv (6 add ((-10 add (abs(-2) sub x_0_5)) add -3))) mul n)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 8 + 6 + 3 - 2 - 1 + 5 + 6 + 47 + 68 + 526 + 894 + 7375 + 1 2528 + 11 638 + 12 5294 + 88 5119 - 714 1742 - 9559 2835 + 18 + 19 - 28 4074 - 33 9623 + 22 + 23 + 3 43 5236 + 600 + 78 1131 6162 + 2436 6627 + 379 2237 7703 2804 + 6 8226 5585 + 1 997 4895 3395 1346 - 2 9282 3517 7057 2279 - 56 871 9662 3151 8614 + 33 + 34", "x2": "sub add INT- 1 sub n mul relu x_0_2 sub idiv x_0_7 INT+ 7 n sign mod x_0_3 INT+ 1", "tree": "((-1 add (n sub (relu(x_0_2) mul ((x_0_7 idiv 7) sub n)))) sub sign((x_0_3 mod 1)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 2 + 8 - 10 - 7 - 1 + 6 - 5 + 2 + 6 + 2 + 8 + 10 + 7 + 1 + 6 + 5 + 2 + 6 + 2 + 8 + 10 + 7 + 1 + 6 + 5 + 2 + 6 + 2 + 8 + 10 + 7 + 1 + 6 + 5 + 2 + 6 + 2", "x2": "abs x_0_9", "tree": "abs(x_0_9)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 1 - 4 + 3 - 4 + 6 + 6 + 1 + 1 + 4 + 3 + 4 + 6 + 6 + 1 + 1 + 4 + 3 + 4 + 6 + 6 + 1 + 1 + 4 + 3 + 4 + 6 + 6 + 1 + 1 + 4 + 3 + 4 + 6 + 6 + 1", "x2": "mul abs x_0_7 INT+ 1", "tree": "(abs(x_0_7) mul 1)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 10 + 0 - 7 + 9 + 0 + 0 + 8 + 0 + 0 + 0 + 4 + 1 + 4 + 1 + 0 + 0 + 2 + 1 + 2 + 0 + 0 + 0 + 0 + 1 + 2 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0", "x2": "relu mod n add x_0_6 add abs add x_0_4 idiv INT- 4 relu INT+ 7 sign x_0_3", "tree": "relu((n mod (x_0_6 add (abs((x_0_4 add (-4 idiv relu(7)))) add sign(x_0_3)))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 - 8 - 2 + 10 + 3 + 10 - 6 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 - 1 - 1 - 1 + 0 + 0 - 1", "x2": "idiv sign mod n add INT- 8 sign sign mul add n mul x_0_8 x_0_7 x_0_7 add n x_0_5", "tree": "(sign((n mod (-8 add sign(sign(((n add (x_0_8 mul x_0_7)) mul x_0_7)))))) idiv (n add x_0_5))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 5 + 6 + 8 - 6 - 2 - 7 - 5 - 3 - 7 - 4 - 2 + 0 - 4 - 1 - 7 - 5 - 1 - 6 - 4 - 2 - 6 - 3 - 1 - 7 - 3 + 0 - 6 - 4 + 0 - 5 - 3 - 1", "x2": "mod sub x_0_4 INT+ 5 INT- 8", "tree": "((x_0_4 sub 5) mod -8)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 7 + 8 + 4 - 314 - 431 - 251 - 2 2607 - 3 4910 - 2 2589 - 223 8092 - 377 279 - 264 2912 - 2 8199 9591 - 5 898 7664 - 3 8057 9327 - 431 4593 7422 - 824 5600 1567 - 650 7906 4916 - 7 7662 6873 5959 - 15 5841 8429 6162 - 12 8856 5485 3367 - 1607 6176 2834 3512 - 3366 1838 797 991 - 2899 2723 4200 7574 - 37 6182 5250 3238 1807 - 81 7982 6653 3695 812 - 73 616 6301 8590 8647 - 9818 3639 334 5165 1626 - 2 2085 5319 6409 7671 9239 - 2 384 2039 8218 6851 2512 - 282 7688 8041 6340 7566 8287 - 655 9402 9933 3700 8561 3982", "x2": "sub abs INT+ 1 abs sub mul INT+ 9 mul n x_0_3 mod mul add abs n n x_0_4 n", "tree": "(abs(1) sub abs(((9 mul (n mul x_0_3)) sub (((abs(n) add n) mul x_0_4) mod n))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 8 + 10 + 21 + 4 - 6 + 12 + 23 + 6 - 4 + 14 + 25 + 8 - 2 + 16 + 27 + 10 + 0 + 18 + 29 + 12 + 2 + 20 + 31 + 14 + 4 + 22 + 33 + 16 + 6 + 24", "x2": "sub abs INT- 9 sub x_0_2 n", "tree": "(abs(-9) sub (x_0_2 sub n))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 + 8 + 72 + 246 + 614 + 1284 + 2388 + 4082 + 6546 + 9984 + 1 4624 + 2 718 + 2 8542 + 3 8396 + 5 604 + 6 5514 + 8 3498 + 10 4952 + 13 296 + 15 9974 + 19 4454 + 23 4228 + 27 9812 + 33 1746 + 39 594 + 45 6944 + 53 1408 + 61 4622 + 70 7246", "x2": "sub mod INT- 6 sqr abs sqr n relu n", "tree": "((-6 mod (abs((n)**2))**2) sub relu(n))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 4 - 3 - 75 - 259 - 555 - 1041 - 1849 - 3057 - 4713 - 6943 - 9927 - 1 3791 - 1 8631 - 2 4621 - 3 1989 - 4 909 - 5 1525 - 6 4059 - 7 8787 - 9 5931 - 11 5683 - 13 8313 - 16 4145 - 19 3449 - 22 6465 - 26 3511 - 30 4959 - 35 1127 - 40 2303 - 45 8853 - 52 1197", "x2": "sub mod INT- 1 0 x_0_1 mod x_0_2 sub sqr sqr n n", "tree": "((-10 mod x_0_1) sub (x_0_2 mod (((n)**2)**2 sub n)))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 10 + 8 - 9 + 5 - 9 + 51 + 83 + 38 + 8 + 88 + 127 + 132 + 152 + 131 + 112 + 246 + 339 + 247 + 213 + 325 + 383 + 450 + 532 + 422 + 357 + 632 + 810 + 659 + 622 + 724 + 759 + 997 + 1207 + 887", "x2": "add sub sqr idiv n INT+ 1 x_0_2 x_0_6", "tree": "((((n idiv 1))**2 sub x_0_2) add x_0_6)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 4 + 6 - 37 - 134 - 132 - 704 - 1350 - 3000 - 2070 - 2990 - 7988 - 8162 - 1 2200 - 1 5204 - 1 5785 - 2 1588 - 2 6172 - 6 8226 - 4 3842 - 17 606 - 7 2045 - 38 4028 - 13 6031 - 59 1940 - 18 6631 - 60 8814 - 27 4813 - 70 3650 - 43 9620 - 70 3620 - 45 4965", "x2": "sub add n x_0_2 sqr mul n mod sub x_0_2 x_0_1 n", "tree": "((n add x_0_2) sub ((n mul ((x_0_2 sub x_0_1) mod n)))**2)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 8 + 6 - 5 - 8 + 39 + 51 + 65 + 81 + 99 + 119 + 141 + 165 + 191 + 219 + 249 + 281 + 315 + 351 + 389 + 429 + 471 + 515 + 561 + 609 + 659 + 711 + 765 + 821 + 879 + 939 + 1001 + 1065 + 1131", "x2": "add mod INT+ 9 add INT+ 1 sqr x_0_5 mul mod INT- 1 n n", "tree": "((9 mod (1 add (x_0_5)**2)) add ((-1 mod n) mul n))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 0 + 7 - 3 + 8 + 7 + 4 + 10 + 9 + 7 + 13 + 10 + 9 + 15 + 11 + 8 + 14 + 9 + 7 + 13 + 10 + 9 + 15 + 11 + 8 + 14 + 9 + 7 + 13 + 10 + 9 + 15 + 11 + 8", "x2": "sub mod mul add x_0_1 mul x_0_5 x_0_3 sign n x_0_3 INT- 6", "tree": "((((x_0_1 add (x_0_5 mul x_0_3)) mul sign(n)) mod x_0_3) sub -6)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 + 4 + 0 - 120 - 150 + 504 + 606 - 3408 - 4122 + 1 9848 + 2 4006 - 11 9952 - 14 5050 + 71 8536 + 86 8950 - 431 2752 - 521 5434 + 2587 4568 + 3129 438 - 1 5524 9808 - 1 8774 5274 + 9 3149 5944 + 11 2646 8470 - 55 8897 9120 - 67 5881 4570 + 335 3387 664 + 405 5288 3046 - 2012 322 8688 - 2433 1730 3322 + 1 2072 1936 6728 + 1 4599 381 4166", "x2": "mul INT- 6 add x_0_2 sqr n", "tree": "(-6 mul (x_0_2 add (n)**2))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 9 - 2 + 4 - 10 - 3 + 3 - 11 - 4 + 2 - 12 - 5 + 1 - 13 - 6 + 0 - 14 - 7 - 1 - 15 - 8 - 2 - 16 - 9 - 3 - 17 - 10 - 4 - 18 - 11 - 5 - 19", "x2": "add x_0_3 idiv n mul sub sqr sub mul n INT+ 6 abs n x_0_3 INT- 1 0", "tree": "(x_0_3 add (n idiv (((((n mul 6) sub abs(n)))**2 sub x_0_3) mul -10)))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 2 + 99 + 0 + 1089 + 0 + 1 1979 + 0 + 13 1769 + 0 + 144 9459 + 0 + 1594 4049 + 0 + 1 7538 4539 + 0 + 19 2922 9929 + 0 + 212 2152 9219 + 0 + 2334 3682 1409 + 0 + 2 5678 503 5499 + 0 + 28 2458 5539 489 + 0 + 310 7044 929 5379 + 0 + 3417 7485 224 9169 + 0 + 3 7595 2335 2474 859", "x2": "mul add INT+ 9 INT+ 2 relu x_0_2", "tree": "((9 add 2) mul relu(x_0_2))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 4 - 5 + 0 + 1 - 4 - 5 + 0 + 1 - 4 - 5 + 0 + 1 - 4 - 5 + 0 + 1 - 4 - 5 + 0 + 1 - 4 - 5 + 0 + 1 - 4 - 5 + 0 + 1 - 4 - 5", "x2": "sub INT- 4 x_0_2", "tree": "(-4 sub x_0_2)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 6 - 1 - 3 + 3 + 8 + 14 + 7 + 16 + 10 + 2 + 6 + 5 + 5 + 1 + 5 + 5 + 6 + 7 + 12 + 13 + 14 + 14 + 13 + 7 + 0 + 8 + 0 + 7 + 6 + 12 + 10 + 16 + 15 + 15", "x2": "abs sub idiv sub relu mod x_0_1 n x_0_5 sign relu idiv n INT+ 7 INT- 6", "tree": "abs((((relu((x_0_1 mod n)) sub x_0_5) idiv sign(relu((n idiv 7)))) sub -6))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 6 + 19 + 32 + 7 - 6 + 19 + 32 + 7 - 6 + 19 + 32 + 7 - 6 + 19 + 32 + 7 - 6 + 19 + 32 + 7 - 6 + 19 + 32 + 7 - 6 + 19 + 32 + 7 - 6 + 19", "x2": "add sub sign add n relu n x_0_2 sqr add INT- 8 INT+ 3", "tree": "((sign((n add relu(n))) sub x_0_2) add ((-8 add 3))**2)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 10 + 1 - 3 - 10 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign add add sign INT+ 1 x_0_4 x_0_4", "tree": "sign(((sign(1) add x_0_4) add x_0_4))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 9 + 3 - 2 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 1 - 7 - 21 - 61 - 179 - 531 - 1585 - 4745 - 1 4223 - 4 2655 - 12 7949 - 38 3829 - 115 1467 - 345 4379 - 1036 3113 - 3108 9313 - 9326 7911 - 2 7980 3703 - 8 3941 1077 - 25 1823 3197 - 75 5469 9555 - 226 6409 8627 - 679 9229 5841 - 2039 7688 7481 - 6119 3066 2399 - 1 8357 9198 7151 - 5 5073 7596 1405 - 16 5221 2788 4165 - 49 5663 8365 2443", "x2": "add x_0_1 add sub relu n abs relu INT+ 8 mod n add x_0_1 x_0_1", "tree": "(x_0_1 add ((relu(n) sub abs(relu(8))) add (n mod (x_0_1 add x_0_1))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 10 - 7 + 4 + 8 + 9 + 1 - 8 + 0 + 9 + 9 + 2 + 1 4400 + 8281 + 3136 + 1 4400 + 2 736 + 289 + 2 736 + 0 + 3 2400 + 3 5721 + 1936 + 1096 9344 0 + 394 9917 7536 + 61 4656 0 + 1401 7536 0 + 3134 5665 6384 + 6548 464 + 3616 1460 6336 + 0 + 1 88 1936 0 + 1 3066 1359 7184 + 40 8167 6544 + 13 9097 4430 562 8416 0 0 + 1 9112 2665 6875 476 1333 7600 + 489 6313 8984 3456 0 0 + 26 8996 6109 3496 4224 0 0 + 141 8803 2892 2995 972 4767 8464 + 652 1578 2629 6170 5216 + 209 2241 9762 4864 4021 5183 3600", "x2": "mul sqr n sqr x_0_11", "tree": "((n)**2 mul (x_0_11)**2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 0 + 4 - 7 - 6 + 8 + 2 + 81 + 90 + 154 + 180 + 234 + 294 + 240 + 336 + 442 + 324 + 342 + 500 + 714 + 660 + 644 + 672 + 900 + 1092 + 864 + 1092 + 1276 + 1050 + 1302 + 1024 + 1188 + 1326 + 1330 + 1836 + 1554", "x2": "mul add mod x_0_7 n n add INT+ 1 relu n", "tree": "(((x_0_7 mod n) add n) mul (1 add relu(n)))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250 + 1352 + 1458 + 1568 + 1682", "x2": "mul add n abs n n", "tree": "((n add abs(n)) mul n)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 4 + 3 + 1 - 6 + 6 + 15 + 18 + 24 + 38 + 40 + 34 + 26 + 13 + 9 + 14 + 2 + 5 + 7 + 14 + 17 + 33 + 47 + 60 + 67 + 72 + 61 + 37 + 1 + 33 + 5 + 21 + 12 + 40 + 36", "x2": "relu relu abs mod idiv add INT- 1 n INT- 8 abs sub sub x_0_5 x_0_1 abs n", "tree": "relu(relu(abs((((-1 add n) idiv -8) mod abs(((x_0_5 sub x_0_1) sub abs(n)))))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr abs add n mod add relu n n INT+ 1", "tree": "(abs((n add ((relu(n) add n) mod 1))))**2", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 5 - 4 + 90 + 45 + 0 + 810 + 405 + 0 + 7290 + 3645 + 0 + 6 5610 + 3 2805 + 0 + 59 490 + 29 5245 + 0 + 531 4410 + 265 7205 + 0 + 4782 9690 + 2391 4845 + 0 + 4 3046 7210 + 2 1523 3605 + 0 + 38 7420 4890 + 19 3710 2445 + 0 + 348 6784 4010 + 174 3392 2005", "x2": "mul sign add sub x_0_1 INT- 7 n mul INT+ 9 relu x_0_3", "tree": "(sign(((x_0_1 sub -7) add n)) mul (9 mul relu(x_0_3)))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14 + 9 + 15 + 10 + 16 + 11 + 17 + 12 + 18 + 13 + 19 + 14", "x2": "add sign relu sub x_0_1 n x_0_2", "tree": "(sign(relu((x_0_1 sub n))) add x_0_2)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 8 - 8 - 1 + 64 + 64 + 1 + 176 + 46 + 1 + 53 + 172 + 1 + 9 + 37 + 1 + 81 + 217 + 1 + 477 + 433 + 1 + 459 + 289 + 1 + 761 + 757 + 1 + 921 + 217 + 1 + 613 + 1459", "x2": "mod sqr x_0_3 sqr add n INT+ 7", "tree": "((x_0_3)**2 mod ((n add 7))**2)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 + 2 - 7 - 10 - 9 - 6 - 7 - 10 - 9 - 6 - 7 - 10 - 9 - 6 - 7 - 10 - 9 - 6 - 7 - 10 - 9 - 6 - 7 - 10 - 9 - 6 - 7 - 10 - 9 - 6 - 7", "x2": "sub x_0_2 sub sqr INT+ 4 abs add x_0_2 x_0_2", "tree": "(x_0_2 sub ((4)**2 sub abs((x_0_2 add x_0_2))))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 10 + 98 - 892 + 8126 - 7 4026 + 67 4360 - 614 3266 + 5596 3754 - 5 981 7052 + 46 4431 7222 - 423 867 2050 + 3854 2236 5672 - 3 5111 996 3098 + 31 9854 1203 3554 - 291 3798 1826 5084 + 2654 4037 7641 9310 - 2 4181 138 603 8874 + 22 283 5280 3076 9176 - 200 6732 7660 8296 1458 + 1828 878 4227 7742 2298 - 1 6653 4638 5710 7976 2140 + 15 1709 2625 5624 9528 1558 - 138 2036 8268 6335 3729 6162 + 1259 40 7043 2643 3094 7016 - 1 1469 2403 1658 125 1581 9306 + 10 4482 1669 1965 3769 7332 770 - 95 1808 7425 9346 4052 7570 6236 + 867 760 8502 6083 244 5467 6894 - 7898 8656 3949 4093 6253 6779 8282 + 7 1956 8668 4047 2925 6527 6486 1432", "x2": "add add x_0_2 idiv abs relu INT- 4 n mul INT- 9 x_0_1", "tree": "((x_0_2 add (abs(relu(-4)) idiv n)) add (-9 mul x_0_1))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 - 8 - 6 + 3 + 8 + 10 + 112 + 128 + 648 + 400 + 176 + 9792 + 1664 + 5 8240 + 2 9760 + 2 8672 + 130 7776 + 117 432 + 859 9552 + 455 6800 + 18 2784 + 2 2512 2304 + 2527 1296 + 14 2639 1040 + 8 855 400 + 9 979 5328 + 485 8693 6320 + 447 6662 5792 + 3250 5978 608 + 1482 8175 3600 + 251 874 2144 + 12 2053 4809 3952 + 1 85 6197 9392 + 76 2397 3810 9952 + 49 4978 4756 2240", "x2": "relu abs mul INT+ 8 mul idiv n idiv mod abs relu INT+ 6 INT+ 4 INT- 4 sub x_0_6 x_0_5", "tree": "relu(abs((8 mul ((n idiv ((abs(relu(6)) mod 4) idiv -4)) mul (x_0_6 sub x_0_5)))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7 + 0 + 10 - 7", "x2": "sub sub INT+ 5 add x_0_1 INT+ 2 x_0_2", "tree": "((5 sub (x_0_1 add 2)) sub x_0_2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 6 + 2 - 4 + 3 + 2 + 10 + 2 + 5 + 2 + 13 + 4 + 15 + 4 + 18 + 6 + 28 + 8 + 33 + 10 + 46 + 14 + 61 + 18 + 79 + 24 + 107 + 32 + 140 + 42 + 186 + 56 + 247 + 74 + 326", "x2": "add relu x_0_6 x_0_4", "tree": "(relu(x_0_6) add x_0_4)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 1 + 9 - 4 - 3 - 4 - 9 - 2 + 7 + 1 + 9 + 4 + 3 + 4 + 9 + 2 + 7 + 1 + 9 + 4 + 3 + 4 + 9 + 2 + 7 + 1 + 9 + 4 + 3 + 4 + 9 + 2 + 7 + 1 + 9 + 4 + 3", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul sqr n mod sign INT+ 1 n", "tree": "((n)**2 mul (sign(1) mod n))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 3 + 9 - 10 + 2 - 1 - 5 - 9 - 3 + 102 + 66 + 120 + 78 + 90 + 90 + 96 + 102 + 108 + 720 + 510 + 840 + 594 + 672 + 678 + 720 + 762 + 804 + 4482 + 3228 + 5214 + 3744 + 4218 + 4260 + 4518 + 4776 + 5034 + 2466 + 2262", "x2": "relu mul INT+ 6 abs add mod relu add sign INT- 6 x_0_9 sqr n relu n", "tree": "relu((6 mul abs(((relu((sign(-6) add x_0_9)) mod (n)**2) add relu(n)))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 0 + 6 + 10 + 1 + 8 + 5 - 2 - 1 + 7 + 90 + 0 + 30 + 90 + 0 + 56 + 20 + 2 + 0 + 42 + 8010 + 0 + 870 + 8010 + 0 + 3080 + 380 + 2 + 0 + 1722 + 6415 2090 + 0 + 75 6030 + 6415 2090 + 0 + 948 3320 + 14 4020 + 2 + 0", "x2": "abs sub x_0_10 mul abs x_0_10 x_0_10", "tree": "abs((x_0_10 sub (abs(x_0_10) mul x_0_10)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 6 + 2 - 9 + 5 + 7 - 6 + 2 - 9 + 5 + 7 - 6 + 2 - 9 + 5 + 7 - 6 + 2 - 9 + 5 + 7 - 6 + 2 - 9 + 5 + 7 - 6 + 2 - 9 + 5 + 7 - 6 + 2 - 9", "x2": "mul sign relu mul x_0_3 add idiv n INT+ 9 x_0_4 x_0_5", "tree": "(sign(relu((x_0_3 mul ((n idiv 9) add x_0_4)))) mul x_0_5)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 3 - 7 + 9 - 1 - 7 - 17 - 1 - 11 - 17 - 27 - 11 - 21 - 27 - 37 - 21 - 31 - 37 - 47 - 31 - 41 - 47 - 57 - 41 - 51 - 57 - 67 - 51 - 61 - 67 - 77 - 61 - 71", "x2": "sub add mul add x_0_4 n sign n INT- 1 0 n", "tree": "((((x_0_4 add n) mul sign(n)) add -10) sub n)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 16 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576 + 209 7152 + 419 4304 + 838 8608 + 1677 7216 + 3355 4432 + 6710 8864 + 1 3421 7728 + 2 6843 5456 + 5 3687 912 + 10 7374 1824 + 21 4748 3648", "x2": "abs mul x_0_1 add mod mod sub INT+ 4 sqr mod x_0_1 idiv n n n n INT- 2", "tree": "abs((x_0_1 mul ((((4 sub ((x_0_1 mod (n idiv n)))**2) mod n) mod n) add -2)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 4 + 9 + 1 - 3 + 10 - 4 - 1 - 5 + 36 + 90 + 11 + 36 + 130 + 56 + 15 + 80 + 612 + 1620 + 209 + 720 + 2730 + 1232 + 345 + 1920 + 1 5300 + 4 2120 + 5643 + 2 160 + 7 9170 + 3 6960 + 1 695 + 6 1440 + 50 4900 + 143 2080 + 19 7505 + 72 5760 + 292 9290", "x2": "abs mul x_0_8 n", "tree": "abs((x_0_8 mul n))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 + 3 - 6 - 10 - 5 + 30 + 6 - 110 - 35 + 240 - 582 + 2310 - 385 + 14 2560 - 9894 + 92 1690 - 7315 + 14 1276 9600 - 20 7774 + 67 5875 2770 - 16 8245 + 293 5650 4626 2400 - 519 4350 + 1137 2750 5234 9590 - 454 2615 + 15 2488 6643 6142 773 7600 - 1 5063 6150 + 51 6623 2281 803 9386 7190 - 1 4082 1065 + 22 9703 958 7729 2360 900 9089 2800 - 49 7099 2950 + 72 7514 4868 4608 8847 4089 8037 3050 - 49 2873 7275 + 1141 8524 7754 9693 4551 7005 8715 8509 1432 9600", "x2": "mul x_0_4 add idiv mod sub sqr relu sign n INT- 1 x_0_3 sign x_0_5 n", "tree": "(x_0_4 mul (((((relu(sign(n)))**2 sub -1) mod x_0_3) idiv sign(x_0_5)) add n))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 10 - 1 + 2 - 8 - 9 - 14 - 4 - 4 + 0 - 11 - 12 + 0 - 7 - 7 + 0 - 14 - 15 + 0 - 10 - 10 + 0 - 17 - 18 + 0 - 13 - 13 + 0 - 20 - 21 + 0 - 16 - 16", "x2": "mod abs x_0_3 idiv sqr add INT+ 2 n mul INT- 1 mul INT+ 1 sub n relu x_0_3", "tree": "(abs(x_0_3) mod (((2 add n))**2 idiv (-1 mul (1 mul (n sub relu(x_0_3))))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 1 - 2 + 5 - 1 + 4 - 6 - 5 + 50 + 45 + 58 - 29 + 16 - 35 + 128 + 89 - 330 - 461 - 574 + 699 + 365 + 1045 - 2093 - 1340 + 3164 + 8186 + 9179 - 1 2843 - 1 3368 - 2 4740 + 4 5402 + 3 4913 - 2 7358 - 18 4453 - 19 5414 + 25 8667 + 43 1881", "x2": "sub add INT+ 9 mul relu n idiv sub x_0_8 INT+ 7 INT- 2 x_0_3", "tree": "((9 add (relu(n) mul ((x_0_8 sub 7) idiv -2))) sub x_0_3)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 2 + 4 + 1 + 6 + 6 + 4 - 5 + 6 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 256 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225 + 1296 + 1369 + 1444 + 1521", "x2": "sqr sub n sign mul sign sign x_0_9 sub INT- 4 n", "tree": "((n sub sign((sign(sign(x_0_9)) mul (-4 sub n)))))**2", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 2 - 7 + 7 - 9 - 9 + 1 - 3 + 9 - 1 + 3 - 9 + 1 - 3 + 9 - 1 + 3 - 9 + 1 - 3 + 9 - 1 + 3 - 9 + 1 - 3 + 9 - 1 + 3 - 9 + 1 - 3 + 9 - 1 + 3 - 9 + 1", "x2": "sub relu mod mul add INT+ 1 n mul idiv mod n x_0_8 x_0_1 mul n n n x_0_3", "tree": "(relu((((1 add n) mul (((n mod x_0_8) idiv x_0_1) mul (n mul n))) mod n)) sub x_0_3)", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683 + 2 1952 + 2 4389", "x2": "idiv sqr sqr n n", "tree": "(((n)**2)**2 idiv n)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 + 6 - 7 + 1 - 10 - 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4", "x2": "mul sqr INT+ 2 sign sign x_0_5", "tree": "((2)**2 mul sign(sign(x_0_5)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 6 - 3 - 1 - 2 - 5 - 3 - 2 - 3 - 5 - 4 - 3 - 3 - 5 - 5 - 3 - 4 - 6 - 5 - 4 - 4 - 6 - 6 - 4 - 4 - 7 - 7 - 4 - 4 - 8 - 8 - 4", "x2": "idiv relu n x_0_2", "tree": "(relu(n) idiv x_0_2)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 2 - 9 + 7 - 9 - 2 - 6 + 1 + 9 - 1 - 4 + 2 + 34 + 48 + 54 + 49 + 65 + 63 + 57 + 60 + 51 + 71 + 63 + 64 + 43 + 31 + 12 + 29 + 26 + 32 + 33 + 14 + 45 + 11 + 25 + 21 + 44 + 78 + 108 + 89 + 81", "x2": "sub sub abs mod sub idiv INT- 1 n abs x_0_6 n mul mod INT+ 3 sub INT- 8 n INT+ 2 x_0_12", "tree": "((abs((((-1 idiv n) sub abs(x_0_6)) mod n)) sub ((3 mod (-8 sub n)) mul 2)) sub x_0_12)", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 2 + 0 + 0 + 4 + 0 + 6 + 0 + 16 + 0 + 20 + 0 + 36 + 0 + 42 + 0 + 64 + 0 + 72 + 0 + 100 + 0 + 110 + 0 + 144 + 0 + 156 + 0 + 196 + 0 + 210", "x2": "mul n abs idiv mul relu INT+ 9 n sqr sub mul x_0_1 INT+ 5 INT- 6", "tree": "(n mul abs(((relu(9) mul n) idiv (((x_0_1 mul 5) sub -6))**2)))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 4 - 3 - 6 - 3 - 10 + 4 + 89 + 74 + 26 + 26 + 34 + 34 + 169 + 9629 + 7081 + 1394 + 1469 + 2234 + 2329 + 3 3881 + 9302 6050 + 5038 1629 + 199 3769 + 221 4169 + 508 541 + 552 2525 + 11 4941 3434 + 8653 8502 5780 1354 + 2538 3109 5901 2434 + 3 9752 1451 4461 + 4 9026 5949 8050 + 25 8121 7120 2649 + 30 4985 9163 7834 + 132 1151 3089 2565 2394 + 7488 9124 2844 4908 318 3535 9231 5481", "x2": "abs add relu sqr INT+ 5 sqr add add x_0_7 n INT- 6", "tree": "abs((relu((5)**2) add (((x_0_7 add n) add -6))**2))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 5 + 9 - 10 + 5 + 10 - 9 - 3 + 75 + 95 + 113 + 137 + 161 + 185 + 213 + 245 + 277 + 311 + 347 + 385 + 425 + 467 + 511 + 557 + 605 + 655 + 707 + 761 + 817 + 875 + 935 + 997 + 1061 + 1127 + 1195 + 1265 + 1337", "x2": "relu add sqr n add n relu add sign x_0_7 sqr INT- 2", "tree": "relu(((n)**2 add (n add relu((sign(x_0_7) add (-2)**2)))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 25 + 0 + 225 + 1600 + 5625 + 1 4400 + 3 625 + 5 7600 + 9 9225 + 16 0 + 24 5025 + 36 0 + 51 1225 + 70 5600 + 95 625 + 125 4400 + 162 5625 + 207 3600 + 260 8225 + 324 0 + 398 25 + 484 0 + 583 2225 + 696 9600 + 826 5625 + 973 4400 + 1139 625 + 1324 9600 + 1532 7225", "x2": "abs sqr mul add sub n INT- 1 0 mul n INT- 6 n", "tree": "abs(((((n sub -10) add (n mul -6)) mul n))**2)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 79 + 631 + 5047 + 4 375 + 32 2999 + 258 3991 + 2067 1927 + 1 6537 5415 + 13 2300 3319 + 105 8402 6551 + 846 7221 2407 + 6773 7769 9255 + 5 4190 2159 4039 + 43 3521 7275 2311 + 346 8173 8201 8487 + 2774 5390 5614 7895 + 2 2196 3124 4918 3159 + 17 7570 4995 9346 5271 + 142 563 9967 4772 2167 + 1136 4511 9739 8177 7335 + 9091 6095 7918 5421 8679 + 7 2732 8766 3348 3374 9431 + 58 1863 130 6786 6999 5447 + 465 4904 1045 4293 5996 3575 + 3723 9232 8363 4348 7970 8599 + 2 9791 3862 6907 4790 3766 8791 + 23 8331 901 5259 8323 135 327 + 190 6648 7212 2078 6584 1080 2615 + 1525 3189 7697 6629 2672 8642 919", "x2": "sub abs sub mul x_0_1 INT+ 8 INT- 8 INT+ 9", "tree": "(abs(((x_0_1 mul 8) sub -8)) sub 9)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 - 4 + 3 - 1 - 2 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign idiv x_0_3 abs x_0_5", "tree": "sign((x_0_3 idiv abs(x_0_5)))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 74 + 80 + 90 + 104 + 122 + 144 + 170 + 200 + 234 + 272 + 314 + 360 + 410 + 464 + 522 + 584 + 650 + 720 + 794 + 872 + 954 + 1040 + 1130 + 1224 + 1322 + 1424 + 1530 + 1640 + 1754", "x2": "add idiv sqr INT+ 9 INT+ 1 add mul relu n add n n INT- 9", "tree": "(((9)**2 idiv 1) add ((relu(n) mul (n add n)) add -9))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 8 + 2 - 63 - 128 - 278 - 468 - 787 - 1194 - 1784 - 2522 - 3509 - 4716 - 6250 - 8088 - 1 343 - 1 2998 - 1 6172 - 1 9854 - 2 4169 - 2 9112 - 3 4814 - 4 1276 - 4 8635 - 5 6898 - 6 6208 - 7 6578 - 8 8157 - 10 964 - 11 5154 - 13 752 - 14 7919", "x2": "add sub x_0_2 mul mul n relu n n sub n mod INT- 3 add relu x_0_3 n", "tree": "((x_0_2 sub ((n mul relu(n)) mul n)) add (n sub (-3 mod (relu(x_0_3) add n))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 5 + 7 + 2 + 35 - 49 - 14 - 245 + 343 + 98 + 1715 - 2401 - 686 - 1 2005 + 1 6807 + 4802 + 8 4035 - 11 7649 - 3 3614 - 58 8245 + 82 3543 + 23 5298 + 411 7715 - 576 4801 - 164 7086 - 2882 4005 + 4035 3607 + 1152 9602 + 2 176 8035 - 2 8247 5249 - 8070 7214 - 14 1237 6245 + 19 7732 6743", "x2": "mul INT- 7 x_0_3", "tree": "(-7 mul x_0_3)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 + 2 + 7 + 4 + 10 - 5 + 1 + 7 - 6 - 3 + 1 - 7 - 7 - 13 - 9 - 10 - 15 - 17 - 11 - 17 - 20 - 13 - 23 - 23 - 25 - 26 - 27 - 28 - 29 - 29 - 31 - 31 - 30 - 34", "x2": "sub mod sub abs add sqr n INT- 6 x_0_5 add n x_0_3 n", "tree": "(((abs(((n)**2 add -6)) sub x_0_5) mod (n add x_0_3)) sub n)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 7 + 1 + 2 + 4 + 10 + 5 - 11 - 9 - 3 + 15 + 19 + 8 - 26 - 28 - 11 + 41 + 47 + 19 - 67 - 75 - 30 + 108 + 122 + 49 - 175 - 197 - 79 + 283 + 319 + 128 - 458 - 516 - 207 + 741", "x2": "sub x_0_6 x_0_3", "tree": "(x_0_6 sub x_0_3)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 10 + 2 + 12 + 12 + 2 + 14 + 12 + 4 + 14 + 13 + 5 + 15 + 14 + 6 + 16 + 15 + 8 + 17 + 16 + 10 + 18 + 17 + 12 + 19 + 18 + 14 + 20 + 19 + 16 + 21 + 21", "x2": "idiv sqr idiv abs add x_0_3 n INT- 2 mul n sqr sign x_0_3", "tree": "(((abs((x_0_3 add n)) idiv -2))**2 idiv (n mul (sign(x_0_3))**2))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 2 + 6 - 3 - 6 + 8 + 9 - 1 + 3 + 4 + 8 + 1 + 4 + 10 + 11 + 1 + 5 + 6 + 10 + 3 + 6 + 12 + 13 + 3 + 7 + 8 + 12 + 5 + 8 + 14 + 15 + 5 + 9 + 10 + 14 + 7 + 10", "x2": "abs sub INT- 2 x_0_8", "tree": "abs((-2 sub x_0_8))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 2 + 0 + 9 + 7 - 2 + 0 + 9 + 7 - 2 + 0 + 9 + 7 - 2 + 0 + 9 + 7 - 2 + 0 + 9 + 7 - 2 + 0 + 9 + 7 - 2 + 0 + 9 + 7 - 2 + 0", "x2": "sub INT+ 7 add mul relu n mod n n x_0_2", "tree": "(7 sub ((relu(n) mul (n mod n)) add x_0_2))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 + 1 + 10 - 4 - 6 + 10 + 49 + 1 + 100 + 16 + 36 + 100 + 2401 + 1 + 1 0 + 256 + 1296 + 1 0 + 576 4801 + 1 + 1 0 0 + 6 5536 + 167 9616 + 1 0 0 + 33 2329 3056 9601 + 1 + 1 0 0 0 0", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 10 - 10 - 30 - 150 - 1050 - 9450 - 10 3950 - 135 1350 - 2027 250 - 3 4459 4250 - 65 4729 750 - 1374 9310 5750 - 3 1623 4143 2250 - 79 585 3580 6250 - 2134 5804 6676 8750 - 6 1902 8335 3629 3750 - 191 8987 8396 2510 6250 - 6332 6598 7076 2850 6250 - 22 1643 954 7669 9771 8750 - 820 794 5326 3789 1559 3750 - 3 1983 986 7728 7777 815 6250", "x2": "mul x_0_1 add INT- 5 add n relu n", "tree": "(x_0_1 mul (-5 add (n add relu(n))))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 4 - 9 + 1 - 4 - 9 + 1 - 4 - 9 + 1 - 4 - 9 + 1 - 4 - 9 + 1 - 4 - 9 + 1 - 4 - 9", "x2": "add INT- 9 mul INT- 5 mod n INT- 3", "tree": "(-9 add (-5 mul (n mod -3)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 8 + 13 + 20 + 29 + 40 + 53 + 68 + 85 + 104 + 125 + 148 + 173 + 200 + 229 + 260 + 293 + 328 + 365 + 404 + 445", "x2": "add sub n add INT+ 2 add n INT- 6 sqr n", "tree": "((n sub (2 add (n add -6))) add (n)**2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 9 + 10 + 10 - 3 + 2 - 1 + 18 - 10 + 11 + 11 + 1 - 6 + 7 + 25 - 9 + 12 + 13 + 25 - 8 + 19 + 29 + 8 + 7 + 31 + 41 - 7 + 23", "x2": "add x_0_7 add mod add INT+ 1 0 mod x_0_1 n x_0_4 relu sign relu x_0_1", "tree": "(x_0_7 add (((10 add (x_0_1 mod n)) mod x_0_4) add relu(sign(relu(x_0_1)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 7 + 12 + 19 + 28 + 39 + 52 + 67 + 84 + 103 + 124 + 147 + 172 + 199 + 228 + 259 + 292 + 327 + 364 + 403 + 444", "x2": "add sqr n INT+ 3", "tree": "((n)**2 add 3)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2", "x2": "mod add n mul sign x_0_1 INT- 1 0 INT+ 1 0", "tree": "((n add (sign(x_0_1) mul -10)) mod 10)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 20 + 0 - 6 - 20 - 6 - 19 - 5 + 0 - 20 - 13 - 6 - 26 - 19 - 12 - 5 - 25 - 18 - 11 - 4 - 24", "x2": "mod abs mul mod INT- 9 n INT- 7 mul INT- 3 INT+ 9", "tree": "(abs(((-9 mod n) mul -7)) mod (-3 mul 9))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 4 + 0 - 5 + 8 + 2 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0", "x2": "idiv x_0_6 n", "tree": "(x_0_6 idiv n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 8 + 6 + 5 + 3 - 2 + 9 + 20 + 12 + 4 + 4 + 28 + 124 + 44 + 8 + 8 + 188 + 3420 + 408 + 16 + 16 + 6428 + 203 4160 + 2 7748 + 44 + 40 + 612 1364 + 5911 1527 2232", "x2": "mul add abs sign sign x_0_7 idiv sqr x_0_5 n INT+ 4", "tree": "((abs(sign(sign(x_0_7))) add ((x_0_5)**2 idiv n)) mul 4)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 1 - 6 + 6 + 6 + 4 + 10 + 35 + 0 + 0 + 0 + 44 + 48 + 65 + 0 + 0 + 0 + 34 + 0 + 95 + 0 + 0 + 0 + 92 + 0 + 125 + 0 + 0", "x2": "idiv mul mod x_0_6 INT+ 6 n sign add n x_0_6", "tree": "(((x_0_6 mod 6) mul n) idiv sign((n add x_0_6)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 8 - 4 + 7 - 2 + 7 - 10 + 4 + 10 + 8 - 8 - 128 + 512 + 128 + 392 + 32 + 392 + 800 + 128 + 800 + 512 + 512 - 13 1072 + 209 7152 + 13 1072 - 122 9312 + 8192 + 122 9312 + 512 0 + 13 1072 + 512 0", "x2": "mul mul sqr x_0_11 INT+ 8 sign sub sqr sub x_0_8 x_0_6 INT+ 7", "tree": "(((x_0_11)**2 mul 8) mul sign((((x_0_8 sub x_0_6))**2 sub 7)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 9 - 3 + 2 + 9 + 366 + 2 + 9 + 366 + 2 + 9 + 366 + 2 + 9 + 366 + 2 + 9 + 366 + 2 + 9 + 366 + 2 + 9 + 366 + 2", "x2": "mod x_0_3 mul INT+ 9 abs sub n add add x_0_4 mul abs n INT+ 6 INT+ 2", "tree": "(x_0_3 mod (9 mul abs((n sub ((x_0_4 add (abs(n) mul 6)) add 2)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 2 + 5 - 3 + 5 - 10 - 1 + 0 - 2 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv add x_0_3 idiv idiv abs sub add INT+ 8 sqr x_0_5 relu n n n n", "tree": "((x_0_3 add ((abs(((8 add (x_0_5)**2) sub relu(n))) idiv n) idiv n)) idiv n)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 7 + 8 + 7 + 9 + 10 + 10 + 9 + 7 + 14 + 10 + 17 + 11 + 18 + 10 + 17 + 7 + 14 + 21 + 8 + 15 + 22", "x2": "relu relu add mod x_0_1 n abs INT+ 7", "tree": "relu(relu(((x_0_1 mod n) add abs(7))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 6 + 5 + 5 + 10 + 4 - 2 + 8 + 1 + 1 + 1 + 12 + 12 + 17 + 11 + 5 + 15 + 8 + 8 + 8 + 19 + 19 + 24 + 18 + 12 + 22 + 15 + 15 + 15 + 26 + 26", "x2": "add INT+ 1 0 sub x_0_9 INT+ 3", "tree": "(10 add (x_0_9 sub 3))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 2 - 2 - 4 + 8 + 2 - 7 + 8 - 10 - 8 - 8 - 4 + 110 - 234 - 64 + 225 - 254 + 323 + 280 + 270 + 136 - 4078 + 8888 + 2606 - 9234 + 1 350 - 1 3341 - 1 2294 - 1 1557 - 5840 + 18 7858 - 41 7600 - 12 9166", "x2": "sub x_0_11 mul sub add INT+ 4 INT+ 1 0 idiv add abs INT+ 2 n INT- 1 x_0_9", "tree": "(x_0_11 sub (((4 add 10) sub ((abs(2) add n) idiv -1)) mul x_0_9))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 2 + 8 + 13 + 23 + 29 + 44 + 64 + 98 + 151 + 237 + 375 + 598 + 958 + 1540 + 2481 + 4003 + 6465 + 1 448 + 1 6892 + 2 7318 + 4 4187 + 7 1481 + 11 5643", "x2": "abs add sub mod sub sub INT- 7 sign mul sign sqr x_0_3 INT- 7 n x_0_2 INT- 5 x_0_1", "tree": "abs((((((-7 sub sign((sign((x_0_3)**2) mul -7))) sub n) mod x_0_2) sub -5) add x_0_1))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 9 - 9 - 9 - 9 - 9 - 9 - 9 - 9 - 9 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 27 - 27 - 27", "x2": "sub mod n INT- 9 n", "tree": "((n mod -9) sub n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 4 + 4 - 18 - 15 - 15 + 7 + 4 + 4 - 18 - 15 - 15 + 7 + 4 + 4 - 18 - 15 - 15 + 7 + 4 + 4 - 18 - 15 - 15", "x2": "add sub INT- 1 0 x_0_3 INT- 1", "tree": "((-10 sub x_0_3) add -1)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 1 + 17 + 9 + 25 + 17 + 33 + 25 + 41 + 33 + 49 + 41 + 57 + 49 + 65 + 57 + 73 + 65 + 81 + 73 + 89 + 81 + 97", "x2": "add x_0_2 abs INT+ 8", "tree": "(x_0_2 add abs(8))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 64 + 324 + 1024 + 2500 + 5184 + 9604 + 1 6384 + 2 6244 + 4 0 + 5 8564 + 8 2944 + 11 4244 + 15 3664 + 20 2500 + 26 2144 + 33 4084 + 41 9904 + 52 1284 + 64 0 + 77 7924", "x2": "sqr abs mul add n n n", "tree": "(abs(((n add n) mul n)))**2", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 2 + 1 + 25 + 0 + 35 + 56 - 144 + 100 - 264 - 528 + 169 - 1204 + 225 + 256 - 2584 + 324 - 3914 - 4720 + 441 - 6644 + 529 + 576 - 1 400", "x2": "mul sub n relu x_0_4 n", "tree": "((n sub relu(x_0_4)) mul n)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 8 + 2 + 57 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1", "x2": "relu sub relu sign x_0_1 mul INT+ 7 x_0_2", "tree": "relu((relu(sign(x_0_1)) sub (7 mul x_0_2)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 1 + 1 + 0 + 4 + 1 + 4 + 25 + 1 + 36 + 9 + 64 + 25 + 36 + 121 + 64 + 16 + 1 + 256 + 1 + 256 + 9", "x2": "relu sqr mod add sqr INT- 4 sub sign sub n n x_0_1 n", "tree": "relu(((((-4)**2 add (sign((n sub n)) sub x_0_1)) mod n))**2)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 + 6 + 4 - 1 - 7 + 45 + 49 + 63 + 79 + 98 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675", "x2": "sub idiv x_0_5 x_0_2 sub sign add x_0_2 mul add INT- 3 sqr INT- 8 x_0_2 sqr n", "tree": "((x_0_5 idiv x_0_2) sub (sign((x_0_2 add ((-3 add (-8)**2) mul x_0_2))) sub (n)**2))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul n relu n", "tree": "(n mul relu(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 5 - 6 + 9 + 11 - 3 - 4 + 11 + 13 - 1 - 2 + 13 + 15 + 1 + 0 + 15 + 17 + 3 + 2 + 17 + 19 + 5 + 4", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 3 + 6 - 2 + 7 - 1 + 8 + 0 + 9 + 1 + 10 + 2 + 11 + 3 + 12 + 4 + 13 + 5 + 14 + 6 + 15 + 7", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 8 + 4 + 5 + 7 + 3 + 4 + 6 + 2 + 3 + 5 + 1 + 2 + 4 + 0 + 1 + 3 - 1 + 0 + 2 - 2 - 1 + 1 - 3", "x2": "sub x_0_3 abs sqr sign INT+ 2", "tree": "(x_0_3 sub abs((sign(2))**2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr sub sub n INT- 9 sign sqr sign relu n", "tree": "(((n sub -9) sub sign((sign(relu(n)))**2)))**2", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 601 - 22 - 147 - 592 - 973 - 906 - 7 - 2124 - 5841 - 1 1542 - 1 9611 - 3 432 - 4 4389 - 6 1866 - 8 3247 - 10 8916 - 13 9257 - 17 4654 - 21 5491 - 26 2152 - 31 5021", "x2": "sub mul INT- 4 mul abs sub abs INT+ 7 n sqr add INT+ 9 mul n INT- 4 relu n", "tree": "((-4 mul (abs((abs(7) sub n)) mul ((9 add (n mul -4)))**2)) sub relu(n))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 8 - 32 - 72 - 128 - 200 - 288 - 392 - 512 - 648 - 800 - 968 - 1152 - 1352 - 1568 - 1800 - 2048 - 2312 - 2592 - 2888 - 3200 - 3528", "x2": "mul mul n INT- 8 n", "tree": "((n mul -8) mul n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 - 291 - 573 - 1419 - 3957 - 1 1571 - 3 4413 - 10 2939 - 30 8517 - 92 5251 - 277 5453 - 832 6059 - 2497 7877 - 7493 3331 - 2 2479 9693 - 6 7439 8779 - 20 2319 6037 - 60 6958 7811 - 182 876 3133 - 546 2628 9099 - 1638 7886 6997 - 4916 3660 691", "x2": "mul abs add sqr INT+ 1 0 x_0_1 INT- 3", "tree": "(abs(((10)**2 add x_0_1)) mul -3)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 8 - 9 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 256 3201 + 4097 2801 + 2 738 8801 + 6 5541 1201 + 16 8 1 + 33 1787 5201 + 61 4671 6801 + 104 8596 4801 + 167 9641 9201 + 256 32 1 + 374 8134 7201 + 530 8462 801 + 731 1670 801 + 983 4558 7201 + 1296 72 1 + 1677 7297 9201 + 2138 1468 4801 + 2687 3959 6801 + 3336 2291 5201 + 4096 128 1 + 4978 7277 1201", "x2": "sqr add sign mul n INT+ 1 0 mul sqr mul INT- 1 0 n relu add INT+ 9 abs INT+ 7", "tree": "((sign((n mul 10)) add (((-10 mul n))**2 mul relu((9 add abs(7))))))**2", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 1 + 2 + 2 + 10 - 5 - 2 + 7 + 4 + 5 - 1 - 10 + 6 + 2 + 3 - 11 - 5 + 8 - 5 - 1 - 16 - 4 + 18 - 11 - 3 - 19 + 7 + 23 - 19 + 2 - 18 + 23", "x2": "sub x_0_5 x_0_11", "tree": "(x_0_5 sub x_0_11)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 9 - 1 + 7 + 55 + 72 + 14 + 80 + 522 + 750 + 187 + 996 + 6825 + 1 542 + 2850 + 1 5984 + 11 6076 + 18 9810 + 5 4207 + 31 9740 + 243 7659 + 417 5886 + 124 6830 + 767 3832 + 6094 1550", "x2": "mul add INT+ 3 x_0_4 n", "tree": "((3 add x_0_4) mul n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 - 8 + 160 + 50 - 288 + 7840 + 3200 - 2 3328 + 78 4000 + 38 7200 - 335 9232 + 1 3249 6000 + 7589 1200 - 7 5582 7200 + 339 1897 6000 + 219 3255 6800 - 2448 8801 2800 + 12 2447 5033 6000 + 8 7730 2272 0 - 107 9956 1364 4800 + 5926 4591 6262 4000 + 4640 9290 1888 0 - 6 2205 4734 5940 4800", "x2": "mul mul n n x_0_3", "tree": "((n mul n) mul x_0_3)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 5 - 6 - 5 + 2 + 0 - 1 + 5 + 1 + 4 - 2 - 5 + 6 + 0 + 11 + 15 + 5 + 12 - 2 + 1 4633 + 10 + 4 + 19 + 1 + 9 + 16 + 2 + 21 + 5", "x2": "mod add sub n x_0_4 INT- 6 add sqr abs sqr x_0_5 sub x_0_8 INT+ 2", "tree": "(((n sub x_0_4) add -6) mod ((abs((x_0_5)**2))**2 add (x_0_8 sub 2)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 6 - 1 - 8 - 10 + 7 - 12 - 13 - 14 - 12 - 17 - 14 - 15 - 16 - 17 - 3 - 4 - 5 - 6 - 7 - 11 - 12 - 13 - 14 - 15 - 13 - 14", "x2": "add sub INT- 7 mod n sub INT+ 6 add INT- 5 INT- 4 sqr idiv x_0_5 INT+ 9", "tree": "((-7 sub (n mod (6 sub (-5 add -4)))) add ((x_0_5 idiv 9))**2)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 2 - 6 - 8 - 3 - 7 - 5 + 1 + 5 + 3 + 7 + 5 - 1 - 5 - 3 - 7 - 15 + 1 + 5 + 3 + 7 + 45 - 1 - 5 - 3 - 7 - 135 + 1 + 5 + 3", "x2": "mul x_0_5 idiv INT- 3 sqr x_0_9", "tree": "(x_0_5 mul (-3 idiv (x_0_9)**2))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 9 + 7 + 11 + 3 + 24 + 89 + 552 + 4335 + 3 8924 + 38 9139 + 428 418 + 5136 4895 + 6 6774 3504 + 93 4840 8915 + 1402 2613 3574 + 2 2436 1813 7023 + 38 1415 832 9220 + 686 5471 4992 5779 + 1 3044 3958 4858 9610 + 26 887 9169 7179 1999 + 547 8646 2564 763 1768 + 1 2053 217 6409 6789 8675 + 27 7219 5005 7422 6166 9294", "x2": "sub mul n abs sub x_0_1 INT+ 9 mod add n sign n x_0_2", "tree": "((n mul abs((x_0_1 sub 9))) sub ((n add sign(n)) mod x_0_2))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 9 + 7 + 7 + 0 + 91 + 322 + 0 + 3094 + 8050 + 0 + 3094 + 124 7750 + 0 + 54 1450 + 2 3083 3750 + 0 + 1 1099 7250 + 496 2925 6250 + 0 + 260 8435 3750 + 12 1591 6778 1250 + 0 + 6 9123 5374 3750", "x2": "mul mod sqr sub INT- 5 n mul n n x_0_3", "tree": "((((-5 sub n))**2 mod (n mul n)) mul x_0_3)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 7 + 14 + 12 + 19 + 17 + 24 + 22 + 29 + 27 + 34 + 32 + 39 + 37 + 44 + 42 + 49 + 47 + 54 + 52 + 59 + 57 + 64", "x2": "add idiv mod n relu x_0_2 add mod INT+ 4 x_0_2 sqr x_0_2 add INT+ 5 x_0_2", "tree": "(((n mod relu(x_0_2)) idiv ((4 mod x_0_2) add (x_0_2)**2)) add (5 add x_0_2))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 + 0 + 3 + 5 - 1 + 3 + 0 + 9 + 9 + 0 + 7 + 0 + 9 + 8 + 0 + 8 + 0 + 9 + 9 + 0 + 9 + 0 + 9 + 9 + 0 + 9", "x2": "abs mod idiv mul x_0_5 n add sub abs INT+ 2 mul sub n x_0_3 n INT+ 4 INT+ 1 0", "tree": "abs((((x_0_5 mul n) idiv ((abs(2) sub ((n sub x_0_3) mul n)) add 4)) mod 10))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 10 + 8 + 3 - 8 + 3 - 3 - 11 + 0 - 2 - 7 - 18 - 7 - 13 - 21 - 10 - 12 - 17 - 28 - 17 - 23 - 31 - 20 - 22 - 27 - 38 - 27 - 33", "x2": "sub x_0_7 INT+ 1 0", "tree": "(x_0_7 sub 10)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1", "x2": "sqr add mod n INT- 2 x_0_1", "tree": "(((n mod -2) add x_0_1))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 10 + 2 + 8 + 0 + 6 - 2 + 4 + 77 + 2 + 75 + 0 + 73 - 2 + 71 + 252 + 69 + 250 + 67 + 248 + 65 + 246 + 63", "x2": "sub mod x_0_2 mul n n INT+ 2", "tree": "((x_0_2 mod (n mul n)) sub 2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 8 + 7 + 10 - 9 - 35 - 50 + 45 + 175 + 250 - 225 - 875 - 1250 + 1125 + 4375 + 6250 - 5625 - 2 1875 - 3 1250 + 2 8125 + 10 9375 + 15 6250 - 14 625 - 54 6875 - 78 1250 + 70 3125", "x2": "mul INT- 5 add x_0_3 sqr relu sub INT- 7 add idiv INT+ 6 x_0_5 INT+ 8", "tree": "(-5 mul (x_0_3 add (relu((-7 sub ((6 idiv x_0_5) add 8))))**2))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 3 - 7 - 4 - 3 + 16 + 4 + 36 + 16 + 9 + 256 + 16 + 1296 + 256 + 81 + 6 5536 + 256 + 167 9616 + 6 5536 + 6561 + 42 9496 7296 + 6 5536 + 2 8211 990 7456 + 42 9496 7296 + 4304 6721 + 1844 6744 737 955 1616", "x2": "sqr add x_0_5 idiv INT+ 8 n", "tree": "((x_0_5 add (8 idiv n)))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 1 - 3 + 2 - 1 - 3 + 0 + 0 - 7 - 7 - 8 - 4 - 3 - 9 - 8 - 8 - 3 - 1 - 6 - 4 - 3 + 3 + 6 + 2 + 5 + 7 + 14 + 18 + 15", "x2": "add sub n sqr INT+ 4 idiv x_0_5 abs sub idiv INT- 6 n relu mul INT+ 1 0 x_0_8", "tree": "((n sub (4)**2) add (x_0_5 idiv abs(((-6 idiv n) sub relu((10 mul x_0_8))))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 12 + 17 + 24 + 33 + 44 + 57 + 72 + 89 + 108 + 129 + 152 + 177 + 204 + 233 + 264 + 297 + 332 + 369 + 408 + 449 + 492", "x2": "mod add sqr n INT+ 8 mul x_0_1 add n relu sqr INT- 9", "tree": "(((n)**2 add 8) mod (x_0_1 mul (n add relu((-9)**2))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 + 5 + 4 + 3 + 2 + 2 + 2 + 2 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1", "x2": "add idiv INT+ 9 n sign idiv relu x_0_1 abs mod n INT+ 9", "tree": "((9 idiv n) add sign((relu(x_0_1) idiv abs((n mod 9)))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2", "x2": "abs idiv n INT+ 9", "tree": "abs((n idiv 9))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 0 + 4 + 1 - 5 + 7 + 10 + 12 + 12 + 11 + 20 + 22 + 16 + 9 + 9 + 17 + 26 + 28 + 22 + 15 + 15 + 23 + 32 + 34 + 28 + 21 + 21", "x2": "add mod sign x_0_6 n sub n sub abs x_0_2 x_0_1", "tree": "((sign(x_0_6) mod n) add (n sub (abs(x_0_2) sub x_0_1)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 2 + 4 + 9 - 4 + 0 - 10 + 9 + 69 + 0 + 220 + 9 + 69 + 0 + 220 + 9 + 69 + 0 + 220 + 9 + 69 + 0 + 220 + 9 + 69 + 0 + 220 + 9", "x2": "mod x_0_4 add sign idiv INT+ 4 x_0_1 add n mul n add x_0_7 n", "tree": "(x_0_4 mod (sign((4 idiv x_0_1)) add (n add (n mul (x_0_7 add n)))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 4 + 8 - 9 - 6 - 2 + 5 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "add sign x_0_3 relu idiv idiv x_0_1 n sub x_0_7 x_0_6", "tree": "(sign(x_0_3) add relu(((x_0_1 idiv n) idiv (x_0_7 sub x_0_6))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1", "x2": "mod mod n mul n add n n INT+ 5", "tree": "((n mod (n mul (n add n))) mod 5)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 8 - 8 - 7 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 8 + 0 + 4 + 10 + 18 + 28 + 0 + 9 + 20 + 33 + 48 + 0 + 14 + 30 + 48 + 68 + 0 + 19 + 40 + 63", "x2": "mod mul add n INT+ 2 n mul n INT+ 5", "tree": "(((n add 2) mul n) mod (n mul 5))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 7 + 10 - 10 + 11 - 39 + 11 - 262 + 11 - 2347 + 11 - 2 5806 + 11 - 33 5467 + 11 - 503 1994 + 11 - 8554 3887 + 11 - 16 2533 3842 + 11 - 341 3201 671 + 11 - 7850 3624 5422", "x2": "mod add sqr sign INT+ 1 INT+ 1 0 mul x_0_2 n", "tree": "(((sign(1))**2 add 10) mod (x_0_2 mul n))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 4 - 7 + 6 + 7 + 6 - 3 + 9 - 6 - 4 + 363 + 577 - 1182 + 1176 + 1575 + 1539 - 864 + 2918 - 2164 - 1596 + 16 89 + 27 9271 - 62 5271 + 67 7378 + 98 4378 + 104 368 - 62 9850 + 228 7715 - 181 9921 - 143 6395 + 1 5384 5535", "x2": "sub mul relu mul n n x_0_10 idiv mod sub INT- 4 sub n x_0_3 sub INT+ 9 n INT+ 2", "tree": "((relu((n mul n)) mul x_0_10) sub (((-4 sub (n sub x_0_3)) mod (9 sub n)) idiv 2))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 2 + 5 - 7 - 2 + 0 - 1 - 5 + 2 - 10 - 5 - 3 - 4 - 8 - 1 - 13 - 8 - 6 - 7 - 11 - 4 - 16 - 11 - 9 - 10 - 14 - 7 - 19", "x2": "add INT- 3 x_0_6", "tree": "(-3 add x_0_6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 2 - 4 - 1 - 8 + 9 - 5 - 1 + 7 + 28 + 21 + 14 + 28 + 21 + 28 + 0 + 7 + 28 + 14 + 14 + 7 + 21 + 35 + 0 + 7 + 14 + 14 + 14 + 7", "x2": "mul INT+ 7 mod mod mod x_0_8 add n sub sub n idiv x_0_4 INT- 4 INT- 3 n INT+ 6", "tree": "(7 mul (((x_0_8 mod (n add ((n sub (x_0_4 idiv -4)) sub -3))) mod n) mod 6))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 2 + 8 - 7 - 10 - 7 - 4 - 3 + 4 + 6 + 1512 + 2009 + 2590 + 3222 + 3938 + 4732 + 5598 + 6534 + 7548 + 8629 + 1 1286 + 1 3006 + 1 4882 + 1 6881 + 1 9036 + 2 1341 + 2 3790 + 2 6381 + 2 9122 + 3 2002 + 3 6530", "x2": "mod INT- 6 add x_0_10 sub relu sqr mod mul add sub n INT+ 9 n INT+ 3 mul n n n", "tree": "(-6 mod (x_0_10 add (relu((((((n sub 9) add n) mul 3) mod (n mul n)))**2) sub n)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 10 + 3 + 1 + 10 - 3 + 4 - 30 + 3 + 10 - 30 - 12 - 120 - 90 + 30 - 300 + 360 + 1440 + 1 800 - 2700 - 9000 - 10 8000 + 51 8400 + 1555 2000 - 2916 0 + 2430 0 + 9 7200 0 - 559 8720 0", "x2": "mul sub x_0_5 idiv INT+ 4 n x_0_6", "tree": "((x_0_5 sub (4 idiv n)) mul x_0_6)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 5 - 7 + 8 + 1 + 1 + 8 + 10 + 0 - 9 + 9 + 11 + 1 - 9 + 9 + 12 + 2 - 9 + 10 + 12 + 3 - 9 + 10 + 12 + 4 - 9 + 10 + 12 + 4 - 9 + 10", "x2": "add x_0_4 idiv mul INT+ 2 abs x_0_9 n", "tree": "(x_0_4 add ((2 mul abs(x_0_9)) idiv n))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 10 - 3 + 8 + 8 - 6 + 3 - 10 - 2 + 10 + 11 - 2 + 8 - 4 + 5 + 18 + 20 + 8 + 19 + 8 + 18 + 32 + 35 + 24 + 36 + 26 + 37", "x2": "mul add INT- 8 add x_0_6 n sign add n sqr x_0_3", "tree": "((-8 add (x_0_6 add n)) mul sign((n add (x_0_3)**2)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 5 - 9 - 3 + 4 - 9 + 9 - 8 - 1 - 2 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr sub n abs sign sqr sub n add n sub sqr x_0_1 x_0_9", "tree": "((n sub abs(sign(((n sub (n add ((x_0_1)**2 sub x_0_9))))**2))))**2", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 9 + 8 + 0 + 8 - 7 - 5 - 4 - 2 - 54 + 48 + 0 + 48 - 42 - 30 - 24 - 12 - 324 + 288 + 0 + 288 - 252 - 180 - 144 - 72 - 1944 + 1728 + 0 + 1728 - 1512", "x2": "mul relu INT+ 6 x_0_8", "tree": "(relu(6) mul x_0_8)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 7 + 22 + 57 + 159 + 462 + 1368 + 4083 + 1 2225 + 3 6648 + 10 9914 + 32 9709 + 98 9091 + 296 7234 + 890 1660 + 2670 4935 + 8011 4757 + 2 4034 4220 + 7 2103 2606 + 21 6309 7761 + 64 8929 3223 + 194 6787 9606 + 584 363 8752", "x2": "add mul sub n abs x_0_1 INT- 4 sub n relu x_0_1", "tree": "(((n sub abs(x_0_1)) mul -4) add (n sub relu(x_0_1)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 6 - 6 + 7 + 6 - 3 + 1 - 16 - 45 - 39 + 5 + 15 + 12 + 6 + 60 + 55 + 12 - 317 - 308 + 14 - 39 - 1413 + 11 + 341 + 333 + 12 - 4722 + 1441", "x2": "sub mod n sub x_0_1 add x_0_1 mul x_0_7 sub x_0_2 INT- 9 x_0_6", "tree": "((n mod (x_0_1 sub (x_0_1 add (x_0_7 mul (x_0_2 sub -9))))) sub x_0_6)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 9 + 10 + 0 - 8 + 8 - 4 - 6 - 32 - 9 - 60 - 11 - 24 - 91 - 364 - 105 - 944 - 561 - 126 - 703 - 5500 - 2751 - 1 5488 - 1 5525 - 6792 - 9175 - 7 8130 - 11 1267 - 5 6224", "x2": "mul add mod x_0_1 add n add add mod INT+ 3 idiv n n x_0_7 x_0_6 INT- 7 n", "tree": "(((x_0_1 mod (n add (((3 mod (n idiv n)) add x_0_7) add x_0_6))) add -7) mul n)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 8 + 6 + 1 + 54 - 72 + 54 + 9 + 486 - 648 + 486 + 81 + 4374 - 5832 + 4374 + 729 + 3 9366 - 5 2488 + 3 9366 + 6561 + 35 4294 - 47 2392 + 35 4294 + 5 9049 + 318 8646", "x2": "mul x_0_4 sqr INT+ 3", "tree": "(x_0_4 mul (3)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 7 + 7 + 2 - 1 + 2 + 4 + 1 + 4 + 7 + 7 + 2 + 1 + 2 + 4 + 1 + 4 + 7 + 7 + 2 + 1 + 2 + 4 + 1 + 4 + 7 + 7 + 2 + 1", "x2": "relu relu abs abs x_0_8", "tree": "relu(relu(abs(abs(x_0_8))))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 20 + 100 - 500 + 2500 - 1 2500 + 6 2500 - 31 2500 + 156 2500 - 781 2500 + 3906 2500 - 1 9531 2500 + 9 7656 2500 - 48 8281 2500 + 244 1406 2500 - 1220 7031 2500 + 6103 5156 2500 - 3 517 5781 2500 + 15 2587 8906 2500 - 76 2939 4531 2500 + 381 4697 2656 2500 - 1907 3486 3281 2500", "x2": "mul INT- 5 idiv x_0_1 sign idiv INT+ 1 0 relu n", "tree": "(-5 mul (x_0_1 idiv sign((10 idiv relu(n)))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 - 4 + 7 - 3 - 1 - 1 + 5 - 8 + 5 + 20 - 33 - 168 - 52 - 84 - 90 - 192 + 17 - 216 - 513 + 520 + 3381 + 990 + 1771 + 1992 + 4625 - 624 + 5643 + 1 4168 - 1 5283 - 10 1640", "x2": "mul n add sub INT- 1 x_0_9 INT- 6", "tree": "(n mul ((-1 sub x_0_9) add -6))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 2 + 7 + 14 + 23 + 34 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359 + 398 + 439", "x2": "mod INT- 2 sqr n", "tree": "(-2 mod (n)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 + 9 - 5 + 8 - 6 + 7 - 7 + 6 - 8 + 5 - 9 + 4 - 10 + 3 - 11 + 2 - 12 + 1 - 13 + 0 - 14 - 1 - 15", "x2": "sub x_0_2 sign mul add x_0_1 sqr idiv INT+ 6 INT+ 5 mod n n", "tree": "(x_0_2 sub sign(((x_0_1 add ((6 idiv 5))**2) mul (n mod n))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 + 1 + 3 - 5 + 6 - 3 - 5 - 6 + 3 + 5 + 6 - 3 - 5 - 6 + 3 + 5 + 6 - 3 - 5 - 6 + 3 + 5 + 6 - 3 - 5 - 6 + 3", "x2": "mul sign sub mod x_0_6 n sqr sqr sub n INT+ 6 x_0_3", "tree": "(sign(((x_0_6 mod n) sub (((n sub 6))**2)**2)) mul x_0_3)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 7 + 0 + 6 + 5 - 4 + 9 + 58 + 86 + 92 + 62 + 59 + 78 + 135 + 167 + 177 + 153 + 158 + 185 + 248 + 284 + 298 + 280 + 293 + 328 + 397 + 437 + 455", "x2": "sub mul n abs n sub x_0_3 sign sub x_0_5 x_0_7", "tree": "((n mul abs(n)) sub (x_0_3 sub sign((x_0_5 sub x_0_7))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 2 + 9 + 40 + 46 + 20 + 52 + 156 + 152 + 12 + 96 + 460 + 384 + 244 + 16 + 412 + 992 + 332 + 688 + 780 + 224 + 204 + 1488 + 1708", "x2": "abs add mul sub x_0_2 abs sqr add n n INT+ 1 x_0_2", "tree": "abs((((x_0_2 sub abs(((n add n))**2)) mul 1) add x_0_2))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 + 2 + 2 - 4 - 3 + 0 - 2 - 7 + 1 + 3 + 1 + 2 + 0 - 5 + 3 + 5 + 3 + 4 + 2 - 3 + 5 + 7 + 5 + 6 + 4 - 1 + 7 + 9 + 7 + 8 + 6 + 1", "x2": "add idiv INT- 2 add x_0_2 abs add INT+ 4 add mul INT- 7 x_0_11 mul INT- 4 INT- 8 sub x_0_6 INT- 3", "tree": "((-2 idiv (x_0_2 add abs((4 add ((-7 mul x_0_11) add (-4 mul -8)))))) add (x_0_6 sub -3))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 3 + 2 - 1 + 5 + 4 + 5 - 5 - 2 - 3 + 6 - 1 - 1 - 2 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 1", "x2": "idiv INT- 2 sqr x_0_10", "tree": "(-2 idiv (x_0_10)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 4 + 6 + 3 + 10 - 29 - 43 - 55 - 73 - 91 - 109 - 131 - 155 - 181 - 209 - 239 - 271 - 305 - 341 - 379 - 419 - 461 - 505 - 551 - 599 - 649", "x2": "sub n mul sub sqr n sign sub mod n mul x_0_5 x_0_3 x_0_2 sqr sign n", "tree": "(n sub (((n)**2 sub sign(((n mod (x_0_5 mul x_0_3)) sub x_0_2))) mul (sign(n))**2))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 4 - 6 - 10 - 16 - 24 - 39 - 51 - 65 - 81 - 99 - 124 - 146 - 170 - 196 - 224 - 259 - 291 - 325 - 361 - 399 - 444", "x2": "sub mod mod n mul INT+ 1 0 INT- 9 INT- 5 relu sub sqr n sign sign INT+ 1", "tree": "(((n mod (10 mul -9)) mod -5) sub relu(((n)**2 sub sign(sign(1)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7", "x2": "idiv relu relu n INT+ 3", "tree": "(relu(relu(n)) idiv 3)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 5 - 1 + 9 - 415 - 1024 - 1854 - 2941 - 4317 - 6017 - 8072 - 1 517 - 1 3387 - 1 6716 - 2 541 - 2 4890 - 2 9802 - 3 5310 - 4 1444 - 4 8242 - 5 5737 - 6 3963 - 7 2956 - 8 2746 - 9 3368", "x2": "add x_0_1 add mod x_0_4 add sign relu n INT+ 3 mul n mul n sub INT- 9 abs INT- 8", "tree": "(x_0_1 add ((x_0_4 mod (sign(relu(n)) add 3)) add (n mul (n mul (-9 sub abs(-8))))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 8 - 2 + 5 + 8 - 4 + 0 + 5 + 5 - 3 + 1 - 8 - 2 + 5 + 8 - 4 + 0 + 5 + 5 - 3 + 1 - 8 - 2 + 5 + 8 - 4 + 0 + 5 + 5 - 3 + 1", "x2": "sub x_0_10 sub n n", "tree": "(x_0_10 sub (n sub n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 2 + 3 + 5 + 10 + 1 + 8 - 1 - 8 + 9 + 2 + 23 + 32 + 53 + 18 + 47 + 12 - 15 + 54 + 27 + 112 + 149 + 234 + 95 + 212 + 73 - 34 + 243 + 136 + 477 + 626", "x2": "add mul sub mod x_0_2 sign n INT- 4 x_0_9 relu abs n", "tree": "((((x_0_2 mod sign(n)) sub -4) mul x_0_9) add relu(abs(n)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 6 + 1 - 6 + 3 + 10 + 4 + 1 + 16 + 1 + 4 + 0 + 1 + 16 + 16 + 16 + 1 + 0 + 16 + 16 + 16 + 16 + 16 + 0 + 16 + 16 + 16", "x2": "sqr abs mod x_0_6 INT- 5", "tree": "(abs((x_0_6 mod -5)))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 4 - 5 - 2 + 3 - 4 + 25 + 39 + 3 + 1 + 39 - 1 + 774 + 1716 + 57 + 36 + 1795 + 22 + 54 8028 + 267 822 + 3686 + 1689 + 292 4646 + 809 + 2703 944 388 + 6 4200 280 5006 + 1228 7722", "x2": "idiv sub mod sign INT+ 3 relu n sqr add n mul INT+ 3 x_0_6 INT- 1 0", "tree": "(((sign(3) mod relu(n)) sub ((n add (3 mul x_0_6)))**2) idiv -10)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 10 - 10 + 5 + 155 + 4366 + 10 3489 + 211 8654 + 3824 3627 + 6 1836 9467 + 90 6855 6500 + 1218 4550 4504 + 1 5124 4814 8183 + 17 4658 9668 2487 + 188 7689 96 5048 + 1919 2519 4787 8820 + 1 8439 1283 249 6325 + 16 8060 1755 7131 793 + 145 8206 5490 2714 5263 + 1208 2394 8354 1104 4790 + 9586 8946 4408 460 5418 + 7 3027 5105 7275 9643 559 + 53 5265 4373 3198 6274 2405 + 378 2927 6459 317 9999 4342 + 2582 7810 5872 5927 9246 8578", "x2": "add x_0_3 sub x_0_1 sub idiv mul INT- 8 mul add relu INT+ 9 INT+ 8 x_0_1 n x_0_2", "tree": "(x_0_3 add (x_0_1 sub (((-8 mul ((relu(9) add 8) mul x_0_1)) idiv n) sub x_0_2)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 + 8 + 12 - 16 - 24 + 32 + 48 - 64 - 96 + 128 + 192 - 256 - 384 + 512 + 768 - 1024 - 1536 + 2048 + 3072 - 4096 - 6144 + 8192 + 1 2288", "x2": "mul x_0_2 add INT- 6 sub INT+ 5 sign INT+ 4", "tree": "(x_0_2 mul (-6 add (5 sub sign(4))))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 2 - 5 - 1 + 7 + 9 - 8 - 2 + 8 + 63 + 320 + 0 - 960 - 1430 + 1176 + 195 - 2016 - 1 6320 - 9 2448 - 323 + 34 5240 + 57 171 - 51 7880 - 9 4668 + 106 3920 + 938 3425 + 5768 6928 + 21 7350 - 2 5133 5448 - 4 4644 4676", "x2": "mul mul relu relu n sub INT- 1 x_0_8 mod INT- 2 relu n", "tree": "((relu(relu(n)) mul (-1 sub x_0_8)) mul (-2 mod relu(n)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 8 - 9 + 1 + 5 + 10 + 10 - 9 + 8 + 1 - 1 + 8 + 42 + 33 - 12 - 3 + 6 - 138 + 150 - 138 - 138 + 150 - 138 - 138 - 138 + 150 + 150 - 138 + 150 - 138 + 150 + 150 - 138", "x2": "sub idiv mul mod sub INT+ 6 INT- 1 0 n INT- 9 sign x_0_11 INT- 6", "tree": "(((((6 sub -10) mod n) mul -9) idiv sign(x_0_11)) sub -6)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 9 + 5 + 4 - 8 + 2 - 1 - 1 - 3 + 4 - 16 - 6 - 9 + 9 - 11 - 4 - 24 + 14 - 17 + 1 - 19 + 12 - 32 - 6 - 25 + 7", "x2": "mul sign mul x_0_4 INT- 2 add x_0_6 INT- 8", "tree": "(sign((x_0_4 mul -2)) mul (x_0_6 add -8))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 9 + 3 - 2 - 6 + 80 - 80 + 32 + 40 - 648 + 1224 - 312 - 120 + 5448 - 9848 + 1 2232 + 904 - 4 3640 + 12 2312 - 9 7912 + 9 568 + 35 6296 - 97 8552 + 176 1736 - 72 4600", "x2": "mul sub mod INT- 7 x_0_5 x_0_4 INT+ 8", "tree": "(((-7 mod x_0_5) sub x_0_4) mul 8)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400", "x2": "sub sub n n mul n n", "tree": "((n sub n) sub (n mul n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 + 4 - 3 + 5 + 7 - 8 - 10 + 7 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign add x_0_8 sub x_0_4 sub INT+ 1 sign sub x_0_7 INT- 3", "tree": "sign((x_0_8 add (x_0_4 sub (1 sub sign((x_0_7 sub -3))))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 10 + 4 + 11 + 4 + 10 + 2 + 7 - 2 + 2 - 8 - 5 - 16 - 14 - 26 - 25 - 38 - 38 - 52 - 53 - 68 - 70", "x2": "sub x_0_2 add add sign sqr sqr idiv mod INT+ 6 INT+ 5 INT- 5 n INT- 6", "tree": "(x_0_2 sub ((sign(((((6 mod 5) idiv -5))**2)**2) add n) add -6))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 7 - 3 + 1 + 6 - 7 - 3 + 1 + 6 - 7 - 3 + 1 + 6 - 7 - 3 + 1 + 6 - 7 - 3 + 1 + 6 - 7 - 3 + 1", "x2": "add x_0_4 mul sub x_0_1 sign n mod INT+ 2 INT- 2", "tree": "(x_0_4 add ((x_0_1 sub sign(n)) mul (2 mod -2)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr mul n relu n", "tree": "((n mul relu(n)))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 + 6 + 0 - 3 - 8 + 12 + 1 + 8 + 12 + 18 - 1 + 11 + 5 + 2 - 3 + 17 + 6 + 13 + 17 + 23 + 4 + 16 + 10 + 7 + 2", "x2": "sub add n mod x_0_2 x_0_2 x_0_5", "tree": "((n add (x_0_2 mod x_0_2)) sub x_0_5)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 0 - 3 - 9 + 5 - 9 + 10 - 9 + 12 - 9 + 14 - 9 + 16 - 9 + 18 - 9 + 20 - 9 + 22 - 9 + 24 - 9", "x2": "add relu sub add n mod INT+ 3 x_0_2 x_0_1 INT- 9", "tree": "(relu(((n add (3 mod x_0_2)) sub x_0_1)) add -9)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 2 + 144 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481", "x2": "sqr mul mod n mul n add x_0_1 INT- 2 n", "tree": "(((n mod (n mul (x_0_1 add -2))) mul n))**2", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 10 + 8 + 2 + 26 + 5 + 36 + 7 + 38 + 10 + 32 + 12 + 27 + 15 + 24 + 18 + 23 + 21 + 24 + 24 + 25 + 26 + 27", "x2": "add idiv add add INT- 5 sub INT+ 6 INT+ 4 relu mul INT+ 6 x_0_2 x_0_1 n", "tree": "((((-5 add (6 sub 4)) add relu((6 mul x_0_2))) idiv x_0_1) add n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 6 - 7 + 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 + 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 + 0 - 1", "x2": "mod sub abs abs INT+ 3 n INT- 8", "tree": "((abs(abs(3)) sub n) mod -8)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 + 5 + 2 + 8 + 8 - 9 - 8 + 7 + 19 + 37 + 55 + 58 + 63 + 85 + 120 + 173 + 245 + 321 + 403 + 508 + 649 + 844 + 1112 + 1457 + 1885 + 2419 + 3095", "x2": "add idiv INT- 3 x_0_8 add n add x_0_6 x_0_1", "tree": "((-3 idiv x_0_8) add (n add (x_0_6 add x_0_1)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 10 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr mod sign mul x_0_2 mul sub INT+ 1 0 n sqr INT- 8 n", "tree": "((sign((x_0_2 mul ((10 sub n) mul (-8)**2))) mod n))**2", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 2 + 8 + 5 - 21 - 192 - 1423 - 1 1487 - 10 3535 - 103 5698 - 1139 4284 - 1 3674 3107 - 17 7776 4169 - 248 8973 4340 - 3733 5740 9695 - 5 9738 5529 8575 - 101 5573 1784 331 - 1828 566 1086 726 - 3 4733 4489 6376 3960 - 69 4674 9531 3057 8291 - 1458 8275 5730 5998 5005 - 3 2094 3890 6639 3053 1448 - 73 8174 4218 7193 6598 7927 - 1771 6255 5924 2179 1428 9255", "x2": "mod n sub x_0_4 sub INT- 4 mul add n mod sqr n n sub sub x_0_1 n INT+ 7", "tree": "(n mod (x_0_4 sub (-4 sub ((n add ((n)**2 mod n)) mul ((x_0_1 sub n) sub 7)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 8 + 8 + 1 - 10 + 6 - 2 - 8 - 11 - 10 - 11 - 14 - 13 - 15 - 16 - 18 - 19 - 20 - 22 - 22 - 23 - 25 - 26 - 28 - 28 - 29 - 30", "x2": "sub idiv n add relu INT+ 1 add idiv mul n INT+ 9 x_0_7 mod n INT+ 5 n", "tree": "((n idiv (relu(1) add (((n mul 9) idiv x_0_7) add (n mod 5)))) sub n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 6 + 8 - 10 + 3 - 4 - 2 - 4 - 9 + 1 + 0 + 5 - 5 - 64 - 62 - 92 - 93 - 114 - 128 - 146 - 169 - 177 - 198 - 213 - 245 - 326 - 348 - 402 - 429 - 476 - 518 - 564 - 617", "x2": "sub add n add x_0_12 n idiv mul n n INT+ 2", "tree": "((n add (x_0_12 add n)) sub ((n mul n) idiv 2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 4 + 9 + 7 - 5 + 0 + 1 + 1 - 2 + 8 + 8 - 6 - 7 - 8 - 8 - 8 - 7 - 7 - 8 - 6 - 6 - 8 - 7 - 7 - 7 - 7 - 7 - 7 - 7 - 8 - 8", "x2": "add INT- 9 add relu abs abs sign INT- 1 0 abs idiv x_0_10 x_0_3", "tree": "(-9 add (relu(abs(abs(sign(-10)))) add abs((x_0_10 idiv x_0_3))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 9 + 9 + 3 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign mul add x_0_3 idiv n x_0_4 sign INT- 7", "tree": "sign(((x_0_3 add (n idiv x_0_4)) mul sign(-7)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 4 + 5 + 3 - 6 + 1 - 2 - 3 - 2 - 4 - 5 - 5 - 3 - 2 - 2 - 3 - 7 - 5 - 5 + 0 - 5 - 3 - 2 - 1 + 0 - 6 - 2", "x2": "mod sub add add INT+ 5 x_0_4 INT+ 3 x_0_7 INT- 8", "tree": "((((5 add x_0_4) add 3) sub x_0_7) mod -8)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 9 + 1 + 6 + 8 + 7 - 8 + 4 - 9 + 5 - 15 - 25 - 65 - 45 - 15 - 75 + 5 - 5 - 55 - 35 - 45 + 5 - 55 - 25 - 5 - 75 - 65 - 15 + 5", "x2": "add mul mul INT- 1 0 sign n mod mul INT- 7 x_0_8 relu relu mod INT+ 9 INT+ 1 0 INT+ 5", "tree": "(((-10 mul sign(n)) mul ((-7 mul x_0_8) mod relu(relu((9 mod 10))))) add 5)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 5 + 8 + 8 + 7 - 6 - 6 - 5 + 8 + 8 + 7 - 6 - 6 - 5 + 8 + 8 + 7 - 6 - 6 - 5 + 8 + 8 + 7 - 6", "x2": "sub add relu abs INT- 1 sign sqr relu INT+ 7 x_0_3", "tree": "((relu(abs(-1)) add sign((relu(7))**2)) sub x_0_3)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 - 34 - 126 - 536 - 2720 - 1 6368 - 11 4632 - 91 7120 - 825 4152 - 8254 1600 - 9 795 7688 - 108 9549 2352 - 1416 4140 680 - 1 9829 7960 9632 - 29 7446 9414 4600 - 475 9151 631 3728 - 8090 5568 733 3512 - 14 5630 225 3200 3360 - 276 6970 4281 806 3992 - 5533 9408 5621 6128 0 - 11 6212 7579 8053 8688 168", "x2": "mul add add INT- 1 0 INT+ 2 x_0_1 n", "tree": "(((-10 add 2) add x_0_1) mul n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 8 - 9 + 10 + 6 - 10 + 9 - 9 - 4 + 10 + 54 + 154 - 55 + 206 + 160 - 86 + 231 - 80 + 10 + 290 + 1228 + 3486 - 1163 + 5050 + 4110 - 2122 + 6355 - 2118 + 416 + 8830", "x2": "add mul add x_0_10 INT+ 4 n INT+ 1 0", "tree": "(((x_0_10 add 4) mul n) add 10)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 5 + 5 + 3 - 57 - 117 - 27 - 57 - 667 - 1277 - 387 - 697 - 6807 - 1 2917 - 4027 - 7137 - 6 8247 - 12 9357 - 4 467 - 7 1577 - 68 2687 - 129 3797 - 40 4907 - 71 6017", "x2": "sub mul sub n x_0_4 INT- 1 0 abs INT- 7", "tree": "(((n sub x_0_4) mul -10) sub abs(-7))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 10 - 6 - 1 - 3 - 2 + 9 + 4 + 3 + 2 + 1 + 2 + 3 - 8 + 7 + 4 + 11 + 8 + 5 + 12 + 11 + 8 + 15 + 14", "x2": "add sub mul INT- 2 mod INT+ 7 idiv n x_0_3 relu relu INT+ 7 add idiv sqr INT+ 1 n n", "tree": "(((-2 mul (7 mod (n idiv x_0_3))) sub relu(relu(7))) add (((1)**2 idiv n) add n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 - 3 + 0 - 10 - 4 + 9 + 9 - 4 - 12 - 20 - 2 - 16 - 44 - 46 - 22 - 8 + 6 - 32 - 6 + 48 + 50 + 0 - 30 - 60 + 14 - 40 - 150", "x2": "mul INT- 2 add n x_0_7", "tree": "(-2 mul (n add x_0_7))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 7 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 9 + 10 + 12 + 13 + 13 + 14 + 16 + 17 + 17 + 18", "x2": "add idiv sqr n add mod x_0_2 sqr INT+ 8 INT+ 9 mod n relu n", "tree": "(((n)**2 idiv ((x_0_2 mod (8)**2) add 9)) add (n mod relu(n)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 15 + 26 + 39 + 54 + 71 + 90 + 111 + 134 + 159 + 186 + 215 + 246 + 279 + 314 + 351 + 390 + 431 + 474 + 519", "x2": "add INT- 1 0 sqr add n INT+ 3", "tree": "(-10 add ((n add 3))**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 4 + 3 + 5 + 2 - 9 + 1 - 10 + 7 - 3 - 5 + 1 - 72 + 16 - 190 + 119 - 21 - 90 + 8 - 1872 + 272 - 3040 + 2737 + 1029 - 3600 - 1320 - 27 1440 + 1632 + 18 8480 + 10 1269 - 189 5418 - 109 800", "x2": "add mod mod n n n mul add n x_0_11 x_0_7", "tree": "(((n mod n) mod n) add ((n add x_0_11) mul x_0_7))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 10 - 3 + 6 + 5 - 6 - 1 - 1 - 1 - 2 - 1 - 1 - 1 - 2 - 1 - 1 - 1 - 2 - 1 - 1 - 1 - 2 - 1 - 1 - 1 - 2", "x2": "idiv INT+ 1 0 sub sub INT- 1 0 x_0_4 abs x_0_5", "tree": "(10 idiv ((-10 sub x_0_4) sub abs(x_0_5)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 + 4 + 3 - 3 + 3 - 6 + 5 - 9 + 1 + 0 - 2 - 2 - 2 - 2 + 0 - 2 + 0 - 4 - 8 - 8 - 8 - 8 - 8 - 10 - 10 - 12 - 2 + 0 + 0", "x2": "mul add INT+ 2 INT- 4 abs idiv relu n mul sub x_0_9 sign INT- 8 INT- 5", "tree": "((2 add -4) mul abs((relu(n) idiv ((x_0_9 sub sign(-8)) mul -5))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 5 + 8 + 3 - 7 - 5 - 56 + 16 - 20 - 86 - 80 - 392 + 34 - 188 - 590 - 560 - 2438 + 112 - 1226 - 3644 - 3470 - 1 4744 + 550 - 7484 - 2 1998 - 2 960", "x2": "add abs INT- 1 0 sub mul sub x_0_5 n INT+ 6 mod sqr mul n n INT- 1", "tree": "(abs(-10) add (((x_0_5 sub n) mul 6) sub (((n mul n))**2 mod -1)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 2 + 1 + 2 + 5 + 3 + 1 + 2 + 9 + 5 + 1 + 2 + 13 + 7 + 1 + 2 + 17 + 9 + 1 + 2 + 21 + 11", "x2": "idiv n mod x_0_2 add sign INT+ 1 0 mod n sqr sub n sign x_0_2", "tree": "(n idiv (x_0_2 mod (sign(10) add (n mod ((n sub sign(x_0_2)))**2))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 + 8 - 2 - 10 + 4 - 2 + 256 + 0 + 0 + 64 + 0 + 26 2144 + 0 + 0 + 1 6384 + 0 + 2748 7790 6944 + 0 + 0 + 10 7374 1824 + 0 + 3022 3145 4903 6572 9367 6544 + 0 + 0 + 461 1686 184 2738 7904 + 0", "x2": "mul INT+ 4 sqr idiv relu x_0_5 sign add mod add INT- 6 INT+ 5 x_0_3 idiv x_0_6 n", "tree": "(4 mul ((relu(x_0_5) idiv sign((((-6 add 5) mod x_0_3) add (x_0_6 idiv n)))))**2)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 5 + 7 - 4 + 14 + 14 + 14 + 19 + 14 + 15 + 16 + 15 + 18 + 19 + 19 + 21 + 21 + 21 + 22 + 23 + 24 + 25 + 25 + 26", "x2": "relu sub idiv idiv x_0_4 INT+ 1 INT- 3 sub INT- 1 0 n", "tree": "relu((((x_0_4 idiv 1) idiv -3) sub (-10 sub n)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 6 + 16 + 27 + 45 + 66 + 91 + 121 + 154 + 191 + 232 + 277 + 326 + 379 + 436 + 497 + 562 + 631 + 704 + 781 + 862 + 947", "x2": "add idiv x_0_2 sqr n add sub mul n n n sqr n", "tree": "((x_0_2 idiv (n)**2) add (((n mul n) sub n) add (n)**2))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 6 - 7 - 7 + 4 - 4 + 36 + 49 + 49 + 16 + 16 + 1296 + 2401 + 2401 + 256 + 256 + 167 9616 + 576 4801 + 576 4801 + 6 5536 + 6 5536 + 2 8211 990 7456 + 33 2329 3056 9601 + 33 2329 3056 9601 + 42 9496 7296 + 42 9496 7296", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 - 7 + 8 - 4 + 10 + 6 + 49 + 5 + 16 + 7 + 15 + 12 + 21 + 14 + 28 + 13 + 18 + 15 + 51 + 20 + 36 + 22 + 40 + 21 + 27", "x2": "relu idiv mul n n add INT+ 6 mod add x_0_4 sign n x_0_5", "tree": "relu(((n mul n) idiv (6 add ((x_0_4 add sign(n)) mod x_0_5))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 1 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4", "x2": "mod x_0_3 abs n", "tree": "(x_0_3 mod abs(n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 6 - 64 - 1156 - 3 2372 - 129 4884 - 6992 3740 - 48 9466 1804 - 4307 3023 8756 - 46 5188 6578 5652 - 6047 4525 5213 4764 - 93 1307 6930 2875 3660 - 1 6763 5384 7451 7565 8804 - 348 6816 26 9965 3703 1236 - 8 2986 2208 6425 1758 1343 4172 - 2240 6279 6333 4797 4696 2722 6444 - 68 1150 9008 5377 8430 7666 7683 8980 - 2 3159 1306 2902 8466 6460 6701 2525 3204 - 875 4151 3777 7276 392 2133 3073 4571 1116 - 36 5923 5275 9090 1384 3945 1722 4705 724 6492 - 1 6832 4822 6918 1463 6821 4779 2336 4333 3338 6324 - 848 3571 636 6745 7695 8024 8733 7562 4000 2670 7300", "x2": "add sub mul mul x_0_1 relu add add n mod INT+ 1 n INT+ 2 abs n INT+ 3 sign INT- 8", "tree": "((((x_0_1 mul relu(((n add (1 mod n)) add 2))) mul abs(n)) sub 3) add sign(-8))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 5 - 4 - 3 - 2 - 1 + 0 + 1 + 2 - 5 - 4 - 3 - 2 - 1 + 0 + 1 + 2 - 5 - 4 - 3 - 2", "x2": "add mod n INT- 8 INT+ 2", "tree": "((n mod -8) add 2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 7 - 1 - 1 + 56 + 8 + 8 - 448 - 64 - 64 + 3584 + 512 + 512 - 2 8672 - 4096 - 4096 + 22 9376 + 3 2768 + 3 2768 - 183 5008 - 26 2144 - 26 2144 + 1468 64 + 209 7152", "x2": "mul mul abs idiv relu INT+ 4 INT- 2 x_0_3 INT- 4", "tree": "((abs((relu(4) idiv -2)) mul x_0_3) mul -4)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 + 4 + 3 + 10 + 3 - 8 + 2 + 24 - 7 - 76 + 68 + 924 + 64 + 348 + 15 - 5428 - 4609 - 71 8076 + 12 347 + 2070 3100 + 12 122 - 876 84 - 2112 2759 - 5153 901 8668 - 136 5961 2808 - 407 4906 7984 4612", "x2": "add sub x_0_2 abs sqr x_0_6 mul relu INT+ 2 relu mul sub INT+ 5 n x_0_2", "tree": "((x_0_2 sub abs((x_0_6)**2)) add (relu(2) mul relu(((5 sub n) mul x_0_2))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 9 - 5 - 6 + 14 + 6 + 5 + 20 + 15 + 15 + 31 + 27 + 28 + 45 + 42 + 44 + 62 + 60 + 63 + 82 + 81 + 85 + 105 + 105", "x2": "add add relu n mod idiv INT+ 2 INT- 5 x_0_3 sign x_0_4", "tree": "((relu(n) add ((2 idiv -5) mod x_0_3)) add sign(x_0_4))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 7 - 3 - 5 - 9 - 10 - 3 - 6 - 2 - 4 - 8 - 9 - 2 - 5 - 1 - 3 - 7 - 8 - 1 - 4 + 0 - 2 - 6 - 7 + 0 - 3", "x2": "sub sign n abs x_0_6", "tree": "(sign(n) sub abs(x_0_6))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr sub abs n sqr INT+ 1", "tree": "((abs(n) sub (1)**2))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 3 + 1 + 1 + 27 + 43 + 8 + 35 + 61 + 18 + 46 + 73 + 31 + 60 + 88 + 47 + 77 + 106 + 66 + 97 + 127 + 88 + 120", "x2": "add add mul n idiv n x_0_2 x_0_3 n", "tree": "(((n mul (n idiv x_0_2)) add x_0_3) add n)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 7 - 72 - 247 - 616 - 1287 - 2392 - 4087 - 6552 - 9991 - 1 4632 - 2 727 - 2 8552 - 3 8407 - 5 616 - 6 5527 - 8 3512 - 10 4967 - 13 312 - 15 9991", "x2": "sub INT+ 9 sqr sqr n", "tree": "(9 sub ((n)**2)**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 1 + 1 + 6 + 9 + 2 - 9 - 10 + 10 - 9 + 1 - 1 - 6 - 9 - 2 + 9 + 10 - 10 + 9 - 1 + 1 + 6 + 9 + 2 - 9 - 10 + 10 - 9 + 1", "x2": "add INT- 6 sub INT+ 6 x_0_9", "tree": "(-6 add (6 sub x_0_9))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 3 - 4 + 4 + 4 + 6 - 2 - 19 + 9 + 10 + 11 + 0 - 222 + 14 + 15 + 16 + 17 - 3944 + 19 + 20 + 21 + 22 - 9 645 + 24 + 25", "x2": "mod n add add abs add n x_0_1 sign INT- 8 mul x_0_5 n", "tree": "(n mod ((abs((n add x_0_1)) add sign(-8)) add (x_0_5 mul n)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 7 + 4 - 1 - 4 - 5 - 1 + 9 + 9 - 7 - 2 + 3 - 13 - 4 - 3 - 16 + 1 + 2 - 3 - 10 + 7 - 2 - 6 - 8 - 2 + 26 + 13 - 10 - 3 + 4", "x2": "idiv sub n sign sign INT- 1 0 x_0_9", "tree": "((n sub sign(sign(-10))) idiv x_0_9)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 6 + 2 - 1 - 18 - 29 - 42 - 57 - 74 - 93 - 114 - 137 - 162 - 189 - 218 - 249 - 282 - 317 - 354 - 393 - 434 - 477 - 522 - 569", "x2": "sub abs sub add INT- 9 sqr relu idiv INT- 7 mod n x_0_4 INT- 2 sqr n", "tree": "(abs(((-9 add (relu((-7 idiv (n mod x_0_4))))**2) sub -2)) sub (n)**2)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 3 - 1 + 9 + 4 + 45 + 24 + 315 + 192 + 2835 + 1920 + 3 1185 + 2 3040 + 40 5405 + 32 2560 + 608 1075 + 516 960 + 1 337 8275 + 9289 7280 + 19 6418 7225 + 18 5794 5600 + 412 4793 1725 + 408 7480 3200", "x2": "abs mul x_0_2 n", "tree": "abs((x_0_2 mul n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 + 27 + 107 + 534 + 3203 + 2 2420 + 17 9359 + 161 4230 + 1614 2299 + 1 7756 5288 + 21 3078 3455 + 277 18 4914 + 3878 258 8795 + 5 8170 3883 1924 + 93 726 2131 783 + 1582 2345 6228 3310 + 2 8480 2221 2109 9579 + 54 1124 2203 89 2000 + 1082 2484 4060 1783 9999 + 2 2727 2172 5263 7463 9978 + 49 9998 7795 5802 4207 9515", "x2": "add abs sub mul x_0_1 mod n x_0_1 INT+ 1 x_0_1", "tree": "(abs(((x_0_1 mul (n mod x_0_1)) sub 1)) add x_0_1)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 4 - 1 - 9 - 4 - 3 - 9 + 5 + 2 - 9 - 3 + 0 - 4 - 1 - 4 - 2 - 3 - 9 + 5 + 2 - 9 - 3 + 0 - 4 - 1 + 1 + 0 - 3 - 9 + 5 + 2 - 9", "x2": "add relu add x_0_7 mod n n x_0_11", "tree": "(relu((x_0_7 add (n mod n))) add x_0_11)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 10 + 4 - 3 + 42 + 207 + 391 + 595 + 873 + 1347 + 2038 + 3220 + 4729 + 6763 + 9541 + 1 3556 + 1 9137 + 2 7207 + 3 8128 + 5 3139 + 7 3808 + 10 2626 + 14 2446 + 19 7900", "x2": "add sub add x_0_4 x_0_1 add INT- 7 INT- 4 sqr sub mod n abs INT+ 6 add n n", "tree": "(((x_0_4 add x_0_1) sub (-7 add -4)) add (((n mod abs(6)) sub (n add n)))**2)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 5 + 152 + 144 + 408 + 360 + 648 + 544 + 768 + 640 + 768 + 648 + 704 + 608 + 616 + 552 + 552 + 512 + 512 + 488 + 488 + 480", "x2": "mul sub idiv sub mul n sub INT- 8 n x_0_2 n sub n add n INT- 7 INT- 8", "tree": "(((((n mul (-8 sub n)) sub x_0_2) idiv n) sub (n sub (n add -7))) mul -8)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 + 2 + 3 - 6 + 3 - 7 + 6 + 8 + 9 + 40 + 11 + 58 + 42 + 74 + 119 + 1613 + 172 + 3372 + 1810 + 5505 + 1 4831 + 260 1812 + 3 1588 + 1137 1206 + 327 9485 + 3030 6863", "x2": "add sqr x_0_6 sub mod x_0_1 x_0_5 INT- 4", "tree": "((x_0_6)**2 add ((x_0_1 mod x_0_5) sub -4))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 10 + 15 + 22 + 31 + 42 + 55 + 70 + 87 + 106 + 127 + 150 + 175 + 202 + 231 + 262 + 295 + 330 + 367 + 406", "x2": "add sqr n INT+ 6", "tree": "((n)**2 add 6)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 + 2 - 15 + 8 - 75 + 48 - 525 + 384 - 4725 + 3840 - 5 1975 + 4 6080 - 67 5675 + 64 5120 - 1013 5125 + 1032 1920 - 1 7229 7125 + 1 8579 4560 - 32 7364 5375 + 37 1589 1200 - 687 4655 2875 + 817 4960 6400", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 8 + 8 + 5 - 10 + 128 + 360 + 6272 + 2 3042 + 50 8018 + 230 4164 + 6146 9608 + 3 3179 7696 + 103 8832 4674 + 650 3218 3833 + 2 3373 6895 3676 + 16 6482 1832 3892 + 675 4990 1653 4442 + 5394 191 2404 1906 + 24 3855 219 4951 4947 + 215 7606 8172 584 6205 + 1 754 32 5131 1625 6654 + 10 4428 1454 3449 4210 6770 + 568 8866 6597 462 4109 5403 + 6015 602 7802 4026 325 5928", "x2": "add mul n abs mul n add x_0_2 relu INT- 6 idiv sub INT+ 9 x_0_4 n", "tree": "((n mul abs((n mul (x_0_2 add relu(-6))))) add ((9 sub x_0_4) idiv n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 6 + 0 + 5 - 4 - 5 + 1 + 6 - 3 - 4 + 2 + 7 - 2 - 3 + 3 + 8 - 1 - 2 + 4 + 9 + 0 - 1 + 5 + 10 + 1", "x2": "add x_0_4 sign abs x_0_4", "tree": "(x_0_4 add sign(abs(x_0_4)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 10 + 4 + 9 + 7 + 4 + 10 + 7 + 5 + 10 + 8 + 5 + 3 + 8 + 6 + 3 + 9 + 6 + 4 + 9 + 7 + 4", "x2": "abs add mod x_0_2 INT+ 8 relu INT+ 3", "tree": "abs(((x_0_2 mod 8) add relu(3)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 9 + 5 - 3 - 7 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 + 3 + 3 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign idiv idiv mul x_0_3 add INT+ 6 n x_0_2 sign x_0_1", "tree": "sign((((x_0_3 mul (6 add n)) idiv x_0_2) idiv sign(x_0_1)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 1 - 6 + 9 + 1 + 1 - 4 - 6 + 630 - 65 - 402 + 621 + 71 + 73 - 300 - 462 + 4 9770 - 5265 - 3 3366 + 5 2785 + 6177 + 6497 - 2 7300 - 4 2966 + 472 8150 - 51 705 - 330 3234 + 533 1285", "x2": "mul add n sub add n sqr abs INT+ 6 INT- 9 x_0_8", "tree": "((n add ((n add (abs(6))**2) sub -9)) mul x_0_8)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 5 + 10 - 10 + 5 - 3 + 5 - 115 + 10 - 140 + 3 - 335 + 115 - 127 + 140 - 5178 + 335 - 7255 + 127 - 1 9235 + 5178 - 8336 + 7255 - 35 7409 + 1 9235 - 54 9303", "x2": "add mul INT- 3 mul relu x_0_3 abs n sub relu mul INT- 1 mul INT+ 7 abs INT+ 5 x_0_5", "tree": "((-3 mul (relu(x_0_3) mul abs(n))) add (relu((-1 mul (7 mul abs(5)))) sub x_0_5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 9 + 5 - 6 - 8 + 3 + 4 - 5 + 4 - 2 - 10 + 4 - 7 - 9 + 2 + 3 - 6 + 3 - 3 - 11 + 3 - 8 - 10 + 1 + 2 - 7 + 2 - 4 - 12 + 2", "x2": "sub x_0_9 sign add x_0_8 n", "tree": "(x_0_9 sub sign((x_0_8 add n)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 4 + 9 - 1 - 40 + 14 + 239 - 138 - 1898 + 1481 + 1 8842 - 1 8189 - 22 4623 + 25 5299 + 312 6533 - 405 4108 - 4976 9229 + 7204 6369 + 8 9179 2014 - 14 1865 240 - 177 6379 3911 + 306 8344 7054 + 3893 8481 5802 - 7234 8307 6153", "x2": "sub x_0_3 mul n x_0_2", "tree": "(x_0_3 sub (n mul x_0_2))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 - 28 - 196 - 1372 - 9604 - 6 7228 - 47 596 - 329 4172 - 2305 9204 - 1 6141 4428 - 11 2990 996 - 79 930 6972 - 553 6514 8804 - 3875 5604 1628 - 2 7128 9229 1396 - 18 9902 4603 9772 - 132 9317 2227 8404 - 930 5220 5594 8828 - 6513 6543 9164 1796 - 4 5595 5807 4149 2572 - 31 9169 651 9044 8004", "x2": "add x_0_1 mul mul relu INT+ 6 abs sign sign idiv INT- 5 mod INT- 3 x_0_1 x_0_1", "tree": "(x_0_1 add ((relu(6) mul abs(sign(sign((-5 idiv (-3 mod x_0_1)))))) mul x_0_1))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 9 + 5 - 3 + 7 + 6 - 2 + 7 - 2 - 10 + 4 - 4 + 6 + 5 - 3 + 6 - 3 - 11 + 3 - 5 + 5 + 4 - 4 + 5 - 4 - 12 + 2 - 6", "x2": "add x_0_8 idiv INT- 1 0 n", "tree": "(x_0_8 add (-10 idiv n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 4 + 7 - 2 + 11 + 3 + 18 + 11 + 29 + 24 + 45 + 43 + 67 + 68 + 97 + 100 + 135 + 141 + 182 + 191 + 239", "x2": "sub idiv mul n idiv sub mul add n abs INT+ 3 n add n INT- 1 0 INT+ 4 abs INT- 6 x_0_1", "tree": "(((n mul ((((n add abs(3)) mul n) sub (n add -10)) idiv 4)) idiv abs(-6)) sub x_0_1)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 7 - 4 - 3 - 8 + 4 - 2 - 8 - 2 + 3 + 0 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 3 + 0", "x2": "relu x_0_9", "tree": "relu(x_0_9)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 9 - 9 + 2 - 9 - 108 + 576 + 1656 + 648 + 3888 - 2 340 - 6 48 - 2 1456 - 13 8456 + 73 3320 + 216 8064 + 77 9760 + 498 3768 - 2638 9260 - 7805 1024 - 2806 9848 - 1 7940 5352 + 9 5002 3296 + 28 984 6368 + 10 1051 4528", "x2": "mul mul add sub n mul n mod x_0_5 n x_0_4 sqr INT+ 6 INT- 1", "tree": "((((n sub (n mul (x_0_5 mod n))) add x_0_4) mul (6)**2) mul -1)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 7 + 2 + 7 - 7 - 2 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 + 6 + 7 + 0 - 2 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign mul sub x_0_5 x_0_1 mul relu x_0_4 sqr abs x_0_2", "tree": "sign(((x_0_5 sub x_0_1) mul (relu(x_0_4) mul (abs(x_0_2))**2)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 1 + 1 - 9 - 7 - 1 + 8 - 9 + 90 + 90 + 132 + 144 + 169 + 182 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n sub n idiv idiv x_0_6 x_0_1 x_0_8", "tree": "(n mul (n sub ((x_0_6 idiv x_0_1) idiv x_0_8)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000 + 5 1218 9896 4582 4000 + 97 3160 8032 7065 6000 + 1946 3216 654 1312 0 + 4 872 7537 3736 7552 0", "x2": "mul relu x_0_1 n", "tree": "(relu(x_0_1) mul n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 - 4 - 9 + 4 + 3 - 9 + 5 + 0 + 34 - 14 + 44 + 16 - 10 + 58 + 51 - 26 + 75 + 336 + 102 + 129 + 338 + 1648 + 118 + 1290 + 2 3287 + 2 5497 + 1 364 + 3 9948", "x2": "add sub add abs mul abs x_0_8 sub abs x_0_7 n mod INT- 9 INT- 5 n idiv n INT- 3", "tree": "(((abs((abs(x_0_8) mul (abs(x_0_7) sub n))) add (-9 mod -5)) sub n) add (n idiv -3))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 9 - 2 + 92 + 52 - 2284 - 1846 + 11 1950 + 11 8184 - 906 7969 - 14 + 906 7960 + 52 - 8161 1639 - 826 + 20 4029 986 + 2 9752 - 999 7425 8293 - 190 4102 + 8 979 1492 1764 + 36 - 8 979 1492 1723 - 98", "x2": "sub sub mul INT+ 5 n sqr mod INT+ 8 n mul abs sqr mod n INT+ 1 0 x_0_2", "tree": "(((5 mul n) sub ((8 mod n))**2) sub (abs(((n mod 10))**2) mul x_0_2))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 1 + 4 + 3 + 9 + 9 + 16 + 17 + 25 + 27 + 36 + 39 + 49 + 53 + 64 + 69 + 81 + 87 + 100 + 107 + 121 + 129", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 9 - 5 + 3 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8", "x2": "sub mod mod n n sqr sub abs mul x_0_3 n x_0_4 idiv n INT+ 3", "tree": "(((n mod n) mod ((abs((x_0_3 mul n)) sub x_0_4))**2) sub (n idiv 3))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 10 - 5 - 7 - 9 + 0 - 3 + 6 + 5 + 5 - 5 - 5 - 5 + 5 - 5 + 5 + 5 + 5 - 5 - 5 - 5 + 5 - 5 + 5 + 5 + 5 - 5 - 5", "x2": "mul sign x_0_8 INT+ 5", "tree": "(sign(x_0_8) mul 5)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 - 182 - 1386 - 9814 - 6 8810 - 48 1782 - 337 2586 - 2360 8214 - 1 6525 7610 - 11 5680 3382 - 80 9762 3786 - 566 8336 6614 - 3967 8356 6410 - 2 7774 8496 4982 - 19 4423 9475 4986 - 136 967 6328 5014 - 952 6773 4299 5210 - 6668 7414 96 6582 - 4 6681 1898 676 6186 - 32 6768 3286 4736 3414 - 228 7378 3005 3154 4010", "x2": "mul relu sub sqr INT+ 4 x_0_1 mod idiv n n INT- 8", "tree": "(relu(((4)**2 sub x_0_1)) mul ((n idiv n) mod -8))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "abs sqr abs n", "tree": "abs((abs(n))**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 420 + 675 + 963 + 1286 + 1646 + 2045 + 2485", "x2": "add sqr n mod mod INT- 1 0 idiv n INT- 7 x_0_1", "tree": "((n)**2 add ((-10 mod (n idiv -7)) mod x_0_1))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 3 - 9 - 1 - 1 + 10 + 2 - 8 + 9 - 11 + 0 - 12 - 1 - 2 + 1 - 10 + 10 - 21 + 10 - 33 + 9 - 35 + 10 - 45 + 20 - 66 + 30 - 99", "x2": "add x_0_8 x_0_2", "tree": "(x_0_8 add x_0_2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 22 + 48 + 84 + 130 + 186 + 252 + 328 + 414 + 510 + 616 + 732 + 858 + 994 + 1140 + 1296 + 1462 + 1638 + 1824 + 2020", "x2": "add n mul INT+ 5 sqr n", "tree": "(n add (5 mul (n)**2))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 10 + 2 - 8 - 10 - 5 - 3 - 1 - 3 - 2 - 5 - 2 - 3 - 1 - 3 - 5 - 5 - 2 - 3 - 4 - 3 - 5 - 5 - 5 - 3 - 4", "x2": "mod add mod sign x_0_6 n x_0_4 add INT- 5 idiv sign INT- 2 sqr sqr INT- 9", "tree": "(((sign(x_0_6) mod n) add x_0_4) mod (-5 add (sign(-2) idiv ((-9)**2)**2)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 5 + 4 + 6 - 10 - 2 - 7 - 53 + 10 + 7 - 189 + 120 + 12 - 3485 + 68 + 63 - 3 8729 - 5134 + 87 - 1221 1424 + 24 5125 - 2380 - 15 78 7460 + 12 3816 4542 + 13 4270 - 149 1191 8139 3255 - 600 2216 9754", "x2": "add sub mul mod x_0_6 x_0_3 sub n x_0_6 idiv x_0_4 n n", "tree": "((((x_0_6 mod x_0_3) mul (n sub x_0_6)) sub (x_0_4 idiv n)) add n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 3 + 7 + 6 + 9 + 8 + 11 + 10 + 13 + 12 + 15 + 14 + 17 + 16 + 19 + 18 + 21 + 20 + 23 + 22 + 25 + 24", "x2": "sub abs idiv n n sub INT- 2 sub x_0_2 idiv x_0_2 n", "tree": "(abs((n idiv n)) sub (-2 sub (x_0_2 sub (x_0_2 idiv n))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 1 + 2 - 9 + 8 - 6 - 7 + 11 + 3 - 7 - 1 + 2 - 13 + 4 + 14 - 4 - 8 + 1 - 11 - 9 + 18 + 10 - 12 - 7 - 10 - 20 + 9", "x2": "add x_0_7 x_0_6", "tree": "(x_0_7 add x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 50 - 3 + 100 - 2 + 25 - 6 + 50 - 3 + 14 - 34 - 5 + 12 + 50 - 3 + 7 + 10 + 12 + 14 + 16 + 20", "x2": "idiv sqr INT+ 1 0 sub idiv sqr n n abs x_0_1", "tree": "((10)**2 idiv (((n)**2 idiv n) sub abs(x_0_1)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800", "x2": "add sqr n abs sqr n", "tree": "((n)**2 add abs((n)**2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 - 5 - 1772 - 4493 - 1 90 - 2 2183 - 4 2580 - 7 6653 - 13 2432 - 21 7215 - 34 3064 - 52 6019 - 78 2828 - 113 6563 - 161 5954 - 225 2239 - 308 4900 - 416 1117 - 553 2738 - 726 2135 - 942 1778 - 1209 1325", "x2": "mod sign n sub x_0_3 mul n sqr sub INT- 5 mul n n", "tree": "(sign(n) mod (x_0_3 sub (n mul ((-5 sub (n mul n)))**2)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 - 36 - 81 - 144 - 225 - 324 - 441 - 576 - 729 - 900 - 1089 - 1296 - 1521 - 1764 - 2025 - 2304 - 2601 - 2916 - 3249 - 3600", "x2": "mul sqr n INT- 9", "tree": "((n)**2 mul -9)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 2 - 9 - 3 + 3 - 7 + 42 - 5 + 74 + 0 + 2 + 40 + 1755 + 16 + 5467 - 9 - 5 + 1591 + 308 18 + 249 + 2988 8080 + 72 + 16 + 253 1272 + 9 4865 1088 315 + 6 1992", "x2": "add add sqr x_0_6 mod sign x_0_3 INT+ 4 INT- 1 0", "tree": "(((x_0_6)**2 add (sign(x_0_3) mod 4)) add -10)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 10 + 4 - 11 + 5 - 12 + 6 - 13 + 7 - 14 + 8 - 15 + 9 - 16 + 10 - 17 + 11 - 18 + 12 - 19 + 13 - 20 + 14", "x2": "sub x_0_2 mul sqr sqr sign x_0_1 sign x_0_1", "tree": "(x_0_2 sub (((sign(x_0_1))**2)**2 mul sign(x_0_1)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 6 + 33 - 66 + 363 - 726 + 3993 - 7986 + 4 3923 - 8 7846 + 48 3153 - 96 6306 + 531 4683 - 1062 9366 + 5846 1513 - 1 1692 3026 + 6 4307 6643", "x2": "mul add INT+ 1 0 sign sqr n x_0_2", "tree": "((10 add sign((n)**2)) mul x_0_2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 2 - 6 - 3 + 112 - 32 - 96 - 48 + 1792 - 512 - 1536 - 768 + 2 8672 - 8192 - 2 4576 - 1 2288 + 45 8752 - 13 1072 - 39 3216", "x2": "mul x_0_4 sqr INT+ 4", "tree": "(x_0_4 mul (4)**2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 5 - 110 - 2310 - 4 6200 - 87 7800 - 1580 400 - 2 6860 6800 - 42 9770 8800 - 644 6563 2000 - 9025 1884 8000 - 11 7327 4502 4000 - 140 7929 4028 8000 - 1548 7223 4316 8000 - 1 5487 2234 3168 0 - 13 9385 108 8512 0 - 111 5080 870 8096 0", "x2": "sub add x_0_1 mul x_0_1 sub sqr INT+ 4 sub n INT+ 6 abs x_0_1", "tree": "((x_0_1 add (x_0_1 mul ((4)**2 sub (n sub 6)))) sub abs(x_0_1))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 6 - 1 + 4 - 5 + 0 + 10 + 5 + 0 + 9 + 4 - 6 - 1 + 4 - 5 + 0 + 10 + 5 + 0 + 9 + 4", "x2": "sub INT+ 4 x_0_5", "tree": "(4 sub x_0_5)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 4 - 8 + 9 - 1 - 5 - 6 - 1 - 6 + 4 - 8 + 4 - 9 + 12 - 9 + 12 - 10 + 12 - 10 + 21 - 12 + 21", "x2": "sub x_0_2 mod mod add n mod mod INT- 1 x_0_1 sqr x_0_7 INT+ 3 x_0_1", "tree": "(x_0_2 sub (((n add ((-1 mod x_0_1) mod (x_0_7)**2)) mod 3) mod x_0_1))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 2 + 1 - 1 + 0 - 2 - 2 - 6 - 8 - 8 - 6 - 7 - 8 - 6 + 4 - 3 + 0 - 8", "x2": "add abs mod sub INT+ 2 n add INT+ 1 0 idiv mul n x_0_2 INT+ 5 INT- 8", "tree": "(abs(((2 sub n) mod (10 add ((n mul x_0_2) idiv 5)))) add -8)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 6 + 8 + 4 + 30 + 42 + 35 + 216 + 585 + 700 + 2684 + 9528 + 1 6614 + 4 7278 + 18 3075 + 41 8160 + 108 6045 + 414 6228 + 1142 3332", "x2": "mul abs sub INT+ 7 add x_0_3 abs x_0_4 n", "tree": "(abs((7 sub (x_0_3 add abs(x_0_4)))) mul n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 3 + 2 - 5 + 25 - 18 + 14 - 40 + 225 - 180 + 154 - 480 + 2925 - 2520 + 2310 - 7680 + 4 9725 - 4 5360 + 4 3890", "x2": "idiv mul n x_0_4 sign mul x_0_2 x_0_4", "tree": "((n mul x_0_4) idiv sign((x_0_2 mul x_0_4)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 - 48 - 135 - 256 - 375 - 432 - 343 + 0 + 729 + 2000 + 3993 + 6912 + 1 985 + 1 6464 + 2 3625", "x2": "mul mul n mul n add INT- 8 abs n n", "tree": "((n mul (n mul (-8 add abs(n)))) mul n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 + 5 - 4 - 2 + 5 + 7 - 2 - 8 - 8 - 4 - 3 - 1 - 4 - 6 - 1 - 7 - 7 - 3 - 2 + 0 - 3 - 5 + 0", "x2": "sub sign sqr mul n n abs x_0_8", "tree": "(sign(((n mul n))**2) sub abs(x_0_8))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 3 - 1 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 7 - 9 + 49 + 81 - 441 - 567 + 3087 + 5103 - 2 7783 - 3 5721 + 19 4481 + 32 1489 - 175 329 - 225 423 + 1225 2303 + 2025 3807 - 1 1027 727", "x2": "mul x_0_2 sub INT- 8 sign idiv n mul x_0_1 abs sub n x_0_1", "tree": "(x_0_2 mul (-8 sub sign((n idiv (x_0_1 mul abs((n sub x_0_1)))))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 7 - 2 + 1 - 1 - 9 - 10 - 3 + 0 + 9 + 2 - 36 - 41 - 10 - 291 - 50 + 17 - 30 - 35 - 22 - 33 - 32 - 25 - 30 - 29 - 28", "x2": "mod n mul add relu abs INT- 1 0 idiv abs x_0_2 add x_0_6 x_0_11 add sign n INT- 7", "tree": "(n mod ((relu(abs(-10)) add (abs(x_0_2) idiv (x_0_6 add x_0_11))) mul (sign(n) add -7)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 10 - 1 - 9 + 20 + 27 + 46 + 46 + 95 + 103 + 172 + 181 + 300 + 318 + 507 + 535 + 844 + 891 + 1390", "x2": "add x_0_4 abs sub sub INT- 4 n add sub sqr INT- 5 INT+ 9 x_0_2", "tree": "(x_0_4 add abs(((-4 sub n) sub (((-5)**2 sub 9) add x_0_2))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 1 + 6 + 1 + 4 + 4 + 3 + 3 + 38 + 3 + 18 + 18 + 11 + 11 + 1446 + 11 + 326 + 326 + 123 + 123 + 209 918", "x2": "abs sub INT- 2 sqr x_0_6", "tree": "abs((-2 sub (x_0_6)**2))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 10 + 27 + 225 + 1953 + 1 7505 + 15 7473 + 141 7185 + 1275 4593 + 1 1479 1265 + 10 3312 1313 + 92 9809 1745 + 836 8282 5633 + 7531 4543 625 + 6 7783 887 5553 + 61 47 7987 9905 + 549 430 1891 9073", "x2": "mul sub add idiv mod idiv sub INT- 4 n n relu x_0_1 abs x_0_2 relu INT- 8 x_0_1 INT- 9", "tree": "(((((((-4 sub n) idiv n) mod relu(x_0_1)) idiv abs(x_0_2)) add relu(-8)) sub x_0_1) mul -9)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 7 - 5 - 6 - 5 - 8 - 8 - 15 - 17 - 37 - 46 - 110 - 149 - 384 - 558 - 1535 - 2371", "x2": "idiv abs add mul n x_0_2 add sub INT+ 5 mod n n mod x_0_2 x_0_2 INT- 4", "tree": "(abs(((n mul x_0_2) add ((5 sub (n mod n)) add (x_0_2 mod x_0_2)))) idiv -4)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 5 - 14 + 96 + 305 - 171 + 31 + 12 - 28 + 199 + 697 - 378 + 56 + 17 - 36 + 290 + 1222", "x2": "idiv mul n sub mod INT+ 8 x_0_1 add mul x_0_1 INT+ 9 sub INT+ 3 n x_0_2", "tree": "((n mul ((8 mod x_0_1) sub ((x_0_1 mul 9) add (3 sub n)))) idiv x_0_2)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9802 + 2 165 + 3 7250 + 6 3505 + 10 1762 + 15 5237 + 22 7530 + 32 2625 + 44 4890 + 59 9077 + 79 322 + 102 4145 + 130 6450 + 164 3525 + 204 2042", "x2": "add sign relu INT+ 3 sub n sub n sqr sub n sqr add INT+ 8 add n n", "tree": "(sign(relu(3)) add (n sub (n sub ((n sub ((8 add (n add n)))**2))**2)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 5 + 8 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 1 + 1 + 1 + 9 + 1 + 21 + 17 + 13 + 9 + 5 + 1 + 49 + 49 + 49", "x2": "relu mod mul sign INT+ 3 sqr INT+ 7 mul INT+ 4 n", "tree": "relu(((sign(3) mul (7)**2) mod (4 mul n)))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 7 - 3 - 9 - 2 + 24 + 70 + 30 + 0 + 64 + 315 + 820 + 473 + 168 + 1027 + 4634 + 1 2555 + 7856 + 3179 + 1 8846", "x2": "mul add sub n n mod INT- 2 n add x_0_5 n", "tree": "(((n sub n) add (-2 mod n)) mul (x_0_5 add n))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 4 + 0 + 8 + 5 + 2 + 2 + 6 + 7 + 4 + 4 + 8 + 9 + 6 + 6 + 10 + 11", "x2": "abs sub x_0_2 n", "tree": "abs((x_0_2 sub n))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 2 + 4 + 9 - 108 - 1188 - 1 5444 - 20 772 - 281 808 - 4216 2120 - 6 7459 3920 - 114 6809 6640 - 2064 2573 9520 - 3 9220 8905 880 - 78 4417 8101 7600 - 1647 2774 136 9600 - 3 6240 1028 3013 1200 - 83 3522 3650 9301 7600 - 2000 4536 7622 3242 2400", "x2": "mul sub INT- 5 add mod x_0_3 x_0_4 n abs x_0_1", "tree": "((-5 sub ((x_0_3 mod x_0_4) add n)) mul abs(x_0_1))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 9 + 7 + 10 - 9 + 120 + 96 + 144 + 168 + 114 + 840 + 702 + 996 + 1146 + 828 + 5190 + 4368 + 6138 + 7044 + 5142", "x2": "mul add add n sub INT+ 9 sub relu INT- 8 relu x_0_5 relu INT- 5 relu mod INT+ 6 INT+ 9", "tree": "(((n add (9 sub (relu(-8) sub relu(x_0_5)))) add relu(-5)) mul relu((6 mod 9)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 5 + 1 - 5 - 20 + 5 - 30 - 140 + 40 - 270 - 1400 + 440 - 3240 - 1 8200 + 6160 - 4 8600 - 29 1200 + 10 4720 - 87 4800", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 + 7 - 6 - 9 + 5 - 10 - 9 + 0 - 6 - 1 + 6 - 6 - 1 + 6 - 6 - 1 + 6 - 6 - 1 + 6 - 6 - 1 + 6 - 6 - 1 + 6", "x2": "sub x_0_3 abs mul relu n mul mod INT+ 2 INT- 1 relu relu x_0_11", "tree": "(x_0_3 sub abs((relu(n) mul ((2 mod -1) mul relu(relu(x_0_11))))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 4 - 9 - 6 + 8 + 0 + 7 + 4 - 9 - 6 + 8 + 0 + 7 + 4 - 9 - 6 + 8 + 0 + 7 + 4 - 9", "x2": "add x_0_6 mul sub n n relu relu idiv x_0_4 n", "tree": "(x_0_6 add ((n sub n) mul relu(relu((x_0_4 idiv n)))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 9 + 9 + 9 + 64 + 121 + 49 + 81 + 121 + 169 + 225 + 289 + 361 + 441 + 529 + 625 + 729 + 841 + 961", "x2": "sqr add add idiv sqr n sqr x_0_4 n abs mod INT- 7 abs n", "tree": "(((((n)**2 idiv (x_0_4)**2) add n) add abs((-7 mod abs(n)))))**2", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 3 + 3 - 10 + 1 + 5 - 9 + 172 + 67 + 67 + 28 + 39 + 103 + 19 + 3 1332 + 5187 + 5187 + 1092 + 1939 + 1 1667 + 579 + 9 8200 7572", "x2": "relu add sqr add sub x_0_7 INT- 9 INT- 4 add idiv relu INT- 2 sign relu INT+ 9 INT+ 3", "tree": "relu(((((x_0_7 sub -9) add -4))**2 add ((relu(-2) idiv sign(relu(9))) add 3)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 4 + 4 + 4 - 2 - 8 + 4 + 6 + 0 + 2 - 4 + 2 - 2 + 4 + 8 - 4 + 4 - 6 + 6 + 6 + 0 + 12", "x2": "add x_0_5 x_0_7", "tree": "(x_0_5 add x_0_7)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 3 + 1 - 5 - 10 - 2 - 4 - 10 - 9 - 3 - 2 + 2 + 2500 + 64 + 9409 + 2 8900 + 3025 + 9604 + 4 4100 + 3 8416 + 7225 + 4225 + 634 324 + 33 1050 6369 + 1 1918 889 + 697 4669 7216 + 5691 1181 6025", "x2": "sqr add add mul x_0_11 n add sub INT- 1 n idiv n INT- 1 0 x_0_10", "tree": "((((x_0_11 mul n) add ((-1 sub n) add (n idiv -10))) add x_0_10))**2", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 4 + 0 + 2 + 10 + 6 - 7 - 3 + 7 - 2 - 7 - 7 - 7 - 5 - 3 + 0 - 7 + 0 - 3 - 4 - 3 - 2 - 5 - 4 - 7", "x2": "mod add INT- 7 mul x_0_9 n INT- 8", "tree": "((-7 add (x_0_9 mul n)) mod -8)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 5 - 10 + 16 - 113 + 533 - 2696 + 1 3450 - 6 7279 + 33 6367 - 168 1862 + 840 9284 - 4204 6445 + 2 1023 2201 - 10 5116 1028 + 52 5580 5118 - 262 7902 5611", "x2": "add mul add x_0_1 INT+ 7 INT- 5 add n INT- 2", "tree": "(((x_0_1 add 7) mul -5) add (n add -2))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 1 - 4 - 4 + 3 - 8 - 4 + 39 + 37 + 38 + 13 + 36 + 41 + 19 + 18 + 20 + 29 + 20 + 26 + 38 + 38 + 41", "x2": "add n mod x_0_6 idiv add mul sub INT+ 4 INT- 4 INT- 8 INT- 2 INT- 2", "tree": "(n add (x_0_6 mod ((((4 sub -4) mul -8) add -2) idiv -2)))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 7 - 6 - 3 + 1 - 1 - 4 - 2 - 2 - 3 - 6 + 0 - 1 - 3 - 7 - 1 - 2 - 4 - 10", "x2": "mod sub x_0_3 x_0_4 sub sub INT+ 1 x_0_2 n", "tree": "((x_0_3 sub x_0_4) mod ((1 sub x_0_2) sub n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 - 7 - 9 + 13 + 17 + 21 + 1 - 1 - 3 + 19 + 23 + 27 + 7 + 5 + 3 + 25 + 29 + 33", "x2": "add n sub n x_0_3", "tree": "(n add (n sub x_0_3))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 + 24 + 432 + 1 368 + 31 1040 + 1119 7440 + 4 7029 2480 + 225 7403 9040 + 1 2189 9810 8160 + 73 1398 8648 9600 + 4827 2325 831 3600 + 34 7560 7405 9857 9200 + 2710 9737 7666 8917 7600 + 22 7721 7972 4018 9091 8400 + 2049 4961 7516 1701 8265 6000 + 19 6751 6328 1552 3375 3497 6000", "x2": "abs abs mul mul n INT- 6 x_0_1", "tree": "abs(abs(((n mul -6) mul x_0_1)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 4 + 3 + 1 + 1 + 3 + 4 + 2 + 1 + 3 + 4 + 2 + 1 + 3 + 4 + 2 + 1 + 3 + 4 + 2 + 1", "x2": "sub mul abs idiv abs x_0_5 x_0_5 add relu INT+ 4 sign n x_0_2", "tree": "((abs((abs(x_0_5) idiv x_0_5)) mul (relu(4) add sign(n))) sub x_0_2)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 2 + 10 + 3 - 53 - 134 - 80 - 539 - 1277 - 800 - 4940 - 1 1591 - 7307 - 4 4576 - 10 4444 - 6 5897 - 40 1327 - 94 148 - 59 3234", "x2": "sub sign n mul add abs x_0_3 n sqr INT+ 3", "tree": "(sign(n) sub ((abs(x_0_3) add n) mul (3)**2))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 3 + 1 - 2 - 4 + 2 - 2 + 1 + 3 - 3 + 1 - 2 - 4 + 2 - 2 + 1 + 3 - 3 + 1", "x2": "sub sign sub add sub sub x_0_2 n mod x_0_3 n mod x_0_3 INT- 8 mul INT+ 9 INT+ 4 x_0_4", "tree": "(sign(((((x_0_2 sub n) sub (x_0_3 mod n)) add (x_0_3 mod -8)) sub (9 mul 4))) sub x_0_4)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 10 + 6 + 5 + 10 + 9 - 3 + 16 + 1 + 17 + 15 + 25 + 23 + 15 + 29 + 23 + 39 + 36 + 51 + 48 + 45 + 59", "x2": "add idiv sub idiv x_0_2 x_0_6 x_0_4 INT- 4 add x_0_7 n", "tree": "((((x_0_2 idiv x_0_6) sub x_0_4) idiv -4) add (x_0_7 add n))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 3 - 7 - 5 + 10 + 4 - 8 - 4 - 8 + 6 - 10 - 2 - 4 - 35 - 18 + 103 + 56 - 39 - 6 - 37 + 76 - 51 + 14 - 1 - 248 - 111 + 858", "x2": "add mul INT- 8 sub INT- 1 x_0_11 n", "tree": "((-8 mul (-1 sub x_0_11)) add n)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 1 - 10 + 4 + 0 + 0 + 6 + 1 - 10 - 2 + 6 + 5 - 17 - 13 - 14 - 21 - 17 - 7 - 17 - 25 - 25 - 4 - 10 - 10 - 4 - 8 - 20", "x2": "sub mod x_0_11 INT- 2 add abs n x_0_9", "tree": "((x_0_11 mod -2) sub (abs(n) add x_0_9))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 3 - 7 - 5 - 4 + 2 + 5 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign mul add idiv x_0_1 abs x_0_6 INT+ 4 x_0_3", "tree": "sign((((x_0_1 idiv abs(x_0_6)) add 4) mul x_0_3))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 10 + 10 - 5 + 7 + 8 + 31 + 30 - 11 + 16 + 35 + 110 + 105 - 16 + 47 + 138 + 421 + 400 - 21 + 166", "x2": "add mod sub mul sign x_0_2 INT- 8 n mul INT+ 4 x_0_5 INT+ 6", "tree": "((((sign(x_0_2) mul -8) sub n) mod (4 mul x_0_5)) add 6)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 4 + 48 + 0 + 32 + 0 + 48 + 0 + 64 + 0 + 80 + 0 + 96 + 0 + 112 + 0 + 128", "x2": "mul INT+ 8 relu relu sub n x_0_1", "tree": "(8 mul relu(relu((n sub x_0_1))))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 1 - 2 - 3 - 4 - 5 - 6 - 8 - 10 - 12 - 14 - 16 - 19 - 21 - 24 - 28", "x2": "idiv relu add abs add n relu sqr abs n sign add n x_0_1 INT- 1 0", "tree": "(relu((abs((n add relu((abs(n))**2))) add sign((n add x_0_1)))) idiv -10)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 3 + 0 + 10 + 24 + 42 + 0 + 9 + 20 + 33 + 48 + 65 + 84 + 105", "x2": "abs mul abs mod INT- 8 n n", "tree": "abs((abs((-8 mod n)) mul n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 - 2 - 9 + 7 + 6 - 1 - 1 - 2 + 0 + 0 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 + 0 + 0", "x2": "idiv x_0_5 n", "tree": "(x_0_5 idiv n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 5 - 3 + 0 + 5 - 2 - 8 - 5 - 4 - 3 - 1 + 0 - 5 - 4 - 1 - 2 - 1 - 5 - 3 - 3 - 2 - 1 - 5", "x2": "sub idiv x_0_7 n mod sub mul n sign x_0_3 INT+ 9 INT+ 5", "tree": "((x_0_7 idiv n) sub (((n mul sign(x_0_3)) sub 9) mod 5))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 1 + 0 + 1 + 3 + 5 + 8 + 11 + 15 + 19 + 24 + 29 + 35 + 41 + 48 + 55", "x2": "sub idiv sqr n sub INT+ 7 INT+ 3 sign n", "tree": "(((n)**2 idiv (7 sub 3)) sub sign(n))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 8 - 7 - 7 + 2 + 3 + 1 - 3 + 2 + 9 + 6 + 6 - 3 - 4 - 2 + 2 - 3 - 10 - 7 - 7 + 2 + 3 + 1 - 3 + 2", "x2": "add INT- 1 sub mod x_0_10 sign sub mod n n INT- 8 x_0_8", "tree": "(-1 add ((x_0_10 mod sign(((n mod n) sub -8))) sub x_0_8))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 5 - 3 - 2 - 8 + 9 - 3 - 3 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1", "x2": "idiv x_0_8 sqr n", "tree": "(x_0_8 idiv (n)**2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 5 - 3 + 0 + 4 + 9 + 15 + 22 + 30 + 39 + 49 + 60 + 72 + 85 + 99 + 114 + 130", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 7 + 3 + 0 - 3 - 1 + 49 + 9 + 0 + 9 + 1 + 2401 + 81 + 0 + 81 + 1 + 576 4801 + 6561 + 0 + 6561 + 1", "x2": "mul x_0_5 x_0_5", "tree": "(x_0_5 mul x_0_5)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 34 + 80 + 144 + 226 + 326 + 444 + 580 + 734 + 906 + 1096 + 1304 + 1530 + 1774 + 2036 + 2316", "x2": "add n mod INT- 4 sqr add mod mul INT+ 2 n sub x_0_1 abs sign add INT+ 7 INT- 5 n", "tree": "(n add (-4 mod ((((2 mul n) mod (x_0_1 sub abs(sign((7 add -5))))) add n))**2))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8", "x2": "abs idiv n mod INT- 7 INT- 5", "tree": "abs((n idiv (-7 mod -5)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 + 4 + 8 - 7 + 8 + 3 - 8 - 5 + 7926 + 86 + 3 4974 + 14 6694 + 86 + 14 6694 + 1 9049 + 86 + 86 + 1508 2737 3230 + 1768 2030 + 2 9368 2595 6094 + 51 6673 87 2014 + 1768 2030 + 51 6673 87 2014", "x2": "sub sqr mod INT- 9 mul x_0_9 sqr INT- 7 INT- 5", "tree": "(((-9 mod (x_0_9 mul (-7)**2)))**2 sub -5)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 + 6 + 3 - 21 - 12 + 3 + 3 - 21 - 24 + 3 + 3 - 33 - 36 + 3 + 3 - 45 - 48", "x2": "sub INT+ 3 relu mul relu x_0_2 n", "tree": "(3 sub relu((relu(x_0_2) mul n)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 9 + 10 + 9 - 9 - 9 + 45 + 8 + 0 + 405 + 3 + 0 + 1 8225 + 1 + 0 + 738 1125 + 3 + 0 + 1345 2100 3125 + 3 + 0", "x2": "mod mul x_0_3 x_0_6 add n sqr x_0_3", "tree": "((x_0_3 mul x_0_6) mod (n add (x_0_3)**2))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 8 + 14 + 14 + 20 + 20 + 26 + 26 + 32 + 32 + 38 + 38 + 44 + 44 + 50 + 50 + 56", "x2": "sub add x_0_2 INT+ 7 sign n", "tree": "((x_0_2 add 7) sub sign(n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 9 - 8 + 9 - 5 - 1 - 10 + 9 - 7208 - 7209 + 8990 - 5511 - 1212 - 1 3013 + 1 2586 - 1081 2015 - 1153 4416 + 1528 2983 - 991 9818 - 230 2819 - 2602 6020 + 2643 579 - 237 8643 3022", "x2": "sub mul mul x_0_7 sqr INT- 1 0 n n", "tree": "(((x_0_7 mul (-10)**2) mul n) sub n)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 10 + 6 - 1 - 9 + 7 + 0 - 8 + 8 + 1 - 7 + 9 + 2 - 6 + 10 + 3 - 5 + 11 + 4", "x2": "sub x_0_3 INT- 1", "tree": "(x_0_3 sub -1)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 + 60 + 420 + 3360 + 3 240 + 30 2400 + 332 6400 + 3991 6800 + 5 1891 8400 + 72 6485 7600 + 1089 7286 4000 + 1 7435 6582 4000 + 29 6406 1900 8000 + 533 5311 4214 4000 + 1 137 917 73 6000 + 20 2741 8340 1472 0", "x2": "abs relu mul sub n INT- 4 abs x_0_1", "tree": "abs(relu(((n sub -4) mul abs(x_0_1))))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 10 + 1 - 4 - 5 + 4 - 10 - 5 + 3 + 6 + 2 + 12 + 2 + 14 + 2 + 16 + 2 + 18 + 2 + 20 + 2 + 22 + 2 + 24", "x2": "mul INT+ 2 idiv add idiv mul x_0_9 relu INT- 5 n abs n x_0_1", "tree": "(2 mul ((((x_0_9 mul relu(-5)) idiv n) add abs(n)) idiv x_0_1))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 6 - 2 - 10 - 3 + 6 - 3 + 0 - 4 - 3 - 1 - 1 - 4 - 1 - 1 - 1 - 2 - 1 - 2 - 4 - 3", "x2": "mod sub n mod x_0_6 INT- 8 INT- 5", "tree": "((n sub (x_0_6 mod -8)) mod -5)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 7 - 4 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "idiv sqr INT+ 1 sign mul x_0_3 mod x_0_2 abs n", "tree": "((1)**2 idiv sign((x_0_3 mul (x_0_2 mod abs(n)))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 1 + 13 - 53 + 4 - 1 + 13 - 53 + 4 - 1 + 13 - 53 + 4 - 1 + 13 - 53 + 4", "x2": "idiv sub sqr INT- 7 INT- 4 x_0_2", "tree": "(((-7)**2 sub -4) idiv x_0_2)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 9 - 2 - 20 + 45 + 12 + 140 - 360 - 108 - 1400 + 3960 + 1296 + 1 8200 - 5 5440 - 1 9440 - 29 1200 + 94 2480 + 34 9920", "x2": "add mul sub idiv INT+ 4 mul n INT- 1 0 x_0_3 n n", "tree": "((((4 idiv (n mul -10)) sub x_0_3) mul n) add n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 7 + 2 + 7 - 2 - 7 + 2 + 7 - 2 - 7 + 2 + 7 - 2 - 7 + 2 + 7 - 2 - 7", "x2": "sub relu mul INT- 2 add sqr x_0_2 sign idiv n x_0_2 x_0_2", "tree": "(relu((-2 mul ((x_0_2)**2 add sign((n idiv x_0_2))))) sub x_0_2)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 2 + 7 - 3 + 6 + 8 - 3 + 5 - 7 + 3 + 10 - 3 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign x_0_12", "tree": "sign(x_0_12)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "+ 3 - 1 + 4 + 0 + 5 + 1 + 6 + 2 + 7 + 3 + 8 + 4 + 9 + 5 + 10 + 6", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 10 - 1 + 6 - 10 - 2 + 6 - 1 + 35 + 5 - 6 + 17 + 55 - 23 + 95 + 12 + 600 + 35 - 109 + 345 - 4835 - 501 - 45 7135", "x2": "add INT+ 5 mul mod relu n add relu INT- 3 x_0_2 x_0_8", "tree": "(5 add ((relu(n) mod (relu(-3) add x_0_2)) mul x_0_8))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 4 + 4 - 1 - 18 - 8 - 8 + 1 + 32 + 14 + 14 - 2 - 58 - 26 - 26 + 3 + 104 + 46 + 46", "x2": "idiv mul INT+ 9 x_0_4 INT- 5", "tree": "((9 mul x_0_4) idiv -5)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 - 6 + 1 - 2 + 2 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0", "x2": "mod add n relu mul idiv sub x_0_1 add sign x_0_5 x_0_5 sqr abs n x_0_3 INT+ 5", "tree": "((n add relu((((x_0_1 sub (sign(x_0_5) add x_0_5)) idiv (abs(n))**2) mul x_0_3))) mod 5)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 9 + 5 + 9 + 5 - 7 + 4 + 6 + 6 + 7 + 15 + 11 + 15 + 11 - 1 + 10 + 12 + 12 + 13 + 21 + 17 + 21 + 17 + 5", "x2": "add abs abs mod sign sign INT- 3 INT+ 7 x_0_9", "tree": "(abs(abs((sign(sign(-3)) mod 7))) add x_0_9)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 10 - 5 + 1 + 9 + 9 - 8 + 5 + 6 + 6 + 8100 + 1936 + 576 + 1 6900 + 1 9600 + 1 1025 + 9216 + 1 4161 + 1 5876 + 236 9105 8561 + 15 78 7600 + 1 4682 1689 + 1382 5159 9684 + 2032 4137 7329 + 700 2586 1376", "x2": "sqr mul add sub x_0_9 INT- 1 relu idiv INT- 5 n n", "tree": "((((x_0_9 sub -1) add relu((-5 idiv n))) mul n))**2", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 4 + 8 - 10 - 4 - 15 + 6 - 63 - 24 - 126 + 10 - 682 - 276 - 1625 + 14 - 1 215 - 4400 - 2 7608 + 18 - 19 4066", "x2": "mod n mul x_0_4 n", "tree": "(n mod (x_0_4 mul n))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 + 4 - 46 + 0 - 221 + 4 - 1546 + 32 - 1 3913 + 316 - 15 3034 + 3776 - 198 9417 + 5 2828 - 2984 1206 + 84 5184 - 5 730 421", "x2": "sub mul x_0_2 n mul sign mod n idiv x_0_2 INT+ 3 sqr add n INT- 8", "tree": "((x_0_2 mul n) sub (sign((n mod (x_0_2 idiv 3))) mul ((n add -8))**2))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 + 5 + 1 - 2 - 4 + 4 + 3 - 2 - 2 + 4 + 2 - 2 - 1 + 4 + 4 - 2 - 2", "x2": "sub sign mul mod add n INT- 6 add mod n INT- 6 INT- 5 add x_0_2 x_0_1 idiv INT+ 5 x_0_2", "tree": "(sign((((n add -6) mod ((n mod -6) add -5)) mul (x_0_2 add x_0_1))) sub (5 idiv x_0_2))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 + 0 + 0 + 0 + 0 + 0 + 0 - 6 + 0 - 6 + 0 - 6 + 0 - 6 - 6 - 6", "x2": "mul idiv n relu sub abs INT+ 8 x_0_1 INT- 6", "tree": "((n idiv relu((abs(8) sub x_0_1))) mul -6)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 2 + 8 - 7 - 1 + 7 + 2 + 0 + 8 + 0 + 0 + 7 + 2 + 0 + 8 + 0 + 0 + 7 + 2 + 0 + 8", "x2": "mod relu x_0_6 n", "tree": "(relu(x_0_6) mod n)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 9 + 3 + 4 + 3 - 3 - 2 + 7 - 9 + 1 4850 - 3430 3500 + 802 7019 0 - 224 3551 8105 0 + 70 6718 8203 750 0 - 25 4418 7753 1070 0 0 + 10 1767 5101 2428 0 0 0 - 5 171 3824 9127 40 0 0 0 + 2 8447 1738 7255 112 6800 0 0 0 - 2972 7296 6968 1486 7750 6000 0 0 0 + 1189 918 6787 2594 7100 2400 0 0 0 0 - 786 5842 7059 7721 4006 8087 6000 0 0 0 0 + 571 601 8045 3945 7368 9431 5976 0 0 0 0 0 - 85 3734 9697 7864 8876 6570 238 4120 0 0 0 0 0 + 73 7627 138 8875 2629 4316 5005 9879 6800 0 0 0 0 0", "x2": "mul mul mod sub abs x_0_9 n mul INT+ 4 n mul INT- 5 x_0_1 n", "tree": "((((abs(x_0_9) sub n) mod (4 mul n)) mul (-5 mul x_0_1)) mul n)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 6 + 4 - 6 + 4 - 2 - 5 + 6 - 4 + 6 - 4 + 2 + 5 - 6 + 4 - 6 + 4 - 2 - 5 + 6 - 4 + 6", "x2": "sub idiv abs n sqr n x_0_6", "tree": "((abs(n) idiv (n)**2) sub x_0_6)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 3 + 0 + 0 - 5 + 10 - 1 + 8 - 6 + 10 + 2 - 4 + 1 + 55 + 56 + 60 + 69 + 58 + 73 + 68 + 86 + 74 + 86 + 96 + 95 + 45 + 48 + 48", "x2": "sub idiv idiv x_0_1 INT+ 9 sqr INT- 8 sub x_0_12 mul n INT+ 4", "tree": "(((x_0_1 idiv 9) idiv (-8)**2) sub (x_0_12 sub (n mul 4)))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 4 - 9 + 0 + 1 + 8 + 0 + 0 + 13 + 4 + 3 - 4 + 4 + 4 - 9 + 0 + 1 + 8 + 0 + 0 + 13 + 4", "x2": "sub mod n n add x_0_6 INT- 4", "tree": "((n mod n) sub (x_0_6 add -4))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 5 + 0 - 7 + 8 + 4 + 5 + 2 + 1 - 8 + 5 + 10 + 535 + 300 + 365 + 210 + 110 - 15 + 510 + 1055 + 5 8810 + 3 4525 + 4 3850 + 2 8925 + 1 5800 + 1750", "x2": "mul INT+ 5 add add x_0_8 x_0_11 relu mul x_0_8 n", "tree": "(5 mul ((x_0_8 add x_0_11) add relu((x_0_8 mul n))))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 810 + 1100 + 1452 + 1872 + 2366 + 2940", "x2": "mul sqr add n add sign INT+ 7 idiv n INT- 9 n", "tree": "(((n add (sign(7) add (n idiv -9))))**2 mul n)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 2 + 8 + 148 + 584 + 1602 + 3620 + 7212 + 1 3132 + 2 2338 + 3 6016 + 5 5604 + 8 2816 + 11 9666 + 16 8492 + 23 1980", "x2": "add sqr sub sqr mod n x_0_1 relu INT+ 4 sub x_0_1 n", "tree": "(((((n mod x_0_1))**2 sub relu(4)))**2 add (x_0_1 sub n))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210", "x2": "sub n sqr abs relu n", "tree": "(n sub (abs(relu(n)))**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 4 + 1 + 3 + 3 + 7 + 9 + 321 - 323 + 101 + 364 + 431 + 1184 + 1765 + 7 2226 - 8 2687 + 2 9190 + 11 7937 + 15 5590 + 47 3601 + 77 8366 + 3495 7385", "x2": "add sign add x_0_3 n mul sqr n x_0_7", "tree": "(sign((x_0_3 add n)) add ((n)**2 mul x_0_7))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 5 - 8 - 5 - 4 + 0 + 4 + 5 + 1 - 3 - 4 + 0 + 2 + 3 - 1 - 1 - 2 + 2 + 0 + 1 - 1", "x2": "idiv sub sign mul x_0_6 mul INT- 5 INT+ 4 x_0_3 sign add n n", "tree": "((sign((x_0_6 mul (-5 mul 4))) sub x_0_3) idiv sign((n add n)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 7 + 10 + 3 - 2 - 4 - 3 + 4 + 7 + 8 - 9 - 8 - 9 + 10 + 13 + 14 - 15 - 14 - 15 + 16", "x2": "mul mod abs INT- 2 sub sign x_0_4 n sign x_0_3", "tree": "((abs(-2) mod (sign(x_0_4) sub n)) mul sign(x_0_3))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 - 5 - 7 - 10 - 4 + 1 + 6 + 0 - 3 - 5 - 8 - 2 + 3 + 8 + 2 - 1 - 3 - 6 + 0 + 5 + 10 + 4", "x2": "sub sub abs add n x_0_7 abs abs n INT- 2", "tree": "((abs((n add x_0_7)) sub abs(abs(n))) sub -2)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 3 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225", "x2": "sub idiv INT+ 5 sqr n sqr n", "tree": "((5 idiv (n)**2) sub (n)**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 4 - 3 - 10 + 0 - 1 - 1 - 2 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1", "x2": "idiv x_0_4 n", "tree": "(x_0_4 idiv n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 7 - 6 - 10 - 2 - 8 + 6 + 7 + 2 + 4 + 2 - 3 + 13 + 15 + 12 + 39 + 23 + 22 + 19 + 20 + 21 + 22 + 23 + 30 + 25 + 26 + 27", "x2": "abs add idiv mod mod sign sub INT+ 7 x_0_10 x_0_12 mul x_0_3 abs INT- 6 abs x_0_4 n", "tree": "abs(((((sign((7 sub x_0_10)) mod x_0_12) mod (x_0_3 mul abs(-6))) idiv abs(x_0_4)) add n))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "- 4 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1", "x2": "idiv add idiv INT- 5 sqr n x_0_1 mul INT- 3 mul sign sub n sqr INT- 4 INT- 4", "tree": "(((-5 idiv (n)**2) add x_0_1) idiv (-3 mul (sign((n sub (-4)**2)) mul -4)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 6 + 3 + 1 - 10 + 7 + 218 + 476 + 520 + 719 + 830 + 613 + 563 + 470 + 769 + 609 + 767 + 1831 + 1137 + 1424 + 1348 + 1347", "x2": "sub sqr sub mod sub n x_0_6 n sub sub n relu sub n INT- 8 n n", "tree": "(((((n sub x_0_6) mod n) sub ((n sub relu((n sub -8))) sub n)))**2 sub n)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257", "x2": "add INT+ 1 sqr n", "tree": "(1 add (n)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 - 8 + 1 + 4 + 1 - 4 - 4 - 4 + 10 + 2 - 7 - 6 - 11 + 67 + 54 + 107 - 598 - 478 - 969 + 5384 + 4319 + 8729 - 4 8438 - 3 8932 - 7 8604 + 43 5902 + 35 1040 + 70 8021", "x2": "sub abs x_0_12 add x_0_10 mul x_0_3 INT+ 9", "tree": "(abs(x_0_12) sub (x_0_10 add (x_0_3 mul 9)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "+ 0 - 2 - 9 - 5 - 2 + 6 - 2 + 3 - 1 - 11 + 15 + 47 - 35 + 275 + 69 + 827 - 71 - 9089 - 1081 - 42 7137 + 3 7797 - 1 1746 2401 + 260 8061 - 971 4140 6455", "x2": "add sign x_0_8 add INT- 2 mul x_0_8 mul sub x_0_2 sign x_0_3 INT+ 1", "tree": "(sign(x_0_8) add (-2 add (x_0_8 mul ((x_0_2 sub sign(x_0_3)) mul 1))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 1 + 3 + 1 + 5 + 1 + 7 + 1 + 9 + 1 + 11 + 1 + 13 + 1 + 15 + 1 + 17", "x2": "idiv n mul idiv relu n n x_0_1", "tree": "(n idiv ((relu(n) idiv n) mul x_0_1))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 5 - 1 + 5 + 0 + 625 + 625 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0", "x2": "sqr abs sqr mod x_0_3 abs add sqr relu sign x_0_2 INT+ 5", "tree": "(abs(((x_0_3 mod abs(((relu(sign(x_0_2)))**2 add 5))))**2))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 4 - 6 - 9 - 14 - 23 - 40 - 73 - 138 - 267 - 524 - 1037 - 2062 - 4111 - 8208 - 1 6401 - 3 2786 - 6 5555", "x2": "sub relu n sub relu abs x_0_1 x_0_1", "tree": "(relu(n) sub (relu(abs(x_0_1)) sub x_0_1))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 1 + 9 + 0 - 7 + 4 - 8 + 9 + 17 + 10 + 18 + 9 + 9 + 13 + 9 + 18 + 26 + 19 + 27 + 18 + 18 + 22 + 18 + 27", "x2": "add relu x_0_8 abs INT- 9", "tree": "(relu(x_0_8) add abs(-9))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 9 - 7 + 9 - 42 + 63 + 49 - 63 + 294 - 441 - 343 + 441 - 2058 + 3087 + 2401 - 3087 + 1 4406 - 2 1609 - 1 6807 + 2 1609", "x2": "mul sub x_0_4 mul x_0_3 mul abs idiv mod INT+ 6 abs INT+ 2 n add INT+ 1 sub INT+ 8 n INT- 7", "tree": "((x_0_4 sub (x_0_3 mul (abs(((6 mod abs(2)) idiv n)) mul (1 add (8 sub n))))) mul -7)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 - 7 + 6 - 6 + 1 + 10 - 6 - 2 + 4 - 5 + 1 + 20 + 42 - 12 - 24 - 5 + 10 - 120 - 84 - 48 + 120 - 5 + 200 - 5040 + 1008 + 1152", "x2": "mul x_0_6 x_0_11", "tree": "(x_0_6 mul x_0_11)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 5 - 12 - 54 - 400 - 3950 - 4 7328 - 66 2494 - 1059 9776 - 1 9079 5806 - 38 1591 5920 - 839 5014 9998 - 2 148 359 9664 - 52 3848 9359 926 - 1466 7770 2054 5536 - 4 4003 3106 1636 5630 - 140 8105 9397 2369 9648 - 4787 5601 9506 578 7454", "x2": "mul n add sub x_0_1 sub abs x_0_1 n n", "tree": "(n mul ((x_0_1 sub (abs(x_0_1) sub n)) add n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 + 10 + 10 + 10 - 8 - 4 - 2 + 5 - 10 + 19 + 5 + 4 + 2 + 32 + 0 + 13 + 8 + 26 + 32 + 15 + 4 + 12 + 35 + 8 + 3", "x2": "relu relu abs sub sub abs n x_0_5 x_0_9", "tree": "relu(relu(abs(((abs(n) sub x_0_5) sub x_0_9))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 6 + 0 + 3 + 8 + 9 + 10 + 9 + 9 + 9 + 10 + 12 + 13 + 14 + 13 + 13 + 11 + 12 + 10", "x2": "relu add n mod INT+ 3 sub x_0_2 add x_0_3 add n sub idiv sub sign INT- 4 INT- 4 n INT+ 9", "tree": "relu((n add (3 mod (x_0_2 sub (x_0_3 add (n add (((sign(-4) sub -4) idiv n) sub 9)))))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 - 5 - 4 + 4 + 5 + 6 + 7 + 2 - 17 - 15 - 13 - 7 - 7 - 7 - 6 - 5 - 4 - 24 - 23", "x2": "sub mul mul idiv n INT+ 9 INT+ 7 INT- 3 sub mul idiv x_0_3 INT- 1 0 mod n INT- 7 n", "tree": "((((n idiv 9) mul 7) mul -3) sub (((x_0_3 idiv -10) mul (n mod -7)) sub n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 9 - 9 - 9 + 6 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1", "x2": "sign idiv sub add add mod INT- 1 n n n idiv sqr sqr INT- 4 x_0_3 abs x_0_4", "tree": "sign((((((-1 mod n) add n) add n) sub (((-4)**2)**2 idiv x_0_3)) idiv abs(x_0_4)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 6 + 1 + 3 - 2 - 10 - 7 + 5 - 342 + 74 + 279 - 228 - 1370 - 1134 + 945 - 7 4556 + 1 8426 + 7 8678 - 7 2276 - 48 4980 - 44 5662 + 41 130 - 3556 3212 + 961 8372", "x2": "idiv mul x_0_7 mul mod INT- 7 sqr n n n", "tree": "((x_0_7 mul ((-7 mod (n)**2) mul n)) idiv n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 8 - 6 - 16 - 28 - 42 - 58 - 76 - 96 - 118 - 142 - 168 - 196 - 226 - 258 - 292 - 328 - 366", "x2": "add mul n add sub INT- 5 n relu x_0_1 INT+ 8", "tree": "((n mul ((-5 sub n) add relu(x_0_1))) add 8)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 10 - 8 + 6 - 3 + 180 + 216 + 468 + 288 + 6804 + 8136 + 1 7244 + 1 800 + 24 5412 + 29 3400 + 62 1324 + 38 9376 + 883 5444 + 1056 3048 + 2236 8348 + 1401 8256", "x2": "mul add relu x_0_4 n sqr INT- 6", "tree": "((relu(x_0_4) add n) mul (-6)**2)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 0 + 10 + 3 - 1 + 4 + 0 + 10 + 3 + 1 + 4 + 0 + 10 + 3 + 1 + 4 + 0 + 10 + 3 + 1 + 4", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 + 4 + 8 + 4 + 4 - 4 + 3 + 4 + 4 + 144 + 144 + 64 + 0 + 1 + 49 + 64 + 2 1904 + 8 2944 + 4 3264 + 4096 + 1 + 2500 + 1 2769 + 4 8259 3024", "x2": "sqr add x_0_7 x_0_8", "tree": "((x_0_7 add x_0_8))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 10 - 3 - 3 - 7 + 9 - 4 + 2 - 2 + 7 + 8 + 63 + 99 + 36 + 18 + 72 + 90 + 45 + 9 + 27 + 54 + 63 + 558 + 882 + 315 + 153 + 639", "x2": "abs mul sub x_0_11 sign mul sub INT+ 9 relu idiv INT+ 1 0 x_0_7 x_0_8 INT- 9", "tree": "abs(((x_0_11 sub sign(((9 sub relu((10 idiv x_0_7))) mul x_0_8))) mul -9))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 0 - 9 + 5 + 0 + 9 + 5 + 0 + 9 + 5 + 0 + 9 + 5 + 0 + 9 + 5 + 0 + 9 + 5", "x2": "idiv x_0_3 sign mod mul n idiv n relu x_0_3 INT+ 9", "tree": "(x_0_3 idiv sign(((n mul (n idiv relu(x_0_3))) mod 9)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 10 - 4 + 8 + 10 - 3 - 7 - 4 + 82 + 99 + 120 + 145 + 170 + 197 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575", "x2": "abs sub sqr n sign sub x_0_6 idiv sqr mod sign INT+ 9 sub n INT+ 7 x_0_8", "tree": "abs(((n)**2 sub sign((x_0_6 sub (((sign(9) mod (n sub 7)))**2 idiv x_0_8)))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 3 - 7 - 7 - 2 - 8 + 8 + 10 + 361 + 441 + 20 4304 + 1036 8400 + 1 3799 9762 1289 + 3 6743 5620 8332 6609 + 44 1614 3409 1382 5642 3154 4025 + 389 8779 7225 2314 529 6894 5742 4346 7841 + 0 + 324 + 0 + 400 + 0 + 484 + 0 + 576", "x2": "sqr relu add n mod x_0_1 mul sign sign mul INT- 5 n mul sub x_0_8 n x_0_2", "tree": "(relu((n add (x_0_1 mod (sign(sign((-5 mul n))) mul ((x_0_8 sub n) mul x_0_2))))))**2", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 6 - 8 - 8 + 2 - 1 - 5 - 5 + 8 + 4 + 1 + 7 + 43 + 41 + 41 + 51 + 48 + 44 + 44 + 57 + 53 + 50 + 56 + 92 + 90 + 90 + 100 + 97", "x2": "sub add n add x_0_11 sqr INT- 7 n", "tree": "((n add (x_0_11 add (-7)**2)) sub n)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 2 + 9 - 1 - 5 - 1 - 10 - 166 - 31 - 441 - 8291 - 1696 - 2 6451 - 53 8906 - 11 8711 - 198 3816 - 4311 2471 - 1009 426 - 1 7854 3431 - 40 9568 4736 - 10 904 2591 - 187 4706 246 - 4505 2532 951", "x2": "add sub mul x_0_3 mul abs INT+ 5 n INT- 8 sign sign abs x_0_6", "tree": "(((x_0_3 mul (abs(5) mul n)) sub -8) add sign(sign(abs(x_0_6))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr mul idiv add INT+ 6 add abs n add n INT+ 5 INT+ 2 abs sign mul n INT+ 5", "tree": "((((6 add (abs(n) add (n add 5))) idiv 2) mul abs(sign((n mul 5)))))**2", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 1 - 4 - 8 + 14 + 31 + 43 + 84 + 96 + 110 + 160 + 154 + 181 + 244 + 217 + 281 + 350 + 295 + 423 + 467", "x2": "sub add sub x_0_3 INT+ 2 sqr relu n x_0_4", "tree": "(((x_0_3 sub 2) add (relu(n))**2) sub x_0_4)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 + 2 + 7 - 1 - 9 - 2 - 4 - 9 + 5 - 1 - 1 + 1 + 4 - 2 - 1 + 0 + 2 + 0 - 1 - 1 + 2 + 0 - 1 - 1 + 2", "x2": "add idiv x_0_9 add sub idiv x_0_7 n sub mul sign x_0_1 x_0_3 x_0_1 INT+ 4 relu x_0_4", "tree": "((x_0_9 idiv (((x_0_7 idiv n) sub ((sign(x_0_1) mul x_0_3) sub x_0_1)) add 4)) add relu(x_0_4))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 6 + 3 - 6 - 8 + 8 - 10 - 3 + 5 - 3 - 9 - 2 + 4 - 2 1609 - 729 - 5 9049 - 3 6864 - 3 6864 - 3 6864 - 58 9824 - 5625 - 94 4784 - 25 7049 - 175 329 - 2304 - 58 9824 - 351 5625 + 0 - 18 6624", "x2": "mul INT- 9 sqr sqr mod x_0_12 n", "tree": "(-9 mul (((x_0_12 mod n))**2)**2)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "- 7 + 21 - 63 + 189 - 567 + 1701 - 5103 + 1 5309 - 4 5927 + 13 7781 - 41 3343 + 124 29 - 372 87 + 1116 261 - 3348 783 + 1 44 2349 - 3 132 7047", "x2": "mul x_0_1 INT- 3", "tree": "(x_0_1 mul -3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256", "x2": "idiv mul n n INT- 1", "tree": "((n mul n) idiv -1)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257", "x2": "sub relu sqr n mod INT+ 3 INT- 2", "tree": "(relu((n)**2) sub (3 mod -2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 - 11 - 30 - 67 - 128 - 219 - 346 - 515 - 732 - 1003 - 1334 - 1731 - 2200 - 2747 - 3378 - 4099", "x2": "sub INT- 2 add idiv sub sqr sqr n idiv INT- 1 0 sqr INT+ 6 n sign n", "tree": "(-2 sub (((((n)**2)**2 sub (-10 idiv (6)**2)) idiv n) add sign(n)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 5 + 8 - 8 + 4 + 8 + 45 + 54 + 1 + 4 + 61 + 95 + 101 + 14 + 11 + 101 + 138 + 108 + 38 + 11 + 117 + 181", "x2": "sub mul x_0_5 sign idiv abs mod n sqr x_0_1 INT+ 5 mod x_0_2 mul INT+ 6 INT- 9", "tree": "((x_0_5 mul sign((abs((n mod (x_0_1)**2)) idiv 5))) sub (x_0_2 mod (6 mul -9)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 64 + 32 + 21 + 16 + 12 + 10 + 9 + 8 + 7 + 6 + 5 + 5 + 4 + 4 + 4 + 4", "x2": "idiv sqr INT- 8 n", "tree": "((-8)**2 idiv n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 - 3 - 3 - 7 + 3 + 7 + 9 - 3 - 7 + 4 + 6 + 15 + 20 + 9 + 2 + 7 + 13 + 24 + 37 + 23 + 6 + 13 + 28 + 44 + 46 + 25", "x2": "sub add mod x_0_11 n x_0_6 mod mul x_0_8 x_0_5 sign idiv x_0_10 sign INT- 5", "tree": "(((x_0_11 mod n) add x_0_6) sub ((x_0_8 mul x_0_5) mod sign((x_0_10 idiv sign(-5)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 3 - 1 + 0 + 4 - 2 + 1 + 7 - 2 + 1 + 10 - 2 + 1 + 13 - 2 + 1 + 16 - 2 + 1", "x2": "idiv n sub abs x_0_2 x_0_1", "tree": "(n idiv (abs(x_0_2) sub x_0_1))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 - 2 - 3 - 2 - 5 + 0 - 5 - 2 - 3 - 2 - 5 + 0 - 5 - 2 - 3 - 2", "x2": "mod sqr mul sign abs n mul n INT+ 7 INT- 6", "tree": "(((sign(abs(n)) mul (n mul 7)))**2 mod -6)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 1 + 7 - 2 + 6 - 33 - 50 - 57 - 83 - 94 - 154 - 194 - 226 - 279 - 319 - 410 - 483 - 550 - 640 - 719 - 851", "x2": "sub x_0_5 mul n add mul x_0_5 idiv INT- 4 INT- 7 n", "tree": "(x_0_5 sub (n mul ((x_0_5 mul (-4 idiv -7)) add n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 8 - 3 + 3 + 3 + 13 + 6 + 13 + 21 + 23 + 35 + 30 + 39 + 49 + 53 + 67 + 64 + 75 + 87 + 93 + 109", "x2": "add n add x_0_5 n", "tree": "(n add (x_0_5 add n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 10 - 7 - 4 + 7 - 2 - 5 - 1 + 1 - 100 - 528 - 732 + 52 - 196 - 480 - 2560 + 799 - 342 - 380 - 13 8980 + 861 5670 - 1078 - 2116 - 3 1536 + 1 2406 3650", "x2": "mul sub idiv sqr abs add sub x_0_9 INT+ 7 idiv sqr x_0_9 sqr INT+ 1 0 x_0_8 n n", "tree": "((((abs(((x_0_9 sub 7) add ((x_0_9)**2 idiv (10)**2))))**2 idiv x_0_8) sub n) mul n)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 8 + 4 - 3 - 1 + 2 + 8 + 11 + 15 + 16 + 12 + 11 + 9 + 10 + 16 + 19 + 23 + 24 + 20 + 19 + 17", "x2": "add add n sub mul n mod mul INT- 5 x_0_4 INT+ 1 abs x_0_4 n", "tree": "((n add ((n mul ((-5 mul x_0_4) mod 1)) sub abs(x_0_4))) add n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 - 5 + 10 - 1 + 1 + 7 + 3 + 2 - 3 - 5 + 10 - 1 + 1 + 7 + 3 + 2 - 3 - 5 + 10 - 1 + 1 + 7 + 3 + 2", "x2": "sub x_0_8 relu mod sqr n n", "tree": "(x_0_8 sub relu(((n)**2 mod n)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 3 + 1 + 16 + 31 + 46 + 65 + 88 + 110 + 141 + 171 + 215 + 263 + 305 + 351 + 401 + 465 + 523 + 595", "x2": "add x_0_1 abs add mul sub mod x_0_2 INT+ 3 n INT+ 5 mod n x_0_2", "tree": "(x_0_1 add abs(((((x_0_2 mod 3) sub n) mul 5) add (n mod x_0_2))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 5 + 7 - 6 - 13 - 16 - 16 - 17 - 17 - 19 - 19 - 21 - 21 - 23 - 23 - 25 - 25 - 27 - 27 - 29", "x2": "sub sub INT- 1 0 n idiv abs idiv x_0_3 x_0_2 sub x_0_3 relu relu n", "tree": "((-10 sub n) sub (abs((x_0_3 idiv x_0_2)) idiv (x_0_3 sub relu(relu(n)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 6 - 8 + 5 - 1 + 6 - 6 + 17 + 5 + 35 + 6 + 283 + 42 + 1230 + 71 + 8 95 + 2047 + 151 2942 + 6271 + 64 1520 9096 + 427 304", "x2": "add sqr relu x_0_4 x_0_5", "tree": "((relu(x_0_4))**2 add x_0_5)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 6 - 3 - 11 - 8 - 16 - 13 - 21 - 18 - 26 - 23 - 31 - 28 - 36 - 33 - 41 - 38 - 46 - 43", "x2": "sub sub add sign INT+ 6 x_0_2 sign relu n abs INT+ 5", "tree": "(((sign(6) add x_0_2) sub sign(relu(n))) sub abs(5))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 4 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign abs mod INT- 6 idiv mul idiv x_0_2 INT+ 4 add n abs INT- 7 x_0_1", "tree": "sign(abs((-6 mod (((x_0_2 idiv 4) mul (n add abs(-7))) idiv x_0_1))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 + 0 + 10 + 10 - 10 - 1 - 10 + 0 - 1 + 1 + 18 + 0 + 0 + 0 + 9 + 0 + 11 + 17 + 2 + 17 + 0 + 9 + 0 + 20 + 8 + 13", "x2": "sub relu sub x_0_7 sub x_0_10 x_0_9 relu sign sign INT- 3", "tree": "(relu((x_0_7 sub (x_0_10 sub x_0_9))) sub relu(sign(sign(-3))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 0 + 3 + 4 + 5 + 6 + 7 + 16 + 18 + 20 + 22 + 24 + 39 + 42 + 45 + 48", "x2": "idiv mul n idiv mod INT- 2 n INT- 5 INT- 1", "tree": "((n mul ((-2 mod n) idiv -5)) idiv -1)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 4 - 7 - 6 + 7 - 3 + 10 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign mul x_0_3 add sqr x_0_5 add mod abs x_0_2 mul n n add x_0_6 x_0_8", "tree": "sign((x_0_3 mul ((x_0_5)**2 add ((abs(x_0_2) mod (n mul n)) add (x_0_6 add x_0_8)))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 0 + 1 - 10 + 9 + 4 + 8 + 8 + 5 + 2 - 1 + 0 - 11 + 10 + 3 + 7 + 7 + 4 + 1 - 2 - 1 - 12 + 9 + 2 + 8", "x2": "add x_0_9 sign sign mod x_0_2 INT- 9", "tree": "(x_0_9 add sign(sign((x_0_2 mod -9))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 6 - 4 + 0 + 7 - 8 + 2 + 4 + 8 + 55 9872 + 51 2000 + 0 - 154 8288 + 224 9728 - 70 2464 - 172 8000 - 943 7184 - 3520 8334 5408 - 3822 595 2000 + 0 + 1 5854 4691 2000 - 2 6668 4556 9024 + 9574 1909 4016 + 2 6911 4572 8000 + 29 6868 1394 9952", "x2": "mul mul n sqr mul add relu mul INT- 8 idiv x_0_6 x_0_4 n sub INT- 6 INT+ 2 mul x_0_8 INT- 2", "tree": "((n mul (((relu((-8 mul (x_0_6 idiv x_0_4))) add n) mul (-6 sub 2)))**2) mul (x_0_8 mul -2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 10 + 9 - 2 + 8 + 9 - 9 - 5 - 10 + 9 - 2 + 8 + 9 - 9 - 5 - 10 + 9 - 2 + 8 + 9 - 9 - 5 - 10 + 9", "x2": "add x_0_7 idiv relu INT+ 3 n", "tree": "(x_0_7 add (relu(3) idiv n))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 8 - 6 - 1 + 3 + 10 + 10 + 17 + 17 + 26 + 26 + 37 + 37 + 50 + 50 + 65 + 65 + 82", "x2": "add sub sqr idiv n INT- 2 mod sign INT- 2 x_0_1 mul sign INT+ 3 x_0_1", "tree": "((((n idiv -2))**2 sub (sign(-2) mod x_0_1)) add (sign(3) mul x_0_1))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 5 + 43 + 90 + 136 + 181 + 225 + 268 + 310 + 351 + 391 + 430 + 468 + 505 + 541 + 576 + 610 + 643", "x2": "add INT+ 7 sub add sqr INT+ 6 x_0_1 sub n abs INT+ 7", "tree": "(7 add (((6)**2 add x_0_1) sub (n sub abs(7))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 2 + 10 - 7 - 10 + 10 + 10 - 3388 - 343 - 6300 - 112 - 28 - 7623 - 8092 - 7963 9903 - 74 8503 - 2 7633 2623 - 6 1852 - 567 - 4 463 9263 - 4 5598 7287 - 4 4397 5745 1985 9127 - 3 9215 5617 2800", "x2": "mul sqr add add idiv INT+ 6 sqr INT- 1 0 add n relu x_0_7 x_0_7 INT- 7", "tree": "(((((6 idiv (-10)**2) add (n add relu(x_0_7))) add x_0_7))**2 mul -7)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 0 + 3 + 0 + 5 + 0 + 7 + 0 + 9 + 0 + 11 + 0 + 13 + 0 + 15 + 0", "x2": "mul abs mul mod sub sqr n INT- 8 INT+ 2 INT- 1 n", "tree": "(abs(((((n)**2 sub -8) mod 2) mul -1)) mul n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 256 + 6561 + 6 5536 + 39 625 + 167 9616 + 576 4801 + 1677 7216 + 4304 6721 + 1 0 0 + 2 1435 8881 + 4 2998 1696 + 8 1573 721 + 14 7578 9056 + 25 6289 625 + 42 9496 7296", "x2": "abs abs sqr sqr sqr abs n", "tree": "abs(abs((((abs(n))**2)**2)**2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 4 + 2 + 8 + 0 + 6 - 10 + 8 + 10 - 4 + 3 - 97 - 118 - 193 - 222 - 193 - 222 - 97 - 78 - 2 8558 - 321 - 5473 - 6558 - 526 - 166 - 8 309 8918 - 5181", "x2": "sub idiv sqr sub idiv INT+ 8 INT+ 5 sub mod x_0_10 abs x_0_6 n sign INT- 5 INT- 3", "tree": "(((((8 idiv 5) sub ((x_0_10 mod abs(x_0_6)) sub n)))**2 idiv sign(-5)) sub -3)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 8 - 6 - 5 + 10 + 10 - 4 - 3 + 12 + 12 - 2 - 1 + 14 + 14 + 0 + 1 + 16 + 16 + 2", "x2": "sub sub n x_0_2 idiv INT+ 6 INT+ 8", "tree": "((n sub x_0_2) sub (6 idiv 8))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 7 + 15 - 54 + 150 - 465 + 1377 - 4152 + 1 2432 - 3 7323 + 11 1939 - 33 5850 + 100 7514 - 302 2581 + 906 7701 - 2720 3148 + 8160 9396 - 2 4482 8239", "x2": "mul INT- 3 add n x_0_1", "tree": "(-3 mul (n add x_0_1))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 4 + 5 - 6 + 0 - 2 - 5 - 2 + 0 - 8 - 6 - 10 + 0 - 6 - 9 - 6 + 0 - 12 - 10 - 14", "x2": "mul mod x_0_4 n sign mul sqr n INT- 1", "tree": "((x_0_4 mod n) mul sign(((n)**2 mul -1)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 + 4 + 3 - 7 - 6 + 4 + 3 - 7 - 6 + 4 + 3 - 7 - 6 + 4 + 3 - 7 - 6 + 4", "x2": "sub idiv INT- 3 abs sign idiv INT+ 1 add INT- 7 sqr sign INT- 2 x_0_2", "tree": "((-3 idiv abs(sign((1 idiv (-7 add (sign(-2))**2))))) sub x_0_2)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 9 - 99 - 1089 - 1 1979 - 13 1769 - 144 9459 - 1594 4049 - 1 7538 4539 - 19 2922 9929 - 212 2152 9219 - 2334 3682 1409 - 2 5678 503 5499 - 28 2458 5539 489 - 310 7044 929 5379 - 3417 7485 224 9169 - 3 7595 2335 2474 859 - 41 3547 5687 7214 9449", "x2": "mul x_0_1 sub sign sub n mod INT- 9 idiv INT+ 5 INT- 7 INT- 1 0", "tree": "(x_0_1 mul (sign((n sub (-9 mod (5 idiv -7)))) sub -10))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 1 - 7 + 9 + 72 + 720 + 8586 + 11 9700 + 190 9440 + 3429 2646 + 6 8465 5920 + 150 4142 6400 + 3605 8272 1848 + 9 3662 5024 1088 + 262 444 2678 864 + 7855 9240 6259 8200 + 25 1239 7099 9928 4992 + 853 7695 3847 2041 5040 + 3 721 5627 2168 817 3840 + 116 6942 279 7487 2419 1072", "x2": "sub mul n add x_0_1 x_0_1 relu mul relu n x_0_3", "tree": "((n mul (x_0_1 add x_0_1)) sub relu((relu(n) mul x_0_3)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 6 - 7 + 10 + 9 - 8 + 1 + 1 + 1 + 1 + 14 - 3 - 2 + 15 + 6 + 6 + 6 + 6 - 7 + 10 + 9 - 8 + 1 + 1", "x2": "sub abs INT- 7 x_0_8", "tree": "(abs(-7) sub x_0_8)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 7 - 2 - 3 + 0 - 1 - 2 - 3 + 0 - 1 - 2 - 3 + 0 - 1 - 2 - 3 + 0", "x2": "mul mod n INT+ 4 idiv idiv mod sign n INT- 8 mul n n n", "tree": "((n mod 4) mul (((sign(n) mod -8) idiv (n mul n)) idiv n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 7 + 3 - 5 - 14 - 32 - 23 - 32 - 42 - 61 - 53 - 63 - 74 - 94 - 87 - 98 - 110 - 131 - 125 - 137", "x2": "sub add add x_0_4 INT- 6 INT- 4 add INT+ 9 n", "tree": "(((x_0_4 add -6) add -4) sub (9 add n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 5 - 2 + 6 - 2 + 2 + 6 - 40 + 162 + 120 + 11 + 672 - 1937 - 1540 + 690 - 1 3056 + 3 1212 + 2 7882 - 2 5479 + 30 300 - 62 2629 - 62 8056 + 88 6880", "x2": "mul add add sub abs INT+ 3 x_0_4 n sub INT- 1 x_0_7 n", "tree": "((((abs(3) sub x_0_4) add n) add (-1 sub x_0_7)) mul n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 9 - 4 - 9 - 1 - 2 - 3 - 7 - 8 - 5 - 10 - 7 - 10 - 11 - 14 - 13 - 15 - 14 - 14 - 17", "x2": "sub mod mod INT+ 2 x_0_3 INT+ 5 relu abs n", "tree": "(((2 mod x_0_3) mod 5) sub relu(abs(n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 1 - 8 - 2 - 8 + 4 - 189 - 56 - 5175 - 390 - 7733 - 2292 - 603 6836 - 61 4642 - 60 2564 610 - 3893 7584 - 172 8199 4504 - 17 205 7518 - 1 3156 633 8961 3437 - 151 1139 1526 5580 - 160 1198 39 5485 9689 6079 - 73 3809 5567 1441 5082", "x2": "sub n sqr mul x_0_6 n", "tree": "(n sub ((x_0_6 mul n))**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 0 + 2 + 8 + 0 + 4 + 0 + 5 + 0 + 6 + 0 + 8 + 0 + 9 + 0 + 10 + 0", "x2": "relu idiv mul INT- 2 n add x_0_1 INT- 3", "tree": "relu(((-2 mul n) idiv (x_0_1 add -3)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 2 + 0 + 9 + 9 + 10 + 12 + 13 + 13 + 14 + 16 + 17 + 17 + 18 + 20 + 21 + 21 + 22 + 24", "x2": "add n relu sub INT+ 4 mod x_0_3 mod INT- 7 INT- 5", "tree": "(n add relu((4 sub (x_0_3 mod (-7 mod -5)))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 + 7 - 27 + 27 - 134 + 165 - 933 + 1327 - 8388 + 1 3281 - 9 2255 + 15 9387 - 119 9298 + 223 1437 - 1798 9449 + 3570 3015 - 3 582 608 + 6 4265 4297", "x2": "sub sub mul sub x_0_2 idiv sub sub INT- 8 n n add n n abs n abs INT+ 8 INT+ 1", "tree": "((((x_0_2 sub (((-8 sub n) sub n) idiv (n add n))) mul abs(n)) sub abs(8)) sub 1)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 - 16 - 48 - 192 - 960 - 5760 - 4 320 - 32 2560 - 290 3040 - 2903 400 - 3 1933 4400 - 38 3201 2800 - 498 1616 6400 - 6974 2632 9600 - 10 4613 9494 4000 - 167 3823 1910 4000 - 2845 4994 2476 8000", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 4 - 3 - 8 - 6 - 3 - 8 - 6 - 3 - 8 - 6 - 3 - 8 - 6 - 3 - 8 - 6 - 3 - 8 - 6 - 3", "x2": "add n add sub sign sqr n n add x_0_3 sign add INT- 9 x_0_4", "tree": "(n add ((sign((n)**2) sub n) add (x_0_3 add sign((-9 add x_0_4)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 9 - 8 - 8 + 8 + 125 - 2658 + 7 4823 - 239 3848 + 8617 9077 - 34 4716 2510 + 1516 7515 1111 - 7 2804 725 2644 + 378 5811 7713 8281 - 2 1200 5459 1974 2938 + 127 2032 7551 8457 7195 - 8141 96 3318 1293 9568 + 55 3588 6550 5632 7989 1661 - 3985 8383 1640 5561 5219 8566 + 30 2923 7120 4682 2675 6709 2175 - 2423 3896 9637 4581 4053 6737 2860", "x2": "mul sub mul INT+ 4 add sub INT+ 7 add INT- 9 x_0_1 idiv abs INT- 2 x_0_4 INT+ 3 n", "tree": "(((4 mul ((7 sub (-9 add x_0_1)) add (abs(-2) idiv x_0_4))) sub 3) mul n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 + 104 + 1 816 + 112 4864 + 1 1698 5856 + 121 6652 9024 + 1 2653 1901 8496 + 131 5931 7792 3584 + 1 3685 6905 405 2736 + 142 3311 8124 2148 4544 + 1 4802 4428 4918 3439 2576 + 153 9454 563 1507 7682 7904 + 1 6010 3221 8567 6807 9010 2016 + 166 5073 5073 1038 8021 7060 9664 + 1 7316 7644 7602 8035 4257 4340 5056 + 180 943 5055 691 5684 2773 1412 5824 + 1 8729 8124 5727 1923 1164 8406 6908 5696", "x2": "abs mul x_0_1 sub abs mod INT- 4 INT- 8 mul INT+ 3 sqr INT- 6", "tree": "abs((x_0_1 mul (abs((-4 mod -8)) sub (3 mul (-6)**2))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 - 8 + 6 + 0 - 6 + 7 - 1 + 7 - 3 - 9 - 1 + 0 + 3 + 12 + 13 + 13 + 10 + 14 + 1 + 4 + 9 + 12 + 11 + 7 + 21 + 9 + 23", "x2": "abs mod mul n idiv add n x_0_11 sub mul idiv INT- 5 INT+ 2 n n add sub x_0_1 x_0_4 n", "tree": "abs(((n mul ((n add x_0_11) idiv (((-5 idiv 2) mul n) sub n))) mod ((x_0_1 sub x_0_4) add n)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 2 - 2 + 9 - 5 - 6 + 4 - 10 + 6 - 1 - 6 - 11 - 8 - 13 - 12 - 15 - 16 - 5 - 8 - 12 - 10 - 16 - 10 - 16 - 12", "x2": "sub mod mul sub sqr INT- 1 mul INT- 1 idiv x_0_7 x_0_8 x_0_5 n n", "tree": "(((((-1)**2 sub (-1 mul (x_0_7 idiv x_0_8))) mul x_0_5) mod n) sub n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 1 + 4 + 8 + 4 + 12 + 6 + 0 + 11 + 9 + 9 + 9 + 10 + 12 + 13 + 14 + 16", "x2": "sub n idiv n add INT- 5 x_0_1", "tree": "(n sub (n idiv (-5 add x_0_1)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 - 1 + 4 + 4 + 6 + 7 + 8 + 9 + 9 + 10 + 11 + 12 + 13 + 15 + 16 + 17 + 17 + 18", "x2": "add idiv sub mod add INT+ 1 0 n x_0_3 INT+ 3 INT- 1 0 n", "tree": "(((((10 add n) mod x_0_3) sub 3) idiv -10) add n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 + 0 - 4 + 8 + 3 + 1 + 6561 + 0 + 1936 + 6400 + 1089 + 144 + 72 7489 5849 + 0 + 8 4332 1600 + 104 8576 0 + 3 4273 1169 + 671 8464 + 191 560 3570 5808 7251 9161 + 0 + 3 1363 5372 5727 1296 0 + 532 1636 2784 3584 0 0", "x2": "sqr sub mul abs x_0_6 add sign INT+ 8 n x_0_6", "tree": "(((abs(x_0_6) mul (sign(8) add n)) sub x_0_6))**2", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 6 + 10 - 18 + 11 - 54 + 21 - 198 + 71 - 900 + 341 - 4959 + 2031 - 3 2249 + 1 4201 - 24 1884 + 11 3591 - 205 6023 + 102 2301", "x2": "sub mul n idiv add x_0_2 mod n abs INT+ 1 idiv add abs n n n INT+ 9", "tree": "((n mul ((x_0_2 add (n mod abs(1))) idiv ((abs(n) add n) idiv n))) sub 9)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 5 - 9 - 4 - 6 - 6 + 2 + 0 + 4 + 1 + 1 + 1 + 7 + 5 + 9 + 6 + 6 + 6 + 12 + 10 + 14 + 11 + 11", "x2": "abs sub INT- 5 x_0_6", "tree": "abs((-5 sub x_0_6))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 + 8 - 8 - 5 - 16 - 4 - 20 - 17 - 28 - 16 - 32 - 29 - 40 - 28 - 44 - 41 - 52 - 40 - 56 - 53", "x2": "sub add INT- 4 x_0_4 INT+ 8", "tree": "((-4 add x_0_4) sub 8)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 - 6 - 4 - 5 - 3 - 2 - 6 - 7 - 7 - 7 - 6 - 8 - 8 - 8 - 8 - 8 - 9 - 9 - 9 - 9", "x2": "sub idiv idiv mul add x_0_5 n x_0_5 n add relu INT+ 1 sub n n INT+ 4", "tree": "(((((x_0_5 add n) mul x_0_5) idiv n) idiv (relu(1) add (n sub n))) sub 4)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 10 - 10 - 3 - 5 + 6 + 5 - 1 + 6 + 14 + 11 + 21 + 19 + 36 + 42 + 25 + 45 + 54 + 51 + 67 + 72 + 54 + 73 + 81 + 77", "x2": "add add x_0_6 sub INT+ 1 abs n sqr add sign x_0_8 abs INT- 6", "tree": "((x_0_6 add (1 sub abs(n))) add ((sign(x_0_8) add abs(-6)))**2)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 4 + 3 - 4 + 5 + 0 - 49 + 16 - 27 - 520 + 143 - 360 - 6799 + 1960 - 5445 - 10 8832 + 3 3269 - 9 8064 - 206 7865", "x2": "mul idiv add INT- 3 x_0_3 mod sign INT+ 1 0 sub n INT- 1 n", "tree": "(((-3 add x_0_3) idiv (sign(10) mod (n sub -1))) mul n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 1 - 6 + 1 - 25 - 6 + 49 - 3 - 14 + 2 - 41 - 11 + 84 - 5 - 21 + 3 - 58 - 16 + 120", "x2": "idiv sqr relu n x_0_3", "tree": "((relu(n))**2 idiv x_0_3)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 8 + 3 - 4 + 80 - 238 - 72 - 228 + 1420 - 5208 - 1826 - 5520 + 3 3768 - 13 550 - 4 7866 - 14 9472 + 94 5028 - 378 6472 - 143 6550 - 463 4252", "x2": "mul sub x_0_4 n add abs sub INT- 1 0 n sign mod x_0_2 n", "tree": "((x_0_4 sub n) mul (abs((-10 sub n)) add sign((x_0_2 mod n))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 0 + 3 - 9 - 10 - 5 - 10 + 7 + 3 + 0 + 3 - 9 - 9 - 5 - 10 + 8 + 3 + 0 + 3 - 9 - 6 - 5 - 10 + 9", "x2": "add x_0_8 relu relu mod INT- 9 add x_0_5 idiv x_0_8 x_0_5", "tree": "(x_0_8 add relu(relu((-9 mod (x_0_5 add (x_0_8 idiv x_0_5))))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 6 + 6 + 3 + 3 + 5 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul sqr idiv n sign n sign add n x_0_5", "tree": "(((n idiv sign(n)))**2 mul sign((n add x_0_5)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 0 - 10 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign idiv add sign idiv x_0_2 sub n idiv sign INT- 6 INT+ 4 x_0_1 sub x_0_3 mod x_0_3 x_0_1", "tree": "sign(((sign((x_0_2 idiv (n sub (sign(-6) idiv 4)))) add x_0_1) idiv (x_0_3 sub (x_0_3 mod x_0_1))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 9 + 7 + 3 + 6 + 1 + 2 + 4 + 8 + 5 + 10 + 9 + 7 + 3 + 6 + 1 + 2", "x2": "mod mul abs INT- 2 x_0_1 sub INT+ 1 0 idiv sign n mul x_0_1 INT- 1 0", "tree": "((abs(-2) mul x_0_1) mod (10 sub (sign(n) idiv (x_0_1 mul -10))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 10 - 8 + 8 + 16 + 24 + 32 - 8 + 24 + 56 + 64 + 24 + 0 + 24 - 8 + 56 + 56 + 120 + 0 - 8 - 8 + 56 + 56 + 120 + 144 + 72 + 136 + 88", "x2": "add mul mod mul INT- 1 add n x_0_2 n INT+ 8 INT- 8", "tree": "((((-1 mul (n add x_0_2)) mod n) mul 8) add -8)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 0 - 3 + 1 - 3 - 3 - 1 + 7 + 6 - 1 + 6 - 16 + 0 + 9 - 3 + 9 + 9 + 3 - 28 - 24 + 4 - 24 + 64 + 0 - 45 + 15 - 45 - 45 - 15 + 140 + 144 - 24 + 144 - 384 + 0 + 270 - 105", "x2": "mul idiv n INT- 6 x_0_11", "tree": "((n idiv -6) mul x_0_11)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 6 + 3 + 4 + 4 + 64 + 36 + 100 + 4 + 4 + 4 + 196 + 196 + 196 + 4 + 4 + 4 + 324 + 324 + 484 + 4 + 4 + 4 + 676 + 676 + 676 + 4 + 4 + 4", "x2": "sqr sub add INT+ 2 n mod n x_0_3", "tree": "(((2 add n) sub (n mod x_0_3)))**2", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "sqr sub INT- 5 relu relu n", "tree": "((-5 sub relu(relu(n))))**2", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 4 + 7 + 9 + 13 + 19 + 28 + 43 + 66 + 104 + 164 + 262 + 419 + 674 + 1085 + 1751 + 2827 + 4569 + 7386 + 1 1945 + 1 9320 + 3 1254 + 5 562 + 8 1804 + 13 2353 + 21 4144 + 34 6483 + 56 613", "x2": "add idiv relu n INT- 2 add x_0_1 x_0_2", "tree": "((relu(n) idiv -2) add (x_0_1 add x_0_2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 8 + 4 + 2 - 6 + 0 + 13 + 1 + 3 + 11 + 5 - 8 + 4 + 2 - 6 + 0 + 13 + 1 + 3 + 11 + 5 - 8 + 4 + 2 - 6 + 0 + 13 + 1 + 3 + 11 + 5 - 8", "x2": "sub INT+ 5 x_0_5", "tree": "(5 sub x_0_5)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 9 - 9 - 6 + 5 + 4 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0", "x2": "abs sqr idiv x_0_5 mul n mul sqr n INT- 5", "tree": "abs(((x_0_5 idiv (n mul ((n)**2 mul -5))))**2)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 4 - 10 - 8 - 7 - 5 - 8 - 8 - 8 - 7 - 6 - 5 - 4 - 8 - 8 - 7 - 6 - 5 - 4 - 8 - 8 - 7 - 6 - 5 - 4 - 8 - 8 - 7", "x2": "sub add INT- 8 relu sub mod mod INT- 8 abs n INT+ 6 sign n relu idiv x_0_2 n", "tree": "((-8 add relu((((-8 mod abs(n)) mod 6) sub sign(n)))) sub relu((x_0_2 idiv n)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 4 - 2 - 7 - 8 - 20 - 12 - 49 - 64 - 180 - 120 - 539 - 768 - 2340 - 1680 - 8085 - 1 2288 - 3 9780 - 3 240 - 15 3615 - 24 5760 - 83 5380 - 66 5280 - 353 3145 - 589 8240 - 2088 4500 - 1729 7280 - 9539 4915 - 1 6515 720 - 6 565 500 - 5 1891 8400", "x2": "mul n x_0_4", "tree": "(n mul x_0_4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 10 - 10 + 8 - 7 - 6 + 1 + 6 + 1 - 2 - 2 + 1 - 3 - 3 + 7 + 2 + 8 - 18 - 19 + 10 - 11 - 11 + 2 + 8 + 2 - 2 - 2 + 2 - 3 - 3 + 10 + 3 + 11 - 34", "x2": "idiv n sub x_0_8 sign idiv INT- 8 abs idiv sqr x_0_1 x_0_6", "tree": "(n idiv (x_0_8 sub sign((-8 idiv abs(((x_0_1)**2 idiv x_0_6))))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul n abs n", "tree": "(n mul abs(n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 + 7 + 4 - 4 - 2 + 5 + 2 - 2 + 0 + 3 + 0 + 0 + 2 + 1 - 2 + 2 + 4 - 1 - 4 + 4 + 6 - 3 - 6 + 6 + 8 - 5 - 8", "x2": "sub sub sub n x_0_2 mod n INT- 4 n", "tree": "(((n sub x_0_2) sub (n mod -4)) sub n)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 5 - 10 + 4 + 9 + 6 + 0 + 10 + 6 + 10 + 103 + 73 - 7 + 55 + 41 + 29 + 65 + 133 - 25 + 185 + 196 + 294 + 286 + 947 - 453 + 1619 + 1301 + 4142 + 2103 + 1 2172 - 1 710 - 1777 - 1 552 + 1 9975 + 7668 + 6 895", "x2": "add add sub mul x_0_6 relu mod n sqr INT- 4 x_0_3 n x_0_10", "tree": "((((x_0_6 mul relu((n mod (-4)**2))) sub x_0_3) add n) add x_0_10)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 8 - 32 - 72 - 128 - 200 - 288 - 392 - 512 - 648 - 800 - 968 - 1152 - 1352 - 1568 - 1800 - 2048 - 2312 - 2592 - 2888 - 3200 - 3528 - 3872 - 4232 - 4608 - 5000 - 5408", "x2": "mul mul INT+ 2 INT- 4 relu sqr n", "tree": "((2 mul -4) mul relu((n)**2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275 + 299 + 324 + 350 + 377", "x2": "sub relu x_0_1 sub idiv x_0_1 add n sub x_0_1 sign x_0_1 n", "tree": "(relu(x_0_1) sub ((x_0_1 idiv (n add (x_0_1 sub sign(x_0_1)))) sub n))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 8 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0", "x2": "mod relu sign idiv x_0_2 INT- 9 INT+ 6", "tree": "(relu(sign((x_0_2 idiv -9))) mod 6)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 4 + 3 + 20 - 15 - 100 + 75 + 500 - 375 - 2500 + 1875 + 1 2500 - 9375 - 6 2500 + 4 6875 + 31 2500 - 23 4375 - 156 2500 + 117 1875 + 781 2500 - 585 9375 - 3906 2500 + 2929 6875 + 1 9531 2500 - 1 4648 4375 - 9 7656 2500 + 7 3242 1875 + 48 8281 2500 - 36 6210 9375", "x2": "mul x_0_2 INT- 5", "tree": "(x_0_2 mul -5)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 1 + 0 - 10 - 2 - 3 + 4 - 4 + 2 + 289 + 400 + 361 + 484 + 529 + 625 + 676 + 729 + 841 + 900 + 1225 + 1156 + 1521 + 1521 + 1849 + 1764 + 1936 + 2401 + 2916 + 2500 + 2809 + 3025 + 3136 + 4096 + 3969 + 4624", "x2": "mul INT+ 1 sqr add sub n idiv relu INT- 8 INT+ 4 add n mod x_0_8 INT- 7", "tree": "(1 mul (((n sub (relu(-8) idiv 4)) add (n add (x_0_8 mod -7))))**2)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 9 - 6 + 1 + 151 - 225 - 151 + 23 + 3772 - 5629 - 3780 + 569 + 9 4293 - 14 733 - 9 4509 + 1 4215 + 235 7314 - 351 8337 - 236 2738 + 35 5361 + 5893 2835 - 8795 8441 - 5906 8467 + 888 4007 + 14 7332 856 - 21 9896 1045 - 14 7671 1696 + 2 2210 153 + 368 3302 1377 - 549 7402 6149", "x2": "sub INT+ 6 add abs n mul mul mod sign INT+ 9 add INT- 6 relu INT- 8 INT+ 5 x_0_4", "tree": "(6 sub (abs(n) add (((sign(9) mod (-6 add relu(-8))) mul 5) mul x_0_4)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 3 + 6 - 2 + 1 - 70 + 1 - 19 + 1 - 23 + 1 - 27 + 1 - 31 + 1 - 35 + 1 - 39 + 1 - 43 + 1 - 47 + 1 - 51 + 1 - 55 + 1 - 59 + 1 - 63", "x2": "mod abs sign mod relu INT- 9 n sub mul x_0_3 sub INT- 6 n n", "tree": "(abs(sign((relu(-9) mod n))) mod ((x_0_3 mul (-6 sub n)) sub n))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 1 - 8 - 1 - 4 + 8 - 6 + 96 - 63 + 120 - 935 + 264 - 65 + 308 + 210 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089", "x2": "mul add idiv mul idiv x_0_2 abs n sqr INT- 4 sqr x_0_7 n n", "tree": "(((((x_0_2 idiv abs(n)) mul (-4)**2) idiv (x_0_7)**2) add n) mul n)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 5 - 3 - 4 + 1 - 9 - 8 + 9 + 0 - 7 + 2401 + 1225 + 441 + 784 + 49 + 3969 + 3136 + 3969 + 0 + 2401 + 2 8247 5249 + 7353 625 + 952 9569 + 3011 8144 + 11 7649 + 7 7189 5089 + 4 8189 304 + 7 7189 5089 + 0 + 2 8247 5249 + 390 9821 485 8298 8049 + 26 4930 8878 3164 625 + 4449 8215 8096 2289 + 4 4448 273 223 2064 + 6782 2307 2849 + 2919 5279 3926 9357 8129", "x2": "sqr mul abs mod INT+ 7 abs add add sign x_0_7 n n x_0_10", "tree": "((abs((7 mod abs(((sign(x_0_7) add n) add n)))) mul x_0_10))**2", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 10 + 7 - 2 - 7 - 1 - 1 + 0 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0", "x2": "idiv idiv sign x_0_4 sign sign x_0_3 n", "tree": "((sign(x_0_4) idiv sign(sign(x_0_3))) idiv n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 3 + 19 + 85 + 261 + 631 + 1303 + 2409 + 4105 + 6571 + 1 11 + 1 4653 + 2 749 + 2 8575 + 3 8431 + 5 641 + 6 5553 + 8 3539 + 10 4995 + 13 341 + 16 21 + 19 4503 + 23 4279 + 27 9865 + 33 1801 + 39 651 + 45 7003 + 53 1469", "x2": "add n sqr sqr add idiv sign INT- 3 x_0_2 abs n", "tree": "(n add ((((sign(-3) idiv x_0_2) add abs(n)))**2)**2)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 5 - 9 + 84 + 85 + 66 + 68 + 73 + 74 + 74 + 75 + 76 + 76 + 77 + 77 + 77 + 78 + 78 + 78 + 78 + 79 + 79 + 79 + 79 + 79 + 79 + 79 + 80 + 80", "x2": "idiv add sign sign INT- 7 sub idiv x_0_2 n sqr add INT- 1 0 abs INT+ 1 sign INT- 2", "tree": "((sign(sign(-7)) add ((x_0_2 idiv n) sub ((-10 add abs(1)))**2)) idiv sign(-2))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14 + 9 + 15 + 10 + 16 + 11 + 17 + 12 + 18 + 13", "x2": "add sub n idiv relu x_0_1 sign x_0_1 abs INT- 4", "tree": "((n sub (relu(x_0_1) idiv sign(x_0_1))) add abs(-4))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 0 + 4 + 8 + 5 + 7 + 1 + 10 + 9 + 89 + 90 + 86 + 82 + 85 + 83 + 89 + 80 + 81 + 1 + 0 + 4 + 8 + 5 + 7 + 1 + 10 + 9 + 89 + 90 + 86 + 82 + 85 + 83 + 89 + 80", "x2": "sub sqr INT+ 1 0 idiv add abs INT- 1 0 x_0_9 sqr INT+ 1", "tree": "((10)**2 sub ((abs(-10) add x_0_9) idiv (1)**2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 2 - 4 + 7 - 6 - 6 + 10 + 1 - 10 - 13 + 0 + 0 - 18 - 3 + 0 + 0 - 29 - 17 + 0 + 0 - 23 - 21 - 22 + 0 - 41 - 25 - 26 + 0 - 49 - 51 - 30 + 0 - 57 - 59", "x2": "mul sub n x_0_7 idiv sign add idiv x_0_6 n sign x_0_4 mul n sqr relu INT+ 2", "tree": "((n sub x_0_7) mul (sign(((x_0_6 idiv n) add sign(x_0_4))) idiv (n mul (relu(2))**2)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 5 + 1 + 7 + 10 - 5 + 1 + 7 + 10 - 5 + 1 + 7 + 10 - 5 + 1 + 7 + 10 - 5 + 1 + 7 + 10 - 5 + 1 + 7 + 10 - 5 + 1 + 7 + 10 - 5", "x2": "sub sub n mul x_0_4 sign INT- 1 n", "tree": "((n sub (x_0_4 mul sign(-1))) sub n)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 0 + 2 - 6 + 1 + 0 + 2 - 6 + 1 + 0 + 2 - 6 + 1 + 0 + 2 - 6 + 1 + 0 + 2 - 6 + 1 + 0 + 2 - 6 + 1 + 0 + 2 - 6 + 1 + 0", "x2": "mul sign n x_0_4", "tree": "(sign(n) mul x_0_4)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 6 + 9 - 8 - 27 - 22 - 51 - 84 - 95 - 142 - 195 - 228 - 299 - 378 - 439 - 540 - 651 - 746 - 883 - 1032 - 1167 - 1346 - 1539 - 1720 - 1947 - 2190 - 2423 - 2704 - 3003", "x2": "add sub n mul n n add INT- 1 mul x_0_3 relu INT+ 1", "tree": "((n sub (n mul n)) add (-1 add (x_0_3 mul relu(1))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 20 + 60 + 240 + 1200 + 7200 + 5 400 + 40 3200 + 362 8800 + 3628 8000 + 3 9916 8000 + 47 9001 6000 + 622 7020 8000 + 8717 8291 2000 + 13 767 4368 0 + 209 2278 9888 0 + 3556 8742 8096 0 + 6 4023 7370 5728 0 + 121 6451 40 8832 0 + 2432 9020 817 6640 0 + 5 1090 9421 7170 9440 0 + 112 4000 7277 7760 7680 0 + 2585 2016 7388 8497 6640 0 + 6 2044 8401 7332 3943 9360 0 + 155 1121 43 3309 8598 4000 0 + 4032 9146 1126 6056 3558 4000 0 + 10 8888 6945 418 3521 6076 8000 0", "x2": "abs mul x_0_1 n", "tree": "abs((x_0_1 mul n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 + 9 - 10 + 9 + 0 - 3 + 9 + 4 - 4 - 1491 + 2016 + 22 - 640 + 1470 + 2016 - 1220 - 21 4596 + 68 9679 + 1 7024 - 39 6900 + 13 3436 + 120 6153 - 53 2584 - 1 7165 2880 + 1 4346 1400 + 459 515 - 6 590 6136 + 2 3601 1888 + 20 2681 4552 - 6 150 7386 - 659 1390 5112 + 0 + 0 + 0 + 0", "x2": "mul mod x_0_1 n add mul x_0_7 add n n add n x_0_10", "tree": "((x_0_1 mod n) mul ((x_0_7 mul (n add n)) add (n add x_0_10)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 5 + 8 + 10 + 0 + 8 + 8 + 10 - 9 + 7 - 7 + 176 - 48 + 2210 + 56 + 3 3090 + 832 + 56 2428 + 1 5210 + 1068 6075 + 30 4420 + 2 2440 3963 + 669 8384 + 51 6124 411 + 1 6075 9968 + 1290 3018 3125 + 41 7973 7640 + 3 4837 9975 8927 + 1170 3222 8152 + 101 298 8311 2824 + 3 5109 5771 2080 + 3131 9194 1997 4815 + 112 3504 3243 8400 + 10 3353 1705 3823 5464 + 3819 9092 3706 6824 + 361 7356 4527 8183 2005 + 13 7516 5820 6385 768", "x2": "mul n add sub add relu x_0_2 INT- 2 x_0_10 INT+ 6", "tree": "(n mul (((relu(x_0_2) add -2) sub x_0_10) add 6))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 1 - 7 - 9 + 8 + 7 + 9 + 18 + 17 + 6 + 13 + 35 + 37 + 37 + 12 + 82 + 97 + 162 + 105 + 410 + 575 + 1659 + 1076 + 7891 + 1 4852 + 11 7982 + 5 9381 + 236 4818 + 793 7306 + 4 8235 6277 + 1 2547 4078", "x2": "add mod x_0_2 x_0_1 relu idiv sqr x_0_4 n", "tree": "((x_0_2 mod x_0_1) add relu(((x_0_4)**2 idiv n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 10 + 9 - 3 - 2 - 7 - 6 + 1 + 7 + 8 + 7 + 6 + 0 + 2 + 3 + 0 + 3 + 1 + 3 + 0 + 1 + 0 + 2 + 0 + 1 + 2 + 1 + 3 + 1 + 2 + 3 + 2 + 0 + 2", "x2": "mod mod add x_0_5 sign add relu INT+ 1 x_0_8 idiv INT+ 4 sign x_0_5 sqr INT- 3", "tree": "(((x_0_5 add sign((relu(1) add x_0_8))) mod (4 idiv sign(x_0_5))) mod (-3)**2)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 2 - 6 + 2 + 2 - 2 + 3 - 10 + 2 - 3 - 10 + 2 + 3 - 10 - 2 + 3 + 10 + 2 + 3 + 10 - 2 - 3 + 10 - 2 - 3 + 10 - 2 + 3 - 10 - 2 - 3 + 10 - 2 + 3", "x2": "mul sign mul abs sub n add x_0_7 n x_0_7 x_0_3", "tree": "(sign((abs((n sub (x_0_7 add n))) mul x_0_7)) mul x_0_3)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 8 - 4 + 2 + 5 - 5 + 4 + 5 - 3 + 0 + 0 + 36 + 81 + 0 + 81 + 100 + 9 + 36 + 36 + 1849 + 7744 + 49 + 7921 + 1 1664 + 289 + 2025 + 2025 + 345 2164 + 6012 4516 + 3481 + 6290 761 + 1 3630 5625 + 9 0 + 414 5296 + 414 9369", "x2": "sqr relu sub x_0_8 idiv n INT- 3", "tree": "(relu((x_0_8 sub (n idiv -3))))**2", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 8 + 8 + 8 + 0 + 12 + 14 + 0 + 18 + 20 + 0 + 24 + 26 + 0 + 30 + 32 + 0 + 36 + 38 + 0 + 42 + 44 + 0 + 48 + 50 + 0 + 54 + 56 + 0", "x2": "relu mul sign idiv INT+ 8 mul mod INT+ 2 x_0_3 mul INT+ 6 n abs abs add n n", "tree": "relu((sign((8 idiv ((2 mod x_0_3) mul (6 mul n)))) mul abs(abs((n add n)))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 7 + 2 - 8 + 3 - 462 - 539 - 616 - 1134 - 700 - 2 7104 - 3 4104 - 4 1678 - 9 3002 - 5 1030 - 300 8208 - 402 5294 - 521 1990 - 1232 2716 - 708 9740 - 4 4214 3366 - 6 1982 2434 - 8 3904 6992 - 20 7012 1368 - 12 4059 7050 - 804 6997 1582 - 1171 4630 4324 - 1644 5305 8924 - 4202 3446 9214 - 2605 2519 3810 - 17 4619 8362 7144", "x2": "mul sub mod sqr n x_0_5 sub INT+ 5 INT- 6 mul n mul INT- 1 INT- 7", "tree": "((((n)**2 mod x_0_5) sub (5 sub -6)) mul (n mul (-1 mul -7)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 6 - 4 - 1 + 3 + 8 + 14 + 21 + 29 + 38 + 48 + 59 + 71 + 84 + 98 + 113 + 129 + 146 + 164 + 183 + 203 + 224 + 246 + 269 + 293 + 318 + 344 + 371", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 2 + 10 + 2 + 0 - 6 - 5 - 10 + 9 - 1 + 10 - 14 - 70 - 84 - 154 + 112 - 28 + 126 - 150 - 994 - 850 - 2170 + 1554 - 406 + 1750 - 1510 - 1 3930 - 8510 - 3 394 + 2 1742 - 5698 + 2 4486 - 1 5110 - 19 5034 - 8 5110 - 42 5530", "x2": "mul mul abs sub sign sub x_0_10 INT+ 3 INT+ 6 INT+ 2 add INT- 1 x_0_7", "tree": "((abs((sign((x_0_10 sub 3)) sub 6)) mul 2) mul (-1 add x_0_7))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 68 + 278 + 628 + 1118 + 1748 + 2518 + 3428 + 4478 + 5668 + 6998 + 8468 + 1 78 + 1 1828 + 1 3718 + 1 5748 + 1 7918 + 2 228 + 2 2678 + 2 5268 + 2 7998 + 3 868 + 3 3878 + 3 7028 + 4 318 + 4 3748 + 4 7318", "x2": "mod INT- 2 mul sqr abs abs n abs add sqr INT- 8 abs INT- 6", "tree": "(-2 mod ((abs(abs(n)))**2 mul abs(((-8)**2 add abs(-6)))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 4 - 1 + 0 - 1 + 1 - 10 + 0 + 0 + 11 + 0 + 0 + 12 + 0 + 0 + 16 + 0 + 0 + 19 + 0 + 0 + 22 + 0 + 0 + 25 + 0 + 0 + 28 + 0 + 0 + 31 + 0 + 0", "x2": "relu sub sub n sqr sub x_0_2 x_0_1 sub x_0_7 x_0_1", "tree": "relu(((n sub ((x_0_2 sub x_0_1))**2) sub (x_0_7 sub x_0_1)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 10 - 1 + 32 + 3 - 96 + 183 + 288 - 549 + 234 + 1647 - 702 - 3537 + 9180 + 1 611 - 2 7540 + 2 3247 + 8 2620 - 6 9741 - 10 8378 + 42 5979 + 32 5134 - 127 7937 + 158 472 + 383 3811 - 474 1416 - 201 8601 + 1826 1450 + 605 5803", "x2": "add mul x_0_2 INT- 3 sub abs x_0_1 x_0_1", "tree": "((x_0_2 mul -3) add (abs(x_0_1) sub x_0_1))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 4 - 3 - 7 + 6 + 2 + 5 - 5 - 4 - 8 + 5 + 1 + 4 - 6 - 5 - 9 + 4 + 0 + 3 - 7 - 6 - 10 + 3 - 1 + 2 - 8 - 7 - 11 + 2 - 2 + 1 - 9", "x2": "add INT- 1 x_0_6", "tree": "(-1 add x_0_6)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 1 + 8 + 0 + 7 - 1 + 6 - 2 + 5 - 3 + 4 - 4 + 3 - 5 + 2 - 6 + 1 - 7 + 0 - 8 - 1 - 9 - 2 - 10 - 3 - 11 - 4 - 12", "x2": "add x_0_2 sign INT- 2", "tree": "(x_0_2 add sign(-2))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 5 + 10 + 9 - 8 + 13 - 2 - 1 + 16 - 5 + 10 + 9 - 8 + 13 - 2 - 1 + 16 - 5 + 10 + 9 - 8 + 13 - 2 - 1 + 16 - 5 + 10 + 9 - 8 + 13 - 2", "x2": "add sqr INT- 4 sub INT- 8 x_0_4", "tree": "((-4)**2 add (-8 sub x_0_4))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 10 + 3 + 6 - 7840 + 3675 + 1 584 - 1882 3840 + 1152 4800 + 4200 7896 - 922 3681 6000 + 683 3053 9200 + 2964 771 4176 - 763 8130 7329 6000 + 656 2464 9847 6800 + 3267 8950 4879 400 - 958 1271 1914 2502 4000 + 929 3106 6649 2996 4800 + 5188 1101 7945 9639 400 - 1694 8310 6105 1172 4953 6000 + 1821 4489 632 6273 1008 0 + 1 1210 9872 8679 4334 15 3600 - 4019 4613 4438 8960 6899 9577 6000 + 4721 3777 1008 8332 5045 8368 0 + 3 1641 8905 1824 8328 2859 3520 6400 - 1 2309 6003 6719 1192 1131 1206 4000 0 + 1 5639 915 2689 6592 5881 8298 1632 0 + 11 3027 9971 2023 4853 4701 8915 781 4400 - 4 7288 5607 7060 1683 6217 3130 5062 4000 0 + 6 4447 1322 7318 8168 3966 4324 9007 3088 0", "x2": "mul x_0_3 sqr abs mul n INT- 7", "tree": "(x_0_3 mul (abs((n mul -7)))**2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116 + 2304 + 2500 + 2704", "x2": "sqr add relu n abs n", "tree": "((relu(n) add abs(n)))**2", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 + 3 + 0 - 4 + 0 - 6 + 0 - 8 + 0 - 10 + 0 - 12 + 0 - 14 + 0 - 16 + 0 - 18 + 0 - 20 + 0 - 22 + 0 - 24 + 0 - 26 + 0 - 28", "x2": "sub x_0_1 mod n sub add sqr x_0_2 x_0_1 n", "tree": "(x_0_1 sub (n mod (((x_0_2)**2 add x_0_1) sub n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 5 + 6 + 0 + 10 - 7 + 4 + 8 + 7 + 8 + 2 + 12 - 5 + 6 + 10 + 9 + 10 + 4 + 14 - 3 + 8 + 12 + 11 + 12 + 6 + 16 - 1 + 10 + 14 + 13 + 14 + 8 + 18", "x2": "sub x_0_7 INT- 2", "tree": "(x_0_7 sub -2)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 4 - 7 + 5 + 2 + 7 - 2 - 1 + 2 + 4 - 2 - 1 + 2 + 4 - 2 - 1 + 2 + 4 - 2 - 1 + 2 + 4 - 2 - 1 + 2 + 4 - 2 - 1 + 2 + 4 - 2 - 1", "x2": "idiv INT- 4 sub x_0_2 idiv idiv idiv mod sub n INT- 5 x_0_5 sign n n x_0_6", "tree": "(-4 idiv (x_0_2 sub (((((n sub -5) mod x_0_5) idiv sign(n)) idiv n) idiv x_0_6)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 6 - 2 - 9 - 4 - 25 - 6 - 49 - 8 - 81 - 10 - 121 - 12 - 169 - 14 - 225 - 16 - 289 - 18 - 361 - 20 - 441 - 22 - 529 - 24 - 625 - 26 - 729", "x2": "mul relu n idiv idiv n INT- 1 sqr add x_0_1 n", "tree": "(relu(n) mul ((n idiv -1) idiv ((x_0_1 add n))**2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 1 + 7 + 7 - 74 + 574 + 573 - 5987 + 4 6501 + 4 6419 - 48 4940 + 376 6588 + 375 9945 - 3928 133 + 3 509 3635 + 3 455 5551 - 31 8169 766 + 247 1258 4442 + 246 6899 9637 - 2577 1695 2039 + 2 17 1933 9809 + 1 9981 8897 603 - 20 8750 7311 5152 + 162 1392 6652 4536 + 161 8533 661 8849 - 1690 8809 2232 7305 + 1 3133 2805 8848 7423 + 1 3110 1178 3612 6775 - 13 6961 3547 851 1698 + 106 3795 7276 6748 1270", "x2": "add add sub INT+ 7 n add idiv n x_0_2 abs relu n mul sqr INT- 9 x_0_3", "tree": "(((7 sub n) add ((n idiv x_0_2) add abs(relu(n)))) add ((-9)**2 mul x_0_3))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 6 + 8 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "idiv INT- 1 sign mul mul mod x_0_2 idiv INT- 1 0 INT+ 5 INT- 1 0 idiv x_0_2 n", "tree": "(-1 idiv sign((((x_0_2 mod (-10 idiv 5)) mul -10) mul (x_0_2 idiv n))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 9 + 3 + 1 + 4 + 6 + 5 + 3 + 6 + 10 + 7 + 5 + 8 + 11 + 12 + 15 + 14 + 4 + 15 + 17 + 19 + 20 + 22 + 22 + 25 + 23 + 4 + 24", "x2": "sub n mod x_0_1 x_0_2", "tree": "(n sub (x_0_1 mod x_0_2))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 3 - 10 - 7 + 6 + 3 - 10 - 7 + 6 + 3 - 10 - 7 + 6 + 3 - 10 - 7 + 6 + 3 - 10 - 7 + 6 + 3 - 10 - 7 + 6 + 3 - 10 - 7", "x2": "sub INT- 4 x_0_2", "tree": "(-4 sub x_0_2)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 7 - 4 + 4 - 24 + 28 + 16 - 16 + 96 - 112 - 64 + 64 - 384 + 448 + 256 - 256 + 1536 - 1792 - 1024 + 1024 - 6144 + 7168 + 4096 - 4096 + 2 4576 - 2 8672 - 1 6384 + 1 6384 - 9 8304 + 11 4688", "x2": "mul INT- 4 x_0_4", "tree": "(-4 mul x_0_4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 9 + 8 - 6 + 3 + 1 - 9 + 10 + 6 5664 + 3456 + 6 5664 + 2 736 + 5 5296 + 5 1840 + 2 736 + 8 9856 + 2 2699 3536 + 1200 6144 + 2 2700 448 + 7173 2736 + 1 9117 5552 + 1 7923 5072 + 7174 3104 + 3 1062 5280 + 7844 8974 6816 + 414 9332 3520 + 7845 1364 1600 + 2479 843 2384 + 6607 280 7936 + 6194 3651 2512 + 2479 4427 4560 + 1 735 2107 8272 + 2711 1965 6511 144 + 143 4009 2620 2624", "x2": "abs mul mul mul abs add x_0_8 n INT- 6 INT- 9 sqr INT- 8", "tree": "abs((((abs((x_0_8 add n)) mul -6) mul -9) mul (-8)**2))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 1 + 5 - 3 6498 - 3 5532 - 25 3632 - 24 6930 - 155 4636 - 151 3542 - 935 8908 - 911 1486 - 5618 2836 - 5469 7470 - 3 3712 4748 - 3 2821 1742 - 20 2277 4612 - 19 6929 5790 - 121 3667 2236 - 118 1579 8542 - 728 2005 6468 - 708 9481 3566 - 4369 2036 396 - 4253 6890 2270 - 2 6215 2218 2548 - 2 5522 1343 3102 - 15 7291 3311 4092 - 15 3132 8061 6750 - 94 3747 9870 2036 - 91 8796 8371 7342", "x2": "mul mod abs INT- 2 sub x_0_2 sqr sub sqr INT+ 9 n INT+ 6", "tree": "((abs(-2) mod (x_0_2 sub (((9)**2 sub n))**2)) mul 6)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 + 10 + 1 - 1 - 9 - 9 - 4 - 2 - 1 + 1 + 11 + 9 + 4 + 2 + 1 - 3 - 13 - 11 - 6 - 2 - 1 + 5 + 13 + 11 + 8 + 2 + 1 - 7 - 15 - 13 - 8 - 2 - 1 + 7", "x2": "sub sub idiv sub n n n x_0_6 sub sign x_0_6 sign mod x_0_4 mod x_0_3 x_0_9", "tree": "((((n sub n) idiv n) sub x_0_6) sub (sign(x_0_6) sub sign((x_0_4 mod (x_0_3 mod x_0_9)))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 0 + 3 + 1 + 6 + 0 + 7 + 1 + 10 + 0 + 11 + 1 + 14 + 0 + 15 + 1 + 18 + 0 + 19 + 1 + 22 + 0 + 23 + 1 + 26 + 0 + 27", "x2": "mod sub sqr x_0_1 sqr n relu add n n", "tree": "(((x_0_1)**2 sub (n)**2) mod relu((n add n)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 2 - 6 - 2 - 6 - 4 - 9 - 10 + 3 - 95 - 2858 - 3006 - 4032 - 4626 - 2 3404 - 1 9209 + 3900 - 23 8137 - 77 1495 - 93 3858 - 492 4146 - 423 6832 - 1 2292 2146 - 5718 4204 + 209 8541 - 2 4280 8280 - 13 2976 7277 - 11 8709 4815 - 356 4836 7218 - 171 6019 7046 - 1 1806 3552 4582 - 778 2158 4866 + 181 8183 326 - 4036 1015 3179 - 12 4771 7134 9980", "x2": "add x_0_9 mul add INT+ 2 add sub abs n mod x_0_6 mul n x_0_8 INT+ 7 mul n sub INT- 8 INT+ 2", "tree": "(x_0_9 add ((2 add ((abs(n) sub (x_0_6 mod (n mul x_0_8))) add 7)) mul (n mul (-8 sub 2))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 3 - 3 - 1 + 3 + 4 - 9 + 13 - 23 - 23 - 73 + 25 + 17 - 9 + 4 - 3 - 3 - 2 + 3 + 3 - 9 + 17 - 23 - 23 - 37 + 25 + 23 - 9 + 3 - 3 - 3 - 3 + 3", "x2": "add sign x_0_4 idiv abs mul INT- 9 INT+ 8 x_0_7", "tree": "(sign(x_0_4) add (abs((-9 mul 8)) idiv x_0_7))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1", "x2": "sign sub INT+ 8 idiv sub mul sign idiv n INT+ 2 n sign INT+ 1 0 mod n INT+ 1 0", "tree": "sign((8 sub (((sign((n idiv 2)) mul n) sub sign(10)) idiv (n mod 10))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116 + 2304 + 2500 + 2704", "x2": "sqr add n n", "tree": "((n add n))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 5 - 7 + 4 + 3 - 1 + 11 + 6 - 6 + 5 + 4 + 0 + 12 + 7 - 5 + 6 + 5 + 1 + 13 + 8 - 4 + 7 + 6 + 2 + 14 + 9 - 3 + 8 + 7 + 3 + 15 + 10", "x2": "add x_0_6 INT+ 1", "tree": "(x_0_6 add 1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 9 + 0 + 4 - 5 - 1 - 4 - 4 - 8 - 8 - 6 - 11 - 4 - 8 - 10 - 14 - 16 - 5 - 12 - 18 - 8 - 7 - 12 - 7 - 16 - 15 - 22 - 3 - 16 - 13 - 30", "x2": "sub mod sub mul sub x_0_4 n INT+ 8 sqr mod mul sign INT- 5 n INT+ 4 n abs n", "tree": "(((((x_0_4 sub n) mul 8) sub (((sign(-5) mul n) mod 4))**2) mod n) sub abs(n))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 3 - 5 + 1 + 4 + 7 + 8 + 9 + 8 + 9 + 8 + 11 + 10 + 11 + 12 + 11 + 16 + 11 + 18 + 13 + 18 + 19 + 14 + 9 + 15 + 10 + 16 + 25 + 21 + 23 + 27 + 20", "x2": "abs sub mod x_0_1 x_0_5 n", "tree": "abs(((x_0_1 mod x_0_5) sub n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 3 + 1 - 4 + 2 - 5 + 3 - 6 + 4 - 7 + 5 - 8 + 6 - 9 + 7 - 10 + 8 - 11 + 9 - 12 + 10 - 13 + 11 - 14 + 12 - 15 + 13 - 16", "x2": "add x_0_2 sign mul x_0_2 idiv sqr n n", "tree": "(x_0_2 add sign((x_0_2 mul ((n)**2 idiv n))))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 0 - 1 + 8 + 25 + 35 + 57 + 89 + 116 + 157 + 210 + 260 + 326 + 406 + 485 + 582 + 695 + 809 + 943 + 1095 + 1250 + 1427 + 1624 + 1826 + 2052 + 2300 + 2555 + 2836 + 3141", "x2": "add x_0_3 mul n n", "tree": "(x_0_3 add (n mul n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 6 + 9 - 7 + 4 + 9 + 1 + 1 + 1 + 256 + 0 + 121 + 256 + 64 + 64 + 64 + 6 9169 + 49 + 1 6384 + 6 9169 + 5041 + 5041 + 5041 + 47 8531 8976 + 3136 + 2 6866 4881 + 47 8531 8976 + 2548 2304 + 2548 2304 + 2548 2304 + 2289 9277 7690 6015 4289 + 987 8449 + 7 2180 8220 4405 2544 + 2289 9277 7690 6015 4289", "x2": "sqr add INT+ 7 x_0_7", "tree": "((7 add x_0_7))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 10 + 5 - 5 + 0 - 3 + 7 - 2 - 4 + 7 + 1 - 10 - 10 + 2 - 5 + 15 - 11 - 3 - 22 + 7 - 10 - 2 - 13 + 8 + 20 - 7 - 13 - 64 + 18 - 1 + 77 - 45 + 12 - 62 + 44 - 40 - 29 - 26 + 45", "x2": "sub add sub x_0_9 x_0_3 sub n abs n sub x_0_12 INT- 7", "tree": "(((x_0_9 sub x_0_3) add (n sub abs(n))) sub (x_0_12 sub -7))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 5 - 3 - 5 + 10 + 1 - 1 - 4 + 10 + 1 + 1 - 2 + 11 + 2 + 3 + 1 + 14 + 4 + 4 + 3 + 16 + 8 + 5 + 4 + 17 + 11 + 7 + 8 + 18 + 13 + 11 + 11", "x2": "sub x_0_4 mod x_0_6 idiv mul n idiv n sub mod INT+ 5 sub add x_0_2 n x_0_4 n INT+ 1 0", "tree": "(x_0_4 sub (x_0_6 mod ((n mul (n idiv ((5 mod ((x_0_2 add n) sub x_0_4)) sub n))) idiv 10)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 1 - 4 - 4 - 14 - 34 - 64 - 64 - 69 - 79 - 94 - 114 - 139 - 169 - 204 - 244 - 289 - 339 - 394 - 454 - 519 - 589 - 664 - 744 - 829 - 919 - 1014", "x2": "add x_0_1 mul add sign mul abs x_0_1 n INT- 6 abs mod INT- 8 n", "tree": "(x_0_1 add ((sign((abs(x_0_1) mul n)) add -6) mul abs((-8 mod n))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 7 - 2 - 3 - 4 - 4 - 6 - 8 - 12 - 10 - 21 - 19 - 27 - 32 - 30 - 46 - 43 - 54 - 60 - 56 - 75 - 67 - 97 - 71 - 119 - 89 - 129 - 109 - 153 - 116", "x2": "add x_0_2 sub mod sub add add x_0_1 add n n n idiv INT+ 5 x_0_3 n n", "tree": "(x_0_2 add (((((x_0_1 add (n add n)) add n) sub (5 idiv x_0_3)) mod n) sub n))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 8 - 8 + 7 - 3 - 3 + 2 + 7 + 8 - 26 - 38 + 7 - 3 - 29 + 2 + 7 + 8 - 60 - 92 + 7 - 3 - 71 + 2 + 7 + 8 - 110 - 170 + 7 - 3 - 129 + 2 + 7 + 8 - 176 - 272", "x2": "sub x_0_8 mul relu add x_0_2 sub INT+ 2 INT+ 7 n", "tree": "(x_0_8 sub (relu((x_0_2 add (2 sub 7))) mul n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 5 - 9 + 10 - 4 - 7 + 9 - 7 + 5 - 5 + 6 + 10 - 9 + 5 + 8 - 8 + 8 - 4 + 6 - 5 - 9 + 10 - 4 - 7 + 9 - 7 + 5 - 5 + 6 + 10 - 9 + 5 + 8 - 8 + 8", "x2": "sub sign mod sign sqr add n sqr INT- 1 sqr sub sign n INT- 4 x_0_9", "tree": "(sign((sign(((n add (-1)**2))**2) mod ((sign(n) sub -4))**2)) sub x_0_9)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 0 + 8 + 8 + 16 + 24 + 40 + 64 + 104 + 168 + 272 + 440 + 712 + 1152 + 1864 + 3016 + 4880 + 7896 + 1 2776 + 2 672 + 3 3448 + 5 4120 + 8 7568 + 14 1688 + 22 9256 + 37 944 + 60 200 + 97 1144", "x2": "add idiv x_0_2 sign n x_0_1", "tree": "((x_0_2 idiv sign(n)) add x_0_1)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 2 + 0 + 10 - 10 - 1 + 10 + 9 + 18 + 19 + 12 + 23 + 22 + 22 + 16 + 17 + 28 + 21 + 20 + 20 + 36 + 38 + 26 + 44 + 44 + 45 + 34 + 36 + 54 + 42 + 42 + 43 + 66", "x2": "sub add n mod relu add n x_0_6 add n sign x_0_1 mod n abs sign x_0_7", "tree": "((n add (relu((n add x_0_6)) mod (n add sign(x_0_1)))) sub (n mod abs(sign(x_0_7))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 7 - 7 - 7 - 8 - 8 - 8 - 9 - 9", "x2": "idiv n idiv n INT- 9", "tree": "(n idiv (n idiv -9))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 1 + 9 - 10 + 3 + 9 + 81 + 1 + 81 + 100 + 9 + 81 + 6561 + 1 + 6561 + 1 0 + 81 + 6561 + 4304 6721 + 1 + 4304 6721 + 1 0 0 + 6561 + 4304 6721 + 1853 201 8885 1841 + 1 + 1853 201 8885 1841 + 1 0 0 0 0 + 4304 6721 + 1853 201 8885 1841 + 343 3683 8202 9251 2484 6578 4908 9281 + 1", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 6 + 6 - 2 + 2 - 3 + 5 - 4 + 12 + 6 + 9 + 4 + 13 + 13 + 18 + 27 + 19 + 26 + 30 + 44 + 38 + 64 + 50 + 52 + 76 + 87 + 94 + 125 + 138 + 120 + 155 + 164 + 210 + 225", "x2": "add mod x_0_5 n add x_0_6 relu x_0_7", "tree": "((x_0_5 mod n) add (x_0_6 add relu(x_0_7)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 7 - 6 - 5 + 1 + 4 + 4 + 7 + 0 + 9 + 10 + 11 + 0 + 13 + 14 + 15 + 0 + 17 + 18 + 19 + 0 + 21 + 22 + 23 + 0 + 25 + 26 + 27 + 0 + 29 + 30 + 31 + 0", "x2": "mod mul sign add n x_0_6 n sqr sub INT- 1 x_0_4", "tree": "((sign((n add x_0_6)) mul n) mod ((-1 sub x_0_4))**2)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 1 + 4 + 9 + 9 + 16 + 25 + 36 + 36 + 49 + 64 + 81 + 81 + 100 + 121 + 144 + 144 + 169 + 196 + 225 + 225 + 256 + 289 + 324 + 324 + 361", "x2": "relu sqr add idiv n INT- 4 n", "tree": "relu((((n idiv -4) add n))**2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 + 6 - 5 + 5 + 7 - 5 + 6 - 5 + 5 + 7 - 5 + 6 - 5 + 5 + 7 - 5 + 6 - 5 + 5 + 7 - 5 + 6 - 5 + 5 + 7 - 5 + 6 - 5 + 5 + 7 - 5", "x2": "sub x_0_5 mod abs sqr x_0_2 sign INT- 1 0", "tree": "(x_0_5 sub (abs((x_0_2)**2) mod sign(-10)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 6 + 7 - 15 + 32 - 70 + 198 - 483 + 1592 - 4338 + 1 5930 - 4 7707 + 19 1172 - 62 178 + 267 6422 - 930 2655 + 4282 2768 - 1 5814 5118 + 7 7080 9842 - 30 475 7223 + 154 1619 6860 - 630 9990 1662 + 3391 5633 942 - 1 4512 9773 8203 + 8 1397 5194 2632 - 36 2824 4345 5050 + 211 6335 5050 8458 - 979 6259 7328 6323 + 5925 7394 1423 6852", "x2": "mul add x_0_2 sign mod add relu mod n INT- 1 0 x_0_1 INT+ 3 n", "tree": "((x_0_2 add sign(((relu((n mod -10)) add x_0_1) mod 3))) mul n)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 7 + 8 - 5 - 9 - 9 - 10 + 5 + 5 + 6 - 9 - 9 - 10 + 5 + 5 + 6 - 9 - 9 - 10 + 5 + 5 + 6 - 9 - 9 - 10 + 5 + 5 + 6 - 9 - 9 - 10 + 5 + 5", "x2": "sub sub INT- 4 x_0_3 mul x_0_6 mod relu sub idiv x_0_1 n n INT- 1 0", "tree": "((-4 sub x_0_3) sub (x_0_6 mul (relu(((x_0_1 idiv n) sub n)) mod -10)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 5 - 5 - 10 + 9 + 1 + 0 - 35 + 10 + 9 + 1 + 0 - 385 + 90 + 9 + 49 + 0 - 4235 + 810 + 9 + 1 8081 + 0 - 85 9705 + 7290 + 9 + 5874 5169 + 0 - 621 8332 2355 + 6 5610 + 9 + 1 7135 3783 4561 + 0 - 1461 1879 5581 8706 8465", "x2": "mul add sign x_0_5 relu add relu relu INT+ 8 mul x_0_7 abs INT- 4 x_0_5", "tree": "((sign(x_0_5) add relu((relu(relu(8)) add (x_0_7 mul abs(-4))))) mul x_0_5)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 7 + 44 + 15 + 6 + 32 + 44 + 11 + 19 + 36 + 22 + 17 + 50 + 51 + 32 + 53 + 43 + 28 + 29 + 57 + 22 + 59 + 60 + 62 + 42 + 36 + 29 + 29", "x2": "add add n abs sqr mod x_0_3 INT- 7 idiv n x_0_3", "tree": "((n add abs(((x_0_3 mod -7))**2)) add (n idiv x_0_3))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 10 + 9 + 7 - 4 + 2 - 1 6800 + 2 1168 + 2 1952 - 1 6128 + 1 80 - 1 348 8000 + 1 5647 3856 + 1 9177 2672 - 1 6437 6576 + 1 1854 800 - 1 3908 7872 0 + 2 3834 977 4592 + 3 2862 1650 7392 - 3 1481 4018 3552 + 2 5225 4822 4000 - 3 2713 4674 9440 0 + 6 1663 5776 8824 4224 + 9 3118 2309 5345 9712 - 9 7315 3093 5395 9424 + 8 4757 6203 2640 0 - 11 9077 216 7961 6000 0 + 24 2411 8566 802 5693 3888 + 39 4225 3425 6456 7036 7232 - 44 2512 1746 9432 4292 8128 + 41 2939 1262 3022 800 0 - 62 153 1289 744 128 0 0", "x2": "mul mul relu mul INT+ 7 sub sqr n n x_0_5 INT+ 8", "tree": "((relu((7 mul ((n)**2 sub n))) mul x_0_5) mul 8)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 1 + 0 - 9 + 146 8303 1643 736 + 28 1792 2734 4921 + 111 4290 5155 2016 + 20 475 6745 7401 + 16 8150 8438 4400 + 14 481 8614 4281 + 11 6881 6608 9616 + 9 6826 2087 9481 + 7 9848 9697 1536 + 6 5535 7440 25 + 5 3519 8612 6096 + 4 3477 7128 7161 + 3 5124 6071 2336 + 2 8210 9311 1321 + 2 2518 6038 4400 + 1 7857 8054 1561 + 1 4063 9675 9056 + 1 995 114 2041 + 8528 8180 2256 + 6560 9190 25 + 5002 3934 176 + 3777 9585 1801 + 2824 2422 2096 + 2088 2249 4841 + 1525 8398 4400 + 1100 7199 6441", "x2": "sqr mod INT- 5 sqr sqr sub mul INT- 5 add sign x_0_3 INT- 1 0 add INT- 8 relu n", "tree": "((-5 mod ((((-5 mul (sign(x_0_3) add -10)) sub (-8 add relu(n))))**2)**2))**2", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 - 1 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399 + 6 + 96 + 399", "x2": "mod x_0_3 sqr mul abs INT- 1 0 idiv n INT- 4", "tree": "(x_0_3 mod ((abs(-10) mul (n idiv -4)))**2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 4 + 1 + 116 + 120 - 546 - 665 + 4568 + 6210 - 4 5430 - 6 8035 + 54 5460 + 88 4780 - 763 6090 - 1327 1325 + 1 2217 7840 + 2 2561 2950 - 21 9920 670 - 42 8664 5575 + 439 8401 3900 + 900 1955 7600 - 9676 4830 5250 - 2 704 4982 4225 + 23 2235 5932 6600 + 51 7612 4560 6250 - 603 8125 4249 950 - 1397 5536 3136 8075 + 1 6906 7511 8974 7300 + 4 529 553 967 4900", "x2": "idiv mul mul n sub add sqr INT- 5 mul x_0_3 mod INT- 4 INT- 1 x_0_2 n n", "tree": "(((n mul (((-5)**2 add (x_0_3 mul (-4 mod -1))) sub x_0_2)) mul n) idiv n)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 2 + 5 - 10 - 2 - 5 + 10 + 2 + 5 - 10 - 2 - 5 + 10 + 2 + 5 - 10 - 2 - 5 + 10 + 2 + 5 - 10 - 2 - 5 + 10 + 2 + 5 - 10 - 2", "x2": "sub sqr idiv abs sign x_0_2 abs mod INT+ 5 INT+ 3 x_0_3", "tree": "(((abs(sign(x_0_2)) idiv abs((5 mod 3))))**2 sub x_0_3)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 3 - 9 + 6 + 6 + 4 + 5 + 0 + 6 + 5 + 2 + 2 + 9 + 1 + 14 + 11 + 11 + 0 + 10 + 3 + 20 + 20 + 9 + 19 + 12 + 3 + 2 + 18 + 28 + 21 + 12", "x2": "mod relu add add sign sign relu x_0_5 add idiv n n INT+ 7 x_0_5 n", "tree": "(relu(((sign(sign(relu(x_0_5))) add ((n idiv n) add 7)) add x_0_5)) mod n)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 4 + 18 + 48 + 100 + 180 + 294 + 448 + 648 + 900 + 1210 + 1584 + 2028 + 2548 + 3150 + 3840 + 4624 + 5508 + 6498 + 7600 + 8820 + 1 164 + 1 1638 + 1 3248 + 1 5000 + 1 6900", "x2": "abs mul add n INT- 1 sqr n", "tree": "abs(((n add -1) mul (n)**2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 2 + 16 + 41 + 70 + 107 + 152 + 205 + 266 + 335 + 412 + 497 + 590 + 691 + 800 + 917 + 1042 + 1175 + 1316 + 1465 + 1622 + 1787 + 1960 + 2141 + 2330 + 2527 + 2732 + 2945", "x2": "add add sqr add n n INT+ 2 idiv n mod sqr INT- 1 x_0_1", "tree": "((((n add n))**2 add 2) add (n idiv ((-1)**2 mod x_0_1)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 2 - 2 + 1 - 5 + 4 + 9 - 3 - 10 + 9 + 14 - 4 - 4 + 2 + 1 - 2 - 1 - 4 - 5 - 3 - 3 - 11", "x2": "add mod x_0_8 sub sqr INT- 5 add add n n x_0_2 sign sqr sub n sign x_0_6", "tree": "((x_0_8 mod ((-5)**2 sub ((n add n) add x_0_2))) add sign(((n sub sign(x_0_6)))**2))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 1 + 1 - 4 - 8 + 6 + 3 + 0 + 1 + 0 + 0 + 6 + 3 + 0 + 1 + 0 + 0 + 6 + 3 + 0", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 9 - 1 - 4 + 8 + 8 + 5 + 8 - 4 + 1 + 9 - 9 + 2 + 14 + 15 + 16 + 15 + 16 + 17 + 18 + 21 + 20 + 21 + 24 + 23 + 24", "x2": "sub abs n sign idiv sign relu abs mod add x_0_7 INT- 7 idiv x_0_1 INT+ 1 x_0_12", "tree": "(abs(n) sub sign((sign(relu(abs(((x_0_7 add -7) mod (x_0_1 idiv 1))))) idiv x_0_12)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 10 - 1 + 3 + 3 + 72 + 96 + 90 + 92 - 44 - 90 - 76 - 78 + 196 + 290 + 264 + 270 - 276", "x2": "sub mul sign abs add x_0_2 n INT+ 1 sub add sub x_0_4 sqr INT+ 9 sub x_0_4 n n", "tree": "((sign(abs((x_0_2 add n))) mul 1) sub (((x_0_4 sub (9)**2) add (x_0_4 sub n)) sub n))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 9 - 10 + 11 + 9 + 33 - 6 - 26 - 9 + 0 + 39 + 33 + 65 - 44 - 68 + 11", "x2": "add n sub n add mul x_0_2 sign add sign sign x_0_1 sub mul x_0_3 INT+ 6 x_0_2 x_0_3", "tree": "(n add (n sub ((x_0_2 mul sign((sign(sign(x_0_1)) add ((x_0_3 mul 6) sub x_0_2)))) add x_0_3)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 8 + 9 + 10 - 3 + 2 + 1 - 8 + 0 - 9 + 0 - 7 - 4 - 17 + 0 - 9 - 1 - 10 - 1 - 8 - 5", "x2": "mod add INT+ 5 abs n sub sub add add n INT- 6 abs n n add sub n x_0_8 n", "tree": "((5 add abs(n)) mod ((((n add -6) add abs(n)) sub n) sub ((n sub x_0_8) add n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 5 + 8 + 12 + 17 + 23 + 30 + 38 + 47 + 57 + 68 + 80 + 93 + 107", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 1 - 8 - 4 - 7 + 4 - 9 + 0 + 126 + 110 + 33 + 96 + 78 + 252 + 90 + 256 + 2431 + 2304 + 988 + 2320 + 2079", "x2": "idiv mul n sub x_0_8 idiv relu n idiv n idiv n INT- 1 relu sign sub INT+ 6 INT- 8", "tree": "((n mul (x_0_8 sub (relu(n) idiv (n idiv (n idiv -1))))) idiv relu(sign((6 sub -8))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 5 + 3 + 2 + 2 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 0", "x2": "idiv INT+ 1 0 relu n", "tree": "(10 idiv relu(n))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 3 + 6 - 1 + 6 + 8 + 6 - 8 + 86 + 103 + 127 + 143 + 175 + 204 + 231 + 248 + 375 + 427 + 488 + 543 + 616", "x2": "sub n sub relu n add x_0_8 sqr n", "tree": "(n sub (relu(n) sub (x_0_8 add (n)**2)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 1 + 5 - 8 - 4 - 1 - 5 - 2 - 6 - 3 - 7 - 4 - 8 - 5 - 9 - 6", "x2": "idiv add x_0_1 n sign x_0_2", "tree": "((x_0_1 add n) idiv sign(x_0_2))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 + 6 + 6 + 4 - 10 - 11 - 471 - 1 9777 - 55 3750 + 466 + 1 9772 + 55 3745 - 471 - 1 9777 - 6506 6324 - 9 54 3950 6430 - 3490 7019 6964 1654 2678 + 6506 6319", "x2": "add sub mul x_0_1 mul relu x_0_5 INT+ 7 x_0_3 INT- 5", "tree": "(((x_0_1 mul (relu(x_0_5) mul 7)) sub x_0_3) add -5)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 18 - 162 + 1944 - 2 9160 + 52 4880 - 1102 2480 + 2 6453 9520 - 71 4256 7040 + 2142 7701 1200 - 7 711 4136 9600 + 254 5610 8930 5600 - 9927 8824 8291 8400 + 41 6971 642 8257 2800", "x2": "mul mul n x_0_1 INT- 3", "tree": "((n mul x_0_1) mul -3)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 28 + 196 - 1372 + 9604 - 6 7228 + 47 596 - 329 4172 + 2305 9204 - 1 6141 4428 + 11 2990 996 - 79 930 6972 + 553 6514 8804 - 3875 5604 1628", "x2": "sub add sub x_0_1 mul x_0_1 INT+ 8 n n", "tree": "(((x_0_1 sub (x_0_1 mul 8)) add n) sub n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 1 - 6 - 5 + 6 - 5 - 1 - 4 - 5 + 5 + 0 + 1 + 6 + 5 - 6 + 5 + 1 + 4 + 5 - 5 + 0 - 1 - 6", "x2": "sub relu abs idiv sub relu INT+ 9 add abs sub INT- 6 INT- 2 relu INT- 2 n x_0_10", "tree": "(relu(abs(((relu(9) sub (abs((-6 sub -2)) add relu(-2))) idiv n))) sub x_0_10)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 1 + 4 - 6 + 2 - 4 + 6 - 6 - 2 - 4 - 40 6143 - 100 9275 - 57 9648 - 201 7215 - 182 4060 - 508 2021 - 315 60 - 604 9215 - 712 3284 + 2573 5306 2444 + 7873 4606 6130 + 5509 2445 587 + 2 3141 3389 5565", "x2": "mul add x_0_9 n sub idiv INT+ 9 x_0_3 mul sqr mod INT- 5 sqr n INT+ 5", "tree": "((x_0_9 add n) mul ((9 idiv x_0_3) sub (((-5 mod (n)**2))**2 mul 5)))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 8 + 2 + 8 - 5 - 10 - 7 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "relu mul sign sqr add mul relu n x_0_4 x_0_6 abs mul n n", "tree": "relu((sign((((relu(n) mul x_0_4) add x_0_6))**2) mul abs((n mul n))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 10 + 4 - 4 + 5 - 8 - 6 - 5 + 7 + 1 - 1 + 2 - 3 - 8 - 15 - 1 + 9 + 2 - 12 - 3 - 6 - 14 - 16", "x2": "sub INT- 4 sub x_0_10 x_0_8", "tree": "(-4 sub (x_0_10 sub x_0_8))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 + 3 - 175 - 544 - 1215 - 2320 - 4015 - 6480 - 9919 - 1 4560 - 2 655 - 2 8480 - 3 8335 - 5 544 - 6 5455", "x2": "add sqr INT+ 9 idiv sqr abs sqr n sign sub x_0_3 abs x_0_2", "tree": "((9)**2 add ((abs((n)**2))**2 idiv sign((x_0_3 sub abs(x_0_2)))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 5 + 9 + 5 + 8 + 9 - 1 + 5 - 5 + 2 - 15 - 2 + 6 + 19 + 9 + 2 - 21 - 5 - 8 + 22 - 11 + 5 - 17", "x2": "sub sub x_0_10 x_0_3 idiv sqr n add sqr n mul INT- 6 n", "tree": "((x_0_10 sub x_0_3) sub ((n)**2 idiv ((n)**2 add (-6 mul n))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 7 - 5 - 1 + 10 + 240 + 1 8800 + 150 3920 + 1 2031 4400 + 96 2517 1200 + 7700 1520 0 + 61 6013 3631 3600 + 4928 1165 3024 0 + 39 4250 924 3289 6000 + 3154 68 9958 4768 0 + 25 2321 447 7747 1948 8000 + 2018 5723 71 2999 7824 0 + 16 1486 994 5711 3928 9088 0", "x2": "mul add x_0_1 mul x_0_4 sign mod x_0_1 abs sign n relu mul INT- 1 0 INT- 8", "tree": "((x_0_1 add (x_0_4 mul sign((x_0_1 mod abs(sign(n)))))) mul relu((-10 mul -8)))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 20 + 200 - 2000 + 2 0 - 20 0 + 200 0 - 2000 0 + 2 0 0 - 20 0 0 + 200 0 0 - 2000 0 0 + 2 0 0 0 - 20 0 0 0", "x2": "mul x_0_1 INT- 1 0", "tree": "(x_0_1 mul -10)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 105 - 840 - 6720 - 5 3760 - 43 80 - 344 640 - 2752 5120 - 2 2020 960 - 17 6160 7680 - 140 9286 1440 - 1127 4289 1520 - 9019 4313 2160 - 7 2155 4505 7280", "x2": "sub mul mul x_0_1 idiv INT+ 1 0 x_0_1 mod INT+ 1 INT- 1 0 x_0_1", "tree": "(((x_0_1 mul (10 idiv x_0_1)) mul (1 mod -10)) sub x_0_1)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 4 + 6 + 8 + 5 + 7 + 9 + 11 + 13 + 10 + 12 + 14 + 16", "x2": "add mod n abs INT- 5 n", "tree": "((n mod abs(-5)) add n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 0 + 6 - 35 + 288 - 2583 + 2 5840 - 28 4229 + 341 760 - 4433 9867 + 6 2075 8152 - 93 1137 2265 + 1489 8195 6256 - 2 5326 9325 6335", "x2": "mul add INT+ 3 n sub mod sign n n x_0_1", "tree": "((3 add n) mul ((sign(n) mod n) sub x_0_1))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 4 - 10 - 6 - 7 + 10 - 8 + 8 + 16 + 3 + 18 + 22 + 21 + 26 + 41 + 39 + 45 + 62 + 65 + 65", "x2": "add relu x_0_3 add mod sub x_0_5 n x_0_7 n", "tree": "(relu(x_0_3) add (((x_0_5 sub n) mod x_0_7) add n))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 9 + 3 - 17 - 5 - 25 - 13 - 33 - 21 - 41 - 29 - 49 - 37 - 57 - 45 - 65", "x2": "sub x_0_2 INT+ 8", "tree": "(x_0_2 sub 8)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 8 - 6 - 2 - 7 - 4 + 5 - 3 - 8 + 3 + 10 - 5 + 23 + 15 + 41 + 14 + 5 + 27 + 130 + 3 + 10 + 79 + 23 + 15 + 41", "x2": "mod x_0_10 abs add idiv mod x_0_11 x_0_5 n abs mul INT+ 6 x_0_6", "tree": "(x_0_10 mod abs((((x_0_11 mod x_0_5) idiv n) add abs((6 mul x_0_6)))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 8 - 4 + 2 + 10 + 20 + 32 + 46 + 62 + 80 + 100 + 122 + 146 + 172", "x2": "sub mul sign INT+ 1 0 add n sqr n INT+ 1 0", "tree": "((sign(10) mul (n add (n)**2)) sub 10)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 - 7 + 7 + 2 + 0 + 6 - 8 - 6 + 9 + 29 + 14 + 14 - 31 - 399 - 404 + 29 + 1 + 46 + 806 - 479 - 532 + 178", "x2": "add sqr x_0_9 sub sign n sqr sub mod INT- 6 idiv abs n sign x_0_7 n", "tree": "((x_0_9)**2 add (sign(n) sub (((-6 mod (abs(n) idiv sign(x_0_7))) sub n))**2))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 5 + 9 - 9 - 1 + 10 + 2 + 2 + 5 + 6 + 3 + 2 + 2 + 5 + 6 + 3 + 2 + 2 + 5", "x2": "mod x_0_5 mod INT+ 7 abs mul n x_0_1", "tree": "(x_0_5 mod (7 mod abs((n mul x_0_1))))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 6 + 2 + 5 - 1 + 4 + 21 + 2 + 6 - 4 + 4 + 11 + 1 + 5 - 19", "x2": "add INT+ 7 idiv sub sub INT- 7 abs n mod INT+ 4 x_0_1 x_0_2", "tree": "(7 add (((-7 sub abs(n)) sub (4 mod x_0_1)) idiv x_0_2))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 - 22 - 111 - 860 - 8565 - 10 2738 - 143 8283 - 2301 2472 - 4 1422 4433 - 82 8448 8590 - 1822 5874 8903 - 4 3742 997 3588 - 113 7294 5931 3197 - 3184 4248 6076 9418", "x2": "mul add abs INT+ 7 mul INT+ 2 x_0_1 n", "tree": "((abs(7) add (2 mul x_0_1)) mul n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 1 + 7 + 12 + 5 + 11 + 16 + 9 + 15 + 20 + 13 + 19 + 24 + 17 + 23 + 28", "x2": "add sqr sub INT- 7 INT- 9 x_0_3", "tree": "(((-7 sub -9))**2 add x_0_3)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 6 + 2 - 6 + 11 + 14 + 10 + 14 + 19 + 22 + 18 + 22 + 27 + 30 + 26 + 30 + 35", "x2": "add INT+ 8 abs x_0_4", "tree": "(8 add abs(x_0_4))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 9 + 2 - 10 - 6 - 56 - 15 + 735 - 77 - 1769 - 180 + 7300 - 902 - 2 3062 - 2405 + 10 2130 - 1 3605 - 39 2139", "x2": "mul add idiv x_0_2 sqr abs sub n mul x_0_3 sign x_0_4 n add INT- 5 x_0_4", "tree": "(((x_0_2 idiv (abs((n sub (x_0_3 mul sign(x_0_4)))))**2) add n) mul (-5 add x_0_4))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 9 + 0 + 12 + 4 - 7 + 2 + 14 + 6 - 5 + 4 + 16 + 8 - 3 + 6 + 18", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 3 + 10 + 19 + 30 + 43 + 58 + 75 + 94 + 115 + 138 + 163", "x2": "relu add sqr n INT- 6", "tree": "relu(((n)**2 add -6))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338", "x2": "abs abs abs mul n add n n", "tree": "abs(abs(abs((n mul (n add n)))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 + 8 + 7 - 2 - 9 - 2 - 13 - 2 - 15 - 4 - 17 - 6 - 19 - 8 - 21 - 10 - 23", "x2": "sub sub sign mul x_0_4 x_0_3 add n x_0_1 n", "tree": "((sign((x_0_4 mul x_0_3)) sub (n add x_0_1)) sub n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 1 + 2 + 44 + 4 + 1 + 2 + 8 + 4 + 1 + 2 + 8 + 4 + 1 + 2", "x2": "mod idiv add INT+ 7 x_0_2 x_0_2 sub sqr sub abs x_0_1 INT- 5 x_0_2", "tree": "(((7 add x_0_2) idiv x_0_2) mod (((abs(x_0_1) sub -5))**2 sub x_0_2))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 + 8 - 11 + 4 - 20 - 12 - 45 - 48 - 94 - 112 - 175 - 212 - 296 - 356 - 465", "x2": "sub sub x_0_2 mod sub n n abs n sqr sub sub INT+ 5 INT+ 3 relu n", "tree": "((x_0_2 sub ((n sub n) mod abs(n))) sub (((5 sub 3) sub relu(n)))**2)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 1 - 4 - 9 + 9 - 6 - 30 - 45 - 70 - 70 - 55 - 175 - 250 - 375 - 375 - 300 - 900 - 1275 - 1900", "x2": "mul abs add abs x_0_5 INT+ 5 idiv INT+ 1 0 INT- 2", "tree": "(abs((abs(x_0_5) add 5)) mul (10 idiv -2))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 9 + 8 + 2 - 2 + 2 - 7 + 24 + 72 + 64 + 16 + 16 + 16 + 56 + 192 + 576 + 512 + 128 + 128 + 128", "x2": "abs mul mod INT+ 8 mul n n x_0_7", "tree": "abs(((8 mod (n mul n)) mul x_0_7))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 2 - 5 - 10 + 7 + 9 + 12 + 22 + 35 + 45 + 35 + 32 + 35 + 32 + 25 + 23 + 31 + 40 + 45", "x2": "sub n add x_0_6 idiv sqr n idiv abs add INT+ 8 add n sign n INT- 5", "tree": "(n sub (x_0_6 add ((n)**2 idiv (abs((8 add (n add sign(n)))) idiv -5))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 6 + 14 + 45 + 139 + 422 + 1272 + 3823 + 1 1477 + 3 4440 + 10 3330 + 31 1 + 93 15 + 279 58 + 837 188", "x2": "add n abs add relu x_0_1 mul INT+ 2 x_0_1", "tree": "(n add abs((relu(x_0_1) add (2 mul x_0_1))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 2 - 6 - 24 - 120 - 720 - 5040 - 4 320 - 36 2880 - 362 8800 - 3991 6800 - 4 7900 1600 - 62 2702 800 - 871 7829 1200", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 4 - 3 - 3 + 3 - 9 - 4 - 3 - 1299 + 5180 + 1725 + 1293 - 56 1165 - 671 3289 - 99 3604 - 55 8579 + 1049 6927 8941 - 5 75 7652 5700 - 2468 1123 1875 - 1040 293 9875 - 848 2332 3000 3794 3325", "x2": "add mul mul mul sqr INT- 6 INT+ 4 x_0_4 x_0_8 x_0_8", "tree": "(((((-6)**2 mul 4) mul x_0_4) mul x_0_8) add x_0_8)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 2 + 4 + 4 + 5 + 6 + 7 + 7 + 9 + 9 + 10 + 11 + 12 + 14 + 14 + 16", "x2": "sub n mod x_0_3 mod mod INT- 7 INT+ 9 mul sign sign add x_0_1 INT- 2 n", "tree": "(n sub (x_0_3 mod ((-7 mod 9) mod (sign(sign((x_0_1 add -2))) mul n))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 3 - 1 - 7 - 15 - 25 - 37 - 51 - 67 - 85 - 105 - 127 - 151", "x2": "sub n add mul n n INT- 5", "tree": "(n sub ((n mul n) add -5))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 3 - 3 + 10 + 7 + 1 - 7 - 4 + 4 + 4 + 2 736 + 6 5536 + 6 5536 + 8 3521 + 39 625 + 27 9841 + 10 4976 + 39 625 + 27 9841 + 33 1776 + 39 625 + 18 5670 1252 8475 96 + 1847 2653 4069 8291 5361", "x2": "sqr abs abs sqr sub add abs x_0_11 n abs idiv n abs n", "tree": "(abs(abs((((abs(x_0_11) add n) sub abs((n idiv abs(n)))))**2)))**2", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 10 - 6 - 1 + 5 + 3 + 0 - 3 - 2 + 0 + 1 + 1 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_3 idiv add INT+ 9 INT+ 5 INT- 8", "tree": "(x_0_3 idiv ((9 add 5) idiv -8))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 1 - 7 - 21 - 84 - 420 - 2520 - 1 7640 - 14 1120 - 127 80 - 1270 800 - 1 3970 8800 - 16 7650 5600 - 217 9457 2800 - 3051 2401 9200 - 4 5768 6028 8000", "x2": "mul mod idiv add sign mul sign x_0_3 x_0_3 INT- 4 sub n add n sub x_0_1 n n x_0_1", "tree": "((((sign((sign(x_0_3) mul x_0_3)) add -4) idiv (n sub (n add (x_0_1 sub n)))) mod n) mul x_0_1)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 5 - 6 - 6 - 2 + 9 + 1 + 5 + 5 + 3 + 9 + 10 + 11 + 12 + 15 + 15 + 16 + 17 + 18 + 20 + 21 + 22 + 23", "x2": "add idiv x_0_9 abs INT- 8 n", "tree": "((x_0_9 idiv abs(-8)) add n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 7 + 4 + 1 + 0 + 3 + 9 + 0 + 47 + 45 + 19 + 9 + 45 + 126 + 9 + 714 + 729 + 332 + 171 + 864 + 2529", "x2": "abs add sqr INT+ 3 mul x_0_7 n", "tree": "abs(((3)**2 add (x_0_7 mul n)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 10 - 10 - 7 - 6 - 5 + 2 + 4 + 6 + 17 + 20 + 23 + 38 + 42", "x2": "add mul idiv n INT+ 3 n INT- 1 0", "tree": "(((n idiv 3) mul n) add -10)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 0 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210", "x2": "sub n add mul n n add mod n n mul add sqr n x_0_2 relu INT- 4", "tree": "(n sub ((n mul n) add ((n mod n) add (((n)**2 add x_0_2) mul relu(-4)))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 10 + 9 + 1 + 0 + 1 + 4 + 9 + 16 + 0 + 1 + 4 + 9 + 16 + 0", "x2": "sqr abs mod n add INT+ 4 sign x_0_2", "tree": "(abs((n mod (4 add sign(x_0_2)))))**2", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 6 + 10 - 4 - 4 - 9 - 6 - 1 - 1 + 0 - 1 - 2 - 1 - 1 - 2 - 2 - 1 - 1 - 1 - 2", "x2": "idiv abs INT- 5 add x_0_7 mul x_0_2 abs INT+ 3", "tree": "(abs(-5) idiv (x_0_7 add (x_0_2 mul abs(3))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 - 4 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 5 + 6 + 5 + 6 + 9 + 10", "x2": "mod add add n sqr relu add n sub INT- 7 x_0_2 x_0_2 relu n", "tree": "(((n add (relu((n add (-7 sub x_0_2))))**2) add x_0_2) mod relu(n))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 11 + 26 + 45 + 68 + 95 + 126 + 161 + 200 + 243 + 290 + 341 + 396 + 455", "x2": "mul abs add add n abs INT- 9 abs n n", "tree": "(abs(((n add abs(-9)) add abs(n))) mul n)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 5 + 5 - 1 + 2 + 3 + 5 - 1 + 2 + 4 + 8 + 9 + 12 + 8 + 10 + 13 + 16 + 12 + 15 + 20 + 14 + 18", "x2": "add mod x_0_9 INT- 8 n", "tree": "((x_0_9 mod -8) add n)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 2 + 7 + 9 - 8 + 4 + 49 + 81 + 64 + 16 + 2401 + 6561 + 4096 + 256 + 576 4801 + 4304 6721 + 1677 7216 + 6 5536", "x2": "sqr x_0_4", "tree": "(x_0_4)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 - 2 - 3 - 8 - 15 - 24 - 42 - 64 - 81 - 120 - 154 - 192 - 247", "x2": "mul n idiv sqr n INT- 9", "tree": "(n mul ((n)**2 idiv -9))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 8 + 11 - 4 + 15 + 0 + 19 + 4 + 23 + 8 + 27 + 12 + 31 + 16 + 35", "x2": "add x_0_2 abs INT- 4", "tree": "(x_0_2 add abs(-4))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 + 2 - 8 - 10 - 1 + 4 + 6 + 6 - 6 + 1690 + 265 - 580 - 726 - 1374 + 1734 - 52 8970 - 8 2945 + 9 8020 + 1489 8246 + 470 454 + 1165 746 - 44 8090 4870", "x2": "mul add mul sub sqr INT+ 9 mul INT- 4 x_0_9 INT- 3 abs INT- 2 x_0_6", "tree": "(((((9)**2 sub (-4 mul x_0_9)) mul -3) add abs(-2)) mul x_0_6)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 9 + 1 + 6 + 36 + 36 + 196 + 81 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "abs sqr relu add n idiv n x_0_4", "tree": "abs((relu((n add (n idiv x_0_4))))**2)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 - 7 + 8 - 2 - 4 + 8 - 7 + 2 - 3 - 4 + 7 + 8 + 11 + 12 - 3 + 7 + 9 - 3 + 12 + 3 + 8 + 9 - 2 - 3", "x2": "sub n add sub add INT- 6 n sign mod sqr INT- 3 idiv sqr mod n n x_0_11 x_0_12", "tree": "(n sub (((-6 add n) sub sign(((-3)**2 mod (((n mod n))**2 idiv x_0_11)))) add x_0_12))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 0 - 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6", "x2": "mul sign INT- 2 idiv n INT+ 2", "tree": "(sign(-2) mul (n idiv 2))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 2 - 6 + 2 + 5 - 10 - 2 + 10 - 3 + 2 + 34 + 7 + 2 + 2 + 7 + 103 + 2 + 108 + 2 + 2 + 2 + 2", "x2": "add mod sign x_0_9 add add sign INT+ 2 x_0_2 sqr x_0_8 sign add n abs x_0_8", "tree": "((sign(x_0_9) mod ((sign(2) add x_0_2) add (x_0_8)**2)) add sign((n add abs(x_0_8))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 20 - 35 + 156 - 499 + 2032 - 7883 + 3 1596 - 12 5979 + 50 4016 - 201 5459 + 806 1980 - 3224 7075 + 1 2898 8496", "x2": "add sqr n mul sub relu mod mod sqr n x_0_1 x_0_1 x_0_1 INT+ 4", "tree": "((n)**2 add ((relu((((n)**2 mod x_0_1) mod x_0_1)) sub x_0_1) mul 4))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 2 + 7 - 2 + 8 - 1 + 8 - 2 + 7 - 2 + 8 - 1 + 8 - 2 + 7 - 2", "x2": "mul sub INT+ 6 x_0_3 sign abs n", "tree": "((6 sub x_0_3) mul sign(abs(n)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 1 - 2 + 0 - 4 + 4 + 2 - 4 + 0 - 8 + 8 + 4 - 8 + 0 - 16 + 16 + 8 - 16", "x2": "mul x_0_5 INT+ 2", "tree": "(x_0_5 mul 2)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 10 + 0 + 36 + 4 + 180 + 6 + 1225 + 8 + 1 980 + 30 + 12 725 + 300 + 156 9360 + 4130 + 2354 325", "x2": "abs mul n sub x_0_2 mod INT+ 5 n", "tree": "abs((n mul (x_0_2 sub (5 mod n))))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 - 82 - 730 - 6562 - 5 9050 - 53 1442 - 478 2970 - 4304 6722 - 3 8742 490 - 34 8678 4402 - 313 8105 9610 - 2824 2953 6482 - 2 5418 6582 8330 - 22 8767 9245 4962", "x2": "sub mul INT+ 9 x_0_1 INT- 8", "tree": "((9 mul x_0_1) sub -8)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 2 - 5 - 9 + 5 + 7 - 4 + 0 + 2 + 5 + 9 + 5 + 7 + 4 + 0 + 2 + 5 + 9 + 5 + 7 + 4", "x2": "add mul mod abs INT- 8 idiv sqr sign INT- 8 idiv INT- 6 mod INT- 3 n INT- 3 abs x_0_7", "tree": "(((abs(-8) mod ((sign(-8))**2 idiv (-6 idiv (-3 mod n)))) mul -3) add abs(x_0_7))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 4 + 6 + 120 + 200 + 300 + 420 + 560 + 720 + 900 + 1100 + 1320 + 1560", "x2": "add mod n sqr sign sign n mul mod INT+ 1 0 sqr n sub sqr n n", "tree": "((n mod (sign(sign(n)))**2) add ((10 mod (n)**2) mul ((n)**2 sub n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 4 - 1 + 5 - 3 + 4 + 16 - 2 + 50 + 9 + 47 + 533 + 45 + 5100 + 218 + 5036 + 56 9280 + 9231 + 5203 409", "x2": "add add INT- 5 x_0_4 mul sub sub abs idiv n INT- 9 x_0_5 sqr x_0_5 INT- 2", "tree": "((-5 add x_0_4) add (((abs((n idiv -9)) sub x_0_5) sub (x_0_5)**2) mul -2))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 9 + 5 + 10 - 3 - 9 - 7 + 4 - 4 - 4 + 6 + 5 + 61 + 135 + 84 + 172 - 35 - 149 - 115 + 90 - 68 - 74 + 150 + 131 + 1536", "x2": "add add INT+ 7 sub idiv abs x_0_3 n sign mod n n add mul n x_0_12 INT+ 3", "tree": "((7 add ((abs(x_0_3) idiv n) sub sign((n mod n)))) add ((n mul x_0_12) add 3))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 7 - 6 + 4 + 9 - 8 - 1 - 5 - 2 - 2 - 2 - 4 - 16 - 10 - 10 - 8 - 8 - 8 - 8 - 7 - 4 - 3", "x2": "idiv mul x_0_1 n sub n x_0_8", "tree": "((x_0_1 mul n) idiv (n sub x_0_8))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 7 - 7 - 6 - 6 + 4 - 3 - 10 - 56 - 63 - 60 - 66 + 48 - 39 - 140 - 840 - 1008 - 1020 - 1188 + 912 - 780", "x2": "mul n x_0_7", "tree": "(n mul x_0_7)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 1 - 1 - 3 - 5 + 29 + 31 + 26 + 24 + 25 + 19 + 21 + 16 + 14", "x2": "sub mod sub add INT+ 1 INT+ 4 n add mod x_0_1 mul sign add x_0_1 n INT+ 5 sqr INT- 6 n", "tree": "((((1 add 4) sub n) mod ((x_0_1 mod (sign((x_0_1 add n)) mul 5)) add (-6)**2)) sub n)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 5 + 4 + 4 - 1 - 5 + 6 + 0 + 17 + 15 + 11 + 12 + 14 + 14 + 25 + 16 + 49 + 48 + 42 + 46 + 53", "x2": "add n mul relu sign mul sub x_0_6 sign INT+ 4 n idiv abs mul x_0_8 n INT+ 9", "tree": "(n add (relu(sign(((x_0_6 sub sign(4)) mul n))) mul (abs((x_0_8 mul n)) idiv 9)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 18 + 41 + 86 + 176 + 355 + 710 + 1419 + 2837 + 5672 + 1 1342 + 2 2687 + 4 5377 + 9 756", "x2": "sub x_0_1 add INT- 5 sub mod x_0_1 mod n x_0_1 x_0_1", "tree": "(x_0_1 sub (-5 add ((x_0_1 mod (n mod x_0_1)) sub x_0_1)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 + 2 + 10 + 6 - 6 + 1 - 6 + 5 + 9 + 1 + 113 + 21 + 14 + 665 + 70 + 8 + 4022 + 334 + 1059 + 4028 + 3 9084 + 3 6147 + 5 7328", "x2": "mod sub INT+ 7 n abs mul mod INT- 2 add x_0_8 x_0_3 x_0_10", "tree": "((7 sub n) mod abs(((-2 mod (x_0_8 add x_0_3)) mul x_0_10)))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 9 + 0 + 28 + 216 + 0 + 112 - 2 3328 + 0 + 448 + 1035 7632 + 0 + 1792 - 185 1944 6016 + 0 + 7168", "x2": "mul x_0_3 sub INT+ 4 x_0_1", "tree": "(x_0_3 mul (4 sub x_0_1))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 6 + 5 - 10 - 24 + 25 - 60 - 168 + 200 - 540 - 1680 + 2200 - 6480 - 2 1840 + 3 800 - 9 7200 - 34 9440", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 18 + 51 + 200 + 995 + 5964 + 4 1741 + 33 3920 + 300 5271 + 3005 2700 + 3 3057 9689 + 39 6695 6256 + 515 7043 1315 + 7219 8603 8396", "x2": "sub mul n x_0_1 n", "tree": "((n mul x_0_1) sub n)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 5 - 2 + 9 - 1 + 9 + 2 + 6 + 18 + 9 + 20 + 14 + 19 + 32 + 24 + 36 + 31 + 37", "x2": "add n x_0_5", "tree": "(n add x_0_5)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81", "x2": "sqr sub n INT+ 4", "tree": "((n sub 4))**2", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3", "x2": "mod n INT+ 1 0", "tree": "(n mod 10)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 42 - 14 + 0 + 10 + 19 + 28 + 36 + 43 + 51 + 58 + 66 + 73 + 80", "x2": "idiv mul add sub add sign INT+ 6 abs sqr n n INT- 7 mod INT- 9 abs INT+ 8 n", "tree": "(((((sign(6) add abs((n)**2)) sub n) add -7) mul (-9 mod abs(8))) idiv n)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 2 + 5 - 3 - 8 + 1728 + 540 + 1620 - 1134 - 3456 + 83 9808 + 29 1600 + 96 2280 - 73 4832 - 242 6112 + 6 3489 4848 + 2 3619 6000 + 8 3140 9920", "x2": "mul x_0_5 mul INT+ 9 mul INT+ 6 mod INT- 2 n", "tree": "(x_0_5 mul (9 mul (6 mul (-2 mod n))))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 4 + 2 + 9 + 9 + 14 + 7 + 12 + 0 + 12 + 5 + 19 + 0 + 21 + 12 + 28 + 2", "x2": "relu abs add x_0_2 sub INT+ 7 relu x_0_3", "tree": "relu(abs((x_0_2 add (7 sub relu(x_0_3)))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 8 - 5 - 7 + 6 + 2 + 0 + 57 + 58 + 59 + 27 + 3981 + 3613 + 3495 + 1536 + 1592 8097 + 1311 1658 + 1227 8034 + 239 135 + 253 7046 8817 2120", "x2": "add sqr add x_0_4 abs mod x_0_7 n n", "tree": "(((x_0_4 add abs((x_0_7 mod n))))**2 add n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 4 - 1 - 8 - 17 + 8 + 7 + 4 - 1 - 8 - 17 + 8 + 7", "x2": "sub relu INT+ 8 sqr mod n INT+ 6", "tree": "(relu(8) sub ((n mod 6))**2)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 1 - 9 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1 + 0 + 1 - 1", "x2": "idiv x_0_3 idiv add n sqr abs abs x_0_3 n", "tree": "(x_0_3 idiv ((n add (abs(abs(x_0_3)))**2) idiv n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 8 + 1 - 10 - 8 - 10 - 577 - 568 - 579 - 577 - 579 - 1146 - 1137 - 1148 - 1146 - 1148 - 1715 - 1706 - 1717 - 1715 - 1717 - 2284 - 2275 - 2286 - 2284 - 2286 - 2853 - 2844 - 2855 - 2853 - 2855 - 3422 - 3413", "x2": "sub add x_0_5 INT+ 7 abs sqr mul INT- 4 INT- 6", "tree": "((x_0_5 add 7) sub abs(((-4 mul -6))**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3", "x2": "mod n INT- 5", "tree": "(n mod -5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 2 + 6 - 1 - 10 + 9 + 9 + 1 + 1 + 1 + 0 - 7 + 1 + 1 + 1 + 1 + 1 + 1 - 4 + 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1", "x2": "mod sign sqr sub idiv mul relu x_0_1 abs n sub INT- 5 x_0_7 n add x_0_7 INT+ 2", "tree": "(sign(((((relu(x_0_1) mul abs(n)) idiv (-5 sub x_0_7)) sub n))**2) mod (x_0_7 add 2))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 5 + 450 + 480 + 7 8750 + 13 8240 + 3472 8750 + 8847 3600 + 309 4331 6250 + 1061 6832 0 + 48 6738 3646 1250 + 214 353 3312 0 + 12 3388 1754 2926 8750 + 67 1214 8046 6432 0 + 4 7195 9771 169 5296 8750 + 30 9295 7819 8931 8656 0 + 2 5915 3110 2654 887 5140 6250 + 20 423 6667 2907 8489 880 0 + 1 9646 3972 8922 646 8244 1078 1250 + 17 6372 8267 2158 9070 3974 4000 0 + 1 9927 3407 7045 6502 739 9985 5421 8750 + 20 4874 6755 1979 7864 1736 6630 4000 0 + 2 6353 9081 6892 8723 9928 6480 8795 4296 8750 + 30 6820 3140 5844 9281 3864 8265 6870 4000 0 + 4 4472 2200 3506 7221 7379 5936 4842 2875 9765 6250 + 58 749 4904 4983 2799 8083 3437 2924 2931 2000 0 + 9 4018 7203 7613 5613 4762 1989 3213 802 1020 5078 1250 + 136 5922 8015 3800 6745 1492 244 5117 9374 1824 0 0 + 24 5116 2058 9262 3157 8938 5288 3595 8214 1602 5659 1796 8750", "x2": "mul mul n add n add sqr n n x_0_2", "tree": "((n mul (n add ((n)**2 add n))) mul x_0_2)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 9 - 17 - 35 - 67 - 117 - 189 - 287 - 415 - 577 - 777 - 1019 - 1307 - 1645 - 2037 - 2487 - 2999 - 3577 - 4225 - 4947 - 5747 - 6629 - 7597 - 8655 - 9807 - 1 1057 - 1 2409 - 1 3867 - 1 5435", "x2": "add add mod x_0_1 x_0_1 x_0_1 mul INT- 2 sqr n", "tree": "(((x_0_1 mod x_0_1) add x_0_1) add (-2 mul (n)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 3 - 8 + 8 + 2 + 2 - 9 - 10 + 0 + 0 + 0 + 0 + 80 + 20 + 20 + 0 + 0 + 0 + 0 + 0 + 0 + 800 + 200 + 200 + 0 + 0 + 0 + 0 + 0 + 0 + 8000 + 2000 + 2000 + 0 + 0", "x2": "relu mul x_0_9 INT+ 1 0", "tree": "relu((x_0_9 mul 10))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 7 - 1 + 2 - 4 + 7 + 46 - 4 + 14 - 41 + 70 + 556 - 9 + 189 - 604 + 1076 + 9519 + 391 + 3579 - 1 1894 + 2 1989 + 21 491 + 1 8509 + 8 6284 - 29 3774 + 55 9817 + 570 5243 + 72 8740 + 252 742 - 872 6939 + 1706 550 + 1 8312 7590 + 2975 3660", "x2": "add INT- 3 add mul INT+ 1 mul n x_0_5 x_0_6", "tree": "(-3 add ((1 mul (n mul x_0_5)) add x_0_6))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 8 - 44 - 82 - 116 - 168 - 244 - 322 - 396 - 488 - 604 - 722 - 836 - 968 - 1124 - 1282 - 1436 - 1608 - 1804 - 2002 - 2196 - 2408 - 2644 - 2882 - 3116 - 3368 - 3644 - 3922 - 4196", "x2": "sub mul sqr add idiv INT- 4 INT+ 6 n INT- 1 0 x_0_2", "tree": "(((((-4 idiv 6) add n))**2 mul -10) sub x_0_2)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 36 + 81 + 144 + 225 + 324 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249 + 3600 + 3969 + 4356 + 4761 + 5184 + 5625 + 6084 + 6561", "x2": "abs mul mul sqr n INT+ 9 INT+ 1", "tree": "abs((((n)**2 mul 9) mul 1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 3 - 40 - 315 - 2880 - 3 1735 - 41 2620 - 618 9375 - 1 521 9460 - 19 9916 9835 - 419 8256 6640 - 9655 9903 2835 - 24 1399 7582 1000 - 651 7793 4716 7135 - 1 8901 6010 6784 7060 - 58 5949 6331 325 9015 - 1933 6337 8924 754 7660 - 6 7677 1826 2342 6416 8275 - 250 4055 7570 6677 7422 6360 - 9765 8174 5256 431 9482 8235 - 40 398 5155 5497 7709 8795 7840 - 1721 7136 1688 6404 1524 8218 7335 - 7 7477 1127 5988 8186 8616 9843 300 - 364 1424 2997 1474 4782 4998 2622 4335 - 1 7842 9790 6860 2249 4342 4914 8499 2660 - 90 9991 9324 9871 4721 1467 657 3462 5915 - 4822 9572 4224 3188 220 7754 4839 3517 3760 - 26 5262 6483 2337 5341 2142 6496 6164 3455 7075", "x2": "mul abs add relu sub relu n mul n sign x_0_1 INT- 1 sub x_0_1 INT+ 5", "tree": "(abs((relu((relu(n) sub (n mul sign(x_0_1)))) add -1)) mul (x_0_1 sub 5))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 7 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 0 + 1 + 2 + 3", "x2": "mod n INT+ 8", "tree": "(n mod 8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 2 - 9 + 4 - 4 + 0 + 2 + 0 + 4 + 0 + 0 + 2 + 0 + 4 + 0 + 0 + 2 + 0 + 4 + 0 + 0 + 2 + 0 + 4 + 0 + 0 + 2 + 0 + 4 + 0 + 0 + 2", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 8 - 31 - 40 + 124 + 206 - 744 - 1442 + 6006 + 1 3008 - 5 9972 - 14 2980 + 71 9781 + 185 8894 - 1007 6799 - 2788 3266 + 1 6122 8971 + 4 7401 5792 - 29 212 1136 - 90 629 9708 + 580 4242 3161 + 1891 3229 4264 - 1 2769 3330 9013 - 4 3500 4276 7640 + 30 6463 9941 6762 + 108 7510 6919 1520 - 796 8063 8483 5164 - 2936 2788 6817 284 + 2 2310 5787 7538 5346", "x2": "sub x_0_2 mul n sub add x_0_2 mod add x_0_2 sqr INT- 6 INT+ 9 n", "tree": "(x_0_2 sub (n mul ((x_0_2 add ((x_0_2 add (-6)**2) mod 9)) sub n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 6 + 0 + 6 + 5 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0", "x2": "add relu idiv sign idiv x_0_3 x_0_5 idiv mod INT- 5 add INT- 4 add relu x_0_3 INT- 4 n INT- 1", "tree": "(relu((sign((x_0_3 idiv x_0_5)) idiv ((-5 mod (-4 add (relu(x_0_3) add -4))) idiv n))) add -1)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 484 + 441 + 400 + 361 + 324 + 289 + 256 + 225 + 196 + 169 + 144 + 121 + 100 + 81 + 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16", "x2": "sqr sub n sub relu INT+ 8 mul abs relu INT+ 5 INT- 3", "tree": "((n sub (relu(8) sub (abs(relu(5)) mul -3))))**2", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 10 + 1 - 9 - 3 - 4 + 6 + 17 + 12 + 14 + 5 - 5 + 1 + 0 + 10 + 21 + 16 + 18 + 9 - 1 + 5 + 4 + 14 + 25 + 20 + 22 + 13 + 3 + 9 + 8 + 18", "x2": "sub n x_0_4", "tree": "(n sub x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 6 - 1 + 10 + 6 - 4 + 1 + 12 + 8 - 2 + 3 + 14 + 10 + 0 + 5 + 16 + 12 + 2 + 7 + 18 + 14 + 4 + 9 + 20 + 16 + 6 + 11 + 22 + 18", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 4 + 10 - 7 - 8 + 3 + 10 + 2 + 9 + 1 + 3 + 9 + 80 + 23 + 2 + 5 + 10 + 113 + 40 + 10 + 13 + 17 + 58 + 31 + 6 + 7 + 8 + 35 + 23 + 12 + 3 + 19", "x2": "abs sub idiv mul x_0_1 x_0_4 x_0_3 mod x_0_3 n", "tree": "abs((((x_0_1 mul x_0_4) idiv x_0_3) sub (x_0_3 mod n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 3 - 9 + 10 - 10 - 1 - 4 + 5 + 900 - 675 - 2025 + 2250 - 2250 - 225 - 900 + 1125 + 20 2500 - 15 1875 - 45 5625 + 50 6250 - 50 6250 - 5 625 - 20 2500 + 25 3125 + 4556 2500 - 3417 1875 - 1 251 5625 + 1 1390 6250 - 1 1390 6250 - 1139 625 - 4556 2500 + 5695 3125 + 102 5156 2500 - 76 8867 1875 - 230 6601 5625", "x2": "mul INT+ 9 mul sqr INT- 5 x_0_8", "tree": "(9 mul ((-5)**2 mul x_0_8))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 3 + 9 + 4 - 10 + 24 - 70 + 191 - 631 + 1909 - 6942 + 2 2907 - 9 247 + 32 697 - 135 3706 + 513 1151 - 2301 3003 + 9236 717 - 4 3724 7058 + 18 4721 4339 - 91 8218 8219 + 406 3871 5457 - 2111 9032 9038 + 9753 2917 967 - 5 2797 5822 5951 + 25 3585 5844 5141 - 142 5534 7210 678 + 710 396 3646 3947 - 4134 506 9091 9663 + 2 1301 1890 9391 8409 - 12 8155 5714 1850 9554 + 68 1638 510 538 9087", "x2": "add add mul n x_0_2 idiv INT+ 3 abs x_0_5 idiv INT- 2 n", "tree": "(((n mul x_0_2) add (3 idiv abs(x_0_5))) add (-2 idiv n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 + 1 - 10 + 1 - 10 + 3 + 5 - 2560 - 414 5580 - 2 0 - 4839 7580 - 2 8800 - 9733 3860 - 3815 4871 1600 - 1152 0 - 212 2536 9600 - 1 1560 0 - 3136 1631 8400 - 2 793 6000 - 7786 7088 0 - 3365 2596 3631 2000 - 1115 1360 0 - 224 5644 1036 8000 - 1 3317 1200 0 - 3920 2039 8000 0 - 2 8112 9472 0 - 1 1353 214 3040 0 - 5276 7271 973 7216 0 - 1875 6587 5200 0 - 404 2159 3866 2400 0 - 2 5595 5046 4000 0 - 8028 5777 5104 0 0 - 6 1229 9990 160 0 - 2 6248 1855 4708 4800 0", "x2": "mul mul mul abs INT- 2 abs mul n mod x_0_7 x_0_1 INT- 1 0 abs n", "tree": "(((abs(-2) mul abs((n mul (x_0_7 mod x_0_1)))) mul -10) mul abs(n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 3 - 6 - 3 + 6 + 3 - 6 - 3 + 6 + 3 - 6 - 3 + 6 + 3 - 6 - 3 + 6 + 3 - 6 - 3 + 6 + 3 - 6 - 3 + 6 + 3 - 6 - 3 + 6", "x2": "mul sign idiv INT- 5 n x_0_2", "tree": "(sign((-5 idiv n)) mul x_0_2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 3 + 4 + 5 + 5 + 6 + 7 + 7 + 8 + 9 + 9 + 10 + 11 + 11 + 12 + 13 + 13 + 14 + 15 + 15 + 16 + 17 + 17 + 18 + 19 + 19 + 20", "x2": "add n idiv add INT- 7 n INT- 3", "tree": "(n add ((-7 add n) idiv -3))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 5 + 4 + 1 + 1 - 10 - 10 - 9 - 7 - 7 - 17 - 17 - 15 - 12 - 11 - 35 - 35 - 29 - 21 - 18 - 128 - 128 - 90 - 50 - 38 - 1644 - 1644 - 815 - 255 - 149 - 27 279 - 27 278", "x2": "add INT- 8 idiv add INT- 4 sub abs sqr x_0_5 n sub sign INT- 3 INT+ 9", "tree": "(-8 add ((-4 add (abs((x_0_5)**2) sub n)) idiv (sign(-3) sub 9)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281", "x2": "sqr sqr add n abs INT- 2", "tree": "(((n add abs(-2)))**2)**2", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 + 0 - 60 - 50 - 110 - 100 - 160 - 150 - 210 - 200 - 260 - 250 - 310 - 300 - 360 - 350 - 410 - 400 - 460 - 450 - 510 - 500 - 560 - 550 - 610 - 600 - 660 - 650 - 710", "x2": "sub x_0_2 mul INT+ 1 0 sub INT- 5 INT- 1 0", "tree": "(x_0_2 sub (10 mul (-5 sub -10)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 8 - 2 - 16 - 10 - 24 - 18 - 32 - 26 - 40 - 34 - 48 - 42 - 56 - 50 - 64 - 58 - 72 - 66 - 80 - 74 - 88 - 82 - 96 - 90 - 104 - 98 - 112 - 106 - 120", "x2": "sub x_0_2 sub INT+ 3 INT- 5", "tree": "(x_0_2 sub (3 sub -5))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 8 + 4 + 14 + 14 + 18 + 12 + 6 - 5 - 10 - 9 + 3 + 20 + 36 + 40 + 27 - 3 - 37 - 58 - 49 - 6 + 58 + 113 + 125 + 72 - 36 - 156 - 223 - 182 - 21", "x2": "sub idiv n INT- 8 add sub x_0_3 x_0_1 INT- 9", "tree": "((n idiv -8) sub ((x_0_3 sub x_0_1) add -9))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 4 + 2 - 1 + 2 + 6 + 4 + 1 + 4 + 8 + 6 + 3 + 6 + 10 + 8 + 5 + 8 + 12 + 10 + 7 + 10 + 14 + 12 + 9 + 12 + 16 + 14 + 11 + 14", "x2": "add INT- 1 relu sub n x_0_2", "tree": "(-1 add relu((n sub x_0_2)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 9 + 3 - 6 + 6 - 3 - 9 + 1 + 10 + 9 + 0 + 432 + 0 + 1093 + 0 + 0 + 6561 + 0 + 38 6983 5264 + 0 + 33 367 1836 + 0 + 0 + 0 + 0 + 341 8218 9187 1668 5211 1368 8419 6612 5056 + 0 + 3 781 8789 5536 7516 2698 6158 8329 + 0 + 0 + 0 + 0 + 0 + 0 + 2626 5195 741 6214 648 7050 6930 6876 9987 3502 449 8230 1223 6682 8620 7993 4336 4968 184 1343 + 0", "x2": "relu idiv sqr sqr x_0_7 x_0_9", "tree": "relu((((x_0_7)**2)**2 idiv x_0_9))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 7 + 490 + 2 580 + 115 2480 + 8067 3600 + 67 7658 2400 + 6641 507 5200 + 74 3797 6842 2400 + 9371 8508 2122 2400 + 131 2059 1149 7113 6000 + 2 205 7103 7055 5494 4000 + 339 4559 3422 5332 3059 2000 + 6 1780 9800 2901 479 6774 4000 + 1210 9072 856 8605 4016 7782 4000 + 25 4290 5137 9940 7134 3523 4304 0 + 5696 1075 910 6719 8094 9248 4096 0 + 135 5673 5871 6739 9314 6592 1121 4848 0 + 3 4162 9743 9661 8462 7294 1212 2614 1696 0 + 908 7351 1895 51 1086 236 2461 5369 1136 0 + 25 4445 8333 601 4310 4086 6148 9230 3351 8080 0 + 7480 7074 9919 6820 7260 1464 7783 3718 5431 5520 0 + 230 4057 9097 5262 783 6125 1151 7278 5311 2918 160 0 + 7 4190 6646 9403 4389 2323 2287 856 3687 235 9601 1520 0 + 2492 8063 3371 9555 4782 604 8460 7739 8839 9282 5987 720 0 + 87 2482 2168 184 4417 3721 1696 1270 8959 3974 8909 5475 2000 0 + 3 1758 3526 9158 7136 7923 4505 7390 2606 1220 6860 3075 2972 8000 0 + 1200 4657 3174 1993 7707 5064 3169 3518 5114 1419 3196 2462 3718 4000 0 + 47 582 5668 4286 1558 1342 5212 2385 9256 4743 6373 2928 5249 7612 8000 0", "x2": "mul sub INT+ 1 0 INT- 4 abs mul x_0_1 sub sub n mod add n n x_0_1 idiv relu INT- 1 0 n", "tree": "((10 sub -4) mul abs((x_0_1 mul ((n sub ((n add n) mod x_0_1)) sub (relu(-10) idiv n)))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 7 - 1 - 2 - 2 - 2 - 2 - 3 - 2 - 3 - 3 - 3 - 3 - 4 - 3 - 4 - 4 - 4 - 4 - 4 - 4 - 5 - 4 - 5 - 4 - 5 - 5 - 5 - 5", "x2": "idiv n sub x_0_1 sign n", "tree": "(n idiv (x_0_1 sub sign(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 + 0 - 7 + 5 - 310 + 124 + 0 - 217 + 155 - 9610 + 3844 + 0 - 6727 + 4805 - 29 7910 + 11 9164 + 0 - 20 8537 + 14 8955 - 923 5210 + 369 4084 + 0 - 646 4647 + 461 7605 - 2 8629 1510 + 1 1451 6604 + 0 - 2 40 4057 + 1 4314 5755 - 88 7503 6810 + 35 5001 4724", "x2": "idiv sub mul INT- 1 x_0_5 mul mul x_0_5 INT+ 4 INT- 8 idiv INT- 9 INT- 9", "tree": "(((-1 mul x_0_5) sub ((x_0_5 mul 4) mul -8)) idiv (-9 idiv -9))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 8 + 10 - 2 + 7 - 8 + 0 - 9 + 1 + 2 + 2 - 1 + 1 - 2 + 0 - 3 + 0 + 0 + 0 - 1 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 + 0 - 1 + 0 + 0 + 0", "x2": "idiv x_0_8 relu INT+ 4", "tree": "(x_0_8 idiv relu(4))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 5929 + 5776 + 5625 + 5476 + 5329 + 5184 + 5041 + 4900 + 4761 + 4624 + 4489 + 4356 + 4225 + 4096 + 3969 + 3844 + 3721 + 3600 + 3481 + 3364 + 3249 + 3136 + 3025 + 2916 + 2809 + 2704 + 2601", "x2": "sqr add sqr INT+ 9 sub INT- 3 n", "tree": "(((9)**2 add (-3 sub n)))**2", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 + 10 - 20 + 40 - 80 + 160 - 320 + 640 - 1280 + 2560 - 5120 + 1 240 - 2 480 + 4 960 - 8 1920 + 16 3840 - 32 7680 + 65 5360 - 131 720 + 262 1440 - 524 2880 + 1048 5760 - 2097 1520 + 4194 3040 - 8388 6080 + 1 6777 2160 - 3 3554 4320 + 6 7108 8640", "x2": "mul x_0_1 INT- 2", "tree": "(x_0_1 mul -2)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 3 - 4 + 5 + 10 - 1 + 4 + 0 + 0 + 5 + 10 + 0 + 4 + 0 + 0 + 5 + 10 + 0 + 4 + 0 + 0 + 5 + 10 + 0 + 4 + 0 + 0 + 5 + 10 + 0 + 4 + 0 + 0", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 9 - 5 - 4 - 8 + 2 - 6 - 9 + 6 + 9 + 0 + 0 + 0 + 2 + 0 + 0 + 6 + 9 + 0 + 0 + 0 + 2 + 0 + 0 + 6 + 9 + 0 + 0 + 0 + 2 + 0 + 0 + 6 + 9 + 0", "x2": "relu x_0_8", "tree": "relu(x_0_8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 0 - 6 + 9 - 9 - 5 - 6 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1", "x2": "sign add mul sub mod sqr n x_0_7 sign x_0_7 sqr INT- 9 mod n mul x_0_3 INT+ 1", "tree": "sign((((((n)**2 mod x_0_7) sub sign(x_0_7)) mul (-9)**2) add (n mod (x_0_3 mul 1))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 2 - 1 + 8 - 5 + 2 - 4 - 7 + 10 + 7 + 6 + 7 + 1 + 1 - 3 - 2 + 1 + 1 + 14 + 15 - 2 - 3 - 3 - 2 + 20 + 20 + 21 + 31 + 6 - 2 - 2 - 2 - 2 + 53 + 54 + 55 + 80", "x2": "add sqr idiv x_0_9 INT+ 4 sub mod sign x_0_4 n INT+ 4", "tree": "(((x_0_9 idiv 4))**2 add ((sign(x_0_4) mod n) sub 4))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 5 - 10 + 9 - 9 - 1 + 5 + 6 + 2 + 18 + 17 + 3 + 23 + 6 + 15 + 22 + 24 + 21 + 38 + 38 + 25 + 46 + 30 + 40 + 48 + 51 + 49 + 67 + 68 + 56 + 78 + 63 + 74 + 83 + 87 + 86", "x2": "abs add relu add n x_0_9 abs sign INT- 6", "tree": "abs((relu((n add x_0_9)) add abs(sign(-6))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 9 + 10 - 4 - 4 + 3 + 1 - 4 + 5 + 67 + 68 - 36 + 40 + 97 - 30 + 8 + 142 + 502 + 486 - 213 + 859 + 1223 - 549 + 954 + 2352 + 3326 + 4341 + 163 + 1 412 + 1 3267 - 5451 + 1 8594 + 3 1130 + 1 8806 + 4 9997 + 2 8094", "x2": "sub add INT+ 1 mul x_0_8 INT+ 8 sub x_0_9 x_0_3", "tree": "((1 add (x_0_8 mul 8)) sub (x_0_9 sub x_0_3))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 3 - 7 - 8 - 1 - 1 - 7 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign idiv n add mul sign x_0_7 x_0_6 idiv x_0_2 INT- 3", "tree": "sign((n idiv ((sign(x_0_7) mul x_0_6) add (x_0_2 idiv -3))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 3 - 1 + 7 + 9 + 3 + 6 - 6 - 9 + 6 + 9 + 1 + 49 + 81 + 9 + 36 + 36 + 81 + 36 + 81 + 1 + 2401 + 6561 + 81 + 1296 + 1296 + 6561 + 1296 + 6561 + 1 + 576 4801 + 4304 6721 + 6561 + 167 9616 + 167 9616 + 4304 6721 + 167 9616", "x2": "relu sqr abs x_0_9", "tree": "relu((abs(x_0_9))**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 9 - 1 + 1 - 44 - 53 + 6 - 7 + 397 + 531 - 65 + 85 - 5160 - 7433 + 976 - 1359 + 8 7721 + 13 3795 - 1 8543 + 2 7181 - 184 2140 - 294 3489 + 42 6490 - 65 2343 + 4605 3501 + 7653 715 - 1151 5229 + 1826 5605 - 13 3555 1528 - 22 9592 1449 + 3 5697 2100", "x2": "sub sign sign mod mul x_0_2 n mod INT- 6 abs sub x_0_3 n mul x_0_4 n", "tree": "(sign(sign(((x_0_2 mul n) mod (-6 mod abs((x_0_3 sub n)))))) sub (x_0_4 mul n))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 1 + 6 + 8 + 1 + 5 + 10 + 2 + 1 - 4 - 65 - 2 + 16 + 41 + 541 + 42 - 110 - 319 - 4316 - 401 + 894 + 2576 + 3 4585 + 3765 - 7110 - 2 710 - 27 6983 - 3 4436 + 5 6479 + 16 6582 + 221 8456 + 31 89 - 44 8051 - 133 9750 - 1776 8342 - 275 7695 + 354 9980", "x2": "add mul add mod x_0_4 INT- 3 x_0_4 INT- 8 x_0_9", "tree": "((((x_0_4 mod -3) add x_0_4) mul -8) add x_0_9)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 7 - 6 + 1 + 14 + 7 - 6 + 1 + 14 + 7 - 6 + 1 + 14 + 7 - 6 + 1 + 14 + 7 - 6 + 1 + 14 + 7 - 6 + 1 + 14 + 7 - 6 + 1 + 14 + 7", "x2": "sub INT+ 8 x_0_2", "tree": "(8 sub x_0_2)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000 + 12 1645 1004 883 2000 + 243 2902 81 7664 0 + 5109 942 1717 944 0 + 11 2400 727 7776 768 0 + 258 5201 6738 8849 7664 0 + 6204 4840 1733 2394 3936 0 + 15 5112 1004 3330 9859 8400 0 + 403 2914 6112 6605 6355 8400 0 + 1 888 8694 5041 8352 1607 6800 0 + 30 4888 3446 1171 3860 5015 400 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 - 6 + 7 + 6 - 4 + 1 - 10 - 2 + 10 4976 + 25 0 + 52 7076 + 101 6064 + 182 7904 + 311 1696 + 506 2500 + 792 9856 + 1202 7024 + 1774 944 + 2554 2916 + 3600 0 + 4978 7136 + 6769 9984 + 9066 8484 + 1 1977 1136 + 1 5625 0 + 2 152 6416 + 2 5721 7444 + 3 2515 3024 + 4 739 3856 + 5 625 0 + 6 2430 196 + 7 6441 1904 + 9 2976 2064 + 11 2385 8576 + 13 5056 2500", "x2": "sqr mul sqr n mod INT- 5 mul INT+ 1 add sub x_0_8 x_0_8 n", "tree": "(((n)**2 mul (-5 mod (1 mul ((x_0_8 sub x_0_8) add n)))))**2", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 6 + 2 + 4 + 3 + 8 - 5 - 10 + 6 + 16 - 5 - 7 + 15 + 25 - 2 - 6 + 22 + 28 + 0 + 2 + 31 + 45 + 3 + 2 + 53 + 63 + 14 + 22 + 81 + 80 + 26 + 44 + 95 + 104 + 47", "x2": "add x_0_4 mod sub idiv INT+ 9 INT- 9 add sub x_0_2 add x_0_7 n add mul x_0_8 n x_0_5 n", "tree": "(x_0_4 add (((9 idiv -9) sub ((x_0_2 sub (x_0_7 add n)) add ((x_0_8 mul n) add x_0_5))) mod n))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 7 + 0 - 5 + 10 + 3 - 9 + 10 + 3 + 9 - 1 - 7 + 8 + 0 + 6 - 9 - 2 + 9 - 10 - 2 - 9 + 2 + 7 - 8 + 1 - 6 + 9 + 2 - 8 + 11 + 2 + 10 - 2 - 6 + 6 - 1 + 7 - 9", "x2": "sub abs add x_0_11 sub idiv x_0_7 add x_0_8 mul INT- 2 relu sqr mod x_0_7 n n n", "tree": "(abs((x_0_11 add ((x_0_7 idiv (x_0_8 add (-2 mul relu(((x_0_7 mod n))**2)))) sub n))) sub n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 4 - 10 + 6 - 3 - 7 + 9 + 1 - 12 + 7 + 8 - 8 + 10 + 2 - 14 + 8 + 16 - 10 + 12 + 3 - 17 + 9 + 23 - 12 + 14 + 4 - 20 + 11 + 30 - 14 + 16 + 5 - 23", "x2": "add x_0_6 idiv n x_0_3", "tree": "(x_0_6 add (n idiv x_0_3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 7 + 26 + 63 + 124 + 215 + 342 + 511 + 728 + 999 + 1330 + 1727 + 2196 + 2743 + 3374 + 4095 + 4912 + 5831 + 6858 + 7999 + 9260 + 1 647 + 1 2166 + 1 3823 + 1 5624 + 1 7575 + 1 9682", "x2": "mod sign INT- 1 idiv sqr sqr n n", "tree": "(sign(-1) mod (((n)**2)**2 idiv n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr mul abs idiv add sign sub INT- 1 sign INT+ 1 0 sign INT- 8 INT+ 1 0 n", "tree": "((abs(((sign((-1 sub sign(10))) add sign(-8)) idiv 10)) mul n))**2", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 6 - 9 - 9 + 8 + 2 - 8 + 6 - 8 - 1 + 2 - 5 - 18 - 36 + 40 + 12 - 56 + 48 - 72 - 9 + 22 - 70 - 198 - 504 + 600 + 192 - 896 + 864 - 1368 - 180 + 462 - 1540 - 4554 - 1 2096 + 1 5000 + 4992 - 2 2400 + 2 4192 - 3 9672", "x2": "mul x_0_10 add mul mod add mod n INT+ 9 x_0_10 INT+ 3 idiv idiv INT+ 3 x_0_3 x_0_12 mod INT- 1 0 n", "tree": "(x_0_10 mul (((((n mod 9) add x_0_10) mod 3) mul ((3 idiv x_0_3) idiv x_0_12)) add (-10 mod n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 6 + 7 - 10 - 10 + 2 - 5 - 4 + 0 - 6 - 8 + 26 + 26 + 2 + 16 + 14 + 6 + 18 + 22 - 46 - 46 + 2 - 26 - 22 - 6 - 30 - 38 + 98 + 98 + 2 + 58 + 50 + 18 + 66 + 82 - 190", "x2": "sub add sign n sub INT+ 5 x_0_8 x_0_8", "tree": "((sign(n) add (5 sub x_0_8)) sub x_0_8)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 3 - 3 - 14 - 18 - 33 - 41 - 60 - 81 - 95 - 120 - 138 - 167 - 189 - 222 - 248 - 285 - 324 - 356 - 399 - 435 - 482 - 522 - 573 - 617 - 672 - 729", "x2": "sub abs mod mul INT+ 4 relu n mul sign sign INT+ 1 INT- 9 sqr n", "tree": "(abs(((4 mul relu(n)) mod (sign(sign(1)) mul -9))) sub (n)**2)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 - 8 - 8 + 37 + 44 + 64 + 72 + 35 + 36 + 24 + 24 + 69 + 76 + 96 + 104 + 67 + 68 + 56 + 56 + 101 + 108 + 128 + 136 + 99 + 100 + 88 + 88 + 133 + 140 + 160", "x2": "sub add n mul INT+ 7 n x_0_4", "tree": "((n add (7 mul n)) sub x_0_4)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 7 + 0 - 7 + 0 - 6 + 1 - 6 + 1 - 5 + 2 - 5 + 2 - 4 + 3 - 4 + 3 - 3 + 4 - 3 + 4 - 2 + 5 - 2 + 5 - 1 + 6 - 1 + 6 + 0 + 7 + 0", "x2": "sub x_0_4 idiv add idiv INT- 7 INT- 4 INT- 2 add abs relu add x_0_3 INT+ 8 n", "tree": "(x_0_4 sub (((-7 idiv -4) add -2) idiv (abs(relu((x_0_3 add 8))) add n)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 7 - 4 - 7 - 2 - 6 - 7 + 4 + 75 + 35 + 45 + 40 + 55 + 50 + 65 + 145 + 55 + 60 + 55 + 60 + 60 + 80 + 65 + 55 + 60 + 55 + 60 + 60 + 60 + 50 + 50 + 55 + 50 + 55 + 55", "x2": "mul add idiv x_0_7 x_0_8 add idiv x_0_6 n INT+ 9 INT+ 5", "tree": "(((x_0_7 idiv x_0_8) add ((x_0_6 idiv n) add 9)) mul 5)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 7 + 4 - 21 + 16 - 105 + 96 - 735 + 768 - 6615 + 7680 - 7 2765 + 9 2160 - 94 5945 + 129 240 - 1418 9175 + 2064 3840 - 2 4121 5975 + 3 7158 9120 - 45 8310 3525 + 74 3178 2400 - 962 4517 4025 + 1634 9921 2800 - 2 2136 3900 2575 + 3 9239 8110 7200 - 55 3409 7506 4375 + 102 235 878 7200 - 1494 2063 2673 8125 + 2856 6582 4604 1600 - 4 3331 9834 7540 5625", "x2": "mul mul sqr sign x_0_1 n x_0_2", "tree": "(((sign(x_0_1))**2 mul n) mul x_0_2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 2 - 7 - 4 - 8 + 8 + 14 + 12 + 17 + 2 - 3 + 0 - 4 + 12 + 18 + 16 + 21 + 6 + 1 + 4 + 0 + 16 + 22 + 20 + 25 + 10 + 5 + 8 + 4 + 20 + 26 + 24", "x2": "add n sub sign n x_0_4", "tree": "(n add (sign(n) sub x_0_4))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 10 + 1 - 3 + 5 - 4 - 5 + 3 + 8 + 3 - 10 - 10 + 2 + 11 + 29 + 39 + 49 + 68 + 93 + 114 + 123 + 133 + 156 + 189 + 241 + 304 + 378 + 472 + 592 + 734 + 886 + 1049 + 1236 + 1457 + 1731 + 2069 + 2482 + 2990", "x2": "add n add sub x_0_10 sqr sign n x_0_1", "tree": "(n add ((x_0_10 sub (sign(n))**2) add x_0_1))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 7 + 0 + 2 + 4 + 3 + 2 + 4 + 6 + 5 + 4 + 6 + 8 + 7 + 6 + 8 + 10 + 9 + 8 + 10 + 12 + 11 + 10 + 12 + 14 + 13 + 12 + 14 + 16", "x2": "abs mod sub INT- 1 x_0_2 n", "tree": "abs(((-1 sub x_0_2) mod n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 5 - 3 + 3 + 3 - 3 - 3 + 3 + 3 - 3 - 3 + 3 + 3 - 3 - 3 + 3 + 3 - 3 - 3 + 3 + 3 - 3 - 3 + 3 + 3 - 3 - 3 + 3 + 3", "x2": "idiv INT+ 6 idiv INT- 2 sign x_0_2", "tree": "(6 idiv (-2 idiv sign(x_0_2)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 7 + 4 + 57 + 152 + 495 + 1212 + 3871 + 1 224 + 3 5505 + 10 3060 + 39 1545 + 123 7896 + 509 1463 + 1733 2140 + 7637 3775 + 2 7731 6320 + 12 9835 6521 + 49 9169 6388 + 246 6877 6825 + 998 3393 1000 + 5180 4431 6895 + 2 1963 4648 5916 + 11 9150 1929 2863 + 52 7123 1566 6640 + 297 8754 8232 6625 + 1370 5202 733 8100 + 8042 6380 2282 4761 + 3 8374 5658 547 3128 + 23 3236 5026 6192 4855", "x2": "mul sub x_0_2 sub mul INT- 8 n INT+ 2 n", "tree": "((x_0_2 sub ((-8 mul n) sub 2)) mul n)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 8 + 1 - 3 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33 + 1 + 1 + 33", "x2": "mod x_0_3 sqr mul sign mod n n sub x_0_4 n", "tree": "(x_0_3 mod ((sign((n mod n)) mul (x_0_4 sub n)))**2)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 - 7 - 1 + 1 + 289 + 1 + 3 8809 + 4225 + 10 5625 + 1 201 + 1 4884 + 2 1025 + 2 8900 + 3 8809 + 5 1076 + 6 6049 + 8 4100 + 10 5625 + 13 1044 + 16 801 + 19 5364 + 23 5225 + 28 900 + 33 2929 + 39 1876 + 45 8329 + 53 2900 + 61 6225 + 70 8964 + 81 1801", "x2": "sqr sub sqr add idiv n x_0_3 n sign INT- 8", "tree": "(((((n idiv x_0_3) add n))**2 sub sign(-8)))**2", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 + 6 + 9 - 10 + 31 - 29 + 105 - 65 + 305 - 157 + 889 - 362 + 2608 - 774 + 7673 - 1433 + 2 2660 - 1684 + 6 7212 + 2628 + 20 203 + 3 548 + 59 8935 + 15 8862 + 179 9437 + 67 6796 + 542 8871 + 262 9331 + 1644 5482 + 968 7440 + 5001 3251", "x2": "add add mul idiv x_0_2 INT- 3 INT- 9 x_0_5 mod relu x_0_3 INT+ 8", "tree": "((((x_0_2 idiv -3) mul -9) add x_0_5) add (relu(x_0_3) mod 8))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 7 + 1 + 70 + 1953 + 6 7865 + 283 6659 + 1 3852 1236 + 77 3733 2603 + 4864 8230 5337 + 33 9996 4 5369 + 2614 5638 2735 6054 + 21 9385 3642 9759 953 + 1994 5766 2042 8928 4345 + 19 5314 9390 4702 6672 9139 + 2049 4106 5635 9479 8156 9180 + 22 9397 2730 5492 8820 6864 4187 + 2728 3929 6189 4201 3302 9767 3993 + 34 3616 9351 753 917 4430 2641 3809 + 4568 1953 6185 6835 2610 6104 2931 8646 + 63 9306 8188 538 1664 9063 3589 1971 3777 + 9394 6124 9968 5810 6894 4039 4881 9269 4697 + 144 6322 8101 7845 1079 83 8637 6692 3698 6899 + 2 3279 2210 1512 3282 3045 5241 2388 3298 602 7860 + 390 9896 7045 7358 6511 4094 9941 775 7227 5377 2187 + 6 8406 8968 7532 7177 6520 5305 2999 9033 1732 6793 7705 + 1244 7318 3036 1634 4822 1156 6899 6394 8607 4754 8825 7001 + 23 5206 4311 1053 6188 1136 2970 6894 7629 3580 6544 500 9254 + 4609 1747 3748 5256 1428 8959 4158 3076 590 1555 9349 6401 4777 + 93 5497 8272 772 9621 6749 807 3341 6176 6396 790 2168 5993 4953", "x2": "mul add INT- 1 INT+ 8 abs sub x_0_2 mul n x_0_1", "tree": "((-1 add 8) mul abs((x_0_2 sub (n mul x_0_1))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 - 7 - 5 - 9 + 1 + 7 + 4 - 4 + 4 + 7 + 11 + 12 + 13 + 14 + 25 + 86 + 57 + 18 + 59 + 90 + 131 + 142 + 153 + 164 + 275 + 886 + 597 + 208 + 619 + 930 + 1341 + 1452 + 1563 + 1674 + 2785 + 8896 + 6007", "x2": "add n relu mul relu INT+ 1 0 x_0_10", "tree": "(n add relu((relu(10) mul x_0_10)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 0 + 9 + 5 + 6 + 3 + 5 + 2 + 3 + 0 + 9 - 3 - 5 - 3 - 3 - 4 - 6 - 7 - 7 - 7 - 8 - 10 - 11 - 12 - 13 - 13 - 13 - 14 - 16", "x2": "sub INT+ 9 relu abs sub idiv x_0_2 x_0_1 add abs sub n INT+ 1 idiv x_0_1 INT+ 6", "tree": "(9 sub relu(abs(((x_0_2 idiv x_0_1) sub (abs((n sub 1)) add (x_0_1 idiv 6))))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 9 + 9 + 9 + 4 + 3 + 3 - 2 + 12 + 13 + 63 + 66 + 316 + 331 + 1579 + 1659 + 7899 + 8316 + 3 9517 + 4 1685 + 19 7695 + 20 8951 + 98 9028 + 104 7388 + 494 7912 + 525 112 + 2475 3455 + 2631 6458 + 1 2383 6925 + 1 3191 1966 + 6 1953 3754 + 6 6120 9134 + 30 9941 8807 + 33 1429 6821 + 155 586 6187", "x2": "add mul abs x_0_2 mod INT+ 5 n idiv x_0_7 INT+ 3", "tree": "((abs(x_0_2) mul (5 mod n)) add (x_0_7 idiv 3))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 7 - 9 - 7 + 4 + 6 + 4 - 7 - 9 - 7 + 4 + 6 + 4 - 7 - 9 - 7 + 4 + 6 + 4 - 7 - 9 - 7 + 4 + 6 + 4 - 7 - 9 - 7 + 4 + 6", "x2": "sub INT- 3 x_0_3", "tree": "(-3 sub x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 9 + 4 + 4 + 12 + 15 + 5 + 5 + 18 + 20 + 6 + 6 + 21 + 23 + 7 + 6 + 24 + 30 + 7 + 6 + 30 + 36 + 7 + 6 + 35 + 43 + 7 + 6 + 41", "x2": "idiv mul n INT+ 1 0 x_0_2", "tree": "((n mul 10) idiv x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 5 - 8 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1", "x2": "sign sign mul mod n sub mod relu mul x_0_2 sub n idiv x_0_1 n INT- 6 INT- 2 x_0_1", "tree": "sign(sign(((n mod ((relu((x_0_2 mul (n sub (x_0_1 idiv n)))) mod -6) sub -2)) mul x_0_1)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 3 + 6 + 9 - 8 - 8 - 4 - 9 + 4 - 1 - 7 + 10 - 7 + 1 + 5 + 29 + 19 + 15 + 4 + 5 + 14 + 13 + 54 + 29 + 22 + 53 + 16 + 12 + 22 + 70 + 35 + 19 + 41 + 14 + 13 + 37 + 84 + 55 + 2 + 74", "x2": "add relu mod INT+ 7 mod n x_0_12 abs sub mod INT- 1 x_0_3 add n sub x_0_7 x_0_10", "tree": "(relu((7 mod (n mod x_0_12))) add abs(((-1 mod x_0_3) sub (n add (x_0_7 sub x_0_10)))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 5 - 1 - 3 - 8 - 8 + 8 + 7 + 0 - 7 - 1250 - 66 - 648 - 5824 - 6272 - 7680 - 6272 + 0 - 7938 - 2 9687 5000 - 87 1200 - 9699 7824 - 82 839 2192 - 108 5728 3584 - 169 8693 1200 - 127 8484 4800 + 0 - 238 1847 7032 - 3454 8828 1250 0 0 - 330 1604 640 0 - 423 3860 373 3073 9200 - 334 1934 379 3325 3617 2544 - 603 5487 693 5786 9314 8672 - 1618 7982 1523 9722 5984 0 - 944 7540 4291 7303 912 0 + 0 - 3676 2326 1584 2946 7080 7552", "x2": "mul mul mul x_0_9 x_0_9 n idiv n INT- 2", "tree": "(((x_0_9 mul x_0_9) mul n) mul (n idiv -2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9 + 1 + 7 + 9", "x2": "idiv x_0_3 sign n", "tree": "(x_0_3 idiv sign(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 - 7 + 9 - 6 + 7 - 5 - 3 + 8 + 0 + 0 + 11 + 0 + 13 + 0 + 0 + 16 + 0 + 0 + 19 + 0 + 21 + 0 + 0 + 24 + 0 + 0 + 27 + 0 + 29 + 0 + 0 + 32 + 0 + 0 + 35", "x2": "mul abs idiv add add add INT- 8 INT+ 8 relu x_0_8 add n INT- 2 n abs n", "tree": "(abs(((((-8 add 8) add relu(x_0_8)) add (n add -2)) idiv n)) mul abs(n))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 7 + 8 + 4 + 2 + 4 - 3 + 8 - 3 + 76 + 79 + 71 + 75 + 5 + 2 + 16 + 8 + 152 + 159 + 138 + 151 - 62 - 71 - 35 - 55 + 179 + 178 + 194 + 188 - 24 - 13 - 64 - 37 + 252 + 263 + 229", "x2": "add add sub relu n abs x_0_4 sqr INT- 8 abs x_0_8", "tree": "(((relu(n) sub abs(x_0_4)) add (-8)**2) add abs(x_0_8))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 1 - 9 - 3 + 2 + 1 + 10 - 3 - 5 + 31 - 318 + 3184 - 3 1881 + 31 9118 - 319 4349 + 3197 5671 - 3 2007 2661 + 32 395 2822 - 320 7118 4795 + 3210 3511 4964 - 3 2135 2312 7040 + 32 1676 2252 9959 - 321 9940 5648 1700 + 3223 1861 5931 6713 - 3 2263 7081 8235 8577 + 32 2962 2894 2004 413 - 323 2813 9128 9738 8553 + 3236 724 8327 3992 5054 - 3 2392 6987 4452 5247 9495 + 32 4253 4952 2133 2293 8877 - 324 5738 7286 168 6687 8857 + 3249 103 2674 4065 8091 5853 - 3 2522 2050 1095 4150 9060 7645 + 32 5549 8632 6422 5651 8033 6937 - 325 8715 2177 3482 2125 4063 3539 + 3261 9998 9573 4679 8991 8786 9737", "x2": "sub INT- 1 add sub sub idiv x_0_9 add INT- 7 n abs x_0_5 mul x_0_1 INT- 1 0 add n x_0_3", "tree": "(-1 sub ((((x_0_9 idiv (-7 add n)) sub abs(x_0_5)) sub (x_0_1 mul -10)) add (n add x_0_3)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 8 - 1 + 0 + 8 - 6 + 10 - 1 - 17 - 10 - 9 - 1 - 15 + 1 - 10 - 26 - 19 - 18 - 10 - 24 - 8 - 19 - 35 - 28 - 27 - 19 - 33 - 17 - 28 - 44 - 37 - 36 - 28 - 42", "x2": "add add add INT- 9 INT- 2 x_0_7 INT+ 2", "tree": "(((-9 add -2) add x_0_7) add 2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 7 + 5 - 4 + 16 + 36 + 81 + 144 + 225 + 324 + 484 + 729 + 1024 + 1369 + 1764 + 2304 + 3025 + 3844 + 4761 + 5776 + 7056 + 8649 + 1 404 + 1 2321 + 1 4400 + 1 6900 + 1 9881 + 2 3104 + 2 6569 + 3 276 + 3 4596", "x2": "idiv sqr idiv mul sub n INT+ 1 n INT- 5 abs sign idiv relu INT+ 8 x_0_4", "tree": "(((((n sub 1) mul n) idiv -5))**2 idiv abs(sign((relu(8) idiv x_0_4))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 10 + 5 - 3 + 8 - 7 - 8 - 6 + 7 + 9 + 4 + 7 + 9 + 3 + 0 + 2 + 6 - 1 + 3 + 6 - 1 + 2 - 1 + 3 + 5 + 7 + 4 + 5 + 9 + 1 + 7 + 2 + 4 + 6 + 3 + 4", "x2": "sub add mod x_0_8 INT+ 9 mod n n sign x_0_6", "tree": "(((x_0_8 mod 9) add (n mod n)) sub sign(x_0_6))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 9 + 3 + 13 + 8 + 19 + 15 + 27 + 24 + 37 + 35 + 49 + 48 + 63 + 63 + 79 + 80 + 97 + 99 + 117 + 120 + 139 + 143 + 163 + 168 + 189 + 195 + 217 + 224", "x2": "abs add x_0_2 n", "tree": "abs((x_0_2 add n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 3 + 0 - 2 + 8 + 10 + 2 + 1 - 3 + 0 + 2 + 1 - 2 + 5 + 14 + 15 + 15 + 11 + 10 + 11 + 11 + 8 + 12 + 25 + 39 + 53 + 63 + 72 + 82 + 92 + 99 + 110 + 134 + 172 + 224 + 286", "x2": "add x_0_1 add x_0_9 mul sign sign n INT- 1", "tree": "(x_0_1 add (x_0_9 add (sign(sign(n)) mul -1)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 6 - 10 + 130 + 78 + 130 + 1690 + 1014 + 1690 + 2 1970 + 1 3182 + 2 1970 + 28 5610 + 17 1366 + 28 5610 + 371 2930 + 222 7758 + 371 2930 + 4826 8090 + 2896 854 + 4826 8090 + 6 2748 5170 + 3 7649 1102 + 6 2748 5170 + 81 5730 7210 + 48 9438 4326 + 81 5730 7210 + 1060 4499 3730 + 636 2699 6238 + 1060 4499 3730", "x2": "abs abs mul x_0_3 add INT- 6 INT- 7", "tree": "abs(abs((x_0_3 mul (-6 add -7))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 5 + 10 + 4 - 7 - 9 - 5 - 4 - 9 - 3 + 8 + 10 + 6 + 5 + 10 + 4 - 7 - 9 - 5 - 4 - 9 - 3 + 8 + 10 + 6 + 5 + 10 + 4 - 7 - 9 - 5 - 4 - 9", "x2": "add INT+ 8 sub INT- 7 x_0_6", "tree": "(8 add (-7 sub x_0_6))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 5 + 13 + 4 + 23 + 15 + 35 + 28 + 49 + 43 + 65 + 60 + 83 + 79 + 103 + 100 + 125 + 123 + 149 + 148 + 175 + 175 + 203 + 204 + 233 + 235 + 265 + 268 + 299", "x2": "add sub INT+ 3 n add n add add x_0_2 add mod sign INT+ 6 INT+ 5 sign x_0_1 n", "tree": "((3 sub n) add (n add ((x_0_2 add ((sign(6) mod 5) add sign(x_0_1))) add n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 24 + 96 + 480 + 2880 + 2 160 + 16 1280 + 145 1520 + 1451 5200 + 1 5966 7200 + 19 1600 6400 + 249 808 3200 + 3487 1316 4800 + 5 2306 9747 2000 + 83 6911 5955 2000 + 1422 7497 1238 4000 + 2 5609 4948 2291 2000 + 48 6580 4016 3532 8000 + 973 1608 327 656 0 + 2 436 3768 6868 3776 0 + 44 9600 2911 1104 3072 0 + 1034 806 6955 5399 656 0 + 2 4817 9360 6932 9577 5744 0 + 62 448 4017 3323 9439 3600 0 + 1613 1658 4450 6422 5423 3600 0 + 4 3555 4778 167 3408 6430 7200 0 + 121 9553 3784 4685 5442 60 1600 0 + 3536 7047 9749 5880 7818 1744 6400 0", "x2": "mul x_0_1 add n sign n", "tree": "(x_0_1 mul (n add sign(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 8 + 6 - 7 - 2 + 1 - 10 + 3 + 1 - 5 - 10 - 2 + 1 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1", "x2": "idiv add n add x_0_10 idiv INT- 5 add sub idiv x_0_11 relu INT+ 7 sub x_0_10 relu INT- 7 INT+ 6 n", "tree": "((n add (x_0_10 add (-5 idiv (((x_0_11 idiv relu(7)) sub (x_0_10 sub relu(-7))) add 6)))) idiv n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 7 + 6 + 5 + 8 + 8 + 0 + 2 + 3 + 50 + 37 + 26 + 65 + 65 + 1 + 5 + 10 + 2501 + 1370 + 677 + 4226 + 4226 + 2 + 26 + 101 + 625 5002 + 187 6901 + 45 8330 + 1785 9077 + 1785 9077 + 5 + 677 + 1 202 + 39 1250 5002 5 + 3 5227 5736 3802 + 2100 6638 8901", "x2": "sub sqr x_0_8 INT- 1", "tree": "((x_0_8)**2 sub -1)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 16 + 162 + 768 + 2500 + 6480 + 7203 + 1 4336 + 2 6244 + 4 5000 + 7 3205 + 11 4048 + 11 4244 + 16 6469 + 23 6250 + 32 7680 + 44 5445 + 59 4864 + 58 6444 + 76 0 + 97 2405 + 122 9844 + 153 9125 + 190 7712 + 187 5000 + 228 4880 + 276 3493", "x2": "idiv mul mul n sqr n sub n mul n abs n idiv n INT- 6", "tree": "(((n mul (n)**2) mul (n sub (n mul abs(n)))) idiv (n idiv -6))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 4 + 2 - 7 - 24 - 28 - 49 - 80 - 100 - 139 - 190 - 232 - 295 - 372 - 442 - 535 - 644 - 748 - 877 - 1024 - 1168 - 1339 - 1530 - 1720 - 1939 - 2180 - 2422 - 2695 - 2992 - 3292 - 3625", "x2": "sub sub x_0_3 n mul n n", "tree": "((x_0_3 sub n) sub (n mul n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 + 0 + 13 + 19 + 13 + 2 + 0 + 8 + 19 + 23 + 17 + 8 + 6 + 14 + 25 + 29 + 23 + 14 + 12 + 20 + 31 + 35 + 29 + 20 + 18 + 26 + 37 + 41", "x2": "relu sub n sub x_0_2 add x_0_1 mod INT+ 9 INT+ 8", "tree": "relu((n sub (x_0_2 sub (x_0_1 add (9 mod 8)))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 10 - 9 - 9 + 0 + 0 - 120 + 63 + 72 + 0 + 0 - 1320 - 756 - 936 + 0 + 0 - 2 1120 + 1 2852 + 0 + 0 + 0 - 44 3520 - 28 2744 + 0 + 0 + 0 - 1153 1520 + 763 4088 + 0 + 0 + 0 - 3 5747 7120 - 2 4429 816", "x2": "mul mul x_0_5 idiv sub n mul INT- 1 0 sign idiv sub x_0_2 INT- 8 sign INT+ 7 add x_0_1 n n", "tree": "((x_0_5 mul ((n sub (-10 mul sign(((x_0_2 sub -8) idiv sign(7))))) idiv (x_0_1 add n))) mul n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 3 - 6 - 12 - 24 - 48 - 96 - 192 - 384 - 768 - 1536 - 3072 - 6144 - 1 2288 - 2 4576 - 4 9152 - 9 8304 - 19 6608 - 39 3216 - 78 6432 - 157 2864 - 314 5728 - 629 1456 - 1258 2912", "x2": "add add idiv mod x_0_1 INT+ 8 add sub add INT+ 9 idiv mul n INT- 1 0 x_0_1 INT+ 1 sign INT+ 2 x_0_1 x_0_1", "tree": "((((x_0_1 mod 8) idiv (((9 add ((n mul -10) idiv x_0_1)) sub 1) add sign(2))) add x_0_1) add x_0_1)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 7 + 6 + 1 - 8 - 1 - 10 + 21 + 26 + 26 + 22 + 14 + 22 + 14 + 46 + 52 + 53 + 50 + 43 + 52 + 45 + 78 + 85 + 87 + 85 + 79 + 89 + 83 + 117", "x2": "idiv add n add INT+ 1 0 x_0_7 sub INT- 1 INT- 2", "tree": "((n add (10 add x_0_7)) idiv (-1 sub -2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 0 + 2 + 0 + 4 + 0 + 6 + 0 + 8 + 0 + 10 + 0 + 12 + 0 + 14 + 0 + 16 + 0 + 18 + 0 + 20 + 0 + 22", "x2": "mod add n mod add n x_0_1 INT- 2 mul relu INT+ 1 n", "tree": "((n add ((n add x_0_1) mod -2)) mod (relu(1) mul n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 1 + 1 - 5 - 8 + 1 + 0 + 0 + 3 + 1 + 0 + 11 + 12 + 2 + 0 + 15 + 10 + 11 + 1 + 19 + 14 + 9 + 10 + 0 + 18 + 13 + 8", "x2": "mod sub x_0_5 sign sign sqr add add INT- 1 INT- 3 sub abs n mul INT- 7 INT- 1 n", "tree": "((x_0_5 sub sign(sign((((-1 add -3) add (abs(n) sub (-7 mul -1))))**2))) mod n)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 4 - 4 + 3 - 6 - 3 + 10 - 1 + 6 - 33 + 10 - 19 + 6 - 33 + 10 - 19 + 6 - 33 + 10 - 19 + 6 - 33 + 10 - 19 + 6 - 33 + 10 - 19 + 6 - 33 + 10", "x2": "mul add relu idiv mul INT- 3 relu x_0_3 x_0_4 sqr sign x_0_9 x_0_4", "tree": "((relu(((-3 mul relu(x_0_3)) idiv x_0_4)) add (sign(x_0_9))**2) mul x_0_4)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 9 - 1 + 3 - 5 - 225 - 36 + 147 - 320 - 1 8225 - 3600 + 1 7787 - 4 6080 - 308 25 - 70 5600 + 400 2075 - 1179 6480 - 8 9012 7225 - 2 2861 4400 + 14 4474 9075 - 47 1859 2000 - 3925 4610 6225 - 1106 4936 9600 + 7642 7226 675 - 2 7179 899 2000 - 245 3413 1639 625 - 74 7989 7384 9600", "x2": "mul sqr n x_0_4", "tree": "((n)**2 mul x_0_4)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 36 + 81 + 144 + 225 + 324 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249 + 3600 + 3969 + 4356", "x2": "sqr add mul INT- 4 n n", "tree": "(((-4 mul n) add n))**2", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 + 1 + 3 + 4 + 5 + 6 + 7 + 8 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 26", "x2": "add idiv x_0_1 mul sign sqr n INT+ 8 n", "tree": "((x_0_1 idiv (sign((n)**2) mul 8)) add n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 0 - 5 + 304 + 2235 + 1 1494 + 6 8959 + 49 2312 + 393 8815 + 3545 1830 + 3 5452 7899 + 38 9981 6488 + 467 9782 4095 + 6083 7171 3234 + 8 5172 401 1515 + 127 7580 6023 1284 + 2044 1289 6396 2683 + 3 4750 1923 8736 5610 + 62 5503 4629 7258 1999 + 1188 4565 7964 7957 9260 + 2 3769 1315 9295 9158 5199 + 49 9151 7634 5214 2362 3258 + 1098 1338 7959 4713 1972 1275", "x2": "add INT- 5 add mul n x_0_1 sub mul abs INT+ 4 sqr sqr mod x_0_1 n x_0_1", "tree": "(-5 add ((n mul x_0_1) add ((abs(4) mul (((x_0_1 mod n))**2)**2) sub x_0_1)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 1 - 6 + 3 + 11 + 3 - 4 + 5 + 13 + 5 - 2 + 7 + 15 + 7 + 0 + 9 + 17 + 9 + 2 + 11 + 19 + 11 + 4 + 13", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 1 + 10 - 10 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv idiv x_0_4 INT+ 3 n", "tree": "((x_0_4 idiv 3) idiv n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "idiv n INT- 7", "tree": "(n idiv -7)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 9 + 8 + 0 + 1 + 5 + 5 - 8 - 5 + 4 + 1 + 5 + 175 + 195 + 233 + 257 + 295 + 334 + 377 + 407 + 440 + 489 + 535 + 588 + 820 + 896 + 976 + 1056 + 1151 + 1251 + 1342 + 1455 + 1556 + 1670", "x2": "add add relu mod x_0_11 relu n sqr n x_0_12", "tree": "((relu((x_0_11 mod relu(n))) add (n)**2) add x_0_12)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 16", "x2": "sqr idiv abs n INT- 7", "tree": "((abs(n) idiv -7))**2", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 + 2 - 8 + 6 - 4 + 1 + 9 + 106 + 98 + 108 + 94 + 104 + 99 + 91 - 6 + 2 - 8 + 6 - 4 + 1 + 9 + 106 + 98 + 108 + 94 + 104 + 99 + 91 - 6", "x2": "sub sqr INT- 1 0 x_0_7", "tree": "((-10)**2 sub x_0_7)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 4 + 7 + 9 - 7 + 8 + 6 + 5 + 3 + 1 + 4 + 0 + 7 + 1 + 2 + 0 + 0 + 3 + 0 + 4 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0", "x2": "relu mod sub sqr sub INT- 7 n add INT+ 9 relu add n INT+ 3 x_0_7", "tree": "relu(((((-7 sub n))**2 sub (9 add relu((n add 3)))) mod x_0_7))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 9 - 9 - 9 - 8 + 4 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "abs mul sqr n sign x_0_5", "tree": "abs(((n)**2 mul sign(x_0_5)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 6 - 8 + 21 + 26 - 31 - 40 + 75 + 94 - 135 - 172 + 287 + 362 - 555 - 704 + 1131 + 1430 - 2239 - 2836 + 4503 + 5698 - 8979 - 1 1368 + 1 7987 + 2 2766", "x2": "sub add mul sign n INT- 6 add sub n x_0_2 INT+ 3 add INT- 9 x_0_2", "tree": "(((sign(n) mul -6) add ((n sub x_0_2) add 3)) sub (-9 add x_0_2))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 3 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275", "x2": "relu add n relu x_0_1", "tree": "relu((n add relu(x_0_1)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 + 1 + 9 + 1 + 10 + 3 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign mul x_0_6 INT+ 8", "tree": "sign((x_0_6 mul 8))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 2 + 2 - 8 - 4 - 10 + 0 + 4 + 6 + 11 + 2 + 7 + 2 + 13 + 18 + 21 + 27 + 19 + 25 + 21 + 33 + 39 + 43 + 50 + 43 + 50 + 47 + 60 + 67 + 72", "x2": "add x_0_7 n", "tree": "(x_0_7 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 9 + 8 - 7 - 5 - 7 - 4 - 10 - 5 + 4 - 6 - 8 - 6 - 10 - 4 - 8 + 9 - 7 - 5 - 7 - 4 - 10 - 5 + 4 - 6 - 8 - 6 - 10 - 4 - 8", "x2": "idiv add sqr INT+ 6 sub sign add n x_0_3 relu mod x_0_1 idiv sign x_0_6 n x_0_7", "tree": "(((6)**2 add (sign((n add x_0_3)) sub relu((x_0_1 mod (sign(x_0_6) idiv n))))) idiv x_0_7)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 4 - 8 + 10 + 10 + 1 + 18 + 19 + 12 + 30 + 32 + 26 + 45 + 48 + 43 + 63 + 68 + 64 + 85 + 91 + 88 + 110 + 117 + 115 + 139", "x2": "abs sub idiv abs sub sub x_0_2 n x_0_2 INT- 8 relu add x_0_3 n", "tree": "abs(((abs(((x_0_2 sub n) sub x_0_2)) idiv -8) sub relu((x_0_3 add n))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484", "x2": "mul sub mod n n n n", "tree": "(((n mod n) sub n) mul n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 6 - 4 + 3 - 5 + 22 - 163 + 22 - 39 + 27 - 1 - 21 + 96 - 794 + 442 - 1371 + 5164 - 1 402 + 4 8447 - 7 4477 + 35 3744 - 173 7949 + 1314 5466 - 994 4307 + 2234 1905 - 9675 9775", "x2": "sub mod relu sqr x_0_3 mul add INT- 8 relu INT- 2 x_0_1 x_0_4", "tree": "((relu((x_0_3)**2) mod ((-8 add relu(-2)) mul x_0_1)) sub x_0_4)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 7 + 9 + 1 - 14 - 5 + 11 + 3 - 12 - 3 + 13 + 5 - 10 - 1 + 15 + 7 - 8 + 1 + 17 + 9 - 6 + 3 + 19 + 11 - 4", "x2": "add sub add INT- 9 n x_0_2 relu idiv abs abs mod n INT+ 5 INT+ 5", "tree": "(((-9 add n) sub x_0_2) add relu((abs(abs((n mod 5))) idiv 5)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 - 8 - 10 + 5 + 1 + 10 + 8 - 6 + 1 + 8 - 2 - 4 + 11 + 7 + 16 + 14 + 0 + 7 + 14 + 4 + 2 + 17 + 13 + 22 + 20 + 6 + 13 + 20 + 10 + 8", "x2": "sub x_0_9 INT- 6", "tree": "(x_0_9 sub -6)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 9 + 4 - 7 + 9 + 4 + 2 + 2 + 8 + 9 + 4 - 7 + 9 + 4 + 2 + 2 + 8 + 9 + 4 - 7 + 9 + 4 + 2 + 2 + 8 + 9 + 4 - 7 + 9 + 4", "x2": "add idiv n sqr n x_0_8", "tree": "((n idiv (n)**2) add x_0_8)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 1 + 3 - 72 - 82 - 78 - 153 - 163 - 159 - 234 - 244 - 240 - 315 - 325 - 321 - 396 - 406 - 402 - 477 - 487 - 483 - 558 - 568 - 564 - 639", "x2": "sub x_0_3 sqr INT+ 9", "tree": "(x_0_3 sub (9)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 + 4 + 147 + 267 + 554 + 850 + 1345 + 1881 + 2648 + 3488 + 4591 + 5799 + 7302 + 8942 + 1 909 + 1 3045 + 1 5540 + 1 8236 + 2 1323 + 2 4643 + 2 8386 + 3 2394 + 3 6857 + 4 1617", "x2": "relu add n sub sub x_0_2 sub n sqr abs mul relu n INT+ 4 INT- 7", "tree": "relu((n add ((x_0_2 sub (n sub (abs((relu(n) mul 4)))**2)) sub -7)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 + 10 + 8 + 5 + 5 + 0 + 588 + 3 8272 + 310 518 + 3 1005 2400 + 375 1634 521 + 5 4023 5311 9840 + 912 9976 8372 1097 + 17 8947 5466 1703 6736 + 4026 3198 585 9505 5825 + 103 737 8712 6045 1746 4832 + 2 9788 3244 9503 9855 9897 497 + 965 1417 1393 5102 5835 9207 6780 + 34 8416 1587 9517 2097 54 8997 9637 + 1 3936 6463 5341 7411 8025 6340 1418 5200 + 614 6061 423 1163 4006 1563 1924 5766 4553 + 29 7469 3544 6230 634 9535 6514 1794 1136 4684 + 1 5736 1288 5156 6263 5557 1526 5267 6288 2053 4985 + 906 4010 2187 285 5515 5580 1192 2029 3628 5642 2848 + 56 6500 6386 7763 8873 6932 6162 7503 4373 441 3003 625 + 3 8295 4431 7502 3861 5881 2475 2478 485 2895 9332 8194 1004 + 2791 7378 748 925 257 1459 6171 9378 5265 9972 1534 1984 7281", "x2": "mul n mul n sub x_0_5 sub idiv INT- 9 n x_0_1", "tree": "(n mul (n mul (x_0_5 sub ((-9 idiv n) sub x_0_1))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 8 + 8 + 0 + 40 + 48 + 0 + 320 + 432 + 0 + 3520 + 5184 + 0 + 4 9280 + 7 7760 + 0 + 83 7760 + 139 9680 + 0 + 1675 5200 + 2939 3280 + 0 + 3 8536 9600 + 7 543 8720 + 0", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 + 8 - 7 + 5 + 7 + 8 - 8 - 7 - 4 + 1 - 8 + 1 + 2 + 5 - 6 - 3 - 3 + 1 - 2 + 1 + 1 + 1 - 3 + 1 - 4 + 1 - 2 + 1 + 0 + 1", "x2": "add sign relu x_0_7 mod n sub x_0_8 INT+ 3", "tree": "(sign(relu(x_0_7)) add (n mod (x_0_8 sub 3)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 1 + 11 + 113 + 1032 + 9304 + 8 3753 + 75 3795 + 678 4174 + 6105 7586 + 5 4951 8295 + 49 4566 4677 + 445 1098 2116 + 4005 9883 9068 + 3 6053 8955 1637 + 32 4485 596 4759 + 292 365 5368 2858 + 2628 3289 8314 5750 + 2 3654 9608 4831 1779 + 21 2894 6476 3480 6041 + 191 6051 8287 1325 4400 + 1724 4466 4584 1928 9632 + 1 5520 198 1257 7360 6721 + 13 9680 1783 1319 6246 523", "x2": "add INT+ 1 0 add sign sub x_0_1 INT+ 9 add n mul relu x_0_1 INT+ 9", "tree": "(10 add (sign((x_0_1 sub 9)) add (n add (relu(x_0_1) mul 9))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 - 4 - 7 - 6 + 5 - 4 + 8 + 1 + 3 + 5 + 4 - 3 - 1337 + 3038 + 471 + 1402 + 2565 + 2238 - 1799 - 88 2400 + 216 9162 + 36 2700 + 116 873 + 228 1611 + 212 5975 - 39 3418 - 9 5233 1793 + 24 9379 3966 + 4 4750 8925 + 14 9752 6020 + 46 9955 4849 + 30 6140 3840 + 7861 5784 8711 - 1 1007 7756 8284", "x2": "add add mod mul INT- 6 n mul x_0_11 x_0_12 n mul n mul x_0_7 sub sub n INT- 5 INT- 8", "tree": "((((-6 mul n) mod (x_0_11 mul x_0_12)) add n) add (n mul (x_0_7 mul ((n sub -5) sub -8))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 3 - 10 - 3 - 5 + 2 + 9 + 9 - 20 - 76 - 52 - 64 - 40 - 16 - 20 - 140 - 368 - 276 - 328 - 236 - 144 - 164 - 648 - 1564 - 1200 - 1412 - 1048 - 684 - 768 - 2708", "x2": "mul INT+ 4 sub x_0_7 n", "tree": "(4 mul (x_0_7 sub n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 1 - 3 + 0 - 2 + 1 - 1 + 2 + 0 + 3 + 1 + 4 + 2 + 5 + 3 + 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8", "x2": "add x_0_2 abs sign sub sub sub relu x_0_2 n mul n relu n n", "tree": "(x_0_2 add abs(sign((((relu(x_0_2) sub n) sub (n mul relu(n))) sub n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 9 + 9 + 5 + 5 + 5 - 4 + 1 - 8 + 0 + 1 + 6 + 4 + 2 + 0 + 8 + 6 + 6 + 0 + 6 + 15 + 2 + 12 + 0 + 23 + 10 + 9 + 0 + 7 + 0 + 12", "x2": "mod sub sqr n mul x_0_9 INT- 6 n", "tree": "(((n)**2 sub (x_0_9 mul -6)) mod n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 6 - 9 - 7 - 7 + 19 + 7 + 2 - 3 + 20 + 7 + 83 + 61 + 69 + 43 + 108 + 77 + 78 + 47 + 109 + 77 + 159 + 111 + 158 + 113 + 184 + 127", "x2": "add x_0_4 relu sqr mod n INT- 1 0", "tree": "(x_0_4 add relu(((n mod -10))**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 9 + 3 + 4 + 7 + 3 + 14 - 20 + 4 + 6 + 12 + 4 + 25 - 43 + 5 + 9 + 21 + 5 + 46 - 90 + 6 + 14 + 38 + 6 + 87 - 185 + 7 + 23", "x2": "add add mul abs INT- 2 x_0_6 idiv n INT- 6 mod add n INT- 9 INT+ 1", "tree": "(((abs(-2) mul x_0_6) add (n idiv -6)) add ((n add -9) mod 1))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 9 - 9 + 5 + 7 - 1 - 9 + 25 + 81 + 81 + 25 + 49 + 1 + 81 + 625 + 6561 + 6561 + 625 + 2401 + 1 + 6561 + 39 625 + 4304 6721 + 4304 6721 + 39 625 + 576 4801 + 1 + 4304 6721 + 1525 8789 625", "x2": "sqr x_0_7", "tree": "(x_0_7)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 4 + 3 + 3 - 10 - 322 - 8 - 8 - 739 - 2 2578 - 597 - 596 - 5 1765 - 158 494 - 4 1823 - 4 1752 - 362 3581 - 1 1063 4610 - 292 7639 - 292 2668 - 2 5365 697 - 77 4442 2726 - 2 493 4755 - 2 458 6784 - 177 5554 8813 - 5421 959 842 - 143 4543 2871", "x2": "add INT- 8 mod n mod sign n mul INT+ 1 0 add mul x_0_4 abs abs INT- 7 INT- 4", "tree": "(-8 add (n mod (sign(n) mod (10 mul ((x_0_4 mul abs(abs(-7))) add -4)))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 8 - 2 + 5 - 9 - 4 - 6 - 9 - 9 - 4 - 10 - 10 - 10 - 5 - 15 - 16 - 17 - 13 - 19 - 17 - 25 - 20 - 21 - 20 - 27 - 20", "x2": "sub add mod x_0_4 n mod x_0_1 INT- 9 n", "tree": "(((x_0_4 mod n) add (x_0_1 mod -9)) sub n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 9 + 2 - 6 + 6 - 1 + 12 + 6 + 20 + 15 + 30 + 26 + 42 + 39 + 56 + 54 + 72 + 71 + 90 + 90 + 110 + 111 + 132 + 134 + 156", "x2": "idiv add n x_0_2 sign idiv INT+ 8 n", "tree": "((n add x_0_2) idiv sign((8 idiv n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 0 + 12 + 5 + 18 + 35 + 56 + 0 + 10 + 22 + 36 + 52 + 70 + 90 + 112 + 136 + 162 + 190 + 220 + 252 + 286", "x2": "mul relu sign n relu mul relu n mul mod INT- 9 n sign abs n", "tree": "(relu(sign(n)) mul relu((relu(n) mul ((-9 mod n) mul sign(abs(n))))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 4 + 7 + 1 + 13 + 8 + 21 + 17 + 31 + 28 + 43 + 41 + 57 + 56 + 73 + 73 + 91 + 92 + 111 + 113 + 133 + 136 + 157 + 161", "x2": "relu add x_0_2 add n sign relu idiv x_0_1 abs INT- 7", "tree": "relu((x_0_2 add (n add sign(relu((x_0_1 idiv abs(-7)))))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 10 - 3 - 4 + 3 + 9 + 7 - 3 + 0 + 4 - 7 + 33 + 36 + 39 + 84 + 180 + 160 + 51 + 54 + 133 + 60 + 315 + 374 + 437 + 360 + 200 + 182 + 0 + 28 + 580 + 90 + 248 + 800", "x2": "mul n mod add INT+ 3 relu x_0_10 n", "tree": "(n mul ((3 add relu(x_0_10)) mod n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 1 + 0 - 9 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign idiv x_0_2 mod idiv sign idiv sub x_0_3 INT- 1 INT- 4 x_0_4 INT- 1 0", "tree": "sign((x_0_2 idiv ((sign(((x_0_3 sub -1) idiv -4)) idiv x_0_4) mod -10)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 - 4 - 8 + 4 + 10 - 2 - 2 - 2 + 5 + 5 - 2 - 2 - 2 + 5 + 5 - 2 - 2 - 2 + 5 + 5 - 2 - 2 - 2 + 5 + 5 - 2 - 2", "x2": "sub INT+ 5 sub INT+ 7 mod mul INT+ 7 relu sign x_0_5 n", "tree": "(5 sub (7 sub ((7 mul relu(sign(x_0_5))) mod n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 10 - 5 + 0 + 4 + 2 - 8 + 384 + 810 - 500 + 0 + 576 + 338 - 1568 + 8 6400 + 20 7360 - 14 4500 + 0 + 20 7936 + 13 5200 - 69 1488 + 4181 7600 + 1 969 3440 - 8323 2000 + 0 + 1 4056 4736 + 9856 800 - 5 4212 6592 + 351 6860 1600", "x2": "mul n mul x_0_7 sub add n relu n n", "tree": "(n mul (x_0_7 mul ((n add relu(n)) sub n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 4 + 8 - 126 - 168 - 3510 - 252 - 252 - 240 - 216 - 180 - 132 - 72 + 0 - 84 - 630 - 288 - 408 - 540 - 684 - 840 - 1008 - 1188 - 1380 - 1584", "x2": "mul abs add relu mod x_0_2 sub sub n x_0_2 INT+ 6 INT- 7 mul INT- 6 relu abs n", "tree": "(abs((relu((x_0_2 mod ((n sub x_0_2) sub 6))) add -7)) mul (-6 mul relu(abs(n))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 - 5 - 6 + 2 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul n abs sub mod mul sqr idiv relu INT- 9 sqr x_0_4 x_0_4 INT- 8 n", "tree": "(n mul abs((((((relu(-9) idiv (x_0_4)**2))**2 mul x_0_4) mod -8) sub n)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 - 1 + 0 - 2 + 1 + 0 + 0 - 3 + 2 - 1 + 0 - 4 + 3 - 2", "x2": "sub mul sign x_0_1 mod n idiv n INT- 5 idiv INT+ 6 INT+ 7", "tree": "((sign(x_0_1) mul (n mod (n idiv -5))) sub (6 idiv 7))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 5 + 0 + 10 + 0 - 2 + 1 + 2 + 0 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 6", "x2": "idiv add sign relu sqr x_0_1 abs sub n relu x_0_5 INT+ 4", "tree": "((sign(relu((x_0_1)**2)) add abs((n sub relu(x_0_5)))) idiv 4)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 5 + 9 - 8 - 8 - 3 + 10 + 7 - 4 - 9 + 7 + 10 + 7 + 92 + 95 + 7 + 10 + 7 + 24 + 95 + 7 + 10 + 7 + 24 + 95 + 7 + 10 + 7 + 24 + 95 + 7 + 10 + 7", "x2": "abs relu mod x_0_5 abs mul x_0_10 relu add n INT- 1", "tree": "abs(relu((x_0_5 mod abs((x_0_10 mul relu((n add -1)))))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 16 + 16 + 9 + 25 + 1 + 36 + 64 + 64 + 81 + 121 + 64 + 144 + 196 + 64 + 225 + 289 + 289 + 324 + 400 + 289 + 441 + 529", "x2": "sqr sub mod mul INT+ 1 0 x_0_1 INT+ 9 n", "tree": "((((10 mul x_0_1) mod 9) sub n))**2", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 1 + 0 - 9 + 2 + 10 - 8 + 7 + 0 + 15 + 6 + 9 + 33 + 0 + 43 + 0 + 28 + 6 + 0 + 48 + 0 + 94 + 0 + 77 + 15 + 0 + 72 + 0 + 160 + 0", "x2": "relu add add x_0_7 sub INT+ 9 x_0_6 sub x_0_2 x_0_4", "tree": "relu(((x_0_7 add (9 sub x_0_6)) add (x_0_2 sub x_0_4)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 - 3 + 9 - 4 - 3 - 9 + 8 - 7 + 8 - 7 + 6 - 5 + 6 - 7 + 8 - 9 + 10 - 11 + 12 - 11 + 12 - 11 + 12 - 13 + 14 - 15 + 16 - 15", "x2": "sub sign mul add n add x_0_2 x_0_4 x_0_6 x_0_1", "tree": "(sign(((n add (x_0_2 add x_0_4)) mul x_0_6)) sub x_0_1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 4 - 2 - 4 - 4 - 6 - 8 - 12 - 18 - 28 - 44 - 70 - 112 - 180 - 290 - 468 - 756 - 1222 - 1976 - 3196 - 5170 - 8364 - 1 3532 - 2 1894", "x2": "mod INT+ 1 add x_0_1 mod sign abs n x_0_2", "tree": "(1 mod (x_0_1 add (sign(abs(n)) mod x_0_2)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 16 + 48 + 96 + 160 + 240 + 336 + 448 + 576 + 720 + 880 + 1056 + 1248 + 1456 + 1680 + 1920 + 2176 + 2448 + 2736 + 3040 + 3360 + 3696 + 4048", "x2": "add relu idiv add n sqr sign INT+ 3 add INT+ 6 x_0_1 mul sub n mul n n INT- 8", "tree": "(relu(((n add (sign(3))**2) idiv (6 add x_0_1))) add ((n sub (n mul n)) mul -8))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 4 + 0 + 16 + 100 + 108 + 98 + 64 + 0 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249 + 3600 + 3969 + 4356", "x2": "mul sqr n mod INT+ 9 n", "tree": "((n)**2 mul (9 mod n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 4 + 7 - 3 + 8 - 2 + 9 - 1 + 10 + 0 + 11 + 1 + 12 + 2 + 13 + 3 + 14 + 4 + 15 + 5 + 16 + 6 + 17", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 8 - 1 - 4 + 2 - 6 + 10 + 9 - 1 + 0 + 1 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 0 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "mod mod mul INT- 3 add x_0_8 sub sign x_0_9 mod x_0_5 n n abs INT+ 3", "tree": "(((-3 mul (x_0_8 add (sign(x_0_9) sub (x_0_5 mod n)))) mod n) mod abs(3))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 6 + 1 + 9 + 4 + 3 + 4 + 14 + 9 - 1 + 6 + 27 + 16 - 14 + 5 + 57 + 28 - 53 - 4 + 130 + 53 - 161 - 34 + 315 + 112 - 450", "x2": "sub x_0_4 sub x_0_2 n", "tree": "(x_0_4 sub (x_0_2 sub n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 + 1 - 5 - 2 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 24 - 26 - 25 - 27 - 26 - 46 - 27 - 47 - 28 - 48 - 29", "x2": "add mod mod sign mul mod x_0_3 INT+ 5 idiv n INT- 7 mul n sqr x_0_1 n sub x_0_2 n", "tree": "(((sign(((x_0_3 mod 5) mul (n idiv -7))) mod (n mul (x_0_1)**2)) mod n) add (x_0_2 sub n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 9 + 47 - 124 + 305 - 513 + 815 - 994 + 1182 - 1109 + 1080 - 793 + 695 - 372 + 357 - 87 + 185 + 47 + 131 + 101 + 127 + 127 + 138 + 145", "x2": "add idiv mul sub add mul n n sub idiv sign n INT- 4 x_0_1 n INT+ 9 n INT+ 2", "tree": "((((((n mul n) add ((sign(n) idiv -4) sub x_0_1)) sub n) mul 9) idiv n) add 2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 8 - 2 - 3 + 2 - 5 - 4 + 3 - 3 - 8 - 3 - 11 - 9 - 5 - 20 - 12 - 3 - 20 - 7 + 0 - 21 + 7 - 6 - 24 + 1 - 5 - 30 - 5 - 18 - 24", "x2": "add sub x_0_3 INT+ 6 mul idiv x_0_3 abs n x_0_7", "tree": "((x_0_3 sub 6) add ((x_0_3 idiv abs(n)) mul x_0_7))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 10 - 1 - 1 + 10 - 1 - 9 - 10 + 2 + 10 - 10 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "idiv n idiv sub INT- 9 abs mul idiv sub x_0_11 n n relu sign sub x_0_3 x_0_2 INT- 1", "tree": "(n idiv ((-9 sub abs((((x_0_11 sub n) idiv n) mul relu(sign((x_0_3 sub x_0_2)))))) idiv -1))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 5 + 10 + 8 + 7 + 6 + 8 + 3 + 9 + 6 + 0 + 3 + 9 + 6 + 0 + 3 + 9 + 6 + 0 + 3 + 9 + 6 + 0 + 3 + 9", "x2": "sub INT+ 9 mod x_0_2 n", "tree": "(9 sub (x_0_2 mod n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 + 9 + 5 - 3 + 10 - 5 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1", "x2": "idiv x_0_3 add add mod x_0_6 sqr sqr add n add n n n x_0_1", "tree": "(x_0_3 idiv (((x_0_6 mod (((n add (n add n)))**2)**2) add n) add x_0_1))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 7 + 4 - 7 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 9 - 5 + 5 - 5 + 4 + 5 + 7 - 10 + 9 + 6 + 7 + 8 + 11 + 7 + 7 + 7 + 6 + 6 + 10 + 9 + 12 + 18 + 7 + 7 + 8 + 8 + 8 + 8 + 11 + 14", "x2": "add sub INT+ 1 0 mod x_0_9 sub mod sub add x_0_9 INT- 4 x_0_8 n n INT- 4", "tree": "((10 sub (x_0_9 mod ((((x_0_9 add -4) sub x_0_8) mod n) sub n))) add -4)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 2 + 15 + 33 + 52 + 72 + 93 + 115 + 138 + 162 + 187 + 213 + 240 + 268 + 297 + 327 + 358 + 390 + 423 + 457 + 492 + 528 + 565 + 603", "x2": "add INT+ 7 add relu INT+ 8 add n x_0_1", "tree": "(7 add (relu(8) add (n add x_0_1)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 2 - 7 - 3 - 23 - 78 - 373 - 1748 - 8348 - 3 9873 - 19 623 - 91 1373 - 435 7498 - 2083 4373 - 9961 4998 - 4 7628 7498 - 22 7726 5623 - 108 8825 3123 - 520 5982 8123 - 2489 1281 2498 - 1 1901 2279 6873 - 5 6903 1484 3748 - 27 2070 1015 6248 - 130 844 3679 6873 - 621 9706 976 5623", "x2": "sub mul sub x_0_3 x_0_1 INT- 5 INT- 2", "tree": "(((x_0_3 sub x_0_1) mul -5) sub -2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 9 - 8 + 10 + 8 - 1 + 1 + 0 + 0 + 10 + 8 + 0 + 1 + 0 + 0 + 10 + 8 + 0 + 1 + 0 + 0 + 10 + 8 + 0 + 1 + 0 + 0 + 10", "x2": "relu add x_0_6 sub x_0_5 x_0_5", "tree": "relu((x_0_6 add (x_0_5 sub x_0_5)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 4 + 4 + 4 + 9 + 10 + 9 + 10 + 9 + 10 + 20 + 22 + 20 + 22 + 20 + 22 + 20 + 22 + 20 + 22 + 41 + 22 + 41 + 46", "x2": "add n mod x_0_2 n", "tree": "(n add (x_0_2 mod n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 5 - 9 - 10 - 5 + 1 - 360 - 819 - 1040 - 585 + 140 - 5 5440 - 13 7592 - 20 2800 - 12 2850 + 3 1500 - 1419 2640 - 3742 5024 - 5840 6400 - 3968 550 + 1071 0 - 50 6677 2480 - 148 2030 9504 - 241 8024 9600 - 171 4199 7600 + 50 8725 0 - 2 5029 8560 5120 - 7 6028 1877 5552", "x2": "mul mul n add INT+ 4 abs add add INT- 1 0 INT+ 4 idiv abs n INT- 3 x_0_5", "tree": "((n mul (4 add abs(((-10 add 4) add (abs(n) idiv -3))))) mul x_0_5)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 2 + 10 + 1 - 40 + 250 + 30 - 1400 + 1 0 + 1350 - 7 0 + 55 0 + 8 1000 - 455 0 + 3850 0 + 607 5000 - 3 6400 0 + 32 7250 0 + 5 4675 0 - 345 8000 0 + 3272 5000 0 + 574 875 0 - 3 8038 0 0 + 37 6337 5000 0 + 6 8890 5000 0 - 475 4750 0 0", "x2": "mul mul x_0_3 INT+ 5 n", "tree": "((x_0_3 mul 5) mul n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 7 - 8 - 10 - 4 + 10 + 1 - 3 + 8 + 12 + 42 - 48 - 60 - 24 + 60 + 6 - 18 + 48 + 72 + 252 - 288 - 360 - 144 + 360 + 36 - 108 + 288 + 432 + 1512 - 1728 - 2160", "x2": "mul abs sub INT- 1 INT- 7 x_0_9", "tree": "(abs((-1 sub -7)) mul x_0_9)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 5 - 2 - 25 - 10 - 125 - 50 - 625 - 250 - 3125 - 1250 - 1 5625 - 6250 - 7 8125 - 3 1250 - 39 625 - 15 6250 - 195 3125 - 78 1250 - 976 5625 - 390 6250 - 4882 8125 - 1953 1250 - 2 4414 625 - 9765 6250", "x2": "mul add INT+ 4 sign n x_0_2", "tree": "((4 add sign(n)) mul x_0_2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 4 - 9 + 2 + 7 + 8 + 63 + 128 + 315 + 0 + 315 + 0 + 3 8115 + 0 + 26 6805 + 0 + 186 7635 + 0 + 1307 3445 + 0 + 9151 4115 + 0 + 6 4059 8805 + 0 + 44 8419 1635 + 0 + 313 8934 1445 + 0", "x2": "abs mul x_0_2 add x_0_5 sub INT- 6 sign x_0_4", "tree": "abs((x_0_2 mul (x_0_5 add (-6 sub sign(x_0_4)))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 5 - 32 - 81 - 128 - 125 + 0 + 343 + 1024 + 2187 + 4000 + 6655 + 1 368 + 1 5379 + 2 1952 + 3 375 + 4 960 + 5 4043 + 6 9984 + 8 9167 + 11 2000 + 13 8915 + 17 368", "x2": "mul mul n mul n n sub n INT+ 6", "tree": "((n mul (n mul n)) mul (n sub 6))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 9 + 1 + 4 + 11 + 4 + 8 + 16 + 10 + 15 + 24 + 19 + 25 + 35 + 31 + 38 + 49 + 46 + 54 + 66 + 64 + 73 + 86 + 85 + 95", "x2": "add relu add x_0_3 n INT- 3", "tree": "(relu((x_0_3 add n)) add -3)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 + 6 - 6 - 5 + 9 - 2 + 6 + 43 + 21 + 16 + 54 + 55 + 39 + 1778 + 348 + 1577 + 2529 + 330 + 1356 + 315 9377 + 11 7219 + 67 2778 + 627 7266 + 372 3255 + 455 5749 + 9 9816 5863 2096 + 137 2946 946 + 9 5290 3211 8067", "x2": "abs sub x_0_2 sub relu sqr x_0_6 x_0_4", "tree": "abs((x_0_2 sub (relu((x_0_6)**2) sub x_0_4)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 - 9 - 8 + 4 - 1 + 1 + 2 + 0 + 6 - 8 + 11 + 1 + 19 - 3 + 20 - 4 + 18 - 4 + 12 + 4 + 1 + 3 - 18 + 6 - 38 + 10 - 56 + 14 - 68 + 10 - 69 + 7", "x2": "sub x_0_2 x_0_10", "tree": "(x_0_2 sub x_0_10)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 8 - 10 - 8 + 7 + 6 + 4 + 40 + 50 + 40 + 427 + 126 - 4 + 1 9000 + 1 3400 + 1 8760 + 291 6837 - 630 + 20 + 65 246 5000 - 6 7000 + 74 241 4600 + 187 1745 6493 9593 + 3150 + 134 9500 + 10 891 7335 211 2367 5000 + 33 5000 + 14 7948 5008 2232 9725 7000 + 98 960 8970 3653 2667 7578 8670 6707", "x2": "mul mod idiv INT- 5 sign abs sign relu n sub mul n x_0_6 x_0_4 x_0_6", "tree": "(((-5 idiv sign(abs(sign(relu(n))))) mod ((n mul x_0_6) sub x_0_4)) mul x_0_6)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 87 + 94 + 111 + 148 + 210 + 300 + 427 + 592 + 810 + 1080 + 1408 + 1812 + 2275 + 2828 + 3450 + 4176 + 4998 + 5904 + 6935 + 8080 + 9345 + 1 714", "x2": "mul n add sqr n idiv sub sqr INT- 9 INT- 5 n", "tree": "(n mul ((n)**2 add (((-9)**2 sub -5) idiv n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 2 + 4 - 1 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14 + 9", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 + 3 + 6 + 5 + 0 + 0 - 2 - 1 + 0 - 2 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 2 + 0 - 4 - 3 - 2 + 0 + 0 - 4", "x2": "mod n sub sign x_0_4 sqr INT+ 2", "tree": "(n mod (sign(x_0_4) sub (2)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 + 6 - 9 + 4 - 5 + 6 - 14 + 16 - 18 + 10 - 11 + 12 - 26 + 28 - 30 + 16 - 17 + 18 - 38 + 40 - 42 + 22 - 23 + 24", "x2": "mul idiv idiv x_0_1 sign add sign add x_0_1 add n x_0_1 x_0_1 x_0_2 n", "tree": "(((x_0_1 idiv sign((sign((x_0_1 add (n add x_0_1))) add x_0_1))) idiv x_0_2) mul n)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 + 0 + 8 - 3 - 10 - 1 - 7 + 6 - 19 - 11 - 18 - 6 - 32 - 25 - 33 - 22 - 49 - 43 - 52 - 42 - 70 - 65 - 75 - 66 - 95 - 91 - 102 - 94 - 124 - 121", "x2": "add x_0_4 idiv n sign idiv INT+ 5 idiv idiv mod x_0_8 x_0_6 INT- 4 sign x_0_6", "tree": "(x_0_4 add (n idiv sign((5 idiv (((x_0_8 mod x_0_6) idiv -4) idiv sign(x_0_6))))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 2 + 8 - 10 + 2 + 3 + 2 - 8 + 8 - 10 + 0 + 11 - 13 - 14 + 14 - 16 + 0 + 0 - 19 - 20 + 20 - 22 - 23 + 0 + 0 - 26 + 0 + 0 - 29", "x2": "idiv relu mod mod x_0_7 INT- 1 0 relu sqr n idiv n sign add mod n INT- 6 x_0_6", "tree": "(relu(((x_0_7 mod -10) mod relu((n)**2))) idiv (n idiv sign(((n mod -6) add x_0_6))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 4 + 36 - 64 + 900 - 2304 + 4 4100 - 14 7456 + 357 2100 - 1474 5600 + 4 3222 4100 - 21 2336 6400 + 730 4587 2900 - 4161 7981 4400 + 16 4353 2140 2500 - 106 5420 3248 6400 + 4749 8078 8532 2500 - 3 4519 6185 2559 3600 + 171 4680 6466 142 2500 - 1380 7847 4102 3744 0 + 7 5617 4165 1512 2732 2500 - 66 8299 8146 5549 2096 0 + 4000 1613 3364 9992 5360 2500 - 3 8494 693 2415 6344 7296 0", "x2": "sub mul sqr n x_0_2 mul INT- 9 relu sub INT- 6 n", "tree": "(((n)**2 mul x_0_2) sub (-9 mul relu((-6 sub n))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 10 + 1 + 0 + 75 - 360 + 49 + 0 + 6075 - 3 6000 + 5929 + 0 + 102 6675 - 705 6000 + 133 4025 + 0 + 2 9670 9075 - 22 8614 4000 + 4 8158 3025 + 0 + 1308 4870 2075 - 1 1064 9369 6000 + 2547 5742 225 + 0 + 81 7804 3879 6875 - 747 9897 3849 6000", "x2": "mul x_0_4 sqr n", "tree": "(x_0_4 mul (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 - 2 - 8 - 6 + 50 + 10 + 40 + 30 + 250 + 50 + 200 + 150 + 1250 + 250 + 1000 + 750 + 6250 + 1250 + 5000 + 3750 + 3 1250 + 6250 + 2 5000 + 1 8750 + 15 6250 + 3 1250", "x2": "mul INT+ 5 abs x_0_4", "tree": "(5 mul abs(x_0_4))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 5 - 3 + 10 + 2 - 6 + 5 - 9 - 7 + 4 + 126 + 141 + 26 + 198 + 219 + 54 + 280 - 7 + 53 + 526 + 582 + 510 + 727 + 795 + 679 + 956 + 722 + 102 + 1367 + 1482 + 1471 + 1751", "x2": "add x_0_9 sqr abs mod relu n add add idiv INT+ 1 x_0_7 x_0_10 n", "tree": "(x_0_9 add (abs((relu(n) mod (((1 idiv x_0_7) add x_0_10) add n))))**2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 8 - 10 + 8 + 4 - 9 - 7 + 2 - 6 + 0 - 4 + 4 - 1 - 7 - 4 - 6 + 0 - 4 - 12 - 1 - 7 - 4 - 6 + 0 - 4 - 12 - 1 - 7 - 4 - 6 + 0 - 4 - 12 - 1", "x2": "mod x_0_7 sub x_0_11 n", "tree": "(x_0_7 mod (x_0_11 sub n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 4 + 9 - 9 + 5 - 6 - 7 - 11 - 10 - 27 - 30 - 44 - 59 - 78 - 96 - 131 - 169 - 221 - 288 - 374 - 478 - 617 - 794 - 1023 - 1319 - 1701 - 2187 - 2812 - 3614 - 4645 - 5972", "x2": "sub add x_0_1 x_0_6 relu INT+ 8", "tree": "((x_0_1 add x_0_6) sub relu(8))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 4 + 6 - 5 + 8 - 10 - 6 - 10 + 6 - 6 - 10 + 6 + 0 - 10 + 6 + 0 - 10 + 6 + 0 - 10 + 6 + 0 - 10 + 6 + 0 - 10 + 6 + 0 - 10 + 6 + 0 - 10 + 6", "x2": "mul x_0_3 sqr abs idiv x_0_9 INT- 8", "tree": "(x_0_3 mul (abs((x_0_9 idiv -8)))**2)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 8 - 3 + 3 - 2 + 6 - 7 - 10 + 3 + 63 + 9 + 54 - 18 + 99 + 126 + 9 - 531 - 45 - 450 + 198 - 855 - 1098 - 45 + 4815 + 441 + 4086 - 1746 + 7731 + 9918 + 441 - 4 3299 - 3933 - 3 6738", "x2": "add add mod sub x_0_6 abs INT+ 9 sqr sign x_0_8 mul INT- 9 x_0_7 sqr INT- 6", "tree": "((((x_0_6 sub abs(9)) mod (sign(x_0_8))**2) add (-9 mul x_0_7)) add (-6)**2)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 5 - 5 + 5 + 5 + 6 + 20 + 23 + 36 + 40 + 58 + 78 + 97 + 117 + 142 + 183 + 225 + 267 + 315 + 384 + 470 + 557 + 650 + 770 + 928 + 1104 + 1287 + 1503 + 1784 + 2121", "x2": "add INT+ 2 add add mul INT+ 3 n abs x_0_4 x_0_5", "tree": "(2 add (((3 mul n) add abs(x_0_4)) add x_0_5))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 3 - 8 - 12 - 15 - 17 - 18 - 18 - 17 - 15 - 12 - 8 - 3 + 3 + 10 + 18 + 27 + 37 + 48 + 60 + 73 + 87 + 102 + 118 + 135", "x2": "mul sign n add add x_0_1 n INT- 8", "tree": "(sign(n) mul ((x_0_1 add n) add -8))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 + 2 + 2 + 5 + 5 + 2 + 2 + 5 + 5 + 2 + 2 + 5 + 5 + 2 + 2 + 5 + 5 + 2 + 2 + 5 + 5 + 2 + 2 + 5 + 5 + 2", "x2": "add sub idiv n n mod mod n n x_0_3 idiv abs INT- 9 x_0_2", "tree": "(((n idiv n) sub ((n mod n) mod x_0_3)) add (abs(-9) idiv x_0_2))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 10 - 6 + 3 + 2 + 4 - 9 - 5 + 4 + 3 + 5 - 8 - 4 + 5 + 4 + 6 - 7 - 3 + 6 + 5 + 7 - 6 - 2 + 7 + 6 + 8 - 5 - 1 + 8", "x2": "add x_0_5 idiv n n", "tree": "(x_0_5 add (n idiv n))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116 + 2304", "x2": "mul add relu n n add n n", "tree": "((relu(n) add n) mul (n add n))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 122 + 146 + 172 + 200 + 230 + 262 + 296 + 332 + 370 + 410 + 452 + 496 + 542 + 590 + 640 + 692 + 746 + 802 + 860 + 920 + 982 + 1046 + 1112 + 1180", "x2": "add sqr add n add relu INT- 4 INT+ 1 0 n", "tree": "(((n add (relu(-4) add 10)))**2 add n)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 6 - 10 + 0 + 1 + 0 + 4 + 0 + 1 + 0 + 4 + 0 + 1 + 0 + 4 + 0 + 1 + 0 + 4 + 0 + 1 + 0 + 4 + 0 + 1 + 0 + 4 + 0", "x2": "mod x_0_4 n", "tree": "(x_0_4 mod n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 3 - 9 - 2 + 7 - 6 + 0 - 8 + 1 + 8 + 3 + 7 - 1 + 1 + 15 + 4 + 15 + 2 + 8 + 34 + 5 + 30 + 6 + 23 + 36 + 13 + 37 + 11 + 24 + 42 + 36", "x2": "add x_0_5 mod x_0_7 relu n", "tree": "(x_0_5 add (x_0_7 mod relu(n)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 10 - 8 - 2 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4", "x2": "relu mod x_0_3 INT+ 6", "tree": "relu((x_0_3 mod 6))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 + 8 - 3 - 3 + 7 + 2 + 3 + 10 + 7 + 7 + 2 + 10 + 2 + 4 + 10 + 7 + 12 + 2 + 16 + 2 + 5 + 10 + 7 + 17 + 2 + 24 + 2 + 7 + 10 + 7 + 22", "x2": "abs add idiv x_0_2 x_0_6 x_0_7", "tree": "abs(((x_0_2 idiv x_0_6) add x_0_7))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 5 - 7 + 6 + 0 - 10 + 8 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323 - 360 - 399 - 440 - 483 - 528 - 575 - 624 - 675 - 728 - 783 - 840 - 899", "x2": "sub sign mod mul x_0_6 n idiv n n abs sqr n", "tree": "(sign(((x_0_6 mul n) mod (n idiv n))) sub abs((n)**2))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 5 + 3 - 4 + 4 - 3 + 5 - 2 + 6 - 1 + 7 + 0 + 8 + 1 + 9 + 2 + 10 + 3 + 11 + 4 + 12 + 5 + 13 + 6 + 14 + 7 + 15", "x2": "add INT+ 1 x_0_2", "tree": "(1 add x_0_2)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 5 + 6 + 8 + 19 + 18 + 30 + 22 + 48 + 29 + 77 + 26 + 121 + 5 + 201 - 59 + 296 - 166 + 368 - 257 + 448 - 325 + 536 - 401 + 632 - 485 + 736", "x2": "sub sqr n add relu add x_0_1 abs x_0_3 INT- 7", "tree": "((n)**2 sub (relu((x_0_1 add abs(x_0_3))) add -7))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 10 - 4 + 4 + 5 + 10 + 13 + 16 + 20 + 24 + 29 + 34 + 39 + 45 + 51 + 58 + 65 + 72 + 80 + 88 + 97 + 106 + 116 + 125 + 136 + 146 + 157", "x2": "idiv add sqr n sub n relu x_0_3 abs INT+ 4", "tree": "(((n)**2 add (n sub relu(x_0_3))) idiv abs(4))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 8 - 10 - 7 - 2 - 2 + 0 - 3 - 8 - 8 + 0 - 7 - 2 - 2 + 0 - 3 - 8 - 8 + 0 - 7 - 2 - 2 + 0 - 3 - 8 - 8 + 0 - 7", "x2": "mod abs x_0_4 sub n add INT+ 1 0 abs n", "tree": "(abs(x_0_4) mod (n sub (10 add abs(n))))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 10 - 3 + 5 - 5 + 18 + 23 + 8 + 54 + 5 + 13 + 12 + 130 + 29 + 150 + 211 - 3 - 10 + 81 + 141 + 14 + 173 + 281 + 24 + 550 + 301", "x2": "sub idiv sign mul n x_0_2 INT- 1 0 sub abs n mod sqr x_0_1 sqr n", "tree": "((sign((n mul x_0_2)) idiv -10) sub (abs(n) sub ((x_0_1)**2 mod (n)**2)))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 9 + 4 - 8 + 10 + 2 + 8 - 4 + 5 + 10 - 11 + 12 - 13 + 14 + 15 + 16 - 17 + 18 + 19 - 20 + 21 - 22 + 23 + 24 + 25 - 26 + 27 + 28 - 29 + 30 - 31 + 32 + 33", "x2": "mul n sign mod n x_0_9", "tree": "(n mul sign((n mod x_0_9)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 3 - 10 + 4 + 3 + 29 + 35 + 1 + 0 + 26 + 32 + 141 + 165 + 23 + 29 + 138 + 162 + 20 + 26 + 135 + 159 + 17 + 23 + 132 + 156 + 14 + 20 + 129", "x2": "mod sub x_0_4 relu INT+ 3 sub sqr n abs add sign sign INT+ 2 relu INT- 8", "tree": "((x_0_4 sub relu(3)) mod ((n)**2 sub abs((sign(sign(2)) add relu(-8)))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 1 + 0 - 12 - 20 - 100 - 248 - 1056 - 3296 - 1 3864 - 5 128 - 21 6504 - 86 8176 - 389 9240 - 1692 1888 - 7930 9736 - 3 6698 1840 - 17 9455 7096 - 87 6721 2064 - 446 5835 3992 - 2287 6980 7344 - 1 2112 5359 5176 - 6 4729 5916 4096 - 35 5430 4544 8328 - 197 3670 2455 736 - 1121 4862 620 7272", "x2": "sub add mul add mod sqr abs n abs n n x_0_2 x_0_1 relu INT+ 8", "tree": "((((((abs(n))**2 mod abs(n)) add n) mul x_0_2) add x_0_1) sub relu(8))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 3 + 0 - 9 + 0 + 9 + 24 + 12 + 57 + 15 + 27 + 96 + 36 + 252 + 48 + 105 + 432 + 144 + 1179 + 198 + 468 + 2037 + 654 + 5619 + 909 + 2202 + 9732 + 3093 + 2 6922 + 4311", "x2": "abs abs mul INT+ 3 sub idiv mul INT- 8 sub n x_0_5 INT- 5 n", "tree": "abs(abs((3 mul (((-8 mul (n sub x_0_5)) idiv -5) sub n))))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 5 + 5 + 10 + 3 - 5 - 4 + 2 + 4 - 8 - 3 - 4 - 4 - 9 - 2 + 6 + 5 - 1 - 3 + 9 + 4 + 5 + 5 + 10 + 3 - 5 - 4 + 2 + 4 - 8 - 3 - 4 - 4 - 9", "x2": "sub sign mod x_0_3 sign mul INT- 3 x_0_6 x_0_10", "tree": "(sign((x_0_3 mod sign((-3 mul x_0_6)))) sub x_0_10)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 8 - 10 - 5 + 4 + 0 + 5 - 4 + 4 - 3 + 4 - 4 + 5 - 4 + 4 - 3 + 4 - 4 + 5 - 4 + 4 - 3 + 4 - 4 + 5 - 4 + 4 - 3", "x2": "sub relu relu mod add relu x_0_3 add abs INT+ 4 sqr x_0_3 INT+ 8 relu x_0_3", "tree": "(relu(relu(((relu(x_0_3) add (abs(4) add (x_0_3)**2)) mod 8))) sub relu(x_0_3))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 36 + 81 + 144 + 225 + 324 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249 + 3600 + 3969 + 4356 + 4761 + 5184", "x2": "mul mul INT+ 9 mul INT+ 1 mul n sign n n", "tree": "((9 mul (1 mul (n mul sign(n)))) mul n)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 - 7 - 8 + 58 + 62 + 62 + 129 + 134 + 135 + 203 + 209 + 211 + 280 + 287 + 290 + 360 + 368 + 372 + 443 + 452 + 457 + 529 + 539 + 545 + 618 + 629 + 636", "x2": "add add x_0_3 sqr INT+ 8 n", "tree": "((x_0_3 add (8)**2) add n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 8 - 10 + 8 - 4 - 5 + 14 + 3 + 3 + 23 + 13 + 14 + 35 + 26 + 28 + 50 + 42 + 45 + 68 + 61 + 65 + 89 + 83 + 88 + 113 + 108 + 114 + 140", "x2": "add x_0_3 n", "tree": "(x_0_3 add n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 - 1 + 2 - 10 + 1 - 8 - 9 - 7 - 17 - 16 - 24 - 33 - 40 - 57 - 73 - 97 - 130 - 170 - 227 - 300 - 397 - 527 - 697 - 924 - 1224 - 1621 - 2148", "x2": "add x_0_2 x_0_3", "tree": "(x_0_2 add x_0_3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 41 + 211 + 1061 + 5311 + 2 6561 + 13 2811 + 66 4061 + 332 311 + 1660 1561 + 8300 7811 + 4 1503 9061 + 20 7519 5311 + 103 7597 6561 + 518 7988 2811 + 2593 9941 4061 + 1 2969 9707 311 + 6 4849 8535 1561 + 32 4249 2675 7811 + 162 1246 3378 9061 + 810 6231 6894 5311 + 4053 1158 4472 6561 + 2 265 5792 2363 2811 + 10 1327 8961 1816 4061 + 50 6639 4805 9082 311", "x2": "relu add abs INT+ 7 add idiv sign INT- 7 sqr INT- 3 mul x_0_1 INT+ 5", "tree": "relu((abs(7) add ((sign(-7) idiv (-3)**2) add (x_0_1 mul 5))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 - 9 + 9 + 8 + 2 - 9 - 2 - 6 - 3 - 8 - 1 - 4 - 7 - 4 - 3 - 8 - 9 - 6 - 3 + 0 - 5 - 4 - 5 - 8 - 3 - 8 - 3 - 4 - 3 - 6 - 3", "x2": "mod sub x_0_7 add INT- 4 sub n x_0_7 INT- 1 0", "tree": "((x_0_7 sub (-4 add (n sub x_0_7))) mod -10)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 4 - 1 + 5 - 3 + 3 + 1 - 10 - 6 - 10 + 38 - 8 + 13 - 14 - 42 + 4 + 7 + 4 - 2 + 5 - 4 + 3 + 1 - 13 - 8 - 14 + 27 - 11 + 14 - 19 - 58 + 4", "x2": "idiv sub sub INT- 5 add mul INT- 7 INT- 3 n INT+ 1 x_0_8", "tree": "(((-5 sub ((-7 mul -3) add n)) sub 1) idiv x_0_8)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 1 - 3 - 8 - 14 - 21 - 29 - 38 - 48 - 59 - 71 - 84 - 98 - 113 - 129 - 146 - 164 - 183 - 203 - 224 - 246 - 269 - 293 - 318 - 344", "x2": "sub sign INT- 7 sub n x_0_1", "tree": "(sign(-7) sub (n sub x_0_1))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 + 8 - 2 - 4 + 10 - 7 - 6 + 0 + 4 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 7 - 9 - 7 + 7 - 6 - 9 + 8 - 9 - 7 + 8 + 8 - 8 - 9 + 7 - 7 - 7 + 8 - 9 - 24 - 8 + 9 - 6 - 8 + 6 - 9 - 7 + 25 + 24 - 9 - 11 + 6 - 6 - 5", "x2": "sub sub add INT- 8 mul sign n mod n n x_0_8 x_0_9", "tree": "(((-8 add (sign(n) mul (n mod n))) sub x_0_8) sub x_0_9)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 2 + 2 + 0 + 2 + 1 + 1 - 10 + 4 - 2 + 2 + 0 + 8 - 2 + 2 + 0 + 32 + 4 + 4 + 0 + 256 - 8 + 8 + 0 + 8192 - 32 + 32 + 0 + 209 7152 + 256 + 256 + 0 + 171 7986 9184", "x2": "mul x_0_4 x_0_8", "tree": "(x_0_4 mul x_0_8)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 9 + 9 - 3 + 10 + 5 - 10 + 35 - 18 + 100 - 4 - 88 + 188 + 194 + 3515 + 88 - 8783 - 734 - 1 7053 + 66 840 + 1 7093 - 3087 2223 - 6 4569 + 1 4977 6523 - 4 8505 6535 - 2 9148 6903 - 20 4015 9984 7293 - 11 367 7889 - 4623 9342 1822 600 + 31 3196 1540 8445 - 4 3657 8948 3137 8238", "x2": "add n mul x_0_7 x_0_5", "tree": "(n add (x_0_7 mul x_0_5))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 8 + 7 - 6 - 3 + 0 + 6 + 5 + 2 + 6 + 0 + 1 + 4 + 0 + 6 + 5 + 2 + 6 + 0 + 1 + 4 + 0 + 6 + 5 + 2 + 6 + 0 + 1 + 4", "x2": "mod sub INT- 1 x_0_4 INT+ 7", "tree": "((-1 sub x_0_4) mod 7)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 + 4 + 8 + 0 - 4 + 4 - 8 + 9 - 5 + 10 + 3 - 8 - 3 + 7 + 3 - 6 - 3 + 7 + 3 - 6 - 3 + 6 + 4 - 5 - 4 + 5 + 5 - 4 - 5 + 4 + 6 - 3 - 6 + 3 + 7", "x2": "mul INT- 1 add x_0_2 idiv x_0_11 sub n x_0_6", "tree": "(-1 mul (x_0_2 add (x_0_11 idiv (n sub x_0_6))))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 5 - 9 - 18 - 34 - 59 - 95 - 144 - 208 - 289 - 389 - 510 - 654 - 823 - 1019 - 1244 - 1500 - 1789 - 2113 - 2474 - 2874 - 3315 - 3799 - 4328 - 4904 - 5529", "x2": "sub x_0_1 sqr n", "tree": "(x_0_1 sub (n)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 1 - 9 - 6 + 9 + 7 + 5 - 10 - 11 + 13 - 31 - 13 - 31 - 71 - 3 - 131 - 401 + 8 - 2069 - 2779 - 99 - 7 4454 - 5527 - 6502 - 1496 5221 - 2 2074 - 672 9535 - 208 165 7154 - 110 3663 - 2505 2039 9407 - 57 4957 8037 3617 - 35 8800 8373", "x2": "sub n add abs mul x_0_3 idiv mul x_0_8 INT+ 1 INT+ 2 INT- 8", "tree": "(n sub (abs((x_0_3 mul ((x_0_8 mul 1) idiv 2))) add -8))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 2 + 8 - 6 + 3 - 5 - 6 - 73 + 97 - 193 + 118 + 97 + 8 - 7 + 3 - 5 - 9 - 60 + 71 - 196 + 120 + 66 + 10 - 9 + 3 - 5 - 13 - 49 + 59 - 199 + 123", "x2": "idiv sub x_0_7 sub n mul INT- 9 sqr INT- 8 x_0_5", "tree": "((x_0_7 sub (n sub (-9 mul (-8)**2))) idiv x_0_5)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 2 + 1 - 2 - 8 - 2 - 4 - 3 + 200 + 162 + 290 + 1067 + 396 + 793 + 714 + 4 5135 + 4 1616 + 8 3963 + 34 5870 + 14 3127 + 31 7380 + 31 5063 + 2184 5538 + 2201 5071 + 4836 2904 + 2 1616 8975 + 9675 4086 + 2 3137 263 + 2 4700 9644 + 183 7209 7719 + 198 1356 4170 + 464 7675 1023", "x2": "mul sub mul abs x_0_7 n INT- 9 n", "tree": "(((abs(x_0_7) mul n) sub -9) mul n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 7 - 1 + 7 - 9 - 2 - 10 + 8 + 0 + 0 + 6 + 0 + 0 + 0 + 8 + 0 + 0 + 6 + 0 + 0 + 0 + 8 + 0 + 0 + 6 + 0 + 0 + 0 + 8 + 0 + 0 + 6", "x2": "relu add idiv x_0_6 relu n x_0_7", "tree": "relu(((x_0_6 idiv relu(n)) add x_0_7))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 7 + 9 + 1 - 9 - 1 - 1 - 1 - 1 - 1 - 1 + 10 + 11 + 12 + 13 + 14 - 1 + 15 + 16 + 17 + 18 - 1 - 1 + 21 + 22 + 23 - 1 + 26 - 1 + 27 + 28", "x2": "mod sign INT- 9 sub n sqr sub x_0_6 x_0_5", "tree": "(sign(-9) mod (n sub ((x_0_6 sub x_0_5))**2))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 - 8 - 5 + 5 + 0 + 2 + 2 + 13 + 9 + 12 + 13 + 25 + 22 + 26 + 28 + 41 + 39 + 44 + 47 + 61 + 60 + 66 + 70 + 85 + 85 + 92 + 97 + 113", "x2": "abs add x_0_4 n", "tree": "abs((x_0_4 add n))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 64 + 729 + 4096 + 1 5625 + 4 6656 + 11 7649 + 26 2144 + 53 1441 + 100 0 + 177 1561 + 298 5984 + 482 6809 + 752 9536 + 1139 625 + 1677 7216 + 2413 7569 + 3401 2224 + 4704 5881 + 6400 0 + 8576 6121 + 1 1337 9904 + 1 4803 5889 + 1 9110 2976", "x2": "sqr mul n sub add sqr relu n abs n n", "tree": "((n mul (((relu(n))**2 add abs(n)) sub n)))**2", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 8 + 10 + 10 + 0 + 8 - 10 - 7 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0", "x2": "add INT- 6 add INT+ 6 idiv x_0_7 relu sqr n", "tree": "(-6 add (6 add (x_0_7 idiv relu((n)**2))))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 8 + 3 - 2 - 1 + 7 + 4 + 1 - 9 + 12 - 23 + 14 - 6 + 1 + 45 + 6 - 10 + 8 - 52 - 49 + 45 - 36 + 76 + 118 - 64 + 0 - 95 - 198 - 14 + 75 + 90 + 306 + 165", "x2": "sub add x_0_9 mul sign add x_0_9 x_0_8 n x_0_4", "tree": "((x_0_9 add (sign((x_0_9 add x_0_8)) mul n)) sub x_0_4)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 8 - 5 - 2 - 7 + 7 - 1 - 6 + 576 - 690 + 132 + 876 - 9 7331 + 13 5254 - 2 9685 - 22 4240 + 2812 8676 - 4382 2278 + 1071 6304 + 8969 6020 - 124 474 6095 + 212 998 2574 - 56 6892 4793 - 516 6490 7496 + 7 7529 6630 9400 - 14 3379 4821 9998 + 8 2652 9234 8221 + 81 105 7495 3756 - 1 3040 4893 3241 771 + 2 5808 3067 9599 6430 - 1 5885 8918 9328 731 - 16 5909 6575 529 2256", "x2": "add n mul mul idiv n sub relu sign x_0_8 mul INT- 9 INT- 3 sqr n x_0_4", "tree": "(n add (((n idiv (relu(sign(x_0_8)) sub (-9 mul -3))) mul (n)**2) mul x_0_4))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 1 - 2 - 3 + 4 - 5 - 6 - 7 + 8 - 9 - 10 - 11 + 12 - 13 - 14 - 15 + 16 - 17 - 18 - 19 + 20 - 21 - 22 - 23 + 24", "x2": "mul n sign sign mod sub n INT+ 4 INT- 4", "tree": "(n mul sign(sign(((n sub 4) mod -4))))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 8 + 0 + 4 + 5 + 0 + 0 + 8 + 2 + 2 + 8 + 8 + 2 + 10 + 10 + 16 + 16 + 10 + 18 + 18 + 2 + 1 + 18 + 1 + 0 + 10 + 9 + 26", "x2": "mod add INT+ 8 mul sign x_0_1 x_0_5 n", "tree": "((8 add (sign(x_0_1) mul x_0_5)) mod n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 4 + 4 + 5 + 8 + 7 + 7 + 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 52 + 62 + 73 + 85 + 98 + 112 + 127 + 143 + 160 + 178", "x2": "add mod add INT- 7 mul n relu mod mul sub INT- 9 sub n x_0_1 relu n n x_0_1 n", "tree": "(((-7 add (n mul relu((((-9 sub (n sub x_0_1)) mul relu(n)) mod n)))) mod x_0_1) add n)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 9 + 3 + 2 + 0 - 378 - 294 - 560 + 0 + 18 5220 + 13 5828 + 32 9280 + 0 - 1 6336 4040 - 1 4261 9400 - 4 7943 1680 + 0 + 3087 5803 5600 + 2655 5732 2800 + 1 68 652 8000 + 0 - 808 3285 3720 800 - 769 5851 2147 4400 - 3552 134 3078 4000 + 0 + 338 3663 2567 2254 8800 + 319 9934 9350 9055 5200 + 1601 2476 5459 7427 2000", "x2": "mul mul INT+ 7 sub sign x_0_2 add n INT- 4 mul abs n x_0_4", "tree": "((7 mul (sign(x_0_2) sub (n add -4))) mul (abs(n) mul x_0_4))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 + 2 - 39 + 24 - 429 + 240 - 3861 + 1920 - 2 7027 + 1 1520 - 13 5135 + 4 6080 - 40 5405 + 9 2160 - 40 5405 + 0 + 40 5405 + 0 - 121 6215 + 0 + 608 1075 + 0 - 4256 7525 + 0 + 3 8310 7725 + 0", "x2": "mul sub sqr INT- 4 n x_0_2", "tree": "(((-4)**2 sub n) mul x_0_2)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 0 + 10 + 3 - 5 - 5 + 2 - 10 + 6 - 5 + 7 + 0 + 10 + 3 + 0 + 0 + 2 + 0 + 6 + 0 + 7 + 0 + 10 + 3 + 0 + 0 + 2 + 0 + 6 + 0 + 7 + 0 + 10 + 3", "x2": "relu x_0_10", "tree": "relu(x_0_10)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 12 + 108 + 1728 + 4 3200 + 155 5200 + 7620 4800 + 48 7710 7200 + 3950 4568 3200 + 39 5045 6832 0 + 4780 527 6672 0 + 68 8327 5984 768 0 + 1 1632 7364 1308 9792 0 + 228 16 3369 6559 9232 0 + 5 1300 3675 8172 5982 7200 0 + 1313 2894 1009 2185 1576 3200 0 + 37 9540 6395 1664 1510 5556 4800 0 + 1 2297 1167 2033 9184 9420 299 5200 0 + 443 9259 1360 4244 5764 630 8126 7200 0 + 17 7570 3654 4169 7830 5625 2325 688 0 0 + 7830 8531 1597 8874 3278 727 5355 3408 0 0 + 379 132 9081 3377 5174 6587 2127 1984 9472 0 0 + 20 498 308 4027 6706 7394 4635 5288 37 688 0 0 + 1 1548 6865 7639 9938 3081 9211 64 5890 1351 6288 0 0 + 721 7929 1102 4996 1442 6200 6879 368 1334 4768 0 0 0", "x2": "mul n mul n x_0_1", "tree": "(n mul (n mul x_0_1))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 10 + 3 - 3 - 8 - 17 + 8 + 4 - 14 - 7 - 35 - 7 + 25 - 9 - 35 - 13 + 17 - 8 - 20 - 14 + 7 - 6 - 14 - 16 + 6 - 2 - 13", "x2": "add INT- 1 0 idiv mul INT+ 7 x_0_2 x_0_3", "tree": "(-10 add ((7 mul x_0_2) idiv x_0_3))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 1 - 5 - 3 + 3 - 10 + 2 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 2 + 1 + 1 + 1 + 0 + 2 + 1", "x2": "abs sub x_0_1 mod idiv add x_0_7 sub INT+ 7 add n INT- 7 abs INT+ 1 INT+ 3", "tree": "abs((x_0_1 sub (((x_0_7 add (7 sub (n add -7))) idiv abs(1)) mod 3)))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 + 8 + 3 + 4 - 60 - 42 - 56 + 448 + 342 + 520 - 4972 - 4152 - 6812 + 6 9552 + 6 2220 + 10 8928 - 118 2452 - 112 32 - 206 9708 + 2364 8960 + 2352 588 + 4553 3488 - 5 4392 6172 - 5 6449 4208 - 11 3833 7300 + 141 4208 368 + 152 4134 3508", "x2": "mul sub INT- 4 x_0_3 n", "tree": "((-4 sub x_0_3) mul n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "mul sign sub n n sqr n", "tree": "(sign((n sub n)) mul (n)**2)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 + 2 + 0 + 8 + 0 + 48 + 0 + 384 + 0 + 3840 + 0 + 4 6080 + 0 + 64 5120 + 0 + 1032 1920 + 0 + 1 8579 4560 + 0 + 37 1589 1200 + 0 + 817 4960 6400 + 0 + 1 9619 9055 3600 + 0 + 51 117 5439 3600", "x2": "mul relu n relu x_0_2", "tree": "(relu(n) mul relu(x_0_2))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 - 3 - 6 - 10 - 15 - 30 - 50 - 75 - 150 - 250 - 375 - 750 - 1250 - 1875 - 3750 - 6250 - 9375 - 1 8750 - 3 1250 - 4 6875 - 9 3750 - 15 6250 - 23 4375 - 46 8750 - 78 1250 - 117 1875 - 234 3750", "x2": "sub mod INT- 4 sqr sign mul n INT- 2 mul sub idiv n n INT+ 6 x_0_3", "tree": "((-4 mod (sign((n mul -2)))**2) sub (((n idiv n) sub 6) mul x_0_3))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 0 - 6 - 2 - 9 + 5 - 8 - 6 - 360 + 0 + 330 + 120 + 585 - 350 + 600 + 480 + 3 600 + 0 - 3 1350 - 1 2000 - 6 1425 + 3 8500 - 6 9000 - 5 7600 - 382 5000 + 0 + 423 2250 + 168 0 + 890 6625 - 577 5000 + 1069 5000 + 921 6000", "x2": "mul mul x_0_8 mul mod sign sub mul INT- 6 idiv INT+ 6 n n INT- 8 n INT+ 5", "tree": "((x_0_8 mul ((sign(((-6 mul (6 idiv n)) sub n)) mod -8) mul n)) mul 5)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 10 + 0 + 9 - 4 + 9 + 2 - 6 + 5 - 9 + 1 + 357 + 148 + 520 + 784 + 913 + 1030 + 287 + 1305 + 1800 + 1205 + 361 + 2572 + 1053 + 3092 + 2792 + 2386 + 1749 + 4445 + 4327 + 5709 + 1326 + 5648 + 1057 + 5408", "x2": "add sqr INT+ 2 add x_0_10 mul mod x_0_2 INT+ 6 sqr n", "tree": "((2)**2 add (x_0_10 add ((x_0_2 mod 6) mul (n)**2)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 3 + 3 + 3 + 9 + 21 + 51 + 123 + 297 + 717 + 1731 + 4179 + 1 89 + 2 4357 + 5 8803 + 14 1963 + 34 2729 + 82 7421 + 33 890 + 148 9201 + 164 2611 + 144 1061 + 119 1371 + 49 441 + 50 5572 + 150 1585 + 17 5380", "x2": "mod add x_0_2 relu add x_0_1 x_0_1 sqr add sqr sqr INT+ 6 INT- 5", "tree": "((x_0_2 add relu((x_0_1 add x_0_1))) mod ((((6)**2)**2 add -5))**2)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 + 6 + 18 + 72 + 360 + 2160 + 1 5120 + 12 960 + 108 8640 + 1088 6400 + 1 1975 400 + 14 3700 4800 + 186 8106 2400 + 2615 3487 3600 + 3 9230 2310 4000 + 62 7683 6966 4000 + 1067 622 8428 8000 + 1 9207 1211 1718 4000 + 36 4935 3012 2649 6000 + 729 8706 245 2992 0 + 1 5327 2826 5151 2832 0 + 33 7200 2183 3328 2304 0 + 775 5605 216 6549 2992 0 + 1 8613 4520 5199 7183 1808 0 + 46 5336 3012 9992 9579 5200 0", "x2": "mul n mul sign x_0_1 x_0_1", "tree": "(n mul (sign(x_0_1) mul x_0_1))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 2 + 9 - 44 - 75 + 24 - 517 - 838 + 141 - 5280 - 8501 + 1278 - 5 2943 - 8 5164 + 1 2615 - 52 9606 - 85 1827 + 12 5952 - 529 6269 - 851 8490 + 125 9289 - 5296 2932 - 8518 5153 + 1259 2626 - 5 2962 9595 - 8 5185 1816 + 1 2592 5963", "x2": "sub mul INT- 1 0 sub n x_0_3 n", "tree": "((-10 mul (n sub x_0_3)) sub n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 0 - 9 - 7 + 1 + 0 + 1 - 7 - 1 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_9 sqr INT- 1 0", "tree": "(x_0_9 idiv (-10)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 7 + 10 + 14 + 19 + 25 + 32 + 40 + 49 + 59 + 70 + 82 + 95 + 109 + 124 + 140 + 157 + 175 + 194 + 214 + 235 + 257 + 280 + 304 + 329", "x2": "relu add n relu x_0_1", "tree": "relu((n add relu(x_0_1)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 1 + 10 + 110 + 1320 + 1 7160 + 24 240 + 360 3600 + 5765 7600 + 9 8017 9200 + 176 4322 5600 + 3352 2128 6400 + 6 7044 2572 8000 + 140 7929 4028 8000 + 3097 4446 8633 6000 + 7 1241 2277 8572 8000 + 170 9789 4668 5747 2000 + 4274 4736 6714 3680 0 + 11 1136 3153 4573 5680 0 + 300 680 5143 3486 3360 0 + 8401 9054 4013 7617 4080 0 + 24 3655 2577 6399 904 8320 0 + 730 9657 7329 1972 7144 9600 0 + 2 2659 9389 7205 1154 1493 7600 0 + 72 5118 471 563 6932 7800 3200 0 + 2392 8895 5544 8601 8781 7410 5600 0", "x2": "mul relu add sub n sign mod mod x_0_2 sign INT- 9 n mul INT+ 8 mod INT+ 9 INT+ 4 x_0_1", "tree": "(relu(((n sub sign(((x_0_2 mod sign(-9)) mod n))) add (8 mul (9 mod 4)))) mul x_0_1)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5", "x2": "idiv n INT- 5", "tree": "(n idiv -5)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 2 + 3 + 1 + 152 5217 + 314 7068 + 314 7068 + 20 3393 + 3473 + 3473 + 989 7308 + 4 2428 + 3473 + 989 7308 + 3473 + 2410 8092 + 4 2428 + 1 2177 1217 + 989 7308 + 989 7308 + 989 7308 + 1 5760 2908 + 2 81 7233 + 989 7308 + 2 5236 4988 + 10 9786 1948 + 989 7308 + 152 5217", "x2": "sub sqr add sqr mul mod x_0_5 n INT- 7 INT+ 1 0 INT+ 8", "tree": "((((((x_0_5 mod n) mul -7))**2 add 10))**2 sub 8)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600", "x2": "relu mul n add abs INT+ 1 n", "tree": "relu((n mul (abs(1) add n)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 + 10 - 7 + 4 + 5 + 50 - 100 + 70 - 40 - 50 - 500 + 1000 - 700 + 400 + 500 + 5000 - 1 0 + 7000 - 4000 - 5000 - 5 0 + 10 0 - 7 0 + 4 0 + 5 0 + 50 0 - 100 0 + 70 0 - 40 0", "x2": "mul x_0_5 INT- 1 0", "tree": "(x_0_5 mul -10)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 5 - 4 - 2 - 5 - 4 + 5 - 10 + 15 + 16 + 18 + 25 + 36 + 88 + 140 + 268 + 456 + 785 + 1361 + 2329 + 4053 + 6985 + 1 2098 + 2 907 + 3 6126 + 6 2454 + 10 7901 + 18 6513 + 32 2313 + 55 7057 + 96 2738 + 166 3829", "x2": "add x_0_5 add abs x_0_1 add mod x_0_2 add abs x_0_1 INT- 2 relu sub x_0_7 INT- 7", "tree": "(x_0_5 add (abs(x_0_1) add ((x_0_2 mod (abs(x_0_1) add -2)) add relu((x_0_7 sub -7)))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 0 + 0 + 10 + 0 + 50 + 290 + 2670 + 2 6450 + 26 4230 + 264 2010 + 2641 9790 + 2 6419 7570 + 26 4197 5350 + 264 1975 3130 + 2641 9753 910 + 2 6419 7530 8690 + 26 4197 5308 6470 + 264 1975 3086 4250 + 2641 9753 864 2030 + 2 6419 7530 8641 9810 + 26 4197 5308 6419 7590 + 264 1975 3086 4197 5370 + 2641 9753 864 1975 3150 + 2 6419 7530 8641 9753 930", "x2": "relu mul sub INT+ 7 abs sub sub x_0_1 relu n abs n INT- 1 0", "tree": "relu(((7 sub abs(((x_0_1 sub relu(n)) sub abs(n)))) mul -10))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 2 + 2 - 8 - 5 + 3 - 1 - 6 - 6 - 1 - 9 + 13 + 10 + 21 + 19 + 12 + 17 + 23 + 24 + 20 + 29 + 8 + 12 + 2 + 5 + 13 + 9 + 4 + 4 + 9 + 1 + 23 + 20 + 31 + 29", "x2": "sub n x_0_10", "tree": "(n sub x_0_10)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 10 + 9 + 5 + 79 + 58 + 794 + 658 + 7997 + 7373 + 8 627 + 8 1726 + 81 3642 + 89 7886 + 821 8145 + 979 2501 + 8307 9335 + 1 614 3154 + 8 4058 5850 + 11 4451 874 + 85 1200 1653 + 122 8569 4589 + 862 6452 7403 + 1313 6894 7542 + 8749 3096 8618 + 1 3999 5400 2822 + 8 8806 7863 3721", "x2": "sub x_0_3 mod idiv relu abs n n mul INT- 1 0 x_0_2", "tree": "(x_0_3 sub ((relu(abs(n)) idiv n) mod (-10 mul x_0_2)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 6 - 6 + 5 + 0 + 6 + 10 - 4 - 9 - 7 - 6 + 10 + 0 + 7 + 2 + 11 + 0 + 17 + 12 + 0 + 0 + 3 + 8 + 28 + 0 + 28 + 0 + 12 + 0 + 14 + 29 + 0 + 0 + 23 + 0 + 0", "x2": "relu add sub mod INT+ 9 x_0_12 mod INT- 3 add abs x_0_4 x_0_1 n", "tree": "relu((((9 mod x_0_12) sub (-3 mod (abs(x_0_4) add x_0_1))) add n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 1764 + 7056 + 1 5876 + 2 8224 + 4 4100 + 6 3504 + 8 6436 + 11 2896 + 14 2884 + 17 6400 + 21 3444 + 25 4016 + 29 8116 + 34 5744 + 39 6900 + 45 1584 + 50 9796 + 57 1536 + 63 6804 + 70 5600 + 77 7924 + 85 3776 + 93 3156 + 101 6064", "x2": "sqr mul mul n INT+ 7 INT- 6", "tree": "(((n mul 7) mul -6))**2", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 - 4 + 3 + 4 + 5 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12 + 15 + 13 + 16 + 14 + 17 + 15 + 18 + 16 + 19 + 17 + 20", "x2": "add add mod abs abs add INT+ 8 n x_0_1 INT- 3 INT+ 7", "tree": "(((abs(abs((8 add n))) mod x_0_1) add -3) add 7)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 8 + 7 - 1 + 2 + 21 + 22 + 21 + 14 + 16 + 35 + 36 + 35 + 28 + 30 + 49 + 50 + 49 + 42 + 44 + 63 + 64 + 63 + 56 + 58 + 77 + 78 + 77 + 70", "x2": "add INT+ 1 0 sub abs relu x_0_5 INT- 4", "tree": "(10 add (abs(relu(x_0_5)) sub -4))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 5 + 3 - 12 + 4 - 3 + 13 - 2 + 6 - 9 + 7 + 0 + 16 + 1 + 9 - 6 + 10 + 3 + 19 + 4 + 12 - 3 + 13 + 6 + 22 + 7 + 15", "x2": "add INT- 6 sub n x_0_3", "tree": "(-6 add (n sub x_0_3))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 2 - 5 + 4 + 3 + 1 + 11 + 11 + 10 + 21 + 22 + 22 + 34 + 36 + 37 + 50 + 53 + 55 + 69 + 73 + 76 + 91 + 96 + 100 + 116 + 122 + 127", "x2": "add x_0_3 add n mod relu mul INT- 4 n n", "tree": "(x_0_3 add (n add (relu((-4 mul n)) mod n)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 5 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr add mod n sign mod n sqr sub mul INT+ 1 0 INT- 3 x_0_1 n", "tree": "(((n mod sign((n mod (((10 mul -3) sub x_0_1))**2))) add n))**2", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 6 + 4 + 5 - 9 - 1 - 8 - 1 - 4 - 3 - 3713 - 1675 - 5037 - 1 196 - 153 - 1 202 - 204 - 1682 - 1330 613 - 52 6422 8028 - 9 643 5162 - 101 1754 5071 - 549 680 4721 - 4246 8452 - 649 2864 5874 - 1286 9598 - 175 6998 4985 3328 - 2392 9813 3530 4323 7398 - 230 2993 7443 1013 9096 7934 - 2 9157 3033 1934 5827 1029 - 669 4488 3003 7885 3740 3883 - 3 869 6214 3590 530 6787 1155 - 40 3570 3479 9293 4149 8946 - 4 8733 2596 6408 7071 8379 3928", "x2": "sub x_0_10 sqr sub abs sub sub x_0_8 INT+ 1 0 mul x_0_9 relu n n", "tree": "(x_0_10 sub ((abs(((x_0_8 sub 10) sub (x_0_9 mul relu(n)))) sub n))**2)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 2 - 3 + 9 - 4 - 1 + 1 - 3 - 8 + 4 - 9 - 6 - 4 - 8 - 13 - 1 - 14 - 11 - 9 - 13 - 18 - 6 - 19 - 16 - 14 - 18 - 23 - 11 - 24 - 21 - 19", "x2": "add INT- 5 x_0_6", "tree": "(-5 add x_0_6)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 7 - 9 - 10 + 1 + 9 + 7 + 8 + 9 + 20 + 11 + 12 + 13 + 28 + 15 + 32 + 17 + 36 + 19 + 40 + 21 + 44 + 23 + 48 + 25 + 52 + 27 + 56 + 29 + 60", "x2": "add mod add n mul n x_0_6 relu add n n n", "tree": "(((n add (n mul x_0_6)) mod relu((n add n))) add n)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 7 + 12 + 19 + 28 + 39 + 52 + 67 + 84 + 3 + 24 + 47 + 72 + 99 + 28 + 59 + 92 + 27 + 64 + 3 + 44 + 87 + 32 + 79", "x2": "mod sub mul n relu n INT- 3 sqr INT+ 1 0", "tree": "(((n mul relu(n)) sub -3) mod (10)**2)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 6 - 1 + 2 + 1 - 6 - 4 - 5 - 12 - 11 - 11 - 18 - 18 - 18 - 25 - 25 - 25 - 32 - 32 - 32 - 39 - 39 - 39 - 46 - 46 - 46", "x2": "sub sub x_0_3 INT+ 5 idiv sub n x_0_1 n", "tree": "((x_0_3 sub 5) sub ((n sub x_0_1) idiv n))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 + 0 - 33 - 37 - 207 - 435 - 1891 - 5379 - 2 2407 - 7 6207 - 32 2695 - 123 7191 - 543 2239 - 2275 2927 - 1 423 6527 - 4 6828 3375 - 22 4030 4351 - 106 6940 5119 - 532 3518 7807 - 2666 2329 207 - 1 3845 6223 4175 - 7 2502 7461 8751 - 39 952 600 4799 - 213 1017 9685 4847 - 1190 4819 4697 4847 - 6731 1286 6520 895", "x2": "sub add mul mul x_0_2 idiv abs mul INT+ 1 relu n n n x_0_1 n", "tree": "((((x_0_2 mul (abs((1 mul relu(n))) idiv n)) mul n) add x_0_1) sub n)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 4 + 27 + 14 + 151 + 72 + 893 + 418 + 5343 + 2492 + 3 2041 + 1 4934 + 19 2227 + 8 9584 + 115 3341 + 53 7482 + 692 23 + 322 4868 + 4152 113 + 1934 9182 + 2 4912 651 + 1 1609 5064 + 14 9472 3877 + 6 9657 354 + 89 6834 3231 + 41 7942 2092", "x2": "relu sub mul x_0_2 INT+ 6 add n INT+ 6", "tree": "relu(((x_0_2 mul 6) sub (n add 6)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 7 + 3 + 9 + 4 + 4 + 4 + 11 + 7 + 20 + 11 + 24 + 15 + 35 + 28 + 55 + 43 + 79 + 60 + 153 + 317 + 320 + 730 + 594 + 1649 + 2655 + 3725 + 7595 + 7707 + 1 8956", "x2": "add x_0_2 add relu mod sub sub n x_0_6 INT+ 2 mul INT- 7 sub n x_0_5 x_0_6", "tree": "(x_0_2 add (relu((((n sub x_0_6) sub 2) mod (-7 mul (n sub x_0_5)))) add x_0_6))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 3 + 5 - 2 + 10 - 1 + 4 + 6 + 31 - 49 + 21 - 99 + 11 - 39 - 59 - 309 + 491 - 209 + 991 - 109 + 391 + 591 + 3091 - 4909 + 2091 - 9909 + 1091 - 3909 - 5909 - 3 909 + 4 9091 - 2 909", "x2": "sub mul x_0_7 INT- 1 0 INT- 1", "tree": "((x_0_7 mul -10) sub -1)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 7 + 13 + 21 + 31 + 43 + 57 + 73 + 91 + 111 + 133 + 157 + 183 + 211 + 241 + 273 + 307 + 343 + 381 + 421 + 463 + 507 + 553 + 601 + 651", "x2": "relu add add n n x_0_1", "tree": "relu(((n add n) add x_0_1))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 5 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 8 - 8 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 - 8 + 12 + 13", "x2": "add mod sub add n n sign sub INT+ 7 mod mod INT- 2 sqr x_0_1 x_0_2 n INT- 9", "tree": "((((n add n) sub sign((7 sub ((-2 mod (x_0_1)**2) mod x_0_2)))) mod n) add -9)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 3 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11 - 2", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 6 - 7 + 8 - 9 - 2 + 4 - 6 - 5 - 3693 - 6044 - 9367 - 1 3850 - 989 - 3827 - 9468 - 7520 - 44 1879 3005 - 131 8731 950 - 350 9628 2044 - 845 9373 2308 - 4 7342 4898 - 77 4769 7959 - 516 3438 6227 - 353 4401 93 - 131 9939 4575 8209 6470 5096 - 1267 7686 8997 650 5771 6234 - 9656 9122 6436 6186 9257 3558 - 6 182 7971 8015 7855 8505 5509 - 2 171 8020 7262 7309 6808", "x2": "sub sub x_0_9 sqr n sqr mul n x_0_8", "tree": "((x_0_9 sub (n)**2) sub ((n mul x_0_8))**2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 1 + 3 - 6 - 6 + 2 + 1 - 7 + 7 - 4 - 7 - 6 - 6 - 10 - 13 - 8 - 11 - 7 - 9 - 9 - 9 - 11 - 12 - 11 - 12 - 11 - 12 - 12 - 13 - 14", "x2": "idiv sub n add mod sub n n n mod x_0_8 sub x_0_1 n INT- 3", "tree": "((n sub (((n sub n) mod n) add (x_0_8 mod (x_0_1 sub n)))) idiv -3)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 7 - 1 + 0 - 6 + 9 + 0 - 1 - 9 - 6 - 8 - 17 - 5 - 7 - 11 - 24 - 24 - 19 - 31 - 22 - 27 - 34 - 40 - 45 - 43 - 58 - 42 - 50", "x2": "sub x_0_7 add add INT- 7 n mod add mod n sub abs INT- 1 INT- 7 n INT+ 1 0", "tree": "(x_0_7 sub ((-7 add n) add (((n mod (abs(-1) sub -7)) add n) mod 10)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 2 + 5 - 1 + 6 + 0 + 7 + 1 + 8 + 2 + 9 + 3 + 10 + 4 + 11 + 5 + 12 + 6 + 13 + 7 + 14 + 8", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 8 - 9 + 5 + 2 + 6 - 12 - 15 - 22 - 11 + 3 + 18 - 8 - 12 - 31 - 24 - 13 + 17 + 6 + 6 - 24 - 31 - 38 - 15 + 15", "x2": "sub INT+ 9 add x_0_3 add abs idiv INT+ 1 0 sign idiv mod n x_0_3 x_0_1 abs x_0_1", "tree": "(9 sub (x_0_3 add (abs((10 idiv sign(((n mod x_0_3) idiv x_0_1)))) add abs(x_0_1))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 - 4 + 7 + 0 + 5 + 2 + 9 + 2 + 7 + 0 + 5 + 2 + 9 + 2 + 7 + 0 + 5 + 2 + 9 + 2 + 7 + 0 + 5 + 2 + 9 + 2 + 7", "x2": "sub abs x_0_6 relu relu abs mod INT+ 4 idiv x_0_1 x_0_6", "tree": "(abs(x_0_6) sub relu(relu(abs((4 mod (x_0_1 idiv x_0_6))))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 4 - 10 - 2 + 3 + 1 + 4 + 66 + 88 + 102 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730 + 785", "x2": "sub sqr n idiv sub sign sub idiv x_0_7 INT- 6 INT- 8 add idiv INT- 7 n n x_0_3", "tree": "((n)**2 sub ((sign(((x_0_7 idiv -6) sub -8)) sub ((-7 idiv n) add n)) idiv x_0_3))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 3 - 4 + 112 + 184 + 208 - 704 - 1264 - 1440 + 5872 + 1 368 + 1 1792 - 4 6688 - 8 2640 - 9 4016 + 37 3840 + 66 1472 + 75 2496 - 299 336 - 529 1376 - 601 9552 + 2392 3120 + 4233 1456 + 4815 6880", "x2": "mul mul INT- 8 add sub INT- 1 0 n sub x_0_3 n sign sqr INT+ 7", "tree": "((-8 mul ((-10 sub n) add (x_0_3 sub n))) mul sign((7)**2))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 4 + 12 + 14 + 16 + 18 + 19 + 21 + 23 + 25 + 26 + 28 + 30 + 32 + 34 + 35 + 37 + 39 + 41 + 42 + 44 + 46 + 48", "x2": "add add n mod idiv x_0_1 sub n add n INT+ 8 n abs INT- 1 0", "tree": "((n add ((x_0_1 idiv (n sub (n add 8))) mod n)) add abs(-10))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 3 + 5 - 1 + 0 + 1 + 9 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 49 + 0 + 0 + 0 + 400 + 0 + 0 + 0 + 576 + 0 + 0", "x2": "sqr relu mod sub n idiv INT- 1 0 add INT+ 5 relu n x_0_4", "tree": "(relu(((n sub (-10 idiv (5 add relu(n)))) mod x_0_4)))**2", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 4 + 2 + 1 - 10 + 0 + 8 + 8 + 8 + 6 - 2 + 0 + 2 + 2 + 12 + 12 + 3 + 2 + 3 + 7 + 6 + 15 + 7 + 6 + 7 + 2 + 3", "x2": "mod sub mul x_0_5 x_0_1 n add x_0_6 INT+ 7", "tree": "(((x_0_5 mul x_0_1) sub n) mod (x_0_6 add 7))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 10 + 4 + 10 - 10 - 5 - 6 + 3 - 2 + 1 + 5 - 10 + 120 - 130 - 84 + 240 + 96 + 2312 - 1620 + 114 - 120 - 126 + 3 5772 - 138 + 3024 + 3300 - 156 - 3888 - 168 + 174 - 4860 + 12 714 + 5568", "x2": "mul idiv abs n sign x_0_11 add mod INT+ 4 x_0_4 INT- 1 0", "tree": "((abs(n) idiv sign(x_0_11)) mul ((4 mod x_0_4) add -10))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 2 + 5 + 2 + 2 + 1 + 2 + 2 + 1 + 2 + 2 + 1 + 2 + 2 + 1 + 2 + 2 + 1 + 2 + 2 + 1 + 2 + 2 + 1 + 2", "x2": "mod x_0_3 INT+ 4", "tree": "(x_0_3 mod 4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 - 7 + 4 + 4 - 1 + 15 + 14 + 4 + 5 + 11 + 4 + 2 + 9 + 9 + 4 + 12 + 15 + 9 + 10 + 16 + 9 + 7 + 14 + 14 + 9 + 17", "x2": "abs sub n x_0_5", "tree": "abs((n sub x_0_5))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 9 + 4 - 4 + 4 - 100 + 144 - 4900 + 9216 - 39 6900 + 92 1600 - 4802 4900 + 1 3271 400 - 81 1620 8100 + 260 1123 8400 - 1 8261 4682 2500 + 6 6588 7703 400 - 527 7564 3170 2500 + 2157 4761 5784 9600 - 19 520 718 4460 2500 + 86 2990 4631 3984 0 - 8401 9351 6834 6970 2500 + 4 1768 7384 1596 8256 0 - 444 4623 7040 5554 7262 2500 + 2405 8793 3275 9771 5456 0 - 27 7788 9815 347 1703 8906 2500", "x2": "mul mul mul x_0_2 add relu relu idiv relu x_0_4 INT- 7 n mul relu INT+ 1 INT+ 1 n", "tree": "(((x_0_2 mul (relu(relu((relu(x_0_4) idiv -7))) add n)) mul (relu(1) mul 1)) mul n)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 9 - 5 - 1 - 10 - 9 - 7 + 0 + 3 - 1 - 5 + 4 + 3 + 1 - 6 - 3 - 5 - 1 - 2 - 3 - 5 + 0 - 3 - 1 - 5 - 4 - 3 - 1", "x2": "sub abs abs x_0_7 INT+ 6", "tree": "(abs(abs(x_0_7)) sub 6)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 1 - 10 - 10 + 7 - 7 + 0 - 3 + 9 + 221 + 157 + 1 9465 + 2 7065 + 340 + 4 9954 + 281 + 293 + 520 + 5 1437 + 2 6644 + 4797 + 20 2984 + 11 9554 + 17 9505 + 8 2421 + 8 9480 + 27 6354 + 23 3108 + 33 4925 + 9 2104", "x2": "abs add sqr mod add x_0_9 INT+ 5 mul n n mul n n", "tree": "abs(((((x_0_9 add 5) mod (n mul n)))**2 add (n mul n)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 8 + 3 - 6 - 8 - 4 + 12 + 1 + 10 + 12 + 8 - 8 + 3 - 6 - 8 - 4 + 12 + 1 + 10 + 12 + 8 - 8 + 3 - 6 - 8 - 4 + 12", "x2": "sub INT+ 4 x_0_5", "tree": "(4 sub x_0_5)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 3 + 8 + 4 - 4 - 3 - 9 - 10 + 18 - 30 + 88 + 48 - 52 - 42 - 135 - 160 + 306 - 540 + 1672 + 960 - 1092 - 924 - 3105 - 3840 + 7650 - 1 4040 + 4 5144 + 2 6880 - 3 1668", "x2": "mul n x_0_8", "tree": "(n mul x_0_8)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 8 - 3 - 3 + 102 + 444 + 658 - 27 - 9 - 8 + 215 + 788 + 1063 - 47 - 15 - 13 + 328 + 1164 + 1511 - 67 - 21 - 18 + 442 + 1545 + 1966", "x2": "idiv sub n sqr mul sqr n INT- 8 mul x_0_3 add n sqr n", "tree": "((n sub (((n)**2 mul -8))**2) idiv (x_0_3 mul (n add (n)**2)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 - 1 + 9 + 1 + 4 + 1 + 9 + 1 + 4 + 1 + 9 + 1 + 4 + 1 + 9 + 1 + 4 + 1 + 9 + 1 + 4 + 1 + 9 + 1 + 4", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 10 - 8 + 3 + 5 - 7 - 3 + 2 + 1 + 40 + 110 - 96 + 39 + 70 - 105 - 48 + 34 + 18 + 760 + 2200 - 2016 + 858 + 1610 - 2520 - 1200 + 884 + 486 + 2 1280 + 6 3800 - 6 480", "x2": "mul relu abs n x_0_9", "tree": "(relu(abs(n)) mul x_0_9)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 10 + 8 - 7 + 7 + 2 + 36 + 21 + 32 + 45 + 20 + 66 + 0 + 13 + 84 + 30 + 0 + 85 + 36 + 114 + 80 + 21 + 132 + 46 + 0 + 125 + 52", "x2": "mul mod add sub n mul abs x_0_2 relu add x_0_2 x_0_5 relu INT- 6 INT+ 8 n", "tree": "((((n sub (abs(x_0_2) mul relu((x_0_2 add x_0_5)))) add relu(-6)) mod 8) mul n)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 4 - 4 + 5 + 5 + 6 + 3 + 8 + 9 + 10 + 0 + 12 + 13 + 14 + 7 + 16 + 17 + 18 + 4 + 20 + 21 + 22 + 11 + 24 + 25", "x2": "mod mod n sqr n add x_0_4 INT+ 8", "tree": "((n mod (n)**2) mod (x_0_4 add 8))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 + 1 + 7 + 9 + 10 - 10 - 5 - 6 - 7 - 7 + 10 + 1 + 2 + 122 - 13 - 14 - 15 - 15 - 131 + 193 + 15 + 26 + 2785 - 22 - 23 - 23 - 139 - 3483 + 7 + 18", "x2": "mod add x_0_8 idiv INT- 8 sign n mul x_0_9 n", "tree": "((x_0_8 add (-8 idiv sign(n))) mod (x_0_9 mul n))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 6 - 15 - 24 - 33 - 42 - 51 - 60 - 69 - 78 - 89 - 102 - 117 - 134 - 153 - 174 - 197 - 222 - 249 - 278 - 309 - 342 - 377", "x2": "sub sub x_0_1 abs mul sign x_0_1 mul sign INT- 6 add mul INT- 9 idiv n n n n", "tree": "((x_0_1 sub abs((sign(x_0_1) mul (sign(-6) mul ((-9 mul (n idiv n)) add n))))) sub n)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 3 + 6 - 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 - 4 + 4 + 4 + 4 - 4 - 4 - 4", "x2": "mul INT- 4 sign x_0_3", "tree": "(-4 mul sign(x_0_3))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 3 + 6 - 17 + 70 - 347 + 2086 - 1 4597 + 11 6782 - 105 1031 + 1051 318 - 1 1561 3489 + 13 8736 1878 - 180 3570 4403 + 2524 9986 1654 - 3 7874 9792 4797 + 60 5999 6679 6766 - 1030 1994 3554 5007 + 1 8543 5898 3981 142 - 35 2328 2069 5639 2681 + 704 6564 1391 2785 3638 - 1 4797 7846 9216 8492 6379 + 32 5551 2632 2770 6838 358", "x2": "sub add n sub idiv INT+ 6 INT- 8 sign mul sub n n x_0_1 mul x_0_1 n", "tree": "((n add ((6 idiv -8) sub sign(((n sub n) mul x_0_1)))) sub (x_0_1 mul n))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 0 - 4 + 0 + 2 + 120 + 204 + 280 + 332 + 400 + 12 - 232 - 436 - 536 - 692 + 984 + 2092 + 3048 + 3596 + 4376 - 2164 - 6424 - 1 68 - 1 2072 - 1 4996 + 1 1368", "x2": "mul sub sub sqr n INT- 2 x_0_5 INT+ 4", "tree": "((((n)**2 sub -2) sub x_0_5) mul 4)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 0 - 3 - 7 + 5 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1", "x2": "relu idiv abs add sub n abs n sign x_0_4 x_0_5", "tree": "relu((abs(((n sub abs(n)) add sign(x_0_4))) idiv x_0_5))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 7 + 6 + 10 - 7 - 7 - 9 - 7 + 4 + 6 + 10 + 5 + 6 + 4 + 7 + 3 + 5 + 10 + 5 + 6 + 4 + 7 + 3 + 5 + 10 + 5 + 6 + 4 + 7 + 3", "x2": "add mod x_0_7 relu n idiv sign abs add INT+ 3 relu INT- 9 x_0_9", "tree": "((x_0_7 mod relu(n)) add (sign(abs((3 add relu(-9)))) idiv x_0_9))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 4 + 5 + 42 + 84 + 138 + 204 + 282 + 372 + 474 + 588 + 714 + 852 + 1002 + 1164 + 1338 + 1524 + 1722 + 1932 + 2154 + 2388 + 2634 + 2892 + 3162", "x2": "mul add mul abs sign relu x_0_2 INT- 2 sqr n abs INT- 6", "tree": "(((abs(sign(relu(x_0_2))) mul -2) add (n)**2) mul abs(-6))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 9 + 5 + 6 - 4 + 7 + 6 - 6 + 3 + 7 + 6 + 3 + 3 + 7 + 6 + 3 + 3 + 7 + 6 + 3 + 3 + 7 + 6 + 3 + 3 + 7 + 6 + 3 + 3 + 7", "x2": "mod x_0_4 mul sqr INT- 3 sign add x_0_9 mul n n", "tree": "(x_0_4 mod ((-3)**2 mul sign((x_0_9 add (n mul n)))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 1 + 8 - 10 - 4 - 25 - 22 - 46 - 46 - 73 - 76 - 106 - 112 - 145 - 154 - 190 - 202 - 241 - 256 - 298 - 316 - 361 - 382 - 430", "x2": "add x_0_2 mul INT- 3 abs n", "tree": "(x_0_2 add (-3 mul abs(n)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 - 9 - 5 - 8 - 1 + 10 - 10 + 1 - 1 - 6 + 1 - 3 + 0 - 7 + 2 + 2 - 7 - 7 - 2 - 7 - 5 - 8 - 1 - 6 - 6 - 1 - 1 - 6 - 1 - 3", "x2": "add abs abs x_0_9 INT- 8", "tree": "(abs(abs(x_0_9)) add -8)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 3 - 6 + 4 - 4 - 7 + 9 + 1 + 2 + 3 + 6 + 33 + 60 - 48 + 24 + 69 - 93 - 21 - 12 - 21 - 48 - 291 - 534 + 438 - 210 - 633 + 843 + 195 + 96 + 177 + 420 + 2607", "x2": "add mul mul add sign sub x_0_2 n x_0_10 mul sign INT- 5 INT+ 9 INT+ 1 INT- 3", "tree": "((((sign((x_0_2 sub n)) add x_0_10) mul (sign(-5) mul 9)) mul 1) add -3)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 8 - 2 - 6 + 0 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 34 + 18 + 19 + 20 + 21 + 44 + 46 + 48", "x2": "mul n idiv n add sub INT+ 2 add INT- 6 mod n mod INT+ 3 sqr sub INT- 1 0 INT+ 9 idiv x_0_3 INT+ 5", "tree": "(n mul (n idiv ((2 sub (-6 add (n mod (3 mod ((-10 sub 9))**2)))) add (x_0_3 idiv 5))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 11 + 9 - 12 + 8 - 13 + 7 - 14 + 6 - 15 + 5 - 16 + 4 - 17 + 3 - 18 + 2 - 19 + 1 - 20 + 0 - 21", "x2": "sub sub sign abs add INT+ 2 sign INT+ 1 0 relu n x_0_1", "tree": "((sign(abs((2 add sign(10)))) sub relu(n)) sub x_0_1)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 7 + 6 + 3 + 18 + 9 + 22 + 11 + 26 + 12 + 31 + 12 + 41 + 12 + 59 + 11 + 99 + 10 + 196 + 9 + 465 + 8 + 1345", "x2": "add INT+ 8 idiv add sqr sub INT+ 2 sign n mul n add relu INT- 1 x_0_2 x_0_1", "tree": "(8 add ((((2 sub sign(n)))**2 add (n mul (relu(-1) add x_0_2))) idiv x_0_1))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 2 + 8 + 4 + 0 + 2 - 4 - 2 - 4 - 2 + 0 - 4 - 4 - 2 - 4 - 2 + 0 - 4 - 4 - 2 - 4 - 2 + 0 - 4 - 4 - 2 - 4 - 2", "x2": "mod x_0_6 INT- 6", "tree": "(x_0_6 mod -6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 - 234 - 2 8080 - 454 8960 - 9 2798 7840 - 2282 8500 8640 - 65 7460 8248 8320 - 2 1696 2072 2114 5600 - 807 989 862 6616 3200 - 33 4138 9481 7141 9156 4800 - 1 5236 7360 3661 6713 5354 8800 - 758 7894 5462 3512 3340 6730 2400 - 40 9746 3054 9669 6660 3963 4329 6000 - 2 3847 2349 7990 7745 6350 6717 9827 2000 - 1488 674 6274 6243 3276 2819 2021 2172 8000 - 99 1052 9301 8899 8056 2003 7588 6130 7084 8000 - 7 166 5474 5738 1062 3789 8661 2738 541 6038 4000 - 5262 4910 5930 3579 6784 2399 5955 3540 6202 8800 0 - 416 7892 9189 6843 5105 3118 479 6640 4171 2680 9600 0 - 34 7602 2694 4196 7487 7830 452 39 8107 8837 5920 6400 0 - 3 449 9588 311 6351 9297 9119 5955 4874 2506 1730 6480 6400 0 - 2795 3062 1812 6081 1071 5483 1788 7137 4562 666 8734 9227 5200 0", "x2": "mul abs mul INT+ 6 add sign n mul n INT- 7 x_0_1", "tree": "(abs((6 mul (sign(n) add (n mul -7)))) mul x_0_1)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "idiv relu n mod idiv INT+ 6 INT- 2 abs INT- 9", "tree": "(relu(n) idiv ((6 idiv -2) mod abs(-9)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 0 + 0 - 4 - 5 - 2 - 2 - 6 - 7 - 4 - 4 - 8 - 9 - 6 - 6 - 10 - 11 - 8 - 8 - 12 - 13 - 10 - 10 - 14", "x2": "sub mul x_0_2 sign mul add x_0_3 x_0_2 n n", "tree": "((x_0_2 mul sign(((x_0_3 add x_0_2) mul n))) sub n)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420", "x2": "sub abs sqr n n", "tree": "(abs((n)**2) sub n)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 - 3 - 3 - 6 - 3 - 3 - 6 - 3 - 3 - 6 - 3 - 3 - 6 - 3 - 3 - 6 - 3 - 3 - 6 - 3 - 3 - 6 - 3 - 3", "x2": "mod x_0_3 add x_0_3 x_0_1", "tree": "(x_0_3 mod (x_0_3 add x_0_1))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 5 - 23 - 55 - 105 - 177 - 275 - 403 - 565 - 765 - 1007 - 1295 - 1633 - 2025 - 2475 - 2987 - 3565 - 4213 - 4935 - 5735 - 6617 - 7585", "x2": "sub x_0_1 mul n add n n", "tree": "(x_0_1 sub (n mul (n add n)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 - 9 - 9 + 2 - 5 - 8 + 4 + 9 + 4 - 10 + 77 + 216 + 169 + 28 + 1230 + 3584 + 2941 + 666 + 2 3446 + 7 1880 + 6 3378 + 1 9404 + 54 3145 + 172 5792 + 161 5200 + 59 7688 + 1474 4322 + 4834 824 + 4752 734 + 2008 7040 + 4 5903 8700", "x2": "relu mul n add abs x_0_10 relu mul x_0_4 abs INT- 1", "tree": "relu((n mul (abs(x_0_10) add relu((x_0_4 mul abs(-1))))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 32 + 34 + 36 + 38", "x2": "mul idiv n INT+ 9 add sub INT- 2 relu INT- 1 0 n", "tree": "((n idiv 9) mul ((-2 sub relu(-10)) add n))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 - 4 - 5 - 9 - 6 - 8 + 8 - 9 - 8 - 5 + 123 + 146 + 173 + 199 + 225 + 258 + 283 + 327 + 363 + 404 + 435 + 478 + 523 + 570 + 619 + 670 + 723 + 778 + 835 + 894 + 955", "x2": "sub mul n mul relu INT+ 1 n mod INT+ 6 x_0_10", "tree": "((n mul (relu(1) mul n)) sub (6 mod x_0_10))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 4 + 0 + 3 - 10 - 3 + 6 + 21 + 16 + 225 + 100 + 3102 + 1536 + 4 1041 + 2 1420 + 61 5450 + 34 2784 + 1046 3517 + 617 508 + 1 9880 6557 + 1 2340 9840 + 41 7493 7529 + 27 1501 6172 + 960 2356 6042 + 651 6039 1104 + 2 4005 8915 1750 + 1 6941 7016 9796 + 64 8159 711 2181", "x2": "mul add x_0_2 sub add sqr mod x_0_6 n INT+ 4 n n", "tree": "((x_0_2 add ((((x_0_6 mod n))**2 add 4) sub n)) mul n)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 7 + 6 + 3 + 2 + 7 - 1 - 3 - 2 - 4 - 1 + 4 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1", "x2": "idiv mul x_0_6 n add mod sub idiv x_0_11 n n relu n add INT- 1 0 mul n n", "tree": "((x_0_6 mul n) idiv ((((x_0_11 idiv n) sub n) mod relu(n)) add (-10 add (n mul n))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 3 + 6 - 10 + 10 + 2 + 4 - 7 + 3 + 9 + 7 + 4 + 20 + 22 - 203 + 238 - 13 + 4629 - 24 + 1 8748 - 10 + 15 475 - 17 + 316 203 - 1 - 6 3836 808 + 213 - 12 + 178 7509 3416 - 52 + 335 1401 2647 5663 - 40 + 5043 545 6715 5201 7696", "x2": "sub mul add abs relu x_0_2 INT+ 1 add x_0_11 sign mul n n mod n mul x_0_3 n", "tree": "(((abs(relu(x_0_2)) add 1) mul (x_0_11 add sign((n mul n)))) sub (n mod (x_0_3 mul n)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 1 - 10 + 2599 + 2600 + 2619 + 7798 + 7801 + 7840 + 1 8199 + 1 8206 + 1 8285 + 3 9004 + 3 9019 + 3 9178 + 8 617 + 8 648 + 8 967 + 16 3846 + 16 3909 + 16 4548 + 33 307 + 33 434 + 33 1713", "x2": "add n add INT+ 9 mod add INT- 8 sub n n mul add sqr mul INT- 9 INT- 4 abs x_0_3 INT+ 2", "tree": "(n add (9 add ((-8 add (n sub n)) mod ((((-9 mul -4))**2 add abs(x_0_3)) mul 2))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 - 2 - 3 + 105 + 81 + 89 + 89 - 3271 - 5863 - 1 135 - 1 4407 + 14 2601 + 42 4025 + 74 8345 + 120 9369 - 335 3863 - 1692 2663 - 5284 3223 - 1 1089 2935 + 5009 2489 + 8 6238 313 + 25 5336 3449 + 61 193 7369 + 44 9897 7721", "x2": "add x_0_1 mul mod INT+ 8 n mul add INT- 5 sign x_0_2 x_0_4", "tree": "(x_0_1 add ((8 mod n) mul ((-5 add sign(x_0_2)) mul x_0_4)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 - 14 - 42 - 168 - 840 - 5040 - 3 5280 - 28 2240 - 254 160 - 2540 1600 - 2 7941 7600 - 33 5301 1200 - 435 8914 5600 - 6102 4803 8400 - 9 1537 2057 6000 - 146 4595 2921 6000 - 2489 8119 9667 2000 - 4 4816 6159 4009 6000 - 85 1515 7028 6182 4000 - 1703 314 572 3648 0 - 3 5763 6595 2019 6608 0 - 78 6800 5094 4432 5376 0", "x2": "mul relu n x_0_1", "tree": "(relu(n) mul x_0_1)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 8 - 10 + 10 - 6 + 3 + 3 + 0 + 2 + 5 + 2 + 1 + 10 + 12 + 0 + 12 + 11 + 2 + 3 + 10 + 1 + 21 + 12 + 13 + 20 + 11", "x2": "mod add INT+ 1 0 mod x_0_5 sqr sqr add add x_0_4 n INT+ 4 n", "tree": "((10 add (x_0_5 mod ((((x_0_4 add n) add 4))**2)**2)) mod n)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 8 - 7 + 16 + 14 - 32 - 28 + 64 + 56 - 128 - 112 + 256 + 224 - 512 - 448 + 1024 + 896 - 2048 - 1792 + 4096 + 3584 - 8192 - 7168 + 1 6384", "x2": "mul sub INT- 4 INT- 2 x_0_2", "tree": "((-4 sub -2) mul x_0_2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 10 - 3 + 8 - 5 - 9 + 6 + 5 + 64 + 78 + 102 + 119 + 143 + 172 + 199 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730 + 785", "x2": "sub mul n n idiv sub relu sub INT- 9 n n x_0_7", "tree": "((n mul n) sub ((relu((-9 sub n)) sub n) idiv x_0_7))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3", "x2": "mod n sub INT+ 5 sqr INT+ 3", "tree": "(n mod (5 sub (3)**2))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 7 + 2 + 7 + 10 - 10 + 10 + 5 + 41 - 5 + 39 + 89 + 88 + 87 + 11 + 1666 + 9 + 1504 + 7903 + 7725 + 7549 + 100 + 277 5534 + 58 + 226 1992 + 6245 7384 + 5967 5599 + 5698 7374 + 9972", "x2": "sub sqr add x_0_7 sqr idiv sign abs idiv mul INT- 7 n n relu INT+ 8 n", "tree": "(((x_0_7 add ((sign(abs(((-7 mul n) idiv n))) idiv relu(8)))**2))**2 sub n)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 3 - 1 - 4 + 0 + 2 - 7 + 7 + 10 - 2 - 1 - 1 + 0 + 0 - 2 - 3 - 1 - 2 - 2 - 1 - 1 + 0 + 0 - 2 - 3 - 1 - 2 - 2 - 1 - 1", "x2": "mod x_0_9 INT- 4", "tree": "(x_0_9 mod -4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 5 + 10 - 7 + 2 - 8 + 18 - 11 + 4 - 12 + 26 - 15 + 6 - 16 + 34 - 19 + 8 - 20 + 42 - 23 + 10 - 24 + 50", "x2": "idiv add mul sqr n n n add mul x_0_2 mod INT- 1 n n", "tree": "((((n)**2 mul n) add n) idiv ((x_0_2 mul (-1 mod n)) add n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11", "x2": "sub x_0_1 sub add x_0_1 abs x_0_1 n", "tree": "(x_0_1 sub ((x_0_1 add abs(x_0_1)) sub n))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 6 - 9 + 1 - 5 + 60 - 1 1963 + 24 5688 - 7848 9234 + 24 5687 9950 - 1 1491 6087 4334 + 50 9458 6249 9644 - 3 2821 1837 2865 9430 + 195 7136 2526 8747 4628 - 16 6157 2426 2265 3044 4500 + 1282 6288 1437 7397 6323 1264 - 138 7761 9060 9999 9695 9259 552 + 1 3464 5242 4121 7388 778 4929 9924 - 1808 5451 9364 4862 448 4749 3130 9260 + 21 5432 3878 5615 5064 3931 3573 7895 0 - 3 5172 7677 8049 7706 3292 9660 5809 2833 7516 + 504 6632 9449 3261 5314 5136 4054 8322 7420 7856 - 98 4278 2508 4591 6179 6321 2114 6701 7763 6491 6704 + 1 6743 5169 1933 6228 7012 3329 9376 5269 2092 3421 16 - 3844 8369 1736 6321 4957 1833 2841 6428 3108 6111 1375 0 + 76 5138 5387 7214 4752 7351 8588 1224 2149 983 9082 1949 6200", "x2": "mul n mod x_0_5 mul mul x_0_2 relu n abs sqr n", "tree": "(n mul (x_0_5 mod ((x_0_2 mul relu(n)) mul abs((n)**2))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 3 - 1 - 1 - 6 + 7 + 2 - 7 + 6 - 6 - 6 + 10 - 10 + 10 - 8 + 6 + 16 - 26 + 20 - 10 + 12 + 2 - 36 + 58 - 40 + 14 + 30 - 10 + 82 - 92 + 76 + 48 - 64", "x2": "sub add mod INT- 4 x_0_3 mul INT- 2 x_0_6 mod mul sub x_0_11 n INT+ 6 relu add INT- 5 INT+ 9", "tree": "(((-4 mod x_0_3) add (-2 mul x_0_6)) sub (((x_0_11 sub n) mul 6) mod relu((-5 add 9))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 2 + 0 - 6 - 2 + 7 + 6 + 1 - 3 - 2 + 2 - 4 + 3 + 16 + 0 + 144 + 16 + 196 + 144 + 4 + 36 + 16 + 16 + 64 + 36 + 1024 + 0 + 8 2944 + 1024 + 15 3664 + 8 2944 + 64 + 5184 + 1024", "x2": "sqr mul INT+ 2 x_0_12", "tree": "((2 mul x_0_12))**2", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 8 - 9 - 9 - 1 + 8 + 10 + 10 - 5 + 64 + 81 + 100 + 121 + 196 + 225 + 256 + 225 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900", "x2": "sqr add sign sub sub mod sqr INT+ 7 relu n INT- 2 sub n x_0_8 n", "tree": "((sign(((((7)**2 mod relu(n)) sub -2) sub (n sub x_0_8))) add n))**2", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 1 - 6 + 1 - 5 + 4 + 3 - 10 + 2 + 2 - 7 - 6 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_12 relu n", "tree": "(x_0_12 idiv relu(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 1 - 9 - 3 - 9 - 8 - 6 - 1 - 2 - 1 - 1 - 1 - 6 - 3 - 6 - 6 - 6 - 1 - 2 - 1 - 1 - 1 - 6 - 3 - 6 - 6 - 6", "x2": "idiv relu INT+ 6 x_0_5", "tree": "(relu(6) idiv x_0_5)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 10 - 9 + 7 + 14 - 2 + 8 + 14 + 6 + 12 + 23 + 10 + 24 + 31 + 14 + 24 + 44 + 24 + 31 + 48 + 25 + 51 + 66 + 41", "x2": "mod add mod sqr INT- 8 n x_0_3 add n x_0_3", "tree": "((((-8)**2 mod n) add x_0_3) mod (n add x_0_3))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 - 7 + 1 + 0 - 6 + 0 - 7 - 54 - 70 + 11 + 0 - 78 + 0 - 105 - 864 - 1190 + 198 + 0 - 1560 + 0 - 2310 - 1 9872 - 2 8560 + 4950 + 0 - 4 2120 + 0 - 6 6990", "x2": "mul x_0_7 add n INT+ 1", "tree": "(x_0_7 mul (n add 1))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 1 + 1 + 267 + 265 + 19 + 681 + 457 + 205 + 939 + 1321 + 1097 + 2125 + 689 + 1421 + 307 + 2905 + 2009 + 301 + 4147 + 2105 + 1459 + 3241", "x2": "sub INT- 1 mod mul abs abs INT- 2 x_0_1 mul add n mul n relu sub n INT- 5 INT- 1 0", "tree": "(-1 sub ((abs(abs(-2)) mul x_0_1) mod ((n add (n mul relu((n sub -5)))) mul -10)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 38 - 243 + 2592 - 405 + 5184 - 567 + 8424 - 729 + 1 2312 - 891 + 1 6848 - 1053 + 2 2032 - 1215 + 2 7864 - 1377 + 3 4344 - 1539 + 4 1472 - 1701 + 4 9248", "x2": "mod mul mul sub INT+ 6 INT- 3 n INT- 9 mul x_0_1 sub INT- 8 n", "tree": "((((6 sub -3) mul n) mul -9) mod (x_0_1 mul (-8 sub n)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 8 + 3 - 3 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0 + 3 + 0 + 10 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 6 + 18 + 36 + 60 + 90 + 126 + 168 + 216 + 270 + 330 + 396 + 468 + 546 + 630 + 720 + 816 + 918 + 1026 + 1140 + 1260", "x2": "abs mul sub n sqr n INT+ 3", "tree": "abs(((n sub (n)**2) mul 3))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 - 6 + 1 + 5 + 2 + 2 + 4 + 8 + 9 + 10 + 6 + 12 + 5 + 7 + 5 + 6 + 17 + 9 + 19 + 7 + 21 + 8 + 12 + 12 + 9", "x2": "abs idiv n sub mod idiv x_0_4 sign n INT+ 3 INT+ 3", "tree": "abs((n idiv (((x_0_4 idiv sign(n)) mod 3) sub 3)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 3 + 2 + 42 + 564 + 1 1400 + 34 2180 + 1437 1812 + 8 482 1808 + 579 4717 608 + 5 2152 4535 5260 + 573 6769 8907 9260 + 7 5725 3625 5846 3112 + 1181 3156 5591 2024 6408 + 21 4999 4493 7598 8484 7348 + 4514 9884 3689 5758 1794 4340 + 108 3597 2248 5498 1963 664 3040 + 2 9473 8445 1605 5509 3954 690 8512 + 901 8996 4219 1298 5874 9945 1400 6508 + 30 8449 6776 2942 4116 9248 1237 9022 7788 + 1 1721 877 4991 8116 4431 4287 402 8656 1720 + 492 2856 8549 6560 8906 1200 556 9203 5592 4920 + 22 7435 9866 9941 1131 4627 4425 7297 2044 3731 5812", "x2": "mul mul relu n add INT- 1 n mod idiv INT- 5 n add x_0_1 abs INT- 7", "tree": "((relu(n) mul (-1 add n)) mul ((-5 idiv n) mod (x_0_1 add abs(-7))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 13 - 50 - 111 - 196 - 305 - 438 - 595 - 776 - 981 - 1210 - 1463 - 1740 - 2041 - 2366 - 2715 - 3088 - 3485 - 3906 - 4351 - 4820 - 5313", "x2": "sub mul INT- 3 sqr add n n n", "tree": "((-3 mul ((n add n))**2) sub n)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 9 + 5 - 2 + 1 - 1 - 4 + 7 - 1 + 7 - 5 + 9 + 2 + 5 + 3 + 0 + 11 + 3 + 11 - 1 + 13 + 6 + 9 + 7 + 4 + 15 + 7 + 15 + 3 + 17", "x2": "sub x_0_9 INT- 4", "tree": "(x_0_9 sub -4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 2 - 3 - 2 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0", "x2": "idiv sign sign idiv x_0_4 add n INT- 1 n", "tree": "(sign(sign((x_0_4 idiv (n add -1)))) idiv n)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 4 - 8 - 16 - 32 - 64 - 128 - 256 - 512 - 1024 - 2048 - 4096 - 8192 - 1 6384 - 3 2768 - 6 5536 - 13 1072 - 26 2144 - 52 4288 - 104 8576 - 209 7152 - 419 4304 - 838 8608", "x2": "mul INT+ 2 x_0_1", "tree": "(2 mul x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 8 + 7 + 9 + 7 - 2925 + 360 + 1078 - 768 - 308 9502 + 49 0 + 193 6605 - 179 7120 - 88 7617 6595 + 17 2867 608 + 82 7892 2250 - 92 133 6320 - 53 8695 1585 8228 + 12 3219 6396 5520 + 68 7398 9128 3993 - 88 3328 2886 4000 - 59 3911 4123 3719 5225 + 15 5059 5945 4182 6832 + 98 1811 8672 894 3510 - 142 4631 8639 1897 9072 - 107 6464 4348 6116 6390 6250", "x2": "mul n mul n mul sub x_0_4 n mod mul n INT- 7 add add n n INT+ 1", "tree": "(n mul (n mul ((x_0_4 sub n) mul ((n mul -7) mod ((n add n) add 1)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 10 - 1 - 8 + 10 + 1 + 8 + 10 + 1 + 8 + 10 + 1 + 8 + 10 + 1 + 8 + 10 + 1 + 8 + 10 + 1 + 8 + 10 + 1 + 8", "x2": "idiv abs mul x_0_3 relu n n", "tree": "(abs((x_0_3 mul relu(n))) idiv n)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 3 - 10 - 7 - 8 - 6 + 2 + 5 + 4 + 6 + 10 + 7 + 2 + 6 - 4 - 1 + 4 + 6 + 2 + 11 + 8 + 6 + 4 + 1 - 2 + 0 + 2", "x2": "sub sub relu INT+ 9 abs x_0_4 mul sign sub INT+ 4 x_0_5 INT- 3", "tree": "((relu(9) sub abs(x_0_4)) sub (sign((4 sub x_0_5)) mul -3))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 3 + 7 - 8 + 6 + 23 + 19 + 4 - 44 + 20 + 224 + 36 + 36 - 504 + 156 + 544 + 540 + 624 - 8384 + 1440 + 5904 + 1672 + 4176 - 4 7616 + 3 5752 + 4 2624", "x2": "mod mul x_0_3 add abs add x_0_2 n x_0_5 mul n x_0_5", "tree": "((x_0_3 mul (abs((x_0_2 add n)) add x_0_5)) mod (n mul x_0_5))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 3 + 5 - 9 + 27 + 36 + 47 + 47 + 99 + 126 + 157 + 179 + 255 + 308 + 367 + 419 + 527 + 614 + 709 + 799 + 947 + 1076 + 1215 + 1351 + 1547", "x2": "add sub abs sqr abs n mod n x_0_2 x_0_4", "tree": "((abs((abs(n))**2) sub (n mod x_0_2)) add x_0_4)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 2 + 6 - 7 + 1 - 7 - 7 - 5 + 6 - 5 - 9 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign mul mul mod sign idiv abs mod n x_0_11 relu add n INT+ 5 n x_0_5 x_0_4", "tree": "sign((((sign((abs((n mod x_0_11)) idiv relu((n add 5)))) mod n) mul x_0_5) mul x_0_4))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 0 + 3 + 88 + 2 + 36 + 2 2181 + 1456 + 47 1744 + 6 4280 5380 + 32 320 + 301 1613 6960 + 55 4535 3452 1840 + 258 2612 320 + 1676 8665 593 2800 + 533 6848 1623 8188 1600 + 2107 4114 1811 2000 + 3 5197 925 8622 8285 4400 + 1 2687 1823 9946 7199 4900 4800 + 6 7964 182 3411 2000 0 + 69 4494 9520 7442 2036 9879 400 + 0 + 0 + 24", "x2": "add mul x_0_3 mul n mod x_0_1 sqr sub INT+ 9 mul n INT+ 7 relu sub n x_0_2", "tree": "((x_0_3 mul (n mul (x_0_1 mod ((9 sub (n mul 7)))**2))) add relu((n sub x_0_2)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 - 2 + 9 - 4 + 6 - 4 + 3 + 10 + 99 + 113 + 145 + 169 + 204 + 239 + 279 + 331 + 469 + 536 + 625 + 710 + 810 + 914 + 1027 + 1156 + 1375 + 1527 + 1705 + 1883 + 2080", "x2": "add add relu sqr add INT- 9 n abs x_0_8 add n sqr n", "tree": "((relu(((-9 add n))**2) add abs(x_0_8)) add (n add (n)**2))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 9 - 6 - 1 + 6 + 15 + 26 + 39 + 54 + 71 + 90 + 111 + 134 + 159 + 186 + 215 + 246 + 279 + 314 + 351 + 390 + 431", "x2": "add sqr n INT- 1 0", "tree": "((n)**2 add -10)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 3 - 3 - 3 + 7 + 17 + 62 + 182 + 232 + 292 + 502 + 902 + 1127 + 1477 + 1862 + 2222 + 3002 + 3982 + 4807 + 5367 + 6387 + 7017", "x2": "add mul mul mod x_0_1 abs n INT+ 5 sub n abs mul INT- 4 idiv INT- 2 n x_0_1", "tree": "((((x_0_1 mod abs(n)) mul 5) mul (n sub abs((-4 mul (-2 idiv n))))) add x_0_1)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 1 + 4 + 4 - 6 + 5 - 3 + 2 + 2 - 8 + 3 - 5 + 0 + 0 - 10 + 1 - 7 - 2 - 2 - 12 - 1 - 9 - 4 - 4 - 14 - 3 - 11", "x2": "add x_0_5 INT- 2", "tree": "(x_0_5 add -2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 2 + 30 + 23 + 55 + 48 + 80 + 73 + 105 + 98 + 130 + 123 + 155 + 148 + 180 + 173 + 205 + 198 + 230 + 223 + 255 + 248 + 280", "x2": "abs add sqr INT- 5 x_0_2", "tree": "abs(((-5)**2 add x_0_2))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 9 - 6 - 2 + 10 + 8 + 7 + 73 + 91 + 45 + 14 + 113 + 78 + 64 + 5345 + 8298 + 2043 + 215 + 1 2789 + 6105 + 4118 + 2856 9048 + 6885 6828 + 417 3874 + 4 6251 + 1 6355 8548 + 3727 1053 + 1695 7953", "x2": "add sign x_0_7 add n sqr x_0_7", "tree": "(sign(x_0_7) add (n add (x_0_7)**2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 7 - 142 - 248 - 717 - 1472 - 3020 - 5440 - 9419 - 1 5240 - 2 3818 - 3 5688 - 5 2041 - 7 3712 - 10 2216 - 13 8736 - 18 5159 - 24 3064 - 31 4758 - 40 2264 - 50 8357 - 63 5552 - 78 7140", "x2": "add n sub sub x_0_2 add sqr abs add idiv abs INT+ 3 x_0_2 sqr n INT- 1 n", "tree": "(n add ((x_0_2 sub ((abs(((abs(3) idiv x_0_2) add (n)**2)))**2 add -1)) sub n))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 7 + 1 + 3 + 8 + 4 - 9 + 34 + 45 + 74 + 97 + 150 + 162 + 160 + 387 + 459 + 869 + 1107 + 1889 + 2261 + 3086 + 5180 + 6690 + 1 2220 + 1 6007 + 2 8687 + 3 6455 + 5 7593", "x2": "sub x_0_2 idiv abs mul abs add INT- 9 sub INT- 2 x_0_7 n INT- 3", "tree": "(x_0_2 sub (abs((abs((-9 add (-2 sub x_0_7))) mul n)) idiv -3))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 10 + 9 - 10 - 7 - 2 - 2 + 1 - 2 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1", "x2": "idiv x_0_5 n", "tree": "(x_0_5 idiv n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3", "x2": "mul idiv abs n n idiv n INT- 1 0", "tree": "((abs(n) idiv n) mul (n idiv -10))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 9 + 5 - 8 + 9 - 4 - 8 - 5 + 4 - 26 + 5 - 4 + 26 + 13 + 4 + 36 - 13 + 56 + 26 - 5 + 4 - 26 - 13 - 68 + 26 - 125 + 68 - 26 + 125 + 120 + 26", "x2": "sub idiv sub x_0_8 x_0_3 sign sign mul x_0_5 add INT+ 3 mul n mod INT- 1 0 INT- 7 x_0_8", "tree": "(((x_0_8 sub x_0_3) idiv sign(sign((x_0_5 mul (3 add (n mul (-10 mod -7))))))) sub x_0_8)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 3 + 8 - 4 + 0 + 0 + 0 + 0 - 20 - 22 - 24 - 36 - 58 - 100 - 162 - 244 - 652 - 2040 - 7268 - 2 6552 - 9 8140 - 36 3584 - 134 8228 - 500 456 - 2782 1394 - 1 5883 9164 - 9 2303 2422", "x2": "mul mul INT- 2 add mod x_0_3 sub abs x_0_1 sign INT- 7 sub n INT- 2 idiv n INT+ 8", "tree": "((-2 mul ((x_0_3 mod (abs(x_0_1) sub sign(-7))) add (n sub -2))) mul (n idiv 8))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 7 + 9 + 4 + 15 + 8 + 25 + 21 + 33 + 27 + 45 + 42 + 55 + 50 + 69 + 67 + 81 + 77 + 97 + 96 + 111 + 108 + 129 + 129 + 145 + 143 + 165", "x2": "sub x_0_4 sub INT- 9 n", "tree": "(x_0_4 sub (-9 sub n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 + 7 + 8 + 8 + 375 + 3 4050 + 525 + 3 9000 + 180 675 + 216 750 + 252 825 + 1 8720 900 + 86 4324 975 + 103 7160 1050 + 120 9996 1125 + 8985 6432 1200 + 41 4875 5668 1275 + 49 7836 8504 1350 + 58 798 1340 1425 + 4313 1087 4176 1500 + 19 9140 2720 7012 1575 + 23 8961 6881 9848 1650 + 27 8783 1043 2684 1725 + 2070 2921 9604 5520 1800 + 9 5587 3305 9365 8356 1875 + 11 4701 6103 3527 1192 1950 + 13 3815 8900 7688 4028 2025", "x2": "mul add mul sqr relu INT+ 8 mod x_0_4 x_0_3 n mul INT+ 3 mul INT- 5 INT- 5", "tree": "((((relu(8))**2 mul (x_0_4 mod x_0_3)) add n) mul (3 mul (-5 mul -5)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 19 + 28 - 41 + 45 - 45 + 27 - 15 + 1 + 0 - 27 + 24 - 69 + 78 - 115 + 96 - 82 + 32 - 12 + 0 - 54 + 64 - 152 + 192", "x2": "sub idiv relu x_0_1 n mul mod n INT- 1 0 idiv add n x_0_1 INT- 4", "tree": "((relu(x_0_1) idiv n) sub ((n mod -10) mul ((n add x_0_1) idiv -4)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 14 + 10 + 11 + 11 + 12 + 12 + 12 + 13 + 13 + 13 + 13 + 14 + 14 + 14 + 14 + 14 + 15 + 15 + 15 + 15 + 15 + 16 + 16", "x2": "add INT+ 1 0 idiv mul add INT+ 4 mul INT- 4 mul relu idiv INT- 1 INT+ 4 INT- 1 0 n relu x_0_1", "tree": "(10 add (((4 add (-4 mul (relu((-1 idiv 4)) mul -10))) mul n) idiv relu(x_0_1)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 3 + 8 + 8 + 1 - 4 - 18 + 7 - 24 - 9 - 18 + 11 - 51 + 13 - 85 + 15 + 16 + 17 + 18 - 1341 + 20 + 21 - 2 2775 + 23 - 2 8137 - 45 5475 + 26 + 27 - 1047 5897", "x2": "mod n mul x_0_5 x_0_3", "tree": "(n mod (x_0_5 mul x_0_3))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 9 - 12 + 27 + 36 - 81 - 108 + 243 + 324 - 729 - 972 + 2187 + 2916 - 6561 - 8748 + 1 9683 + 2 6244 - 5 9049 - 7 8732 + 17 7147 + 23 6196 - 53 1441 - 70 8588 + 159 4323 + 212 5764", "x2": "mul INT- 3 x_0_2", "tree": "(-3 mul x_0_2)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 3 - 5 + 6 + 3 + 31 + 6 + 3 + 31 + 6 + 3 + 31 + 6 + 3 + 31 + 6 + 3 + 31 + 6 + 3 + 31 + 6 + 3 + 31 + 6 + 3", "x2": "abs mod x_0_3 add sub n n abs sqr n", "tree": "abs((x_0_3 mod ((n sub n) add abs((n)**2))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 3 + 3 - 7 - 5 - 10 - 4 + 10 + 5 + 13 + 2 + 5 - 1 + 5 + 18 + 14 + 23 + 11 + 15 + 8 + 14 + 27 + 23 + 33 + 20 + 25 + 17 + 23 + 36 + 32", "x2": "add abs abs idiv add x_0_2 n n sub INT+ 1 0 sub mul INT+ 2 sign n x_0_7", "tree": "(abs(abs(((x_0_2 add n) idiv n))) add (10 sub ((2 mul sign(n)) sub x_0_7)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 5 + 8 + 0 + 20 + 0 + 7 + 18 + 9 + 0 + 4 + 0 + 13 + 7 + 15 + 0 + 5 + 0 + 19 + 11 + 21 + 0 + 6 + 0 + 25 + 15", "x2": "idiv sqr sub n x_0_3 n", "tree": "(((n sub x_0_3))**2 idiv n)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 9 + 8 - 2 + 40 + 3 + 36 + 219 + 28 + 231 + 2078 + 175 + 2616 + 2 6833 + 2242 + 3 9003 + 42 9060 + 3 7813 + 70 1718 + 815 1767 + 75 5848 + 1473 5625 + 1 7933 8378 + 1738 3963 + 3 5365 4412 + 44 8345 8813 + 4 5198 2350", "x2": "sub abs mod INT- 8 abs mul sub x_0_3 n n INT+ 4", "tree": "(abs((-8 mod abs(((x_0_3 sub n) mul n)))) sub 4)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 9 - 6 + 6 + 12 + 8 + 10 + 14 + 16 + 16 + 18 + 20 + 21 + 22 + 24 + 25 + 27 + 28 + 29 + 31 + 32 + 33 + 35 + 36 + 37 + 39 + 40", "x2": "add sub sqr idiv mul sqr INT- 1 INT- 8 INT+ 7 idiv x_0_4 INT- 4 n", "tree": "((((((-1)**2 mul -8) idiv 7))**2 sub (x_0_4 idiv -4)) add n)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 2 + 6 + 5 - 6 + 1 - 1 + 1 + 6 - 1 + 3 + 0 + 66 - 42 + 10 - 20 + 2 + 119 - 2 + 24 + 20 + 201 + 0 + 198 - 168 + 30 + 840 - 6 + 75 + 588 + 4848 + 20 + 597 + 0", "x2": "mul INT+ 1 mul add x_0_9 sign mul x_0_9 n abs mod x_0_11 n", "tree": "(1 mul ((x_0_9 add sign((x_0_9 mul n))) mul abs((x_0_11 mod n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 9 + 18 - 36 + 72 - 144 + 288 - 576 + 1152 - 2304 + 4608 - 9216 + 1 8432 - 3 6864 + 7 3728 - 14 7456 + 29 4912 - 58 9824 + 117 9648 - 235 9296 + 471 8592 - 943 7184 + 1887 4368 - 3774 8736 + 7549 7472", "x2": "mul x_0_1 mod INT- 7 INT- 5", "tree": "(x_0_1 mul (-7 mod -5))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 3 - 6 - 252 + 135 + 324 + 1 5876 - 9720 - 2 6244 - 142 8840 + 96 2280 + 283 4352 + 1 6717 4280 - 1 2124 7280 - 3 8263 7520 - 240 7309 6320 + 185 5083 3840 + 619 8727 8240 + 4 1164 9947 720 - 3 3391 5009 1200 - 11 7155 9558 7360 - 815 668 9520 2560 + 691 2040 6887 8400 + 2530 5686 4686 9760 + 18 3390 514 2057 6000 - 16 1741 7521 1754 5600", "x2": "mul sub idiv INT+ 4 INT+ 7 mul INT+ 9 x_0_3 relu n", "tree": "(((4 idiv 7) sub (9 mul x_0_3)) mul relu(n))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr sub abs add sign x_0_1 n mod INT- 1 0 INT+ 7", "tree": "((abs((sign(x_0_1) add n)) sub (-10 mod 7)))**2", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 16 + 36 + 36 + 36", "x2": "sqr mul INT- 2 sub abs relu idiv sign INT+ 9 idiv relu n INT- 1 idiv n INT- 1 0", "tree": "((-2 mul (abs(relu((sign(9) idiv (relu(n) idiv -1)))) sub (n idiv -10))))**2", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 3 - 5 + 3 - 5 - 2 - 1 + 7 + 0 - 7 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1", "x2": "sign sub x_0_6 x_0_9", "tree": "sign((x_0_6 sub x_0_9))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 8 - 9 + 6 + 3 - 4 - 2 + 0 + 4 + 1 + 1 + 4 + 1 + 4 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1", "x2": "mod sqr x_0_7 INT+ 5", "tree": "((x_0_7)**2 mod 5)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 10 - 40 - 90 - 160 - 250 - 360 - 490 - 640 - 810 - 1000 - 1210 - 1440 - 1690 - 1960 - 2250 - 2560 - 2890 - 3240 - 3610 - 4000 - 4410 - 4840 - 5290", "x2": "mul mul n INT- 1 0 n", "tree": "((n mul -10) mul n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 3 - 2 - 5 - 2 + 7 + 6 - 5 - 46 + 249 + 146 + 449 + 158 + 657 + 546 + 405 + 4800 + 2 4997 + 1 5000 + 4 5009 + 1 6408 + 6 6197 + 5 4956 + 4 5251 + 50 4948 + 251 4651 + 154 4960 + 451 7259 + 170 6948 + 667 4607 + 554 802", "x2": "add x_0_7 add mul abs x_0_8 sqr INT+ 1 0 sub relu idiv mod INT- 5 INT+ 3 INT- 7 sqr INT+ 7", "tree": "(x_0_7 add ((abs(x_0_8) mul (10)**2) add (relu(((-5 mod 3) idiv -7)) sub (7)**2)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 3 - 3 - 3 + 5 - 8 + 1 - 8 - 8 + 0 + 1 + 0 - 2 - 41 + 7 - 37 - 25 + 7 + 7 + 7 + 7 - 1640 - 11 - 1334 - 593 + 0 - 2 - 3 + 0 - 268 9553 - 76", "x2": "mod INT+ 7 sub n sub sqr abs x_0_8 mod sqr INT- 1 0 n", "tree": "(7 mod (n sub ((abs(x_0_8))**2 sub ((-10)**2 mod n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 4 + 1 - 5 + 8 - 7 + 10 + 7 + 2 - 7 - 1 + 9 + 4 + 1 + 5 + 8 + 7 + 10 + 7 + 2 + 7 + 1 + 9 + 4 + 1 + 5 + 8 + 7 + 10 + 7 + 2 + 7 + 1 + 9", "x2": "abs add mod n n x_0_11", "tree": "abs(((n mod n) add x_0_11))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 9 - 1 + 2 - 15 - 6 - 2 - 18 - 8 - 3 - 18 - 17 - 11 - 25 - 23 - 16 - 29 - 26 - 18 - 30 - 26 - 27 - 38 - 33 - 33 - 43 - 37", "x2": "add mod n INT- 1 0 x_0_3", "tree": "((n mod -10) add x_0_3)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 1 + 2 + 8 + 0 + 5 + 5 + 0 + 0 + 5 + 6 + 0 + 0 + 9 + 9 + 0 + 0 + 9 + 10 + 0 + 0 + 13 + 13 + 0 + 0 + 13 + 14", "x2": "abs relu mod sub n x_0_4 n", "tree": "abs(relu(((n sub x_0_4) mod n)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 + 10 + 10 - 8 - 6 - 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1", "x2": "mod relu sub idiv n n relu idiv x_0_7 x_0_4 n", "tree": "(relu(((n idiv n) sub relu((x_0_7 idiv x_0_4)))) mod n)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 3 + 7 + 9 + 7 - 4 + 8 + 4 + 0 + 7 + 9 + 7 + 0 + 8 + 4 + 0 + 7 + 9 + 7 + 0 + 8 + 4 + 0 + 7 + 9 + 7 + 0 + 8 + 4 + 0 + 7", "x2": "relu relu x_0_7", "tree": "relu(relu(x_0_7))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256", "x2": "sqr sqr sub abs n sqr sign mod n n", "tree": "(((abs(n) sub (sign((n mod n)))**2))**2)**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 5 + 5 + 2 + 5 + 5 + 2 + 6 + 5 + 2 + 7 + 10 + 2 + 8 + 15 + 7 + 9 + 20 + 12 + 14 + 25 + 17 + 19 + 30 + 22 + 24 + 35", "x2": "add x_0_3 mod mod relu INT+ 5 n x_0_4", "tree": "(x_0_3 add ((relu(5) mod n) mod x_0_4))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 - 2 + 3 + 2 - 6 + 8 - 7 - 13 + 47 - 23 - 50 + 224 - 98 - 212 + 1024 - 455 - 933 + 4643 - 2150 - 4140 + 2 1009 - 1 177 - 1 8393 + 9 5017 - 4 8108 - 8 1684 + 42 9656 - 22 6981 - 36 2480 + 194 2658", "x2": "add add add abs INT+ 9 idiv mul INT- 3 sub mul INT+ 9 x_0_3 x_0_7 INT- 6 INT- 9 INT+ 1 0", "tree": "(((abs(9) add ((-3 mul ((9 mul x_0_3) sub x_0_7)) idiv -6)) add -9) add 10)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 9 - 1 + 4 + 9 + 1 + 10 + 3 + 9 - 8 + 9 + 1 - 4 - 9 - 1 - 10 - 3 - 9 + 8 - 9 - 1 + 4 + 9 + 1 + 10 + 3 + 9 - 8 + 9 + 1 - 4 - 9", "x2": "sub sub n x_0_9 abs relu mul relu n INT+ 1", "tree": "((n sub x_0_9) sub abs(relu((relu(n) mul 1))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "mul relu n n", "tree": "(relu(n) mul n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 - 1 - 9 - 17 - 42 - 75 - 119 - 176 - 249 - 340 - 451 - 584 - 741 - 924 - 1135 - 1376 - 1649 - 1956 - 2299 - 2680 - 3101 - 3564 - 4071 - 4624 - 5225", "x2": "mod n add x_0_1 sub idiv relu n idiv add add x_0_2 INT- 5 INT+ 1 0 n sqr n", "tree": "(n mod (x_0_1 add ((relu(n) idiv (((x_0_2 add -5) add 10) idiv n)) sub (n)**2)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 + 1 + 3 - 2 - 10 + 1 + 7 - 25 - 20 - 26 - 24 - 60 - 36 - 74 - 44 - 137 - 51 - 210 - 37 - 351 - 133 - 587 - 282 - 875 - 57 - 1236 - 524 - 2206 - 1119 - 3219", "x2": "sub INT- 9 sub mod x_0_3 abs add add x_0_4 x_0_7 x_0_2 INT- 1 0", "tree": "(-9 sub ((x_0_3 mod abs(((x_0_4 add x_0_7) add x_0_2))) sub -10))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 9 + 6 - 6 + 8 + 10 + 5 + 10 + 7 + 2 + 7 + 2 + 7 + 8 + 8 + 9 + 7 + 2 + 7 + 2 + 7 + 8 + 8 + 9 + 7 + 2 + 7 + 2", "x2": "mul sub mod x_0_1 x_0_4 INT+ 9 sign mul sub idiv relu sub relu INT+ 1 x_0_3 n n INT+ 3", "tree": "(((x_0_1 mod x_0_4) sub 9) mul sign((((relu((relu(1) sub x_0_3)) idiv n) sub n) mul 3)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 3 + 6 + 2 - 5 - 1 + 9 - 4 + 6 + 4 + 5 - 3 + 7 - 7 - 3 + 16 + 9 - 28 + 2 + 15 - 9 - 4 + 21 - 31 - 12 + 49 - 13 - 62 + 62 + 29 - 89 + 29 + 80 - 112 + 13", "x2": "sub x_0_6 add x_0_2 x_0_11", "tree": "(x_0_6 sub (x_0_2 add x_0_11))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 3 + 7 - 6 - 4 + 15 + 12 + 16 + 3 + 5 + 24 + 21 + 25 + 12 + 14 + 33 + 30 + 34 + 21 + 23 + 42 + 39 + 43 + 30 + 32 + 51 + 48 + 52", "x2": "add x_0_5 INT+ 9", "tree": "(x_0_5 add 9)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 8 - 5 - 8 - 10 + 9 - 4 + 13 + 4 + 2 - 3 - 2 + 8 + 2 + 13 + 13 + 8 - 1 + 1 + 12 + 11 + 13 + 14 + 16 + 7 + 5 + 14 + 19 + 20 + 19", "x2": "sub add x_0_7 INT+ 1 0 abs sub sub n abs x_0_4 x_0_1", "tree": "((x_0_7 add 10) sub abs(((n sub abs(x_0_4)) sub x_0_1)))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 7 - 1 - 21 - 3 - 63 - 9 - 189 - 27 - 567 - 81 - 1701 - 243 - 5103 - 729 - 1 5309 - 2187 - 4 5927 - 6561 - 13 7781 - 1 9683 - 41 3343 - 5 9049 - 124 29 - 17 7147 - 372 87", "x2": "mul x_0_2 mod idiv mul n INT+ 3 n INT+ 9", "tree": "(x_0_2 mul (((n mul 3) idiv n) mod 9))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 4 + 12 + 8 + 16 + 24 + 20 + 28 + 36 + 32 + 40 + 48 + 44 + 52 + 60 + 56 + 64 + 72 + 68 + 76 + 84 + 80 + 88", "x2": "abs mul sqr INT+ 2 add n mod n INT- 3", "tree": "abs(((2)**2 mul (n add (n mod -3))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 - 5 - 15 - 26 - 47 - 79 - 132 - 217 - 355 - 578 - 939 - 1523 - 2468 - 3997 - 6471 - 1 474 - 1 6951 - 2 7431 - 4 4388 - 7 1825 - 11 6219 - 18 8050 - 30 4275 - 49 2331 - 79 6612", "x2": "add sub x_0_2 mul INT+ 6 sign sign INT+ 8 x_0_1", "tree": "((x_0_2 sub (6 mul sign(sign(8)))) add x_0_1)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 - 9 + 6 + 7 + 8 + 43 + 42 + 41 + 6 + 7 + 8 + 43 + 42 + 41 + 6 + 7 + 8 + 43 + 42 + 41 + 6 + 7 + 8 + 43 + 42 + 41", "x2": "sub sign INT- 1 0 mod x_0_3 mul INT- 2 sqr INT- 5", "tree": "(sign(-10) sub (x_0_3 mod (-2 mul (-5)**2)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 8 + 49 + 81 + 121 + 169 + 225 + 289 + 361 + 441 + 529 + 625 + 729 + 841 + 961 + 1089 + 1225 + 1369 + 1521 + 1681 + 1849 + 2025 + 2209 + 2401 + 2601", "x2": "sqr add n add sign relu add add x_0_2 INT+ 1 x_0_2 n", "tree": "((n add (sign(relu(((x_0_2 add 1) add x_0_2))) add n)))**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 + 2 - 8 + 4 + 0 - 15 + 0 - 80 - 8 + 0 - 255 + 0 - 6560 - 80 + 0 - 6 5535 + 0 - 4304 6720 - 6560 + 0 - 42 9496 7295 + 0 - 1853 201 8885 1840 - 4304 6720 + 0 - 1844 6744 737 955 1615 + 0", "x2": "mul add sub INT- 3 x_0_5 INT+ 5 x_0_5", "tree": "(((-3 sub x_0_5) add 5) mul x_0_5)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 3 - 4 + 3 - 720 + 1440 - 1080 + 12 9240 - 1440 + 19 3680 - 1800 + 25 8120 - 2160 + 32 2560 - 2520 + 38 7000 - 2880 + 45 1440 - 3240 + 51 5880 - 3600 + 58 320 - 3960 + 64 4760 - 4320 + 70 9200 - 4680", "x2": "mul mul add mul idiv INT+ 2 x_0_1 sub INT+ 1 0 mod INT+ 5 x_0_3 n sqr add INT+ 3 INT- 9 INT- 5", "tree": "(((((2 idiv x_0_1) mul (10 sub (5 mod x_0_3))) add n) mul ((3 add -9))**2) mul -5)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 6 + 9 + 0 - 8 + 7 - 2 - 10 + 5 - 4 - 12 + 3 - 6 - 14 + 1 - 8 - 16 - 1 - 10 - 18 - 3 - 12 - 20 - 5 - 14 - 22", "x2": "sub x_0_3 abs idiv add n sub mul INT+ 4 sign INT- 5 n INT+ 2", "tree": "(x_0_3 sub abs(((n add ((4 mul sign(-5)) sub n)) idiv 2)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 9 - 6 - 1 + 20 + 33 + 43 + 63 + 74 + 93 + 120 + 135 + 165 + 191 + 210 + 247 + 284 + 317 + 343 + 387 + 431 + 471 + 527 + 555 + 606 + 653 + 716", "x2": "add mod sub x_0_4 n idiv n abs sign x_0_4 sub sqr n n", "tree": "(((x_0_4 sub n) mod (n idiv abs(sign(x_0_4)))) add ((n)**2 sub n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 10 + 7 - 3 + 5 + 1225 + 900 + 2401 + 3136 + 2025 + 2500 + 3025 + 3600 + 4225 + 4900 + 5625 + 6400 + 7225 + 8100 + 9025 + 1 0 + 1 1025 + 1 2100 + 1 3225 + 1 4400 + 1 5625 + 1 6900 + 1 8225", "x2": "sqr mul n sub INT- 5 mod relu mul INT- 2 idiv add x_0_4 INT- 6 sub sqr n INT- 7 INT+ 1 0", "tree": "((n mul (-5 sub (relu((-2 mul ((x_0_4 add -6) idiv ((n)**2 sub -7)))) mod 10))))**2", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 10 - 16 - 21 - 25 - 28 - 30 - 31 - 31 - 30 - 28 - 25 - 21 - 16 - 10 - 3 + 4 + 15 + 26 + 38 + 51 + 65 + 80 + 96 + 113", "x2": "add INT- 7 sub add x_0_1 idiv INT+ 5 x_0_1 sub sub sub x_0_1 mod mod x_0_1 abs x_0_1 x_0_1 n x_0_1", "tree": "(-7 add ((x_0_1 add (5 idiv x_0_1)) sub (((x_0_1 sub ((x_0_1 mod abs(x_0_1)) mod x_0_1)) sub n) sub x_0_1)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 9 - 1 - 9 + 0 + 6 + 0 + 8 - 9 - 10 - 11 - 12 + 0 + 0 + 0 + 0 - 17 - 18 - 19 - 20 + 0 + 0 + 0 + 0 - 25 - 26 - 27", "x2": "sub mul abs idiv x_0_4 n n n", "tree": "((abs((x_0_4 idiv n)) mul n) sub n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 65 - 7 + 13 + 31 + 50 + 78 + 112 + 152 + 183 + 233 + 289 + 351 + 419 + 493 + 573 + 659 + 751 + 849 + 953 + 1063 + 1179 + 1301 + 1429", "x2": "sub sqr mul INT+ 2 sub relu n idiv n n add sqr add idiv INT- 9 n n n", "tree": "(((2 mul (relu(n) sub (n idiv n))))**2 sub ((((-9 idiv n) add n))**2 add n))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 10 - 1 + 2 + 8 + 6 + 2 + 5 + 3 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "mod idiv sign x_0_9 sqr add sqr n add x_0_4 mul INT- 2 n INT- 9", "tree": "((sign(x_0_9) idiv (((n)**2 add (x_0_4 add (-2 mul n))))**2) mod -9)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1", "x2": "mod n INT- 3", "tree": "(n mod -3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 1 + 10 + 30 + 66 + 258 + 342 + 438 + 546 + 666 + 798 + 942 + 1098 + 1266 + 1446 + 1638 + 1842 + 2058 + 2286 + 2526 + 2778 + 3042 + 3318 + 3606 + 3906 + 4218", "x2": "mul sub sqr add n sign abs idiv relu INT+ 4 idiv x_0_3 n n abs INT- 6", "tree": "((((n add sign(abs((relu(4) idiv (x_0_3 idiv n))))))**2 sub n) mul abs(-6))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 2 - 1 - 3 - 6 - 8 - 2 - 3 - 5 - 7 - 8 - 9 - 10 - 11 - 13 - 14 - 15 - 17 - 18 - 20 - 21 - 22", "x2": "sub idiv add n n INT- 1 0 mod sub INT- 9 idiv n INT- 9 n", "tree": "(((n add n) idiv -10) sub ((-9 sub (n idiv -9)) mod n))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 6 + 7 - 4 - 4 - 9 + 6 - 6 - 1 + 0 - 3 - 3 + 2 - 1 - 1 - 6 - 7 - 4 - 4 - 5 - 6 - 6 - 1 + 0 - 3 - 3 - 2 - 1 - 1 - 6", "x2": "add INT- 7 abs x_0_7", "tree": "(-7 add abs(x_0_7))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 3 + 9 - 7 - 2 + 0 + 0 + 0 - 24 - 24 + 0 + 0 + 0 - 24 - 24 + 0 + 0 + 0 - 24 - 24 + 0 + 0 + 0 - 24 - 24 + 0 + 0 + 0", "x2": "mod abs idiv x_0_5 mul INT+ 4 n sub mod mod INT+ 1 sub n INT- 1 0 INT+ 1 abs sqr INT+ 5", "tree": "(abs((x_0_5 idiv (4 mul n))) mod (((1 mod (n sub -10)) mod 1) sub abs((5)**2)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 7 + 9 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1", "x2": "mod sqr x_0_4 add n relu x_0_1", "tree": "((x_0_4)**2 mod (n add relu(x_0_1)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 2 + 0 + 7 + 3 - 8 - 3 - 2 - 3 - 6 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 1 - 1 - 1 - 1 - 1 - 2 - 2", "x2": "idiv relu sub add n x_0_5 INT- 4 sub x_0_6 n", "tree": "(relu(((n add x_0_5) sub -4)) idiv (x_0_6 sub n))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 2 - 9 + 6 + 36 + 30 + 216 + 210 + 1728 + 1890 + 1 7280 + 2 790 + 20 7360 + 27 270 + 290 3040 + 405 4050 + 4644 8640 + 6891 8850 + 8 3607 5520 + 13 945 8150 + 167 2151 400 + 274 9862 1150 + 3678 7322 8800 + 6324 6828 6450 + 8 8289 5749 1200 + 15 8117 716 1250", "x2": "abs mul n idiv x_0_2 sign abs abs sqr INT+ 7", "tree": "abs((n mul (x_0_2 idiv sign(abs(abs((7)**2))))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 6 - 6 + 394 + 433 + 476 + 523 + 570 + 619 + 670 + 723 + 778 + 835 + 894 + 955 + 1018 + 1083 + 1150 + 1219 + 1290 + 1363 + 1438 + 1515 + 1594 + 1675 + 1758", "x2": "add sign x_0_3 add INT- 7 sqr add mul INT+ 4 sqr sub INT+ 9 INT+ 7 n", "tree": "(sign(x_0_3) add (-7 add (((4 mul ((9 sub 7))**2) add n))**2))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 + 3 + 3 - 3 - 4 + 5 - 2 - 9 + 7 - 1 + 13 + 5 + 18 + 9 + 21 + 11 + 22 + 11 + 21 + 9 + 18 + 5 + 13 - 1 + 6 - 9 - 3 - 19 - 14 - 32 - 28", "x2": "add add x_0_2 sub sub abs INT+ 1 0 n INT- 8 idiv mod mul x_0_8 n x_0_4 n", "tree": "((x_0_2 add ((abs(10) sub n) sub -8)) add (((x_0_8 mul n) mod x_0_4) idiv n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 10 - 4 + 2 - 9 + 0 + 9 + 4 + 4 + 100 + 1 + 4 + 4 + 0 + 49 + 25 + 9 + 324 + 0 + 0 + 4 + 0 + 529 + 576 + 25 + 676 + 0 + 0", "x2": "sqr idiv n sub x_0_4 sign idiv mod sub x_0_5 sign mod x_0_3 INT+ 5 n sub x_0_4 n", "tree": "((n idiv (x_0_4 sub sign((((x_0_5 sub sign((x_0_3 mod 5))) mod n) idiv (x_0_4 sub n))))))**2", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 4 - 9 - 2 - 8 + 6 + 3 + 3 + 7 + 7 + 2 + 6 + 3 + 3 + 7 + 7 + 2 + 6 + 3 + 3 + 7 + 7 + 2 + 6 + 3 + 3 + 7 + 7 + 2 + 6", "x2": "mod add x_0_6 abs relu n n", "tree": "((x_0_6 add abs(relu(n))) mod n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 4 + 1 + 11 + 31 + 71 + 151 + 311 + 631 + 1271 + 2551 + 5111 + 1 231 + 2 471 + 4 951 + 8 1911 + 16 3831 + 32 7671 + 65 5351 + 131 711 + 262 1431 + 524 2871 + 1048 5751 + 2097 1511 + 4194 3031", "x2": "add INT+ 9 mul x_0_1 INT+ 2", "tree": "(9 add (x_0_1 mul 2))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 + 9 + 17 + 24 + 45 + 66 + 88 + 126 + 166 + 209 + 270 + 335 + 405 + 495 + 591 + 694 + 819 + 952 + 1094 + 1260 + 1436 + 1623 + 1836 + 2061 + 2299", "x2": "mul abs sign mod mod x_0_2 x_0_2 mod abs INT+ 3 x_0_1 add sqr abs n x_0_3", "tree": "(abs(sign(((x_0_2 mod x_0_2) mod (abs(3) mod x_0_1)))) mul ((abs(n))**2 add x_0_3))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 7 - 1 - 30 + 49 + 5 + 210 - 345 - 35 - 1472 + 2415 + 243 + 1 304 - 1 6907 - 1701 - 7 2130 + 11 8349 + 1 1905 + 50 4910 - 82 8445 - 8 3335 - 353 4372 + 579 9115 + 58 3343 + 2474 604 - 4059 3807", "x2": "add mod add add n n INT+ 6 INT- 4 mul INT- 7 x_0_3", "tree": "((((n add n) add 6) mod -4) add (-7 mul x_0_3))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 - 5 + 8 - 10 + 6 - 1 + 10 + 0 - 10 + 3 + 7 + 3 + 58 + 69 + 131 + 160 + 92 + 21 + 198 + 4 + 267 + 135 + 293 + 233 + 1542 + 1815 + 3736 + 4484 + 2935 + 766 + 6432 + 362 + 1 354 + 6405 + 1 3992", "x2": "add abs add mod x_0_9 INT+ 2 mul n x_0_12 x_0_8", "tree": "(abs(((x_0_9 mod 2) add (n mul x_0_12))) add x_0_8)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 9 - 2 - 5 + 0 + 10 + 0 - 9 - 25 + 0 + 20 + 0 + 3 + 48 + 0 - 40 + 0 + 0 + 128 + 0 + 23 + 0 + 0 + 712 + 0 + 3 + 0 + 0 + 1 8105 + 0 + 0", "x2": "idiv sqr x_0_5 add abs n x_0_7", "tree": "((x_0_5)**2 idiv (abs(n) add x_0_7))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 4 + 5 + 2 + 2 + 5 + 2 + 6 + 3 + 13 + 1 + 8 + 5 + 12 + 3 + 6 + 6 + 3 + 6 + 2 + 5 + 5 + 7 + 0 + 3 + 6 + 5 + 2 + 2 + 5 + 2 + 6", "x2": "relu abs sub x_0_8 sub x_0_4 INT- 4", "tree": "relu(abs((x_0_8 sub (x_0_4 sub -4))))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 83 + 6972 + 59 2620 + 5096 5320 + 44 3398 2840 + 3901 9048 9920 + 34 7269 5360 2880 + 3125 4258 2425 9200 + 28 4413 7500 758 7200 + 2616 6065 6 9802 2400 + 24 3344 4045 649 1608 3200 + 2287 4374 236 1021 1182 800 + 21 7306 5532 2429 7006 2297 6000 + 2086 1429 1095 3251 2598 569 6000 + 20 2355 8623 6246 5372 2011 5251 2000 + 1983 874 5115 2160 6475 7129 4617 6000 + 19 6325 6576 6406 3904 1095 5816 7142 4000 + 1963 2565 7664 639 410 9558 1671 4240 0 + 19 8288 9142 4070 4543 1506 5374 8813 8240 0 + 2022 5469 2525 5186 3401 3666 8237 9010 480 0 + 20 8322 3333 128 4193 340 7682 8503 8034 9440 0 + 2166 5522 6633 3355 6075 5439 9016 4395 5634 1760 0 + 22 7487 9879 6500 2338 7932 1189 6726 1534 1588 4800 0", "x2": "mul add n sqr INT+ 9 x_0_1", "tree": "((n add (9)**2) mul x_0_1)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 2 - 9 + 5 + 1 + 0 - 1 + 2 + 0 - 2 + 4 + 0 - 4 + 8 + 0 - 8 + 16 + 0 - 16 + 32 + 0 - 32 + 64 + 0 - 64 + 128 + 0 - 128 + 256 + 0", "x2": "mul add x_0_3 x_0_3 sign mul n mod mod sign x_0_6 mul n INT- 8 abs n", "tree": "((x_0_3 add x_0_3) mul sign((n mul ((sign(x_0_6) mod (n mul -8)) mod abs(n)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 5 + 8 - 7 + 3 - 55 + 120 - 119 + 57 - 1155 + 2760 - 2975 + 1539 - 3 3495 + 8 5560 - 9 8175 + 5 3865 - 123 9315 + 333 6840 - 402 5175 + 231 6195 - 5576 9175 + 1 5683 1480 - 1 9723 3575 + 1 1812 5945 - 29 5576 6275 + 86 2573 1400 - 112 4231 3775", "x2": "add mul abs add x_0_4 x_0_4 idiv abs n sign mul mod INT- 2 x_0_3 idiv INT- 3 x_0_5 x_0_4", "tree": "((abs((x_0_4 add x_0_4)) mul (abs(n) idiv sign(((-2 mod x_0_3) mul (-3 idiv x_0_5))))) add x_0_4)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 49 + 7 + 0 - 7 - 14 - 21 - 28 - 35 - 42 - 49 + 7 + 0 - 7 - 14 - 21 - 28 - 35 - 42 - 49 + 7 + 0 - 7 - 14", "x2": "mul add mod add n sign INT- 2 INT- 9 mul INT+ 1 sub INT+ 1 INT- 6 INT- 7", "tree": "((((n add sign(-2)) mod -9) add (1 mul (1 sub -6))) mul -7)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 1 + 8 + 21 + 17 + 44 + 52 + 77 + 114 + 149 + 213 + 287 + 388 + 528 + 705 + 948 + 1267 + 1689 + 2253 + 2996 + 3984 + 5293 + 7026 + 9325 + 1 2369 + 1 6403", "x2": "add add x_0_2 relu n add add x_0_3 idiv mod sign mod INT+ 5 INT- 5 INT- 8 sub n x_0_3 n", "tree": "((x_0_2 add relu(n)) add ((x_0_3 add ((sign((5 mod -5)) mod -8) idiv (n sub x_0_3))) add n))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 - 3 + 11 + 2 + 16 + 7 + 21 + 12 + 26 + 17 + 31 + 22 + 36 + 27 + 41 + 32 + 46 + 37 + 51 + 42 + 56 + 47 + 61 + 52", "x2": "add x_0_2 sub INT+ 6 INT+ 1", "tree": "(x_0_2 add (6 sub 1))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 3 + 8 - 6 + 10 - 4 + 6 + 3 + 8 + 0 + 10 + 0 + 6 + 3 + 8 + 0 + 10 + 0 + 6 + 3 + 8 + 0 + 10 + 0 + 6 + 3 + 8 + 0 + 10", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 2 + 2 + 2 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3", "x2": "add idiv n INT- 4 INT+ 3", "tree": "((n idiv -4) add 3)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 7 - 5 - 2 - 8 + 4 + 5 + 3 + 6 + 3 + 0 - 1 - 49 - 25 - 4 - 64 - 16 - 25 - 9 - 36 - 9 + 0 - 1 - 2401 - 625 - 16 - 4096 - 256 - 625 - 81 - 1296 - 81 + 0 - 1", "x2": "mul INT- 1 sqr x_0_11", "tree": "(-1 mul (x_0_11)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 9 - 5 - 33 - 75 - 131 - 201 - 285 - 383 - 495 - 621 - 761 - 915 - 1083 - 1265 - 1461 - 1671 - 1895 - 2133 - 2385 - 2651 - 2931 - 3225 - 3533", "x2": "sub abs INT+ 9 mul sub sqr n n INT+ 7", "tree": "(abs(9) sub (((n)**2 sub n) mul 7))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 - 8 - 4 - 6 + 7 + 8 + 57 + 8 + 17 + 17 + 17 + 152 + 33 + 204 + 233 + 264 + 297 + 332 + 369 + 408 + 449 + 492 + 537 + 584 + 633 + 684 + 737 + 792", "x2": "add sqr mod n abs x_0_5 INT+ 8", "tree": "(((n mod abs(x_0_5)))**2 add 8)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 - 8 - 2 + 7 - 98 + 257 - 6184 + 1 4895 - 50 916 - 631 5493 - 4959 698 - 6 8207 3259 - 58 211 1682 - 859 4123 651 - 7832 8507 7088 - 12 3755 3721 3763 - 119 8426 1679 4484 - 2004 8370 2862 9627 - 2 493 874 7185 6786 - 36 870 6651 5333 2883 - 387 3193 5321 8093 2578 - 7145 2391 7003 5991 859 - 8 175 1061 1614 5304 3672 - 154 3371 6607 2777 4074 5571 - 1803 9398 8761 3269 3482 6228 - 3 6114 8968 6102 9913 3446 3643 - 43 8357 3926 9002 4451 6277 3434", "x2": "sub add mod INT+ 4 INT- 7 sub mul n mul x_0_2 INT+ 9 abs mul mul x_0_4 INT+ 2 relu x_0_2 n", "tree": "(((4 mod -7) add ((n mul (x_0_2 mul 9)) sub abs(((x_0_4 mul 2) mul relu(x_0_2))))) sub n)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841", "x2": "abs sqr sqr n", "tree": "abs(((n)**2)**2)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 6 + 6 - 9 - 1 - 1 - 1 - 9 - 9 - 9 - 1 - 1 - 1 - 9 - 9 - 9 - 1 - 1 - 1 - 9 - 9 - 9 - 1 - 1 - 1 - 9", "x2": "idiv INT- 9 mul x_0_3 x_0_3", "tree": "(-9 idiv (x_0_3 mul x_0_3))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 5 + 3 - 2 + 2 + 9 - 4 - 1 + 2 - 7 - 10 + 10 - 6 - 6 + 6 + 0 - 23 + 13 - 3 - 15 + 3 + 20 - 39 + 13 + 9 - 21 - 20 + 56 - 55", "x2": "add sub INT- 3 x_0_5 x_0_6", "tree": "((-3 sub x_0_5) add x_0_6)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 1 + 1 + 8 + 36 + 25 + 71 + 84 + 124 + 151 + 227 + 244 + 346 + 395 + 499 + 570 + 718 + 787 + 969 + 1078 + 1270 + 1409 + 1653 + 1798 + 2084 + 2277", "x2": "add sub x_0_3 sign n sqr relu sub n sign mod n INT- 2", "tree": "((x_0_3 sub sign(n)) add (relu((n sub sign((n mod -2)))))**2)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 10 + 8 + 18 + 19 + 27 + 38 + 47 + 66 + 86 + 114 + 153 + 201 + 268 + 355 + 470 + 624 + 826 + 1095 + 1451 + 1922 + 2547 + 3374 + 4470 + 5922 + 7845", "x2": "add x_0_2 add x_0_3 sign sub n mod sqr sqr x_0_2 n", "tree": "(x_0_2 add (x_0_3 add sign((n sub (((x_0_2)**2)**2 mod n)))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 5 + 1 + 8 - 9 - 10 - 4 + 20 + 17 - 2 + 48 - 80 - 98 - 48 + 212 + 196 - 34 + 664 - 1208 - 1576 - 824 + 3808 + 3716 - 688 + 1 3936 - 2 6584 - 3 6256 - 1 9784 + 9 5192 + 9 6608", "x2": "sub relu mod x_0_3 mod sqr INT+ 2 sign x_0_5 add mul sub INT+ 4 n x_0_7 INT+ 8", "tree": "(relu((x_0_3 mod ((2)**2 mod sign(x_0_5)))) sub (((4 sub n) mul x_0_7) add 8))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 5 - 4 - 1 + 10 + 9 - 5 + 5 - 4 + 0 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0", "x2": "idiv x_0_9 sub add mul sqr n idiv INT+ 9 INT+ 3 n x_0_1", "tree": "(x_0_9 idiv ((((n)**2 mul (9 idiv 3)) add n) sub x_0_1))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 9 - 5 + 5 + 9 + 7 - 4 - 14 - 20 - 16 - 8 - 2 - 7 - 22 - 43 - 60 - 69 - 72 - 80 - 103 - 147 - 208 - 278 - 351 - 432 - 536 - 684 - 893 - 1172 - 1524", "x2": "add add x_0_6 idiv idiv INT- 5 INT- 4 sub INT- 7 n x_0_1", "tree": "((x_0_6 add ((-5 idiv -4) idiv (-7 sub n))) add x_0_1)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 2 + 3 + 7 + 5 + 3 - 3 - 6 - 5 - 2 + 3 + 7 + 5 + 3 - 3 - 6 - 5 - 2 + 3 + 7 + 5 + 3 - 3 - 6 - 5 - 2 + 3 + 7", "x2": "sub add mod n INT+ 2 idiv mod n n sub abs INT+ 1 mul x_0_4 x_0_3 x_0_4", "tree": "(((n mod 2) add ((n mod n) idiv (abs(1) sub (x_0_4 mul x_0_3)))) sub x_0_4)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 3 - 1 + 1 - 4 - 10 + 10 - 3 - 1 + 1 - 4 - 10 + 10 - 3 - 1 + 1 - 4 - 10 + 10 - 3 - 1 + 1 - 4 - 10 + 10 - 3", "x2": "idiv INT+ 1 0 x_0_3", "tree": "(10 idiv x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 - 8 + 10 + 8 - 7 - 10 - 2 - 2 - 7 + 2 + 82 - 93 - 78 + 152 + 193 + 98 + 172 + 263 + 78 - 648 - 6 5767 - 4 2822 - 872 + 6 3837 + 4 1842 - 848 + 6 1207 + 4 1062 - 400 3792 - 432 3253 3913 - 183 2349 2738 - 331 2288", "x2": "add mul mul mod idiv n n add x_0_9 relu n INT- 1 0 x_0_9 abs x_0_3", "tree": "(((((n idiv n) mod (x_0_9 add relu(n))) mul -10) mul x_0_9) add abs(x_0_3))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr add INT- 5 abs n", "tree": "((-5 add abs(n)))**2", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 38 + 349 + 3181 + 2 8670 + 25 8072 + 232 2691 + 2090 4263 + 1 8813 8412 + 16 9324 5754 + 152 3921 1833 + 1371 5290 6545 + 1 2343 7615 8954 + 11 1093 8543 636 + 99 9844 6887 5775 + 899 8602 1988 2027 + 8098 7419 7893 8296 + 7 2888 6778 1044 4718 + 65 5998 1002 9400 2517 + 590 3982 9026 4602 2709 + 5313 5846 1238 1420 4438 + 4 7822 2615 1143 2784 0 + 43 400 3536 289 5056 59 + 387 3603 1824 2605 5504 591", "x2": "add mul x_0_1 INT+ 9 add mul abs INT- 4 mod INT+ 9 add INT- 1 mul n n relu n", "tree": "((x_0_1 mul 9) add ((abs(-4) mul (9 mod (-1 add (n mul n)))) add relu(n)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 2 - 8 + 6 + 6 - 2 - 9 - 18 - 12 - 2 - 16 - 16 - 8 - 1 + 8 + 2 - 8 + 6 + 6 - 2 - 9 - 18 - 12 - 2 - 16 - 16 - 8 - 1 + 8 + 2 - 8 + 6", "x2": "sub INT- 1 0 x_0_7", "tree": "(-10 sub x_0_7)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 9 + 18 + 4 + 12 + 16 + 8 + 4 + 12 + 16 + 8 + 4 + 12 + 16 + 8 + 4 + 12 + 16 + 8 + 4 + 12 + 16 + 8 + 4 + 12 + 16 + 8", "x2": "mul mod x_0_1 INT- 1 0 INT- 2", "tree": "((x_0_1 mod -10) mul -2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 - 7 + 0 + 10 + 10 + 9 - 6 - 1 - 10 - 7 + 8 - 11 - 8 - 9 - 12 - 9 - 10 - 13 - 10 - 11 - 14 - 11 - 12 - 15 - 12 - 13 - 16 - 13 - 14 - 17 - 14 - 15 - 18", "x2": "sub idiv INT+ 9 sub sub mul sqr x_0_8 mul INT+ 1 0 INT- 2 INT- 1 x_0_8 abs abs x_0_3", "tree": "((9 idiv ((((x_0_8)**2 mul (10 mul -2)) sub -1) sub x_0_8)) sub abs(abs(x_0_3)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 9 - 180 - 5400 - 21 6000 - 1080 0 - 6 4800 0 - 453 6000 0 - 3 6288 0 0 - 326 5920 0 0 - 3 2659 2000 0 0 - 359 2512 0 0 0 - 4 3110 1440 0 0 0 - 560 4318 7200 0 0 0 - 7 8460 4620 8000 0 0 0 - 1176 9069 3120 0 0 0 0 - 18 8305 1089 9200 0 0 0 0 - 3201 1868 5286 4000 0 0 0 0 - 57 6213 6335 1552 0 0 0 0 0 - 1 948 590 3679 4880 0 0 0 0 0 - 218 9611 8073 5897 6000 0 0 0 0 0 - 4 5981 8479 5453 8496 0 0 0 0 0 0 - 1011 6006 5499 9846 9120 0 0 0 0 0 0 - 23 2668 1506 4996 4789 7600 0 0 0 0 0 0 - 5584 356 1559 9154 9542 4000 0 0 0 0 0 0 - 139 6008 9038 9978 8738 5600 0 0 0 0 0 0 0 - 3 6296 2315 139 4507 2025 6000 0 0 0 0 0 0 0", "x2": "mul mul idiv x_0_1 sign relu add n sub n n n INT+ 1 0", "tree": "(((x_0_1 idiv sign(relu((n add (n sub n))))) mul n) mul 10)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 2 - 9 - 9 + 4 - 1 + 4 + 1 + 1 - 2 + 11 - 3 - 13 - 14 + 8 - 1 + 6 + 2 + 2 - 2 + 21 - 3 - 11 - 12 + 13 - 1 + 9 + 3 + 3 - 2", "x2": "sub relu idiv INT+ 3 mul INT+ 7 abs mod INT- 3 n idiv n x_0_5", "tree": "(relu((3 idiv (7 mul abs((-3 mod n))))) sub (n idiv x_0_5))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 - 6 - 10 - 5 - 3 - 8 - 16 - 9 - 5 - 10 - 20 - 11 - 8 - 12 - 24 - 13 - 9 - 14 - 28 - 15 - 10 - 16 - 32 - 17 - 12 - 18 - 36 - 19", "x2": "idiv mul INT- 1 sub INT- 8 n idiv relu n x_0_4", "tree": "((-1 mul (-8 sub n)) idiv (relu(n) idiv x_0_4))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 9 + 3 - 7 + 10 + 9 - 2 + 6 + 4 + 1 + 10 + 198 + 96 + 182 + 280 + 300 + 64 + 204 + 144 + 38 + 400 + 8316 + 4224 + 8372 + 1 3440 + 1 5000 + 3328 + 1 1016 + 8064 + 2204 + 2 4000 + 51 5592 + 27 336 + 55 2552 + 91 3920 + 105 0", "x2": "mul add n n abs sub x_0_10 idiv n mul x_0_9 sqr n", "tree": "((n add n) mul abs((x_0_10 sub (n idiv (x_0_9 mul (n)**2)))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 9 - 3 - 2 + 3 + 7 + 9 + 3 - 75 - 30 - 23 + 30 + 403 + 6054 + 9 6791 + 164 4200 + 2959 4991 + 5 6230 4302 + 112 4608 6437 + 2361 6782 2684 + 5 1956 9221 9971 + 119 5009 2309 1780 + 2868 221 9037 4949 + 7 1700 5554 4005 8340 + 186 4214 4549 3681 9903 + 5033 3790 5644 4629 8114 + 14 934 6141 9448 5973 6777 + 408 7103 8256 6846 2230 5544 + 1 2261 3115 1046 5645 1573 5947 + 38 100 6576 5616 1435 868 7658 + 1216 3221 665 733 2554 7975 5029 + 4 138 6295 7726 4845 5338 7333 2716 + 136 4713 4072 3768 6046 2139 7485 1751", "x2": "add mul n x_0_7 mod INT- 3 mul sub n INT- 2 add x_0_1 INT- 7", "tree": "((n mul x_0_7) add (-3 mod ((n sub -2) mul (x_0_1 add -7))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul n mod n add x_0_1 mul add n mod sub INT+ 6 mul sub relu n INT- 7 x_0_1 n x_0_1", "tree": "(n mul (n mod (x_0_1 add ((n add ((6 sub ((relu(n) sub -7) mul x_0_1)) mod n)) mul x_0_1))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 8 - 8 + 9 - 9 + 5 + 6 + 55 + 8 + 89 + 109 + 131 + 155 + 181 + 209 + 239 + 271 + 305 + 341 + 379 + 419 + 461 + 505 + 551 + 599 + 649 + 701 + 755 + 811 + 869", "x2": "add mod idiv INT- 1 x_0_4 sqr n relu n", "tree": "(((-1 idiv x_0_4) mod (n)**2) add relu(n))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 4 + 1 + 6 + 1 + 9 + 4 + 12 + 7 + 17 + 15 + 27 + 22 + 36 + 36 + 49 + 50 + 65 + 63 + 79 + 79 + 97 + 101 + 118 + 121 + 139 + 143 + 166 + 170 + 191", "x2": "add add n mod add x_0_5 INT- 5 INT- 6 sub x_0_2 idiv n n", "tree": "((n add ((x_0_5 add -5) mod -6)) add (x_0_2 sub (n idiv n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 10 - 7 + 8 + 7 - 685 + 9 + 10 + 10 - 6 8479 - 623 1577 - 6 2938 9264 - 635 6831 5650 + 15 - 9 3473 6519 + 17 - 10 8066 1366 465 - 1631 7986 6273 196 + 20 + 21 - 2269 3888 6869 7607 + 23 + 24 + 25 - 56 7347 2171 7440 1699 - 1 3105 7207 1672 8679 2442 - 315 8478 6927 3161 1697 8494 - 7 9277 8151 8756 3453 6160 1965 + 30", "x2": "sub n mod idiv INT- 9 n sub mul INT- 1 0 mul x_0_1 x_0_4 x_0_1", "tree": "(n sub ((-9 idiv n) mod ((-10 mul (x_0_1 mul x_0_4)) sub x_0_1)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 9 - 10 + 8 + 3 + 2 + 4 + 6 + 9 + 9 + 10 + 8 + 3 + 2 + 4 + 6 + 9 + 9 + 10 + 8 + 3 + 2 + 4 + 6 + 9 + 9 + 10 + 8 + 3 + 2 + 4 + 6 + 9 + 9", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 0 - 10 + 2 - 6 - 3 - 218 - 672 - 3112 + 0 - 42 - 114 - 14 2932 - 237 8088 + 0 - 6 - 3552 - 4 9662 - 817 1842 5168 + 0 - 6 - 96 - 3785 418 - 100 1665 8672 + 0 - 6 - 96 - 2 7954 - 5730 6165 7121 736 + 0 - 6", "x2": "mul sub x_0_1 add sqr x_0_6 INT+ 6 mod abs n INT+ 5", "tree": "((x_0_1 sub ((x_0_6)**2 add 6)) mul (abs(n) mod 5))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 48 + 430 - 3440 + 3 958 - 24 7664 + 222 8974 - 1783 1792 + 1 6048 6126 - 12 8388 9008 + 115 5500 1070 - 924 4000 8560 + 8319 6007 7038 - 6 6556 8061 6304 + 59 9011 2554 6734 - 479 2090 437 3872 + 4312 8810 3936 4846 - 3 4503 483 1491 8768 + 31 527 4348 3426 8910 - 248 4219 4786 7415 1280 + 2235 7975 3080 6736 1518 - 1 7886 3802 4645 3889 2144 + 16 977 4222 1808 5002 9294 - 128 7819 3777 4468 23 4352 + 1159 374 3997 212 210 9166 - 9272 2995 1976 1696 1687 3328", "x2": "add mul add INT+ 2 x_0_1 idiv x_0_1 relu sqr mul x_0_1 x_0_1 mul INT- 8 x_0_1", "tree": "(((2 add x_0_1) mul (x_0_1 idiv relu(((x_0_1 mul x_0_1))**2))) add (-8 mul x_0_1))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 4 - 4 - 10 + 4 + 8 + 9 + 9 + 11 + 19 + 15 + 21 + 24 + 26 + 30 + 40 + 38 + 46 + 51 + 55 + 61 + 73 + 73 + 83 + 90 + 96 + 104 + 118 + 120 + 132 + 141", "x2": "relu add n add add abs abs sub x_0_6 relu INT- 7 sub n sign INT+ 1 0 INT- 1 0", "tree": "relu((n add ((abs(abs((x_0_6 sub relu(-7)))) add (n sub sign(10))) add -10)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 2 - 5 + 1 + 0 + 0 + 5 + 1 + 5 + 5 + 3 + 3 + 2 + 10 + 5 + 9 + 11 + 1 + 5 + 5 + 4 + 20 + 8 + 16 + 5 + 25 + 17 + 1 + 5", "x2": "mod mul sub idiv x_0_4 n relu x_0_1 INT- 5 n", "tree": "((((x_0_4 idiv n) sub relu(x_0_1)) mul -5) mod n)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 9 - 9 - 3 - 2 + 9 + 9 + 3 + 2 - 9 - 9 - 3 - 2 + 9 + 9 + 3 + 2 - 9 - 9 - 3 - 2 + 9 + 9 + 3 + 2 - 9 - 9 - 3 - 2", "x2": "mul x_0_4 sign INT- 7", "tree": "(x_0_4 mul sign(-7))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 1 - 8 - 13 - 9 - 3 + 1 - 4 - 11 - 16 - 12 - 6 - 2 - 7 - 14 - 19 - 15 - 9 - 5 - 10 - 17 - 22 - 18 - 12 - 8 - 13 - 20 - 25", "x2": "sub idiv INT- 3 n add add x_0_3 add abs n abs INT+ 7 INT- 3", "tree": "((-3 idiv n) sub ((x_0_3 add (abs(n) add abs(7))) add -3))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 10 + 1 + 3 + 0 + 9 + 9 + 6 + 491 + 4 4200 + 437 5801 + 4 7258 6511 + 552 9262 1787 + 6 9668 7034 5171 + 940 5274 9659 8094 + 13 5435 9595 1012 5542 + 2072 1701 8050 4920 8417 + 33 5691 5692 4179 7180 7754 + 5740 3258 3403 4731 8350 1735 + 103 3258 6501 2625 1735 289 8811 + 1 9528 5884 8738 6157 8473 4049 7066 + 386 6660 5205 245 9260 7402 8876 4239 + 8 39 8727 7440 906 7913 7672 7079 5567 + 1728 8612 5192 7059 5880 4809 6900 196 8014 + 38 8993 7816 8358 8407 5180 3882 554 9201 1567 + 9102 4544 9139 5968 7392 7902 4093 4031 251 4432 + 221 1896 4414 922 404 2188 3543 8100 4270 9450 8711 + 5 5739 7903 2351 2354 1966 4723 9541 3932 8013 1909 3983 + 1454 8085 2744 3672 4447 2777 8836 9042 2618 9916 2402 6629 + 39 2798 3024 979 1560 1151 6689 1169 1656 6388 4787 7595 4069 + 1 959 726 3723 3184 5280 1355 4991 3637 3109 299 3457 6198 818 + 315 6212 9195 2315 7144 2407 8996 2705 4605 1281 1021 2694 5244 3598 + 9 3739 5237 983 7767 1878 4139 9709 1880 6130 5667 7199 828 6776 173", "x2": "sub x_0_8 mul sign INT- 1 0 mul INT+ 9 mul x_0_1 n", "tree": "(x_0_8 sub (sign(-10) mul (9 mul (x_0_1 mul n))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 8 + 6 + 3 + 12 - 5 + 18 - 49 + 24 - 117 + 30 - 209 + 36 - 325 + 42 - 465 + 48 - 629 + 54 - 817 + 60 - 1029 + 66 - 1265 + 72 - 1525 + 78", "x2": "mul mod INT+ 3 sub INT+ 8 x_0_1 abs n", "tree": "((3 mod (8 sub x_0_1)) mul abs(n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 1 + 6 - 5 + 2 + 12 + 0 + 30 + 30 + 2 + 132 + 0 + 870 + 870 + 2 + 1 7292 + 0 + 75 6030 + 75 6030 + 2 + 2 9899 5972 + 0 + 5715 8060 4870 + 5715 8060 4870 + 2 + 8 9398 5909 7322 8812 + 0 + 3267 438 7862 9834 8711 2030 + 3267 438 7862 9834 8711 2030 + 2", "x2": "sub sqr x_0_5 x_0_5", "tree": "((x_0_5)**2 sub x_0_5)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 1 + 1 + 7 - 9 - 3 - 9 - 3 + 4 + 7 + 114 + 281 + 331 + 777 + 218 + 505 + 571 + 641 + 1076 + 1193 + 1316 + 1445 + 1580 + 1721 + 1868 + 2021 + 2180 + 2345 + 2516 + 2693 + 2876 + 3065 + 3260 + 3461 + 3668", "x2": "sub abs mul sqr n sub INT- 3 idiv x_0_10 x_0_5 INT+ 7", "tree": "(abs(((n)**2 mul (-3 sub (x_0_10 idiv x_0_5)))) sub 7)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 27 + 81 + 405 + 2025 + 1 8225 + 20 475 + 220 5225 + 1984 7025 + 2 9770 5375 + 32 7475 9125 + 687 6994 1625 + 1 4441 6877 4125 + 30 3275 4425 6625 + 454 9131 6384 9375 + 1 4102 3080 7933 625 + 25 3841 5454 2795 1250 + 456 9147 8177 312 2500 + 1 1422 8695 4425 7806 2500 + 22 8457 3908 8515 6125 0 + 479 7605 2085 8827 8625 0 + 1 554 7314 5889 4212 9750 0 + 45 3853 4527 3245 1157 9250 0 + 1089 2482 8655 7882 7790 2000 0 + 2 7231 2071 6394 7069 4755 0 0 + 130 7097 9438 6945 9334 8240 0 0", "x2": "add mul add mod x_0_1 relu n n x_0_1 mod n sign mod INT- 2 INT- 2", "tree": "((((x_0_1 mod relu(n)) add n) mul x_0_1) add (n mod sign((-2 mod -2))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 7 + 2 + 2 + 4 + 4 + 2 + 2 + 4 + 4 + 2 + 2 + 4 + 4 + 2 + 2 + 4 + 4 + 2 + 2 + 4 + 4 + 2 + 2 + 4 + 4 + 2 + 2", "x2": "mul abs INT- 2 abs idiv INT+ 5 x_0_2", "tree": "(abs(-2) mul abs((5 idiv x_0_2)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 10 - 6 + 10 + 9 + 0 + 7 - 1 + 3 + 230 + 202 + 26 + 97 + 104 + 95 + 1975 + 1731 - 1258 - 486 + 810 + 249 + 1 5248 + 1 3367 - 2 3697 - 1 5805 + 1 5494 + 5610 + 11 6538 + 10 5425 - 29 6072 - 21 9761 + 29 87 + 15 5779", "x2": "add add relu n x_0_6 mul INT- 7 sub x_0_8 add n x_0_6", "tree": "((relu(n) add x_0_6) add (-7 mul (x_0_8 sub (n add x_0_6))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 6 - 1 - 21 - 28 - 135 - 306 - 1253 - 3704 - 1 4985 - 5 2030 - 21 6865 - 84 1236 - 366 488 - 1543 7800 - 7034 5125 - 3 1734 9936 - 15 1321 7073 - 72 2551 5936 - 359 7664 334 - 1804 8695 9060 - 9359 9640 6093 - 4 9067 950 5434 - 26 4346 2684 5586 - 144 1956 5497 6008 - 805 613 2611 5675 - 4554 1483 5549 1904 - 2 6290 8041 6061 5130", "x2": "mul add idiv x_0_1 n x_0_2 n", "tree": "(((x_0_1 idiv n) add x_0_2) mul n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 73 - 70 - 65 - 58 - 49 - 38 - 25 - 10 + 7 + 26 + 47 + 70 + 95 + 122 + 151 + 182 + 215 + 250 + 287 + 326 + 367 + 410 + 455 + 502 + 551", "x2": "sub sub sqr mul mul n INT+ 1 sign INT+ 8 INT- 7 sqr sqr INT+ 3", "tree": "(((((n mul 1) mul sign(8)))**2 sub -7) sub ((3)**2)**2)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 0 + 3 + 2 + 5 + 4 + 7 + 6 + 9 + 8 + 11 + 10 + 13 + 12 + 15 + 14 + 17 + 16 + 19 + 18 + 21 + 20 + 23 + 22 + 25 + 24", "x2": "idiv relu mul n n sub x_0_1 INT- 3", "tree": "(relu((n mul n)) idiv (x_0_1 sub -3))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 8 + 0 + 128 + 0 + 4608 + 0 + 29 4912 + 0 + 2949 1200 + 0 + 42 4673 2800 + 0 + 8323 5962 8800 + 0 + 213 840 6497 2800 + 0 + 6 9039 2370 5118 7200 + 0 + 2761 5694 8204 7488 0 + 0 + 133 6599 6293 1098 4192 0 + 0 + 7 6988 1386 4831 2689 4592 0 + 0 + 5204 3981 7262 5937 8074 4192 0 + 0", "x2": "mul mul mul idiv sign n sqr add x_0_1 idiv relu n n n x_0_2 relu n", "tree": "((((sign(n) idiv ((x_0_1 add (relu(n) idiv n)))**2) mul n) mul x_0_2) mul relu(n))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5", "x2": "mod add n abs n abs INT+ 9", "tree": "((n add abs(n)) mod abs(9))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 - 1 - 9 + 9 - 10 - 8 + 6 + 4 + 0 - 7 - 5 - 10 - 1 - 9 + 9 - 10 - 8 + 6 + 4 + 0 - 7 - 5 - 10 - 1 - 9 + 9 - 10 - 8 + 6 + 4 + 0 - 7 - 5 - 10 - 1 - 9", "x2": "add x_0_11 mul relu x_0_11 mod n INT+ 1", "tree": "(x_0_11 add (relu(x_0_11) mul (n mod 1)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 1 + 10 + 9 - 39 - 37 - 157 - 147 - 627 - 587 - 2507 - 2347 - 1 27 - 9387 - 4 107 - 3 7547 - 16 427 - 15 187 - 64 1707 - 60 747 - 256 6827 - 240 2987 - 1026 7307 - 961 1947 - 4106 9227 - 3844 7787 - 1 6427 6907 - 1 5379 1147 - 6 5710 7627", "x2": "sub mul INT- 4 abs x_0_2 sign add x_0_3 idiv mul INT+ 7 INT+ 8 mul INT+ 4 relu x_0_3", "tree": "((-4 mul abs(x_0_2)) sub sign((x_0_3 add ((7 mul 8) idiv (4 mul relu(x_0_3))))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 + 7 + 6 - 1 + 0 + 8 - 10 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign add mul x_0_6 sqr add idiv relu x_0_2 n sign idiv x_0_6 INT- 9 mul x_0_7 INT+ 2", "tree": "sign(((x_0_6 mul (((relu(x_0_2) idiv n) add sign((x_0_6 idiv -9))))**2) add (x_0_7 mul 2)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 1 + 3 + 7 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 1 + 4 - 1 + 4 - 8 + 10 + 5 + 25 - 17 + 33 - 7 + 81 - 79 + 201 + 151 + 801 - 373 + 331 - 13 + 1945 - 3001 + 7639 + 3323 + 9613 - 9697 + 663 - 597 + 4 6681 - 13 8045 + 4 5835 + 20 6027 + 5 7679", "x2": "add mul mod x_0_6 n add x_0_8 x_0_8 mod INT+ 1 sub sqr n n", "tree": "(((x_0_6 mod n) mul (x_0_8 add x_0_8)) add (1 mod ((n)**2 sub n)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 + 7 - 1 + 9 + 8 - 9 - 7 - 4 + 12 + 4 + 14 + 13 - 4 - 2 + 1 + 17 + 9 + 19 + 18 + 1 + 3 + 6 + 22 + 14 + 24 + 23 + 6 + 8 + 11 + 27 + 19 + 29", "x2": "add mul sign idiv sub INT- 5 n abs INT+ 8 INT- 5 x_0_7", "tree": "((sign(((-5 sub n) idiv abs(8))) mul -5) add x_0_7)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 2 - 2 - 10 - 9 + 8 - 1 - 1 - 6 - 9 + 9 + 0 + 0 - 2 - 9 + 9 + 1 + 1 + 2 - 8 + 10 + 1 + 2 + 6 - 7 + 10 + 1 + 3 + 10 - 6", "x2": "add x_0_5 sqr abs idiv x_0_3 sub sub sqr x_0_2 abs INT- 7 x_0_2", "tree": "(x_0_5 add (abs((x_0_3 idiv (((x_0_2)**2 sub abs(-7)) sub x_0_2))))**2)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 1 - 4 + 8 + 0 + 1 + 2 + 0 + 6 + 1 + 6 + 10 + 0 + 4 + 6 + 6 + 10 + 15 + 14 + 10 + 16 + 5 + 20 + 5 + 20 + 0 + 0 + 5 + 20 + 24", "x2": "mod sub x_0_4 sub x_0_2 n n", "tree": "((x_0_4 sub (x_0_2 sub n)) mod n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1", "x2": "mod n abs INT- 6", "tree": "(n mod abs(-6))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 0 - 1 - 9 - 10 - 7 + 3 - 6 - 3 + 0 - 11 + 0 - 13 - 7 - 48 + 192 - 627 + 0 - 38 + 0 - 84 + 434 - 1371 + 8082 - 4 8642 + 0 - 54 + 0 - 87 + 399 - 1290 + 0 - 198", "x2": "mul mod x_0_8 INT- 9 add n x_0_1", "tree": "((x_0_8 mod -9) mul (n add x_0_1))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr add n sign sqr x_0_1", "tree": "((n add sign((x_0_1)**2)))**2", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 10 + 2 + 9 - 5 + 8 + 9 - 7 - 8 + 9 + 10 - 11 - 12 + 13 + 14 - 15 - 16 + 17 + 18 - 19 - 20 + 21 + 22 - 23 - 24 + 25 + 26 - 27 - 28 + 29 + 30 - 31", "x2": "mul n sign sub mod x_0_6 INT- 1 x_0_2", "tree": "(n mul sign(((x_0_6 mod -1) sub x_0_2)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 6 + 8 - 9 - 6 + 2 + 4 - 7 + 12 + 8 + 7 + 8 + 8 + 11 + 13 + 7 + 18 + 17 + 14 + 20 + 19 + 19 + 23 + 20 + 25 + 27 + 24 + 29 + 30 + 28 + 33 + 32 + 33", "x2": "relu sub INT- 3 mul INT- 1 add abs idiv add x_0_3 x_0_8 INT+ 2 INT+ 1 0", "tree": "relu((-3 sub (-1 mul (abs(((x_0_3 add x_0_8) idiv 2)) add 10))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 - 36 - 216 - 1728 - 1 7280 - 20 7360 - 290 3040 - 4644 8640 - 8 3607 5520 - 167 2151 400 - 3678 7322 8800 - 8 8289 5749 1200 - 229 5528 9477 1200 - 6427 4810 5359 3600 - 19 2824 4316 780 8000 - 617 381 8114 4985 6000 - 2 979 2981 5892 9510 4000 - 75 5254 7337 2146 2374 4000 - 2869 9679 8814 1557 227 2000 - 11 4798 7195 2566 2280 9088 0 - 482 1546 2200 7781 5798 1696 0 - 2 1214 8033 6834 2389 5119 4624 0 - 97 5880 9549 4374 9917 5495 2704 0 - 4684 2285 8372 9999 6042 3772 9792 0 - 23 4211 4291 8649 9980 2118 8648 9600 0 - 1217 8994 3176 9799 8971 180 9745 9200 0", "x2": "mul x_0_1 add n n", "tree": "(x_0_1 mul (n add n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 2 + 6 + 8 + 7 + 0 + 4 + 4 + 4 + 0 + 4 + 0 + 0 + 0 + 0 + 0 + 3 + 2 + 1 + 0 + 4 + 2 + 1 + 2 + 0 + 0 + 4 + 4 + 3 + 0", "x2": "mod sub sub mul n mod n n mul n x_0_5 relu abs n INT+ 5", "tree": "((((n mul (n mod n)) sub (n mul x_0_5)) sub relu(abs(n))) mod 5)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 7 + 10 + 4 + 8 + 4 - 7 - 8 - 5 - 8 - 11 - 4 - 9 - 7 - 7 - 8 - 5 - 7 - 11 - 3 - 7 - 6 - 7 - 10 - 10 - 10 - 11 - 7 - 9 - 5 - 3 - 2", "x2": "add sub abs mod sub INT- 7 add INT- 1 0 n x_0_7 INT+ 1 0 idiv INT- 6 n", "tree": "((abs(((-7 sub (-10 add n)) mod x_0_7)) sub 10) add (-6 idiv n))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 0 + 0 + 3 + 1 + 4 + 0 + 3 + 6 + 9 + 1 + 4 + 7 + 10 + 13 + 0 + 3 + 6 + 9 + 12 + 15 + 18 + 21 + 0 + 3 + 6", "x2": "mod abs abs mul mod sign x_0_1 sqr n abs add INT+ 3 x_0_1 abs n", "tree": "(abs(abs(((sign(x_0_1) mod (n)**2) mul abs((3 add x_0_1))))) mod abs(n))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 8 + 10 + 9 + 9 - 10 + 7 + 5 + 9 + 11 + 10 + 10 - 9 + 8 + 6 + 10 + 12 + 11 + 11 - 8 + 9 + 7 + 11 + 13 + 12 + 12 - 7 + 10 + 8 + 12 + 14 + 13", "x2": "add sign abs n x_0_7", "tree": "(sign(abs(n)) add x_0_7)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 + 1 - 2 + 1 - 6 + 42 + 16 + 8 + 18 + 46 + 27 + 76 + 13 + 14 + 79 + 97 + 81 + 43 + 55 + 21 + 102 + 31 + 48 + 73 + 34 + 42 + 36 + 28 + 54 + 66", "x2": "add n sqr mod sub x_0_5 INT+ 8 INT+ 1 0", "tree": "(n add (((x_0_5 sub 8) mod 10))**2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 - 13 - 38 - 151 - 754 - 4523 - 3 1660 - 25 3279 - 227 9510 - 2279 5099 - 2 5074 6088 - 30 895 3055 - 391 1638 9714 - 5476 2945 5995 - 8 2144 4183 9924 - 131 4310 6943 8783 - 2234 3281 8045 9310 - 4 217 9072 4826 7579 - 76 4140 2377 1708 4000 - 1528 2804 7543 4167 9999 - 3 2093 8899 8411 7527 9978 - 70 6065 5796 5058 5615 9515 - 1623 9508 3319 6346 9166 8844 - 3 8974 8199 9671 2326 5 2255 - 97 4370 4999 1780 8150 130 6374 - 2533 3632 9978 6301 1900 3396 5723", "x2": "add relu sign abs sign INT+ 9 mul n x_0_1", "tree": "(relu(sign(abs(sign(9)))) add (n mul x_0_1))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 10 + 63 + 0 + 1575 + 0 + 7 7175 + 0 + 625 1175 + 0 + 7 5639 2175 + 0 + 1278 3027 7575 + 0 + 28 7618 1245 4375 + 0 + 8312 1637 9931 4375 + 0 + 300 691 1315 5248 9375 + 0 + 13 2330 4789 146 4781 4375 + 0 + 7000 2823 3388 7486 9380 4375 + 0 + 437 5176 4586 7967 9336 2773 4375 + 0 + 31 8950 3638 3774 8623 6146 1835 9375", "x2": "relu mul n mul n x_0_2", "tree": "relu((n mul (n mul x_0_2)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 + 0 + 2 + 0 - 10 + 2 + 5 + 18 + 72 + 72 - 44 + 16 + 165 + 456 + 2574 + 6864 - 3382 - 572 + 5985 + 8 5470 + 123 660 + 1783 4520 - 2325 512 + 190 628 - 327 7077 + 5 1379 6236 + 1052 1825 1002 + 21 9487 3713 3888 - 414 6622 8853 1794 - 44 1906 5660 5588 - 6 2285 9448 9789 - 1683 7334 586 4890", "x2": "mul add n x_0_7 add INT+ 6 x_0_6", "tree": "((n add x_0_7) mul (6 add x_0_6))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 - 4 + 10 + 7 - 9 - 10 + 35 + 15 + 99 + 48 + 80 + 99 + 1224 + 224 + 9800 + 2303 + 6399 + 9800 + 149 8175 + 5 175 + 9603 9999 + 530 3808 + 4094 7200 + 9603 9999 + 2 2445 2833 624 + 25 1753 624 + 9223 6814 792 0 + 28 1303 7930 863 + 1676 6731 8783 9999 + 9223 6814 792 0 + 5 379 742 6973 7602 5622 9375", "x2": "add sub relu INT- 8 sign INT+ 9 sqr x_0_6", "tree": "((relu(-8) sub sign(9)) add (x_0_6)**2)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 10 - 6 + 1 - 10 - 3 - 8 + 16 + 0 + 0 + 1 + 0 + 0 + 0 + 256 + 0 + 0 + 1 + 0 + 0 + 0 + 6 5536 + 0 + 0 + 1 + 0 + 0 + 0 + 42 9496 7296 + 0 + 0 + 1", "x2": "sqr relu x_0_7", "tree": "(relu(x_0_7))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 10 - 2 + 3 - 9 + 0 + 0 + 7 - 11 - 13 + 7 - 17 + 7 + 7 + 7 - 25 - 27 + 7 - 31 + 7 + 7 + 7 - 39 - 41 + 7 - 45 + 7 + 7 + 7 - 53 - 55 + 7", "x2": "sub mul n sign x_0_7 sub n INT+ 7", "tree": "((n mul sign(x_0_7)) sub (n sub 7))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 9 + 3 - 4 + 21 + 4 + 16 + 9 + 34 + 17 + 29 + 22 + 47 + 30 + 42 + 35 + 60 + 43 + 55 + 48 + 73 + 56 + 68 + 61 + 86 + 69 + 81 + 74 + 99", "x2": "sub sub x_0_4 INT- 1 0 INT- 3", "tree": "((x_0_4 sub -10) sub -3)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 9 + 4 - 2 - 2 - 6 - 7 + 5 - 2 - 3 - 2 - 3 - 4 + 1 - 4 - 5 - 2 - 3 - 4 - 3 - 6 - 6 - 4 - 3 - 6 - 4 - 6 - 5 - 6 - 3 - 8 - 3", "x2": "add idiv add sign x_0_3 INT- 2 sign relu x_0_7 mod n x_0_6", "tree": "(((sign(x_0_3) add -2) idiv sign(relu(x_0_7))) add (n mod x_0_6))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 9 - 10 + 0 + 9 + 0 + 0 + 1 + 0 + 0 + 9 + 0 + 0 + 1 + 0 + 0 + 9 + 0 + 0 + 1 + 0 + 0 + 9 + 0 + 0 + 1 + 0 + 0", "x2": "abs mod mul x_0_3 INT+ 9 INT+ 1 0", "tree": "abs(((x_0_3 mul 9) mod 10))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 6 - 1 + 4 + 71 + 102 + 141 + 172 + 145 + 158 + 167 + 188 + 271 + 318 + 373 + 420 + 409 + 438 + 463 + 500 + 599 + 662 + 733 + 796 + 801 + 846 + 887 + 940 + 1055", "x2": "sub mul sub n INT- 5 n sub x_0_4 add mul n n n", "tree": "(((n sub -5) mul n) sub (x_0_4 sub ((n mul n) add n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 5 + 5 - 7 + 4 - 75 + 6 - 137 + 8 - 375 + 10 - 789 + 12 - 1427 + 14 - 2337 + 16 - 3567 + 18 - 5165 + 20 - 7179 + 22 - 9657 + 24 - 1 2647 + 26 - 1 6197 + 28", "x2": "sub n mul relu sqr x_0_1 abs mod relu x_0_3 add mul x_0_2 x_0_2 add INT+ 1 0 n", "tree": "(n sub (relu((x_0_1)**2) mul abs((relu(x_0_3) mod ((x_0_2 mul x_0_2) add (10 add n))))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 1 + 4 - 3 + 6 + 8 + 10 + 9 + 0 + 15 - 2 - 13 - 18 - 14 + 14 - 30 + 24 + 69 + 90 + 75 - 36 + 171 - 98 - 322 - 426 - 350 + 242 - 999 + 616 + 1961 + 2586 + 2481", "x2": "add n mul idiv n INT- 5 x_0_6", "tree": "(n add ((n idiv -5) mul x_0_6))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 1 - 3 - 7 - 21 - 49 - 147 - 343 - 1029 - 2401 - 7203 - 1 6807 - 5 421 - 11 7649 - 35 2947 - 82 3543 - 247 629 - 576 4801 - 1729 4403 - 4035 3607 - 1 2106 821 - 2 8247 5249 - 8 4742 5747 - 19 7732 6743 - 59 3198 229 - 138 4128 7201 - 415 2386 1603 - 968 8901 407", "x2": "mul INT+ 7 x_0_2", "tree": "(7 mul x_0_2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 10 - 1 + 10 + 2 - 3 + 3 + 5 + 1 + 17 + 18 - 3 + 20 + 21 + 22 - 7 + 24 - 9 - 10 + 27 - 12 - 13 - 14 + 31 - 16 + 33 + 34 - 19 + 36 + 37 + 38 - 23 + 40 - 25", "x2": "add idiv n sign sub n abs sqr relu relu relu x_0_8 INT+ 8", "tree": "((n idiv sign((n sub abs((relu(relu(relu(x_0_8))))**2)))) add 8)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 10 + 4 - 10 - 1 - 1 - 8 - 1 - 3 - 3 + 10 + 4 + 6 + 13 + 4 + 6 + 6 + 7 + 1 + 3 + 10 + 1 + 1 + 1 + 2 + 4 + 2 + 5 + 4 + 4 + 4 + 3 + 1 + 3 + 0 + 1", "x2": "abs sub x_0_7 add sqr INT- 2 sign idiv sign x_0_2 x_0_11", "tree": "abs((x_0_7 sub ((-2)**2 add sign((sign(x_0_2) idiv x_0_11)))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 5 - 3 + 3 + 5 + 3 + 8 - 5 + 9 + 1 + 3 - 143 + 0 - 120 - 96 - 2432 - 153 - 2682 - 1035 - 5 8548 - 2790 - 5 3838 + 12 9168 - 111 2628 + 27 8775 + 403 7616 - 3 1129 5123 + 1 4464 1388 - 7 4098 4211 - 40 7799 2430 + 18 2176 1318 7927 - 3996 4415 5332 + 39 8723 6039 3613 - 526 8643 8797 9016 - 2026 8879 9976 6120 4661 - 11 1423 1883 7149 3916", "x2": "sub mul add INT- 5 add x_0_11 relu n x_0_4 mul n idiv sqr INT- 6 INT+ 4", "tree": "(((-5 add (x_0_11 add relu(n))) mul x_0_4) sub (n mul ((-6)**2 idiv 4)))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 1 - 6 + 0 + 7 - 9 - 10 + 1 - 6 + 0 + 7 - 9 - 10 + 1 - 6 + 0 + 7 - 9 - 10 + 1 - 6 + 0 + 7 - 9 - 10 + 1 - 6 + 0 + 7 - 9 - 10 + 1", "x2": "idiv x_0_6 mod sign INT+ 2 n", "tree": "(x_0_6 idiv (sign(2) mod n))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 8 - 9 + 7 - 7 + 7 + 7 - 7 + 1 + 5 + 4 - 10 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign idiv mul INT- 3 abs add abs INT- 9 sign x_0_11 x_0_7", "tree": "sign(((-3 mul abs((abs(-9) add sign(x_0_11)))) idiv x_0_7))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 10 + 2 + 5 + 4 + 0 - 9 - 21 - 12 - 14 - 12 - 7 + 5 + 16 + 8 + 11 + 10 + 6 - 5 - 15 - 6 - 8 - 6 - 1 + 11 + 22 + 14 + 17 + 16 + 12 + 1 - 9", "x2": "add sub n add idiv INT+ 9 INT+ 4 add sign idiv n sqr x_0_7 sub x_0_6 INT- 8 INT- 8", "tree": "((n sub ((9 idiv 4) add (sign((n idiv (x_0_7)**2)) add (x_0_6 sub -8)))) add -8)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 3 + 5 + 8 + 12 + 18 + 24 + 32 + 40 + 50 + 60 + 72 + 84 + 98 + 112 + 128 + 144 + 162 + 180 + 200 + 220 + 242 + 264 + 288 + 312 + 338 + 364 + 392", "x2": "idiv sqr n add sign x_0_3 sign n", "tree": "((n)**2 idiv (sign(x_0_3) add sign(n)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 + 8 - 2 - 10 - 37 + 62 - 7 - 62 - 250 + 444 - 38 - 422 - 1737 + 3122 - 251 - 2938 - 1 2142 + 2 1872 - 1738 - 2 546 - 8 4973 + 15 3126 - 1 2143 - 14 3798 - 59 4786 + 107 1908 - 8 4974 - 100 6558 - 416 3473", "x2": "sub abs n mul x_0_4 INT- 7", "tree": "(abs(n) sub (x_0_4 mul -7))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 10 - 9 - 8", "x2": "mod n idiv sub mul n INT- 1 0 n n", "tree": "(n mod (((n mul -10) sub n) idiv n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 7 - 1 + 5 - 10 - 6 - 1 - 15 - 10 - 5 - 21 - 18 - 14 - 29 - 25 - 21 - 38 - 36 - 33 - 49 - 46 - 43 - 61 - 60 - 58 - 75 - 73 - 71 - 90 - 90 - 89", "x2": "sub x_0_6 n", "tree": "(x_0_6 sub n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 11 - 38 - 74 - 119 - 173 - 236 - 308 - 389 - 479 - 578 - 686 - 803 - 929 - 1064 - 1208 - 1361 - 1523 - 1694 - 1874 - 2063 - 2261 - 2468 - 2684 - 2909 - 3143", "x2": "add x_0_1 mul n INT- 9", "tree": "(x_0_1 add (n mul -9))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 0 - 2 + 7 + 14 + 7 + 2 + 11 + 26 + 20 + 8 + 17 + 44 + 39 + 16 + 25 + 68 + 64 + 26 + 35 + 98 + 95 + 38 + 47 + 134 + 132 + 52", "x2": "sub INT+ 4 add mul idiv n INT- 4 add idiv INT- 1 mod sign n INT+ 6 n x_0_2", "tree": "(4 sub (((n idiv -4) mul ((-1 idiv (sign(n) mod 6)) add n)) add x_0_2))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 + 3 + 1 + 4 + 10 + 1 + 6 + 136 + 109 + 101 + 116 + 200 + 101 + 136 + 1 8596 + 1 1981 + 1 301 + 1 3556 + 4 100 + 1 301 + 1 8596 + 3 4581 1316 + 1 4354 4461 + 1 611 701 + 1 8376 5236 + 16 801 100 + 1 611 701 + 3 4581 1316 + 11 9585 4662 7365 1956 + 2 605 122 8378 621 + 1 1259 4808 6671 1501 + 3 3769 6619 6213 5796", "x2": "add relu abs relu abs sqr abs x_0_7 sqr INT+ 1 0", "tree": "(relu(abs(relu(abs((abs(x_0_7))**2)))) add (10)**2)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 + 5 + 5 - 1 + 4 - 5 - 8 + 3 + 3 + 1 + 1 + 1 + 81 + 1 + 1 + 1 + 1 + 1 + 81 + 81 + 81 + 1 + 81 + 81 + 81 + 81 + 81 + 1 + 1 + 1 + 81 + 1 + 1 + 1", "x2": "sqr idiv INT- 9 abs sqr x_0_9", "tree": "((-9 idiv abs((x_0_9)**2)))**2", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 5 - 1 - 1 + 4 + 4 - 1 - 1 + 6 + 6 - 1 - 1 + 8 + 8 - 1 - 1 + 10 + 10 - 1 - 1 + 12 + 12 - 1 - 1 + 14 + 14 - 1", "x2": "idiv add idiv n INT- 2 idiv mod sqr x_0_2 idiv sub INT- 3 n n add relu INT+ 2 INT+ 2 x_0_2", "tree": "(((n idiv -2) add (((x_0_2)**2 mod ((-3 sub n) idiv n)) idiv (relu(2) add 2))) idiv x_0_2)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 + 9 - 9 + 9 - 6 + 10 - 9 - 21 - 50 - 64 - 92 - 106 - 139 - 185 - 261 - 352 - 472 - 607 - 776 - 992 - 1285 - 1670 - 2176 - 2818 - 3630 - 4659 - 5982 - 7691 - 9907 - 1 2766 - 1 6438", "x2": "sub sub add x_0_1 x_0_6 sub idiv sub add x_0_6 n n abs x_0_3 INT- 9 sub n INT- 3", "tree": "(((x_0_1 add x_0_6) sub ((((x_0_6 add n) sub n) idiv abs(x_0_3)) sub -9)) sub (n sub -3))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 6 - 5 + 10 + 5 + 7 - 4 + 8 - 1 + 27 + 14 + 45 + 22 + 66 + 35 + 108 + 65 + 170 + 105 + 255 + 160 + 384 + 247 + 577 + 376 + 857 + 562 + 1268 + 837 + 1874 + 1243 + 2762", "x2": "add add n sub x_0_6 mul abs n sub n n add relu mod n mul INT- 2 n x_0_2", "tree": "((n add (x_0_6 sub (abs(n) mul (n sub n)))) add (relu((n mod (-2 mul n))) add x_0_2))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 6 + 1 + 2 + 8 - 9 + 5 - 1 - 4 - 4 + 64 - 54 + 5 - 2 - 32 + 36 + 320 + 54 - 20 + 8 - 2048 - 1944 + 1600 - 108 + 640 + 288 - 65 5360 - 10 4976 - 3 2000 - 864 - 131 720 - 55 9872 - 10 4857 6000 + 1133 7408 - 2048 0", "x2": "mul x_0_6 x_0_10", "tree": "(x_0_6 mul x_0_10)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 10 + 3 + 7 + 6 - 2 - 1 - 2 - 1 - 1 + 2 + 4 + 2 + 4 + 4 - 2 - 1 - 2 - 1 - 1 + 2 + 4 + 2 + 4 + 4 - 2 - 1 - 2 - 1 - 1", "x2": "idiv INT- 4 x_0_5", "tree": "(-4 idiv x_0_5)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 5 - 1 + 8 - 2 - 3 + 19 + 17 + 23 + 28 + 27 + 31 + 56 + 74 + 43 + 102 + 76 + 83 + 167 + 58 + 147 + 166 + 143 + 236 + 73 + 192 + 226 + 248 + 371 + 88 + 237", "x2": "sub add n add n sub relu n mul x_0_6 mod x_0_4 INT- 3 INT+ 2", "tree": "((n add (n add (relu(n) sub (x_0_6 mul (x_0_4 mod -3))))) sub 2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 9 - 9 + 8 - 25 - 30 + 28 - 200 - 18 + 280 - 2200 - 12 + 3640 - 3 800 - 15 + 5 8240 - 52 3600 - 18 + 110 6560 - 1047 2000 - 21 + 2434 4320 - 2 4085 6000 - 24 + 3 430 4000 - 62 6225 6000 - 27 + 42 6025 6000", "x2": "mul mod n sqr x_0_2 idiv x_0_3 idiv x_0_1 sub sub mod INT- 9 x_0_1 INT+ 7 INT- 4", "tree": "((n mod (x_0_2)**2) mul (x_0_3 idiv (x_0_1 idiv (((-9 mod x_0_1) sub 7) sub -4))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 8 - 9 - 3 - 10 + 10 - 7 - 2 - 1 + 0 + 0 - 5 - 5 - 5 - 6 - 3 - 4 - 5 - 7 - 5 - 7 + 0 - 3 - 2 - 5 - 8 - 3 - 3 - 7 - 2 - 7", "x2": "mod sub x_0_4 n mod INT- 9 sub INT+ 7 add sqr INT- 1 0 mod x_0_6 INT- 5", "tree": "((x_0_4 sub n) mod (-9 mod (7 sub ((-10)**2 add (x_0_6 mod -5)))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 8 + 8 + 2 - 4 - 8 - 10 + 6 - 6 + 3 + 0 + 3 + 0 + 5 + 2 + 7 + 0 + 2 + 0 + 4 + 0 + 0 + 2 + 5 + 0 + 1 + 0 + 3 + 0 + 1 + 2 + 3 + 0 + 0", "x2": "abs mod n add sub x_0_1 INT- 3 sub x_0_8 add x_0_1 sqr sign x_0_3", "tree": "abs((n mod ((x_0_1 sub -3) add (x_0_8 sub (x_0_1 add (sign(x_0_3))**2)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 6 + 9 + 17 + 3 - 4 + 9 + 19 + 7 - 2 + 9 + 21 + 11 + 0 + 11 + 23 + 13 + 2 + 13 + 25 + 15 + 4 + 15 + 27 + 17 + 6 + 17 + 29", "x2": "sub relu add INT+ 7 sign x_0_1 sub x_0_2 n", "tree": "(relu((7 add sign(x_0_1))) sub (x_0_2 sub n))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 3 - 8 + 0 + 3 + 9 + 16 + 25 + 35 + 47 + 61 + 76 + 93 + 112 + 133 + 156 + 180 + 206 + 234 + 264 + 296 + 330 + 365 + 402 + 441 + 482 + 525 + 570", "x2": "idiv add x_0_2 mul relu mul n add n x_0_1 sign add relu x_0_1 sub INT+ 9 x_0_3 n", "tree": "((x_0_2 add (relu((n mul (n add x_0_1))) mul sign((relu(x_0_1) add (9 sub x_0_3))))) idiv n)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 1 + 10 + 3 + 0 + 2 + 7 + 4 + 3 + 12 + 5 + 4 + 4 + 9 + 6 + 5 + 14 + 7 + 6 + 6 + 11 + 8 + 7 + 16 + 9 + 8 + 8 + 13 + 10 + 9 + 18 + 11", "x2": "add abs sub relu x_0_7 sign relu abs n abs INT+ 3", "tree": "(abs((relu(x_0_7) sub sign(relu(abs(n))))) add abs(3))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 8 - 10 - 6 + 1 - 1 - 1 - 2 + 9 - 10 - 11 - 6 + 1 - 2 - 2 - 3 + 17 - 9 - 10 - 7 + 1 - 3 - 3 - 4 + 25 - 9 - 9 - 7 + 1", "x2": "idiv abs n x_0_4", "tree": "(abs(n) idiv x_0_4)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 - 10 - 8 - 2 + 8 + 10 + 10 + 8 + 2 + 8 + 10 + 10 + 8 + 2 + 8 + 10 + 10 + 8 + 2 + 8 + 10 + 10 + 8 + 2 + 8 + 10 + 10 + 8 + 2 + 8", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 6 - 3 + 4 + 2 + 3 + 5 + 0 + 3 + 2 + 4 + 5 + 0 + 6 + 2 + 2 + 3 + 6 + 1 + 0 + 3 + 2 + 2 + 3 + 5 + 1 + 0 + 6 + 3", "x2": "mod sub n mul x_0_3 x_0_4 INT+ 7", "tree": "((n sub (x_0_3 mul x_0_4)) mod 7)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 2 - 2 + 7 + 2 - 8 + 4 - 3 + 5 + 98 100 + 174 2400 + 294 4656 + 476 9856 + 745 2900 + 1128 9600 + 1664 6400 + 2397 816 + 3380 2596 + 4678 5600 + 6368 400 + 8537 7600 + 1 1291 1876 + 1 4747 6736 + 1 9044 0 + 2 4336 0 + 3 800 2500 + 3 8635 8336 + 4 8066 1776 + 5 9340 9600 + 7 2738 900 + 8 8565 7600 + 10 7164 5696 + 12 8909 7216 + 15 4213 2900", "x2": "mul mul n n sqr sub sqr n abs sign x_0_9", "tree": "((n mul n) mul (((n)**2 sub abs(sign(x_0_9))))**2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 9 - 20 + 25 + 47 - 68 - 134 + 143 + 275 - 422 - 818 + 851 + 1643 - 2546 - 4922 + 5099 + 9851 - 1 5290 - 2 9546 + 3 587 + 5 9099 - 9 1754 - 17 7290 + 18 3515 + 35 4587 - 55 538 - 106 3754", "x2": "sub mod INT+ 7 x_0_2 mul INT+ 3 x_0_2", "tree": "((7 mod x_0_2) sub (3 mul x_0_2))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 4 + 4 + 0 + 4 + 16 + 36 + 64 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr mod INT- 1 0 n", "tree": "((-10 mod n))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 81 + 324 + 729 + 1296 + 2025 + 2916 + 3969 + 5184 + 6561 + 8100 + 9801 + 1 1664 + 1 3689 + 1 5876 + 1 8225 + 2 736 + 2 3409 + 2 6244 + 2 9241 + 3 2400 + 3 5721 + 3 9204 + 4 2849 + 4 6656 + 5 625", "x2": "sqr mul relu INT+ 9 abs relu n", "tree": "((relu(9) mul abs(relu(n))))**2", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 7 - 10 + 8 - 3 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1", "x2": "sub sub n abs n sign sub x_0_5 sign INT+ 3", "tree": "((n sub abs(n)) sub sign((x_0_5 sub sign(3))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 - 9 + 7 - 5 - 7 + 5 + 7 + 8 + 2 + 10 + 11 + 7 + 6 + 6 + 13 + 6 + 6 + 11 + 13 + 14 + 8 + 16 + 17 + 13 + 12 + 12 + 19 + 12 + 12 + 17 + 19", "x2": "sub abs n sub relu x_0_6 relu add relu INT- 5 INT- 5", "tree": "(abs(n) sub (relu(x_0_6) sub relu((relu(-5) add -5))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 - 8 + 2 - 9 + 3 + 32 - 16 + 630 - 27 - 2784 + 1072 - 1 80 + 1944 + 7 5168 - 9 48 + 80 6400 - 26 2440 + 0 + 648 3456 - 3870 7200 + 1653 3720 + 0 + 0 + 0", "x2": "mul x_0_4 mod x_0_5 add n mul INT- 1 0 n", "tree": "(x_0_4 mul (x_0_5 mod (n add (-10 mul n))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2", "x2": "idiv n sub INT+ 9 idiv x_0_1 add x_0_1 n", "tree": "(n idiv (9 sub (x_0_1 idiv (x_0_1 add n))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 4 - 10 - 10 + 7 + 21 - 3 - 48 - 17 + 52 + 66 - 86 - 183 + 21 + 270 + 142 - 560 - 553 + 419 + 1114 - 284 - 2646", "x2": "sub sign relu x_0_1 add add x_0_2 relu x_0_2 x_0_3", "tree": "(sign(relu(x_0_1)) sub ((x_0_2 add relu(x_0_2)) add x_0_3))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 3 - 363 - 576 + 845 + 1176 - 1575 - 2048 + 2601 + 3240 - 3971 - 4800 + 5733 + 6776 - 7935 - 9216 + 1 625 + 1 2168 - 1 3851 - 1 5680 + 1 7661", "x2": "mul mul sign INT- 5 mul n sign x_0_2 sqr add n abs INT- 8", "tree": "((sign(-5) mul (n mul sign(x_0_2))) mul ((n add abs(-8)))**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 12 + 21 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437", "x2": "mul n add n abs INT- 4", "tree": "(n mul (n add abs(-4)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 1 - 7 - 6 + 2 + 2 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign mul x_0_6 n", "tree": "sign((x_0_6 mul n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 2 + 3 - 8 - 3 + 9 - 2 + 3 + 8 - 3 + 9 + 2 + 3 + 8 - 3 + 9 - 2 + 3 - 8 - 3 - 9 + 2 - 3 - 8", "x2": "idiv x_0_5 sign mod x_0_4 idiv x_0_2 sub mul relu INT- 9 sub sqr mod x_0_2 x_0_1 x_0_4 n", "tree": "(x_0_5 idiv sign((x_0_4 mod (x_0_2 idiv ((relu(-9) mul (((x_0_2 mod x_0_1))**2 sub x_0_4)) sub n)))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 10 - 1 - 11 - 12 - 23 - 35 - 58 - 93 - 151 - 244 - 395 - 639 - 1034 - 1673 - 2707 - 4380 - 7087 - 1 1467 - 1 8554 - 3 21 - 4 8575", "x2": "add x_0_1 x_0_2", "tree": "(x_0_1 add x_0_2)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 4 + 0 - 9 + 285 - 1554 + 1 1438 - 10 2656 + 99 6804 - 1055 4980 + 1 2187 7283 - 15 2356 6788 + 205 540 1241 - 2957 5479 5924 + 4 5524 1760 8330 - 74 5034 9089 9888 + 1292 470 9477 4178 - 2 3671 8888 7700 9916 + 45 6930 2162 3323 7839 - 926 9299 1039 6017 340 + 1 9716 7962 5042 3987 8263 - 43 8847 8280 4342 2769 9808 + 1020 1147 9241 9160 2115 7626", "x2": "mul mul add mul INT- 5 sub x_0_3 n sub x_0_4 x_0_1 INT+ 1 n", "tree": "((((-5 mul (x_0_3 sub n)) add (x_0_4 sub x_0_1)) mul 1) mul n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 0 - 8 - 4 - 10 + 3 + 8 - 5 - 5 + 2 + 40 + 28 + 68 - 7 - 34 + 41 + 49 + 16 - 196 - 140 - 326 + 39 + 202 - 177 - 213 - 34 + 1012 + 700", "x2": "add abs mul relu idiv INT+ 2 sign sqr idiv x_0_2 INT+ 2 mod x_0_9 n mul x_0_8 INT- 5", "tree": "(abs((relu((2 idiv sign(((x_0_2 idiv 2))**2))) mul (x_0_9 mod n))) add (x_0_8 mul -5))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 9 - 6 - 3 - 4 + 6 + 6 + 7 + 8 + 9 + 16 + 17 + 19 + 21 + 23 + 31 + 33 + 36 + 39 + 42 + 51 + 54 + 58 + 62 + 66", "x2": "add mod n sqr n relu x_0_5", "tree": "((n mod (n)**2) add relu(x_0_5))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 10 - 8 - 5 - 1 + 4 + 10 + 17 + 25 + 34 + 44 + 55 + 67 + 80 + 94 + 109 + 125 + 142 + 160 + 179 + 199", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 - 5 + 8 + 6 + 38 - 64 - 49 - 303 + 513 + 398 + 2413 - 4113 - 3235 - 1 9219 + 3 2970 + 2 6282 + 15 3066 - 26 4300 - 21 3460 - 121 9033 + 211 8780 + 173 3191 + 970 8214", "x2": "add mul x_0_3 sub idiv sign n abs INT- 9 INT+ 8 idiv x_0_5 INT+ 6", "tree": "((x_0_3 mul ((sign(n) idiv abs(-9)) sub 8)) add (x_0_5 idiv 6))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 6 + 6 - 8 + 77 + 293 + 59 + 1679 + 5549 + 1319 + 3 515 + 10 247 + 2 3999 + 54 9779 + 180 4991 + 43 2347 + 989 6351 + 3249 347 + 778 2719 + 1 7813 5043 + 5 8482 6971 + 1 4008 9523 + 32 643 1589", "x2": "sub mul mul add add mod x_0_1 add n INT+ 3 n x_0_3 INT- 6 INT- 3 INT- 5", "tree": "((((((x_0_1 mod (n add 3)) add n) add x_0_3) mul -6) mul -3) sub -5)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 5 + 4 - 8 + 1 - 11 - 2 - 14 - 5 - 17 - 8 - 20 - 11 - 23 - 14 - 26 - 17 - 29 - 20 - 32 - 23", "x2": "idiv add mod INT+ 5 INT- 8 x_0_2 sign abs x_0_1", "tree": "(((5 mod -8) add x_0_2) idiv sign(abs(x_0_1)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 - 1 - 2 + 10 + 5 - 5 + 1 + 1 + 2 - 10 - 5 + 5 - 1 - 1 - 2 + 10 + 5 - 5 + 1 + 1 + 2 - 10 - 5 + 5", "x2": "sub relu mod add x_0_6 mod abs sqr x_0_4 n INT- 9 x_0_6", "tree": "(relu(((x_0_6 add (abs((x_0_4)**2) mod n)) mod -9)) sub x_0_6)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 7 - 5 - 7 - 2 + 3 + 1 + 6 + 9 + 9 + 11 + 17 + 12 + 22 + 25 + 20 + 28 + 39 + 23 + 39 + 48 + 37 + 45 + 62", "x2": "add n mod x_0_4 add x_0_3 sub n n", "tree": "(n add (x_0_4 mod (x_0_3 add (n sub n))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 10 + 0 + 16 + 0 + 36 + 0 + 64 + 0 + 100 + 0 + 144 + 0 + 196 + 0 + 256 + 0 + 324 + 0 + 400 + 0", "x2": "sqr relu mod n add relu INT- 1 idiv sqr x_0_2 n", "tree": "(relu((n mod (relu(-1) add ((x_0_2)**2 idiv n)))))**2", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 7 + 1 + 7 - 7 - 25 + 0 - 1 - 49 - 9 - 64 + 0 - 144 - 49 - 36 + 0 + 0 + 0 - 64 - 16 + 0 + 0 + 0 - 64", "x2": "sub mul relu relu INT- 7 sign n sqr mod x_0_5 n", "tree": "((relu(relu(-7)) mul sign(n)) sub ((x_0_5 mod n))**2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "mod n INT+ 3", "tree": "(n mod 3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 9 - 7 - 3 + 9 - 8 - 5 + 6 - 12 - 10 + 0 - 19 - 18 - 9 - 29 - 29 - 21 - 42 - 43 - 36 - 58 - 60", "x2": "sub add INT+ 5 x_0_3 n", "tree": "((5 add x_0_3) sub n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 174 + 1 - 9 + 1 - 13 + 1 - 8 - 63 + 1 - 11 - 120 + 1 - 14 - 195 + 1 - 17 - 288 + 1 - 20", "x2": "sub INT- 8 mod INT- 9 mul x_0_1 mul add x_0_1 n x_0_1", "tree": "(-8 sub (-9 mod (x_0_1 mul ((x_0_1 add n) mul x_0_1))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 9 - 81 - 115 - 1078 - 1761 - 1 8375 - 3 3523 - 38 5956 - 77 1129 - 964 9021 - 2082 627 - 2 7982 1778 - 6 4543 9633 - 92 3411 8899 - 225 9038 7411 - 3416 6239 9552 - 8810 2510 9353 - 14 81 5838 1993 - 37 8840 7970 2579 - 630 3671 2719 126", "x2": "sub mul sub INT- 3 abs add n n abs x_0_2 sqr relu n", "tree": "(((-3 sub abs((n add n))) mul abs(x_0_2)) sub (relu(n))**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 10 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000", "x2": "mul n sqr relu mul n idiv x_0_1 x_0_1", "tree": "(n mul (relu((n mul (x_0_1 idiv x_0_1))))**2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 4 - 2 + 10 + 4 + 2 + 11 + 4 + 11 + 12 + 4 + 11 + 13 + 5 + 12 + 14 + 9 + 16 + 15 + 13 + 20 + 24", "x2": "relu add sqr idiv mod n x_0_2 INT- 3 x_0_3", "tree": "relu(((((n mod x_0_2) idiv -3))**2 add x_0_3))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 - 9 + 7 - 4 - 10 - 8 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "abs mul sign x_0_6 sqr n", "tree": "abs((sign(x_0_6) mul (n)**2))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 6 + 9 - 4 - 1 + 10 - 9 - 2 - 9 - 2 + 5 - 13 - 3 - 13 - 4 + 3 - 15 - 5 - 15 - 10 + 0 - 21 - 9 - 19 - 11 - 5 - 22", "x2": "add mod x_0_8 INT- 7 x_0_5", "tree": "((x_0_8 mod -7) add x_0_5)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 - 6 + 6 + 3 - 375 + 6 7500 - 1653 7500 + 52 9200 0 - 2 1432 6000 0 + 1071 6300 0 0 - 64 8336 1500 0 0 + 4 6680 2028 0 0 0 - 3944 4771 3660 0 0 0 + 386 5587 5938 6800 0 0 0 - 43 4878 6043 1015 0 0 0 0 + 5 5664 4613 5169 9200 0 0 0 0 - 8043 5146 6532 534 4000 0 0 0 0 + 1303 493 7578 1926 5728 0 0 0 0 0 - 235 2004 1232 8637 7463 9040 0 0 0 0 0 + 47 400 8246 5727 5492 7808 0 0 0 0 0 0 - 10 3723 3818 3692 9246 1581 6640 0 0 0 0 0 0 + 2 5101 584 453 6877 5702 7626 8800 0 0 0 0 0 0 - 6639 2299 4800 4 1173 3807 3097 6000 0 0 0 0 0 0", "x2": "mul mul add idiv idiv relu sign INT- 3 abs x_0_2 x_0_4 sqr relu n x_0_1 INT- 5", "tree": "(((((relu(sign(-3)) idiv abs(x_0_2)) idiv x_0_4) add (relu(n))**2) mul x_0_1) mul -5)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 7 + 7 + 1059 + 5 + 2463 + 44 5846 + 2463 + 138 1752 + 2 8132 8836 + 172 6574 + 10 6533 804 + 2365 9755 1089 + 15 7290 8928 + 1 450 8951 8739 + 248 6640 2619 4555 + 1 7632 3090 8305 + 1244 7016 1681 8167 + 31 3565 3370 3133 3874 + 2346 8603 3895 3975 + 174 3826 9651 6225 1988 + 4 6125 4610 7730 9212 8676", "x2": "add n relu relu add x_0_3 mul mul x_0_3 INT- 1 0 mul INT- 7 sub n sign n", "tree": "(n add relu(relu((x_0_3 add ((x_0_3 mul -10) mul (-7 mul (n sub sign(n))))))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "mul abs n n", "tree": "(abs(n) mul n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 14 + 16 + 25 + 25 + 36 + 34 + 47 + 43 + 58 + 52 + 69 + 61 + 80 + 70 + 91 + 79 + 102 + 88 + 113", "x2": "sub relu abs idiv sqr mul INT- 5 n x_0_1 idiv INT+ 7 INT+ 9", "tree": "(relu(abs((((-5 mul n))**2 idiv x_0_1))) sub (7 idiv 9))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 + 5 + 10 + 0 + 6 + 11 + 1 + 7 + 12 + 2 + 8 + 13 + 3 + 9 + 14 + 4 + 10 + 15 + 5 + 11 + 16 + 6", "x2": "abs sub x_0_3 sign INT- 5", "tree": "abs((x_0_3 sub sign(-5)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 2 - 7 + 1 - 4 - 1 + 7 - 7 + 4 - 10 - 8 + 6 - 5 + 9 + 7 - 7 + 4 - 10 - 8 + 6 - 5 + 9 + 7 - 7 + 4 - 10 - 8 + 6 - 5 + 9", "x2": "add sign mul add idiv x_0_10 INT+ 4 x_0_8 idiv mod n n n sub mod INT+ 1 0 INT- 6 x_0_4", "tree": "(sign((((x_0_10 idiv 4) add x_0_8) mul ((n mod n) idiv n))) add ((10 mod -6) sub x_0_4))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 4 + 0 - 9 - 5 + 7 + 6 + 8 - 80 + 52 + 0 - 108 - 85 + 112 + 90 + 136 - 1120 + 1300 + 0 - 2268 - 2465 + 1232 + 2700 + 3400 - 1 5680 + 1 1700 + 0", "x2": "mul x_0_8 add INT+ 9 mod x_0_8 n", "tree": "(x_0_8 mul (9 add (x_0_8 mod n)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 3 - 6 - 4 + 0 + 4 + 3 - 3 - 6 - 4 + 0 + 4 + 3 - 3 - 6 - 4 + 0 + 4 + 3 - 3 - 6 - 4 + 0 + 4 + 3 - 3", "x2": "add relu mod idiv sub INT- 5 idiv INT+ 5 INT+ 1 add x_0_6 sign relu n add x_0_2 INT- 8 x_0_6", "tree": "(relu((((-5 sub (5 idiv 1)) idiv (x_0_6 add sign(relu(n)))) mod (x_0_2 add -8))) add x_0_6)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 5 - 3 + 2 - 196 - 175 + 0 - 9702 - 9912 - 126 - 67 9280 - 76 3378 - 1 752 - 6181 4662 - 7481 1240 - 112 9170 - 69 2324 2368 - 89 253 7798 - 1 4227 5672 - 9207 9123 5210 - 1 2463 5529 2000 - 209 1452 4078 - 141 8018 5022 2648", "x2": "mul sub sub add add n n n n mul x_0_3 n INT- 7", "tree": "(((((n add n) add n) sub n) sub (x_0_3 mul n)) mul -7)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 - 10 - 4 + 1 + 8 + 3 - 10 + 1 - 9 - 9 - 10 - 4 - 168 - 188 - 222 - 10 - 288 - 9 - 9 - 10 - 4 - 168 - 188 - 222 - 10 - 288 - 9 - 9", "x2": "mod sub x_0_9 idiv INT+ 2 INT+ 9 mul relu n sub x_0_6 add x_0_6 n", "tree": "((x_0_9 sub (2 idiv 9)) mod (relu(n) mul (x_0_6 sub (x_0_6 add n))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 5 - 6 + 4 - 3 - 6 - 1 - 9 + 0 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv sign mod mod add n sqr add mul x_0_8 INT- 5 n x_0_7 x_0_4 n", "tree": "(sign((((n add (((x_0_8 mul -5) add n))**2) mod x_0_7) mod x_0_4)) idiv n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 55 + 328 - 1968 + 1 1806 - 7 840 + 42 5040 - 255 240 + 1530 1440 - 9180 8640 + 5 5085 1840 - 33 511 1040 + 198 3066 6237 - 1189 8399 7433 + 7139 398 4591 - 4 2834 2390 7561 + 25 7005 4344 5357 - 154 2032 6067 2151 + 925 2195 6403 2905 - 5551 3173 8419 7435", "x2": "add sub x_0_1 mul x_0_1 abs abs INT+ 7 idiv mod x_0_1 n INT- 1", "tree": "((x_0_1 sub (x_0_1 mul abs(abs(7)))) add ((x_0_1 mod n) idiv -1))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 16 - 50 - 102 - 172 - 260 - 366 - 490 - 632 - 792 - 970 - 1166 - 1380 - 1612 - 1862 - 2130 - 2416 - 2720 - 3042 - 3382", "x2": "mul sub add INT- 7 mul INT- 8 n n n", "tree": "(((-7 add (-8 mul n)) sub n) mul n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 - 7 - 16 - 32 - 57 - 93 - 142 - 206 - 287 - 387 - 508 - 652 - 821 - 1017 - 1242 - 1498 - 1787 - 2111 - 2472 - 2872", "x2": "add mul relu n sub sign INT- 6 n mod n x_0_1", "tree": "((relu(n) mul (sign(-6) sub n)) add (n mod x_0_1))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 7 + 8 + 6 + 4 - 8 - 10 - 9 - 2 + 12 + 4 + 20 + 19 + 18 + 7 + 6 + 8 + 16 + 31 + 24 + 41 + 41 + 41 + 31 + 31 + 34 + 43 + 59", "x2": "add x_0_9 n", "tree": "(x_0_9 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 3 + 10 + 4 - 6 - 5 + 6 - 8 - 2 - 3 - 2 - 3 - 2 - 3 - 2 - 3 - 3 - 2 - 2 - 3 - 3 - 2 - 2 - 2 - 3 - 2", "x2": "idiv INT+ 8 add INT- 3 mod x_0_7 x_0_1", "tree": "(8 idiv (-3 add (x_0_7 mod x_0_1)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 4 - 1 + 4 + 11 + 14 + 26 + 38 + 55 + 81 + 112 + 157 + 216 + 294 + 400 + 539 + 725 + 972 + 1299 + 1734 + 2310 + 3074 + 4087", "x2": "add n add sub abs add abs x_0_3 mod x_0_2 sqr x_0_2 sign relu n n", "tree": "(n add ((abs((abs(x_0_3) add (x_0_2 mod (x_0_2)**2))) sub sign(relu(n))) add n))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 1 - 6 + 4 + 4 + 1 + 9 + 7 + 8 + 9 + 15 + 15 + 15 + 20 + 22 + 24 + 21 + 21 + 21 + 26 + 28 + 30 + 27", "x2": "add n mod relu add INT+ 9 n x_0_3", "tree": "(n add (relu((9 add n)) mod x_0_3))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 9 + 3 + 3 + 5 + 10 + 2 + 5 + 8 + 10 + 0 + 14 + 3 + 5 + 18 + 4 + 12 + 18 + 12 + 14 + 19 + 9", "x2": "abs mod add INT- 7 INT- 7 abs sub idiv x_0_1 sign n add INT+ 8 add n x_0_3", "tree": "abs(((-7 add -7) mod abs(((x_0_1 idiv sign(n)) sub (8 add (n add x_0_3))))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 - 1 + 9 + 7 + 5 + 4 + 6 + 8 2944 + 1 3122 + 16 2000 + 16 7706 + 15 5520 + 15 8184 + 29 6352 + 50 3884 8000 + 9 6745 8816 + 143 2630 8000 + 176 510 5056 + 192 81 240 + 227 7849 6000 + 494 128 5696 + 965 7657 6307 2000 + 211 8792 8545 6896 + 3564 8438 7225 6000 + 4951 4357 9700 0 + 6074 5219 3400 8320", "x2": "abs mul sub INT- 3 INT+ 3 mul mul n sub sign INT- 3 INT+ 2 mul sqr n abs x_0_7", "tree": "abs(((-3 sub 3) mul ((n mul (sign(-3) sub 2)) mul ((n)**2 mul abs(x_0_7)))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 1 - 2 + 2 + 23 + 2 + 23 + 2 - 66 + 2 - 66 + 2 + 379 + 2 + 379 + 2 - 1846 + 2 - 1846 + 2 + 9279 + 2 + 9279", "x2": "mod x_0_2 add mul x_0_4 INT- 6 sqr relu INT+ 7", "tree": "(x_0_2 mod ((x_0_4 mul -6) add (relu(7))**2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 9 - 2 + 23 + 29 + 17 + 41 + 46 + 33 + 56 + 60 + 46 + 68 + 71 + 56 + 77 + 79 + 63 + 83 + 84 + 67 + 86", "x2": "add sqr INT- 5 sub x_0_3 n", "tree": "((-5)**2 add (x_0_3 sub n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 6 + 7 - 5 - 30 - 35 - 25 - 150 - 175 - 125 - 750 - 875 - 625 - 3750 - 4375 - 3125 - 1 8750 - 2 1875 - 1 5625 - 9 3750 - 10 9375 - 7 8125", "x2": "mul INT- 5 abs x_0_3", "tree": "(-5 mul abs(x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 - 9 + 16 + 17 - 8 - 8 + 17 + 16 - 7 - 8 + 15 + 16 - 7 - 8 + 15 + 17 - 6 - 10 + 14 + 19 - 5", "x2": "sub sub add sign sub abs x_0_2 x_0_1 idiv n x_0_1 INT- 9 x_0_2", "tree": "(((sign((abs(x_0_2) sub x_0_1)) add (n idiv x_0_1)) sub -9) sub x_0_2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "relu mul n n", "tree": "relu((n mul n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 4 - 4 + 12 - 20 - 24 + 84 - 160 - 216 + 840 - 1760 - 2592 + 1 920 - 2 4640 - 3 8880 + 17 4720 - 41 8880 - 69 9840 + 331 9680 - 837 7600 - 1469 6640 + 7303 2960", "x2": "mul sign abs relu INT- 4 mul x_0_3 n", "tree": "(sign(abs(relu(-4))) mul (x_0_3 mul n))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 3 - 7 + 0 + 7 - 9 - 2 + 1 + 5 - 8 + 242 + 288 - 26 + 392 + 450 - 64 + 442 + 648 + 722 + 160 + 882 + 968 - 1334 + 1152 + 1250 - 5304 + 1458 + 1568 + 1682", "x2": "mul mul INT- 2 sub sub abs x_0_10 x_0_10 n n", "tree": "((-2 mul ((abs(x_0_10) sub x_0_10) sub n)) mul n)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 6 + 1 - 6 - 51 - 72 - 103 - 6 - 51 - 72 - 103 - 6 - 51 - 72 - 103 - 6 - 51 - 72 - 103 - 6 - 51 - 72 - 103", "x2": "mod x_0_4 add mul INT- 2 sqr n sub sqr idiv x_0_3 abs n n", "tree": "(x_0_4 mod ((-2 mul (n)**2) add (((x_0_3 idiv abs(n)))**2 sub n)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 9 - 5 + 0 - 1 - 6 - 1 - 2 - 7 - 2 - 3 - 8 - 3 - 4 + 0 - 4 - 5 - 1 - 5 - 6 - 2 - 6", "x2": "mod sub x_0_3 INT+ 1 0 INT- 9", "tree": "((x_0_3 sub 10) mod -9)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 - 8 + 1 - 15 - 8 - 15 - 24 - 24 - 40 - 49 - 65 - 90 - 115 - 156 - 206 - 272 - 363 - 479 - 636 - 843 - 1116 - 1480", "x2": "add x_0_2 add sign idiv idiv INT+ 9 x_0_1 n add abs idiv INT+ 4 sqr n x_0_3", "tree": "(x_0_2 add (sign(((9 idiv x_0_1) idiv n)) add (abs((4 idiv (n)**2)) add x_0_3)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 + 5 - 4 - 1 - 5 - 8 + 10 + 3 - 10 + 1 + 5 + 7 + 11 + 8 + 6 + 10 + 3 + 7 + 1 + 5 + 7 + 11 + 8 + 6 + 10 + 3 + 7 + 1", "x2": "mod x_0_9 sub n sign abs INT+ 9", "tree": "(x_0_9 mod (n sub sign(abs(9))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 2 - 6 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 1 + 7 + 10 - 10 + 10 - 8 - 98 - 140 + 125 - 140 + 121 + 1244 + 2205 - 1753 + 1976 - 1692 - 1 7419 - 3 868 + 2 4513 - 2 7664 + 2 3709 + 24 3663 + 43 2589 - 34 3183 + 38 7319", "x2": "sub idiv mul n mod n sub x_0_5 n x_0_7 mul add INT+ 5 relu INT+ 9 x_0_5", "tree": "(((n mul (n mod (x_0_5 sub n))) idiv x_0_7) sub ((5 add relu(9)) mul x_0_5))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 8 + 12 + 18 + 16 + 21 + 27 + 25 + 30 + 36 + 33 + 39 + 45 + 42 + 48 + 54 + 51", "x2": "idiv sqr n abs idiv abs abs n INT- 3", "tree": "((n)**2 idiv abs((abs(abs(n)) idiv -3)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 8 + 0 - 512 + 0 - 11 592 + 0 - 5662 3104 + 0 - 566 2310 4000 + 0 - 97 8447 2371 2000 + 0 - 26 8485 9218 6572 8000 + 0 - 10 9971 8335 9620 2188 8000 + 0 - 6 4135 5733 5330 5116 5081 6000 + 0 - 5 1308 4586 8264 4093 2065 2800 0 + 0", "x2": "mul mul n mul n add mod n n n x_0_2", "tree": "((n mul (n mul ((n mod n) add n))) mul x_0_2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 2 + 4 + 8 + 7 + 10 + 20 + 28 + 31 + 38 + 52 + 64 + 71 + 82 + 100 + 116 + 127 + 142 + 164 + 184 + 199 + 218", "x2": "sub add abs sqr n sub sub idiv INT- 3 idiv idiv n n add INT+ 5 INT- 6 n n x_0_2", "tree": "((abs((n)**2) add (((-3 idiv ((n idiv n) idiv (5 add -6))) sub n) sub n)) sub x_0_2)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 - 5 + 2 + 1 - 7 - 1 + 4 - 5 + 9 - 4 + 22 + 19 + 5 + 13 + 27 + 13 + 23 + 20 + 33 + 44 + 5 + 17 + 46 + 25 + 22 + 34 + 38 + 53", "x2": "add x_0_8 mul sub x_0_10 n INT- 1", "tree": "(x_0_8 add ((x_0_10 sub n) mul -1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 1 + 5 - 6 - 4 + 3 + 8 - 49 + 12 - 14 - 25 + 40 + 18 - 4 + 16 - 17 - 11 + 7 + 18 - 91 + 25 - 26 - 44 + 75 + 32 - 7", "x2": "idiv mul n n x_0_6", "tree": "((n mul n) idiv x_0_6)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 8 - 3 - 7 + 4 + 6 - 9 - 504 - 189 - 441 + 252 + 378 - 567 - 3 1752 - 1 1907 - 2 7783 + 1 5876 + 2 3814 - 3 5721 - 200 376 - 75 141 - 175 329 + 100 188 + 150 282 - 225 423 - 1 2602 3688", "x2": "mul x_0_6 add sqr INT- 8 idiv INT- 3 add INT+ 4 INT+ 4", "tree": "(x_0_6 mul ((-8)**2 add (-3 idiv (4 add 4))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 4 + 6 + 4 - 9 - 2 - 2 - 6 + 13 + 26 + 47 + 28 + 94 + 18 + 19 + 52 + 186 + 694 + 2228 + 804 + 8857 + 346 + 384 + 2728 + 3 4621 + 48 1662 + 496 4011", "x2": "add sqr x_0_8 mul n INT+ 1", "tree": "((x_0_8)**2 add (n mul 1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 6 + 3 - 4 + 7 + 6 + 1 + 10 + 28 + 0 + 6 + 38 + 24 - 12 + 86 + 769 - 16 + 19 + 1426 + 557 + 124 + 7375 + 59 1339 + 233 + 337 + 203 3451 + 31 223", "x2": "sub sqr x_0_7 n", "tree": "((x_0_7)**2 sub n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 3 + 0 - 1 - 4 + 7 + 22 + 7 + 16 + 41 - 53 - 211 - 65 - 180 - 521 + 761 + 3195 + 1061 + 3068 + 9425 - 1 4477 - 6 4031 - 2 2307 - 6 7606 - 21 7143", "x2": "sub n idiv mul sub sqr n sub n sign mod n mod n INT+ 9 x_0_5 n", "tree": "(n sub ((((n)**2 sub (n sub sign((n mod (n mod 9))))) mul x_0_5) idiv n))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 4 - 9 + 2 + 4 - 5 + 9 + 8 - 7 + 2 - 10 + 7 + 20 + 6 + 21 + 37 + 20 + 38 + 57 + 37 + 58 + 36 + 59 + 83 + 108 + 134 + 161 + 189 + 218 + 248 + 279", "x2": "add x_0_1 add idiv n sign mod x_0_12 x_0_11 mod sign x_0_4 sign mul n x_0_1", "tree": "(x_0_1 add ((n idiv sign((x_0_12 mod x_0_11))) add (sign(x_0_4) mod sign((n mul x_0_1)))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 8 + 9 - 7 + 1 + 8 - 6 + 1 + 8 - 4 + 7 + 8 + 9 + 0 + 1 + 8 + 0 + 1 + 8 + 0 + 7 + 8 + 9 + 0 + 1 + 8 + 0 + 1 + 8 + 0", "x2": "relu x_0_10", "tree": "relu(x_0_10)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 3 - 5 - 8 + 1 + 0 + 0 + 1 + 1 + 1 + 4 + 4 + 12 + 8 + 10 + 9 + 9 + 1 + 1 + 0 + 0 + 20 + 18", "x2": "mod sqr sub x_0_4 sqr INT- 3 n", "tree": "(((x_0_4 sub (-3)**2))**2 mod n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 10 + 3 - 3 + 9 + 0 + 3 + 32 + 9 + 0 + 3 + 32 + 9 + 0 + 3 + 32 + 9 + 0 + 3 + 32 + 9 + 0 + 3 + 32", "x2": "mod x_0_4 add sub sub sqr n abs relu n INT+ 7 mul INT+ 4 x_0_2", "tree": "(x_0_4 mod ((((n)**2 sub abs(relu(n))) sub 7) add (4 mul x_0_2)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 3 + 3 - 27 + 48 - 675 + 1728 - 3 3075 + 11 592 - 267 9075 + 1105 9200 - 3 2416 8075 + 15 9252 4800 - 547 8440 4675 + 3121 3486 800 - 12 3264 9105 1875 + 79 9065 2436 4800 - 3562 3559 1399 1875 + 2 5889 7138 9419 5200 - 128 6010 4849 5106 6875 + 1035 5885 5576 7808 0 - 5 6713 623 8634 2049 1875", "x2": "mul mul n x_0_2 n", "tree": "((n mul x_0_2) mul n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 + 8 + 1 + 15 + 10 + 26 + 23 + 41 + 40 + 60 + 61 + 83 + 86 + 110 + 115 + 141 + 148 + 176 + 185 + 215", "x2": "sub sqr n x_0_1", "tree": "((n)**2 sub x_0_1)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 4 - 2 + 9 - 5 + 0 + 0 + 2 + 0 + 2 + 5 + 0 + 0 + 2 + 0 + 0 + 5 + 0 + 0 + 2 + 3 + 0 + 5 + 0", "x2": "relu mod sub INT+ 6 sqr n mod sign sign idiv n x_0_5 INT+ 7", "tree": "relu(((6 sub (n)**2) mod (sign(sign((n idiv x_0_5))) mod 7)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9", "x2": "idiv n INT+ 2", "tree": "(n idiv 2)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 5 - 7 + 1 - 6 + 9 + 0 + 0 + 1 + 0 + 9 + 0 + 0 + 1 + 0 + 9 + 0 + 0 + 1 + 0 + 9 + 0 + 0 + 1", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 1 - 4 - 1 - 2 - 5 - 2 - 3 - 6 - 3 - 4 - 7 - 4 - 5 - 8 - 5 - 6 - 9 - 6 - 7 - 10 - 7", "x2": "sub x_0_3 sign sqr x_0_2", "tree": "(x_0_3 sub sign((x_0_2)**2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 0 + 1 + 4 + 9 + 16 + 0 + 1 + 4 + 9 + 16 + 0 + 1 + 4 + 9 + 16", "x2": "sqr mod n INT+ 5", "tree": "((n mod 5))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 - 4 - 8 + 1 + 6 - 7 + 1 + 7 + 10 + 11 + 11 + 23 + 26 + 10 + 26 + 138 + 180 + 10 + 219 + 470 + 136 + 230 + 608 + 3322 + 10 + 270 + 5923 + 1746", "x2": "add INT+ 1 0 add sqr idiv INT+ 4 x_0_9 mul n relu mod x_0_8 x_0_7", "tree": "(10 add (((4 idiv x_0_9))**2 add (n mul relu((x_0_8 mod x_0_7)))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 7 - 10 - 1 + 10 + 5 - 1 - 8 - 16 - 25 + 15 + 4 - 8 - 21 - 35 - 50 - 66 - 83 - 101 - 120 - 140 - 161 - 183 - 206", "x2": "sub mul sign mul idiv n INT+ 9 add x_0_4 relu sub mul INT- 1 0 x_0_4 n x_0_1 n", "tree": "((sign(((n idiv 9) mul (x_0_4 add relu(((-10 mul x_0_4) sub n))))) mul x_0_1) sub n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign sqr idiv abs n relu mod n sqr abs INT- 2", "tree": "sign(((abs(n) idiv relu((n mod (abs(-2))**2))))**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 1 - 8 + 2 - 8 + 1 + 6 - 4 + 73 + 89 + 109 + 133 + 155 + 183 + 211 + 239 + 273 + 307 + 343 + 381 + 421 + 463 + 507 + 553 + 601 + 651 + 703", "x2": "add sub sign x_0_8 n sqr n", "tree": "((sign(x_0_8) sub n) add (n)**2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 1 + 11 + 23 + 37 + 53 + 71 + 91 + 113 + 137 + 163 + 191 + 221 + 253 + 287 + 323 + 361 + 401 + 443 + 487 + 533", "x2": "add sub add x_0_1 n INT- 7 abs sub sign x_0_1 n", "tree": "(((x_0_1 add n) sub -7) add abs((sign(x_0_1) sub n)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 1 + 3 - 8 - 6 + 10 + 7 + 7 + 8 + 9 + 0 + 1 + 3 + 0 + 4 + 5 + 2 + 7 + 8 + 3 + 0 + 1 + 3 + 3 + 4 + 5 + 3", "x2": "mod mod n sub add n mul sqr sign mul x_0_7 n x_0_6 x_0_7 INT+ 1 0", "tree": "((n mod ((n add ((sign((x_0_7 mul n)))**2 mul x_0_6)) sub x_0_7)) mod 10)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 3 - 5 - 2 + 2 + 60 - 21 - 40 - 18 + 20 + 660 - 252 - 520 - 252 + 300 + 1 560 - 4284 - 9360 - 4788 + 6000 + 22 1760 - 9 4248 - 21 5280 - 11 4912", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 + 5 - 8 + 7 + 9 + 5 + 1 + 9 - 9 - 10 - 121 + 720 - 1352 + 1372 + 2025 + 1280 + 289 + 2916 - 3249 - 4000 - 5 3361 + 34 8480 - 71 5208 + 79 272 + 126 5625 + 86 5280 + 21 681 + 228 6144 - 273 2409", "x2": "mul n mul x_0_10 n", "tree": "(n mul (x_0_10 mul n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 8 + 4 + 3 - 1 - 8 + 6 + 10 + 3 + 4 + 4 - 10 + 0 + 8 + 4 + 3 + 1 + 8 + 6 + 10 + 3 + 4 + 4 + 10 + 0 + 8 + 4 + 3 + 1 + 8 + 6 + 10", "x2": "abs x_0_12", "tree": "abs(x_0_12)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 10 + 5 + 6 - 5 + 10 + 16 + 12 + 14 + 14 + 20 + 27 + 24 + 27 + 28 + 35 + 43 + 41 + 45 + 47 + 55 + 64 + 63 + 68 + 71", "x2": "add n abs x_0_5", "tree": "(n add abs(x_0_5))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "abs sqr idiv sqr n sign sqr sub mod INT+ 3 x_0_1 sub n INT- 8", "tree": "abs((((n)**2 idiv sign((((3 mod x_0_1) sub (n sub -8)))**2)))**2)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 7 - 3 + 5 + 7 + 7 + 7 + 5 + 5 + 7 + 7 + 7 + 7 + 7 + 5 + 7 + 5 + 7 + 7 + 7 + 7 + 5", "x2": "sub sign mod mod mod INT+ 4 n mod add x_0_2 n relu x_0_1 sqr INT- 4 INT- 6", "tree": "(sign((((4 mod n) mod ((x_0_2 add n) mod relu(x_0_1))) mod (-4)**2)) sub -6)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 63 + 441 + 3087 + 2 1609 + 15 1263 + 105 8841 + 741 1887 + 5188 3209 + 3 6318 2463 + 25 4227 7241 + 177 9594 687 + 1245 7158 4809 + 8720 109 3663 + 6 1040 765 5641 + 42 7280 5358 9487 + 299 963 7512 6409 + 2093 6746 2588 4863 + 1 4655 7223 8119 4041 + 10 2590 566 6835 8287", "x2": "mul x_0_1 relu mod sign INT- 8 relu add INT+ 5 INT+ 3", "tree": "(x_0_1 mul relu((sign(-8) mod relu((5 add 3)))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 - 1 - 2 - 2 + 3 - 19 - 18 - 35 - 20 - 184 - 200 - 466 - 557 - 1971 - 2603 - 5985 - 8933 - 2 2935 - 3 5102 - 7 6357 - 12 6543 - 28 926 - 47 1537 - 97 7057", "x2": "add INT- 9 sub INT- 2 sub mul INT- 1 sub x_0_3 mul x_0_4 sub INT- 7 sub n n add n add x_0_5 x_0_2", "tree": "(-9 add (-2 sub ((-1 mul (x_0_3 sub (x_0_4 mul (-7 sub (n sub n))))) sub (n add (x_0_5 add x_0_2)))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 2 + 0 - 4 + 8 + 6 - 2 + 9 - 5 + 22 - 6 + 15 + 6 + 2 + 34 - 25 + 56 - 33 + 53 + 0 - 5 + 82 - 93 + 169 - 145", "x2": "sub relu n sub x_0_1 x_0_5", "tree": "(relu(n) sub (x_0_1 sub x_0_5))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 6 + 6 + 1 - 7 - 7 - 3 - 1 + 0 + 6 + 1 + 0 + 0 + 0 + 0 + 0 + 6 + 1 + 0 + 0 + 0 + 0 + 0 + 6 + 1 + 0 + 0", "x2": "abs relu x_0_7", "tree": "abs(relu(x_0_7))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 6 + 6 - 5 + 5 - 2 + 8 - 32 + 128 - 512 + 2048 - 8192 + 3 2768 - 13 1072 + 52 4288 - 209 7152 + 838 8608 - 3355 4432 + 1 3421 7728 - 5 3687 912 + 21 4748 3648 - 85 8993 4592 + 343 5973 8368 - 1374 3895 3472 + 5497 5581 3888", "x2": "mul mul INT- 4 x_0_1 relu abs sign abs x_0_5", "tree": "((-4 mul x_0_1) mul relu(abs(sign(abs(x_0_5)))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 1 + 8 + 3 + 7 - 9 - 2 + 1 - 1 - 4 - 1 - 2 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv add sub x_0_3 x_0_7 x_0_4 INT+ 5", "tree": "(((x_0_3 sub x_0_7) add x_0_4) idiv 5)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 10 + 6 - 9 + 7 - 8 + 8 - 7 + 9 - 6 + 10 - 5 + 11 - 4 + 12 - 3 + 13", "x2": "add x_0_2 sign sign n", "tree": "(x_0_2 add sign(sign(n)))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 0 - 7 + 7 - 7 - 7 + 7 + 7 + 7 - 7 + 7 - 7 - 7 + 7 + 7 + 7 - 7", "x2": "mul sign idiv sub mod x_0_2 n n x_0_3 x_0_1", "tree": "(sign((((x_0_2 mod n) sub n) idiv x_0_3)) mul x_0_1)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 8 - 9 - 10 + 1 + 60 + 84 + 112 + 48 + 468 + 750 + 1122 + 444 + 5928 + 1 318 + 1 6620 + 6864 + 10 504 + 18 5418", "x2": "abs mul sub sqr sign sub abs INT+ 4 sign INT+ 8 sub n x_0_4 n", "tree": "abs((((sign((abs(4) sub sign(8))))**2 sub (n sub x_0_4)) mul n))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 + 8 - 5 + 2 - 8 + 4 - 2 + 6 + 34 + 8 + 171 + 2 + 460 + 4 + 958 + 6 + 34 + 8 + 171 + 2 + 460 + 4", "x2": "mod x_0_8 mul sqr x_0_5 n", "tree": "(x_0_8 mod ((x_0_5)**2 mul n))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 15 + 29 + 57 + 113 + 225 + 449 + 897 + 1793 + 3585 + 7169 + 1 4337 + 2 8673 + 5 7345 + 11 4689", "x2": "add sub x_0_1 sub sign n relu INT- 4 x_0_1", "tree": "((x_0_1 sub (sign(n) sub relu(-4))) add x_0_1)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 6 + 7 + 5 + 9 - 9 - 9 - 9 + 16 - 9 + 72 + 72 + 72 + 0 + 72 + 135 + 55 + 7 - 9 + 216", "x2": "sub abs relu sqr mod abs x_0_5 n INT+ 9", "tree": "(abs(relu(((abs(x_0_5) mod n))**2)) sub 9)", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 6 + 9 - 1 + 4 + 0 - 1 + 0 - 2 + 0 + 11 - 2 + 13 - 1 + 15 + 0 - 1 + 0 - 2", "x2": "idiv n sub INT+ 1 mul n sub idiv INT+ 6 n x_0_5", "tree": "(n idiv (1 sub (n mul ((6 idiv n) sub x_0_5))))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 10 + 7 + 9 + 2 - 25 - 36 - 49 - 64 - 81 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323", "x2": "sub idiv sub n relu abs mod abs x_0_4 x_0_4 abs INT- 1 0 sqr n", "tree": "(((n sub relu(abs((abs(x_0_4) mod x_0_4)))) idiv abs(-10)) sub (n)**2)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 5 + 3 - 3 + 2 + 4 - 5 + 3 - 3 + 2 + 4 - 5 + 3 - 3 + 2 + 4 - 5 + 3 - 3", "x2": "add x_0_5 mod relu idiv mod INT+ 6 relu INT- 7 sign x_0_1 n", "tree": "(x_0_5 add (relu(((6 mod relu(-7)) idiv sign(x_0_1))) mod n))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 0 + 0 - 1 - 9 - 3 - 8 + 9 + 0 + 0 + 1 + 25 + 4 + 16 + 16 + 0 + 0 + 0 + 144 + 4 + 64", "x2": "abs sqr idiv x_0_7 INT+ 2", "tree": "abs(((x_0_7 idiv 2))**2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 9999 9920 - 20 9999 8400 - 420 9996 8000 - 8420 9936 0 - 16 8420 8720 0 - 336 8418 4400 0 - 6736 8369 8000 0 - 13 4736 7397 0 0 - 269 4734 7941 0 0 - 5389 4695 8821 0 0 - 10 7789 3917 6421 0 0 - 215 5787 8352 8421 0 0 - 4311 5756 7056 8421 0 0 - 8 6231 5134 1136 8421 0 0", "x2": "sub mul idiv abs INT+ 5 INT+ 1 mul x_0_1 INT+ 4 sqr sqr sqr INT+ 1 0", "tree": "(((abs(5) idiv 1) mul (x_0_1 mul 4)) sub (((10)**2)**2)**2)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 4 - 9 + 0 - 3 - 6 + 0 + 2 - 3 - 2 + 4 + 6 + 5 + 2 + 7 + 8 - 3", "x2": "add sub x_0_3 relu x_0_2 relu mod x_0_3 relu n", "tree": "((x_0_3 sub relu(x_0_2)) add relu((x_0_3 mod relu(n))))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 + 9 + 9 + 10 + 120 + 804 + 5726 + 4 6800 + 42 7743 + 433 3110 + 4813 4922 + 5 8242 2004 + 76 2485 6473 + 1073 9688 6030 + 1 6193 9653 8780 + 26 286 4252 7600 + 444 2629 1160 1431 + 8025 1868 1657 4002", "x2": "mul n sub x_0_1 sub sub mod add x_0_2 x_0_4 x_0_4 x_0_3 n", "tree": "(n mul (x_0_1 sub ((((x_0_2 add x_0_4) mod x_0_4) sub x_0_3) sub n)))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 100 + 392 + 1200 + 3136 + 7220 + 1 5000 + 2 8672 + 5 1200 + 8 6436 + 13 9240 + 21 5600 + 32 2752 + 46 9300 + 66 5336", "x2": "relu mul sqr add sub n INT- 8 sqr n n", "tree": "relu(((((n sub -8) add (n)**2))**2 mul n))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 4 + 0 - 3 + 9 + 10 - 8 + 9 + 77 - 60 + 72 + 619 - 489 + 566 + 4960 - 3921 + 4451 + 3 9740 - 3 1440 + 3 4989 + 31 8409 - 25 2086", "x2": "sub sub sign idiv INT+ 7 add INT- 2 n add mul x_0_3 INT- 8 x_0_8 sqr sign n", "tree": "((sign((7 idiv (-2 add n))) sub ((x_0_3 mul -8) add x_0_8)) sub (sign(n))**2)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 2 - 4 - 5 + 0 - 8 - 3136 - 256 - 1296 - 2500 + 0 - 9216 - 16 6202 9824 - 1284 5056 - 3 7791 3600 - 16 0 0 + 0 - 275 1882 8544 - 9 9720 5872 474 3502 2336 - 6 5998 1854 5725 4400", "x2": "mul sign INT- 9 sqr mul x_0_6 add n mod relu sub n n n", "tree": "(sign(-9) mul ((x_0_6 mul (n add (relu((n sub n)) mod n))))**2)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 2 + 36 - 8 + 335 - 60 + 3028 - 526 + 2 7267 - 4718 + 24 5420 - 4 2444 + 220 8799 - 38 1976 + 1987 9212 - 343 7762", "x2": "sub n sub INT- 6 mul x_0_2 INT+ 9", "tree": "(n sub (-6 sub (x_0_2 mul 9)))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 3 + 7 + 14 + 20 + 34 + 45 + 58 + 73 + 90 + 120 + 142 + 166 + 192 + 220 + 250", "x2": "add add n mod sub INT+ 1 0 mod n mod n x_0_2 n mul n mod INT- 2 n", "tree": "((n add ((10 sub (n mod (n mod x_0_2))) mod n)) add (n mul (-2 mod n)))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 - 10 - 4 + 6 - 10 + 194 + 340 + 494 + 719 + 990 + 1321 + 1718 + 2187 + 2734 + 3365 + 4086 + 4903 + 5822 + 6849", "x2": "mod INT- 1 0 mul add idiv n x_0_3 sqr add relu idiv x_0_5 relu INT- 3 n abs n", "tree": "(-10 mod (((n idiv x_0_3) add ((relu((x_0_5 idiv relu(-3))) add n))**2) mul abs(n)))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 3 + 2 + 1 + 4 + 1 + 6 + 1 + 8 + 1 + 10 + 1 + 12 + 1 + 14 + 1", "x2": "idiv mod n mul INT- 8 INT- 5 mod x_0_1 n", "tree": "((n mod (-8 mul -5)) idiv (x_0_1 mod n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 7 - 6 - 5 + 9 + 5 - 34 + 41 - 162 - 1223 - 5409 + 5420 + 12 - 2931 6755 + 4 8769 - 3 5180 1045 - 1 4293 9702 3534 - 15 7275 8814 54", "x2": "mod add sub n mod n x_0_1 n mul x_0_3 x_0_2", "tree": "(((n sub (n mod x_0_1)) add n) mod (x_0_3 mul x_0_2))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 8 - 5 + 11 + 8 + 12 + 9 + 13 + 10 + 14 + 11 + 15 + 12 + 16 + 13 + 17 + 14", "x2": "sub abs add INT- 1 x_0_2 INT- 2", "tree": "(abs((-1 add x_0_2)) sub -2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 8 + 8 + 2 + 2 - 3 - 5 + 10 + 16 + 0 + 0 + 20 + 48 + 0 + 0 + 320 + 0 + 0 + 0 + 1 5360 + 0", "x2": "abs mul relu abs x_0_7 relu x_0_4", "tree": "abs((relu(abs(x_0_7)) mul relu(x_0_4)))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 0 + 19 + 9 + 172 + 162 + 325 + 315 + 478 + 468 + 631 + 621 + 784 + 774 + 937 + 927", "x2": "add n add sub sqr mul INT+ 3 mod INT+ 4 n add INT- 9 n x_0_2", "tree": "(n add ((((3 mul (4 mod n)))**2 sub (-9 add n)) add x_0_2))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 - 3 - 5 - 9 + 5 - 4 - 4 - 17 - 32 - 39 - 54 - 70 - 102 - 125 - 150 - 176 - 204 - 235 - 267", "x2": "sub idiv sub x_0_5 mul n INT- 5 abs x_0_5 abs mul n sub INT+ 5 n", "tree": "(((x_0_5 sub (n mul -5)) idiv abs(x_0_5)) sub abs((n mul (5 sub n))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 20 + 45 + 80 + 125 + 180 + 245 + 320 + 405 + 500 + 605 + 720 + 845 + 980", "x2": "abs mul add n mul INT+ 4 n n", "tree": "abs(((n add (4 mul n)) mul n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 + 10 + 3 - 8 - 9 - 2 - 7 - 8 - 1 - 6 - 7 + 0 - 5 - 6 + 1 - 4 - 5", "x2": "sub sign sqr sqr relu n abs x_0_3", "tree": "(sign(((relu(n))**2)**2) sub abs(x_0_3))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 5 - 1 + 8 + 24 + 49 + 85 + 134 + 198 + 279 + 379 + 500 + 644 + 813 + 1009 + 1234", "x2": "add sqr n x_0_1", "tree": "((n)**2 add x_0_1)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 9 - 8 - 7 - 6", "x2": "mod n INT- 1 0", "tree": "(n mod -10)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 1 - 3 - 16 - 45 - 96 - 175 - 288 - 441 - 640 - 891 - 1200 - 1573 - 2016 - 2535 - 3136", "x2": "mul sub mul mul mul x_0_2 n relu INT- 2 sign relu x_0_1 n sqr sub INT+ 2 n", "tree": "(((((x_0_2 mul n) mul relu(-2)) mul sign(relu(x_0_1))) sub n) mul ((2 sub n))**2)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 6 + 8 + 11 + 15 + 20 + 26 + 33 + 41 + 50 + 60 + 71 + 83 + 96 + 110 + 125", "x2": "add n abs x_0_1", "tree": "(n add abs(x_0_1))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 8 + 12 - 76 + 17 - 172 + 24 - 308 + 33 - 496 + 44 - 748 + 57 - 1076 + 72 - 1492", "x2": "add mul relu mul INT+ 3 relu x_0_1 INT- 2 add x_0_2 n", "tree": "((relu((3 mul relu(x_0_1))) mul -2) add (x_0_2 add n))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 5 + 0 + 0 - 1 - 1 + 3 + 10 - 5 - 5 - 2 - 2 - 2 + 75 + 30 + 30 + 3 + 3 + 3 + 5470", "x2": "sub sqr add sub INT- 2 x_0_6 mod INT+ 3 mul add n x_0_1 sqr n INT+ 6", "tree": "((((-2 sub x_0_6) add (3 mod ((n add x_0_1) mul (n)**2))))**2 sub 6)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 5 - 1 - 1 - 5 - 6 - 2 - 2 - 5 - 5 - 3 - 3 - 5 - 5 - 3 - 4 - 6", "x2": "idiv sub sub mod n abs n n sign n relu abs x_0_2", "tree": "((((n mod abs(n)) sub n) sub sign(n)) idiv relu(abs(x_0_2)))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 7 + 7 + 10 + 5 - 1 + 13 + 49 + 22 + 4 + 20 + 67 + 674 + 9 + 50 + 1005 + 2 5310 + 2005 + 108 + 1 2381", "x2": "abs sub mul x_0_5 abs sub sign idiv x_0_3 n mod mul INT- 7 x_0_1 x_0_4 n", "tree": "abs(((x_0_5 mul abs((sign((x_0_3 idiv n)) sub ((-7 mul x_0_1) mod x_0_4)))) sub n))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 1 + 7 + 9 - 6 - 11 - 12 + 41 - 14 - 15 + 476 + 557 - 18 + 7121 - 20 + 1 5 + 12 8156 + 14 2397", "x2": "sub n add add n n mod INT+ 5 mul x_0_3 x_0_4", "tree": "(n sub ((n add n) add (5 mod (x_0_3 mul x_0_4))))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 8 + 0 + 4 + 10 + 18 + 28 + 40 + 54 + 70 + 88 + 108 + 130 + 154 + 180 + 208", "x2": "add relu idiv idiv INT- 9 sqr n x_0_2 sub mul n add INT- 2 n n", "tree": "(relu(((-9 idiv (n)**2) idiv x_0_2)) add ((n mul (-2 add n)) sub n))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 4 + 3 + 5 - 7 - 3 - 6 + 10 - 8 + 6 + 4 + 3 + 5 + 29 + 33 + 30 + 10 + 28 + 6 + 4 + 3 + 5 + 29", "x2": "mod mul x_0_9 mod sqr sign x_0_3 add INT+ 9 n sqr INT+ 6", "tree": "((x_0_9 mul ((sign(x_0_3))**2 mod (9 add n))) mod (6)**2)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 2 + 10 - 50 + 250 - 1250 + 6250 - 3 1250 + 15 6250 - 78 1250 + 390 6250 - 1953 1250 + 9765 6250 - 4 8828 1250 + 24 4140 6250 - 122 703 1250", "x2": "mul add sign INT- 8 INT- 4 x_0_1", "tree": "((sign(-8) add -4) mul x_0_1)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 7 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign mul INT- 5 relu x_0_2", "tree": "sign((-5 mul relu(x_0_2)))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 + 2 + 3 + 4 + 5 + 1 + 7 + 1 + 1 + 2 + 3 + 0 + 0 + 0 + 0", "x2": "relu add mod n mul idiv INT+ 8 x_0_1 x_0_1 sub n n", "tree": "relu(((n mod ((8 idiv x_0_1) mul x_0_1)) add (n sub n)))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 8 + 2 - 14 - 22 - 34 - 56 - 70 - 88 - 116 - 136 - 160 - 194 - 220 - 250 - 290 - 322", "x2": "sub x_0_3 mul INT+ 6 n", "tree": "(x_0_3 sub (6 mul n))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 + 2 + 3 - 9 - 3 - 10 - 5 - 5 + 3 + 4 + 11 + 2 + 11 + 5 + 4 + 6 + 4 + 10 + 3 + 11 + 4 + 5", "x2": "sub abs sub sign x_0_8 mul x_0_7 INT+ 1 mod n idiv n INT- 3", "tree": "(abs((sign(x_0_8) sub (x_0_7 mul 1))) sub (n mod (n idiv -3)))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 9 + 11 + 0 + 2 + 0 + 5 + 0 + 3 + 0 + 5 + 0 + 4 + 0 + 5 + 0", "x2": "relu sub abs sub idiv n x_0_2 INT- 2 sub x_0_1 mod idiv n INT+ 8 INT- 1", "tree": "relu((abs(((n idiv x_0_2) sub -2)) sub (x_0_1 sub ((n idiv 8) mod -1))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 3 + 4 + 6 + 1 - 3 - 3 - 3 - 5 - 2 - 4 - 4 - 5 - 3 - 8 - 4 - 5 - 4 - 7", "x2": "idiv n mod x_0_5 sub sign INT+ 1 0 n", "tree": "(n idiv (x_0_5 mod (sign(10) sub n)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 10 + 20 - 60 + 240 - 1200 + 7200 - 5 400 + 40 3200 - 362 8800 + 3628 8000 - 3 9916 8000 + 47 9001 6000 - 622 7020 8000 + 8717 8291 2000 - 13 767 4368 0", "x2": "mul x_0_1 sub relu INT- 1 0 n", "tree": "(x_0_1 mul (relu(-10) sub n))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 6 - 1 + 8 - 1 + 5 + 0 + 0 + 0 + 80 + 0 + 50 + 0 + 0 + 0 + 800 + 0 + 500 + 0 + 0", "x2": "relu mul x_0_6 add abs INT+ 9 INT+ 1", "tree": "relu((x_0_6 mul (abs(9) add 1)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 3 + 3 + 2 + 6 + 0 + 4 + 1 + 0 + 0 + 0 + 4 + 36 + 0 + 0 + 0 + 49 + 0 + 0", "x2": "sqr mod x_0_5 sub INT+ 6 sub n mul relu x_0_2 sign n", "tree": "((x_0_5 mod (6 sub (n sub (relu(x_0_2) mul sign(n))))))**2", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 0 - 7 + 9 + 23 + 21 + 72 + 106 + 556 + 470 + 5215 + 1 1269 + 30 9171 + 22 937 + 2719 6264 + 1 2699 402 + 955 8670 7284 + 488 1315 8014", "x2": "sub add n n sub INT- 9 mul x_0_4 x_0_4", "tree": "((n add n) sub (-9 sub (x_0_4 mul x_0_4)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 - 8 - 4 - 4 - 3 - 4 - 4 - 3 - 4 - 4 - 3 - 4 - 4 - 3 - 4 - 4 - 3", "x2": "sub mod x_0_3 n n", "tree": "((x_0_3 mod n) sub n)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 7 - 9 + 1601 + 1688 + 1764 + 3450 + 3624 + 3789 + 5566 + 5833 + 6093 + 7967 + 8333 + 8694 + 1 671 + 1 1142", "x2": "add abs sqr add n sqr idiv idiv sqr INT- 8 sign INT- 5 INT- 1 0 relu x_0_3", "tree": "(abs(((n add ((((-8)**2 idiv sign(-5)) idiv -10))**2))**2) add relu(x_0_3))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195", "x2": "sub INT+ 1 sqr n", "tree": "(1 sub (n)**2)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 7 - 10 + 10 + 90 + 72 + 49 + 864 + 1539 + 1310 + 1 164 + 2 8980 + 3 7206 + 16 832 + 58 7385 + 105 9232 + 336 6935 + 1346 8230", "x2": "mul add add add relu x_0_3 x_0_4 mod idiv INT+ 1 x_0_3 x_0_3 n n", "tree": "((((relu(x_0_3) add x_0_4) add ((1 idiv x_0_3) mod x_0_3)) add n) mul n)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 4 - 6 + 0 + 6 - 4 + 37 + 0 - 51 + 84 - 56 + 0 - 51 + 84 - 56 + 0 - 51 + 84 - 56", "x2": "mod x_0_4 sub abs mul INT+ 7 sign n mul sqr n sign x_0_1", "tree": "(x_0_4 mod (abs((7 mul sign(n))) sub ((n)**2 mul sign(x_0_1))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 5 + 5 + 0 + 6 + 1 + 10 + 4 + 13 + 6 + 14 + 7 + 14 + 16 + 23 + 25", "x2": "add mod INT+ 9 sub n idiv n INT+ 3 relu x_0_2", "tree": "((9 mod (n sub (n idiv 3))) add relu(x_0_2))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 - 4 + 4 - 3 + 3 + 1 - 1 + 9 - 10 - 37 - 47 - 11 - 10 - 7 - 7 - 12 - 16 - 26 - 14 - 22 - 8 - 8", "x2": "sub INT- 7 abs idiv mul INT+ 5 sub x_0_8 x_0_9 x_0_4", "tree": "(-7 sub abs(((5 mul (x_0_8 sub x_0_9)) idiv x_0_4)))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 6 - 4 - 7 + 96 + 80 + 168 + 2688 + 2560 + 6048 + 10 7520 + 11 2640 + 29 304 + 559 1040 + 630 7840 + 1741 8240 + 3 5782 6560 + 4 2893 3120", "x2": "abs mul x_0_3 mul n sub sign INT- 3 INT+ 3", "tree": "abs((x_0_3 mul (n mul (sign(-3) sub 3))))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 4 + 0 - 2 + 13 + 6 + 11 - 18 - 3 - 12 + 47 + 18 + 37 - 80 - 21 - 58 + 177", "x2": "add n mul idiv INT- 5 INT+ 4 x_0_3", "tree": "(n add ((-5 idiv 4) mul x_0_3))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2", "x2": "idiv INT- 3 add relu idiv sqr abs mod mul INT- 1 0 INT+ 9 INT- 7 n mod n n", "tree": "(-3 idiv (relu(((abs(((-10 mul 9) mod -7)))**2 idiv n)) add (n mod n)))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 5 - 2 - 5 + 10 - 3 + 6 + 2 + 2 + 3 + 4 + 0 + 6 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0", "x2": "mod abs n add INT+ 5 idiv INT- 2 sign add sign idiv INT+ 5 sqr idiv INT- 3 n x_0_7", "tree": "(abs(n) mod (5 add (-2 idiv sign((sign((5 idiv ((-3 idiv n))**2)) add x_0_7)))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 5 - 9 - 12 + 0 - 48 - 7 - 32 - 54 - 20 - 11 - 72 - 78 - 84 - 15 - 96 - 102", "x2": "mul sub INT- 1 relu n mod add sub mod n add INT- 9 INT- 8 INT+ 8 x_0_2 INT+ 1 0", "tree": "((-1 sub relu(n)) mul ((((n mod (-9 add -8)) sub 8) add x_0_2) mod 10))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 7 - 6 - 5 + 7 + 4 + 0 + 0 + 7 + 8 + 0 + 0 + 11 + 9 + 0 + 0 + 3 + 5 + 0", "x2": "mod mul INT- 7 x_0_4 n", "tree": "((-7 mul x_0_4) mod n)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 1 - 3 - 3 - 7 - 2 + 0 - 7 + 5 - 3 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mul x_0_10 x_0_2", "tree": "sign((x_0_10 mul x_0_2))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 3 - 10 - 5 + 1 - 11 - 19 - 21 - 17 - 43 - 55 - 85 - 89 - 171 - 199 - 341 - 377 - 683 - 775", "x2": "sub mul INT+ 3 x_0_4 sub x_0_4 x_0_2", "tree": "((3 mul x_0_4) sub (x_0_4 sub x_0_2))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 6 + 3 + 1 + 2 + 1 + 10 + 274 + 568 + 360 + 813 + 1216 + 1127 + 981 - 899 - 1529 - 2300 - 4895 - 6336 - 8020 - 1 1636", "x2": "add mul sub INT+ 5 mod n x_0_7 sub mul n n n sub x_0_3 n", "tree": "(((5 sub (n mod x_0_7)) mul ((n mul n) sub n)) add (x_0_3 sub n))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 10 - 6 - 1 + 5 + 3 + 0 + 10 + 11 + 15 + 21 + 23 + 8 + 14 + 21 + 20 + 18 + 29 + 31 + 36 + 43 + 46", "x2": "sub abs abs relu sub add n x_0_10 sign INT+ 6 idiv idiv n INT- 7 INT- 7", "tree": "(abs(abs(relu(((n add x_0_10) sub sign(6))))) sub ((n idiv -7) idiv -7))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 9 + 3 + 8 - 7 - 7 + 72 + 102 + 72 + 108 + 24 + 30 + 510 + 696 + 522 + 744 + 246 + 288 + 3174 + 4296", "x2": "relu mul INT+ 6 add x_0_6 n", "tree": "relu((6 mul (x_0_6 add n)))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 8 + 3 + 5 + 10 + 4 + 9 + 25 + 4 + 16 + 81 + 9 + 16 + 9 + 121 + 81 + 0 + 81 + 169", "x2": "sqr mod x_0_4 n", "tree": "((x_0_4 mod n))**2", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 3 + 3 - 10 + 8 + 10 + 6 - 8 + 0 + 6 + 0 + 6 + 12 + 18 + 6 + 6 + 0 + 6 + 0 + 6 + 24 + 42", "x2": "abs mod INT- 6 add mul x_0_8 INT+ 3 INT- 6", "tree": "abs((-6 mod ((x_0_8 mul 3) add -6)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 4 - 1 + 5 + 4 + 8 + 4 + 15 + 12 + 6 + 7 + 3 + 7 + 0 + 0 + 5 + 4 + 8 + 4 + 11 + 11", "x2": "mul relu sub INT+ 6 add x_0_6 INT- 5 INT+ 1", "tree": "(relu((6 sub (x_0_6 add -5))) mul 1)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 4 + 1 + 40 + 10 + 400 + 100 + 4000 + 1000 + 4 0 + 1 0 + 40 0 + 10 0 + 400 0 + 100 0 + 4000 0 + 1000 0", "x2": "relu mul sub mod n n abs x_0_2 INT- 1 0", "tree": "relu((((n mod n) sub abs(x_0_2)) mul -10))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 2 - 7 + 1 + 2 + 9 + 2 + 0 - 9 + 3 + 4 + 17 + 4 + 2 - 7 + 9 + 9", "x2": "sub mod mul x_0_1 idiv INT- 5 sign mod n idiv INT+ 6 n abs n x_0_3", "tree": "(((x_0_1 mul (-5 idiv sign((n mod (6 idiv n))))) mod abs(n)) sub x_0_3)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 - 3 - 5 - 4 - 4 - 6 + 2 - 8 - 2 + 6 - 7 + 0 - 7 - 7 - 7 - 7 + 0 - 7 + 0 + 7 - 7 + 0 - 7 - 7", "x2": "mul idiv add x_0_10 mod INT- 7 INT+ 1 0 INT+ 6 INT+ 7", "tree": "(((x_0_10 add (-7 mod 10)) idiv 6) mul 7)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 3 + 6 - 3 + 1 - 5 + 0 + 10 - 8 - 1 + 8 + 3 + 6 + 3 + 1 + 5 + 0 + 10 + 8 + 1 + 8 + 3 + 6 + 3", "x2": "abs sub add n x_0_10 n", "tree": "abs(((n add x_0_10) sub n))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 2 + 16 - 109 + 767 - 5364 + 3 7554 - 26 2871 + 184 105 - 1288 726 + 9016 5092 - 6 3115 5633 + 44 1808 9443 - 309 2662 6088 + 2164 8638 2630 - 1 5154 467 8395", "x2": "add n add add mul INT- 7 x_0_1 n mul n add INT- 1 sqr idiv idiv x_0_1 x_0_1 sqr x_0_1", "tree": "(n add (((-7 mul x_0_1) add n) add (n mul (-1 add (((x_0_1 idiv x_0_1) idiv (x_0_1)**2))**2))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 6 + 6 + 2 + 10 - 2 - 1 + 17 + 45 + 46 + 15 + 112 + 17 + 15 + 304 + 2041 + 2133 + 243 + 1 2563 + 309 + 246", "x2": "add sqr x_0_7 abs n", "tree": "((x_0_7)**2 add abs(n))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 11 + 10 - 14 + 13 - 17 + 15 - 19 + 17 - 21 + 19 - 23 + 21 - 25 + 23", "x2": "mul sign n sub INT- 3 add idiv sub n INT- 1 0 x_0_1 x_0_1", "tree": "(sign(n) mul (-3 sub (((n sub -10) idiv x_0_1) add x_0_1)))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 8 + 1 + 8 + 6 - 3 - 7 - 2 - 7 - 8 + 8 + 48 - 18 + 21 + 14 + 14 + 56 - 64 + 384 - 864 - 378 + 294 + 196", "x2": "mul x_0_7 x_0_8", "tree": "(x_0_7 mul x_0_8)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4", "x2": "mod n INT- 6", "tree": "(n mod -6)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 + 10 + 0 + 10 + 6 + 1 - 8 - 1 + 3 + 7 + 10 + 0 + 10 + 6 + 1 + 8 + 1 + 3 + 7 + 10 + 0 + 10 + 6", "x2": "abs x_0_9", "tree": "abs(x_0_9)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 10 + 7 + 14 + 11 + 18 + 15 + 22 + 19 + 26 + 23 + 30 + 27 + 34 + 31 + 38", "x2": "add INT+ 4 x_0_2", "tree": "(4 add x_0_2)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 - 10 - 7 + 5 + 34 - 26 - 171 + 131 + 856 - 656 - 4281 + 3281 + 2 1406 - 1 6406 - 10 7031 + 8 2031 + 53 5156 - 41 156", "x2": "add sign add sub x_0_1 x_0_1 mul idiv n n x_0_4 mul INT- 5 x_0_2", "tree": "(sign(((x_0_1 sub x_0_1) add ((n idiv n) mul x_0_4))) add (-5 mul x_0_2))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 8 - 1 + 2 - 2 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1", "x2": "idiv x_0_3 n", "tree": "(x_0_3 idiv n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 - 9 + 2 - 4 - 2 - 2 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0", "x2": "idiv x_0_4 sub abs n add mod x_0_5 sign INT- 5 mod n relu INT+ 6", "tree": "(x_0_4 idiv (abs(n) sub ((x_0_5 mod sign(-5)) add (n mod relu(6)))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 18 + 31 + 45 + 60 + 76 + 93 + 111 + 130 + 150 + 171 + 193 + 216 + 240 + 265", "x2": "add n sub x_0_1 INT- 1 0", "tree": "(n add (x_0_1 sub -10))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 7 + 10 + 5 - 8 - 3 - 7 + 0 - 2 + 2 + 0 + 0 + 0 - 2 + 0 - 2 + 2 + 0 + 2 + 2 - 2", "x2": "add sign x_0_7 sign idiv mod relu x_0_4 x_0_3 mod INT+ 9 n", "tree": "(sign(x_0_7) add sign(((relu(x_0_4) mod x_0_3) idiv (9 mod n))))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 4 - 6 - 9 - 2 + 0 - 5 - 4 - 3 - 6 - 1 + 0 - 5 - 4 - 3 + 0 - 1 + 0", "x2": "mod add relu abs mod n idiv x_0_1 n n sub INT- 1 add INT+ 6 sign mul n x_0_4", "tree": "((relu(abs((n mod (x_0_1 idiv n)))) add n) mod (-1 sub (6 add sign((n mul x_0_4)))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 5 - 1 + 7 - 5 + 9 + 0 + 0 + 7 + 0 + 9 + 0 + 0 + 7 + 0 + 9 + 0 + 0 + 7", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 - 8 + 8 - 8 + 1 - 6 + 3 - 9 + 3 - 28 + 15 - 90 + 84 - 450 + 48 - 2598 + 90 - 7737 + 100", "x2": "mul add INT+ 4 add mod n x_0_2 INT- 3 add relu INT+ 3 mod x_0_5 INT+ 4", "tree": "((4 add ((n mod x_0_2) add -3)) mul (relu(3) add (x_0_5 mod 4)))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 1 + 4 + 10 - 4 + 8 + 0 - 2 - 1 - 1 - 3 + 1 - 2 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv mul x_0_7 sign n INT- 4", "tree": "((x_0_7 mul sign(n)) idiv -4)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 4 + 10 - 81 - 81 - 112 - 145 - 179 - 215 - 253 - 293 - 335 - 379 - 424 - 471 - 519 - 569", "x2": "add idiv mod mod x_0_1 n mul mod INT- 1 x_0_2 add n sqr mul INT- 1 0 n abs x_0_1 x_0_1", "tree": "((((x_0_1 mod n) mod ((-1 mod x_0_2) mul (n add ((-10 mul n))**2))) idiv abs(x_0_1)) add x_0_1)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 - 7 + 4 - 4 + 1 + 2 - 4 - 7 - 5 + 2 + 4 + 4 + 9 + 1 + 2 + 12 + 10 + 13 + 2 + 4 + 4 + 9 + 1", "x2": "mod x_0_9 n", "tree": "(x_0_9 mod n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 4 + 6 + 3 + 7 - 4 + 2 + 2 - 12 + 2 - 19 + 9 - 68 - 26 - 26 - 124 - 26 - 173 + 23 - 516 - 222", "x2": "add idiv mul INT+ 1 INT+ 6 n add INT+ 2 mul add x_0_7 INT- 6 INT+ 7", "tree": "(((1 mul 6) idiv n) add (2 add ((x_0_7 add -6) mul 7)))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 7 - 5 + 4 - 5 - 44 - 39 + 19 - 49 - 405 - 399 + 200 - 597 - 5274 - 5595 + 2991 - 9561 - 8 9667", "x2": "sub mul add sign INT- 8 n x_0_4 INT+ 9", "tree": "(((sign(-8) add n) mul x_0_4) sub 9)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 6 + 3 + 10 + 8 - 8 + 10 + 1 + 1 + 1 + 2 - 1 - 1 + 1 - 1 + 12 + 13 - 21 + 2 - 11 - 10 - 22", "x2": "idiv sub x_0_4 idiv sub add sub x_0_4 add mul x_0_6 sign n x_0_3 n x_0_5 x_0_4 x_0_8", "tree": "((x_0_4 sub ((((x_0_4 sub ((x_0_6 mul sign(n)) add x_0_3)) add n) sub x_0_5) idiv x_0_4)) idiv x_0_8)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 4 - 1 - 3 + 10 - 5 - 7 - 3 + 3 + 6 - 9 + 18 + 3 + 20 + 23 + 20 + 15 + 13 + 29 + 3 + 26 + 4 + 2 + 25 + 15", "x2": "sub n add INT- 9 sub x_0_8 sub idiv mod sub x_0_4 relu x_0_5 n add sub x_0_2 x_0_9 x_0_10 INT+ 7", "tree": "(n sub (-9 add (x_0_8 sub ((((x_0_4 sub relu(x_0_5)) mod n) idiv ((x_0_2 sub x_0_9) add x_0_10)) sub 7))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 10 + 2 + 8 - 8 - 1 + 8 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 0", "x2": "mod sub x_0_7 sub relu idiv mod x_0_6 INT+ 1 sign add mul relu INT+ 8 INT+ 7 x_0_3 INT+ 7 INT+ 2", "tree": "((x_0_7 sub (relu(((x_0_6 mod 1) idiv sign(((relu(8) mul 7) add x_0_3)))) sub 7)) mod 2)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 2 - 5 - 10 + 3 + 1 + 1 + 4 + 25 + 100 + 9 + 1 + 1 + 16 + 625 + 1 0 + 81 + 1 + 1 + 256", "x2": "add mod abs mod sub mod INT+ 2 INT- 7 INT- 2 mod INT- 2 INT+ 4 sign n sqr x_0_6", "tree": "((abs((((2 mod -7) sub -2) mod (-2 mod 4))) mod sign(n)) add (x_0_6)**2)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 + 10 + 4 + 5 + 30 4200 + 54 7560 + 29 8116 + 56 4480 + 434 6531 2800 + 965 8958 4000 + 636 3107 1504 + 1433 8695 1680 + 1 2957 7051 9068 4800 + 3 3395 2691 3049 6000 + 2 8991 9069 5401 0 + 7 4331 7957 5091 2000 + 75 8317 3020 2185 1208 0 + 219 1063 6076 5184 2560 0", "x2": "abs mul x_0_4 sqr mul mul abs INT- 3 n add INT+ 6 sub INT+ 6 idiv n mod INT+ 1 INT- 8", "tree": "abs((x_0_4 mul (((abs(-3) mul n) mul (6 add (6 sub (n idiv (1 mod -8))))))**2))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 5 + 8 - 4 - 3 - 6 + 8 + 40 + 54 + 39 + 8 + 40 + 54 + 39 + 8 + 40 + 54 + 39 + 8 + 40 + 54 + 39 + 8 + 40 + 54", "x2": "mod x_0_4 add x_0_6 sqr sub n mod n INT+ 7", "tree": "(x_0_4 mod (x_0_6 add ((n sub (n mod 7)))**2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 5 - 7 + 4 - 5 - 6 - 7 + 0 - 9 + 0 - 11 + 0 - 13 + 0 - 15 + 0 - 17 + 0 - 19 + 0 - 21 + 0 - 23", "x2": "mul n mod x_0_4 INT- 2", "tree": "(n mul (x_0_4 mod -2))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 4 + 10 - 2 + 23 + 12 + 41 + 22 + 74 + 48 + 127 + 89 + 216 + 164 + 364 + 292 + 612 + 516 + 1026 + 904 + 1720 + 1575 + 2884", "x2": "add add INT+ 8 sub x_0_4 idiv x_0_3 add INT- 1 INT- 6 x_0_2", "tree": "((8 add (x_0_4 sub (x_0_3 idiv (-1 add -6)))) add x_0_2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 9 + 0 + 5 - 10 - 1 + 4 - 11 - 2 + 3 - 12 - 3 + 2 - 13 - 4 + 1 - 14 - 5 + 0 - 15 - 6 - 1", "x2": "sub x_0_3 sign n", "tree": "(x_0_3 sub sign(n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 3 + 10 + 7 - 5 - 4 - 8 - 4 - 6 - 13 - 14 - 12 - 15 - 15 - 24 - 27 - 27 - 32 - 19 - 38 - 43 - 45 - 52 - 41", "x2": "sub mod mod sub INT+ 5 n INT+ 7 x_0_5 n", "tree": "((((5 sub n) mod 7) mod x_0_5) sub n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 2 - 8 + 6 + 20 + 16 + 14 + 32 + 50 + 50 + 52 + 74 + 96 + 100 + 106 + 132 + 158 + 166 + 176 + 206 + 236", "x2": "sub mod INT- 8 abs mul n n add n x_0_2", "tree": "((-8 mod abs((n mul n))) sub (n add x_0_2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 3 + 8 - 7 + 1 + 10 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1", "x2": "idiv sign x_0_6 sign INT+ 6", "tree": "(sign(x_0_6) idiv sign(6))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 3 - 16 - 9 - 4 - 23 - 38 - 33 - 34 - 57 - 76 - 75 - 80 - 107 - 130 - 133 - 142 - 173 - 200 - 207 - 220", "x2": "sub sub sub n sub abs sub sign add x_0_1 n INT- 1 sub x_0_1 sqr n x_0_1 x_0_2", "tree": "(((n sub (abs((sign((x_0_1 add n)) sub -1)) sub (x_0_1 sub (n)**2))) sub x_0_1) sub x_0_2)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 - 4 - 10 + 1 + 6 + 4096 + 4096 + 4096 + 4096 + 4096 + 4096 + 3781 + 3804 + 3823 + 3840 + 3856 + 3869 + 3897 + 3906 + 3914 + 3922 + 3929 + 3935 + 3941", "x2": "sub sqr sub mul INT- 9 INT+ 7 sign n idiv abs relu x_0_6 n", "tree": "((((-9 mul 7) sub sign(n)))**2 sub (abs(relu(x_0_6)) idiv n))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 10 - 4 + 3 + 9 - 20 - 12 + 9 + 18 - 40 - 36 + 27 + 36 - 80 - 108 + 81 + 72 - 160 - 324 + 243 + 144 - 320 - 972", "x2": "mul sub sub idiv INT- 6 x_0_1 INT- 1 INT- 2 x_0_4", "tree": "((((-6 idiv x_0_1) sub -1) sub -2) mul x_0_4)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 - 18 - 72 - 360 - 2160 - 1 5120 - 12 960 - 108 8640 - 1088 6400 - 1 1975 400 - 14 3700 4800 - 186 8106 2400 - 2615 3487 3600 - 3 9230 2310 4000 - 62 7683 6966 4000 - 1067 622 8428 8000 - 1 9207 1211 1718 4000 - 36 4935 3012 2649 6000 - 729 8706 245 2992 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 4 + 4 + 4 + 4 + 16 + 16 + 16 + 16 + 16 + 36 + 36 + 36 + 36 + 36 + 64 + 64 + 64 + 64", "x2": "mul sqr idiv n INT- 5 INT+ 4", "tree": "(((n idiv -5))**2 mul 4)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 4 + 9 + 40 + 71 + 110 + 181 + 282 + 395 + 528 + 705 + 924 + 1167 + 1442 + 1773 + 2158 + 2579 + 3044 + 3577 + 4176 + 4823", "x2": "sub mul n sqr abs mod INT- 1 n x_0_2", "tree": "((n mul (abs((-1 mod n)))**2) sub x_0_2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 1 - 8 + 240 + 64 - 144 + 4080 + 1264 - 4368 + 6 5520 + 2 464 - 13 9536 + 104 8560 + 32 7664 - 446 4912 + 1677 7200 + 524 2864 - 1 4287 6944 + 2 6843 5440 + 8388 6064 - 45 7206 1968 + 42 9496 7280", "x2": "mul sqr INT+ 4 add add INT+ 5 x_0_3 mod INT+ 1 0 x_0_3", "tree": "((4)**2 mul ((5 add x_0_3) add (10 mod x_0_3)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 8 + 1 + 0 + 16 + 9 + 4 + 1 + 0 + 16 + 9 + 4 + 1 + 0 + 16 + 9 + 4 + 1 + 0 + 16 + 9", "x2": "sqr mod sub sub INT+ 8 mod mul n x_0_1 n sub n INT+ 1 0 abs INT- 5", "tree": "((((8 sub ((n mul x_0_1) mod n)) sub (n sub 10)) mod abs(-5)))**2", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 5 + 5 - 6 + 3 - 9 + 0 - 9 - 1 + 9 + 2966 + 0 + 4205 + 0 + 7283 + 3 + 8275 + 3942 + 0 + 0 + 4 + 0 + 7 + 0 + 0 + 0 + 0 + 8", "x2": "relu add x_0_7 add add mul mul INT- 6 n mul x_0_9 INT+ 9 INT+ 3 sign add x_0_7 INT+ 4", "tree": "relu((x_0_7 add ((((-6 mul n) mul (x_0_9 mul 9)) add 3) add sign((x_0_7 add 4)))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 1 - 5 + 1 + 5 + 2 + 7 - 8 - 9 - 10 - 11 - 12 + 13 - 14 - 15 - 16 - 17 - 18 + 19 - 20 - 21 - 22 - 23 - 24 + 25", "x2": "idiv n sign add INT- 6 x_0_6", "tree": "(n idiv sign((-6 add x_0_6)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 6 - 2 - 10 - 5 - 2 - 2 + 0 + 3 - 8 + 4 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "relu abs sqr mul n sign sign x_0_10", "tree": "relu(abs(((n mul sign(sign(x_0_10))))**2))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 9 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr relu abs add mod sub abs INT- 7 sign idiv INT- 1 0 x_0_2 INT+ 4 relu n", "tree": "(relu(abs((((abs(-7) sub sign((-10 idiv x_0_2))) mod 4) add relu(n)))))**2", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 9 + 0 - 5 - 6 - 2 + 3 + 3 + 3 + 3 + 3 + 0 + 0 + 0 + 0 + 0 + 3 + 3 + 3 + 3 + 3 + 0 + 0 + 0 + 0", "x2": "sub abs abs INT- 3 relu x_0_5", "tree": "(abs(abs(-3)) sub relu(x_0_5))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 4 - 1 - 15 - 9 - 12 + 2 - 4 - 1 - 15 - 9 - 12 + 2 - 4 - 1 - 15 - 9 - 12 + 2 - 4 - 1 - 15", "x2": "sub INT- 1 0 sub x_0_3 mod INT+ 5 INT- 4", "tree": "(-10 sub (x_0_3 sub (5 mod -4)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 4 - 5 - 4 - 6 - 5 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign idiv n x_0_6", "tree": "sign((n idiv x_0_6))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 5 + 3 - 3 - 1 - 3 + 50 + 12 - 6 + 2 + 6 - 200 + 612 - 66 - 10 + 18 - 1000 - 12 1788 - 4 458 + 650 - 198 - 1 9000 + 1 2166 6212 + 49 2733 9362 - 2629 8350", "x2": "mul sub x_0_6 sign x_0_1 x_0_5", "tree": "((x_0_6 sub sign(x_0_1)) mul x_0_5)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 8 + 3 + 0 + 3 + 4 + 4 + 9 + 4 + 1 + 4 + 5 + 5 + 10 + 5 + 2 + 5 + 6 + 6 + 11 + 6 + 3 + 6 + 7 + 7", "x2": "add x_0_6 sign abs INT+ 8", "tree": "(x_0_6 add sign(abs(8)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 32 + 96 + 192 + 320 + 480 + 672 + 896 + 1152 + 1440 + 1760 + 2112 + 2496 + 2912 + 3360 + 3840 + 4352 + 4896 + 5472", "x2": "mul relu sqr INT- 4 sub mul n n n", "tree": "(relu((-4)**2) mul ((n mul n) sub n))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 - 7 - 4 + 1 + 8 + 17 + 28 + 41 + 56 + 73 + 92 + 113 + 136 + 161 + 188 + 217 + 248 + 281 + 316", "x2": "add INT- 8 sqr mod INT- 1 n", "tree": "(-8 add ((-1 mod n))**2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 2 + 110 - 7924 + 71 2928 - 7698 392 + 96 9810 3516 - 1 3963 7294 5544 + 226 1930 2097 1068 - 4 711 9510 2890 1184 + 806 513 9176 8049 2260 - 17 4098 9582 3169 2852 5832 + 4073 7544 1234 3259 1406 124 - 102 6551 2921 1885 4964 8609 9632 + 2 7716 701 3632 6615 3994 1878 340 - 798 2022 8890 364 1464 396 3653 8712 + 24 4244 3571 8948 4163 4765 3299 4328 5132 - 7913 3575 3248 1506 8238 1038 8223 5130 5408 + 270 6319 4272 3723 7436 9104 5746 5842 5987 9204 - 9 7425 9167 903 4051 4274 1170 6692 6888 5390 2696 + 3682 6455 2521 2942 3992 742 4303 8343 2182 5546 604", "x2": "mul INT+ 2 sub sub sub INT+ 4 mul sub x_0_1 mul INT- 8 x_0_1 n add x_0_2 sub n mod x_0_1 x_0_1 n", "tree": "(2 mul (((4 sub ((x_0_1 sub (-8 mul x_0_1)) mul n)) sub (x_0_2 add (n sub (x_0_1 mod x_0_1)))) sub n))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 16 + 576 + 1024 + 1600 + 2304 + 3136 + 4096 + 5184 + 6400 + 7744 + 9216 + 1 816 + 1 2544 + 1 4400 + 1 6384 + 1 8496 + 2 736 + 2 3104", "x2": "sqr add mul mod INT+ 7 mul add n relu abs INT+ 1 n n n", "tree": "((((7 mod ((n add relu(abs(1))) mul n)) mul n) add n))**2", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 7 - 4 + 4 + 0 + 0 - 1 - 6 + 7 + 8 - 7 - 4 + 4 + 0 + 0 - 1 - 6 + 7 + 8 - 7 - 4 + 4 + 0 + 0 - 1 - 6 + 7 + 8", "x2": "sub x_0_9 sub sub sign INT+ 1 0 INT- 3 INT+ 4", "tree": "(x_0_9 sub ((sign(10) sub -3) sub 4))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 3 - 6 + 204 - 70 - 174 + 7147 - 2792 - 7821 + 35 7360 - 15 3549 - 46 9248 + 2322 8413 - 1074 8416 - 3519 3585 + 18 5827 3056 - 9 1361 5343 - 31 6742 2632 + 1765 3594 339 - 913 6153 4280 - 3325 7937 6339 + 19 4189 5343 7312", "x2": "mul n add sign sqr n add x_0_3 mul x_0_3 sub n sub n INT+ 4", "tree": "(n mul (sign((n)**2) add (x_0_3 add (x_0_3 mul (n sub (n sub 4))))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 5 + 1 + 8 - 4 + 9 + 7 + 1 - 124 + 183 - 369 + 247 - 70 + 70 + 224 - 1205 + 2210 + 8510 + 3 6788 - 6 6623 + 12 9128 + 18 9812 + 161 8435 - 2456 1970 + 1 4670 6055 + 3 4505 3783 + 588 1044 2577", "x2": "sub mul add INT- 3 abs mod x_0_4 x_0_8 add add x_0_4 mul INT+ 4 n n x_0_1", "tree": "(((-3 add abs((x_0_4 mod x_0_8))) mul ((x_0_4 add (4 mul n)) add n)) sub x_0_1)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 8 - 6 - 3 + 1 + 6 + 12 + 19 + 27 + 36 + 46 + 57 + 69 + 82 + 96 + 111 + 127 + 144 + 162 + 181 + 201", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 4 - 1 - 4 - 1 - 7 - 11 - 9 - 16 - 21 - 20 - 28 - 34 - 34 - 43 - 50 - 51 - 61 - 69 - 71 - 82 - 91", "x2": "sub x_0_3 n", "tree": "(x_0_3 sub n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 + 6 + 13 + 4 + 18 + 27 + 20 + 36 + 47 + 42 + 60 + 73 + 70 + 90 + 105 + 104 + 126 + 143 + 144 + 168 + 187", "x2": "add mul n sub relu INT+ 1 0 abs INT- 8 x_0_3", "tree": "((n mul (relu(10) sub abs(-8))) add x_0_3)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 5 - 3 + 5 - 8 + 2 - 7 - 9 - 10 + 6 + 10 + 0 + 3 + 6 + 8 + 11 + 15 + 0 + 4 + 8 + 13 + 15 + 20 + 1 + 6 + 11 + 16 + 19 + 25", "x2": "mod relu abs idiv add sqr relu n relu x_0_10 INT- 6 n", "tree": "(relu(abs((((relu(n))**2 add relu(x_0_10)) idiv -6))) mod n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 10 - 6 - 4 - 9 - 10 - 6 - 12 - 15 - 14 - 6 - 12 - 21 - 14 - 6 - 12 - 27 - 22 - 6 - 12 - 33 - 26 - 6 - 12", "x2": "sub x_0_4 mod mul x_0_4 mul add mod sub n INT- 1 0 idiv n INT- 1 mul n INT- 3 x_0_4 add INT+ 1 0 INT+ 2", "tree": "(x_0_4 sub ((x_0_4 mul ((((n sub -10) mod (n idiv -1)) add (n mul -3)) mul x_0_4)) mod (10 add 2)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 5 - 10 - 30 - 120 - 600 - 3600 - 2 5200 - 20 1600 - 181 4400 - 1814 4000 - 1 9958 4000 - 23 9500 8000 - 311 3510 4000 - 4358 9145 6000 - 6 5383 7184 0 - 104 6139 4944 0 - 1778 4371 4048 0 - 3 2011 8685 2864 0 - 60 8225 5020 4416 0 - 1216 4510 408 8320 0", "x2": "mul idiv n sign add n sqr relu n x_0_1", "tree": "((n idiv sign((n add (relu(n))**2))) mul x_0_1)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr sub sign INT+ 7 n", "tree": "((sign(7) sub n))**2", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 5 + 5 + 5 + 0 + 0 + 5 + 5 + 5 + 5 + 0 + 0 + 5 + 5 + 5 + 5 + 0 + 0 + 5", "x2": "mod relu mul mul idiv INT- 1 n INT- 5 add INT+ 5 mod INT- 4 mod n INT+ 6 INT+ 1 0", "tree": "(relu((((-1 idiv n) mul -5) mul (5 add (-4 mod (n mod 6))))) mod 10)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 6 + 10 - 9 - 4 + 36 - 60 + 54 + 24 - 216 + 360 - 324 - 144 + 1296 - 2160 + 1944 + 864 - 7776 + 1 2960 - 1 1664 - 5184 + 4 6656 - 7 7760 + 6 9984", "x2": "mul add INT- 6 relu idiv INT- 4 n x_0_4", "tree": "((-6 add relu((-4 idiv n))) mul x_0_4)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 8 + 2 + 6 - 2 - 7 - 8 - 21 - 24 - 37 - 54 - 63 - 67 - 70 - 60 - 47 - 21 + 22 + 74 + 130 + 189 + 238 + 274 + 284 + 251 + 166", "x2": "sub x_0_1 sub add x_0_7 sub sign relu mul INT+ 2 mul x_0_7 sign INT- 2 INT- 1 INT- 9", "tree": "(x_0_1 sub ((x_0_7 add (sign(relu((2 mul (x_0_7 mul sign(-2))))) sub -1)) sub -9))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 8 + 1 - 6 - 12 + 48 - 6 + 36 + 72 - 288 + 36 - 216 - 432 + 1728 - 216 + 1296 + 2592 - 1 368 + 1296 - 7776 - 1 5552 + 6 2208 - 7776", "x2": "mul add INT+ 2 INT- 8 x_0_4", "tree": "((2 add -8) mul x_0_4)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 3 + 6 - 1 - 1 + 10 + 14 - 1 - 4 + 31 + 57 - 18 - 40 + 249 + 853 - 143 - 436 + 1 5599 + 18 2144 - 1 431 - 13 4599 + 6083 954 + 82 9424 3806", "x2": "add n sub mul x_0_4 idiv x_0_4 relu INT+ 4 x_0_2", "tree": "(n add ((x_0_4 mul (x_0_4 idiv relu(4))) sub x_0_2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 7 - 7 + 8 - 1 + 2 - 12 + 3 - 6 - 3 - 17 - 2 - 11 - 8 - 22 - 7 - 16 - 13 - 27 - 12 - 21 - 18 - 32", "x2": "sub x_0_4 INT+ 5", "tree": "(x_0_4 sub 5)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 2 - 7 + 1 - 4 + 10 - 9 - 6 + 9 - 1900 - 1936 - 3024 - 4394 - 4116 - 5400 - 6400 - 7225 - 8748 - 1 108 - 1 1600 - 1 3230 - 1 5004 - 1 6928 - 1 9008 - 2 1250 - 2 3660 - 2 6244 - 2 9008", "x2": "mul mul sub INT- 9 add mod x_0_6 idiv relu n x_0_9 n n n", "tree": "(((-9 sub ((x_0_6 mod (relu(n) idiv x_0_9)) add n)) mul n) mul n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 1 - 9 + 6 + 1 + 9 + 6 + 1 + 9 + 6 + 1 + 9 + 6 + 1 + 9 + 6 + 1 + 9 + 6 + 1 + 9 + 6 + 1", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 13 + 18 + 25 + 34 + 45 + 58 + 73 + 90 + 109 + 130 + 153 + 178 + 205 + 234 + 265 + 298 + 333 + 370", "x2": "sub sqr n INT- 9", "tree": "((n)**2 sub -9)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 9 - 60 - 55 - 70 - 90 - 65 - 235 - 415 + 75 + 515 - 970 - 3285 + 305 + 1 2995 - 1065 - 6 1975 + 365 + 30 5265 - 4825 - 150 5485", "x2": "mul add mod x_0_1 sub sqr n sub mul INT- 9 n add x_0_2 abs INT- 6 n INT- 5", "tree": "(((x_0_1 mod ((n)**2 sub ((-9 mul n) sub (x_0_2 add abs(-6))))) add n) mul -5)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321", "x2": "sqr sqr relu n", "tree": "((relu(n))**2)**2", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 6 - 10 - 3 - 1 - 2 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign sub x_0_6 mul x_0_4 n", "tree": "sign((x_0_6 sub (x_0_4 mul n)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 9 - 3 - 3 + 2 + 2 + 3 + 5 + 2 + 2 + 3 + 5 + 2 + 2 + 3 + 5 + 2 + 2 + 3 + 5 + 2 + 2 + 3", "x2": "relu add idiv idiv x_0_3 abs x_0_4 n mod x_0_4 n", "tree": "relu((((x_0_3 idiv abs(x_0_4)) idiv n) add (x_0_4 mod n)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 8 + 3 + 30 + 0 - 60 + 0 + 90 + 0 - 100 + 0 + 100 + 0 - 70 + 0 + 50 + 0 - 20 + 0 + 20 + 0 + 0", "x2": "mul idiv x_0_2 n INT- 1 0", "tree": "((x_0_2 idiv n) mul -10)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 + 9 + 10 - 2 + 1 - 3 + 9 + 12 + 18 + 9 + 9 + 9 + 9 + 18 + 18 + 9 + 9 + 9 + 9 + 18 + 18 + 9 + 9 + 9 + 9", "x2": "add INT+ 9 mod abs x_0_2 x_0_6", "tree": "(9 add (abs(x_0_2) mod x_0_6))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 8 + 2 + 1 + 6 + 3 + 6 + 1 + 0 + 4 + 0 + 40 + 0 + 480 + 0 + 3840 + 0 + 3 8400 + 0 + 46 800 + 0 + 645 1200 + 0 + 1 321 9200 + 0 + 18 5794 5600 + 0", "x2": "mul relu sub n abs sub n relu add sub INT+ 7 x_0_7 mul n sign n x_0_2", "tree": "(relu((n sub abs((n sub relu(((7 sub x_0_7) add (n mul sign(n)))))))) mul x_0_2)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 7 + 7 + 8 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3 + 0", "x2": "relu mod INT+ 3 mul abs n x_0_3", "tree": "relu((3 mod (abs(n) mul x_0_3)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 - 6 - 7 - 1 - 9 + 5 - 1 + 7 - 1 - 1 + 7 + 8 - 10 + 70 + 80 - 100 + 700 + 800 - 1000 + 7000 + 8000 - 1 0 + 7 0 + 8 0 - 10 0 + 70 0 + 80 0 - 100 0 + 700 0 + 800 0 - 1000 0", "x2": "mul x_0_3 sub INT+ 1 0 relu idiv sign x_0_10 mul sqr INT+ 7 x_0_12", "tree": "(x_0_3 mul (10 sub relu((sign(x_0_10) idiv ((7)**2 mul x_0_12)))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "- 7 + 10 + 6 - 1 - 6 + 11 + 7 + 0 - 5 + 12 + 8 + 1 - 4 + 13 + 9 + 2 - 3 + 14 + 10 + 3 - 2 + 15 + 11", "x2": "add mod sign n INT+ 7 x_0_4", "tree": "((sign(n) mod 7) add x_0_4)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 10 + 7 - 1 + 2 + 6 - 9 + 7 - 3 - 7 - 16 - 11 - 18 - 7 - 8 - 14 + 0 + 13 + 33 + 30 + 33 + 12 + 20 + 18 - 23 - 69 - 106 - 133", "x2": "sub INT- 1 0 add x_0_7 mul x_0_8 idiv n abs INT+ 9", "tree": "(-10 sub (x_0_7 add (x_0_8 mul (n idiv abs(9)))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444", "x2": "sqr mul n INT- 2", "tree": "((n mul -2))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 0 - 10 - 6 - 11 + 0 + 6 + 14 + 26 + 24 + 31 + 22 + 18 + 12 + 2 + 6 + 1 + 12 + 18 + 26 + 38 + 36 + 43", "x2": "sub add x_0_2 n x_0_4", "tree": "((x_0_2 add n) sub x_0_4)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 9 - 1 - 1 - 5 - 6 - 2 - 2 - 5 - 5 - 3 - 3 - 5 - 5 - 3 - 4 - 6 - 5 - 4 - 4 - 6", "x2": "mul sign sqr sign mul x_0_1 INT+ 1 0 idiv n x_0_2", "tree": "(sign((sign((x_0_1 mul 10)))**2) mul (n idiv x_0_2))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 14 - 19 - 26 - 35 - 46 - 59 - 74 - 91 - 110 - 131 - 154 - 179 - 206 - 235 - 266 - 299 - 334 - 371 - 410", "x2": "idiv add INT+ 1 0 sqr n sign sub x_0_1 INT+ 4", "tree": "((10 add (n)**2) idiv sign((x_0_1 sub 4)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 5 + 8 - 6 + 3 - 81 + 79 - 61 + 19 - 2411 + 222 - 2015 - 1255 - 10 5732 - 9 5372 - 19 6122 - 26 3056 - 625 4536 - 1197 6856 - 2439 7916 - 4193 4983 - 4 7975 2503 - 13 5805 5277 - 32 2856 2171", "x2": "add idiv mul mul INT+ 1 0 x_0_4 n INT+ 3 x_0_1", "tree": "((((10 mul x_0_4) mul n) idiv 3) add x_0_1)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576", "x2": "add x_0_1 sub x_0_1 mod mod n mod n sqr sqr x_0_1 add x_0_2 x_0_2", "tree": "(x_0_1 add (x_0_1 sub ((n mod (n mod ((x_0_1)**2)**2)) mod (x_0_2 add x_0_2))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 2 + 7 - 2 + 10 + 1 + 4 - 4 - 8 + 2 - 4 + 6 - 10 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1", "x2": "add sign x_0_12 mod sign add n sub x_0_9 relu add n sub x_0_12 INT- 8 sign x_0_11", "tree": "(sign(x_0_12) add (sign((n add (x_0_9 sub relu((n add (x_0_12 sub -8)))))) mod sign(x_0_11)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign mul n sqr sub idiv sqr x_0_1 mod abs n INT+ 5 INT+ 1 0", "tree": "sign((n mul ((((x_0_1)**2 idiv (abs(n) mod 5)) sub 10))**2))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 4 + 6 + 7 + 5 + 0 - 10 + 3 + 53 + 20 + 40 + 53 + 29 + 4 + 104 + 13 + 2813 + 404 + 1604 + 2813 + 845 + 20 + 1 820 + 173 + 791 2973 + 16 3220 + 257 2820", "x2": "add mul relu INT+ 2 INT+ 2 abs sqr x_0_8", "tree": "((relu(2) mul 2) add abs((x_0_8)**2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 6 + 5 + 1 - 2 - 4 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sub sub n sign x_0_5 n", "tree": "((n sub sign(x_0_5)) sub n)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 5 + 9 - 14 + 23 - 37 + 60 - 97 + 157 - 254 + 411 - 665 + 1076 - 1741 + 2817 - 4558 + 7375 - 1 1933 + 1 9308 - 3 1241 + 5 549 - 8 1790", "x2": "sub x_0_2 x_0_1", "tree": "(x_0_2 sub x_0_1)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 9 - 6 + 12 + 5 + 6 + 19 + 13 + 15 + 29 + 24 + 27 + 42 + 38 + 42 + 58 + 55 + 60 + 77 + 75 + 81 + 99", "x2": "add relu abs n relu x_0_3", "tree": "(relu(abs(n)) add relu(x_0_3))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 8 + 1 - 6 + 10 + 10 + 2 - 8 + 6 + 10 + 11 + 12 + 6 + 14 + 15 + 26 + 19 + 22 + 25 + 30 + 32 + 34 + 29 + 38 + 40 + 52 + 46 + 50 + 54", "x2": "add mod x_0_10 x_0_5 mod n sqr INT- 9", "tree": "((x_0_10 mod x_0_5) add (n mod (-9)**2))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 18 + 54 + 162 + 486 + 1458 + 4374 + 1 3122 + 3 9366 + 11 8098 + 35 4294 + 106 2882 + 318 8646 + 956 5938 + 2869 7814 + 8609 3442 + 2 5828 326 + 7 7484 978 + 23 2452 2934 + 69 7356 8802", "x2": "mul x_0_1 sub INT+ 7 add INT+ 5 sign sub INT- 2 sub mod x_0_1 abs mul INT- 8 n INT+ 2", "tree": "(x_0_1 mul (7 sub (5 add sign((-2 sub ((x_0_1 mod abs((-8 mul n))) sub 2))))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 - 2 - 4 + 3 - 3 + 6 - 9 - 8 - 7 + 8 + 10 + 2 + 0 + 7 + 1 + 10 + 5 + 4 + 3 + 12 + 14 + 6 + 4 + 11 + 5 + 14 + 9 + 8", "x2": "abs sub INT- 4 x_0_10", "tree": "abs((-4 sub x_0_10))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 2 + 2 + 4 - 6 + 2 + 5 + 4 + 2 - 10 + 8 + 3 - 1 - 2 - 12 + 18 - 5 - 4 - 1 - 10 + 30 - 23 + 1 + 3 - 9 + 40", "x2": "add sub idiv n mul n n x_0_6 x_0_5", "tree": "(((n idiv (n mul n)) sub x_0_6) add x_0_5)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 4 + 3 - 6 - 6 + 9 - 441 + 256 - 243 + 600 + 726 - 1296 + 7 4529 - 5 176 + 5 4675 - 15 3600 - 20 9814 + 41 9904 - 2690 4969 + 2007 400 - 2411 1675 + 7434 2400 + 1 1099 1606 - 2 4186 4704 + 168 1560 5625", "x2": "mul mul x_0_6 n mul n sub n add n sign idiv relu x_0_4 n", "tree": "((x_0_6 mul n) mul (n mul (n sub (n add sign((relu(x_0_4) idiv n))))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 6 + 7 - 2 + 7 - 7 - 9 + 2 + 0 + 0 + 2 + 0 + 0 + 3 + 0 + 0 + 4 + 0 + 0 + 5 + 0 + 0 + 8 + 0 + 0 + 10", "x2": "relu add relu relu x_0_3 mod INT+ 7 x_0_6", "tree": "relu((relu(relu(x_0_3)) add (7 mod x_0_6)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 5 + 1 + 5 9539 + 1372 + 1 3 + 5 9539 + 12 3907 + 9 9859 + 12 3907 + 15 547 + 17 9779 + 21 1603 + 24 6019 + 28 3027 + 32 2627 + 36 4819 + 40 9603 + 45 6979 + 50 6947 + 55 9507 + 61 4659", "x2": "sub sqr add mul mul INT+ 9 mod add sign x_0_2 relu x_0_3 INT+ 8 n INT- 8 INT- 3", "tree": "(((((9 mul ((sign(x_0_2) add relu(x_0_3)) mod 8)) mul n) add -8))**2 sub -3)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 1 + 10 - 10 + 0 + 30 + 7 + 80 + 0 + 0 + 330 + 84 + 1040 + 0 + 0 + 5280 + 1428 + 1 8720 + 0 + 0 + 11 880 + 3 1416 + 43 560 + 0", "x2": "mul relu x_0_5 n", "tree": "(relu(x_0_5) mul n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 2 + 5 + 1 + 4 - 9 + 11 + 3 + 51 + 3 + 2 + 2 + 6 + 2 + 6 + 11 + 11 + 3 + 11 + 3 + 2 + 2 + 6 + 2 + 6", "x2": "add INT+ 1 add idiv n n sqr idiv INT+ 7 abs x_0_5", "tree": "(1 add ((n idiv n) add ((7 idiv abs(x_0_5)))**2))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 6 + 2 - 7 + 4 - 21 + 6 - 43 + 8 - 73 + 10 - 111 + 12 - 157 + 14 - 211 + 16 - 273 + 18 - 343 + 20", "x2": "mod n sub add INT- 1 n add mul n x_0_1 add n n", "tree": "(n mod ((-1 add n) sub ((n mul x_0_1) add (n add n))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 3 - 9 - 1 + 10 - 1 + 111 + 159 - 3 - 23 + 197 + 173 + 3059 + 7511 + 7421 + 6685 + 1 3383 + 1 9611 + 13 5853 + 43 6293 + 74 7975 + 104 2115 + 165 7733 + 259 9061 + 939 1711", "x2": "add mul add n add relu n mod n sqr idiv x_0_5 x_0_5 x_0_6 x_0_1", "tree": "(((n add (relu(n) add (n mod ((x_0_5 idiv x_0_5))**2))) mul x_0_6) add x_0_1)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 10 - 8 - 5 - 1 + 4 + 10 + 17 + 25 + 34 + 44 + 55 + 67 + 80 + 94 + 109 + 125 + 142 + 160 + 179 + 199", "x2": "add sqr mod relu mod x_0_1 INT+ 1 n add x_0_1 n", "tree": "(((relu((x_0_1 mod 1)) mod n))**2 add (x_0_1 add n))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 22 + 9 - 21 + 8 - 20 + 7 - 18 + 5 - 16 + 3 - 12 - 1 - 24 + 11 - 22 + 9 - 20 + 7 - 17", "x2": "sub sub idiv sub mod INT- 1 n add add x_0_1 x_0_1 x_0_1 x_0_1 x_0_1 INT+ 9", "tree": "(((((-1 mod n) sub ((x_0_1 add x_0_1) add x_0_1)) idiv x_0_1) sub x_0_1) sub 9)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 - 10 - 150 - 3000 - 7 5000 - 225 0 - 7875 0 - 31 5000 0 - 1417 5000 0 - 7 875 0 0 - 389 8125 0 0 - 2 3388 7500 0 0 - 152 268 7500 0 0 - 1 641 8812 5000 0 0 - 79 8141 937 5000 0 0 - 6385 1287 5000 0 0 0 - 54 2735 9437 5000 0 0 0 - 4884 6234 9375 0 0 0 0 - 46 4039 2319 625 0 0 0 0 - 4640 3923 1906 2500 0 0 0 0", "x2": "mul mul n INT+ 5 x_0_1", "tree": "((n mul 5) mul x_0_1)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 2 + 4 - 7 + 3 + 12 + 10 + 8 + 7 + 0 + 4 + 8 + 11 + 20 + 18 + 8 + 7 + 0 + 4 + 16 + 19 + 28 + 26", "x2": "sub add n mod n INT+ 8 relu idiv x_0_4 INT+ 1", "tree": "((n add (n mod 8)) sub relu((x_0_4 idiv 1)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 1 - 1 - 5 - 6 - 4 + 7 - 5 + 5 + 7 + 0 + 8 + 56 + 8 + 11 + 35 + 72 + 20 + 49 + 0 + 40 + 84 + 0 + 88 + 560 + 160 + 220 + 735 + 0 + 200 + 1078", "x2": "abs sub mod mul INT+ 1 mod n n n mul x_0_12 mod x_0_9 relu relu n", "tree": "abs((((1 mul (n mod n)) mod n) sub (x_0_12 mul (x_0_9 mod relu(relu(n))))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 3 + 10 + 9 + 40 + 45 + 240 + 315 + 1920 + 2835 + 1 9200 + 3 1185 + 23 400 + 40 5405 + 322 5600 + 608 1075 + 5160 9600 + 1 337 8275 + 9 2897 2800 + 19 6418 7225 + 185 7945 6000 + 412 4793 1725", "x2": "mul add x_0_2 idiv mod sub relu n x_0_2 INT- 2 sub x_0_1 sub x_0_1 sqr INT+ 7 n", "tree": "((x_0_2 add (((relu(n) sub x_0_2) mod -2) idiv (x_0_1 sub (x_0_1 sub (7)**2)))) mul n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 6 - 4 + 4624 + 0 + 2 2500 + 0 + 64 + 0 + 100 + 0 + 144 + 0 + 196 + 0 + 256 + 0 + 324 + 0 + 400 + 0 + 484", "x2": "sqr relu sub relu n mul mul add x_0_3 x_0_1 n n", "tree": "(relu((relu(n) sub (((x_0_3 add x_0_1) mul n) mul n))))**2", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 11 + 12 + 13 + 14 + 15 + 10 + 11 + 12 + 13 + 14 + 15 + 10 + 11 + 12 + 13 + 14 + 15 + 10 + 11", "x2": "sub mod n INT+ 6 INT- 1 0", "tree": "((n mod 6) sub -10)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 36 + 81 + 144 + 225 + 324 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249", "x2": "mul sqr n INT+ 9", "tree": "((n)**2 mul 9)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 6 - 3 - 9 + 0 - 3 - 6 - 1 + 8 + 2 + 49 + 57 + 56 + 0 + 72 + 74 + 84 + 8 + 2 + 49 + 57 + 56 + 0 + 72 + 74 + 84 + 8 + 2", "x2": "mod x_0_9 sub relu mod x_0_9 mod x_0_9 x_0_7 mul n INT- 5", "tree": "(x_0_9 mod (relu((x_0_9 mod (x_0_9 mod x_0_7))) sub (n mul -5)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 1 + 2 + 2 + 6 + 21 + 3 + 6 + 6 + 18 + 63 + 9 + 18 + 18 + 54 + 189 + 27 + 54 + 54 + 162 + 567 + 81 + 162 + 162", "x2": "add mul sub INT+ 1 0 INT+ 7 x_0_5 idiv mod n n x_0_3", "tree": "(((10 sub 7) mul x_0_5) add ((n mod n) idiv x_0_3))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 + 4 + 33 + 21 - 8 + 4 + 33 + 21 - 8 + 4 + 33 + 21 - 8 + 4 + 33 + 21 - 8 + 4 + 33 + 21 - 8", "x2": "sub sub add n sqr INT- 5 n x_0_2", "tree": "(((n add (-5)**2) sub n) sub x_0_2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 10 + 1 + 0 + 0 - 10 - 6 - 4 - 2 - 8 + 0 + 0 + 3 + 2 + 2 + 8 + 13 + 16 + 0 + 14 + 2 + 2 + 5 + 4 + 4 + 10 + 15 + 18 + 2", "x2": "mod sub x_0_10 INT- 2 abs n", "tree": "((x_0_10 sub -2) mod abs(n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 2 + 7 + 2 - 10 + 6 + 1 + 6 - 2 + 7 + 2 - 10 + 6 + 1 + 6 - 2 + 7 + 2 - 10 + 6 + 1 + 6 - 2 + 7 + 2 - 10", "x2": "add relu INT- 9 x_0_7", "tree": "(relu(-9) add x_0_7)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 5 + 5 + 2 - 9 + 7 - 1 - 3 + 6 + 2 + 8 + 625 + 625 + 16 + 6561 + 2401 + 1 + 81 + 1296 + 16 + 4096 + 1525 8789 625 + 1525 8789 625 + 6 5536 + 1853 201 8885 1841 + 33 2329 3056 9601 + 1 + 4304 6721 + 2 8211 990 7456 + 6 5536", "x2": "relu sqr sqr x_0_10", "tree": "relu(((x_0_10)**2)**2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 3 + 2 - 10 + 7 + 6 - 3 + 5 - 8 - 6 - 7 - 3 - 7 - 9 - 3 - 8 - 9 - 11 - 7 - 9 - 14 - 7 - 9 - 11 - 16 - 10 - 8", "x2": "add INT- 7 mod n x_0_7", "tree": "(-7 add (n mod x_0_7))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 10 + 8 - 2 + 7 - 5 - 2 - 1 - 1 - 3 + 0 - 7 - 4 - 1 - 6 - 5 - 2 - 7 - 3 - 5 + 0 - 6 - 2 - 5", "x2": "mod abs relu n sub mod relu n add INT+ 6 sign x_0_4 INT+ 1 0", "tree": "(abs(relu(n)) mod ((relu(n) mod (6 add sign(x_0_4))) sub 10))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 4 + 6 + 8 + 10 + 12 + 14 + 0 + 2 + 4 + 6 + 8 + 10 + 12 + 14 + 0 + 2 + 4 + 6", "x2": "mod add n n abs sqr mul INT- 1 INT+ 4", "tree": "((n add n) mod abs(((-1 mul 4))**2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 6 - 1 + 4 + 1 - 8 - 1 + 6 + 1 - 18 - 1 + 12 + 1 - 48 - 1 + 30 + 1 - 66 - 1 + 60 + 1 - 96 - 1 + 78 + 1 - 114 - 1 + 100 + 1", "x2": "add mul sub INT- 3 x_0_1 mod mod INT+ 9 x_0_2 n sub mod n n x_0_2", "tree": "(((-3 sub x_0_1) mul ((9 mod x_0_2) mod n)) add ((n mod n) sub x_0_2))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 1 - 4 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign mul sqr n x_0_3", "tree": "sign(((n)**2 mul x_0_3))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 5 + 0 + 17 + 2 + 5 + 20 + 11 + 13 + 27 + 27 + 28 + 41 + 40 + 40 + 52 + 50 + 49 + 60 + 57 + 65 + 75 + 71 + 78 + 87 + 82 + 88 + 96 + 90 + 95", "x2": "sub x_0_3 sub mod n INT- 1 0 mod INT+ 7 n", "tree": "(x_0_3 sub ((n mod -10) sub (7 mod n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 10 + 8 + 6 + 4 + 12 + 10 + 8 + 0 + 14 + 12 + 16 + 0 + 16 + 8 + 32 + 0 + 24 + 0 + 64 + 0 + 48 + 0 + 128 + 0 + 96 + 0 + 256 + 0 + 192 + 0", "x2": "relu sub add x_0_4 x_0_4 abs relu x_0_3", "tree": "relu(((x_0_4 add x_0_4) sub abs(relu(x_0_3))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 5 + 2 - 3 - 5 + 8 + 10 + 296 + 711 + 1300 + 1034 + 408 + 897 + 308 + 30 + 16 + 17 + 36 + 76 + 40 + 126 + 1320 + 2829 + 2904 + 800 + 26 + 27 + 532 + 87 + 60 + 62 + 192 + 5280 + 5542", "x2": "relu relu abs mul idiv sub x_0_3 sqr add n relu n sub x_0_7 INT- 1 n", "tree": "relu(relu(abs((((x_0_3 sub ((n add relu(n)))**2) idiv (x_0_7 sub -1)) mul n))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 4 + 8 - 3 - 9 + 43 - 146 - 57 + 14 - 16 + 23 - 53 - 153 + 91 - 55 + 7 - 25 - 207 + 557 - 200 - 13 - 18 - 231 + 156 - 514 - 40 + 24 - 245 - 34 - 176 - 76 - 248", "x2": "add idiv abs add n mul mul sqr INT- 3 n n x_0_3 x_0_5", "tree": "((abs((n add (((-3)**2 mul n) mul n))) idiv x_0_3) add x_0_5)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 4 - 7 + 5 - 1 + 1 + 12 - 7 + 10 + 22 - 4 + 22 + 35 - 10 + 37 + 51 - 7 + 55 + 70 - 13 + 76 + 92 - 10 + 100 + 117 - 16 + 127 + 145 - 13 + 157", "x2": "mul add n x_0_3 sign mul abs n x_0_3", "tree": "((n add x_0_3) mul sign((abs(n) mul x_0_3)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 9 - 9 + 9 + 7 - 9 - 10 + 13 + 15 - 13 - 14 + 21 + 23 - 17 - 18 + 29 + 31 - 21 - 22 + 37 + 39 - 25 - 26 + 45 + 47 - 29 - 30 + 53 + 55", "x2": "sub sub mod x_0_2 n x_0_2 relu INT+ 3", "tree": "(((x_0_2 mod n) sub x_0_2) sub relu(3))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 6 - 9 + 4 - 6 + 5 - 9 + 3 + 2 - 5 - 5 + 466 - 5 + 628 - 5 + 814 - 5 - 5 + 1138 + 1258 - 5 + 1516 - 5 + 1798 - 5 + 2104 + 2266 - 5 - 5 + 2788 - 5 + 3166 - 5 + 3568 - 5 - 5", "x2": "mod INT- 5 mul mul sign x_0_9 sub n mul sqr mul INT- 1 add INT+ 1 n idiv n n INT+ 3", "tree": "(-5 mod ((sign(x_0_9) mul (n sub (((-1 mul (1 add n)))**2 mul (n idiv n)))) mul 3))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 3 + 10 - 5 + 20 - 29 + 152 - 102 + 89 - 85 - 1014 + 2782 + 1138 + 194 + 7950 + 4 2746 - 3 5688 + 833 + 779 + 3995 - 2 399 + 2 6892 + 4973 - 4311 + 2 8530 + 12 2971 - 12 9768 - 2 3542 - 2 1181 - 8 8855 + 38 1966", "x2": "add mul idiv mul x_0_4 x_0_1 sub x_0_2 abs x_0_4 INT- 5 n", "tree": "((((x_0_4 mul x_0_1) idiv (x_0_2 sub abs(x_0_4))) mul -5) add n)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 + 0 - 3 + 0 - 5 + 0 - 7 + 0 - 9 + 0 - 11 + 0 - 13 + 0 - 15 + 0 - 17 + 0 - 19 + 0 - 21 + 0 - 23 + 0 - 25 + 0 - 27", "x2": "mul n idiv mod abs n INT- 2 abs INT+ 8", "tree": "(n mul ((abs(n) mod -2) idiv abs(8)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 4 + 9 + 8 - 6 + 1 + 4 + 4 - 3 - 5 + 1 - 288 - 104 - 1008 - 1080 - 256 - 544 - 1152 - 1368 - 480 - 336 - 1584 + 1288 + 1344 + 1400 + 1456 + 1512 + 1568 + 1624 + 1680 + 1736 + 1792 + 1848 - 35 5776 - 38 2200 - 40 9536 - 43 7784 - 46 6944", "x2": "mul n mul INT- 8 mod INT- 7 add sub n INT+ 7 x_0_11", "tree": "(n mul (-8 mul (-7 mod ((n sub 7) add x_0_11))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 6 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul sqr n mod abs sign x_0_1 relu INT+ 5", "tree": "((n)**2 mul (abs(sign(x_0_1)) mod relu(5)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 + 3 + 16 - 72 - 24 - 128 + 576 + 192 + 1024 - 4608 - 1536 - 8192 + 3 6864 + 1 2288 + 6 5536 - 29 4912 - 9 8304 - 52 4288 + 235 9296 + 78 6432 + 419 4304 - 1887 4368 - 629 1456 - 3355 4432 + 1 5099 4944 + 5033 1648 + 2 6843 5456 - 12 795 9552 - 4 265 3184", "x2": "mul INT- 8 x_0_3", "tree": "(-8 mul x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 + 1 - 9 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 9 + 1 + 6 + 2 + 10 + 3 + 9 + 6 + 15 + 9 + 16 + 14 + 24 + 19 + 27 + 26 + 37 + 33 + 42 + 42 + 54 + 51 + 61 + 62 + 75 + 73 + 84 + 86 + 100 + 99", "x2": "add sub x_0_4 INT+ 5 n", "tree": "((x_0_4 sub 5) add n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 2 + 0 + 7 + 8 + 9 + 73 + 2 + 19 + 90 + 584 + 238 + 881 + 1026 + 8240 + 2102 + 4750 + 1 3850 + 13 9450 + 2 1110 + 7 3741 + 25 7962 + 309 7561 + 17 3654 + 164 3360 + 615 7466 + 8164 2401 + 236 1418 + 4217 2680 + 1 7951 3450 + 24 7996 9300 + 1 2147 4570 + 13 250 1892", "x2": "abs sub INT+ 1 0 mul sub x_0_4 add x_0_6 n n", "tree": "abs((10 sub ((x_0_4 sub (x_0_6 add n)) mul n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 8 - 1 + 7 + 10 - 7 + 5 + 8 - 4 - 12 - 15 + 9 + 0 - 13 + 4 + 15 + 10 - 14 - 5 + 17 - 9 - 20 - 11 + 24 + 10 - 22 + 4 + 32 + 6 - 29 - 15 + 41 + 1 - 37 - 7 + 56", "x2": "add INT- 5 sub relu x_0_8 x_0_6", "tree": "(-5 add (relu(x_0_8) sub x_0_6))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 6 - 2 - 13 + 23 - 53 + 110 - 252 + 548 - 1215 + 2673 - 5903 + 1 3012 - 2 8706 + 6 3306 - 13 9633 + 30 7963 - 67 9241 + 149 8106 - 330 4184 + 728 7600 - 1607 3315 + 3545 805 - 7818 9219 + 1 7245 1744 - 3 8035 4302 + 8 3889 7814 - 18 5024 7381 + 40 8084 9055 - 90 59 5933", "x2": "mul add sub x_0_3 INT- 9 add x_0_1 x_0_1 idiv INT+ 7 INT- 9", "tree": "(((x_0_3 sub -9) add (x_0_1 add x_0_1)) mul (7 idiv -9))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 1 - 1 - 2 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 3 + 5 + 7 + 9 + 13 + 15 + 19 + 23 + 27 + 31 + 37 + 41 + 47 + 53 + 59 + 65 + 73", "x2": "sub mod INT- 9 add INT+ 1 relu add n add mod n INT- 2 x_0_3 INT+ 2", "tree": "((-9 mod (1 add relu((n add ((n mod -2) add x_0_3))))) sub 2)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 + 2 - 1 + 4 - 3 + 6 - 1 + 8 - 3 + 10 - 5 + 12 - 3 + 14 - 5 + 16 - 7 + 18 - 5 + 20 - 7 + 22 - 9 + 24 - 7 + 26 - 9 + 28", "x2": "add n mul idiv relu x_0_1 INT- 3 sqr INT+ 2", "tree": "(n add ((relu(x_0_1) idiv -3) mul (2)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 3 - 3 - 3 - 2 - 1 - 3 - 2 - 1 - 3 - 2 - 1 - 3 - 2 - 1 - 3 - 2 - 1 - 3 - 2 - 1 - 3 - 2 - 1 - 3 - 2 - 1 - 3", "x2": "add abs mod mod n INT+ 3 n INT- 3", "tree": "(abs(((n mod 3) mod n)) add -3)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2", "x2": "mod abs n INT+ 5", "tree": "(abs(n) mod 5)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 - 1 + 2 + 6 + 11 + 17 + 24 + 32 + 41 + 51 + 62 + 74 + 87 + 101 + 116 + 132 + 149 + 167 + 186 + 206 + 227 + 249 + 272 + 296 + 321 + 347 + 374 + 402", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 4 - 6 - 9 - 13 - 18 - 24 - 31 - 39 - 48 - 58 - 69 - 81 - 94 - 108 - 123 - 139 - 156 - 174 - 193 - 213 - 234 - 256 - 279 - 303 - 328 - 354 - 381 - 409", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116 + 2304 + 2500 + 2704 + 2916", "x2": "sqr mul INT+ 2 n", "tree": "((2 mul n))**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 2 + 3 + 96 + 200 + 324 + 4998 + 1 3184 + 2 6730 + 50 400 + 159 5990 + 384 9984 + 8456 8614 + 3 1281 5216 + 8 6624 7750 + 216 4956 6720 + 904 359 9158 + 2806 6427 2944 + 7 8154 9358 8086 + 36 1614 3966 5600 + 123 7729 4437 950 + 3782 6988 9663 6528 + 1 9129 4015 8310 5574 + 7 1293 2159 5767 656 + 236 4186 8103 9783 3750 + 1293 1475 4701 7937 2080 + 5197 2754 4331 4191 2598 + 18 5352 2459 3519 166 4704 + 108 7537 870 4208 5192 4326 + 467 7547 8989 8277 2134 3600", "x2": "mul add relu INT+ 6 x_0_3 abs sqr n", "tree": "((relu(6) add x_0_3) mul abs((n)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 6 - 7 + 5 + 21 + 32 + 32 + 30 + 35 + 53 + 75 + 92 + 98 + 102 + 113 + 137 + 165 + 188 + 200 + 210 + 227 + 257 + 291 + 320 + 338 + 354 + 377 + 413 + 453 + 488", "x2": "sub sub relu sub sqr n n INT+ 5 x_0_3", "tree": "((relu(((n)**2 sub n)) sub 5) sub x_0_3)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 3 + 6 - 3 - 7 + 5 + 3 + 6 + 5 + 2 + 5 + 3 + 6 + 5 + 2 + 5 + 3 + 6 + 5 + 2 + 5 + 3 + 6 + 5 + 2 + 5 + 3 + 6 + 5 + 2 + 5 + 3 + 6", "x2": "mod mod x_0_5 relu n add INT+ 3 idiv INT- 9 INT- 2", "tree": "((x_0_5 mod relu(n)) mod (3 add (-9 idiv -2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 2 - 10 + 8 - 3 + 2 + 5 + 0 + 10 - 44 4891 - 59 9086 - 79 313 - 102 4147 - 130 6447 - 164 3519 - 204 2041 - 250 9046 - 349 6900 - 427 7810 - 518 7722 - 624 803 - 745 1888 - 883 6643 - 1041 1490 - 1219 3590 - 1464 5821 - 1705 1286 - 1975 7211 - 2278 9427 - 2617 4817 - 2994 1479 - 3411 8651 - 3873 6694 - 4427 2070 - 5002 1850 - 5634 7612", "x2": "sub x_0_8 sqr sub n sqr add sub mul sign INT- 1 0 n relu relu n INT- 8", "tree": "(x_0_8 sub ((n sub ((((sign(-10) mul n) sub relu(relu(n))) add -8))**2))**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 88 - 112 - 152 - 208 - 280 - 368 - 472 - 592 - 728 - 880 - 1048 - 1232 - 1432 - 1648 - 1880 - 2128 - 2392 - 2672 - 2968 - 3280 - 3608 - 3952 - 4312 - 4688 - 5080 - 5488 - 5912", "x2": "mul INT- 8 add relu sqr mul n idiv mod INT- 6 INT- 1 0 INT+ 8 relu INT+ 1 0", "tree": "(-8 mul (relu(((n mul ((-6 mod -10) idiv 8)))**2) add relu(10)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 9 + 3 + 9 - 4 + 5 + 4 + 5 - 4 + 7 + 121 + 2916 + 361 + 3969 + 900 + 1600 + 1156 + 2025 + 1444 + 4900 + 161 2900 + 10 2886 9776 + 1723 801 + 22 6842 6384 + 1 2656 2500 + 4 3264 0 + 2 4354 7236 + 8 372 2500 + 4 3839 9844 + 54 225 0 + 624 9975 0 2500 + 2 7099 4692 873 7028 5056 + 8 831 1616 8510 2656 + 14 8712 4137 322 9416 6784 + 490 5532 8369 1406 2500 + 6064 5467 7504 0 0 + 2030 646 4218 6878 5956", "x2": "sqr idiv mul x_0_10 n INT+ 2", "tree": "(((x_0_10 mul n) idiv 2))**2", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 4 + 9 - 5 - 9 - 5 - 3 - 8 - 2 - 6 - 1 - 4 + 1 + 4 + 0 + 7 + 4 + 10 + 8 - 5 - 2 - 6 + 1 - 2 + 4 + 2 + 15 + 19 + 16 - 5 + 22 - 2 - 4 + 9 + 13", "x2": "sub mod x_0_7 n INT+ 6", "tree": "((x_0_7 mod n) sub 6)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 6 - 19 - 68 - 287 - 1454 - 8747 - 6 1256 - 49 79 - 441 746 - 4410 7499 - 4 8518 2532 - 58 2219 431 - 756 8847 5654 - 1 596 3865 9211 - 15 8945 7988 8224 - 254 3132 7821 1647 - 4323 3257 2959 8066 - 7 7819 8631 3276 5259 - 147 8577 3995 2253 9996 - 2957 1547 9904 5079 9999 - 6 2100 2507 7994 6680 62 - 136 6205 5171 5882 6960 1451 - 3142 2726 8946 5302 83 3464 - 7 5414 5445 4716 7248 2000 3231 - 188 5363 6136 7918 1205 8 874 - 4901 9453 9556 5871 1330 210 2827 - 13 2352 5256 8027 8520 5910 5677 6436 - 370 5870 7190 4779 8576 5495 8974 319", "x2": "sub mul n add INT- 4 x_0_1 sign sub sign mod n abs abs INT- 1 n", "tree": "((n mul (-4 add x_0_1)) sub sign((sign((n mod abs(abs(-1)))) sub n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 8 - 3 + 9 - 5 + 1 + 8 - 5 - 9 - 10 + 3 + 9 + 49 + 16 + 100 + 36 + 0 + 81 + 16 + 64 + 121 + 4 + 64 + 2304 + 225 + 9801 + 1225 + 1 + 6400 + 225 + 3969 + 1 4400 + 9 + 3969 + 530 3809 + 5 176 + 9604 0 + 149 8176", "x2": "sqr mul sign x_0_2 add sign sub sub INT- 4 x_0_10 idiv add INT- 5 x_0_11 n x_0_11", "tree": "((sign(x_0_2) mul (sign(((-4 sub x_0_10) sub ((-5 add x_0_11) idiv n))) add x_0_11)))**2", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 4 + 7 + 1 - 2 + 20 + 10 + 29 + 6 + 144 + 2 + 48 + 4 + 144 + 2 + 48 + 4 + 144 + 2 + 48 + 4 + 144 + 2 + 48 + 4 + 144 + 2 + 48 + 4 + 144 + 2 + 48", "x2": "abs idiv sub mod x_0_5 x_0_5 mul INT- 9 sqr INT- 4 sub INT+ 5 x_0_1", "tree": "abs((((x_0_5 mod x_0_5) sub (-9 mul (-4)**2)) idiv (5 sub x_0_1)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 3 - 2 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1", "x2": "mod x_0_3 add sub abs n mod n INT+ 4 sign mod INT- 5 sub x_0_1 abs add x_0_2 n", "tree": "(x_0_3 mod ((abs(n) sub (n mod 4)) add sign((-5 mod (x_0_1 sub abs((x_0_2 add n)))))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 8 - 7 + 4 - 2 + 10 + 0 - 2 - 4 - 28 - 1 + 1 - 77 + 1 + 5 + 0 - 747 + 4 + 9 - 5887 + 20 - 1 + 22 - 55 7965 + 5 - 37 - 3465 6718 - 352 + 0 - 443 - 3113 2494 1161 + 2 - 32 - 1201 881 253 1460 - 12 3796 + 1", "x2": "mod sub n x_0_9 sub add n INT+ 1 sqr x_0_7", "tree": "((n sub x_0_9) mod ((n add 1) sub (x_0_7)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 6 + 3 - 5 - 5 + 5 - 5 - 1 + 4 + 2 + 2 - 6 - 6 - 48 - 8 - 30 - 44 - 72 - 36 - 2 - 2 + 123 + 3 + 138 + 37 + 390 + 29 + 0 + 0 - 910 - 70 - 870 - 132 - 1191 - 36 - 21 - 14 + 0", "x2": "mul sub INT- 7 x_0_8 mod x_0_10 abs INT+ 9", "tree": "((-7 sub x_0_8) mul (x_0_10 mod abs(9)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 2 - 6 + 7 + 0 - 6 + 5 + 2 - 6 + 3 + 4 - 6 + 1 + 6 - 6 - 1 + 6 - 4 - 3 + 6 - 2 - 5 + 6 + 0 - 5 + 4 + 2 - 5 + 2", "x2": "sub sign x_0_1 add x_0_1 x_0_2", "tree": "(sign(x_0_1) sub (x_0_1 add x_0_2))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 0 - 6 - 1 - 1 - 2 + 5 + 7 + 5 + 0 + 4 + 6 + 5 + 7 + 0 + 0 + 17 + 9 + 19 + 5 + 11 + 6 + 12 + 0 + 9 + 9 + 14 + 14 + 8 + 8 + 0 + 32 + 11 + 34 + 35", "x2": "relu abs idiv n mod add sqr mul n INT- 8 sub x_0_8 n INT- 5", "tree": "relu(abs((n idiv ((((n mul -8))**2 add (x_0_8 sub n)) mod -5))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 3 + 3 - 4 + 1 + 0 + 4 + 0 + 5 + 0 + 9 + 0 + 14 + 0 + 23 + 0 + 37 + 0 + 60 + 0 + 97 + 0 + 157 + 0 + 254 + 0 + 411 + 0 + 665 + 0 + 1076 + 0", "x2": "relu sub x_0_2 sub idiv mul INT+ 5 relu INT- 9 n x_0_4", "tree": "relu((x_0_2 sub (((5 mul relu(-9)) idiv n) sub x_0_4)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 8 - 2 - 1 - 9 + 7 + 4 + 1 + 1 - 1 - 6 + 8 + 3 + 2 + 7 + 6 + 7 + 8 + 9 + 10 + 17 + 13 + 13 + 20 + 19 + 21 + 19 + 22 + 27 + 28 + 3 + 27 + 5 + 9 + 31 + 7 + 1 + 9 + 35", "x2": "mod sub mod mul INT+ 2 x_0_4 x_0_9 add INT+ 9 mul x_0_11 sub n n n", "tree": "((((2 mul x_0_4) mod x_0_9) sub (9 add (x_0_11 mul (n sub n)))) mod n)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 5 - 6 + 9 + 4 - 6 - 1 + 3 - 4 - 2 + 1 - 9 - 3 + 109 + 106 + 129 + 132 + 130 + 143 + 155 + 156 + 166 + 177 + 175 + 189 + 309 + 314 + 345 + 356 + 362 + 383 + 403 + 412 + 430 + 449 + 455 + 477 + 605 + 618 + 657", "x2": "add x_0_12 mul INT+ 8 n", "tree": "(x_0_12 add (8 mul n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "+ 8 + 7 + 6 - 9 + 4 + 6 + 8 + 16 + 12 + 1 + 10 + 3 + 8 + 20 + 12 + 4 + 16 + 0 + 14 + 3 + 12 + 29 + 16 + 28 + 0 + 4 + 0 + 7 + 7 + 3 + 38", "x2": "relu add sub INT+ 7 x_0_4 mul mod add mod n relu sqr INT+ 5 x_0_2 INT+ 2 n", "tree": "relu(((7 sub x_0_4) add ((((n mod relu((5)**2)) add x_0_2) mod 2) mul n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 9 - 2 + 5 + 10 + 10 - 7 - 2 - 7 - 2 - 4 + 11 + 12 + 12 + 14 + 14 + 16 + 17 + 21 + 22 + 23 + 25 + 26 + 27 + 29 + 30 + 32 + 33 + 35 + 36 + 37 + 39 + 40 + 42 + 43 + 45 + 46 + 47", "x2": "add idiv add add INT- 8 x_0_2 sub x_0_7 idiv sub INT- 9 sub n x_0_10 n relu INT+ 7 n", "tree": "((((-8 add x_0_2) add (x_0_7 sub ((-9 sub (n sub x_0_10)) idiv n))) idiv relu(7)) add n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 56 + 307 - 2513 + 2 5060 - 30 829 + 421 1480 - 6738 3857 + 12 1290 9228 - 242 5818 4821 + 5336 8006 5776 - 12 8083 2157 8985 + 333 163 6105 3220 - 9324 4581 949 637 + 27 9733 7432 8471 8600 - 895 1479 7851 1099 5809 + 3 435 312 6937 7385 6860 - 109 5661 1256 9758 5884 7717 + 4163 5122 7765 826 3621 2448 - 16 6540 4911 603 3054 4849 8841 + 699 4700 6264 5338 8288 3695 356 - 3 776 6827 5639 4908 4688 2581 6765 + 141 5727 4067 9416 5789 5659 8757 40 - 6795 4915 5261 1995 7899 1674 336 3217 + 33 9774 5776 3059 9789 4958 3701 6815 9500 - 1766 8278 367 9118 9053 7835 2487 4429 5509 + 9 5408 7013 9867 2420 8904 3103 4321 9195 5920 - 534 2887 2783 2565 5569 8641 3792 2027 4953 3257", "x2": "idiv mul mul add add add INT+ 5 x_0_1 x_0_1 sign x_0_1 x_0_1 n sub n x_0_1", "tree": "((((((5 add x_0_1) add x_0_1) add sign(x_0_1)) mul x_0_1) mul n) idiv (n sub x_0_1))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 6 + 2 + 6 + 211 + 197 + 201 + 197 - 8 + 6 + 2 + 6 + 211 + 197 + 201 + 197 - 8 + 6 + 2 + 6 + 211 + 197 + 201 + 197 - 8 + 6 + 2 + 6 + 211 + 197 + 201", "x2": "sub add mul sqr INT- 1 0 INT+ 2 mul sign INT- 4 x_0_4 INT- 3", "tree": "((((-10)**2 mul 2) add (sign(-4) mul x_0_4)) sub -3)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 6 + 3 - 4 + 7 + 2 - 9 + 5 + 4 + 9 + 6 + 9 + 12 + 11 + 2 + 9 + 6 + 2 + 18 + 15 + 6 + 12 + 10 + 13 + 12 + 8 + 12 + 9 + 16 + 2 + 18 + 10 + 16 + 6 + 20", "x2": "sub n mod mul INT- 6 x_0_7 n", "tree": "(n sub ((-6 mul x_0_7) mod n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250 + 1352 + 1458", "x2": "mul add n n mod n sqr n", "tree": "((n add n) mul (n mod (n)**2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 - 8 + 1 + 4 - 7 + 8 - 266 - 656 - 90 + 200 - 1078 + 888 - 4 5253 - 12 8912 - 2 625 + 5 784 - 31 2001 + 28 7208 - 1633 6884 - 5156 5400 - 909 6276 + 2457 8752 - 1 6504 9288 + 1 6543 992 - 102 1055 3375 - 348 5821 1336 - 66 3118 6203 + 192 6974 504 - 1388 645 2339 + 1488 8789 1600 - 9 8123 4179 4646 - 35 6948 840 9408 - 7 2213 6177 6486", "x2": "mul add sub mul n x_0_6 n INT- 1 0 relu n", "tree": "((((n mul x_0_6) sub n) add -10) mul relu(n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 10 - 20 - 60 - 240 - 1200 - 7200 - 5 400 - 40 3200 - 362 8800 - 3628 8000 - 3 9916 8000 - 47 9001 6000 - 622 7020 8000 - 8717 8291 2000 - 13 767 4368 0 - 209 2278 9888 0 - 3556 8742 8096 0 - 6 4023 7370 5728 0 - 121 6451 40 8832 0 - 2432 9020 817 6640 0 - 5 1090 9421 7170 9440 0 - 112 4000 7277 7760 7680 0 - 2585 2016 7388 8497 6640 0 - 6 2044 8401 7332 3943 9360 0 - 155 1121 43 3309 8598 4000 0 - 4032 9146 1126 6056 3558 4000 0 - 10 8888 6945 418 3521 6076 8000 0 - 304 8883 4461 1713 8605 150 4000 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 3 + 1 + 7 + 4 - 1 + 3 + 9 + 6 + 1 + 5 + 11 + 8 + 3 + 7 + 13 + 10 + 5 + 9 + 15 + 12 + 7 + 11 + 17 + 14 + 9 + 13 + 19 + 16", "x2": "sub idiv n idiv INT- 3 INT- 3 x_0_2", "tree": "((n idiv (-3 idiv -3)) sub x_0_2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 8 + 2 + 0 + 2 + 2 + 2 + 4 + 4 + 6 + 8 + 10 + 14 + 18 + 24 + 32 + 42 + 56 + 74 + 98 + 130 + 172 + 228 + 302 + 400 + 530 + 702 + 930 + 1232 + 1632", "x2": "add x_0_2 relu x_0_3", "tree": "(x_0_2 add relu(x_0_3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 8 + 4 + 7 + 2 + 1 + 8 - 3 + 8 + 86 + 80 + 100 + 111 + 114 + 121 + 136 + 133 + 152 + 238 + 240 + 268 + 287 + 298 + 313 + 336 + 341 + 368 + 462 + 472 + 508 + 535 + 554 + 577 + 608 + 621 + 656", "x2": "relu add x_0_9 mul n abs INT+ 8", "tree": "relu((x_0_9 add (n mul abs(8))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 4 + 1 + 4 + 3 + 9 - 9 - 7 + 6 + 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1", "x2": "sign sign abs mod x_0_1 idiv sqr sub x_0_9 x_0_6 INT+ 3", "tree": "sign(sign(abs((x_0_1 mod (((x_0_9 sub x_0_6))**2 idiv 3)))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 9 + 3 - 8 + 3 + 0 + 8 + 0 + 12 + 3 + 15 + 13 + 22 + 15 + 28 + 20 + 33 + 32 + 42 + 36 + 50 + 43 + 57 + 57 + 68 + 63 + 78 + 72 + 87 + 88 + 100 + 96 + 112", "x2": "abs add x_0_6 add n relu mod sqr sign sign sign n relu x_0_1", "tree": "abs((x_0_6 add (n add relu(((sign(sign(sign(n))))**2 mod relu(x_0_1))))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 8 - 1 + 4 + 8 + 8 + 16 + 25 + 35 + 45 + 56 + 68 + 81 + 95 + 110 + 126 + 143 + 161 + 180 + 200 + 221 + 243 + 266 + 290 + 315 + 341 + 368 + 396 + 425 + 455", "x2": "add relu n add x_0_1 add sub relu n n idiv n x_0_3", "tree": "(relu(n) add (x_0_1 add ((relu(n) sub n) add (n idiv x_0_3))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 2 - 10 + 5 + 2 + 9 - 2 - 10 + 5 + 2 + 9 - 2 - 10 + 5 + 2 + 9 - 2 - 10 + 5 + 2 + 9 - 2 - 10 + 5 + 2 + 9 - 2 - 10 + 5 + 2 + 9 - 2 - 10", "x2": "sub x_0_5 mod sign n INT+ 1", "tree": "(x_0_5 sub (sign(n) mod 1))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 3 + 4 - 8 - 4 + 2 - 1 - 5 - 1 - 1 - 1 - 1 - 3 - 3 - 1 - 3 - 3 - 3 - 3 - 1 - 1 - 3 - 1 - 1 - 1 - 1 - 3 - 3 - 1 - 3 - 3 - 3 - 3 - 1 - 1", "x2": "sub sign mod idiv x_0_6 mul mod n sqr x_0_7 INT+ 3 INT+ 9 INT+ 2", "tree": "(sign(((x_0_6 idiv ((n mod (x_0_7)**2) mul 3)) mod 9)) sub 2)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr sub sub n abs relu INT+ 2 INT- 2", "tree": "(((n sub abs(relu(2))) sub -2))**2", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 + 9 - 10 - 4 + 25 - 36 + 49 + 64 - 81 + 100 - 121 - 144 + 169 - 196 + 225 + 256 - 289 + 324 - 361 - 400 + 441 - 484 + 529 + 576 - 625 + 676 - 729 - 784 + 841 - 900 + 961", "x2": "mul n mul n sign mul sub idiv INT+ 3 INT+ 9 x_0_4 sqr INT+ 1 0", "tree": "(n mul (n mul sign((((3 idiv 9) sub x_0_4) mul (10)**2))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 8 + 7 - 6 - 8 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0", "x2": "abs mul idiv x_0_5 add sign x_0_3 abs sub n mul n x_0_5 INT+ 1", "tree": "abs(((x_0_5 idiv (sign(x_0_3) add abs((n sub (n mul x_0_5))))) mul 1))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 9 - 6 - 7 - 1 - 5 - 1 - 1 - 1 - 1 - 1 + 1 + 2 + 3 + 4 + 5 + 8 + 10 + 12 + 14 + 16 + 20 + 23 + 26 + 29 + 32 + 37 + 41 + 45 + 49 + 53 + 59 + 64", "x2": "add relu sub add x_0_5 n INT+ 8 INT- 1", "tree": "(relu(((x_0_5 add n) sub 8)) add -1)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 6 - 6 + 2 - 8 + 1 - 8 + 0 + 0 + 8 + 7 + 9 + 5 + 5 + 13 + 12 + 14 + 10 + 10 + 18 + 17 + 19 + 15 + 15 + 23 + 22 + 24 + 20 + 20 + 28 + 27 + 29 + 25 + 25", "x2": "mod add relu x_0_1 sub x_0_5 x_0_6 n", "tree": "((relu(x_0_1) add (x_0_5 sub x_0_6)) mod n)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 3 - 8 + 4 - 8 + 2 + 7 + 4 - 4 - 2 + 2 - 2 + 5 + 1 + 2 - 3 - 5 + 5 - 5 + 2 + 10 + 5 - 4 - 2 + 2 - 2 + 5 + 1 + 2 - 3 - 5 + 5 - 5 + 2 + 10", "x2": "idiv INT+ 1 0 x_0_7", "tree": "(10 idiv x_0_7)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 7 - 5 - 4 - 3 + 0 - 7 + 432 + 747 + 990 + 1298 + 1668 + 2080 + 2702 - 3270 - 8048 - 1 2138 - 1 7784 - 2 5118 - 3 3920 - 4 7838 + 8 2192 + 19 6834 + 30 4656 + 45 9700 + 67 72 + 93 4902 + 136 744 - 235 9904 - 587 8800 - 941 5382 - 1467 8528 - 2207 7396 - 3174 8384", "x2": "mul sub add n sqr n sub add n add x_0_7 n mul INT+ 1 INT+ 4 n", "tree": "(((n add (n)**2) sub ((n add (x_0_7 add n)) sub (1 mul 4))) mul n)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 3 + 6 + 10 + 15 + 21 + 28 + 36 + 45 + 55 + 66 + 78 + 91 + 105 + 120 + 136 + 153 + 171 + 190 + 210 + 231 + 253 + 276 + 300 + 325 + 351 + 378 + 406", "x2": "add x_0_1 relu n", "tree": "(x_0_1 add relu(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 196 - 784 - 1764 - 3136 - 4900 - 7056 - 9604 - 1 2544 - 1 5876 - 1 9600 - 2 3716 - 2 8224 - 3 3124 - 3 8416 - 4 4100 - 5 176 - 5 6644 - 6 3504 - 7 756 - 7 8400 - 8 6436 - 9 4864 - 10 3684 - 11 2896 - 12 2500 - 13 2496 - 14 2884", "x2": "mul INT- 4 sqr mul INT- 7 n", "tree": "(-4 mul ((-7 mul n))**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 8 - 1 - 8 - 3 - 5 - 14 - 9 - 16 - 17 - 10 - 17 - 12 - 13 - 22 - 17 - 24 - 25 - 19 - 26 - 21 - 22 - 30 - 25 - 32 - 33 - 27 - 35 - 30 - 31 - 39", "x2": "sub idiv n INT- 9 add sub n abs x_0_4 n", "tree": "((n idiv -9) sub ((n sub abs(x_0_4)) add n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 10 + 1 - 5 + 7 + 8 + 2 - 54 + 25 - 10 - 13 - 73 + 3 - 7 + 18 + 17 + 3 - 101 + 63 - 18 - 24 - 162 + 6 - 8 + 31 + 25 + 3 - 126 + 117 - 25 - 36 - 343 + 10", "x2": "idiv idiv sub x_0_1 mul n add n sign x_0_3 relu sign INT+ 8 x_0_5", "tree": "(((x_0_1 sub (n mul (n add sign(x_0_3)))) idiv relu(sign(8))) idiv x_0_5)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 9 + 10 + 12 + 14 + 16 + 18 + 21 + 24 + 27 + 30 + 34 + 38 + 42 + 46 + 51 + 56 + 61 + 66 + 72 + 78 + 84 + 90 + 97 + 104 + 111 + 118 + 126", "x2": "add idiv n abs INT- 4 abs add abs x_0_1 sqr sign abs n", "tree": "((n idiv abs(-4)) add abs((abs(x_0_1) add (sign(abs(n)))**2)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225 + 1296 + 1369 + 1444 + 1521 + 1600 + 1681 + 1764 + 1849 + 1936", "x2": "sqr abs sub sub sub x_0_1 n x_0_1 sqr INT+ 4", "tree": "(abs((((x_0_1 sub n) sub x_0_1) sub (4)**2)))**2", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 7 + 7 + 9 + 19 + 29 + 49 + 71 + 105 + 143 + 195 + 253 + 327 + 409 + 509 + 619 + 749 + 891 + 1055 + 1233 + 1435 + 1653 + 1897 + 2159 + 2449 + 2759 + 3099 + 3461 + 3855 + 4273", "x2": "abs add sqr n relu sub x_0_2 n", "tree": "abs(((n)**2 add relu((x_0_2 sub n))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 9 - 3 + 6 - 9 - 15 - 6 + 9 - 15 - 24 - 9 + 15 - 24 - 39 - 15 + 24 - 39 - 63 - 24 + 39 - 63 - 102 - 39 + 63 - 102 - 165 - 63 + 102 - 165 - 267", "x2": "mul sub x_0_2 x_0_1 sign x_0_1", "tree": "((x_0_2 sub x_0_1) mul sign(x_0_1))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 + 10 + 0 - 3 - 3 - 6 + 4 + 0 + 90 + 0 + 0 + 0 + 0 + 56 + 0 + 1440 + 0 + 0 + 0 + 0 + 1176 + 0 + 3 3120 + 0 + 0 + 0 + 0 + 3 2928 + 0 + 99 3600 + 0 + 0 + 0 + 0", "x2": "mul mul n INT+ 1 relu x_0_7", "tree": "((n mul 1) mul relu(x_0_7))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 5 + 5 + 8 - 1 - 3 + 7 + 10 + 1 - 1 + 9 + 12 + 3 + 1 + 11 + 14 + 5 + 3 + 13 + 16 + 7 + 5 + 15 + 18 + 9 + 7 + 17 + 20 + 11 + 9", "x2": "sub n idiv x_0_2 sign idiv n n", "tree": "(n sub (x_0_2 idiv sign((n idiv n))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 - 4 + 3 + 4 + 7 + 0 - 1 + 0 + 0 - 2 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1", "x2": "mod mul sub idiv mul x_0_7 x_0_6 INT- 9 abs n n INT- 3", "tree": "(((((x_0_7 mul x_0_6) idiv -9) sub abs(n)) mul n) mod -3)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 5 + 4 + 10 - 4 + 8 + 5 - 5 + 2 - 1 + 7 - 4 + 1 + 6 + 11 - 4 + 1 + 6 + 13 - 7 + 1 + 8 + 18 - 9 + 1 + 8 + 28 - 13 + 1 + 9 + 29 - 18 + 1 + 12 + 32 - 25 + 1", "x2": "add mod add sub mul x_0_9 add n add x_0_10 INT+ 6 INT+ 5 x_0_9 x_0_8 x_0_4", "tree": "(((((x_0_9 mul (n add (x_0_10 add 6))) sub 5) add x_0_9) mod x_0_8) add x_0_4)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 5 - 9 - 1 - 7 + 5 - 7 + 1 + 0 + 0 + 0 + 0 + 5 + 0 + 1 + 0 + 0 + 0 + 0 + 5 + 0 + 1 + 0 + 0 + 0 + 0 + 5 + 0 + 1 + 0 + 0 + 0 + 0 + 5 + 0", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 18 - 20 - 22 - 24 - 26 - 28 - 30 - 32 - 51 - 54 - 57 - 60 - 63 - 66 - 69 - 72 - 100 - 104 - 108", "x2": "mul idiv n INT- 8 n", "tree": "((n idiv -8) mul n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 100 - 1111 - 1 3344 - 17 3485 - 242 8804 - 3643 2075 - 5 8291 3216 - 99 952 4689 - 1783 7144 4420 - 3 3890 5744 3999 - 67 7811 4888 0 - 1423 4041 2648 21 - 3 1314 8907 8256 484 - 72 242 4879 9889 1155 - 1728 5819 7119 7338 7744 - 4 3214 5492 7993 3469 3625 - 112 3578 2812 7827 203 4276 - 3033 6613 5945 1329 5492 5479 - 8 4942 5180 6463 7227 3791 3440 - 246 3333 238 7447 9593 9948 9789 - 7389 9990 7162 3438 7819 8469 3700 - 22 9089 9712 2032 6602 2415 2550 4731 - 733 879 790 5045 1271 7288 1615 1424 - 2 4191 9009 6086 6489 1967 509 3299 7025 - 82 2524 6326 6946 632 6879 7317 2189 8884 - 2878 8362 1434 3112 2144 790 6102 6646 975 - 10 3638 1037 1635 2039 7186 8461 9695 9259 5136", "x2": "mul sub x_0_1 sqr INT- 1 add n INT+ 8", "tree": "((x_0_1 sub (-1)**2) mul (n add 8))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 9 - 9 - 5 - 10 - 5 - 8 + 5 + 169 + 4 + 9 + 64 + 16 + 100 + 64 + 484 + 3 4969 + 529 + 841 + 7225 + 1444 + 1 5129 + 7744 + 25 9081 + 12 2465 25 + 30 9136 + 75 5161 + 5262 516 + 217 2676 + 2 2982 5600 + 6046 6176 + 671 4006 4996 + 149 9767 7670 870 3481 + 955 8670 7241 + 5703 2250 8809", "x2": "sqr relu add x_0_8 abs relu add add n mod relu n sign INT+ 7 INT+ 1", "tree": "(relu((x_0_8 add abs(relu(((n add (relu(n) mod sign(7))) add 1))))))**2", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 20 + 33 + 48 + 65 + 84 + 105 + 128 + 153 + 180 + 209 + 240 + 273 + 308 + 345 + 384 + 425 + 468 + 513 + 560 + 609 + 660 + 713 + 768 + 825 + 884 + 945", "x2": "mul n abs add INT+ 6 sub n sub INT- 9 INT- 7", "tree": "(n mul abs((6 add (n sub (-9 sub -7)))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 2 - 6 + 4 + 6 + 2 - 5 - 6 - 128 - 96 - 169 - 98 - 91 - 132 - 197 - 214 - 1199 - 952 - 1536 - 977 - 930 - 1267 - 1796 - 1941 - 9830 - 7863 - 1 2544 - 8072 - 7705 - 1 410 - 1 4651 - 1 5820 - 7 8941 - 6 3214 - 10 671", "x2": "sub mul INT+ 8 add sub INT- 6 n add x_0_8 INT+ 1 mod n sub INT- 3 sub INT- 1 INT- 7", "tree": "((8 mul ((-6 sub n) add (x_0_8 add 1))) sub (n mod (-3 sub (-1 sub -7))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1676 900 + 575 5265 + 167 4500 + 38 8193 + 6 4580 + 6305 + 260 + 65 + 68 + 1676 900 + 575 5265 + 167 4500 + 38 8193 + 6 4580 + 6305 + 260 + 65 + 68 + 1676 900 + 575 5265 + 167 4500 + 38 8193 + 6 4580 + 6305 + 260 + 65 + 68", "x2": "add sqr add INT- 2 sqr relu sqr mod n INT- 9 sqr INT+ 8", "tree": "(((-2 add (relu(((n mod -9))**2))**2))**2 add (8)**2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 + 6 + 2 + 10 + 9 - 1 + 4 - 3 - 1 + 10 + 6 + 14 + 13 + 3 + 8 + 1 + 3 + 14 + 10 + 18 + 17 + 7 + 12 + 5 + 7 + 18 + 14 + 22 + 21 + 11 + 16", "x2": "sub mod n sqr n add x_0_4 sqr sign n", "tree": "((n mod (n)**2) sub (x_0_4 add (sign(n))**2))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 - 6 + 7 + 8 - 1 + 11 + 10 + 24 + 23 + 40 + 55 + 55 + 74 + 108 + 110 + 144 + 175 + 198 + 231 + 241 + 295 + 322 + 348 + 381 + 423 + 459 + 532 + 548 + 599 + 668", "x2": "add sub sqr add n mod INT+ 1 0 INT- 7 mod mod x_0_2 x_0_3 add relu INT+ 1 0 n INT+ 8", "tree": "((((n add (10 mod -7)))**2 sub ((x_0_2 mod x_0_3) mod (relu(10) add n))) add 8)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 4 - 1 - 9 - 4 + 3 - 8 + 0 + 16 + 1 + 16 + 4 + 81 + 9 + 4 + 25 + 81 + 0 + 256 + 225 + 256 + 0 + 144 + 9 + 64 + 361 + 169 + 100 + 441 + 225 + 36 + 324 + 576 + 4", "x2": "relu relu sqr mod sub x_0_3 x_0_6 n", "tree": "relu(relu((((x_0_3 sub x_0_6) mod n))**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 3 + 9 - 2 - 7 + 1 - 8 - 1 + 85 + 105 + 120 + 152 + 177 + 203 + 233 + 264 + 212 + 227 + 249 + 256 + 272 + 289 + 304 + 320 + 421 + 457 + 488 + 536 + 577 + 619 + 665 + 712 + 676 + 707 + 745", "x2": "add add relu n sub abs INT- 8 n sub sqr n relu x_0_8", "tree": "((relu(n) add (abs(-8) sub n)) add ((n)**2 sub relu(x_0_8)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 1 - 3 - 7 + 6 + 3 + 6 + 0 - 7 + 6 + 0 - 2 - 8 - 2 + 0 + 0 - 14 + 0 + 0 + 0 - 8 - 4 + 0 + 0 + 0 + 0 + 0 + 0 - 3 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 6 + 0", "x2": "mod mul x_0_8 mod abs n INT+ 5 sub mul relu INT- 1 0 sign x_0_11 n", "tree": "((x_0_8 mul (abs(n) mod 5)) mod ((relu(-10) mul sign(x_0_11)) sub n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 6 - 6 - 3 - 4 - 5 - 6 - 7 - 8 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15 - 16 - 16 - 17 - 18 - 19 - 20 - 21 - 22 - 23 - 24 - 24 - 25 - 26", "x2": "sub add sqr relu idiv INT+ 8 sub x_0_2 add INT+ 9 INT+ 8 idiv n INT+ 9 n", "tree": "(((relu((8 idiv (x_0_2 sub (9 add 8)))))**2 add (n idiv 9)) sub n)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 10 + 8 - 7 - 7 + 9 + 17 + 16 + 2 + 3 + 20 + 29 + 29 + 16 + 18 + 36 + 46 + 47 + 35 + 38 + 57 + 68 + 70 + 59 + 63 + 83 + 95 + 98 + 88 + 93 + 114 + 127", "x2": "relu add n x_0_5", "tree": "relu((n add x_0_5))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 10 + 3 + 4 + 6 + 10 + 9 + 13 + 16 + 14 + 13 + 17 + 20 + 18 + 17 + 21 + 24 + 22 + 21 + 25 + 28 + 26 + 25 + 29 + 32 + 30 + 29 + 33 + 36", "x2": "add mod sub INT+ 8 x_0_2 idiv mod sub sign mul INT+ 4 n n mul n n relu n n", "tree": "(((8 sub x_0_2) mod (((sign((4 mul n)) sub n) mod (n mul n)) idiv relu(n))) add n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 3 - 10 - 3 + 4 + 8 + 7 + 78 + 33 + 54 + 107 + 79 + 1079 + 481 + 849 + 1803 + 1405 + 2 483 + 9601 + 1 7809 + 3 9645 + 3 2293 + 49 1569 + 24 1 + 46 3009 + 107 389 + 90 4177 + 1425 5473 + 720 1 + 1435 3249 + 3425 2417 + 2983 7809 + 4 8468 6049 + 2 5200 1", "x2": "add sub x_0_5 relu INT- 5 mul relu n abs sub sign x_0_7 x_0_5", "tree": "((x_0_5 sub relu(-5)) add (relu(n) mul abs((sign(x_0_7) sub x_0_5))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 + 2 + 8 - 5 + 0 + 9 - 1 + 0 - 2 + 0 - 1 + 0 - 3 - 1 + 0 - 2 + 0 - 1 + 0 - 3 - 1 + 0 - 2 + 0 - 1 + 0 - 3 - 1 + 0 - 2 + 0 - 1 + 0 - 3", "x2": "mod x_0_7 sub add sub INT- 5 n n sign INT- 7", "tree": "(x_0_7 mod (((-5 sub n) add n) sub sign(-7)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 1 + 10 + 2 + 8 + 0 + 4 - 7 + 9 + 1 - 5 - 20 - 19 + 106 + 39 + 192 - 17 - 146 + 1276 + 196 + 132 + 6323 + 3757 + 2351 - 66 9521 - 14 6276 - 45 75 - 1138 2004 - 2135 7347 + 5 7430 4602 + 22 3087 4125 + 28 1917 696 - 3 6313 2795 4218 - 8 3813 9406 1360 - 6 6278 7028 9874 - 243 1250 3232 4067 6261 - 122 5996 7977 2051 9329", "x2": "sub mul x_0_11 sub INT+ 7 x_0_3 n", "tree": "((x_0_11 mul (7 sub x_0_3)) sub n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 1 + 2 - 4 + 5 + 5 - 5 + 1 + 3 - 8 - 12 - 10 - 2 - 13 - 18 - 11 - 21 - 37 - 40 - 31 - 35 - 52 - 51 - 55 - 82 - 102 - 97 - 93 - 115 - 132 - 136 - 168 - 216 - 232 - 224", "x2": "sub add x_0_8 x_0_7 n", "tree": "((x_0_8 add x_0_7) sub n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 2 + 1 - 5 + 3 - 1 - 2 - 52 + 77 + 96 + 117 - 136 + 165 + 192 - 5389 - 4 4020 - 6 1255 + 320 - 1 93 - 14 2384 + 437 + 480 + 525 + 572 + 621 + 672 + 725 - 71 8120 - 84 4339 - 98 6374 - 114 5485 - 132 2980 - 152 215", "x2": "mul INT+ 1 add INT- 4 mul n mod n sub abs INT+ 1 mul n add x_0_6 x_0_7", "tree": "(1 mul (-4 add (n mul (n mod (abs(1) sub (n mul (x_0_6 add x_0_7)))))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 6 - 28 - 165 - 916 - 5205 - 3 2526 - 23 83 - 184 4760 - 1660 9401 - 1 6610 4010 - 18 2715 8751 - 219 2592 5748 - 2850 3706 3285 - 3 9905 1892 4406 - 59 8577 8391 6715 - 957 7245 4273 2976 - 1 6281 3172 2654 4113 - 29 3063 7100 7789 9010 - 556 8210 4914 8021 1511 - 1 1136 4209 8296 439 220 - 23 3864 8406 4216 9238 9101 - 514 5026 4941 2772 3279 4478 - 1 1833 5609 3649 3763 5455 2835 - 28 4005 4624 7585 325 959 9816 - 710 136 5618 9625 8127 4038 6025 - 1 8460 3550 6093 271 1312 5049 3626 - 49 8429 5866 4511 7320 5437 6385 9343", "x2": "sub mul n x_0_1 sqr sqr n", "tree": "((n mul x_0_1) sub ((n)**2)**2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 6 + 6 + 6", "x2": "idiv n abs sqr INT+ 2", "tree": "(n idiv abs((2)**2))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 7 + 19 + 46 + 105 + 232 + 504 + 1081 + 2299 + 4855 + 1 197 + 2 1322 + 4 4422 + 9 2263 + 19 1118 + 39 4979 + 81 4646 + 167 7214 + 344 7608 + 707 6671 + 1450 7177 + 2970 5173 + 6076 583 + 1 2416 2932 + 2 5349 9321 + 5 1713 8616 + 10 5416 7180", "x2": "add sub sub x_0_1 sign idiv sign n INT- 7 idiv abs x_0_1 sub INT+ 1 n x_0_1", "tree": "(((x_0_1 sub sign((sign(n) idiv -7))) sub (abs(x_0_1) idiv (1 sub n))) add x_0_1)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 3 - 8 + 2 + 5 + 0 + 0 + 4 + 10 + 0 + 0 + 8 + 20 + 0 + 0 + 16 + 40 + 0 + 0 + 32 + 80 + 0 + 0 + 64 + 160 + 0 + 0 + 128 + 320 + 0 + 0", "x2": "relu mul sub sub sub abs n INT- 3 n sign relu relu x_0_2 x_0_4", "tree": "relu(((((abs(n) sub -3) sub n) sub sign(relu(relu(x_0_2)))) mul x_0_4))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 8 + 3 + 10 + 10 - 6 - 5 + 5 - 9 - 2 - 12 - 10 - 16 - 16 - 17 - 11 - 9 - 21 - 16 - 40 - 19 - 19 - 22 - 23 - 24 - 23 - 23 - 27 - 27 - 30 - 30 - 30 - 32 - 33 - 34 - 35", "x2": "sub mod n n sub n idiv n sub INT- 3 x_0_10", "tree": "((n mod n) sub (n sub (n idiv (-3 sub x_0_10))))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 10 - 2 + 0 + 5 + 6 - 8 - 8 + 2 + 2 + 2 + 0 - 2 + 0 + 2 + 0 + 0 + 2 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0", "x2": "sub sign idiv INT+ 3 x_0_9 mul sign add INT- 3 add idiv n INT- 1 0 sign n sign x_0_6", "tree": "(sign((3 idiv x_0_9)) sub (sign((-3 add ((n idiv -10) add sign(n)))) mul sign(x_0_6)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 6 - 9 - 5 + 0 + 149 + 224 + 124 - 1 - 3726 - 5601 - 3101 + 24 + 9 3149 + 14 24 + 7 7524 - 601 - 232 8726 - 350 601 - 193 8101 + 1 5024 + 5821 8149 + 8751 5024 + 4845 2524 - 37 5601 - 14 5545 3726 - 21 8787 5601 - 12 1131 3101 + 939 24 + 363 8634 3149 + 546 9689 24", "x2": "sub sign INT- 1 0 mul x_0_4 sqr abs INT- 5", "tree": "(sign(-10) sub (x_0_4 mul (abs(-5))**2))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 10 + 7 - 2 + 4 + 3 - 10 - 8 - 3 - 7 + 957 + 1429 + 1172 - 11 + 889 + 757 - 11 - 11 - 11 - 11 + 42 2026 + 69 1625 + 61 9977 - 11 + 55 5614 + 51 1721 - 11 - 11 - 11 - 11 + 4 556 6975 + 7 822 3989 + 6 7515 4942 - 11 + 6 8062 7139 + 6 6319 405", "x2": "sub mod INT- 1 0 mul x_0_10 sqr n relu sign mul n mod relu idiv INT+ 1 0 x_0_8 n", "tree": "((-10 mod (x_0_10 mul (n)**2)) sub relu(sign((n mul (relu((10 idiv x_0_8)) mod n)))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 7 + 2 + 0 - 16 - 7 - 9 - 25 - 16 - 18 - 34 - 25 - 27 - 43 - 34 - 36 - 52 - 43 - 45 - 61 - 52 - 54 - 70 - 61 - 63 - 79 - 70 - 72 - 88 - 79", "x2": "add INT- 9 x_0_3", "tree": "(-9 add x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 0 - 4 - 3 + 1 + 1 + 5 + 4 + 2 + 2 + 6 + 5 + 3 + 3 + 7 + 6 + 4 + 4 + 8 + 7 + 5 + 5 + 9 + 8 + 6 + 6 + 10 + 9 + 7 + 7", "x2": "add sign x_0_1 idiv abs x_0_4 abs sign INT- 7", "tree": "(sign(x_0_1) add (abs(x_0_4) idiv abs(sign(-7))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 4 - 9 + 6 + 10 + 9 + 30 + 50 + 57 + 79 + 105 + 130 + 176 + 242 + 315 + 410 + 531 + 677 + 869 + 1127 + 1458 + 1884 + 2431 + 3124 + 4009 + 5152 + 6626 + 8526 + 1 973 + 1 4113 + 1 8138 + 2 3306", "x2": "add add x_0_2 add sqr sqr INT- 2 sub x_0_6 relu x_0_2 x_0_1", "tree": "((x_0_2 add (((-2)**2)**2 add (x_0_6 sub relu(x_0_2)))) add x_0_1)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 9 + 10 + 2 + 4 + 10 + 10 + 7 + 5 + 11 + 12 + 11 + 7 + 14 + 14 + 13 + 12 + 19 + 18 + 16 + 22 + 28 + 25 + 29 + 41 + 44 + 45 + 33 + 47 + 50", "x2": "add x_0_4 mod abs add INT- 9 x_0_3 n", "tree": "(x_0_4 add (abs((-9 add x_0_3)) mod n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 5 + 21 + 0 + 0 + 42 + 49 + 24 + 0 + 70 + 77 + 36 + 0 + 98 + 105 + 48 + 0 + 126 + 133 + 60 + 0 + 154 + 161 + 72 + 0 + 182 + 189 + 84", "x2": "mul mod add sqr relu x_0_2 INT- 9 INT+ 8 n", "tree": "((((relu(x_0_2))**2 add -9) mod 8) mul n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 3 + 5 + 5 + 7 + 7 + 9 + 9 + 11 + 11 + 13 + 13 + 15 + 15 + 17 + 17 + 19 + 19 + 21 + 21 + 23 + 23 + 25 + 25 + 27 + 27 + 29", "x2": "sub n idiv sub sign idiv x_0_1 mod sub abs x_0_1 INT+ 6 idiv INT- 1 x_0_1 n x_0_1", "tree": "(n sub ((sign((x_0_1 idiv ((abs(x_0_1) sub 6) mod (-1 idiv x_0_1)))) sub n) idiv x_0_1))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 2 + 10 - 8 + 5 - 1 - 9 + 8 + 3 - 7 - 9 - 36 - 35 - 37 - 35 - 35 - 37 - 37 - 38 - 39 - 35 - 38 - 35 - 38 - 35 - 35 - 36 - 37 - 37 - 38 - 35 - 39 - 35 - 37 - 35 - 35 - 38", "x2": "add sub sign n abs sqr INT+ 6 mod mul abs n mul INT- 7 x_0_10 INT- 5", "tree": "((sign(n) sub abs((6)**2)) add ((abs(n) mul (-7 mul x_0_10)) mod -5))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 9 - 1 - 4 - 2 - 4 - 3 - 4 - 3 - 4 - 4 - 4 - 4 - 5 - 4 - 5 - 5 - 5 - 5 - 5 - 5 - 6 - 5 - 6 - 5 - 6 - 6 - 6", "x2": "idiv sub sub add n abs sqr sqr sign x_0_1 sign mod x_0_1 INT+ 6 x_0_1 x_0_1", "tree": "((((n add abs(((sign(x_0_1))**2)**2)) sub sign((x_0_1 mod 6))) sub x_0_1) idiv x_0_1)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 3 + 1 + 10 + 10 + 9 + 7 + 2 - 4 - 9 - 15 - 22 - 30 - 39 - 49 - 60 - 72 - 85 - 99 - 114 - 130 - 147 - 165 - 184 - 204 - 225 - 247 - 270 - 294 - 319", "x2": "sub x_0_1 sub abs relu add n sign sub x_0_4 n INT+ 4", "tree": "(x_0_1 sub (abs(relu((n add sign((x_0_4 sub n))))) sub 4))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 2 + 0 + 4 - 5 - 32 - 9 + 7 - 26 - 1 - 118 - 7 - 158 + 13 - 37 - 241 + 3 - 304 + 5 - 379 - 421 - 463 - 507 - 553 - 601 - 651 - 703 - 757 - 813 - 871 - 931", "x2": "sub n mod sub sqr n idiv INT+ 8 x_0_1 add abs mul x_0_2 x_0_5 n", "tree": "(n sub (((n)**2 sub (8 idiv x_0_1)) mod (abs((x_0_2 mul x_0_5)) add n)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 3 + 8 + 4 + 11 + 11 + 11 + 18 + 18 + 18 + 25 + 25 + 25 + 32 + 32 + 32 + 39 + 39 + 39 + 46 + 46 + 46 + 53 + 53 + 53 + 60 + 60 + 60", "x2": "sub mul INT- 7 idiv sub add n INT+ 1 idiv INT+ 7 INT- 5 INT- 3 sub mod sub INT- 3 INT- 7 add n x_0_1 INT- 6", "tree": "((-7 mul (((n add 1) sub (7 idiv -5)) idiv -3)) sub (((-3 sub -7) mod (n add x_0_1)) sub -6))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 1 - 3 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 54 - 216 - 486 - 864 - 1350 - 1944 - 2646 - 3456 - 4374 - 5400 - 6534 - 7776 - 9126 - 1 584 - 1 2150 - 1 3824 - 1 5606 - 1 7496 - 1 9494 - 2 1600 - 2 3814 - 2 6136 - 2 8566 - 3 1104 - 3 3750 - 3 6504", "x2": "mul mul INT- 9 sqr n INT+ 6", "tree": "((-9 mul (n)**2) mul 6)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 4 - 6 + 5 + 7 - 4 + 5 - 1 + 2 - 78 - 14 - 32 - 22 - 47 - 12 - 22 + 1 + 0 - 6081 - 194 - 1020 - 481 - 2207 - 140 - 481 + 1 + 4 - 3697 8558 - 3 7634 - 104 396 - 23 1358 - 487 847 - 1 9596 - 23 1358 + 1", "x2": "add relu mod INT- 8 INT+ 5 sub mod sub INT+ 5 abs n INT+ 3 sqr abs x_0_9", "tree": "(relu((-8 mod 5)) add (((5 sub abs(n)) mod 3) sub (abs(x_0_9))**2))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 - 7 + 6 + 2 + 3 - 10 + 3 + 9 + 8 + 100 + 225 + 900 + 784 + 961 + 400 + 1225 + 1849 + 1936 + 1 9044 + 7 225 + 88 7364 + 68 5584 + 101 4049 + 20 704 + 162 5625 + 361 3801 + 396 100 + 3 6481 0 + 49 3970 89 + 7875 2135 5776 + 4701 1043 7316 + 1 284 2517 6769 + 403 859 2900 + 2 6428 7773 249 + 13 600 6360 4641", "x2": "sqr add abs add n x_0_9 abs relu n", "tree": "((abs((n add x_0_9)) add abs(relu(n))))**2", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 5 + 1 - 4 + 2 - 3 - 9 - 4 + 4 + 4 + 0 + 3 + 1 + 2 + 8 + 3 + 3 + 3 - 1 + 2 + 0 + 1 + 7 + 2 + 2 + 2 + 0 + 1 - 1 + 0 + 6 + 1 + 1 + 1", "x2": "add abs x_0_8 idiv INT- 8 sub n relu sub sub INT+ 5 add n n relu n", "tree": "(abs(x_0_8) add (-8 idiv (n sub relu(((5 sub (n add n)) sub relu(n))))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 8 + 3 + 4 + 4 + 5 + 6 + 6 + 7 + 8 + 9 + 10 + 10 + 11 + 12 + 13 + 14 + 14 + 15 + 16 + 17 + 18 + 18 + 19 + 20 + 21 + 22 + 22", "x2": "add n idiv mod x_0_2 relu n mul sign sign abs INT+ 7 mod INT- 4 INT- 1 0", "tree": "(n add ((x_0_2 mod relu(n)) idiv (sign(sign(abs(7))) mul (-4 mod -10))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 2 + 25 + 25 + 25 + 36 + 36 + 64 + 64 + 100 + 100 + 144 + 144 + 196 + 196 + 256 + 256 + 324 + 324 + 400 + 400 + 484 + 484 + 576 + 576 + 676 + 676 + 784", "x2": "sqr sub INT+ 3 mod x_0_2 sub sub add INT- 1 x_0_2 n idiv add relu x_0_1 x_0_2 x_0_1", "tree": "((3 sub (x_0_2 mod (((-1 add x_0_2) sub n) sub ((relu(x_0_1) add x_0_2) idiv x_0_1)))))**2", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 21 + 63 - 189 + 567 - 1701 + 5103 - 1 5309 + 4 5927 - 13 7781 + 41 3343 - 124 29 + 372 87 - 1116 261 + 3348 783 - 1 44 2349 + 3 132 7047 - 9 398 1141 + 27 1194 3423 - 81 3583 269 + 244 749 807 - 732 2247 2421 + 2196 6741 7263 - 6590 225 1789 + 1 9770 675 5367 - 5 9310 2026 6101 + 17 7930 6079 8303", "x2": "sub mod relu sqr add relu relu x_0_1 mul x_0_1 x_0_1 INT+ 1 mul x_0_1 INT+ 3", "tree": "((relu(((relu(relu(x_0_1)) add (x_0_1 mul x_0_1)))**2) mod 1) sub (x_0_1 mul 3))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 1 - 6 - 10 + 9 + 2 + 44 + 24 + 105 + 107 + 235 + 205 + 431 + 484 + 816 + 755 + 1338 + 1562 + 2369 + 2172 + 3630 + 4406 + 6289 + 5521 + 9137 + 1 1713 + 1 5957 + 1 2932 + 2 1954 + 3 509 + 3 9686 + 2 8098", "x2": "sub mul sub sign x_0_3 INT- 2 x_0_4 add INT+ 9 sub x_0_6 relu sqr n", "tree": "(((sign(x_0_3) sub -2) mul x_0_4) sub (9 add (x_0_6 sub relu((n)**2))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 1 - 3 - 1 + 0 + 2 + 2 + 5 + 10 + 11 + 8 + 18 + 20 + 14 + 20 + 23 + 26 + 21 + 26 + 31 + 40 + 29 + 38 + 55 + 32 + 49 + 56 + 35 + 68 + 81", "x2": "sub add n x_0_3 mod mod sub INT+ 2 x_0_3 n n", "tree": "((n add x_0_3) sub (((2 sub x_0_3) mod n) mod n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 10 + 10 + 2 - 1 - 1 - 10 - 1 - 80 + 90 + 20 - 11 - 12 - 130 - 14 - 1200 + 1440 + 340 - 198 - 228 - 2600 - 294 - 2 6400 + 3 3120 + 8160 - 4950 - 5928 - 7 200 - 8232 - 76 5600 + 99 3600 + 25 2960 - 15 8400 - 19 5624", "x2": "mul n x_0_7", "tree": "(n mul x_0_7)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 3 + 0 + 4 + 1 - 3 + 0 + 4 + 1 - 3 + 0 + 4 + 1 - 3 + 0 + 4 + 1 - 3 + 0 + 4 + 1 - 3 + 0 + 4 + 1 - 3 + 0 + 4", "x2": "sub sub sign n x_0_2 sub n n", "tree": "((sign(n) sub x_0_2) sub (n sub n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 6 + 7 + 4 + 11 + 13 + 11 + 19 + 22 + 21 + 30 + 34 + 34 + 44 + 49 + 50 + 61 + 67 + 69 + 81 + 88 + 91 + 104 + 112 + 116 + 130 + 139 + 144 + 159", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 2 + 5 - 5 + 8 + 3 + 12 + 2 + 15 + 10 + 19 + 9 + 22 + 17 + 26 + 16 + 29 + 24 + 33 + 23 + 36 + 31 + 40 + 30 + 43 + 38 + 47 + 37 + 50 + 45", "x2": "add add sign abs sqr INT+ 5 mod abs INT+ 6 n x_0_4", "tree": "((sign(abs((5)**2)) add (abs(6) mod n)) add x_0_4)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 4 + 3 + 7 - 2 - 10 + 9 - 6 + 8 + 2 + 3 + 0 + 0 + 0 + 0 + 0 - 1 - 1 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv sub add x_0_12 idiv sub n mul idiv INT+ 7 sub x_0_5 n x_0_3 n INT+ 1 n", "tree": "(((x_0_12 add ((n sub ((7 idiv (x_0_5 sub n)) mul x_0_3)) idiv n)) sub 1) idiv n)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 2 - 4 + 8 - 6 - 9 - 2 + 1 + 17 + 1 + 3 + 1 + 1 + 1 + 38 + 1 + 1 + 1 + 21 + 1 + 19 + 1 + 1 + 1 + 376 + 1 + 1 + 1 + 349 + 1 + 347 + 1 + 318", "x2": "add relu sub mul x_0_6 x_0_4 n idiv n n", "tree": "(relu(((x_0_6 mul x_0_4) sub n)) add (n idiv n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 18 + 108 - 648 + 3888 - 2 3328 + 13 9968 - 83 9808 + 503 8848 - 3023 3088 + 1 8139 8528 - 10 8839 1168 + 65 3034 7008 - 391 8208 2048 + 2350 9249 2288 - 1 4105 5495 3728 + 8 4633 2972 2368 - 50 7799 7833 4208 + 304 6798 7000 5248 - 1828 792 2003 1488 + 1 968 4753 2018 8928 - 6 5810 8519 2113 3568 + 39 4865 1115 2680 1408 - 236 9190 6691 6080 8448 + 1421 5144 149 6485 688 - 8529 864 897 8910 4128 + 5 1174 5184 5387 3462 4768", "x2": "mul INT- 6 x_0_1", "tree": "(-6 mul x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 + 2 + 2 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12 + 12", "x2": "abs sub x_0_1 add INT- 3 relu n", "tree": "abs((x_0_1 sub (-3 add relu(n))))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 10 + 1 - 1 - 10 + 7 - 2 + 7 + 20 + 3 + 4 + 50 + 42 + 14 + 56 + 180 + 30 + 44 + 600 + 546 + 196 + 840 + 2880 + 510 + 792 + 1 1400 + 1 920 + 4116 + 1 8480 + 6 6240 + 1 2240 + 1 9800 + 29 6400 + 29 4840", "x2": "mul add INT- 6 n abs x_0_7", "tree": "((-6 add n) mul abs(x_0_7))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 1 - 6 - 1 + 1 + 2 + 10 + 0 - 2 + 3 - 6 + 1 + 36 + 1 + 1 + 4 + 100 + 0 + 4 + 9 + 36 + 1 + 1296 + 1 + 1 + 16 + 1 0 + 0 + 16 + 81 + 1296 + 1 + 167 9616 + 1 + 1 + 256 + 1 0 0", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 9 - 2 - 8 + 1 + 3 + 3 + 5 + 7 + 9 + 10 + 11 + 0 + 13 + 14 + 15 + 16 + 0 + 18 + 19 + 0 + 0 + 21 + 23 + 24 + 0 + 26 + 27 + 0 + 0", "x2": "mod idiv sub add x_0_2 INT- 4 sub abs add INT- 1 0 add x_0_4 sub x_0_3 x_0_1 idiv x_0_1 n n n", "tree": "((((x_0_2 add -4) sub (abs((-10 add (x_0_4 add (x_0_3 sub x_0_1)))) sub (x_0_1 idiv n))) idiv n) mod n)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 9 - 4 + 9 - 10 + 7 - 7 - 6 + 612 + 468 + 36 + 756 + 180 + 720 + 720 - 2 1492 - 1 6272 - 684 - 2 6568 - 5796 - 2 5200 - 2 5164 + 77 4504 + 58 6620 + 2 5488 + 95 7348 + 20 9592 + 90 8172 + 90 6912 - 2788 1100 - 2111 7240 - 91 6452 - 3446 3376 - 754 4124", "x2": "mul sqr INT+ 6 sub n x_0_7", "tree": "((6)**2 mul (n sub x_0_7))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 1 - 19 + 16 + 60 - 140 - 220 + 1200 + 560 - 1 1360 + 5760 + 11 9200 - 18 8320 - 136 1280 + 399 7760 + 1642 1440 - 8038 5600 - 1 9877 8880 + 16 4571 9680 + 21 3107 9040 - 350 4547 2640 - 97 718 7200 + 7807 758 5280 - 5574 4227 9680 - 18 1795 3976 7040 + 32 1155 9675 9040 + 440 5524 3718 4000 - 1307 6735 4967 8080", "x2": "sub mul sub mod abs sub mul add INT- 4 INT+ 8 INT+ 5 INT+ 1 0 INT+ 3 relu n x_0_2 x_0_1", "tree": "((((abs((((-4 add 8) mul 5) sub 10)) mod 3) sub relu(n)) mul x_0_2) sub x_0_1)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 6 + 8 + 2 + 1 + 7 + 8 + 5 + 4 + 7 + 8 + 6 + 6 + 7 + 8 + 7 + 7 + 7 + 8 + 7 + 7 + 7 + 8 + 7 + 7 + 7 + 8 + 7 + 7 + 7 + 8", "x2": "add abs idiv x_0_4 INT+ 2 abs add INT+ 4 INT- 8", "tree": "(abs((x_0_4 idiv 2)) add abs((4 add -8)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 7 - 6 - 8 + 9 - 7 - 8 - 42 - 42 - 64 + 81 - 70 - 88 - 504 - 546 - 896 + 1215 - 1120 - 1496 - 9072 - 1 374 - 1 7920 + 2 5515 - 2 4640 - 3 4408 - 21 7728 - 25 9350 - 46 5920 + 68 8905 - 68 9920 - 99 7832 - 653 1840 - 803 9850", "x2": "mul x_0_6 relu mod sign INT- 7 n", "tree": "(x_0_6 mul relu((sign(-7) mod n)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 9 + 2 - 7 + 4 + 4 + 2 + 6 + 2 + 4 + 10 + 4 + 1 + 12 + 2 + 0 + 7 + 4 + 7 + 12 + 20 + 6 + 1 + 16 + 2 + 6 + 17 + 16 + 17 + 10", "x2": "abs mod mul add add x_0_4 mul sub mod INT- 3 add n sqr n INT- 1 0 n INT+ 4 INT- 2 n", "tree": "abs(((((x_0_4 add (((-3 mod (n add (n)**2)) sub -10) mul n)) add 4) mul -2) mod n))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 0 - 10 - 1 + 3 + 4 + 5 + 1 + 2 + 3 + 9 + 0 + 1 + 2 + 13 + 14 + 0 + 1 + 2 + 18 + 19 + 0 + 1 + 2 + 23 + 24 + 0 + 1 + 2", "x2": "mod add INT- 3 add n sqr abs INT+ 1 sub abs mod n sign x_0_1 sub x_0_3 n", "tree": "((-3 add (n add (abs(1))**2)) mod (abs((n mod sign(x_0_1))) sub (x_0_3 sub n)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 2 + 0 - 10 + 6 - 10 + 46 + 38 + 36 + 26 + 42 + 26 + 82 + 74 + 72 + 62 + 78 + 62 + 118 + 110 + 108 + 98 + 114 + 98 + 154 + 146 + 144 + 134 + 150 + 134 + 190 + 182", "x2": "add sqr INT+ 6 x_0_6", "tree": "((6)**2 add x_0_6)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 8 + 3 - 6 - 4 + 7 + 5 + 9 + 5 + 1 + 4 + 1 + 1 + 1 + 2 + 2 + 9 + 2 + 1 + 2 + 1 + 1 + 1 + 1 + 1 + 6 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2", "x2": "add sign x_0_7 idiv n add INT+ 1 sqr idiv add n x_0_7 add sign n x_0_9", "tree": "(sign(x_0_7) add (n idiv (1 add (((n add x_0_7) idiv (sign(n) add x_0_9)))**2)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 7 + 2 + 1 + 1 - 2 - 1 - 3 + 7 - 4 + 9 + 6 + 10 + 8 + 7 + 6 + 5 + 7 + 7 + 5 + 8 + 7 + 7 + 8 + 7 + 7 + 8 + 7 + 7 + 8 + 7 + 7 + 8 + 7 + 7 + 8", "x2": "add sub sign mul mod x_0_7 INT+ 3 x_0_10 idiv abs x_0_4 x_0_3 INT+ 7", "tree": "((sign(((x_0_7 mod 3) mul x_0_10)) sub (abs(x_0_4) idiv x_0_3)) add 7)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 5 - 1 - 3 + 3 - 8 + 12 + 0 + 16 - 27 + 20 - 132 + 24 - 208 + 28 - 300 + 32 - 408 + 36 - 532 + 40 - 672 + 44 - 828 + 48 - 1000 + 52 - 1188 + 56 - 1392 + 60 - 1612", "x2": "mul mod INT+ 2 add sub relu x_0_2 x_0_5 INT- 2 n", "tree": "((2 mod ((relu(x_0_2) sub x_0_5) add -2)) mul n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 9 + 3 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0", "x2": "abs idiv sign sub x_0_2 mod n INT+ 2 INT+ 4", "tree": "abs((sign((x_0_2 sub (n mod 2))) idiv 4))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 - 10 - 9 + 3 + 8 + 4 - 8 + 177 + 123 + 240 + 240 + 141 + 105 + 150 + 267 - 1389 - 894 - 1938 - 1929 - 1029 - 696 - 1092 - 2136 + 1 2777 + 8331 + 1 7736 + 1 7664 + 9573 + 6585 + 1 158 + 1 9563 - 11 4645 - 7 4622", "x2": "add INT- 7 add mul sub INT+ 6 sub x_0_8 n INT+ 9 INT+ 4", "tree": "(-7 add (((6 sub (x_0_8 sub n)) mul 9) add 4))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 0 + 6 + 3 - 8 + 1 - 10 + 0 - 2 - 1 + 10 - 5 + 12 + 28 + 14 + 29 + 20 + 25 + 23 + 16 + 39 + 25 - 1 + 23 + 2 + 10 + 10 + 10 + 27 + 10 + 23 + 43 + 10 + 51 + 53 + 43 + 31 + 15", "x2": "add abs sub INT+ 6 mod x_0_12 n sub n x_0_9", "tree": "(abs((6 sub (x_0_12 mod n))) add (n sub x_0_9))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 3 + 9 - 1 + 5 - 9 - 6 + 9 - 6 - 2 - 18 - 21 - 30 - 26 - 67 - 69 - 128 - 122 - 263 - 261 - 519 - 505 - 1045 - 1027 - 2083 - 2037 - 4173 - 4091 - 8339 - 8165 - 1 6685 - 1 6347 - 3 3363 - 3 2677 - 6 6733 - 6 5371", "x2": "sub add idiv mul INT- 1 x_0_5 mul x_0_3 add x_0_9 n x_0_2 abs mul INT+ 2 x_0_4", "tree": "((((-1 mul x_0_5) idiv (x_0_3 mul (x_0_9 add n))) add x_0_2) sub abs((2 mul x_0_4)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 10 - 4 + 3 - 2 + 4 + 4 - 1 + 0 + 12 + 1 + 1 + 0 + 1 + 1 + 0 - 1 + 17 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 36 - 1 - 1 + 0 - 1 - 1 + 0 - 1 + 161", "x2": "idiv add sqr x_0_8 INT- 1 INT+ 8", "tree": "(((x_0_8)**2 add -1) idiv 8)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 1 + 2 + 16 + 16 + 1 + 100 + 841 + 3136 + 8281 + 1 7956 + 3 4225 + 5 9536 + 9 6721 + 14 8996 + 21 9961 + 31 3600 + 43 4281 + 58 6756 + 77 6161 + 100 8016 + 128 8225 + 162 3076 + 201 9241 + 248 3776 + 302 4121 + 364 8100 + 436 3921 + 518 176", "x2": "sqr sub mul n abs mod INT+ 1 add mod INT- 4 x_0_1 x_0_2 sqr sub sub INT+ 8 n n", "tree": "(((n mul abs((1 mod ((-4 mod x_0_1) add x_0_2)))) sub (((8 sub n) sub n))**2))**2", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 7 - 1 - 3 + 25 + 180 + 2058 + 3072 + 5670 + 2 3100 + 25 5915 + 45 1440 + 96 9891 + 454 2300 + 5759 9100 + 1 1559 912 + 2 8032 5376 + 14 7173 7276 + 207 9331 3005 + 462 3640 9200 + 1236 2354 2413 + 7123 2090 1116 + 10 9996 6264 7886 + 26 6321 7177 6960 + 77 2647 1409 6250 + 481 5289 2925 3788 + 8018 7540 7042 431 + 2 879 6226 7326 1296 + 6 4979 6245 5508 5015 + 43 3376 363 2856 3100", "x2": "mul mul mul sign relu n add mod INT- 9 x_0_4 mul abs n mod INT+ 6 x_0_2 n n", "tree": "(((sign(relu(n)) mul ((-9 mod x_0_4) add (abs(n) mul (6 mod x_0_2)))) mul n) mul n)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 2048 - 648 - 128 - 8 + 0 - 8 - 128 - 648 - 2048 - 5000 - 8 - 128 - 648 - 2048 - 5000 - 1 368 - 1 9208 - 3 2768 - 5 2488 - 8 0 - 1 368 - 1 9208 - 3 2768 - 5 2488 - 8 0 - 11 7128", "x2": "idiv idiv sqr sqr mul add n mod abs relu n INT- 1 0 INT+ 2 INT- 4 INT+ 8", "tree": "((((((n add (abs(relu(n)) mod -10)) mul 2))**2)**2 idiv -4) idiv 8)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 6 + 6 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0", "x2": "mod x_0_3 INT+ 6", "tree": "(x_0_3 mod 6)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 2 + 9 + 8 + 8 + 1 + 2 + 2 + 9 + 8 + 8 + 1 + 2 + 2 + 9 + 8 + 8 + 1 + 2 + 2 + 9 + 8 + 8 + 1 + 2 + 2 + 9 + 8 + 8", "x2": "abs sub relu relu x_0_3 INT+ 1 0", "tree": "abs((relu(relu(x_0_3)) sub 10))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 10 - 2 - 3 + 2 + 10 + 2 + 3 + 2 + 10 + 2 + 3 + 2 + 10 + 2 + 3 + 2 + 10 + 2 + 3 + 2 + 10 + 2 + 3 + 2 + 10 + 2 + 3 + 2 + 10", "x2": "relu abs x_0_4", "tree": "relu(abs(x_0_4))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 4 + 5 - 8 + 3 - 3 + 7 - 1 + 2 - 5 + 0 + 0 + 6 + 2 + 1 - 4 - 3 - 1 + 3 + 5 + 2 - 1 - 6 - 2 + 0 + 8 + 3 + 2 - 7 - 3", "x2": "add sub sign x_0_1 x_0_3 mod n INT+ 2", "tree": "((sign(x_0_1) sub x_0_3) add (n mod 2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 10 + 7 + 10 - 9 - 3 + 4 + 80 + 90 + 70 + 110 - 108 - 39 + 56 + 1200 + 1440 + 1190 + 1980 - 2052 - 780 + 1176 + 2 6400 + 3 3120 + 2 8560 + 4 9500 - 5 3352 - 2 1060 + 3 2928 + 76 5600 + 99 3600 + 88 5360 + 158 4000 - 176 616", "x2": "mul x_0_7 n", "tree": "(x_0_7 mul n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 5 + 0 - 9 - 5 - 6 - 8 - 9 - 11 - 12 - 13 - 13 - 13 - 15 - 17 - 19 - 19 - 20 - 20 - 22 - 23 - 25 - 27 - 27 - 29 - 31 - 32 - 32 - 33 - 33 - 35", "x2": "sub x_0_1 mod add n sub x_0_5 INT- 8 INT+ 3", "tree": "(x_0_1 sub ((n add (x_0_5 sub -8)) mod 3))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 6 - 5 - 5 + 1 + 81 + 0 + 0 + 0 + 1 + 6561 + 0 + 0 + 0 + 1 + 4304 6721 + 0 + 0 + 0 + 1 + 44 1161 6400 + 0 + 0 + 0 + 1 + 1823 9049 3184 + 0 + 0 + 0 + 1 + 4055 2697 6100", "x2": "relu sqr mod relu x_0_5 sqr sqr n", "tree": "relu(((relu(x_0_5) mod ((n)**2)**2))**2)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 7 + 10 + 0 + 5 - 5 - 1 + 3 + 2 + 5 + 0 + 5 + 2 + 5 + 7 + 5 + 5 + 7 + 7 + 12 + 12 + 10 + 12 + 14 + 19 + 24 + 22 + 22 + 26 + 4 + 13 + 15 + 12", "x2": "mod add x_0_5 x_0_6 n", "tree": "((x_0_5 add x_0_6) mod n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2", "x2": "mod n idiv n INT- 4", "tree": "(n mod (n idiv -4))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 7 + 3 - 2 + 13 - 8 + 11 + 2 - 3 + 20 - 17 + 18 + 5 - 20 + 39 - 34 + 17 + 28 - 57 + 78 - 47 - 8 + 91 - 138 + 137 - 40 - 93 + 234 - 267", "x2": "sub x_0_3 add mod mul add x_0_3 n n add sign n INT- 9 x_0_1", "tree": "(x_0_3 sub ((((x_0_3 add n) mul n) mod (sign(n) add -9)) add x_0_1))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702", "x2": "abs add sqr n n", "tree": "abs(((n)**2 add n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 5 + 2400 9977 - 7202 9913 - 2 4009 9675 - 10 841 8613 - 42 4976 4127 - 179 8346 5121 - 761 5961 4611 - 3225 9791 3565 - 1 3665 2725 8871 - 5 7886 8293 9049 - 24 5212 3500 5067 - 103 8735 9894 9317 - 440 156 679 2335 - 1863 9360 210 8657 - 7895 7595 9121 6963 - 3 3446 9743 4296 6509 - 14 1683 6569 3907 2999 - 60 181 6020 7524 8505 - 254 2410 652 1605 7019 - 1076 9821 8629 1546 6581 - 4562 1697 5168 5391 3343 - 1 9325 6611 9303 710 9953 - 8 1864 8145 2380 5834 3155 - 34 6784 9192 8825 1647 2573 - 146 9004 4916 7681 22 3447 - 622 2802 8859 9548 9335 6361", "x2": "add sqr sqr add INT+ 1 0 sub INT+ 1 sqr INT- 9 sub x_0_2 abs mul INT- 4 x_0_1", "tree": "((((10 add (1 sub (-9)**2)))**2)**2 add (x_0_2 sub abs((-4 mul x_0_1))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 - 5 - 4 - 10 + 10 + 8 + 20 - 20 - 16 - 40 + 40 + 32 + 80 - 80 - 64 - 160 + 160 + 128 + 320 - 320 - 256 - 640 + 640 + 512 + 1280 - 1280 - 1024 - 2560", "x2": "mul INT- 2 x_0_3", "tree": "(-2 mul x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4", "x2": "mod sqr n INT+ 8", "tree": "((n)**2 mod 8)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 2 - 7 - 14 - 23 - 34 - 47 - 62 - 79 - 98 - 119 - 142 - 167 - 194 - 223 - 254 - 287 - 322 - 359 - 398 - 439 - 482 - 527 - 574 - 623 - 674", "x2": "sub sub relu INT+ 4 INT+ 2 sqr n", "tree": "((relu(4) sub 2) sub (n)**2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 7 + 5 + 1 - 3 - 4 - 9 - 10 - 4 + 6 + 8 + 5 + 12 + 14 + 13 + 4 - 4 + 1 - 4 - 9 - 1 + 10 + 17 + 3 + 8 + 10 + 5 - 1 - 16 + 7 + 9 - 7 + 3 + 11", "x2": "mul INT+ 1 sub abs x_0_8 x_0_6", "tree": "(1 mul (abs(x_0_8) sub x_0_6))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 7 + 1 + 3 + 5 - 1 + 6 + 0 + 1 + 3 + 5 + 0 + 6 + 0 + 1 + 3 + 5 + 0 + 6 + 0 + 1 + 3 + 5 + 0 + 6 + 0 + 1 + 3 + 5 + 0 + 6 + 0 + 1", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 0 + 3 + 1 + 4 + 2 + 5 + 3 + 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12 + 15", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 7 + 9 + 3 - 5 - 6 - 3 - 2 + 2 + 8 + 10 + 4 + 1 + 1 + 1 + 1 + 3 + 9 + 11 + 5 + 2 + 2 + 2 + 2 + 4 + 10 + 12 + 6 + 3 + 3 + 3 + 3 + 5 + 11", "x2": "add relu x_0_8 mod sign INT+ 4 add INT+ 9 idiv n x_0_2", "tree": "(relu(x_0_8) add (sign(4) mod (9 add (n idiv x_0_2))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 3 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul INT- 2 sign x_0_2", "tree": "sign((-2 mul sign(x_0_2)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 3 + 6 - 8 - 6 - 5 - 6 - 9 + 5 + 8 + 14 + 6 - 1 - 2 + 5 + 19 + 8 - 5 - 21 - 5 + 24 + 58 + 18 - 26 - 73 - 2 + 92 + 144 + 1 - 157 - 169 + 50 + 380 + 333", "x2": "sub INT- 7 add sub x_0_3 mul x_0_3 idiv relu abs relu n x_0_3 x_0_8", "tree": "(-7 sub ((x_0_3 sub (x_0_3 mul (relu(abs(relu(n))) idiv x_0_3))) add x_0_8))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 1 - 6 + 8 + 3 + 6 + 12 - 1 + 5 + 3 - 2 + 12 + 7 + 10 + 16 + 3 + 9 + 7 + 2 + 16 + 11 + 14 + 20 + 7 + 13 + 11 + 6 + 20 + 15 + 18 + 24", "x2": "sub n x_0_4", "tree": "(n sub x_0_4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 9 + 9 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 11 + 11 + 11 + 11 + 11 + 11 + 11 + 11 + 11 + 11 + 11 + 11 + 12 + 11 + 12 + 12 + 12 + 12", "x2": "add idiv n x_0_1 INT+ 1 0", "tree": "((n idiv x_0_1) add 10)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 7 - 10 + 9 - 9 - 7 - 4 + 9 - 2 + 10 - 5 - 3 + 22 + 502 + 550 + 60 + 269 + 94 + 522 + 551 + 81 + 467 + 117 + 618 + 1 6176 + 1 7657 + 2 150 + 2 2069 + 2 5007 + 4 3176 + 4 7448 + 5 2918 + 5 8006 + 6 4311 + 8 6051 + 9 4104 + 10 3571", "x2": "sub add mul n sqr mod n x_0_11 x_0_5 idiv sign sub n sub sqr INT+ 6 n x_0_8", "tree": "(((n mul ((n mod x_0_11))**2) add x_0_5) sub (sign((n sub ((6)**2 sub n))) idiv x_0_8))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 - 2 + 72 + 51 + 48 + 32 + 28 + 25 + 22 + 20 + 18 + 17 + 16 + 15 + 14 + 13 + 12 + 11 + 11 + 10 + 10 + 9 + 9 + 9 + 8 + 8 + 8 + 7", "x2": "idiv sqr sub sub idiv add INT- 1 INT- 9 mul x_0_3 INT+ 5 INT- 9 INT- 7 n", "tree": "((((((-1 add -9) idiv (x_0_3 mul 5)) sub -9) sub -7))**2 idiv n)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 9 + 6 - 7 + 10 + 9 - 6 + 8 + 10 + 6 - 7 + 14 + 9 - 6 + 12 + 10 + 6 - 3 + 14 + 9 - 6 + 16 + 10 + 6 + 1 + 14 + 9 - 6 + 20 + 10 + 6 + 5 + 14 + 9 - 6 + 24", "x2": "add x_0_7 mod INT- 6 add sign mul sub x_0_10 abs x_0_4 INT+ 6 INT+ 4", "tree": "(x_0_7 add (-6 mod (sign(((x_0_10 sub abs(x_0_4)) mul 6)) add 4)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 4 + 6 + 26 + 66 + 146 + 306 + 626 + 1266 + 2546 + 5106 + 1 226 + 2 466 + 4 946 + 8 1906 + 16 3826 + 32 7666 + 65 5346 + 131 706 + 262 1426 + 524 2866 + 1048 5746 + 2097 1506 + 4194 3026 + 8388 6066 + 1 6777 2146 + 3 3554 4306 + 6 7108 8626", "x2": "add add x_0_1 x_0_1 sub relu abs abs INT+ 1 0 INT- 4", "tree": "((x_0_1 add x_0_1) add (relu(abs(abs(10))) sub -4))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 10 + 6 - 1 + 15 - 7 + 11 - 1 + 19 - 7 + 15 - 1 + 23 - 7 + 19 - 1 + 27 - 7 + 23 - 1 + 31 - 7 + 27 - 1 + 35 - 7 + 31 - 1", "x2": "sub INT+ 4 sub relu x_0_1 add idiv INT- 7 x_0_1 n", "tree": "(4 sub (relu(x_0_1) sub ((-7 idiv x_0_1) add n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 7 + 0 - 13 + 1 - 33 + 1 - 58 + 1 - 93 + 1 - 135 + 1 - 185 + 1 - 243 + 1 - 309 + 1 - 383 + 1 - 465 + 1 - 555 + 1 - 653 + 1 - 759 + 1", "x2": "sub sign add n sign x_0_1 mod idiv add sign idiv x_0_3 INT- 5 x_0_2 n sqr n", "tree": "(sign((n add sign(x_0_1))) sub (((sign((x_0_3 idiv -5)) add x_0_2) idiv n) mod (n)**2))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 9 - 12 - 18 - 26 - 36 - 48 - 62 - 78 - 96 - 116 - 138 - 162 - 188 - 216 - 246 - 278 - 312 - 348 - 386 - 426 - 468 - 512 - 558 - 606 - 656 - 708", "x2": "sub add INT- 7 sub n idiv mul n abs INT+ 1 mul sqr x_0_1 x_0_1 sqr n", "tree": "((-7 add (n sub ((n mul abs(1)) idiv ((x_0_1)**2 mul x_0_1)))) sub (n)**2)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 8 + 10 + 6 - 14 - 9 + 11 + 4 - 17 - 8 + 14 + 2 - 14 - 7 + 10 - 3 - 13 - 2 + 9 + 5 - 14 - 11 + 8 + 9 - 12 - 16 + 5 + 11 - 9 - 18", "x2": "add sub idiv n INT- 6 INT+ 2 sub idiv n add INT- 4 add idiv n sqr x_0_1 add x_0_3 n x_0_2", "tree": "(((n idiv -6) sub 2) add ((n idiv (-4 add ((n idiv (x_0_1)**2) add (x_0_3 add n)))) sub x_0_2))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 9 + 6 + 6 + 1 - 1 + 4 - 6 + 8 + 4 + 1 + 3 + 0 + 1 + 1 + 1 + 4 + 13 + 16 + 1 + 9 + 0 + 1 + 1 + 1 + 16 + 13 + 13 + 1 + 23 + 0 + 1 + 1 + 1 + 18 + 29", "x2": "mod sqr x_0_9 n", "tree": "((x_0_9)**2 mod n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 3 + 1 - 9 + 5 - 3 + 1 - 9 + 5 - 3 + 1 - 9 + 5 - 3 + 1 - 9 + 5 - 3 + 1 - 9 + 5 - 3 + 1 - 9 + 5 - 3 + 1 - 9 + 5 - 3", "x2": "mul x_0_4 INT+ 1", "tree": "(x_0_4 mul 1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 1 + 3 - 1 + 1 + 10 - 5 + 5 + 10 + 7 + 12 + 11 + 7 + 21 + 11 + 9 + 12 + 10 + 12 + 14 + 10 + 14 + 16 + 16 + 17 + 17 + 17 + 20 + 19 + 19 + 20 + 20 + 21", "x2": "idiv sqr n add x_0_7 n", "tree": "((n)**2 idiv (x_0_7 add n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 10 - 12 - 15 - 18 - 23 - 29 - 35 - 41 - 47 - 57 - 67 - 77 - 87 - 96 - 111 - 126 - 140 - 153 - 165 - 185 - 204 - 222 - 239 - 254 - 279 - 303 - 325", "x2": "add x_0_1 sub idiv mul n sub INT+ 1 0 mod n INT+ 5 INT- 1 0 relu x_0_1", "tree": "(x_0_1 add (((n mul (10 sub (n mod 5))) idiv -10) sub relu(x_0_1)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 9 + 2 - 7 - 10 - 2 - 6 - 10 + 1 - 8 - 11 - 3 - 7 - 11 + 0 - 9 - 12 - 4 - 8 - 12 - 1 - 10 - 13 - 5 - 9 - 13 - 2 - 11 - 14 - 6 - 10 - 14 - 3", "x2": "add idiv sign n INT- 8 x_0_6", "tree": "((sign(n) idiv -8) add x_0_6)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 10 - 6 + 10 - 3 + 9 + 9 + 5 + 6 + 8 + 10 + 6 + 10 + 3 + 9 + 9 + 5 + 6 + 8 + 10 + 6 + 10 + 3 + 9 + 9 + 5 + 6 + 8 + 10 + 6 + 10 + 3 + 9 + 9 + 5 + 6", "x2": "abs x_0_9", "tree": "abs(x_0_9)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 7 - 8 - 8 + 1 + 0 + 2 - 1 - 14 - 14 - 30 - 36 - 25 - 28 - 28 - 33 - 48 - 50 - 68 - 76 - 67 - 72 - 74 - 81 - 98 - 102 - 122 - 132 - 125 - 132 - 136 - 145 - 164 - 170", "x2": "sub mul x_0_8 sign INT+ 8 add sqr relu x_0_5 mul n INT+ 2", "tree": "((x_0_8 mul sign(8)) sub ((relu(x_0_5))**2 add (n mul 2)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 - 8 - 8 - 9 + 10 + 0 + 5 + 9 - 12 + 0 + 14 + 1 + 30 + 22 - 13 + 14 - 2 - 5 + 62 + 26 + 9 + 40 - 45 - 9 + 77 + 10 + 82 + 77 - 96 + 10 + 23 - 38", "x2": "sub idiv sub INT- 9 x_0_4 n sub sub x_0_4 sqr relu idiv INT+ 1 n add x_0_6 n", "tree": "(((-9 sub x_0_4) idiv n) sub ((x_0_4 sub (relu((1 idiv n)))**2) sub (x_0_6 add n)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 4 + 6 - 7 - 6 + 10 + 2 + 10 - 5 - 3 - 2 - 15 + 1 - 11 + 1 - 4 - 12 - 11 - 24 - 8 - 20 - 8 - 13 - 21 - 20 - 33 - 17 - 29 - 17 - 22 - 30 - 29 - 42 - 26", "x2": "sub sub idiv mul sign INT+ 6 x_0_7 sign sign idiv sub add INT- 9 n x_0_8 n INT+ 5 INT+ 4", "tree": "((((sign(6) mul x_0_7) idiv sign(sign((((-9 add n) sub x_0_8) idiv n)))) sub 5) sub 4)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr mul add INT- 2 INT+ 3 n", "tree": "(((-2 add 3) mul n))**2", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 1 + 1 + 4 + 5 - 7 - 3 - 3 - 1 - 5 + 9 - 9 + 139 9490 + 188 2378 + 248 621 + 321 1263 + 409 2529 + 514 3812 + 638 5721 + 783 9992 + 952 9563 + 1147 8534 + 1371 2213 + 1625 7010 + 2054 110 + 2427 4197 + 2852 1225 + 3332 9402 + 3874 9293 + 4483 3807 + 5163 8245 + 5922 211 + 6763 9687 + 7695 8993 + 8724 2833 + 9855 8189 + 1 1237 3994 + 1 2644 5856", "x2": "add abs sqr mul mul sqr n INT- 7 idiv INT- 5 mul abs n n sub x_0_12 INT+ 5", "tree": "(abs(((((n)**2 mul -7) mul (-5 idiv (abs(n) mul n))))**2) add (x_0_12 sub 5))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 4 - 5 - 3 + 3 - 4 + 5 + 7 + 6 - 1 - 1 - 4 - 11 - 6 - 5 - 8 - 13 - 6 - 13 - 12 - 20 - 14 - 12 - 16 - 4 - 10 - 12 - 12 - 17 - 16 - 11 - 20 - 5 - 20 - 31", "x2": "mod mul abs sub n sqr INT- 2 add add INT+ 9 x_0_9 mul INT- 8 n sub relu x_0_3 n", "tree": "((abs((n sub (-2)**2)) mul ((9 add x_0_9) add (-8 mul n))) mod (relu(x_0_3) sub n))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 2 + 8 + 1 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "sqr add n abs sqr sign mod sub x_0_4 mod INT+ 7 sqr INT- 2 x_0_2", "tree": "((n add abs((sign(((x_0_4 sub (7 mod (-2)**2)) mod x_0_2)))**2)))**2", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 30 + 69 + 124 + 195 + 282 + 385 + 504 + 639 + 790 + 957 + 1140 + 1339 + 1554 + 1785 + 2032 + 2295 + 2574 + 2869 + 3180 + 3507 + 3850 + 4209 + 4584 + 4975 + 5382", "x2": "sub mul sqr n INT+ 8 n", "tree": "(((n)**2 mul 8) sub n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 10 + 9 - 40 + 45 - 240 + 315 - 1920 + 2835 - 1 9200 + 3 1185 - 23 400 + 40 5405 - 322 5600 + 608 1075 - 5160 9600 + 1 337 8275 - 9 2897 2800 + 19 6418 7225 - 185 7945 6000 + 412 4793 1725 - 4087 4803 2000 + 9487 242 9675 - 9 8099 5276 8000 + 23 7175 6074 1875 - 255 587 7196 8000 + 640 3741 4003 625 - 7141 6456 1510 4000", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 + 6 - 2 - 1 + 42 + 7 - 1 + 58 + 8 + 24 + 62 + 44 + 33 + 62 + 60 + 34 + 87 + 64 + 70 + 96 + 64 + 86 + 97 + 89 + 90 + 133 + 98 + 90 + 149", "x2": "add x_0_3 add sqr mod mul n INT+ 4 INT+ 7 mul x_0_3 relu INT- 2", "tree": "(x_0_3 add ((((n mul 4) mod 7))**2 add (x_0_3 mul relu(-2))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 2 - 4 + 0 - 9 - 10 - 13 - 12 - 20 - 29 - 41 - 52 - 71 - 99 - 139 - 190 - 260 - 358 - 496 - 685 - 944 - 1301 - 1796 - 2480 - 3423 - 4723 - 6518 - 8997 - 1 2419 - 1 7141 - 2 3658", "x2": "add sign sqr idiv mul x_0_4 n x_0_1 add x_0_4 x_0_1", "tree": "(sign((((x_0_4 mul n) idiv x_0_1))**2) add (x_0_4 add x_0_1))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 0 + 3 + 1 + 4 + 2 + 5 + 3 + 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12 + 15", "x2": "add n sub relu mod INT- 5 abs relu INT- 8 x_0_1", "tree": "(n add (relu((-5 mod abs(relu(-8)))) sub x_0_1))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 8 + 10 - 32 + 70 - 192 + 630 - 1536 + 6930 - 1 5360 + 9 90 - 18 4320 + 135 1350 - 258 480 + 2297 2950 - 4128 7680 + 4 3648 6050 - 7 4317 8240 + 91 6620 7050 - 148 6356 4800 + 2108 2276 2150 - 3269 9842 5600 + 5 2705 6905 3750 - 7 8479 6221 4400 + 142 3053 6445 1250 - 204 470 1757 4400 + 4126 8555 6908 6250 - 5713 3164 9208 3200", "x2": "mul abs add n add idiv n n sign x_0_2 x_0_2", "tree": "(abs((n add ((n idiv n) add sign(x_0_2)))) mul x_0_2)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 10 + 0 - 7 + 9 + 2 - 17 - 8 - 16 - 1 - 9 - 29 - 21 - 30 - 16 - 25 - 46 - 39 - 49 - 36 - 46 - 68 - 62 - 73 - 61 - 72 - 95 - 90 - 102 - 91 - 103 - 127", "x2": "sub x_0_5 add n sign INT+ 4", "tree": "(x_0_5 sub (n add sign(4)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 2 + 4 + 3 - 8 - 4 - 8 + 4 + 0 + 4 + 4 + 16 + 9 + 64 + 16 + 64 + 16 + 0 + 16 + 16 + 256 + 81 + 4096 + 256 + 4096 + 256 + 0 + 256 + 256 + 6 5536 + 6561 + 1677 7216 + 6 5536 + 1677 7216 + 6 5536", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 5 + 5 + 10 - 6 - 1 + 0 + 3 - 8 + 48 + 2344 + 549 4382 + 83 - 25 + 625 + 64 + 2382 + 549 4344 + 438 + 20 8247 + 3846 1320 + 667 + 2230 + 52 5843 + 911 + 22 4947 + 7692 1755 + 3761 + 145 9988 + 2 6975 5113 + 5611 + 24 589 + 8060 2689 + 1 172 + 303 4652", "x2": "add add sub n mul x_0_9 INT- 7 idiv abs sqr relu INT- 1 0 INT+ 8 mod x_0_6 sqr x_0_1", "tree": "(((n sub (x_0_9 mul -7)) add (abs((relu(-10))**2) idiv 8)) add (x_0_6 mod (x_0_1)**2))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 7 - 6 - 9 + 4 - 2 + 9 - 2 - 8 + 10 - 5 + 1 - 10 + 3 + 7 - 9 + 4 - 2 + 11 - 4 - 6 + 8 - 3 + 3 - 12 + 5 + 5 - 7 + 2 - 4 + 13 - 6 - 4 + 6 - 1", "x2": "sub sign x_0_9 x_0_6", "tree": "(sign(x_0_9) sub x_0_6)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 1 - 4 - 18 - 32 - 75 - 108 - 196 - 256 - 405 - 500 - 726 - 864 - 1183 - 1372 - 1800 - 2048 - 2601 - 2916 - 3610 - 4000 - 4851 - 5324 - 6348 - 6912 - 8125 - 8788", "x2": "mul mul idiv abs add idiv INT- 2 INT- 5 abs n INT- 2 n n", "tree": "(((abs(((-2 idiv -5) add abs(n))) idiv -2) mul n) mul n)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 5 - 1 - 7 - 1 + 4 - 1 + 6 + 12 + 8 + 16 + 23 + 20 + 29 + 37 + 35 + 45 + 54 + 53 + 64 + 74 + 74 + 86 + 97 + 98 + 111 + 123 + 125 + 139 + 152", "x2": "add x_0_3 idiv n sign relu add sub add INT+ 1 0 n n x_0_2", "tree": "(x_0_3 add (n idiv sign(relu((((10 add n) sub n) add x_0_2)))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 2 + 6 + 7 - 2 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign idiv relu INT+ 4 relu sign x_0_4", "tree": "sign((relu(4) idiv relu(sign(x_0_4))))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 6 + 24 + 51 + 174 + 483 + 1704 + 5571 + 2 910 + 7 6623 + 30 6636 + 122 6115 + 521 2386 + 2237 7999 + 1 56 3792 + 4 5861 1779 + 21 6819 6246 + 104 2320 8271 + 516 1893 6948 + 2600 8310 2371 + 1 3440 8077 8282 + 7 659 903 447 + 37 9797 6693 936 + 207 5615 8366 1667 + 1157 557 5693 5070 + 6553 6569 3213 8415 + 3 7794 1623 6938 5308 + 22 1296 5564 6926 931", "x2": "add relu add abs mod INT+ 9 INT- 4 mul abs x_0_2 add n sub n n x_0_1", "tree": "(relu((abs((9 mod -4)) add (abs(x_0_2) mul (n add (n sub n))))) add x_0_1)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 6 - 1 + 6 - 8 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "add sign idiv n x_0_6 sqr idiv INT+ 5 INT+ 8", "tree": "(sign((n idiv x_0_6)) add ((5 idiv 8))**2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 9 + 5 - 5 - 3 - 9 - 7 - 12 - 7 - 14 - 9 - 15 - 9 - 20 - 13 - 23 - 15 - 24 - 15 - 27 - 17 - 28 - 17 - 33 - 21 - 36 - 23 - 37 - 23 - 40 - 25", "x2": "add x_0_2 mod mod add idiv x_0_3 x_0_5 n INT- 1 0 INT- 6", "tree": "(x_0_2 add ((((x_0_3 idiv x_0_5) add n) mod -10) mod -6))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 0 + 5 - 3 + 2 - 1 - 4 + 65 + 4 + 25 + 28 + 9 + 36 + 41 + 484 + 9 + 284 + 215 + 212 + 73 + 116 + 3799 + 44 + 1527 + 1676 + 169 + 1092 + 759 + 2 9300 + 407 + 1 7084 + 1 3001 + 1 5732", "x2": "abs add mul sub relu idiv relu n mul x_0_6 n x_0_7 INT+ 8 x_0_2", "tree": "abs((((relu((relu(n) idiv (x_0_6 mul n))) sub x_0_7) mul 8) add x_0_2))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 7 + 7 + 6 - 6 + 0 - 2 + 3 - 2 - 7 - 30 + 26 - 22 + 100 - 55 + 4 - 554 + 499 - 959 + 2498 - 2183 + 2686 - 1 4968 + 1 4986 - 3 9083 + 7 9972 - 9 9659 + 15 6705 - 53 6579 + 61 3809 - 175 4670 + 318 1003 - 508 8288 + 855 3965 - 2398 5767 + 3089 1041", "x2": "add add mul x_0_6 n n add x_0_2 mul mul INT+ 3 x_0_10 INT+ 1", "tree": "(((x_0_6 mul n) add n) add (x_0_2 add ((3 mul x_0_10) mul 1)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 2 - 9 - 6 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298 + 6 + 216 + 2298", "x2": "mod x_0_3 sqr mul abs n idiv add abs INT+ 2 sub x_0_4 mod INT+ 5 INT+ 4 INT+ 1", "tree": "(x_0_3 mod ((abs(n) mul ((abs(2) add (x_0_4 sub (5 mod 4))) idiv 1)))**2)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3", "x2": "idiv n abs INT+ 8", "tree": "(n idiv abs(8))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 4 + 9 - 1 + 3 - 8 + 10 + 6 + 5 - 3 - 4 - 108 - 195 - 154 - 300 - 304 - 255 - 252 - 361 - 420 - 504 - 528 + 1817 + 3960 + 3075 + 6968 + 7317 + 6188 + 6293 + 9750 + 1 1873 + 1 4912 + 1 6137 + 6 418 + 13 7165 + 10 9188 + 25 6225", "x2": "mul n add sub abs x_0_11 n INT- 6", "tree": "(n mul ((abs(x_0_11) sub n) add -6))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 7 - 9 - 5 - 5 - 4 + 8 - 8 - 4 - 4 - 3 + 9 - 7 - 3 - 3 - 2 + 10 - 6 - 2 - 2 - 1 + 11 - 5 - 1 - 1 + 0 + 12 - 4 + 0 + 0 + 1 + 13", "x2": "add x_0_5 relu idiv n n", "tree": "(x_0_5 add relu((n idiv n)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 2 - 4 - 8 + 26 + 1 + 6 + 29 - 1 + 25 - 3 + 24 - 3 + 24 - 2 + 24 + 0 + 23 + 4 + 19 + 13 + 9 + 31 + 2 + 37 - 10 + 56 - 18 + 62 - 31", "x2": "add sub n x_0_1 abs add sub x_0_1 x_0_3 INT- 8", "tree": "((n sub x_0_1) add abs(((x_0_1 sub x_0_3) add -8)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 10 - 4 - 5 + 1 + 0 + 6 + 5 + 11 + 10 + 16 + 15 + 21 + 20 + 26 + 25 + 31 + 30 + 36 + 35 + 41 + 40 + 46 + 45 + 51 + 50 + 56 + 55 + 61", "x2": "sub x_0_2 INT- 5", "tree": "(x_0_2 sub -5)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 + 11 - 10 + 10 - 12 + 12 - 7 + 11 - 10 + 12 - 11 + 11 - 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8", "x2": "idiv add mod x_0_1 n mul INT+ 2 INT- 6 sign x_0_1", "tree": "(((x_0_1 mod n) add (2 mul -6)) idiv sign(x_0_1))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 6 - 4 - 8 + 4 - 6 - 7 + 8 + 9 - 10 + 11 + 12 - 13 - 14 + 15 - 16 - 17 + 18 + 19 - 20 + 21 + 22 - 23 - 24 + 25 - 26 - 27 + 28 + 29 - 30 + 31", "x2": "sub idiv n mul abs INT+ 5 abs INT- 8 idiv n sign x_0_5", "tree": "((n idiv (abs(5) mul abs(-8))) sub (n idiv sign(x_0_5)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 1 - 5 - 3 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 + 0 - 1", "x2": "mod add relu abs mod abs add n INT+ 1 INT- 3 x_0_4 INT- 2", "tree": "((relu(abs((abs((n add 1)) mod -3))) add x_0_4) mod -2)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 8 - 5 + 1 - 3 - 7 - 5 + 2 + 1 + 0 + 1 + 4 + 5 + 1 + 0 - 1 + 0 + 3 + 4 + 0 - 1 + 11 - 1 + 2 + 3 - 1 + 7 + 10 + 11 + 1 + 2 + 18 + 6", "x2": "sub mod x_0_6 add relu INT+ 1 0 x_0_4 sign n", "tree": "((x_0_6 mod (relu(10) add x_0_4)) sub sign(n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 2 + 4 + 8 + 12 + 18 + 24 + 32 + 40 + 50 + 60 + 72 + 84 + 98 + 112 + 128 + 144 + 162 + 180 + 200 + 220 + 242 + 264 + 288 + 312 + 338 + 364", "x2": "sub sub sqr n x_0_1 n", "tree": "(((n)**2 sub x_0_1) sub n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 + 1 + 10 + 8 + 4 + 4 + 9 - 8 - 8 - 1 - 8 - 1 - 1 - 10 - 1 - 4 - 4 - 1 - 8 - 2 - 1 - 8 - 1 - 1 - 10 - 1 - 4 - 4 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 10 - 1", "x2": "idiv abs abs x_0_11 x_0_4", "tree": "(abs(abs(x_0_11)) idiv x_0_4)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 1 + 10 + 9 - 8 + 3 - 8 - 10 + 5 - 6 - 191 - 232 - 276 - 326 - 392 - 451 - 514 - 581 - 652 - 727 - 806 - 889 - 976 - 1067 - 1162 - 1261 - 1364 - 1471 - 1582 - 1697 - 1816 - 1939 - 2066 - 2197 - 2332 - 2471", "x2": "idiv sub x_0_4 mul sqr n add add INT- 1 n n mul n sign relu x_0_9", "tree": "((x_0_4 sub ((n)**2 mul ((-1 add n) add n))) idiv (n mul sign(relu(x_0_9))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 - 1 - 7 - 3 + 11 - 1 + 7 + 35 + 11 + 27 + 83 + 35 + 67 + 179 + 83 + 147 + 371 + 179 + 307 + 755 + 371 + 627 + 1523 + 755 + 1267 + 3059 + 1523 + 2547 + 6131", "x2": "add idiv abs add INT+ 7 add x_0_3 INT+ 6 INT+ 1 x_0_3", "tree": "((abs((7 add (x_0_3 add 6))) idiv 1) add x_0_3)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 8 - 7 - 5 + 4 + 3 - 4 - 2 + 0 + 3 + 13 + 13 + 7 + 10 + 13 + 17 + 28 + 29 + 24 + 28 + 32 + 37 + 49 + 51 + 47 + 52 + 57 + 63 + 76 + 79 + 76 + 82 + 88", "x2": "sub n add sub sign sqr add n n add n x_0_6 n", "tree": "(n sub ((sign(((n add n))**2) sub (n add x_0_6)) add n))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 7 + 0 + 1 + 4 + 7 - 7 - 4 + 9 + 6 - 722 - 846 - 995 - 1883 - 2899 - 3354 - 3607 - 4829 - 8391 - 9335 - 8176 - 1 2119 - 1 3481 - 1 3491 - 1 8743 - 2 865 - 2 1445 - 2 8248 - 3 4273 - 3 6150 - 4 2159 - 5 2504 - 5 6132 - 6 2552 - 7 8562 - 8 4737", "x2": "add add x_0_3 add mul sqr n INT- 6 n mod x_0_10 x_0_4", "tree": "((x_0_3 add (((n)**2 mul -6) add n)) add (x_0_10 mod x_0_4))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 3 + 10 + 5 + 7 + 6 + 8 + 7 + 9 + 10 + 12 + 15 + 19 + 24 + 30 + 37 + 45 + 54 + 64 + 75 + 87 + 100 + 114 + 129 + 145 + 162 + 180 + 199", "x2": "add relu n abs sub abs INT+ 8 relu x_0_1", "tree": "(relu(n) add abs((abs(8) sub relu(x_0_1))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 2 + 7 - 2 - 10 - 6 - 6 - 13 - 6 - 15 - 6 - 17 - 6 - 32 - 6 - 36 - 6 - 40 - 6 - 63 - 6 - 69 - 6 - 75 - 6 - 106 - 6 - 114 - 6 - 122", "x2": "add n add INT- 9 sub add idiv idiv relu x_0_3 INT- 1 0 x_0_1 mul idiv n x_0_1 n idiv INT- 9 INT+ 3", "tree": "(n add (-9 add ((((relu(x_0_3) idiv -10) idiv x_0_1) add ((n idiv x_0_1) mul n)) sub (-9 idiv 3))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 + 0 + 3 + 10 - 4 - 6 + 1 + 9 + 36 + 169 + 1 + 9 + 16 + 144 + 1521 + 2 9584 + 16 + 144 + 361 + 2 1609 + 232 2576 + 8 7539 569 + 361 + 2 1609 + 13 2496 + 4 6707 8544 + 5 3943 7321 1241 + 76 6308 6535 4648 7184 + 13 2496 + 4 6707 8544 + 175 5598 5001 + 21 8162 3690 6763 1209", "x2": "relu sqr sub x_0_6 INT- 3", "tree": "relu(((x_0_6 sub -3))**2)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 3 + 11 + 20 + 46 + 91 + 189 + 378 + 764 + 1529 + 3067 + 6136 + 1 2282 + 2 4567 + 4 9145 + 9 8294 + 19 6600 + 39 3205 + 78 6423 + 157 2852 + 314 5718 + 629 1443 + 1258 2901 + 2516 5810 + 5033 1636 + 1 66 3281 + 2 132 6579 + 4 265 3168", "x2": "sub n sub sign mod INT- 7 x_0_1 add add x_0_2 relu x_0_1 x_0_2", "tree": "(n sub (sign((-7 mod x_0_1)) sub ((x_0_2 add relu(x_0_1)) add x_0_2)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 6 + 4 - 1 + 2 + 0 - 2 - 3 - 4 + 0 + 0 - 4 - 4 - 1 + 0 + 0 - 3 - 2 - 4 + 0 + 0 - 1 - 1 - 1 + 0 + 0 - 2 - 3 - 4 + 0 + 0", "x2": "mod add mul x_0_5 n INT+ 5 sub INT- 4 sign sign relu INT- 1 0", "tree": "(((x_0_5 mul n) add 5) mod (-4 sub sign(sign(relu(-10)))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 4 + 10 + 3 + 3 + 7 - 6 + 10 - 3 - 8 + 3 + 4 + 10 + 3 + 3 + 7 + 6 + 10 + 3 + 8 + 3 + 4 + 10 + 3 + 3 + 7 + 6 + 10 + 3 + 8 + 3 + 4 + 10 + 3 + 3 + 7", "x2": "abs x_0_10", "tree": "abs(x_0_10)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 10 - 9 - 35 - 34 - 60 - 59 - 85 - 84 - 110 - 109 - 135 - 134 - 160 - 159 - 185 - 184 - 210 - 209 - 235 - 234 - 260 - 259 - 285 - 284 - 310 - 309 - 335 - 334", "x2": "sub mod x_0_2 mul sqr n sub sign sub mod n INT- 6 x_0_2 sqr INT- 5 sqr INT- 5", "tree": "((x_0_2 mod ((n)**2 mul (sign(((n mod -6) sub x_0_2)) sub (-5)**2))) sub (-5)**2)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 7 + 6 - 4 - 1 - 4 + 2 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1", "x2": "sqr idiv sign idiv x_0_6 sign INT- 2 add INT+ 7 n", "tree": "((sign((x_0_6 idiv sign(-2))) idiv (7 add n)))**2", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 6 + 5 + 5 + 5 - 10 - 1 - 4 - 8 + 9 - 4 + 30 + 54 + 45 + 45 - 30 - 30 + 0 + 16 - 104 + 0 - 136 + 1740 + 2646 + 2205 - 1170 + 780 - 120 + 0 - 1600 - 416 + 0 - 23 7184 + 461 1000 + 584 5014 - 257 1030 - 91 7280", "x2": "mul x_0_11 add x_0_10 INT+ 4", "tree": "(x_0_11 mul (x_0_10 add 4))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 6 + 16 + 0 + 0 + 25 + 144 + 196 + 0 + 0 + 100 + 484 + 576 + 0 + 0 + 225 + 1024 + 1156 + 0 + 0 + 400 + 1764 + 1936 + 0 + 0 + 625 + 2704 + 2916", "x2": "sqr mul relu mod add add n INT+ 6 x_0_1 INT+ 5 n", "tree": "((relu((((n add 6) add x_0_1) mod 5)) mul n))**2", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 9 - 10 - 2 - 7 + 3 + 5 - 6 + 14 + 19 + 42 + 41 + 71 + 62 + 92 + 96 + 108 + 109 + 100 + 104 + 67 + 82 + 17 + 30 + 3 + 3 + 3 + 3 + 3 + 3 + 44 + 33 + 103 + 94", "x2": "abs mod INT+ 3 add sub x_0_8 INT- 3 sub sub INT- 2 add x_0_2 n n", "tree": "abs((3 mod ((x_0_8 sub -3) add ((-2 sub (x_0_2 add n)) sub n))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 3 + 4 + 3 + 640 + 162 + 112 + 24 + 0 + 1620 + 4928 + 2592 + 0 + 56 7000 + 266 1120 + 203 2128 + 0 + 8 2668 6000 + 50 5612 8000 + 49 1774 9760 + 0 + 3 736 1854 8000 + 22 7930 2502 4000 + 26 5558 4870 4000 + 0 + 2 3095 1697 6967 2000 + 19 9393 3829 995 2000 + 26 8426 5187 3 2000 + 0 + 3 554 9096 527 6056 0", "x2": "relu mul mul n sqr sub n INT+ 9 abs x_0_4", "tree": "relu(((n mul ((n sub 9))**2) mul abs(x_0_4)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 8 + 5 - 8 + 8 - 10 + 3 + 6 - 8 + 11 - 11 - 5 + 6 - 16 + 12 - 11 - 6 + 5 - 18 + 12 - 12 - 5 + 6 - 17 + 13 - 12 - 6 + 5 - 19 + 13 - 13 - 5", "x2": "sub mod x_0_2 add idiv x_0_5 sub x_0_4 x_0_2 x_0_2 x_0_4", "tree": "((x_0_2 mod ((x_0_5 idiv (x_0_4 sub x_0_2)) add x_0_2)) sub x_0_4)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 6 - 2 - 2 - 11 - 7 - 21 - 19 - 48 - 37 - 52 - 53 - 67 - 80 - 75 - 76 - 83 - 89 - 94 - 101 - 122 - 119 - 129 - 142 - 123 - 142 - 157 - 143 - 160 - 149", "x2": "sub mul n INT- 6 mod add sign mod INT- 8 n mul x_0_4 x_0_1 mul INT- 4 abs INT- 9", "tree": "((n mul -6) sub ((sign((-8 mod n)) add (x_0_4 mul x_0_1)) mod (-4 mul abs(-9))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr add n INT- 6", "tree": "((n add -6))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 0 + 7 - 5 - 8 - 1 - 1 + 0 + 0 - 2 - 2 - 1 - 1 + 0 + 0 - 2 - 2 - 1 - 1 + 0 + 0 - 2 - 2 - 1 - 1 + 0 + 0 - 2 - 2 - 1 - 1", "x2": "add idiv mul x_0_4 sign n INT+ 1 0 sign x_0_6", "tree": "(((x_0_4 mul sign(n)) idiv 10) add sign(x_0_6))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 5 + 6 - 5 + 0 - 10 + 10 + 10 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign mul mul mul mul sign n n idiv INT- 6 n x_0_8 mul n INT+ 9", "tree": "sign(((((sign(n) mul n) mul (-6 idiv n)) mul x_0_8) mul (n mul 9)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 7 + 6 + 10 + 408 - 430 - 786 - 3 4272 + 3 7784 + 7 677 + 308 4410 - 332 5069 - 593 6952 - 2 4058 4071 + 2 3275 4732 + 3 5621 7015 + 115 4803 5296 - 79 1366 1007 - 64 1190 6396 - 133 - 1582 7322 280 - 2693 6 8779 - 8932 - 14 5611 3626 5921 - 32 3160 825 3648 - 133 9975 - 2650 1268 39 7804 - 6980 2577 8278 8157 - 3 3767 3896 - 76 8536 7721 1536 3363", "x2": "sub mul mul x_0_3 n add sub INT- 1 0 idiv INT- 9 INT- 1 abs n abs mul mod INT+ 7 n n", "tree": "(((x_0_3 mul n) mul ((-10 sub (-9 idiv -1)) add abs(n))) sub abs(((7 mod n) mul n)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 17 + 22 + 1 - 6 - 1 - 20 + 45 - 274 + 1579 - 1 1136 + 8 8985 - 80 990 + 800 9751 - 8810 7436 + 10 5728 9029 - 137 4475 7610 + 1924 2660 6275 - 2 8863 9909 4424 + 46 1823 8551 449 - 785 1005 5367 8006 + 1 4131 8099 6620 3695 - 26 8504 3893 5787 660 + 537 87 7871 5741 2701 - 1 1277 1843 5303 566 7266 + 24 8098 557 6667 2467 9259 - 570 6255 2826 3346 6762 3600", "x2": "sub sub x_0_1 mul sub n INT+ 3 add x_0_1 n INT- 5", "tree": "((x_0_1 sub ((n sub 3) mul (x_0_1 add n))) sub -5)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 - 6 - 8 - 10 + 0 + 0 + 0 + 0 + 0 - 3 + 0 - 3 + 0 - 3 - 3 - 6 + 0 - 3 - 6 + 0 - 3 - 6 + 0 - 9 - 6 + 0 - 6 - 3 - 3 - 3", "x2": "mul INT+ 3 mod idiv sub INT+ 9 mul add n x_0_5 n n idiv n INT- 8", "tree": "(3 mul (((9 sub ((n add x_0_5) mul n)) idiv n) mod (n idiv -8)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 10 + 5 - 6 - 3 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 2 + 4 - 56 - 30 - 72 + 336 + 176 + 576 - 3440 - 2024 - 7008 + 4 4616 + 2 8224 + 10 5000 - 71 3984 - 47 9944 - 189 144 + 1356 5544 + 959 8720 + 3969 2856 - 2 9844 2144 - 2 2077 744 - 9 5262 8736 + 74 6105 3400 + 57 4003 9136 + 257 2097 5656 - 2089 949 5424 - 1664 6113 5176", "x2": "sub mul n INT- 7 sub n mul mul x_0_3 INT- 1 n", "tree": "((n mul -7) sub (n sub ((x_0_3 mul -1) mul n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 2 + 9 + 2 + 7 + 0 + 81 + 324 + 49 + 196 + 81 + 256 + 0 + 0 + 0 + 0 + 0 + 0 + 256 + 256 + 256 + 256 + 256 + 256 + 0 + 0 + 0 + 0 + 0 + 0 + 256 + 256", "x2": "sqr relu sub sqr INT+ 4 x_0_6", "tree": "(relu(((4)**2 sub x_0_6)))**2", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3", "x2": "idiv n sub INT- 5 idiv INT- 7 idiv INT- 1 n", "tree": "(n idiv (-5 sub (-7 idiv (-1 idiv n))))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 + 9 - 4 - 14 + 5 - 8 - 18 + 1 - 12 - 22 - 3 - 16 - 26 - 7 - 20 - 30 - 11 - 24 - 34 - 15 - 28 - 38 - 19 - 32 - 42 - 23 - 36 - 46", "x2": "sub x_0_3 INT+ 4", "tree": "(x_0_3 sub 4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 9 + 7 + 0 + 2 + 2 + 4 + 4 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2", "x2": "mul INT- 2 idiv x_0_5 INT- 6", "tree": "(-2 mul (x_0_5 idiv -6))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 + 1 + 0 - 1 + 6 + 7 + 4 - 7 + 10 + 11 - 10 + 13 + 14 + 15 - 14 + 17 + 18 - 17 + 20 + 21 + 22 - 21 + 24 + 25 - 24 + 27 + 28 + 29 - 28 + 31 + 32 - 31 + 34", "x2": "add sign mod n n mul sign x_0_7 n", "tree": "(sign((n mod n)) add (sign(x_0_7) mul n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 + 1 + 8 + 0 + 6 + 7 - 4 + 6 + 17 + 11 + 5 + 14 + 10 + 10 + 22 + 13 + 3 + 10 + 17 + 10 + 15 + 16 + 5 + 15 + 26 + 20 + 15 + 23 + 19 + 19 + 31 + 22 + 12 + 20", "x2": "sub n add idiv abs add INT- 2 mul idiv INT- 2 add add INT+ 8 n n n INT- 7 x_0_8", "tree": "(n sub ((abs((-2 add ((-2 idiv ((8 add n) add n)) mul n))) idiv -7) add x_0_8))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 13 + 26 + 40 + 55 + 71 + 88 + 106 + 125 + 145 + 166 + 188 + 211 + 235 + 260 + 286 + 313 + 341 + 370 + 400 + 431 + 463 + 496 + 530 + 565 + 601 + 638", "x2": "abs add n sub relu x_0_1 sub n add n INT+ 1 0", "tree": "abs((n add (relu(x_0_1) sub (n sub (n add 10)))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 7 - 28 - 63 - 112 - 175 - 252 - 343 - 448 - 567 - 700 - 847 - 1008 - 1183 - 1372 - 1575 - 1792 - 2023 - 2268 - 2527 - 2800 - 3087 - 3388 - 3703 - 4032 - 4375 - 4732", "x2": "idiv mul n mul n INT+ 7 sign INT- 9", "tree": "((n mul (n mul 7)) idiv sign(-9))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 3 + 5 + 8 - 8 - 5 + 9 - 6 - 4 - 2 + 957 + 684 + 702 + 672 + 1485 + 1488 + 918 + 1836 + 1881 + 1920 + 5 8338 + 4 3032 + 4 6161 + 4 5936 + 10 8750 + 11 3256 + 7 1361 + 15 1032 + 16 254 + 16 9200 + 542 1621 + 412 7040 + 456 5682 + 468 984 + 1141 4025 + 1222 6680", "x2": "abs mul n mul INT- 3 sub sub n INT- 1 0 x_0_10", "tree": "abs((n mul (-3 mul ((n sub -10) sub x_0_10))))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 4 - 29 + 204 - 1429 + 1 4 - 7 29 + 49 204 - 343 1429 + 2402 4 - 1 6814 29 + 11 7698 204 - 82 3886 1429 + 576 7203 4 - 4037 421 29 + 2 8259 2947 204 - 19 7815 629 1429 + 138 4705 4404 4 - 969 2938 828 29 + 6785 566 5796 204 - 4 7495 3966 572 1429 + 33 2467 7762 4005 4 - 232 7274 4336 8035 29 + 1629 921 357 6245 204 - 1 1403 6447 2503 3715 1429 + 7 9825 5130 7523 6006 4 - 55 8778 5915 2665 2042 29 + 391 1450 1406 8656 4294 204", "x2": "sub sign sub mod sign idiv x_0_2 n n x_0_1 mul INT+ 7 x_0_1", "tree": "(sign(((sign((x_0_2 idiv n)) mod n) sub x_0_1)) sub (7 mul x_0_1))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 - 2 + 160 + 160 - 1 2800 - 1 2800 + 102 4000 + 102 4000 - 8192 0 - 8192 0 + 65 5360 0 + 65 5360 0 - 5242 8800 0 - 5242 8800 0 + 41 9430 4000 0 + 41 9430 4000 0 - 3355 4432 0 0 - 3355 4432 0 0 + 26 8435 4560 0 0 + 26 8435 4560 0 0 - 2147 4836 4800 0 0 - 2147 4836 4800 0 0 + 17 1798 6918 4000 0 0 + 17 1798 6918 4000 0 0 - 1374 3895 3472 0 0 0 - 1374 3895 3472 0 0 0 + 10 9951 1627 7760 0 0 0 + 10 9951 1627 7760 0 0 0", "x2": "mul abs idiv INT- 1 0 sqr INT- 1 mul x_0_2 INT- 8", "tree": "(abs((-10 idiv (-1)**2)) mul (x_0_2 mul -8))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 32 + 243 + 1024 + 3125 + 7776 + 1 6807 + 3 2768 + 5 9049 + 10 0 + 16 1051 + 24 8832 + 37 1293 + 53 7824 + 75 9375 + 104 8576 + 141 9857 + 188 9568 + 247 6099 + 320 0 + 408 4101 + 515 3632 + 643 6343 + 796 2624 + 976 5625 + 1188 1376", "x2": "mul n sqr sqr n", "tree": "(n mul ((n)**2)**2)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 + 2 - 14 + 4 - 28 + 8 - 56 + 16 - 112 + 32 - 224 + 64 - 448 + 128 - 896 + 256 - 1792 + 512 - 3584 + 1024 - 7168 + 2048 - 1 4336 + 4096 - 2 8672 + 8192 - 5 7344 + 1 6384", "x2": "add x_0_2 x_0_2", "tree": "(x_0_2 add x_0_2)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 2 - 7 + 6 + 5 + 2 + 7 - 2 + 5 + 1 + 841 + 6724 + 1 + 1 + 1 + 1 + 2209 + 1 + 4 + 1 + 1 + 4 + 4 + 4 + 4 + 1 + 4 + 1 + 4 + 4 + 1 + 1 + 1 + 1 + 4 + 1", "x2": "abs sqr sub INT- 1 relu sub n mul x_0_9 add sign INT- 5 n", "tree": "abs(((-1 sub relu((n sub (x_0_9 mul (sign(-5) add n))))))**2)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 2 - 4 + 10 - 6 + 4 + 9 - 2 + 3 + 20 + 17 + 19 + 19 + 24 + 33 + 60 + 83 + 45 + 46 + 28 + 19 - 58 - 409 - 2661 - 7649 - 8703 - 9833 - 1 140 - 1 591 - 1 6381 - 18 9672 - 726 8649 - 6575 5084 - 1 4147 2618 - 2 3813 1763", "x2": "add add sub abs INT+ 7 sqr mod INT- 7 abs add INT- 5 x_0_8 x_0_1 x_0_6", "tree": "(((abs(7) sub ((-7 mod abs((-5 add x_0_8))))**2) add x_0_1) add x_0_6)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 3 + 3 + 8 + 10 - 7 - 4 - 5 - 5 - 1 - 7 + 39 + 163 + 61 + 104 + 54 + 55 + 164 + 261 + 5 + 1 + 263 - 39 - 163 - 61 - 104 - 54 - 55 - 164 - 261 + 91 - 1 - 263 + 375 + 1363 + 637 + 1048", "x2": "sub mul mul idiv n x_0_11 mod mul n x_0_4 x_0_11 sqr INT+ 4 x_0_11", "tree": "((((n idiv x_0_11) mul ((n mul x_0_4) mod x_0_11)) mul (4)**2) sub x_0_11)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 8 + 9 + 8 + 10 - 10 - 1 + 1 + 4 + 8 + 9 + 8 + 10 + 0 + 0 + 1 + 4 + 8 + 9 + 8 + 10 + 0 + 0 + 1 + 4 + 8 + 9 + 8 + 10 + 0 + 0 + 1 + 4", "x2": "relu x_0_8", "tree": "relu(x_0_8)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 4 - 7 - 9 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2 + 4 + 4 + 2", "x2": "mod abs x_0_3 INT+ 5", "tree": "(abs(x_0_3) mod 5)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000 + 5 1218 9896 4582 4000 + 97 3160 8032 7065 6000 + 1946 3216 654 1312 0 + 4 872 7537 3736 7552 0 + 89 9200 5822 2208 6144 0 + 2068 1613 3911 798 1312 0 + 4 9635 8721 3865 9155 1488 0 + 124 896 8034 6647 8878 7200 0 + 3226 3316 8901 2845 846 7200 0 + 8 7110 9556 334 6817 2861 4400 0", "x2": "relu mul x_0_1 n", "tree": "relu((x_0_1 mul n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 3 + 7 + 2 - 6 - 7 - 12 - 18 - 13 - 19 - 14 - 20 - 15 - 21 - 16 - 22 - 17 - 23 - 18 - 24 - 19 - 25 - 20 - 26 - 21 - 27 - 22 - 28 - 23 - 29", "x2": "sub mod sign x_0_4 x_0_1 abs x_0_2", "tree": "((sign(x_0_4) mod x_0_1) sub abs(x_0_2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 5 - 8 + 9 + 8 + 6 + 4 + 3 + 2 + 1 + 1 + 3 + 4 + 3 + 2 + 1 + 1 + 3 + 4 + 3 + 2 + 1 + 1 + 3 + 4 + 3 + 2 + 1 + 1 + 3", "x2": "sub mul sign x_0_1 x_0_1 sub INT+ 1 idiv x_0_4 sqr x_0_2", "tree": "((sign(x_0_1) mul x_0_1) sub (1 sub (x_0_4 idiv (x_0_2)**2)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 9 + 2 - 1 - 2 - 6 + 9 - 2 + 1 + 9 - 1 + 9 + 7 - 4 + 8 - 4 - 5 + 18 - 3 + 10 + 16 - 5 + 17 + 3 - 9 + 26 - 7 + 5 + 34 - 8 + 27 + 19 - 14 + 43 - 4 - 4 + 60", "x2": "add x_0_8 x_0_11", "tree": "(x_0_8 add x_0_11)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 1 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4", "x2": "add add mod x_0_1 INT- 9 sign mul sign INT+ 7 x_0_1 relu INT- 8", "tree": "(((x_0_1 mod -9) add sign((sign(7) mul x_0_1))) add relu(-8))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 7 + 4 + 7 + 3 + 11 + 11 + 9 + 13 + 10 + 19 + 20 + 19 + 24 + 22 + 32 + 34 + 34 + 40 + 39 + 50 + 53 + 54 + 61 + 61 + 73 + 77 + 79 + 87 + 88", "x2": "add x_0_5 relu mod mod INT- 4 relu n n", "tree": "(x_0_5 add relu(((-4 mod relu(n)) mod n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 9 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "idiv idiv n x_0_2 abs INT- 3", "tree": "((n idiv x_0_2) idiv abs(-3))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 - 4 + 7 + 8 + 6 + 1 - 5 - 5 - 5 - 8 - 17 - 28 - 40 - 53 - 67 - 82 - 98 - 115 - 133 - 152 - 172 - 193 - 215 - 238 - 262 - 287 - 313 - 340 - 368 - 397 - 427", "x2": "add x_0_1 mod sign n sub relu x_0_5 n", "tree": "(x_0_1 add (sign(n) mod (relu(x_0_5) sub n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 4 + 5 + 4 + 6 + 4 + 4 + 6 + 4 + 5 + 4 + 6 + 4 + 4 + 6 + 4 + 5 + 4 + 6 + 4 + 4 + 6 + 4 + 5 + 4 + 6 + 4", "x2": "add INT+ 4 relu abs mod x_0_1 mod mul relu n n INT- 7", "tree": "(4 add relu(abs((x_0_1 mod ((relu(n) mul n) mod -7)))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 - 5 + 10 - 5 - 12 + 0 + 0 - 12 - 12 + 0 + 0 + 0 - 12 - 12 + 0 + 0 + 0 - 12 - 12 + 0 + 0 + 0 - 12 - 12 + 0 + 0 + 0 - 12 - 12 + 0", "x2": "mul relu sign mul x_0_2 abs sub idiv n x_0_5 INT- 7 mul INT- 2 relu INT+ 6", "tree": "(relu(sign((x_0_2 mul abs(((n idiv x_0_5) sub -7))))) mul (-2 mul relu(6)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 10 - 1 + 2 - 7 - 3 - 4 - 74 - 91 - 109 - 131 - 153 - 178 - 205 - 234 - 265 - 298 - 333 - 370 - 409 - 450 - 493 - 538 - 585 - 634 - 685 - 738 - 793", "x2": "sub INT- 1 0 add sqr n idiv sign x_0_7 abs n", "tree": "(-10 sub ((n)**2 add (sign(x_0_7) idiv abs(n))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 2 + 0 + 3 + 6 + 3 + 1 - 1 - 4 - 7 - 4 - 2 + 0 + 3 + 6 + 3 + 1 - 1 - 4 - 7 - 4 - 2 + 0 + 3 + 6 + 3 + 1", "x2": "sub INT- 1 x_0_5", "tree": "(-1 sub x_0_5)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 + 8 + 1 - 10 - 7 + 4 - 39 + 69 + 11 - 103 - 69 + 57 - 495 + 977 + 170 - 1636 - 1159 + 1042 - 9383 + 1 9557 + 3579 - 3 5974 - 2 6637 + 2 5030 - 23 4546 + 50 8505 + 9 6648", "x2": "sub add add INT- 4 n mul n x_0_6 idiv mod sqr INT+ 6 add x_0_2 INT+ 1 0 x_0_4", "tree": "(((-4 add n) add (n mul x_0_6)) sub (((6)**2 mod (x_0_2 add 10)) idiv x_0_4))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 9 + 8 - 9 - 10 + 8 + 9 + 4 - 6 + 9 - 29 - 14 - 33 - 36 - 20 - 21 - 28 - 40 - 27 - 67 - 54 - 75 - 80 - 66 - 69 - 78 - 92 - 81 - 123 - 112 - 135", "x2": "sub x_0_9 add n abs n", "tree": "(x_0_9 sub (n add abs(n)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 9 - 3 - 8 - 9 + 10 - 1 - 7 + 6 - 5 - 40 + 294 + 946 + 6946 + 2 2920 + 17 3400 + 59 5946 + 468 1989 + 1668 6320 + 1 3577 7826 + 5 59 800 + 42 910 3492 + 160 1887 5328 + 1389 18 6018 + 5446 4098 1872 + 4 8615 44 1630 + 19 6070 5389 3336 + 179 8753 4310 6717 + 745 674 1386 6608 + 7015 1330 8582 6749 + 2 9802 6765 3103 2320", "x2": "mul sub x_0_10 abs x_0_2 sub INT- 9 n", "tree": "((x_0_10 sub abs(x_0_2)) mul (-9 sub n))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 8 + 8 - 9 - 1 + 4 + 8 - 9 - 2 - 4 - 12 - 3 - 5 - 14 - 6 - 7 - 16 - 7 - 11 - 20 - 8 - 15 - 24 - 9 - 18 - 28 - 10 - 21 - 31 - 11 - 24", "x2": "add sub add n idiv x_0_3 abs x_0_10 n x_0_3", "tree": "(((n add (x_0_3 idiv abs(x_0_10))) sub n) add x_0_3)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 10 - 2 - 7 + 1 + 6 + 1 - 14 - 3 - 16 + 1 + 6 + 1 - 20 - 4 - 22 + 1 + 6 + 1 - 26 - 5 - 28 + 1 + 6 + 1", "x2": "idiv sub INT- 7 n x_0_3", "tree": "((-7 sub n) idiv x_0_3)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 1 + 1 - 9 - 5 - 3 + 10 + 10 - 4 - 5 - 2 + 0 + 2 + 5 + 10 + 13 + 11 + 11 + 15 + 15 + 19 + 1 + 3 + 6 + 11 + 14 + 12 + 12 + 16 + 16 + 20 + 2", "x2": "idiv mod add sub INT+ 1 n x_0_10 n sign abs x_0_2", "tree": "((((1 sub n) add x_0_10) mod n) idiv sign(abs(x_0_2)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 7 + 8 + 13 + 0 + 1 + 1 + 10 + 29 + 91 + 110 + 51 + 164 + 133 + 198 + 127 + 276 + 7 + 242 + 135 + 184 + 201 + 484", "x2": "mod add mul x_0_2 mod relu x_0_1 mul INT- 7 abs n sign x_0_1 sqr n", "tree": "(((x_0_2 mul (relu(x_0_1) mod (-7 mul abs(n)))) add sign(x_0_1)) mod (n)**2)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 9 + 1 + 2 - 5 - 3 - 2 + 7 + 7 + 15 + 14 + 14 + 6 + 7 + 0 + 2 + 3 + 12 + 12 + 20 + 19 + 19 + 11 + 12 + 5 + 7", "x2": "sub relu n x_0_5", "tree": "(relu(n) sub x_0_5)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 1 + 24 - 4 + 120 - 24 + 840 - 192 + 7560 - 1920 + 8 3160 - 2 3040 + 108 1080 - 32 2560 + 1621 6200 - 516 960 + 2 7567 5400 - 9289 7280 + 52 3783 2600 - 18 5794 5600 + 1099 9448 4600 - 408 7480 3200 + 2 5298 7314 5800", "x2": "mul x_0_2 relu n", "tree": "(x_0_2 mul relu(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 6 - 8 - 4 + 7 + 2 + 6 + 8 - 3 + 2 - 104 - 98 - 121 - 113 - 173 - 170 - 176 - 165 - 205 - 194 - 298 - 284 - 321 - 304 - 403 - 390 - 405 - 384 - 455 - 435 - 539", "x2": "sub add x_0_10 idiv sub INT- 2 relu abs mul INT- 1 0 sub x_0_4 n n sqr INT+ 1 0", "tree": "((x_0_10 add ((-2 sub relu(abs((-10 mul (x_0_4 sub n))))) idiv n)) sub (10)**2)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr add sign mul sqr x_0_1 sub sqr relu INT+ 5 n n", "tree": "((sign(((x_0_1)**2 mul ((relu(5))**2 sub n))) add n))**2", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 5 - 4 - 3 + 5 - 7 - 6 + 3 + 6 + 11 + 12 + 14 + 14 + 15 + 12 + 15 + 18 + 19 + 21 + 21 + 22 + 19 + 22 + 25 + 26 + 28 + 28 + 29 + 26 + 29", "x2": "relu add abs sub x_0_7 sign idiv idiv x_0_1 x_0_9 n INT+ 8", "tree": "relu((abs((x_0_7 sub sign(((x_0_1 idiv x_0_9) idiv n)))) add 8))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 3 + 15 + 16 + 80 + 102 + 567 + 824 + 5112 + 8250 + 5 6243 + 9 9012 + 73 1172 + 138 6182 + 1096 7595 + 2217 8928 + 1 8644 9132 + 3 9922 722 + 35 4253 3527 + 79 8441 4460 + 743 9320 4088 + 1756 5711 8142 + 1 7110 4369 4047", "x2": "mul n add x_0_2 idiv add add n relu n mod INT- 9 INT- 6 n", "tree": "(n mul (x_0_2 add (((n add relu(n)) add (-9 mod -6)) idiv n)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul n relu n", "tree": "(n mul relu(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 6 + 1 + 4 + 9 + 7 + 1 + 64 + 4 + 0 + 1 + 64 + 0 + 1024 + 4 + 0 + 0 + 1024 + 0 + 26 2144 + 4 + 0 + 0 + 26 2144 + 0 + 171 7986 9184 + 4", "x2": "sqr idiv sub x_0_6 mod mul mod x_0_6 INT- 4 x_0_1 INT- 9 add x_0_5 INT- 2", "tree": "(((x_0_6 sub (((x_0_6 mod -4) mul x_0_1) mod -9)) idiv (x_0_5 add -2)))**2", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 9 + 8 - 5 - 3 + 2 + 4 + 2 + 9 + 8 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1", "x2": "sub mod idiv idiv add sign n x_0_5 n mod idiv INT+ 7 INT+ 6 n n sign x_0_4", "tree": "(((((sign(n) add x_0_5) idiv n) idiv ((7 idiv 6) mod n)) mod n) sub sign(x_0_4))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 5 + 2 + 121 + 49 + 1 + 1 + 49 + 49 + 1 + 1 + 49 + 49 + 1 + 1 + 49 + 49 + 1 + 1 + 49 + 49 + 1 + 1 + 49", "x2": "sqr sub INT+ 7 mod INT+ 6 x_0_2", "tree": "((7 sub (6 mod x_0_2)))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 4 - 2 - 1 + 2 + 6 - 3 - 3 - 9 - 8 - 5 - 1 - 10 - 10 - 16 - 15 - 12 - 8 - 17 - 17 - 23 - 22 - 19 - 15 - 24 - 24 - 30", "x2": "add x_0_6 INT- 7", "tree": "(x_0_6 add -7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 2 - 10 + 8 + 2 + 10 - 8 - 2 - 10 + 8 + 2 + 10 - 8 - 2 - 10 + 8 + 2 + 10 - 8 - 2 - 10 + 8 + 2 + 10 - 8", "x2": "sub sub n mod n mul n add mul INT+ 7 n INT+ 5 x_0_3", "tree": "((n sub (n mod (n mul ((7 mul n) add 5)))) sub x_0_3)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 5 - 7 + 7 - 5 - 7 + 14 - 5 - 7 + 28 - 5 - 7 + 56 - 5 - 7 + 112 - 5 - 7 + 224 - 5 - 7 + 448 - 5 - 7 + 896", "x2": "add x_0_3 relu x_0_3", "tree": "(x_0_3 add relu(x_0_3))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 8 - 3 - 6 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 + 144 - 1728 + 5 1840 - 124 4160 + 5225 4720 - 18 8116 9920 + 1015 8317 5680 - 4 8759 9243 2640 + 321 8155 55 4240 - 1 9308 9300 3325 4400 + 150 6096 5425 9384 3200 - 1 843 8951 667 5671 400 + 97 5950 5596 81 393 6000 - 8197 9847 64 6807 3062 4000 + 83 6194 4394 6597 4345 2364 8000 - 8027 4666 1887 3353 7142 7020 8000 + 91 5131 1945 5156 2323 4268 371 2000 - 9883 4169 115 6873 930 948 89 6000 + 124 5310 5295 4576 6009 7191 9449 1289 6000 - 1 4943 7263 5454 9192 1166 3033 3895 4752 0 + 206 2234 2369 2778 8512 949 8607 7575 5776 0", "x2": "mul INT- 6 mul sub abs abs n sign mod INT+ 2 x_0_1 x_0_1", "tree": "(-6 mul ((abs(abs(n)) sub sign((2 mod x_0_1))) mul x_0_1))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 10 - 8 + 2 - 4 - 6 - 3 + 4 + 10 + 9 + 10 + 72 - 6 + 4 + 24 + 33 - 68 - 160 - 153 - 790 - 144 + 66 - 124 - 1032 + 561 - 1224 - 3040 - 3060 - 1 6590 + 1 512 + 1518", "x2": "mul x_0_9 mod mod INT- 7 n sub sub idiv INT+ 3 sub n x_0_9 x_0_8 n", "tree": "(x_0_9 mul ((-7 mod n) mod (((3 idiv (n sub x_0_9)) sub x_0_8) sub n)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 0 + 144 + 256 + 400 + 576 + 784 + 1024 + 1296 + 1600 + 1936 + 2304 + 2704 + 3136 + 3600 + 4096 + 4624 + 5184 + 5776 + 6400 + 7056", "x2": "sqr mul n mod INT+ 4 mul n relu n", "tree": "((n mul (4 mod (n mul relu(n)))))**2", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 1 + 6 + 8 + 10 - 5 + 2 + 64 + 16 + 1 + 1 + 1 + 16 + 16 + 0 + 0 + 64 + 81 + 81 + 1 + 1 + 484 + 529 + 0 + 0 + 0 + 169 + 196", "x2": "sqr idiv n add sign x_0_2 x_0_7", "tree": "((n idiv (sign(x_0_2) add x_0_7)))**2", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 3 + 10 + 5 - 4 - 6 + 2 - 4 + 27 - 70 + 407 - 780 + 5239 - 1 1004 + 7 8615 - 17 6128 + 133 6914 - 317 1564 + 2540 9099 - 6344 6880 + 5 3370 1098 - 13 9607 3448 + 122 7693 3399 - 335 998 9824 + 3069 5675 7825 - 8713 4219 6088 + 8 2885 1850 6948 - 24 3993 5800 3104 + 240 3825 1403 3334", "x2": "mul n add x_0_8 x_0_2", "tree": "(n mul (x_0_8 add x_0_2))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 3 + 2 - 4 + 4 - 9 - 9 - 2 + 6 - 4 + 2 - 3 + 2 - 4 + 4 - 9 - 9 - 2 + 6 - 4 + 2 - 3 + 2 - 4 + 4 - 9 - 9 - 2 + 6 - 4 + 2", "x2": "add mod n sign x_0_9 x_0_10", "tree": "((n mod sign(x_0_9)) add x_0_10)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 2 + 5 - 7 - 2 - 9 - 11 - 20 - 31 - 51 - 82 - 133 - 215 - 348 - 563 - 911 - 1474 - 2385 - 3859 - 6244 - 1 103 - 1 6347 - 2 6450", "x2": "sub x_0_2 abs x_0_1", "tree": "(x_0_2 sub abs(x_0_1))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 + 10 + 9 - 19 + 9 - 19 + 2 - 12 - 7 - 5 - 16 - 6 - 17 - 7 - 18 - 8 - 19 - 9 - 20 - 10 - 21 - 11 - 22 - 12", "x2": "sub INT- 3 add add sub mod n add n mul x_0_3 idiv x_0_1 mul INT+ 1 0 n INT- 1 0 x_0_1 INT- 3", "tree": "(-3 sub ((((n mod (n add (x_0_3 mul (x_0_1 idiv (10 mul n))))) sub -10) add x_0_1) add -3))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 - 10 - 7 + 1 + 4 + 0 - 4 - 9 - 4 + 3 + 3 + 4 - 6 - 8 - 1 - 2 + 9 + 1 - 8 + 0 - 12 + 7 + 8 - 9 + 11 - 20", "x2": "add sub relu INT- 5 x_0_4 idiv sub mul n x_0_5 sign INT+ 2 n", "tree": "((relu(-5) sub x_0_4) add (((n mul x_0_5) sub sign(2)) idiv n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 9 - 5 - 5 - 6 - 8 - 4 + 6 + 8 - 4 + 7 - 11 - 24 - 70 - 34 - 111 - 151 - 117 - 159 - 1269 - 166 - 2 4059 - 1 3831 - 4 9270 - 162 4158 - 7 6715 - 5 8045 9488 - 1 9137 3159 - 30 799 2229 - 2 6380 8058 854 - 88 9318 3288 - 33 6935 8552 8977 8939", "x2": "sub add x_0_2 n add n mod x_0_10 mul sign n sqr x_0_5", "tree": "((x_0_2 add n) sub (n add (x_0_10 mod (sign(n) mul (x_0_5)**2))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 7 + 28 + 252 + 4032 + 10 800 + 362 8800 + 1 7781 1200 + 113 7991 6800 + 9217 7326 800 + 92 1773 2608 0 + 1 1153 4564 5568 0 + 160 6097 7296 1792 0 + 2 7143 516 3054 2848 0 + 532 38 1195 8639 8208 0 + 11 9700 8576 9069 3959 6800 0 + 3064 3419 5688 1765 3678 800 0 + 88 5594 8255 3883 191 2965 1200 0 + 2 8693 2723 4745 8098 1980 698 8800 0 + 1035 8271 3174 3237 3449 4805 2295 6800 0 + 41 4330 8526 9729 4937 9792 2091 8272 0 0 + 1 8271 9906 395 706 7648 8364 2495 7952 0 0 + 884 3643 4523 1214 2074 2036 8296 7964 8768 0 0", "x2": "idiv mul x_0_1 abs add sqr n idiv sign INT+ 7 n sign sign x_0_1", "tree": "((x_0_1 mul abs(((n)**2 add (sign(7) idiv n)))) idiv sign(sign(x_0_1)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254 + 277", "x2": "abs sub INT- 1 0 add x_0_1 add INT- 9 relu n", "tree": "abs((-10 sub (x_0_1 add (-9 add relu(n)))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 - 9 - 4 + 4 - 8 - 9 + 4 + 6 - 4 - 10 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign sub sign INT- 8 sign x_0_10", "tree": "sign((sign(-8) sub sign(x_0_10)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4", "x2": "mod x_0_3 sub n abs sign relu x_0_2", "tree": "(x_0_3 mod (n sub abs(sign(relu(x_0_2)))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 8 + 5 - 1 - 1 + 0 - 56 + 40 - 9 - 10 + 0 - 672 + 520 - 126 - 150 + 0 - 1 1424 + 9360 - 2394 - 3000 + 0 - 25 1328 + 21 5280 - 5 7456 - 7 5000 + 0", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 9 - 4 + 10 + 4 + 2 - 5 + 4 - 6 + 9 + 14 + 17 + 3 + 16 + 9 + 6 + 0 + 6 + 0 + 9 + 34 + 37 + 23 + 36 + 29 + 26 + 20 + 26 + 20 + 29 + 54", "x2": "relu add mod sub mul mod INT- 1 0 INT- 6 INT- 5 relu n n x_0_10", "tree": "relu((((((-10 mod -6) mul -5) sub relu(n)) mod n) add x_0_10))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 7 + 4 + 9 - 4 + 2 - 42 + 49 - 28 - 63 + 28 - 14 + 294 - 343 + 196 + 441 - 196 + 98 - 2058 + 2401 - 1372 - 3087 + 1372 - 686 + 1 4406 - 1 6807 + 9604", "x2": "mul sub n add n add sign sign relu INT- 7 INT+ 6 x_0_6", "tree": "((n sub (n add (sign(sign(relu(-7))) add 6))) mul x_0_6)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 4 + 29 + 15 + 144 - 1 + 143 - 3 + 428 - 13 + 2139 - 1 + 2138 - 3 + 6413 - 13 + 3 2064 - 1 + 3 2063 - 3 + 9 6188 - 13 + 48 939", "x2": "sub mul mod n INT+ 6 x_0_2 sign INT+ 2", "tree": "(((n mod 6) mul x_0_2) sub sign(2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 146 - 96 - 106 - 176 - 226 - 336 - 466 - 616 - 786 - 976 - 1186 - 1416 - 1666 - 1936 - 2226 - 2536 - 2866 - 3216 - 3586 - 3976 - 4386", "x2": "add sqr sub INT+ 1 INT- 7 mul sub mul sqr INT+ 2 idiv INT- 5 n sqr n INT+ 1 0", "tree": "(((1 sub -7))**2 add ((((2)**2 mul (-5 idiv n)) sub (n)**2) mul 10))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 9 + 4 + 3 + 5 - 3 + 18 + 5 + 6 + 4 + 12 + 9 + 4 + 3 + 5 + 3 + 0 + 5 + 6 + 4 + 6 + 9 + 4 + 3 + 5 + 3 + 0", "x2": "abs sub x_0_5 INT+ 9", "tree": "abs((x_0_5 sub 9))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 + 7 + 1 - 5 + 4 + 30 - 7 + 8 + 1 - 6 + 5 + 42 - 8 + 9 + 1 - 7 + 5 + 54 - 8 + 11 + 1 - 8 + 5 + 66", "x2": "idiv add add mul sign relu INT- 9 n relu INT+ 1 0 add n INT+ 8 x_0_3", "tree": "((((sign(relu(-9)) mul n) add relu(10)) add (n add 8)) idiv x_0_3)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 7 - 5 + 6 + 12 + 6 + 7 + 8 + 15 + 10 + 19 + 12 + 23 + 14 + 27 + 16 + 31 + 18 + 35 + 20 + 39 + 22 + 43 + 24", "x2": "add n relu idiv x_0_3 mod x_0_2 INT+ 2", "tree": "(n add relu((x_0_3 idiv (x_0_2 mod 2))))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 - 3 + 4 + 2 + 7 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1", "x2": "sign mul x_0_5 sub idiv n mul INT+ 3 INT- 5 mod mul INT- 7 sub n n sign x_0_2", "tree": "sign((x_0_5 mul ((n idiv (3 mul -5)) sub ((-7 mul (n sub n)) mod sign(x_0_2)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 8 + 8 + 10 - 1 - 36 + 49 + 64 + 81 - 100 - 121 + 144 + 169 + 196 - 225 - 256 + 289 + 324 + 361 - 400 - 441 + 484 + 529 + 576 - 625 - 676", "x2": "mul sqr n sign x_0_5", "tree": "((n)**2 mul sign(x_0_5))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 5 - 1 - 3 + 6 + 10 - 3 + 10 - 3 - 1 - 2 + 6 - 2 + 2 - 4 - 6 + 3 + 7 - 6 + 7 - 6 - 4 - 5 + 3 - 5 - 1 - 7 - 9 + 0 + 4 - 9 + 4 - 9", "x2": "add INT- 3 x_0_12", "tree": "(-3 add x_0_12)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "+ 2 + 6 + 3 + 3 + 5 + 4 + 3 + 5 + 7 + 8 + 10 + 10 + 13 + 11 + 4 + 12 + 17 + 13 + 6 + 14 + 19 + 17 + 6", "x2": "sub n abs mod relu x_0_1 mod x_0_2 n", "tree": "(n sub abs((relu(x_0_1) mod (x_0_2 mod n))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 4 - 3 + 8 + 5 + 6 + 3 - 9 + 1 + 4 + 3 + 8 + 5 + 6 + 3 + 9 + 1 + 4 + 3 + 8 + 5 + 6 + 3 + 9 + 1 + 4 + 3 + 8 + 5", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "mul n mod n mul add mul INT+ 7 n mul add INT+ 5 sign n n sqr x_0_1", "tree": "(n mul (n mod (((7 mul n) add ((5 add sign(n)) mul n)) mul (x_0_1)**2)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 3 + 8 + 4 + 10 + 5 - 9 + 6 - 1 + 105 + 14 + 69 + 14 + 86 + 230 + 105 + 261 + 5 + 30 + 5 + 54 + 5 + 5 + 5 + 5 + 446 + 5 + 534 + 5 + 630", "x2": "add sqr relu sub n mod INT- 1 x_0_8 abs mod INT- 5 INT- 1 0", "tree": "((relu((n sub (-1 mod x_0_8))))**2 add abs((-5 mod -10)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 6 + 3 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv sub x_0_3 x_0_2 sqr abs add n n", "tree": "((x_0_3 sub x_0_2) idiv (abs((n add n)))**2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 10 - 7 + 10 + 4 + 1 + 17 + 65 + 41 + 37 + 253 + 169 + 89 + 761 + 521 + 217 + 2041 + 1417 + 521 + 5129 + 3593 + 1225 + 1 2361 + 8713 + 2825 + 2 8937 + 2 489", "x2": "sub add mul INT+ 4 sub x_0_3 x_0_6 INT+ 8 mul INT- 1 sign INT+ 2", "tree": "(((4 mul (x_0_3 sub x_0_6)) add 8) sub (-1 mul sign(2)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 6 - 9 - 3 + 7 - 4 - 4 - 5 - 41 - 39 - 41 - 20 - 36 - 222 - 1618 - 1655 - 875 - 778 - 8030 - 35 9251 - 267 8032 - 144 9764 - 68 2427 - 624 8238 - 28 8478 6332 - 9620 8568 2087 - 3 8825 1474 3725 - 9893 6077 5287 - 4 2639 6776 3418", "x2": "sub x_0_7 add n abs mul abs x_0_5 x_0_6", "tree": "(x_0_7 sub (n add abs((abs(x_0_5) mul x_0_6))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 4 + 4 + 4 - 9 - 70 - 462 - 3290 - 2 6384 - 23 7537 - 237 5470 - 2613 291 - 3 1356 3636 - 40 7632 7437 - 570 6858 4314 - 8560 2876 4935 - 13 6964 6023 9216 - 232 8398 2406 6961 - 4191 1168 3320 5622 - 7 9631 2198 3090 7179 - 159 2624 3966 1814 3980 - 3344 5112 3289 8102 4021 - 7 3579 2471 2375 8252 8946 - 169 2322 6838 4643 9816 6287 - 4061 5744 4123 1455 5599 1464 - 10 1539 3610 3078 6388 9978 7225", "x2": "sub mul sub x_0_1 relu add x_0_4 sub idiv INT- 8 INT+ 4 sign INT+ 8 n sqr relu n", "tree": "(((x_0_1 sub relu((x_0_4 add ((-8 idiv 4) sub sign(8))))) mul n) sub (relu(n))**2)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr sub n sqr sub n n", "tree": "((n sub ((n sub n))**2))**2", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 - 1 + 8 + 6 + 6 + 1 - 2 - 9 + 2 - 1 - 10 + 1 - 2 - 11 + 0 - 3 - 12 - 1 - 4 - 13 - 2 - 5 - 14 - 3 - 6 - 15 - 4 - 7 - 16 - 5 - 8", "x2": "add mod INT- 1 add add x_0_10 INT- 6 INT- 7 x_0_3", "tree": "((-1 mod ((x_0_10 add -6) add -7)) add x_0_3)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 3 - 1 - 5 - 3 - 7 - 5 - 9 - 7 - 11 - 9 - 13 - 11 - 15 - 13 - 17 - 15 - 19 - 17 - 21 - 19 - 23 - 21 - 25", "x2": "idiv sub INT+ 2 x_0_2 idiv x_0_1 add INT+ 7 sub n add x_0_1 mod mod x_0_2 INT+ 4 x_0_2", "tree": "((2 sub x_0_2) idiv (x_0_1 idiv (7 add (n sub (x_0_1 add ((x_0_2 mod 4) mod x_0_2))))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 4 - 9 - 13 - 16 - 18 - 19 - 19 - 18 - 16 - 13 - 9 - 4 + 2 + 9 + 17 + 26 + 36 + 47 + 59 + 72 + 86", "x2": "add add INT- 9 add abs n INT+ 1 x_0_1", "tree": "((-9 add (abs(n) add 1)) add x_0_1)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256", "x2": "add x_0_1 abs n", "tree": "(x_0_1 add abs(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 3 + 5 + 0 + 2 + 4 + 6 + 1 + 3 + 5 + 0 + 2 + 4 + 6 + 1 + 3 + 5 + 0 + 2 + 4 + 6 + 1", "x2": "abs abs mod add add x_0_1 sign sqr INT+ 9 mod sign x_0_1 INT- 7 INT+ 7", "tree": "abs(abs((((x_0_1 add sign((9)**2)) add (sign(x_0_1) mod -7)) mod 7)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 9 - 4 + 10 + 9 + 8 + 10 + 9 + 8 + 10 + 9 + 8 + 10 + 9 + 8 + 10 + 9 + 8 + 10 + 9 + 8 + 10 + 9 + 8", "x2": "add INT+ 1 0 mod x_0_2 INT- 3", "tree": "(10 add (x_0_2 mod -3))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 + 12 + 36 + 144 + 720 + 4320 + 3 240 + 24 1920 + 217 7280 + 2177 2800 + 2 3950 800 + 28 7400 9600 + 373 6212 4800 + 5230 6974 7200 + 7 8460 4620 8000 + 125 5367 3932 8000 + 2134 1245 6857 6000 + 3 8414 2422 3436 8000 + 72 9870 6024 5299 2000 + 1459 7412 490 5984 0 + 3 654 5653 302 5664 0 + 67 4400 4366 6656 4608 0", "x2": "mul n abs x_0_1", "tree": "(n mul abs(x_0_1))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 9 - 1 - 1 + 0 + 5 + 6 + 7 + 8 + 9 + 9 + 10 + 11 + 12 + 13 + 14 + 14 + 15 + 16 + 17 + 18 + 19 + 19 + 20", "x2": "sub n idiv sub n idiv abs sqr x_0_3 INT- 4 relu n", "tree": "(n sub ((n sub (abs((x_0_3)**2) idiv -4)) idiv relu(n)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 - 5 - 6 - 2 + 9 + 4 + 9 - 7 + 9 + 4 + 1 + 5 + 4 + 8 + 19 + 14 + 19 + 3 + 19 + 14 + 11 + 15 + 14 + 18 + 29 + 24 + 29 + 13 + 29 + 24 + 21", "x2": "sub add sqr relu INT- 3 x_0_10 INT- 1 0", "tree": "(((relu(-3))**2 add x_0_10) sub -10)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 6 + 8 + 9 - 6 + 6 + 12 - 5 + 4 + 18 - 5 + 5 + 21 - 5 + 6 + 24 - 5 + 7 + 27 - 5 + 10 + 28 - 5 + 12 + 29", "x2": "add idiv add sub sub mod n INT+ 1 0 sign INT- 2 x_0_2 INT+ 1 0 x_0_1 x_0_3", "tree": "((((((n mod 10) sub sign(-2)) sub x_0_2) add 10) idiv x_0_1) add x_0_3)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 7 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 6 - 6 - 6", "x2": "idiv idiv n sign mul abs add n x_0_2 INT+ 8 INT- 4", "tree": "((n idiv sign((abs((n add x_0_2)) mul 8))) idiv -4)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 10 - 2 + 7 + 5 + 16 + 5 + 15 + 14 + 26 + 16 + 27 + 27 + 40 + 31 + 43 + 44 + 58 + 50 + 63 + 65 + 80 + 73 + 87 + 90", "x2": "add n x_0_4", "tree": "(n add x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 5 + 4 + 0 + 2 - 2 + 0 + 0 + 4 + 0 + 2 + 0 + 0 + 0 + 4 + 0 + 2 + 0 + 0 + 0 + 4 + 0 + 2 + 0 + 0 + 0 + 4 + 0", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 2 - 5 - 10 - 17 - 26 - 37 - 50 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401 - 442", "x2": "sub sign sub INT- 2 sign add n mod n INT- 4 sqr n", "tree": "(sign((-2 sub sign((n add (n mod -4))))) sub (n)**2)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 4 + 1 + 3 - 3 - 8 + 8 + 8 - 1 - 2 - 5 + 5 + 0 + 7 + 6 - 6 + 3 - 5 + 12 + 6 + 1 + 9 - 11 + 15 + 1 + 13 + 15 - 10", "x2": "add x_0_7 x_0_5", "tree": "(x_0_7 add x_0_5)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 2 - 9 - 30 - 53 + 8 - 231 + 10 + 11 - 2529 - 2 5277 - 27 8033 + 15 - 37 9139 + 17 + 18 - 682 4483 - 1 1601 6191 - 20 8829 1417 + 22 - 25 5235 6179 + 24 + 25 - 638 890 4449", "x2": "add mod n mul x_0_3 x_0_1 INT+ 2", "tree": "((n mod (x_0_3 mul x_0_1)) add 2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 12 + 14 + 16 + 18 + 20 + 22 + 24 + 26 + 28 + 20 + 22", "x2": "add mod mod n INT+ 1 0 n relu n", "tree": "(((n mod 10) mod n) add relu(n))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 9 - 4 + 0 + 7 - 1 + 5 - 5 - 9 + 0 - 2 + 0 - 1 + 0 + 0 - 1 - 1 - 1 - 1 - 1 + 0 + 0 + 0 - 1 + 0 + 0 - 1 - 1 - 1 - 1 - 1 + 0", "x2": "mod sub add add n n x_0_11 relu INT- 6 INT- 2", "tree": "((((n add n) add x_0_11) sub relu(-6)) mod -2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 10 + 6 - 6 - 10 - 10 - 7 - 11 - 11 - 8 - 7 - 7 - 9 - 8 - 8 - 10 - 9 - 9 - 11 - 10 - 10 - 7 - 11 - 11", "x2": "add add mod x_0_3 INT+ 5 abs idiv INT- 6 abs n mul add sub n n INT- 6 INT+ 2", "tree": "(((x_0_3 mod 5) add abs((-6 idiv abs(n)))) add (((n sub n) add -6) mul 2))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 - 5 - 10 - 17 - 26 - 37 - 50 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401 - 442 - 485", "x2": "add sign x_0_1 mul sqr n sign INT- 4", "tree": "(sign(x_0_1) add ((n)**2 mul sign(-4)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 10 + 12 + 24 + 200 + 3540 + 9 9036 + 396 1328 + 2 1391 1568 + 149 7380 9580 + 1 3176 9524 2820 + 142 3110 8622 4296 + 1 8500 4412 915 8168 + 284 9067 9462 1035 7508 + 5 1283 2230 3178 6435 1020 + 1066 6910 3906 1157 8501 1680 + 25 3872 4672 9655 5568 3277 9296 + 6854 5566 1700 7000 3448 5040 9308 + 208 3785 2115 7012 8104 8345 2442 8948 + 7 848 6971 9338 4355 5643 7383 584 1560 + 2678 807 5390 9928 6403 3333 796 810 8840 + 111 9437 7551 3435 171 6593 3227 2761 8949 4196", "x2": "mul n abs abs add relu add x_0_1 n mul sub idiv INT- 7 INT- 7 x_0_1 add n INT- 2", "tree": "(n mul abs(abs((relu((x_0_1 add n)) add (((-7 idiv -7) sub x_0_1) mul (n add -2))))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 1 + 1 + 7 + 2 - 5 + 0 + 1 + 9 + 63 - 23 + 6 + 20 + 132 + 57 + 41 + 62 + 3246 + 882 + 168 + 402 + 1 5992 + 2723 + 4553 + 7285 + 1049 8672 + 76 7969 + 4 2662 + 17 5556 + 2 5555 9498", "x2": "add add add n INT- 3 x_0_6 idiv add x_0_7 sqr add x_0_8 INT- 6 sign x_0_5", "tree": "(((n add -3) add x_0_6) add ((x_0_7 add ((x_0_8 add -6))**2) idiv sign(x_0_5)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign sub add relu INT+ 1 0 INT+ 1 0 n", "tree": "sign(((relu(10) add 10) sub n))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 + 5 - 3 + 10 + 9 + 16 + 25 + 9 + 100 + 81 + 256 + 625 + 81 + 1 0 + 6561 + 6 5536 + 39 625 + 6561 + 1 0 0 + 4304 6721 + 42 9496 7296 + 1525 8789 625 + 4304 6721 + 1 0 0 0 0 + 1853 201 8885 1841 + 1844 6744 737 955 1616", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 5 - 10 - 30 - 120 - 600 - 3600 - 2 5200 - 20 1600 - 181 4400 - 1814 4000 - 1 9958 4000 - 23 9500 8000 - 311 3510 4000 - 4358 9145 6000 - 6 5383 7184 0 - 104 6139 4944 0 - 1778 4371 4048 0 - 3 2011 8685 2864 0 - 60 8225 5020 4416 0 - 1216 4510 408 8320 0 - 2 5545 4710 8585 4720 0 - 56 2000 3638 8880 3840 0", "x2": "mul x_0_1 abs n", "tree": "(x_0_1 mul abs(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 8 - 14 - 25 - 46 - 87 - 168 - 329 - 650 - 1291 - 2572 - 5133 - 1 254 - 2 495 - 4 976 - 8 1937 - 16 3858 - 32 7699 - 65 5380 - 131 741 - 262 1462 - 524 2903 - 1048 5784", "x2": "add x_0_1 add x_0_1 n", "tree": "(x_0_1 add (x_0_1 add n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 5 - 7 + 9 + 8 + 0 + 2 + 1 + 0 + 2 + 0 + 2 + 1 + 0 + 2 + 0 + 2 + 1 + 0 + 2 + 0 + 2 + 1 + 0 + 2 + 0", "x2": "mod abs abs x_0_5 INT+ 3", "tree": "(abs(abs(x_0_5)) mod 3)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420", "x2": "abs mul sub n mod sign mul idiv n INT- 1 sign INT+ 5 INT+ 2 n", "tree": "abs(((n sub (sign(((n idiv -1) mul sign(5))) mod 2)) mul n))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 9 - 6 + 7 - 5 - 6 + 9 + 49 + 64 + 25 + 49 + 64 + 49 + 2209 + 3844 + 529 + 2209 + 3844 + 2209 + 487 849 + 1476 964 + 27 7729 + 487 849 + 1476 964 + 487 849 + 23 7251 5049 7409 + 217 8859 9916 5444", "x2": "sqr add sub sign n relu INT+ 3 x_0_6", "tree": "(((sign(n) sub relu(3)) add x_0_6))**2", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 8 + 8 + 10 + 10 + 7 + 6 + 7 + 3 + 4 + 3 + 7 + 6 + 7 + 3 + 4 + 3 + 7 + 6 + 7 + 3 + 4 + 3 + 7 + 6", "x2": "sub INT+ 1 0 mod x_0_3 n", "tree": "(10 sub (x_0_3 mod n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 3 + 7 + 9 + 9 - 5 - 15 - 15 + 195 + 525 + 1065 - 15 - 465 - 15 - 15 + 22 485 - 15 - 15 - 5 5815 - 465 - 465 + 1 3229 985 - 6315 - 4065 - 669 7815 - 15 - 6 9765", "x2": "mul INT- 3 add mul mul INT- 1 0 idiv sqr mod x_0_3 n n x_0_6 INT+ 5", "tree": "(-3 mul (((-10 mul (((x_0_3 mod n))**2 idiv n)) mul x_0_6) add 5))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 1 - 5 + 7 - 4 + 9 + 9 - 4 + 0 + 0 + 12 + 0 + 13 + 0 + 0 + 4 + 0 + 12 + 0 + 13 + 0 + 0 + 4 + 0 + 12 + 0 + 13 + 0 + 0", "x2": "abs relu sub relu x_0_7 x_0_8", "tree": "abs(relu((relu(x_0_7) sub x_0_8)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 2 - 10 - 6 - 3 - 3 + 9 - 4 + 7 + 0 + 5 + 9 + 10 + 5 + 11 + 9 + 17 + 13 + 10 + 10 + 16 + 11 + 14 + 7 + 12 + 16 + 17 + 12 + 18", "x2": "abs sub add sign relu sign x_0_4 n abs x_0_7", "tree": "abs(((sign(relu(sign(x_0_4))) add n) sub abs(x_0_7)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 1 + 4 + 1 + 9 + 25 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "sqr abs mod INT- 7 n", "tree": "(abs((-7 mod n)))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4", "x2": "idiv n INT- 6", "tree": "(n idiv -6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 10 - 7 - 30 + 40 + 50 + 60 - 70 - 80 - 90 + 100 + 110 + 120 - 130 - 140 - 150 + 160 + 170 + 180 - 190 - 200 - 210 + 220 + 230", "x2": "idiv add INT+ 1 0 mul n INT- 1 0 sign idiv x_0_3 sub n relu mul mod n n n", "tree": "((10 add (n mul -10)) idiv sign((x_0_3 idiv (n sub relu(((n mod n) mul n))))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 7 - 1 - 8 + 3 + 3 + 2 + 2 - 1 - 10 + 3 - 10 - 6 - 15 - 23 - 10 - 14 - 2 - 17 - 21 - 31 - 19 - 20 - 19 - 36 - 49 - 37 - 35 + 6 - 27 - 52 - 63", "x2": "sub x_0_11 sub n relu sub x_0_5 sub add add x_0_4 n add n x_0_3 n", "tree": "(x_0_11 sub (n sub relu((x_0_5 sub (((x_0_4 add n) add (n add x_0_3)) sub n)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 6 + 4 + 8 + 5 + 10 + 10 + 2 + 7 + 1 + 1 + 17 + 3 + 21 + 21 + 3 + 13 + 21 + 21 + 13 + 13 + 21 + 21 + 13 + 13 + 21", "x2": "relu relu idiv add INT+ 5 sqr mod x_0_4 INT- 1 0 INT+ 4", "tree": "relu(relu(((5 add ((x_0_4 mod -10))**2) idiv 4)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 4 - 10 + 5 + 9 + 7 - 339 - 504 - 749 - 990 - 1313 - 1714 - 2875 - 3752 - 4873 - 6076 - 7539 - 9260 - 1 2609 - 1 5504 - 1 9007 - 2 2800 - 2 7245 - 3 2344 - 4 843 - 4 8584 - 5 7697", "x2": "add sub x_0_6 relu mul sqr n n x_0_6", "tree": "((x_0_6 sub relu(((n)**2 mul n))) add x_0_6)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 10 - 3 - 4 + 1818 - 5940 - 1818 - 2424 + 110 1708 - 352 8360 - 107 9892 - 143 9856 + 6 6763 5048 - 20 9584 5840 - 6 4145 5848 - 8 5527 4464 + 4045 8683 9088 - 1 2449 3242 8960 - 3810 2477 3712 - 5080 3303 1616 + 245 1796 2448 7328 - 739 4898 6280 2240 - 226 3287 1558 4928 - 301 7716 2077 9904 + 14 8578 8524 3932 768", "x2": "mul sub sub INT+ 9 abs INT+ 5 INT- 2 mul add sign add INT+ 3 add n x_0_4 sqr INT- 1 0 x_0_4", "tree": "(((9 sub abs(5)) sub -2) mul ((sign((3 add (n add x_0_4))) add (-10)**2) mul x_0_4))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 7 - 3 - 10 + 4 + 4 + 7 - 10 + 1 - 3 + 289 + 1 + 36 + 121 + 36 + 64 + 169 + 8 4100 + 4 + 10 5625 + 1 4884 + 5184 + 3 4225 + 4 2025", "x2": "abs sqr add x_0_7 x_0_9", "tree": "abs(((x_0_7 add x_0_9))**2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 6 + 3 + 8 + 8 + 6 + 5 + 9 + 3 + 4 + 7 + 1 + 1 + 5 + 4 + 3 + 2 + 12 + 14 + 2 + 7", "x2": "abs add idiv sub sqr idiv sub INT- 8 relu INT+ 3 mul n INT+ 7 n x_0_6 relu x_0_3", "tree": "abs(((((((-8 sub relu(3)) idiv (n mul 7)))**2 sub n) idiv x_0_6) add relu(x_0_3)))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 442 + 486 + 532 + 580 + 630 + 682 + 736 + 792 + 850 + 910 + 972 + 1036 + 1102 + 1170", "x2": "add n sqr sub relu n mul INT+ 4 INT- 5", "tree": "(n add ((relu(n) sub (4 mul -5)))**2)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 9 + 8 + 4 + 5 - 2 + 4 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 - 17 + 18 + 19 + 20 + 21", "x2": "mul sign mod idiv x_0_7 x_0_5 abs sub sqr INT+ 4 x_0_1 n", "tree": "(sign(((x_0_7 idiv x_0_5) mod abs(((4)**2 sub x_0_1)))) mul n)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 7 + 6 + 5 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 132 - 104 - 182 - 210 - 240 - 119 - 306", "x2": "mul sub abs idiv INT- 1 0 add mul n INT- 6 abs mod abs sign INT- 7 x_0_4 n n", "tree": "((abs((-10 idiv ((n mul -6) add abs((abs(sign(-7)) mod x_0_4))))) sub n) mul n)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 10 - 8 + 4 + 1 - 1 + 2 + 0 - 1 + 1 + 0 + 0 + 1 - 1 + 0 + 2 - 1 + 1", "x2": "sub sign sub mul sqr relu n sub x_0_3 x_0_4 sign INT+ 1 mod x_0_2 INT- 2", "tree": "(sign((((relu(n))**2 mul (x_0_3 sub x_0_4)) sub sign(1))) sub (x_0_2 mod -2))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 9 + 6 + 2 - 10 + 10 + 14 + 12 + 13 + 14 + 19 + 24 + 23 + 25 + 27 + 33 + 39 + 39 + 42", "x2": "sub add n relu relu add INT- 6 x_0_5 INT- 4", "tree": "((n add relu(relu((-6 add x_0_5)))) sub -4)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 + 4 + 6 + 8 + 2 - 3 + 7 + 2 - 12 - 8 - 6 - 8 - 12 - 15 - 14 - 16 - 24 - 24 - 24 - 24 - 24 - 30", "x2": "sub mod n x_0_8 n", "tree": "((n mod x_0_8) sub n)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 5 + 8 - 4 + 0 - 4 - 7 + 10 - 8 - 7 + 80 - 128 + 64 + 0 + 64 + 112 - 160 + 128 + 112 - 1280 + 2048 - 1024 + 0 - 1024", "x2": "idiv mul x_0_9 mul INT- 4 abs INT- 4 INT+ 1", "tree": "((x_0_9 mul (-4 mul abs(-4))) idiv 1)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 1 - 1 + 1 + 9 - 9 + 2 + 2 + 5 + 16 - 6 + 4 + 6 + 6 + 20 - 4 + 11 + 11 + 11 + 23", "x2": "sub add x_0_5 sign add x_0_2 mul relu INT+ 8 sqr n mod mul x_0_6 mul INT+ 5 n INT- 7", "tree": "((x_0_5 add sign((x_0_2 add (relu(8) mul (n)**2)))) sub ((x_0_6 mul (5 mul n)) mod -7))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 0 + 1 + 6 - 8 + 1 + 8 - 4 + 23 + 17 + 11 + 20 + 29 + 14 + 9 + 22 + 4 + 3 + 16 + 0 + 7 + 25", "x2": "abs relu add sub add abs sub n x_0_4 n x_0_8 INT- 2", "tree": "abs(relu((((abs((n sub x_0_4)) add n) sub x_0_8) add -2)))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 9 - 1 + 0 + 45 - 6 + 0 + 360 - 54 + 0 + 3960 - 648 + 0 + 5 5440 - 9720 + 0 + 94 2480", "x2": "mul mul x_0_3 n sign sqr n", "tree": "((x_0_3 mul n) mul sign((n)**2))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 6 - 9 - 13 - 18 - 24 - 31 - 39 - 48 - 58 - 69 - 81 - 94 - 108 - 123", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 4 + 3 + 8 + 3 + 1 + 7 - 1 - 2 + 13 + 11 + 17 + 9 + 8 + 3 + 1 + 27 + 19 + 18 + 13 + 11 + 37", "x2": "add idiv INT+ 1 0 sign x_0_7 x_0_5", "tree": "((10 idiv sign(x_0_7)) add x_0_5)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 + 7 + 8 + 9 + 9 - 1 + 3 - 6 - 1 + 4 - 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign mod n idiv n relu x_0_10", "tree": "sign((n mod (n idiv relu(x_0_10))))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 5 - 5 + 9 - 1 + 53 - 5 + 317 - 29 + 1901 - 173 + 1 1405 - 1037 + 6 8429 - 6221 + 41 573 - 3 7325 + 246 3437", "x2": "mod sign x_0_3 mul INT+ 3 mul INT+ 2 x_0_2", "tree": "(sign(x_0_3) mod (3 mul (2 mul x_0_2)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 3 + 3 + 7 + 0 - 5 - 7 - 3 + 9 + 8 + 11 + 6 + 4 + 21 + 14 + 8 + 11 + 7 + 36 + 49 + 55 + 28 + 25 + 111", "x2": "add x_0_6 idiv sub sign sub sign idiv mod x_0_1 n INT+ 4 x_0_8 sqr sub x_0_10 INT- 6 INT- 7", "tree": "(x_0_6 add ((sign((sign(((x_0_1 mod n) idiv 4)) sub x_0_8)) sub ((x_0_10 sub -6))**2) idiv -7))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 2 - 12 + 12 + 65 - 66 - 448 + 536 + 4041 - 5350 - 4 4440 + 6 4212 + 57 7733 - 89 8954 - 866 5980 + 1438 3280", "x2": "sub n mul n x_0_2", "tree": "(n sub (n mul x_0_2))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 6 + 2 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 6 + 6 + 6", "x2": "idiv mul INT- 8 idiv n INT- 1 add sqr add INT+ 4 relu mod n INT- 5 mod relu x_0_3 n", "tree": "((-8 mul (n idiv -1)) idiv (((4 add relu((n mod -5))))**2 add (relu(x_0_3) mod n)))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 10 - 2 + 6 + 10 + 11 + 4 - 4 - 8 - 10 - 4 + 4 + 7 + 10 + 4 - 3 - 6 - 10 - 4", "x2": "idiv sub idiv add x_0_3 INT+ 9 relu n x_0_4 sign sub INT+ 5 relu INT- 9", "tree": "((((x_0_3 add 9) idiv relu(n)) sub x_0_4) idiv sign((5 sub relu(-9))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4096 + 6400 + 2 736 + 7 8400 + 0 + 2 736 + 2 5600 + 6 9696 + 23 400 + 0 + 5 176 + 5 7600 + 14 7456 + 46 2400", "x2": "abs sqr mul relu mul idiv INT+ 5 mod n INT- 5 mod sqr INT+ 1 sub INT- 4 n INT+ 8", "tree": "abs(((relu(((5 idiv (n mod -5)) mul ((1)**2 mod (-4 sub n)))) mul 8))**2)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 4 - 7 - 324 - 567 - 2 6244 - 4 5927 - 212 5764 - 372 87 - 1 7218 6884 - 3 132 7047 - 139 4713 7604 - 244 749 807 - 1 1297 1814 5924 - 1 9770 675 5367 - 91 5071 6981 9844 - 160 1375 4718 4727", "x2": "mul sqr INT+ 9 x_0_2", "tree": "((9)**2 mul x_0_2)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 - 6 + 8 + 21 + 8 - 16 + 22 + 19 + 8 + 10 + 14 - 9 - 12 + 18 + 41 + 15 - 27", "x2": "sub abs sub relu sign INT+ 1 add sub x_0_3 sqr INT+ 2 sub relu x_0_3 n x_0_2", "tree": "(abs((relu(sign(1)) sub ((x_0_3 sub (2)**2) add (relu(x_0_3) sub n)))) sub x_0_2)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 2 + 0 + 4 + 7 + 8 + 0 + 5 - 6 + 6 + 2 + 0 - 5 + 7 - 3 + 0 + 1 + 6 - 8 - 14 + 0 - 16 + 2", "x2": "sub abs x_0_9 mod mul x_0_9 add x_0_6 add mul x_0_2 add n INT- 2 INT+ 3 n", "tree": "(abs(x_0_9) sub ((x_0_9 mul (x_0_6 add ((x_0_2 mul (n add -2)) add 3))) mod n))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 9 + 2 - 5 - 4 - 9 + 2 - 8 + 3 + 9 + 7 - 8 + 2 - 7 + 9 + 12 + 5 - 8 - 3 + 1 + 20 + 12 + 4 - 10 - 3", "x2": "add mod sub sqr sub INT- 3 n add sub x_0_2 relu x_0_11 sign INT+ 5 x_0_5 x_0_6", "tree": "(((((-3 sub n))**2 sub ((x_0_2 sub relu(x_0_11)) add sign(5))) mod x_0_5) add x_0_6)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 3 + 0 - 2 + 3 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0", "x2": "sqr idiv relu add relu mul abs n mul x_0_1 idiv sign x_0_2 n x_0_4 INT- 1 0", "tree": "((relu((relu((abs(n) mul (x_0_1 mul (sign(x_0_2) idiv n)))) add x_0_4)) idiv -10))**2", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 8 + 0 + 3 - 3 - 6 + 0 + 3 - 3 - 6 + 0 + 3 - 3 - 6 + 0 + 3 - 3 - 6", "x2": "sub mul sign mod n sign x_0_3 INT- 3 x_0_2", "tree": "((sign((n mod sign(x_0_3))) mul -3) sub x_0_2)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 + 7 + 88 + 344 + 969 + 2265 + 4666 + 8762 + 1 5323 + 2 5323 + 3 9964 + 6 700 + 8 9261 + 12 7677 + 17 8302", "x2": "add x_0_1 sqr sqr abs n", "tree": "(x_0_1 add ((abs(n))**2)**2)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 7 - 1 - 5 + 6 + 10 - 5 + 1 + 7 + 3 + 14 + 18 + 3 + 9 + 15 + 11 + 22 + 26 + 11 + 17 + 23", "x2": "sub add x_0_6 INT+ 8 mod mul mul n INT+ 3 x_0_2 n", "tree": "((x_0_6 add 8) sub (((n mul 3) mul x_0_2) mod n))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 1 - 8 - 7 + 4 + 3 - 6 + 0 + 8 - 6 - 3 - 6 - 1 + 0 - 6 - 3 - 6 - 5 - 6 - 7 - 5 - 15 - 17 - 23", "x2": "mod sqr INT+ 7 sub abs x_0_10 n", "tree": "((7)**2 mod (abs(x_0_10) sub n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 1 + 4 + 4 + 4 + 9 + 9 + 9 + 16 + 16 + 16 + 25 + 25 + 25", "x2": "sqr add idiv n INT+ 3 INT+ 1", "tree": "(((n idiv 3) add 1))**2", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 3 - 9 - 1 - 250 - 540 - 1127 - 1088 - 2 1708 - 5 6000 - 13 9029 - 16 128 - 367 3046 - 1098 1488 - 3128 8275 - 4100 960 - 10 6152 120 - 35 5801 3776", "x2": "mul n mul sub x_0_4 add n n n", "tree": "(n mul ((x_0_4 sub (n add n)) mul n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 + 7 + 10 - 9 + 2 + 3 + 0 + 254 + 331 + 410 + 475 + 578 + 679 + 784 + 1154 + 1355 + 1566 + 1771 + 2022 + 2279 + 2548", "x2": "add sqr add n idiv sqr n n x_0_7", "tree": "(((n add ((n)**2 idiv n)))**2 add x_0_7)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 4 - 5 - 1 - 1 + 4 + 5 + 11 + 13 + 20 + 23 + 31 + 35 + 44 + 49 + 59 + 65", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 - 3 + 4 - 2 + 7 - 2 + 3 - 8 - 13 - 26 + 29 - 56 + 22 - 109 + 26 - 52 + 124 + 256 + 438 - 642 + 948 - 532", "x2": "sub INT- 4 mul x_0_9 add mul sign sqr INT+ 1 n idiv x_0_7 n", "tree": "(-4 sub (x_0_9 mul ((sign((1)**2) mul n) add (x_0_7 idiv n))))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 9 + 3 + 4 - 7 + 9 - 2 + 6 + 7 - 8 + 1 + 1 + 1 + 1 + 2 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 1 + 1", "x2": "idiv abs add sign sign INT+ 5 sqr idiv n add x_0_10 n INT+ 1", "tree": "(abs((sign(sign(5)) add ((n idiv (x_0_10 add n)))**2)) idiv 1)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 1 - 8 + 8 + 0 + 64 + 0 + 512 + 0 + 4096 + 0 + 3 2768 + 0 + 26 2144 + 0 + 209 7152 + 0", "x2": "mul relu relu x_0_2 INT+ 8", "tree": "(relu(relu(x_0_2)) mul 8)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 10 + 9 - 2 + 2 + 1 + 0 - 6 + 0 - 2 + 0 - 2 + 0 + 0 + 0 - 2 + 0 - 2 + 0 - 2 + 0 + 0", "x2": "mul idiv idiv x_0_8 n n INT+ 2", "tree": "(((x_0_8 idiv n) idiv n) mul 2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 8 - 7 + 9 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "idiv x_0_4 sqr idiv relu add INT- 9 mul n INT+ 3 sign idiv INT+ 8 n", "tree": "(x_0_4 idiv ((relu((-9 add (n mul 3))) idiv sign((8 idiv n))))**2)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 + 4 + 8 + 2 - 2 + 2 + 27 + 83 + 11 + 3 + 11 + 786 + 7058 + 146 + 18 + 146 + 61 9371 + 4982 9483 + 2 1611", "x2": "add sqr add sign mod sub INT+ 7 x_0_3 n x_0_5 INT+ 2", "tree": "(((sign(((7 sub x_0_3) mod n)) add x_0_5))**2 add 2)", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 10 + 2 + 9 + 5 - 4 - 60 + 14 + 72 + 45 - 40 - 660 + 168 + 936 + 630 - 600 - 1 560 + 2856 + 1 6848 + 1 1970", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 3 - 2 + 1 + 2 + 5 + 6 + 9 + 10 + 13 + 14 + 17 + 18 + 21 + 22 + 25 + 26", "x2": "sub x_0_2 INT- 4", "tree": "(x_0_2 sub -4)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 1 - 7 + 2 - 16 + 128 - 1024 + 8192 - 6 5536 + 52 4288 - 419 4304 + 3355 4432 - 2 6843 5456 + 21 4748 3648 - 171 7986 9184 + 1374 3895 3472 - 1 995 1162 7776 + 8 7960 9302 2208", "x2": "add mul sign INT- 9 mul INT+ 8 x_0_1 mod mod mod INT+ 8 INT- 8 INT- 1 x_0_3", "tree": "((sign(-9) mul (8 mul x_0_1)) add (((8 mod -8) mod -1) mod x_0_3))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 9 + 1 + 2 + 9 - 4 - 3 + 2 - 9 - 7 - 1 + 3 + 0 + 3 + 6 + 11 + 0 + 0 + 6 + 0 + 0 + 0 + 9 + 0 + 9", "x2": "relu mod relu mul x_0_11 INT+ 3 n", "tree": "relu((relu((x_0_11 mul 3)) mod n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 10 + 2 - 6 + 6 + 1 + 12 + 10 + 16 + 14 + 20 + 18 + 24 + 22 + 28 + 26 + 32 + 30 + 36 + 34", "x2": "add mul mod sqr mod relu n abs INT- 2 x_0_5 INT- 4 add n n", "tree": "(((((relu(n) mod abs(-2)))**2 mod x_0_5) mul -4) add (n add n))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 5 + 6 + 46 + 251 + 1280 + 6390 + 3 1740 + 15 7466 + 78 991 + 387 3271 + 1920 8950 + 9526 3825 + 4 7244 5925 + 23 4302 751 + 116 1984 11 + 576 2675 4216", "x2": "sub sub sign add sub INT+ 7 n n mul INT- 5 add x_0_1 n x_0_3", "tree": "((sign(((7 sub n) add n)) sub (-5 mul (x_0_1 add n))) sub x_0_3)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 - 3 - 3 - 2 - 1 + 42 + 21 + 24 + 18 + 10 - 462 - 252 - 312 - 252 - 150 + 7392 + 4284 + 5616 + 4788", "x2": "idiv mul sub mul relu INT+ 2 mod n n x_0_5 mul n n n", "tree": "((((relu(2) mul (n mod n)) sub x_0_5) mul (n mul n)) idiv n)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 1 + 6 + 13 + 22 + 33 + 46 + 61 + 78 + 97 + 118 + 141 + 166 + 193", "x2": "mod sub add mul INT+ 1 n mul INT- 2 sign INT+ 2 add n sign n mul abs n n", "tree": "((((1 mul n) add (-2 mul sign(2))) sub (n add sign(n))) mod (abs(n) mul n))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 7 - 34 - 45 - 104 - 135 - 216 - 271 - 378 - 461 - 598 - 713 - 884 - 1035 - 1244 - 1435", "x2": "add x_0_2 mul n sub INT- 9 n", "tree": "(x_0_2 add (n mul (-9 sub n)))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 3 + 2 + 6 + 1 - 2 - 6 + 16 + 12 + 13 + 14 + 30 + 18 + 23 + 30 + 37 + 25 + 30 + 22 + 42 + 26", "x2": "add abs sub n mod x_0_7 mul x_0_4 sign sub mod INT+ 8 abs n add INT+ 9 INT+ 2 INT+ 3", "tree": "(abs((n sub (x_0_7 mod (x_0_4 mul sign(((8 mod abs(n)) sub (9 add 2))))))) add 3)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 6 + 10 + 9 + 12 + 35 + 0 + 9 + 64 - 9 + 24 + 305 + 0 + 21 + 604 - 9 + 72 + 3005", "x2": "mul mod relu n INT+ 6 add abs x_0_3 INT- 3", "tree": "((relu(n) mod 6) mul (abs(x_0_3) add -3))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 - 3 + 5 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 2 - 10 - 5 - 10 - 10 + 1 + 9 + 18 + 15 + 21 + 22 + 12 + 5 - 3 + 1 - 4 - 5 + 7 + 14", "x2": "sub n sub x_0_6 idiv sign x_0_3 n", "tree": "(n sub (x_0_6 sub (sign(x_0_3) idiv n)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 6 + 18 + 72 + 360 + 2160 + 1 5120 + 12 960 + 108 8640 + 1088 6400 + 1 1975 400 + 14 3700 4800 + 186 8106 2400 + 2615 3487 3600 + 3 9230 2310 4000", "x2": "mul x_0_1 n", "tree": "(x_0_1 mul n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 60 + 60 + 60 + 60 + 60 + 60 + 120 + 120 + 120", "x2": "abs mul sub n mod n INT+ 6 abs abs INT+ 1 0", "tree": "abs(((n sub (n mod 6)) mul abs(abs(10))))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 1 + 0 + 4 - 4 + 0 - 7 - 10 + 45 - 220 + 5 - 5 + 5 - 20 + 5 - 20 + 95 - 470 + 2345 - 1 1720 + 5 8595 - 29 2970", "x2": "mul INT- 5 mod sign sign add x_0_8 INT- 4 x_0_1", "tree": "(-5 mul (sign(sign((x_0_8 add -4))) mod x_0_1))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 0 + 3 + 3 + 22 + 26 + 182 + 240 + 1827 + 2648 + 2 1933 + 3 4434 + 30 7073 + 51 6522 + 491 3181 + 878 888", "x2": "add add add relu abs mul n x_0_2 sub INT- 3 idiv INT- 8 n x_0_2 n", "tree": "(((relu(abs((n mul x_0_2))) add (-3 sub (-8 idiv n))) add x_0_2) add n)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 - 8 + 7 + 10 - 6 + 5 - 4 - 7 + 8 + 2 + 3 + 4 + 20 + 24 + 9 + 21 + 13 + 11 + 27 + 22 + 24 + 26 + 43 + 48", "x2": "add n x_0_10", "tree": "(n add x_0_10)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 9 - 2 + 8 - 6 - 9 - 8 + 1 + 36 + 0 + 4 + 49 + 0 + 1 + 16 + 0 + 16 + 1 + 0 + 1 + 0", "x2": "sqr add add INT+ 9 sub INT- 9 INT- 7 mod sub x_0_6 abs INT+ 7 INT- 8", "tree": "(((9 add (-9 sub -7)) add ((x_0_6 sub abs(7)) mod -8)))**2", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 8 - 2 + 4 + 0 - 6 + 1 + 1 - 3 - 1 + 1 + 0 - 2 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_7 abs INT- 3", "tree": "(x_0_7 idiv abs(-3))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 2 - 10 + 10 + 15 - 12 - 70 + 80 + 135 - 120 - 770 + 960 + 1755 - 1680 - 1 1550 + 1 5360 + 2 9835 - 3 240", "x2": "mul sign n mul mul n sign INT+ 1 x_0_4", "tree": "(sign(n) mul ((n mul sign(1)) mul x_0_4))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 4 - 4 - 6 + 0 - 4 + 0 + 1 + 0 + 7 + 4 + 9 + 11 + 11 + 19 + 17 + 23 + 26 + 27 + 36", "x2": "add x_0_5 mod INT- 2 n", "tree": "(x_0_5 add (-2 mod n))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 + 5 - 4 + 32 + 30 + 72 + 42 + 104 + 18 + 150 - 66 + 300 - 65 + 826 - 405 + 2144 - 918", "x2": "mul add idiv sub abs x_0_2 x_0_3 INT+ 7 abs INT+ 7 n", "tree": "((((abs(x_0_2) sub x_0_3) idiv 7) add abs(7)) mul n)", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 4 + 6 - 3 + 0 - 10 - 9 - 10 + 26 + 247 + 39 + 126 + 247 + 40 + 126 + 1543 + 6 6089 + 2527 + 2 39 + 13 2138 + 5027 + 3 8535", "x2": "add x_0_3 sqr sub mul sign sub INT- 9 relu idiv add INT- 5 INT- 6 x_0_7 INT+ 1 0 x_0_7", "tree": "(x_0_3 add (((sign((-9 sub relu(((-5 add -6) idiv x_0_7)))) mul 10) sub x_0_7))**2)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 7 + 10 + 0 + 7 + 30 + 49 + 80 + 0 + 70 + 330 + 588 + 1040 + 0 + 1050 + 5280 + 9996 + 1 8720 + 0", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 0 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135", "x2": "add n add abs sub x_0_1 x_0_2 x_0_2", "tree": "(n add (abs((x_0_1 sub x_0_2)) add x_0_2))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 + 8 - 6 + 4 + 3 + 5 - 2 + 10 - 3 - 6 + 8 - 6 + 4 + 3 + 5 - 2 + 10 - 3 - 6 + 8 - 6 + 4 + 3", "x2": "mul sign mod add mul idiv abs INT+ 5 sign x_0_6 INT+ 1 0 n n x_0_9", "tree": "(sign(((((abs(5) idiv sign(x_0_6)) mul 10) add n) mod n)) mul x_0_9)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 10 - 7 - 10 + 8 + 2 - 10 + 2 - 1 + 5 - 2 + 5 - 9 - 4 - 9 + 14 + 3 - 4 + 3 + 0 + 6 + 13 + 9 - 8 + 0 - 8", "x2": "sub relu x_0_6 sub idiv INT- 9 n x_0_11", "tree": "(relu(x_0_6) sub ((-9 idiv n) sub x_0_11))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 6 - 10 + 3 - 6 + 6 + 10 + 3 + 6 + 6 + 10 + 3 + 6 + 6 + 10 + 3 + 6 + 6 + 10", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 - 6 + 10 + 6 - 10 + 9 - 10 - 10 - 3 - 8 + 36 + 52 + 4 + 28 + 8 + 0 + 40 + 16 + 32 + 36 + 0 + 0 + 4 + 0", "x2": "relu sub mul sub mod INT+ 8 x_0_10 sqr INT+ 3 INT- 4 relu x_0_4", "tree": "relu(((((8 mod x_0_10) sub (3)**2) mul -4) sub relu(x_0_4)))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 1 + 10 + 3 + 2 + 10 + 3 + 3 + 10 + 3 + 4 + 10 + 4 + 5 + 11 + 5 + 6", "x2": "add sub x_0_3 mul idiv INT+ 3 x_0_2 mod idiv n n sub add sqr n n n INT+ 1", "tree": "((x_0_3 sub ((3 idiv x_0_2) mul ((n idiv n) mod (((n)**2 add n) sub n)))) add 1)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 + 8 - 8 - 5 + 4 - 3 - 6 - 10 + 3 + 1134 + 1179 + 1539 + 1746 + 1917 + 2250 + 2565 + 2907 + 3114 - 6723 - 6768 - 9630 - 1 1097 - 1 2222", "x2": "mul INT+ 9 add INT+ 7 add sqr n sub add n mod x_0_3 sign sub n x_0_2 x_0_9", "tree": "(9 mul (7 add ((n)**2 add ((n add (x_0_3 mod sign((n sub x_0_2)))) sub x_0_9))))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 4 - 7 - 6 + 7 - 9 - 10 + 9 + 5 + 59 + 63 + 71 + 91 + 82 + 88 + 114 + 117 + 178 + 189 + 204 + 231 + 229 + 242", "x2": "add mul INT+ 7 relu n x_0_8", "tree": "((7 mul relu(n)) add x_0_8)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 1 + 7 + 5 - 30 + 144 - 439 + 2626 - 2635 + 2 3705 - 9 4831 + 66 3805 - 531 453 + 4779 4063 - 2 8676 4393 + 14 3382 1949 - 143 3821 9507 + 430 1465 8503", "x2": "sub mul mod x_0_3 mul sign mul abs x_0_4 INT- 6 n x_0_1 add relu x_0_1 n", "tree": "(((x_0_3 mod (sign((abs(x_0_4) mul -6)) mul n)) mul x_0_1) sub (relu(x_0_1) add n))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 - 3 - 6 - 12 - 30 - 72 - 210 - 576 - 1890 - 5760 - 2 790 - 6 9120 - 27 270 - 96 7680 - 405 4050 - 1548 2880", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 9 + 18 + 54 + 216 + 1080 + 6480 + 4 5360 + 36 2880 + 326 5920 + 3265 9200 + 3 5925 1200 + 43 1101 4400 + 560 4318 7200 + 7846 462 800 + 11 7690 6931 2000", "x2": "mul abs x_0_1 mod n sub mul n abs sqr x_0_1 INT- 3", "tree": "(abs(x_0_1) mul (n mod ((n mul abs((x_0_1)**2)) sub -3)))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 6 + 5 + 3 + 1 - 1 + 5 + 2 + 6 + 2 + 6 + 2 + 5 - 1", "x2": "add mod idiv sub sqr n INT- 1 INT- 5 INT+ 8 INT- 1", "tree": "(((((n)**2 sub -1) idiv -5) mod 8) add -1)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 - 16 - 24 - 33 - 43 - 54 - 66 - 79 - 93 - 108 - 124 - 141 - 159 - 178 - 198", "x2": "sub add sub x_0_1 n INT- 4 sign relu INT- 4", "tree": "(((x_0_1 sub n) add -4) sub sign(relu(-4)))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 2 + 252 + 54 + 1 1322 + 2898 + 71 3268 + 20 8638 + 5777 4690 + 1877 7402 + 57 1969 4292 + 20 2795 9398 + 6692 423 2146 + 2555 2288 4130 + 90 3425 7133 9692 + 36 7952 9531 4702", "x2": "mul INT- 9 sub INT+ 2 mul relu x_0_2 n", "tree": "(-9 mul (2 sub (relu(x_0_2) mul n)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 10 - 8 - 10 - 41 + 59 + 55 + 79 + 370 - 589 - 604 - 947 - 4811 + 8245 + 9059 + 1 5151 + 8 1788 - 14 8409", "x2": "idiv sub mul n x_0_4 sign x_0_3 sign mod n sub INT- 1 0 INT+ 9", "tree": "(((n mul x_0_4) sub sign(x_0_3)) idiv sign((n mod (-10 sub 9))))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 5 + 9 - 20 + 45 - 120 + 315 - 960 + 2835 - 9600 + 3 1185 - 11 5200 + 40 5405 - 161 2800 + 608 1075 - 2580 4800", "x2": "mul mul sign abs x_0_1 n x_0_2", "tree": "((sign(abs(x_0_1)) mul n) mul x_0_2)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 9 - 5 + 2 + 7 - 14 + 12 + 6 - 3 - 7 + 12 - 10 - 5 + 2 + 4 - 8 + 5 + 2 - 2", "x2": "idiv mul INT- 1 0 x_0_5 n", "tree": "((-10 mul x_0_5) idiv n)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 10 + 4 + 0 + 10 + 4 + 0 + 10 + 4 + 0 + 10 + 4 + 0 + 10 + 4 + 0 + 10", "x2": "add sub n abs n abs x_0_3", "tree": "((n sub abs(n)) add abs(x_0_3))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 9 - 4 + 7 + 2 - 9 - 4 + 7 + 2 - 9 - 4 + 7 + 2 - 9 - 4 + 7", "x2": "add INT- 2 sub sqr mod add INT- 1 mul sub sqr sqr INT+ 8 n relu n INT+ 1 x_0_2", "tree": "(-2 add ((((-1 add ((((8)**2)**2 sub n) mul relu(n))) mod 1))**2 sub x_0_2))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 3 + 6 + 3 + 8 + 0 - 6 + 0 + 4 + 0 + 6 + 3 + 8 + 1 + 2 + 2 + 4 + 0 + 6 + 2 + 0", "x2": "abs add INT- 2 add idiv add x_0_7 INT- 4 INT- 8 x_0_6", "tree": "abs((-2 add (((x_0_7 add -4) idiv -8) add x_0_6)))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 70 + 490 - 3430 + 2 4010 - 16 8070 + 117 6490 - 823 5430 + 5764 8010 - 4 353 6070 + 28 2475 2490 - 197 7326 7430 + 1384 1287 2010 - 9688 9010 4070 + 6 7822 3072 8490", "x2": "mul INT- 7 x_0_1", "tree": "(-7 mul x_0_1)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 5 + 2 - 6 - 4 + 1 - 3 + 1 + 3 + 3 + 5 + 4 + 6 + 6 + 7 + 9 + 11 + 11 + 15 + 17", "x2": "add x_0_3 abs x_0_6", "tree": "(x_0_3 add abs(x_0_6))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4", "x2": "idiv n INT+ 3", "tree": "(n idiv 3)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 1 + 2 + 6 + 10 + 16 + 1 + 4 + 36 + 100 + 256 + 1 + 16 + 1296 + 1 0 + 6 5536 + 1 + 256 + 167 9616", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 10 + 4 - 5 - 8 + 0 + 0 + 7 + 36 + 0 + 1 + 81 + 4 + 0 + 0 + 25 + 36 + 0 + 9 + 9 + 144 + 0", "x2": "sqr abs mod add n idiv mul x_0_8 INT+ 3 relu idiv relu n n n", "tree": "(abs(((n add ((x_0_8 mul 3) idiv relu((relu(n) idiv n)))) mod n)))**2", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416", "x2": "sqr relu mul n n", "tree": "(relu((n mul n)))**2", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 9 + 5 + 0 - 2 - 1 - 8 + 1 - 10 + 19 + 0 + 1 + 5 + 1 + 15 + 13 + 21 - 3 + 1 + 19 + 12 + 21 - 6", "x2": "sub sign x_0_9 add mod sub x_0_8 sub n n sub mul relu x_0_7 mod n n n x_0_8", "tree": "(sign(x_0_9) sub (((x_0_8 sub (n sub n)) mod ((relu(x_0_7) mul (n mod n)) sub n)) add x_0_8))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 1 - 9 + 0 + 1 + 9 + 1 + 3 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 2", "x2": "abs mod sub x_0_3 idiv x_0_5 INT+ 5 relu n", "tree": "abs(((x_0_3 sub (x_0_5 idiv 5)) mod relu(n)))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 216 + 267 + 324 + 387 + 456 + 531 + 612 + 699 + 792 + 891 + 996 + 1107 + 1224 + 1347", "x2": "mul sub sqr add relu n INT+ 7 INT- 8 abs INT+ 3", "tree": "((((relu(n) add 7))**2 sub -8) mul abs(3))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 2 - 10 - 72 - 460 - 4032 - 3 360 - 30 6432 - 261 960 - 2941 7472 - 2 7676 1760 - 34 1242 6752 - 348 7198 1760 - 4640 9003 8272 - 5 913 933 6960 - 72 3980 4597 432 - 845 1573 4993 5360", "x2": "mul abs sub relu INT+ 3 add mul INT- 3 sign n mul sub INT- 4 abs INT+ 6 n x_0_2", "tree": "(abs((relu(3) sub ((-3 mul sign(n)) add ((-4 sub abs(6)) mul n)))) mul x_0_2)", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 10 - 3 + 30 + 12 + 150 + 72 + 1050 + 576 + 9450 + 5760 + 10 3950 + 6 9120 + 135 1350 + 96 7680 + 2027 250 + 1548 2880", "x2": "mul abs x_0_2 n", "tree": "(abs(x_0_2) mul n)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 - 8 + 4 - 10 - 1 + 2 + 0 - 1 - 10 - 40 + 2 + 8 - 1 - 2 - 170 - 1302 + 34 - 2492", "x2": "sub idiv x_0_2 INT- 5 relu mul sign n mul add x_0_3 x_0_4 sub n x_0_1", "tree": "((x_0_2 idiv -5) sub relu((sign(n) mul ((x_0_3 add x_0_4) mul (n sub x_0_1)))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 7 + 19 + 39 + 69 + 111 + 167 + 239 + 330 + 441 + 574 + 731 + 914 + 1125 + 1366", "x2": "add add idiv mul n sign INT+ 8 INT+ 9 n add x_0_1 sqr n", "tree": "((((n mul sign(8)) idiv 9) add n) add (x_0_1 add (n)**2))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 36 + 9 + 25 + 25 + 9 + 36 + 0 + 36 + 9 + 25 + 25 + 9 + 36 + 0 + 36 + 9 + 25 + 25 + 9 + 36", "x2": "sqr mod sqr n INT- 7", "tree": "(((n)**2 mod -7))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 3 - 9 + 1 - 6 - 18 - 8 - 15 - 27 - 17 - 24 - 36 - 26 - 33 - 45 - 35 - 42 - 54 - 44 - 51 - 63 - 53 - 60", "x2": "add sub INT- 9 mod mod relu sign x_0_1 INT- 2 abs idiv sign n x_0_1 x_0_3", "tree": "((-9 sub ((relu(sign(x_0_1)) mod -2) mod abs((sign(n) idiv x_0_1)))) add x_0_3)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 2 - 9 + 5 + 504 + 3 6000 + 259 2792 + 1 8671 7816 + 134 4627 5328 + 9683 1850 5288 + 69 7323 7606 4208 + 5021 6992 844 7384 + 36 1632 619 4059 3248 + 2604 2529 1907 9933 7768 + 18 7542 3664 805 6053 1952 + 1350 5654 1322 2600 8101 5480 + 9 7259 4603 7304 4633 8543 5008 + 700 4031 4518 9735 1641 962 2344 + 5 438 7505 2463 6134 5417 2592 4624 + 363 2290 3058 8848 7608 3680 1789 4872 + 2 6157 5331 504 2476 8734 3131 8124 992 + 188 3705 5425 6683 5715 557 5533 1592 5864 + 1 3565 2951 5550 1456 8594 7946 3360 3509 4576 + 97 6889 5854 3446 1199 7160 1006 7435 7616 2552", "x2": "mul mul add INT+ 5 INT+ 1 add x_0_1 add n x_0_3 mul add INT+ 6 INT- 4 INT+ 6", "tree": "(((5 add 1) mul (x_0_1 add (n add x_0_3))) mul ((6 add -4) mul 6))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 7 + 5 - 7 + 3 - 1 + 1 + 10 - 7 - 10 - 11 - 10 - 6 - 14 - 10 - 10 - 13 - 10 - 13 - 10 - 19 - 1 - 13 - 19 - 5 - 2 - 4 - 4 - 7", "x2": "sub mod mul sub x_0_9 sub relu n sqr INT- 9 INT- 5 n n", "tree": "((((x_0_9 sub (relu(n) sub (-9)**2)) mul -5) mod n) sub n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 - 9 - 14 - 19 - 23 - 22 - 23 - 20 - 13 - 12 - 8 - 1 + 9 + 22 + 38 + 57 + 79 + 104 + 132 + 143 + 156", "x2": "add mod mul add INT+ 6 INT- 1 0 add n INT+ 5 n add add relu n INT- 9 x_0_1", "tree": "((((6 add -10) mul (n add 5)) mod n) add ((relu(n) add -9) add x_0_1))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 0 + 2 - 2 - 8 - 1 + 1 + 1 + 1 + 7 + 13 + 7 + 7 - 5 - 5 + 1 - 5 - 5 + 1 + 7 + 7 - 5 + 31 + 7 + 7 - 41", "x2": "sub sign abs INT- 7 mul INT+ 6 idiv x_0_6 sub abs INT+ 8 x_0_2", "tree": "(sign(abs(-7)) sub (6 mul (x_0_6 idiv (abs(8) sub x_0_2))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 8 + 0 + 3 + 4 + 3 + 6 + 7 + 6 + 9 + 10 + 9 + 12 + 13 + 12 + 15 + 16 + 15 + 18 + 19 + 18 + 21", "x2": "add n mod x_0_1 INT- 3", "tree": "(n add (x_0_1 mod -3))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0", "x2": "mod mod abs n abs INT- 5 n", "tree": "((abs(n) mod abs(-5)) mod n)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 2 + 5 + 8 - 4 - 1 + 1301 - 1 - 1 + 1799 + 1957 - 1 + 2261 + 2407 - 1 - 1 + 2821 - 1 - 1 + 3199 + 3317 - 1 + 3541 + 3647 - 1", "x2": "add INT- 1 mul sub mod INT+ 1 sub n INT+ 1 sign x_0_5 mul n sub sqr INT- 1 0 n", "tree": "(-1 add (((1 mod (n sub 1)) sub sign(x_0_5)) mul (n mul ((-10)**2 sub n))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 8 + 6 + 1 + 8 + 6 + 1 + 8 + 6 + 1 + 8 + 6 + 1 + 8 + 6 + 1 + 8 + 6 + 1 + 8 + 6 + 1 + 8", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 + 7 + 9 + 5 + 49 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359 + 398 + 439 + 482 + 527 + 574 + 623 + 674", "x2": "add n sub add sqr n n sign x_0_5", "tree": "(n add (((n)**2 add n) sub sign(x_0_5)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 6 - 12 - 17 - 21 - 24 - 26 - 27 - 27 - 26 - 24 - 21 - 17 - 12 - 6 + 1 + 9 + 18 + 28 + 39 + 51 + 64", "x2": "add sub n INT+ 8 x_0_1", "tree": "((n sub 8) add x_0_1)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 9 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "sub n mul n sub abs mod sign sub idiv INT- 1 relu x_0_2 n INT- 3 sqr n", "tree": "(n sub (n mul (abs((sign(((-1 idiv relu(x_0_2)) sub n)) mod -3)) sub (n)**2)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 10 - 5 + 10 + 5 - 10 - 5 + 10 + 5 - 10 - 5 + 10 + 5 - 10 - 5 + 10 + 5 - 10 - 5 + 10 + 5 - 10", "x2": "sub sub sign n x_0_2 sign n", "tree": "((sign(n) sub x_0_2) sub sign(n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 + 3 - 6 - 2 + 3 + 16 + 10 + 16 + 14 + 23 + 5 + 18 + 11 + 23 - 3 + 29 + 10 + 30 - 1 + 52 + 2 + 42 - 6 + 77 - 25", "x2": "sub relu abs add abs abs x_0_4 n x_0_5", "tree": "(relu(abs((abs(abs(x_0_4)) add n))) sub x_0_5)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 1 + 3 + 1 + 5 + 1 + 7 + 1 + 9 + 1 + 11 + 1 + 13 + 1 + 15 + 1 + 17 + 1 + 19 + 1 + 21", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 + 4 + 5 + 7 + 10 + 14 + 21 + 33 + 53 + 90 + 162 + 309 + 626 + 1350 + 3095 + 7527 + 1 9366 + 5 2576 + 15 229 + 45 699", "x2": "abs idiv mul add sqr INT- 2 abs x_0_1 n INT- 7", "tree": "abs(((((-2)**2 add abs(x_0_1)) mul n) idiv -7))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 - 4 + 8 - 6 + 10 - 2 + 7 + 5 + 59 + 46 + 0 + 80 + 0 + 38 + 0 + 0 + 0 + 0 + 15 + 0 + 17 + 0 + 19 + 20 + 21 + 22 + 0 + 24", "x2": "sub relu add INT- 4 sub n mul x_0_8 idiv n idiv n n mod INT- 5 INT- 1", "tree": "(relu((-4 add (n sub (x_0_8 mul (n idiv (n idiv n)))))) sub (-5 mod -1))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 4 + 7 + 4 + 1 + 1 - 8 - 8 + 4 + 3 + 1 + 40 + 68 + 4 + 7 + 1 + 2 + 4 + 4 + 27 + 1 + 4 + 8 + 12 + 1 + 1 + 7 + 13", "x2": "sub sqr idiv mod mod n x_0_5 n sign INT+ 5 mod x_0_7 INT- 5", "tree": "(((((n mod x_0_5) mod n) idiv sign(5)))**2 sub (x_0_7 mod -5))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 9 - 9 - 1 + 3 + 2 + 0 + 9 + 0 + 4 + 10 + 0 + 6 + 13 + 0 + 13 + 15 + 0 + 30 + 1 + 5 + 16 + 1 + 18", "x2": "relu abs mod sub INT+ 9 add sub INT- 5 n x_0_1 sub sub x_0_1 x_0_3 n", "tree": "relu(abs(((9 sub ((-5 sub n) add x_0_1)) mod ((x_0_1 sub x_0_3) sub n))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 10 - 3 - 5 + 5 + 5 + 0 + 6 + 4 + 6 + 0 + 0 + 0 + 22 + 16 + 0 + 0 + 0 + 12 + 2 + 0 + 0 + 0 + 6 + 24 + 0", "x2": "mul mod add mul x_0_5 INT+ 6 sqr mul n add INT- 7 n n INT+ 2", "tree": "((((x_0_5 mul 6) add ((n mul (-7 add n)))**2) mod n) mul 2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 8 + 7 - 4 - 2 - 5 + 6 + 10 - 1 + 1 + 0 - 1 - 1 + 1 + 1 + 0 + 1 + 0 + 0 - 1 + 0 + 0 + 1 + 1 + 0 + 1 - 1 + 1", "x2": "mod sqr add add add x_0_6 mul x_0_4 relu INT+ 5 x_0_3 x_0_3 mul sign add x_0_7 x_0_7 INT+ 2", "tree": "(((((x_0_6 add (x_0_4 mul relu(5))) add x_0_3) add x_0_3))**2 mod (sign((x_0_7 add x_0_7)) mul 2))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 - 3 - 3 - 3 - 3 - 3 - 3 - 6 - 6 - 6 - 6 - 6 - 6 - 9 - 9 - 9", "x2": "mul abs mod abs idiv n INT+ 6 n INT- 3", "tree": "(abs((abs((n idiv 6)) mod n)) mul -3)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 + 6 + 4 + 8 + 2 + 8 + 4 + 20 + 3 + 9 + 3 + 20 + 4 + 9 + 3 + 20 + 4 + 8 + 3 + 25 + 5 + 7 + 3 + 24", "x2": "abs idiv mul INT- 5 n add x_0_3 relu sub n sub x_0_4 mod n n", "tree": "abs(((-5 mul n) idiv (x_0_3 add relu((n sub (x_0_4 sub (n mod n)))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 9 - 9 - 1 - 5 + 2 + 41 - 35 - 347 + 277 + 2765 - 2213 - 2 2039 + 1 7633 + 17 5617 - 14 511 - 139 9407 + 111 9661 + 1115 1177 - 892 2023 - 8885 8183 + 7109 5161 + 7 806 6649 - 5 6652 1967 - 56 4223 839 + 45 1433 1689", "x2": "add mul mul x_0_2 sign n INT- 8 sub INT- 1 mul x_0_6 add INT- 5 INT+ 3", "tree": "(((x_0_2 mul sign(n)) mul -8) add (-1 sub (x_0_6 mul (-5 add 3))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 - 2 + 8 - 9 - 1 + 4 + 1 9208 + 3 2768 + 5 2488 + 8 0 + 11 7128 + 16 5888 + 22 8488 + 30 7328 + 40 5000 + 52 4288 + 66 8168 + 83 9808 + 104 2568 + 128 0 + 155 5848 + 187 4048 + 223 8728 + 265 4208 + 312 5000 + 365 5808", "x2": "mul mul add n n mul add INT+ 4 idiv n mul mul n n abs x_0_6 n mul n n", "tree": "(((n add n) mul ((4 add (n idiv ((n mul n) mul abs(x_0_6)))) mul n)) mul (n mul n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 7 - 1 - 8 + 10 + 9 + 6 + 1 + 64 + 24 + 77 - 112 - 107 - 72 - 71 - 977 - 454 - 1190 + 2130 + 2112 + 1518 + 2475 + 2 1955 + 1 1639 + 2 6437 - 5 5355 - 5 6423 - 4 3454", "x2": "sub sub abs INT- 7 mul x_0_7 abs n x_0_6", "tree": "((abs(-7) sub (x_0_7 mul abs(n))) sub x_0_6)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380", "x2": "sub n sqr n", "tree": "(n sub (n)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 - 5 + 6 + 1 + 4 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0", "x2": "idiv idiv x_0_5 add x_0_2 INT+ 3 n", "tree": "((x_0_5 idiv (x_0_2 add 3)) idiv n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 5 - 4 - 4 - 28 - 28 - 32 - 204 - 232 - 296 - 2048 - 2560 - 3560 - 2 6632 - 3 5848 - 5 3408 - 42 6120 - 60 9424 - 96 1352 - 809 6288 - 1218 8488 - 2018 8400 - 1 7811 8344 - 2 8033 5232", "x2": "add add INT- 8 mul n x_0_3 sub n abs n", "tree": "((-8 add (n mul x_0_3)) add (n sub abs(n)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 6 + 11 + 19 + 30 + 43 + 59 + 78 + 99 + 123 + 149 + 178 + 209 + 243 + 280 + 319 + 360 + 405 + 452 + 501 + 553", "x2": "relu sub sqr n idiv add x_0_1 sub x_0_1 INT- 1 INT- 9", "tree": "relu(((n)**2 sub ((x_0_1 add (x_0_1 sub -1)) idiv -9)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0", "x2": "relu idiv mul n x_0_3 mul INT+ 1 add relu x_0_1 n", "tree": "relu(((n mul x_0_3) idiv (1 mul (relu(x_0_1) add n))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 13 + 14 - 27 + 28 - 55 + 56 - 111 + 112 - 223 + 224 - 447 + 448 - 895 + 896 - 1791 + 1792 - 3583 + 3584 - 7167 + 7168", "x2": "sub sqr sign x_0_1 add relu x_0_1 x_0_1", "tree": "((sign(x_0_1))**2 sub (relu(x_0_1) add x_0_1))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 8 + 8 + 3 - 9 + 2 + 5 + 6 - 6 - 1 + 532 + 88 + 5 5336 + 9859 + 664 311 + 126 1954 + 9 308 2301 + 1 8172 1382 + 1372 6850 9746 + 290 7542 1119 + 23 611 963 7860 + 5 1172 7411 7032 + 4243 2441 7342 1576 + 982 5166 3048 3 + 84 8648 8346 9095 5511 + 20 4363 4591 4110 2578 + 1 8330 8148 2941 4947 2677 + 4577 7414 8477 8869 8854 + 425 2749 404 3799 4617 810 + 109 8657 9563 4983 6314 6079", "x2": "abs sub mul mul n abs x_0_2 INT- 8 x_0_10", "tree": "abs((((n mul abs(x_0_2)) mul -8) sub x_0_10))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 4 + 13 + 25 + 9 - 2 + 15 + 27 + 11 + 0 + 17 + 29 + 13 + 2 + 19 + 31 + 15 + 4 + 21 + 33 + 17 + 6", "x2": "sub sub n x_0_2 add INT- 7 mul INT+ 2 INT- 5", "tree": "((n sub x_0_2) sub (-7 add (2 mul -5)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 6 + 8 + 14 + 16 + 17 + 18 + 23 + 24 + 24 + 24 + 28 + 28 + 27 + 26 + 29 + 28 + 26 + 24 + 26 + 24 + 21 + 18", "x2": "add add sub mul INT+ 1 0 sign x_0_1 n x_0_4 INT+ 8", "tree": "((((10 mul sign(x_0_1)) sub n) add x_0_4) add 8)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 + 16 + 18 + 10 + 10 + 9 + 9 + 8 + 8 + 8 + 7 + 7 + 6 + 6 + 5 + 5 + 3 + 3 - 3 - 4 + 25", "x2": "sub abs abs INT+ 1 0 idiv add n n x_0_2", "tree": "(abs(abs(10)) sub ((n add n) idiv x_0_2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 1 + 0 + 0 + 4 + 2 + 4 + 1 + 0 + 1 + 4 + 9 + 2 + 10 + 4 + 15 + 10 + 5 + 0", "x2": "mod sqr INT- 1 0 n", "tree": "((-10)**2 mod n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 - 3 - 3 + 7 + 6 + 6 + 16 + 15 + 15 + 25 + 24 + 24 + 34 + 33 + 33 + 43 + 42 + 42 + 52 + 51 + 51 + 61 + 60", "x2": "add abs INT- 9 x_0_3", "tree": "(abs(-9) add x_0_3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 + 5 - 1 + 4 + 2 + 5 + 1 + 4 + 2 + 5 + 1 + 4 + 2 + 5 + 1 + 4 + 2 + 5 + 1 + 4 + 2 + 5 + 1 + 4", "x2": "mod abs x_0_4 abs INT+ 8", "tree": "(abs(x_0_4) mod abs(8))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 6 + 3 + 5 + 7 + 3 - 7 + 8 + 9 + 12 + 14 + 12 + 15 + 14 + 22 + 18 + 18 + 18 + 30 + 30 + 28 + 22 + 30 + 24 + 36 + 54 + 36", "x2": "add add relu mod mul INT- 7 mul sqr n n x_0_7 sub n n relu n", "tree": "((relu(((-7 mul ((n)**2 mul n)) mod x_0_7)) add (n sub n)) add relu(n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 1 + 6 + 2 + 5 + 6 + 2 + 4 + 1 + 9 + 25 + 16 + 36 + 49 + 49 + 64 + 100 + 100 + 121 + 169 + 169 + 256 + 256 + 256 + 361 + 361 + 361", "x2": "sqr add mod sub sign add INT+ 2 INT- 2 mod mul mod INT- 2 n x_0_6 INT- 3 INT- 8 n", "tree": "((((sign((2 add -2)) sub (((-2 mod n) mul x_0_6) mod -3)) mod -8) add n))**2", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 3 + 10 + 1 + 3 + 4 + 2 + 448 - 3 5604 + 356 1440 - 4 3093 2887 + 620 5433 7468 - 10 4871 8302 9856 + 2055 4878 7384 8318 - 46 2484 7716 1533 4040 + 1 1839 6101 5334 6853 5376 - 342 1647 3343 1650 8085 9587 + 11 861 3736 3184 3692 2043 7686 - 4002 955 8810 9358 321 43 428 + 160 838 2352 4370 2103 826 9521 2940 - 7 596 9661 7424 6291 5279 2646 6688 2334 + 3416 8931 6283 3494 4628 930 3624 6328 2142 - 180 7536 4831 3891 701 372 5268 9462 1647 335 + 10 4114 1014 2880 990 3124 4903 8488 1593 9642 2440 - 6507 1313 3930 51 8892 8909 4632 1148 8202 5324 8550 + 439 8820 7853 6683 914 9800 1633 7684 1922 3411 2050 1066 - 32 674 352 5324 1783 902 3452 552 1904 8846 5308 3943 4278", "x2": "idiv mul sub sqr n sub mul n x_0_1 sub INT+ 5 x_0_6 n abs abs sign x_0_7", "tree": "((((n)**2 sub ((n mul x_0_1) sub (5 sub x_0_6))) mul n) idiv abs(abs(sign(x_0_7))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 5 - 1 - 10 + 6 + 6 - 9 + 7 - 320 - 81 - 1000 + 726 + 864 - 1521 + 1372 - 7 2000 - 2 736 - 28 9000 + 23 5224 + 31 1904 - 60 8400 + 60 5052 - 3484 8000 - 1096 9344 - 1 6646 4000 + 1 4701 5000 + 2 1084 7104 - 4 4352 3600", "x2": "mul sqr abs sub relu n mod n INT- 1 x_0_7", "tree": "((abs((relu(n) sub (n mod -1))))**2 mul x_0_7)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 3 + 1 + 6 - 4 + 4 + 76 + 736 + 472 - 2036 - 2 3585 - 1 4972 + 6 5449 + 75 4819 + 47 9335 - 215 8949 - 2490 8126 - 1581 7121 + 6908 6467 + 7 9706 131 + 5 614 7971 - 22 7985 2345 - 263 298 3224 - 167 288 1911 + 729 5527 5139 + 8416 9546 3267", "x2": "add mul mul sub n sub add x_0_3 relu x_0_6 INT+ 1 0 sub INT- 8 INT+ 3 mod INT+ 6 INT- 9 INT+ 1 0", "tree": "((((n sub ((x_0_3 add relu(x_0_6)) sub 10)) mul (-8 sub 3)) mul (6 mod -9)) add 10)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 9 + 5 + 4 - 30 + 6 + 7 - 216 + 9 + 10 - 2343 + 12 + 13 - 3 2760 + 15 + 16 - 55 6869 + 18 + 19 - 1113 7320 + 21 + 22 - 2 5615 8291", "x2": "mod n mul add x_0_3 INT+ 2 n", "tree": "(n mod ((x_0_3 add 2) mul n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 6 - 4 + 8 - 9 + 3 - 10 + 3 - 4 + 7 + 0 + 8 + 5 + 4 + 0 + 3 + 8 + 10 + 0 + 14 + 4 + 0 + 0 + 14 + 15 + 0 + 0 + 16 + 14", "x2": "mod idiv mul sub sqr mod mul n add x_0_9 INT+ 5 relu abs n x_0_4 n INT+ 1 0 n", "tree": "(((((((n mul (x_0_9 add 5)) mod relu(abs(n))))**2 sub x_0_4) mul n) idiv 10) mod n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 2 + 7 + 9 + 16 + 20 + 29 + 35 + 46 + 54 + 67 + 77 + 92 + 104 + 121 + 135 + 154 + 170 + 191 + 209 + 232", "x2": "sub sqr n x_0_1", "tree": "((n)**2 sub x_0_1)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 8 + 4 + 8 + 6 + 1 + 2 + 80 - 48 + 80 + 464 + 240 - 40 - 16 + 5 1152 - 48 + 5 1152 + 172 2320 + 46 752 - 48 - 48 + 209 3221 6784 - 48 + 209 3221 6784 + 23 7310 8945 9152 + 1 6983 3924 3984 - 48", "x2": "add mul sqr relu x_0_7 INT+ 8 mul INT+ 6 INT- 8", "tree": "(((relu(x_0_7))**2 mul 8) add (6 mul -8))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 + 9 - 5 - 6 - 1 + 9 - 5 - 2 + 1 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 0 + 0 + 0 + 0", "x2": "mod mod idiv n INT+ 5 idiv add add x_0_6 sub mul n sub n relu x_0_5 x_0_8 x_0_6 INT+ 4 INT+ 5", "tree": "(((n idiv 5) mod (((x_0_6 add ((n mul (n sub relu(x_0_5))) sub x_0_8)) add x_0_6) idiv 4)) mod 5)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 7 - 3 - 3 + 11 - 7 + 13 - 4 + 7 + 5 - 7 + 15 - 7 + 12 - 4 - 3 + 15 - 16 + 22 - 13 + 11 + 10 - 16 + 24", "x2": "sub INT+ 4 add x_0_1 sub mod x_0_2 x_0_4 mod sign x_0_2 INT+ 5", "tree": "(4 sub (x_0_1 add ((x_0_2 mod x_0_4) sub (sign(x_0_2) mod 5))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 9 + 4 + 3 + 7 - 3 + 8 - 3 + 4 - 5 - 36 + 20 + 108 + 140 - 324 + 1120 - 972 + 4480 - 4860 - 16 1280 + 9 7200 + 1741 8240 + 1360 8000 - 56 4350 9760 + 152 4096 0 - 5 4854 9148 6720 + 68 2795 80 0 - 2 6659 4886 2545 9200 - 1101 2117 8890 2400 0 + 25 9130 2294 3946 3424 0", "x2": "mul x_0_9 abs x_0_2", "tree": "(x_0_9 mul abs(x_0_2))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 4 - 7 + 5 - 7 + 4 - 10 - 8 + 63 + 80 + 101 + 120 + 145 + 168 + 195 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730", "x2": "add abs sqr n sign x_0_7", "tree": "(abs((n)**2) add sign(x_0_7))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 4 + 8 + 7 + 1 + 7 + 10 + 9 + 0 + 20 - 860 + 4 1292 - 268 3947 + 1 8787 5444 - 140 9061 6993 + 4508 9705 9845 - 22 9955 6217 6634 - 140 9061 6975 + 1 5217 8394 9964 - 83 8669 2017 5174 - 140 9061 6954 + 2 4517 6466 8950 - 83 8669 2017 5151 + 6038 4041 6199 3942 - 75 4798 684 8457 3775 + 7849 8915 2554 7549 7475 - 63 5840 6097 2893 5330 1506 + 7121 4072 8098 3390 8519 4925 - 82 6082 4596 492 784 711 3796", "x2": "add n add x_0_3 mul n mul mod x_0_9 INT- 6 x_0_1", "tree": "(n add (x_0_3 add (n mul ((x_0_9 mod -6) mul x_0_1))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 8 - 8 - 10 + 10 + 6 + 0 - 6 + 3 + 6 + 10 - 4 + 1 + 0 + 0 + 0 + 10 + 6 + 0 + 0 + 3 + 6 + 10 + 0 + 1 + 0 + 0 + 0 + 10 + 6 + 0 + 0 + 3", "x2": "relu x_0_12", "tree": "relu(x_0_12)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "+ 0 - 2 + 12 + 24 + 60 + 132 + 348 + 780 + 2076 + 4668 + 1 2444 + 2 7996 + 7 4652 + 16 7964 + 44 7900 + 100 7772 + 268 7388 + 604 6620 + 1612 4316 + 3627 9708 + 9674 5884 + 2 1767 8236", "x2": "abs mul add INT- 8 idiv sub INT- 6 x_0_2 INT- 1 relu INT+ 6", "tree": "abs(((-8 add ((-6 sub x_0_2) idiv -1)) mul relu(6)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 12 + 4 + 0 + 6 + 28 + 32 + 9 + 0 + 11 + 48 + 52 + 14 + 0 + 16 + 68 + 72 + 19 + 0", "x2": "mul mod mul n relu abs n INT+ 5 n", "tree": "(((n mul relu(abs(n))) mod 5) mul n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 - 7 + 7 + 5 + 3 + 4 + 9 + 144 + 121 + 100 + 144 + 324 + 2 3716 + 1 7424 + 1 2544 + 2 4649 + 11 4244 + 5 6316 361 + 3 415 3600 + 1 5777 8721 + 6 846 889 + 130 5603 3169 + 31 7149 6147 2806 5161 + 9 2509 4251 6741 1641 + 2 4894 1317 4266 49", "x2": "sqr sub sub INT+ 3 x_0_5 n", "tree": "(((3 sub x_0_5) sub n))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 6 - 1 - 1 - 9 - 6 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_6", "tree": "sign(x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 14 + 30 + 52 + 80 + 114 + 154 + 200 + 252 + 310 + 374 + 444 + 520 + 602 + 690 + 784 + 884 + 990 + 1102 + 1220 + 1344", "x2": "add add n relu mul mul mod n x_0_1 INT+ 2 n sqr n", "tree": "((n add relu((((n mod x_0_1) mul 2) mul n))) add (n)**2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 - 3 - 5 - 7 - 9 - 11 - 13 - 15 - 8 - 10 - 12 - 14 - 16 - 18 - 20 - 22 - 24 - 17 - 19", "x2": "add mod mul mul INT- 1 0 sign n n INT+ 9 sub INT- 6 n", "tree": "((((-10 mul sign(n)) mul n) mod 9) add (-6 sub n))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 4 + 4 - 8 + 0 + 1 + 8 + 1 + 6625 + 1 49 + 1 4762 + 2 785 + 2 8610 + 3 8480 + 5 850 + 6 5600 + 4406 6945 + 1 122 8112 + 2 1825 3682 + 4 3246 7264 + 8 1912 7170 + 14 8148 3425 + 25 8671 4290 + 43 461 225 + 1941 8962 5896 929 + 1 247 1320 7673 5137 + 4 7634 6727 6264 162 + 18 7027 9404 8680 2097", "x2": "add sqr sqr n relu sqr sub INT- 7 relu x_0_8", "tree": "(((n)**2)**2 add relu(((-7 sub relu(x_0_8)))**2))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 + 2 - 5 + 3 - 3 + 1 - 1 + 8 - 2 + 10 - 5 + 3 + 23 + 13 + 21 + 14 + 20 + 17 + 20 + 12 + 23 + 12 + 28 + 21 + 2 + 13 + 6 + 14 + 9 + 13 + 11 + 20", "x2": "add add n relu idiv idiv x_0_4 relu x_0_6 n sub idiv sqr INT- 4 n x_0_12", "tree": "((n add relu(((x_0_4 idiv relu(x_0_6)) idiv n))) add (((-4)**2 idiv n) sub x_0_12))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 2 - 8 - 8 + 7 + 10 - 5 + 18 + 3 + 6 + 24 + 0 + 24 + 18 + 12 + 21 + 27 + 3 + 21 + 0 + 39 + 3 + 18 + 12 + 66 + 3 + 42", "x2": "mul INT+ 3 mod add x_0_6 sign add INT+ 6 idiv sqr x_0_5 abs n n", "tree": "(3 mul ((x_0_6 add sign((6 add ((x_0_5)**2 idiv abs(n))))) mod n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 8 - 2 + 0 + 2 + 2 + 1 + 0 + 0 + 2 + 1 + 1 + 0 + 2 + 2 + 1 + 0 + 0 + 2 + 1 + 1 + 0 + 2", "x2": "mod add sign n x_0_3 abs INT- 3", "tree": "((sign(n) add x_0_3) mod abs(-3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 10 - 3 + 7 + 1 + 3 + 2 + 4 + 6 + 8 + 7 + 9 + 11 + 13 + 12 + 14 + 16 + 0 + 17 + 19 + 0 + 5 + 22 + 0", "x2": "mod add add n x_0_4 INT+ 5 n", "tree": "(((n add x_0_4) add 5) mod n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 - 2 - 1 - 1019 - 813 - 675 - 580 - 509 - 450 - 405 - 369 - 335 - 312 - 285 - 272 - 256 - 237 - 227 - 215 - 201 - 190 - 185 - 171", "x2": "sub mod x_0_3 INT+ 8 idiv sqr sqr INT- 8 n", "tree": "((x_0_3 mod 8) sub (((-8)**2)**2 idiv n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 + 7 + 10 - 2 - 9 - 8 - 3 - 9 - 8 - 14 - 10 - 12 - 10 - 11 - 10 - 12 - 11 - 13 - 12 - 13 - 12 - 13 - 12 - 14", "x2": "sub INT- 8 idiv idiv add mul n x_0_2 n sub INT- 2 add relu x_0_4 INT- 6 x_0_3", "tree": "(-8 sub ((((n mul x_0_2) add n) idiv (-2 sub (relu(x_0_4) add -6))) idiv x_0_3))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 5 + 35 + 365 + 3665 + 3 6665 + 36 6665 + 366 6665 + 3666 6665 + 3 6666 6665 + 36 6666 6665 + 366 6666 6665 + 3666 6666 6665 + 3 6666 6666 6665 + 36 6666 6666 6665 + 366 6666 6666 6665 + 3666 6666 6666 6665 + 3 6666 6666 6666 6665 + 36 6666 6666 6666 6665 + 366 6666 6666 6666 6665 + 3666 6666 6666 6666 6665 + 3 6666 6666 6666 6666 6665", "x2": "abs sub INT- 1 0 sub sqr mul idiv INT+ 6 mul INT+ 3 INT- 5 x_0_1 sqr sub INT- 5 x_0_1", "tree": "abs((-10 sub ((((6 idiv (3 mul -5)) mul x_0_1))**2 sub ((-5 sub x_0_1))**2)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401", "x2": "add sqr n INT+ 1", "tree": "((n)**2 add 1)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 - 6 + 41 + 53 + 102 + 152 + 203 + 255 + 308 + 362 + 417 + 473 + 530 + 588 + 647 + 707 + 768 + 830 + 893 + 957 + 1022 + 1088", "x2": "add n sub add add sqr mod INT- 6 sub INT- 8 mul sign idiv x_0_1 INT+ 1 x_0_2 x_0_1 INT+ 5 INT- 3", "tree": "(n add (((((-6 mod (-8 sub (sign((x_0_1 idiv 1)) mul x_0_2))))**2 add x_0_1) add 5) sub -3))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 5 - 7 + 1 - 35 - 34 - 23 - 56 - 52 - 38 - 68 - 61 - 44 - 71 - 61 - 41 - 65 - 52 - 29 - 50 - 34 - 8 - 26 - 7", "x2": "add add add x_0_3 n n sub n add INT- 7 sqr INT- 7", "tree": "(((x_0_3 add n) add n) add (n sub (-7 add (-7)**2)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 3 + 0 + 3 - 8 - 6 - 4 + 2 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign mul n idiv x_0_8 INT- 8", "tree": "sign((n mul (x_0_8 idiv -8)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 2 + 10 + 9 - 3 - 6 + 5 - 2 + 0 - 6 - 1 - 5 - 2 - 2 - 4 - 5 - 3 - 6 - 2 - 2 + 0 - 6 - 1 - 5 - 2 - 2 - 4", "x2": "mod sub INT+ 1 0 x_0_6 INT- 7", "tree": "((10 sub x_0_6) mod -7)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 9 - 3 - 6 - 4 - 1 - 4 - 4 - 10 - 30 - 30 - 86 - 269 - 266 - 770 - 2411 - 2364 - 6900 - 2 1613 - 2 1007 - 6 1834 - 19 3747 - 18 6652 - 55 4142 - 173 6823 - 165 8255 - 496 6271 - 1556 9573 - 1473 548", "x2": "sub add mul sqr INT+ 3 x_0_3 relu x_0_9 x_0_7", "tree": "((((3)**2 mul x_0_3) add relu(x_0_9)) sub x_0_7)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 - 7 - 6 - 4 + 4 + 6 + 2 - 10 - 3 - 3 + 2814 + 3069 + 3328 + 3586 + 3841 + 4096 + 4351 + 3078 + 3201 + 3328 + 3969 + 4097 + 4224 + 5890 + 6080 + 6272 + 6721 + 5629 + 5823 + 6016", "x2": "add idiv mod x_0_10 x_0_6 add INT+ 6 INT- 8 mul sqr INT+ 8 mul n mul INT+ 4 sign n", "tree": "(((x_0_10 mod x_0_6) idiv (6 add -8)) add ((8)**2 mul (n mul (4 mul sign(n)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 1 + 0 + 6 + 5 + 0 + 1 + 0 + 36 + 25 + 0 + 1 + 0 + 1296 + 625 + 0 + 1 + 0 + 167 9616 + 39 625 + 0 + 1 + 0 + 2 8211 990 7456 + 1525 8789 625 + 0", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 - 124 - 172 - 172 - 228 - 124 - 147 - 487 - 628 - 364 - 732 - 292 - 579 - 679 - 787 - 903 - 1027 - 1159 - 292 - 628 - 364", "x2": "sub add INT- 8 INT+ 5 sqr add add INT+ 1 0 mod INT+ 7 relu n mod x_0_1 n", "tree": "((-8 add 5) sub (((10 add (7 mod relu(n))) add (x_0_1 mod n)))**2)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 6 + 3 + 5 + 4 + 2 + 4 + 8 - 4 + 3 + 6 + 20 + 24 + 21 + 22 + 24 + 27 + 18 + 30 + 22 + 44 + 52 + 64 + 70 + 70 + 75 + 69 + 85 + 69 + 104 + 105", "x2": "add x_0_11 add add n mod n sqr sign mul x_0_6 sqr INT- 7 x_0_9", "tree": "(x_0_11 add ((n add (n mod (sign((x_0_6 mul (-7)**2)))**2)) add x_0_9))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 6 - 3 - 3 - 7 - 3 + 0 + 3 + 3 + 0 + 3 + 6 + 9 + 9 + 6 + 9 + 12 + 15 + 15 + 12 + 15 + 18 + 21 + 21 + 18 + 21", "x2": "relu add x_0_5 INT+ 6", "tree": "relu((x_0_5 add 6))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 9 - 6 - 5 - 10 + 19 + 19 + 19 + 19 + 0 + 0 + 0 + 0 + 19 + 19 + 19 + 19 + 0 + 0 + 0 + 0 + 19 + 19 + 19 + 19", "x2": "sub mul INT- 1 0 INT- 2 add INT+ 1 relu x_0_4", "tree": "((-10 mul -2) sub (1 add relu(x_0_4)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 + 3 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign mod idiv INT+ 5 INT- 2 sqr sub x_0_1 x_0_2", "tree": "sign(((5 idiv -2) mod ((x_0_1 sub x_0_2))**2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 5 - 9 + 48 + 60 + 162 + 1407 + 2112 + 4563 + 5 2500 + 12 9525 + 22 7700 + 273 7839 + 618 8280 + 1206 3645 + 1 8480 6192 + 5 8825 2003 + 11 4807 7206 + 127 7063 6079 + 603 3576 1200 + 1123 8089 2785 + 1 5171 505 5378 + 4 7642 2827 3951", "x2": "mul sub abs mul n add x_0_3 mod add INT+ 2 x_0_1 x_0_3 n add INT+ 2 sign n", "tree": "((abs((n mul (x_0_3 add ((2 add x_0_1) mod x_0_3)))) sub n) mul (2 add sign(n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 168 - 504 - 1120 - 2100 - 3528 - 5488 - 8064 - 1 1340 - 1 5400 - 2 328 - 2 6208 - 3 3124 - 4 1160 - 5 400 - 6 928 - 7 2828 - 8 6184 - 10 1080 - 11 7600 - 13 5828", "x2": "sub mul mul mul n n add INT+ 5 INT+ 9 sub sub add n sign x_0_1 n n mod n n", "tree": "((((n mul n) mul (5 add 9)) mul (((n add sign(x_0_1)) sub n) sub n)) sub (n mod n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 5 + 2 + 4 + 10 + 0 + 2592 + 9604 + 4 960 + 0 + 2592 0 + 1 4061 2164 + 8 4934 6560 + 0 + 9957 4272 0 + 7 1184 9080 2500 + 55 6627 7615 6160 + 0 + 10 4529 877 7472 0 + 92 7688 8398 7260 2500 + 890 6044 1849 8560 0 + 0 + 244 8656 5985 7548 832 0 + 2596 537 2638 7889 5620 2500 + 2 9548 1171 5517 7824 2560 0", "x2": "relu mul mul sqr abs mul n n x_0_4 sign x_0_3", "tree": "relu((((abs((n mul n)))**2 mul x_0_4) mul sign(x_0_3)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 4 + 6 + 9 - 9 + 396 + 447 + 493 + 520 + 972 + 1072 + 1169 + 1249 + 1756 + 1913 + 2069 + 2210 + 2780 + 3002 + 3225 + 3435 + 4076 + 4371 + 4669 + 4956", "x2": "add sqr sub sub INT- 6 n INT+ 9 x_0_4", "tree": "((((-6 sub n) sub 9))**2 add x_0_4)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 5 - 3 - 8 - 9 + 6 - 47 - 7 - 59 - 139 + 469 - 145 + 409 - 7153 - 6 4024 - 7308 - 6 3572 + 310 7459 + 4 8780 8195 - 4 8470 7911 + 4 8774 4150 + 2072 9429 3511 + 1590 7768 9609 9317 + 24 8161 4030 8889 4710 + 1590 7773 8390 7487 + 92 9014 1229 1659 2065", "x2": "sub sub add x_0_2 x_0_6 n mul idiv add abs n x_0_4 x_0_6 sub x_0_1 INT- 2", "tree": "(((x_0_2 add x_0_6) sub n) sub (((abs(n) add x_0_4) idiv x_0_6) mul (x_0_1 sub -2)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 8 - 5 + 0 - 2 - 2 + 0 - 5 - 8 + 0 - 8 - 5 + 0 - 2 - 2 + 0 - 5 - 8 + 0 - 8 - 5", "x2": "mod mul abs n n add INT- 1 0 sqr sign INT- 9", "tree": "((abs(n) mul n) mod (-10 add (sign(-9))**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 8 - 7 + 0 + 9 - 7 - 1 + 5 + 10 - 8 + 8 + 2 - 4 - 9 + 9 - 7 - 1 + 5 + 10 - 8 + 8 + 2 - 4 - 9 + 9 - 7 - 1 + 5 + 10", "x2": "sub sign sqr add add idiv idiv x_0_9 INT+ 2 sqr sqr x_0_5 abs n INT- 2 x_0_5", "tree": "(sign((((((x_0_9 idiv 2) idiv ((x_0_5)**2)**2) add abs(n)) add -2))**2) sub x_0_5)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 6 - 4 + 7 - 24 - 20 + 42 - 168 - 160 + 378 - 1680 - 1760 + 4536 - 2 1840 - 2 4640 + 6 8040 - 34 9440 - 41 8880 + 122 4720 - 663 9360 - 837 7600 + 2571 9120 - 1 4606 5920 - 1 9268 4800", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 + 8 + 7 + 9 - 9 - 1 - 6 + 2 + 1 + 3 - 3 + 6 + 2 - 4 - 5 - 3 + 9 + 0 - 4 + 11 + 11 + 14 + 3 - 6 + 16", "x2": "add mod add n x_0_6 n INT- 6", "tree": "(((n add x_0_6) mod n) add -6)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 2 + 3 - 24 - 84 - 174 - 300 - 468 - 684 - 954 - 1284 - 1680 - 2148 - 2694 - 3324 - 4044 - 4860 - 5778 - 6804 - 7944", "x2": "mod n sub sqr INT+ 6 mul n abs sqr n", "tree": "(n mod ((6)**2 sub (n mul abs((n)**2))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 10 + 5 + 6 + 10 + 12 + 17 + 20 + 26 + 30 + 37 + 42 + 50 + 56 + 65 + 72 + 82 + 90 + 101 + 110 + 122 + 132", "x2": "abs add n x_0_2", "tree": "abs((n add x_0_2))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 10 - 10 + 6 - 7 + 10 - 7 - 7 + 8 + 4 + 2 + 2 - 10 - 10 + 6 - 7 + 10 - 7 - 7 + 8 + 4 + 2 + 2 - 10 - 10 + 6 - 7 + 10 - 7 - 7 + 8", "x2": "mul x_0_11 sign mod sign mul n sqr x_0_11 sign mul n mul INT+ 1 INT- 1 0", "tree": "(x_0_11 mul sign((sign((n mul (x_0_11)**2)) mod sign((n mul (1 mul -10))))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 1 - 8 - 9 - 7 + 8 + 7 + 0 + 0 + 0 + 56 + 49 + 0 + 0 + 0 + 392 + 343 + 0 + 0 + 0 + 2744 + 2401 + 0 + 0 + 0 + 1 9208", "x2": "mul relu relu x_0_5 INT+ 7", "tree": "(relu(relu(x_0_5)) mul 7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 + 56 - 1 + 54 - 1 + 52 - 1 + 50 - 1 + 48 - 1 + 46 - 1 + 44 - 1 + 42 - 1 + 40 - 1 + 38 - 1", "x2": "sub sqr INT+ 8 add add add abs relu x_0_1 INT+ 5 sqr INT+ 1 n", "tree": "((8)**2 sub (((abs(relu(x_0_1)) add 5) add (1)**2) add n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 2 - 9 - 1 + 2 + 0 + 3 - 2 - 9 - 1 + 2 + 0 + 3 - 2 - 9 - 1 + 2 + 0 + 3 - 2 - 9 - 1 + 2 + 0 + 3 - 2 - 9 - 1 + 2 + 0 + 3 - 2 - 9 - 1", "x2": "add x_0_6 relu INT- 9", "tree": "(x_0_6 add relu(-9))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 4 + 4 - 10 - 9 + 7 + 8 - 10 + 12 + 14 - 16 - 18 + 20 - 22 - 24 + 26 + 28 - 30 + 32 + 34 - 36 - 38 + 40 - 42 - 44 + 46 + 48 - 50 + 52 + 54 - 56 - 58 + 60", "x2": "mul sign mul sqr n idiv mul INT+ 1 INT- 8 x_0_5 add sub n INT- 8 sub add INT- 5 n INT+ 7", "tree": "(sign(((n)**2 mul ((1 mul -8) idiv x_0_5))) mul ((n sub -8) add ((-5 add n) sub 7)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 6 + 1 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5 + 0 - 2 - 5", "x2": "mod x_0_3 sub relu abs x_0_2 relu n", "tree": "(x_0_3 mod (relu(abs(x_0_2)) sub relu(n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 0 - 8 + 6 - 4 - 2 - 7 + 2 - 4 + 3 + 8 - 14 + 10 - 2 + 5 - 9 + 6 - 7 - 5 + 22 - 24 + 12 - 7 + 14 - 15 + 13 - 2 - 27 + 46 - 36 + 19 - 21 + 29 - 28 + 15 + 25", "x2": "sub x_0_9 x_0_8", "tree": "(x_0_9 sub x_0_8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 4 + 4 + 3 - 8 + 78 + 49 + 56 + 54 - 50 + 891 + 624 + 767 + 798 - 705 + 1 4304 + 1 659 + 1 3860 + 1 5219 - 1 4040 + 30 447 + 23 4564 + 31 8849 + 36 5328 - 35 925 + 781 1700 + 633 3309 + 892 7856 + 1059 4599 - 1052 7660 + 2 4216 2793 + 2 266 5984", "x2": "add mul n relu INT+ 3 mul x_0_5 n", "tree": "((n mul relu(3)) add (x_0_5 mul n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 14 + 30 + 52 + 80 + 114 + 154 + 200 + 252 + 310 + 374 + 444 + 520 + 602 + 690 + 784 + 884 + 990 + 1102 + 1220 + 1344 + 1474 + 1610 + 1752 + 1900 + 2054 + 2214", "x2": "add relu sub n mod sub n n n mul INT+ 3 mul n n", "tree": "(relu((n sub ((n sub n) mod n))) add (3 mul (n mul n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 8 + 3 + 6 + 288 + 270 + 0 + 1 8144 + 3 8880 + 0 + 163 2960 + 769 8240 + 0 + 1 9105 6320 + 19 3995 6480 + 0 + 275 1211 80 + 5936 2668 2880 + 0 + 4 7045 7082 3680 + 213 7056 583 6800 + 0 + 931 5050 2308 8640 + 8 8474 1208 1643 5200 + 0 + 20 9588 6301 9494 4000 + 4140 5888 5420 9167 3600 + 0 + 5281 6334 8091 2588 8000 + 216 1387 3818 9718 5361 9200 + 0", "x2": "abs mul n mul mul INT- 9 x_0_3 mod mod n mod INT- 1 0 sub INT+ 1 0 INT- 3 n", "tree": "abs((n mul ((-9 mul x_0_3) mul ((n mod (-10 mod (10 sub -3))) mod n))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 8 - 3 + 8 + 15 + 29 + 57 + 113 + 225 + 449 + 897 + 1793 + 3585 + 7169 + 1 4337 + 2 8673 + 5 7345 + 11 4689 + 22 9377 + 45 8753 + 91 7505 + 183 5009 + 367 17 + 734 33 + 1468 65 + 2936 129 + 5872 257 + 1 1744 513 + 2 3488 1025 + 4 6976 2049 + 9 3952 4097", "x2": "add sub x_0_1 abs sign mod mul x_0_4 mod x_0_3 mul INT- 7 idiv INT- 8 x_0_1 n x_0_1", "tree": "((x_0_1 sub abs(sign(((x_0_4 mul (x_0_3 mod (-7 mul (-8 idiv x_0_1)))) mod n)))) add x_0_1)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 11 - 22 - 43 - 84 - 165 - 326 - 647 - 1288 - 2569 - 5130 - 1 251 - 2 492 - 4 973 - 8 1934 - 16 3855 - 32 7696 - 65 5377 - 131 738 - 262 1459 - 524 2900 - 1048 5781 - 2097 1542 - 4194 3063 - 8388 6104 - 1 6777 2185 - 3 3554 4346 - 6 7108 8667", "x2": "add INT- 3 add n idiv mul x_0_1 add n n n", "tree": "(-3 add (n add ((x_0_1 mul (n add n)) idiv n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 + 75 + 79 + 84 + 90 + 97 + 105 + 114 + 124 + 135 + 147 + 160 + 174 + 189 + 205 + 222 + 240 + 259 + 279 + 300 + 322 + 345 + 369 + 394 + 420 + 447 + 475 + 504", "x2": "add sqr mod INT+ 1 x_0_1 add abs x_0_1 n", "tree": "(((1 mod x_0_1))**2 add (abs(x_0_1) add n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 10 + 2 + 10 + 10 - 6 + 7 + 3 - 5 + 97 + 73 + 285 + 237 + 657 + 562 + 1398 + 1210 + 2974 + 2574 + 6314 + 5466 + 1 3366 + 1 1575 + 2 8211 + 2 4441 + 5 9477 + 5 1537 + 12 5349 + 10 8621 + 26 4145 + 22 8898 + 55 6582 + 48 2318 + 117 2722 + 101 6254 + 247 874", "x2": "sub abs x_0_8 sub mul INT- 2 x_0_2 sqr INT- 9", "tree": "(abs(x_0_8) sub ((-2 mul x_0_2) sub (-9)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 9 + 10 - 4 + 10 - 1 + 6 + 7 - 1 - 7 + 10 - 14 + 5 - 9 + 5 - 6 + 1 + 2 - 6 - 12 + 5 - 19 + 0 - 14 + 0 - 11 - 4 - 3 - 11 - 17 + 0 - 24 - 5 - 19 - 5 - 16 - 9 - 8", "x2": "add INT- 5 x_0_10", "tree": "(-5 add x_0_10)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 8 + 10 - 9 + 8 + 9 + 0 + 2 - 13 + 5 - 14 + 3 + 4 - 5 - 3 - 18 + 0 - 19 - 2 - 1 - 10 - 8 - 23 - 5 - 24 - 7 - 6 - 15 - 13 - 28 - 10 - 29 - 12 - 11", "x2": "add add x_0_7 INT- 6 INT+ 1", "tree": "((x_0_7 add -6) add 1)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 4 + 8 + 10 - 10 + 124 + 147 - 35 + 1060 + 1541 - 855 + 1 1407 + 2 79 - 1 266 + 15 2648 + 32 490 - 14 1160 + 244 7334 + 607 9125 - 229 4605 + 4563 5460 + 1 3359 9671 - 4318 8045 + 9 6773 575 + 33 3769 7251 - 9 2209 5034 + 229 2462 8026 + 934 1233 5064 - 219 5689 7370 + 5976 6420 3048 + 2 8948 6029 2031 - 5747 3957 4941", "x2": "add add sub relu mul n relu x_0_3 abs relu x_0_2 sqr INT+ 9 x_0_5", "tree": "(((relu((n mul relu(x_0_3))) sub abs(relu(x_0_2))) add (9)**2) add x_0_5)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 10 + 106 + 528 + 2110 + 6328 + 1 2654 + 2 5311 + 5 624 + 10 1249 + 20 2498 + 20 2498 + 20 2497 + 20 2501 + 20 2504 + 20 2506 + 20 2507 + 20 2507 + 20 2506 + 20 2510 + 20 2513 + 20 2515 + 20 2516 + 20 2516 + 20 2515 + 20 2519 + 20 2522 + 20 2524 + 20 2525", "x2": "abs sub mul add INT- 1 x_0_1 abs idiv abs INT- 1 0 sub sign n n mod n INT- 6", "tree": "abs((((-1 add x_0_1) mul abs((abs(-10) idiv (sign(n) sub n)))) sub (n mod -6)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 + 4 + 7 - 10 + 3 - 6 - 10 - 9 + 1 - 6 + 3 + 91 + 140 - 60 - 112 + 170 - 54 + 114 + 200 + 189 - 22 + 138 - 72 - 2275 - 3640 + 1620 + 3136 - 4930 + 1620 - 3534 - 6400 - 6237 + 748 - 4830 + 2592 + 8 4175 + 13 8320 - 6 3180", "x2": "idiv mul x_0_12 n idiv INT- 4 mod sub sign mod sub INT- 6 INT- 8 n add n INT+ 8 n", "tree": "((x_0_12 mul n) idiv (-4 idiv ((sign(((-6 sub -8) mod n)) sub (n add 8)) mod n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr add n idiv relu sqr sign sqr n x_0_1", "tree": "((n add (relu((sign((n)**2))**2) idiv x_0_1)))**2", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 1 + 6 + 7 + 70 + 9 + 60 + 84 + 910 + 135 + 960 + 1512 + 1 7290 + 2835 + 2 1120 + 3 6288 + 43 2250 + 7 6545 + 59 1360 + 108 8640 + 1339 9750 + 252 5985 + 2010 6240 + 3919 1040 + 4 9579 750 + 9851 3415 + 8 424 9600 + 16 4602 3680 + 213 1900 2250 + 44 3310 3675 + 369 9548 1600", "x2": "mul abs add n idiv n INT+ 2 x_0_4", "tree": "(abs((n add (n idiv 2))) mul x_0_4)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 6 - 5 - 3 - 5 + 10 + 0 + 19 + 0 + 25 + 64 + 0 + 79 + 0 + 93 + 100 + 0 + 115 + 0 + 129 + 136 + 0 + 151 + 0 + 165 + 172 + 0 + 187 + 0 + 201 + 208 + 0 + 223", "x2": "idiv mul sub sqr sign INT+ 1 0 n relu sqr mod INT+ 6 x_0_5 INT- 5", "tree": "((((sign(10))**2 sub n) mul relu(((6 mod x_0_5))**2)) idiv -5)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 23 - 8 - 2 + 2 + 5 + 8 + 11 + 13 + 16 + 18 + 20 + 22 + 25 + 27 + 29 + 31 + 33 + 35 + 37 + 39 + 41 + 43 + 45 + 47 + 49 + 52 + 54", "x2": "sub n idiv sub sqr INT- 5 sqr n n", "tree": "(n sub (((-5)**2 sub (n)**2) idiv n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 - 13 - 26 - 40 - 55 - 71 - 88 - 106 - 125 - 145 - 166 - 188 - 211 - 235 - 260 - 286 - 313 - 341 - 370 - 400 - 431 - 463 - 496 - 530 - 565 - 601 - 638 - 676", "x2": "sub x_0_1 relu add INT+ 1 0 n", "tree": "(x_0_1 sub relu((10 add n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 2 + 4 - 7 - 3 - 2 - 2 + 0 - 3 - 1 + 9 - 3 - 1 + 12 - 3 + 0 - 3 - 2 + 3 - 2 + 3 + 0 - 3 + 0 - 3 - 1 + 25 - 3 + 1 + 28 - 3", "x2": "add relu sub idiv idiv n x_0_1 x_0_1 sign x_0_4 INT- 3", "tree": "(relu((((n idiv x_0_1) idiv x_0_1) sub sign(x_0_4))) add -3)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 3 + 4", "x2": "abs abs idiv mul INT+ 4 sub add n sub INT+ 1 INT+ 9 INT- 6 sqr INT- 5", "tree": "abs(abs(((4 mul ((n add (1 sub 9)) sub -6)) idiv (-5)**2)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 5 + 9 - 7 - 7 + 0 + 8 + 7 - 5 + 4 + 1 + 4 + 3 - 3 - 2 + 0 + 2 + 1 - 2 + 1 + 0 + 1 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv idiv sub idiv INT+ 5 add n x_0_9 x_0_5 INT- 2 sign x_0_6", "tree": "((((5 idiv (n add x_0_9)) sub x_0_5) idiv -2) idiv sign(x_0_6))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 3 - 3 - 12 - 12 - 21 - 21 - 30 - 30 - 39 - 39 - 48 - 48 - 57 - 57 - 66 - 66 - 75 - 75 - 84 - 84 - 93 - 93 - 102 - 102 - 111 - 111 - 120 - 120 - 129", "x2": "add x_0_2 INT- 9", "tree": "(x_0_2 add -9)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 8 + 0 + 2 - 9 + 7 - 53 - 62 - 87 - 104 - 136 - 143 - 228 - 264 - 318 - 366 - 431 - 473 - 595 - 670 - 765 - 856 - 966 - 1055 - 1226 - 1352 - 1500 - 1646 - 1813 - 1961 - 2193 - 2382 - 2595", "x2": "sub sub x_0_6 sqr n mod INT+ 6 INT+ 7", "tree": "((x_0_6 sub (n)**2) sub (6 mod 7))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 8 - 2 + 72 + 18 - 648 - 162 + 5832 + 1458 - 5 2488 - 1 3122 + 47 2392 + 11 8098 - 425 1528 - 106 2882 + 3826 3752 + 956 5938 - 3 4437 3768 - 8609 3442 + 30 9936 3912 + 7 7484 978 - 278 9427 5208 - 69 7356 8802 + 2510 4847 6872 + 627 6211 9218 - 2 2594 3629 1848 - 5648 5907 2962 + 20 3349 2662 6632 + 5 837 3165 6658 - 183 143 3963 9688", "x2": "mul x_0_2 INT- 9", "tree": "(x_0_2 mul -9)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 6 + 8 + 3 - 6 - 5 + 6 - 6 + 8 + 10 - 4 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 95 + 100 + 105 + 110 + 115 + 120 + 125 + 130 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 175 + 180 + 185", "x2": "relu mul INT- 5 mul sign mod idiv idiv relu abs abs x_0_10 INT- 6 x_0_8 INT+ 1 n", "tree": "relu((-5 mul (sign((((relu(abs(abs(x_0_10))) idiv -6) idiv x_0_8) mod 1)) mul n)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 4 + 6 + 7 - 6 + 4 + 2 + 1 + 4 + 6 + 2 + 7 + 0 + 5 + 10 + 9 + 0 + 15 + 0 + 7 + 4 + 2 + 2 + 10 + 0 + 11 + 10 + 0 + 4 + 10 + 6 + 1", "x2": "abs mod n sub INT- 8 mod sqr x_0_4 n", "tree": "abs((n mod (-8 sub ((x_0_4)**2 mod n))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 1 - 10 + 3 + 10 - 3 + 4 + 5 + 4 + 11 - 2 + 5 + 6 + 5 + 12 - 1 + 6 + 7 + 6 + 13 + 0 + 7 + 8 + 7 + 14 + 1 + 8 + 9 + 8 + 15 + 2 + 9 + 10 + 9 + 16", "x2": "add x_0_5 abs idiv sub x_0_2 x_0_7 mul n INT- 8", "tree": "(x_0_5 add abs(((x_0_2 sub x_0_7) idiv (n mul -8))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 7 + 10 - 6 + 11 - 5 + 12 - 4 + 13 - 3 + 14 - 2 + 15 - 1 + 16 + 0 + 17 + 1 + 18 + 2 + 19 + 3 + 20 + 4 + 21 + 5 + 22 + 6", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 7 - 72 - 112 + 1440 + 2688 - 4 320 - 8 6016 + 145 1520 + 344 640 - 6386 6880 - 1 6515 720 + 33 2107 7760 + 92 4844 320 - 1992 6466 5600 - 5919 18 480 + 13 5499 9726 800 + 42 6168 1299 4560 - 1029 7997 9182 800 - 3409 3450 3956 4800 + 8 6503 1825 1294 7200 + 30 22 3634 8170 2400 - 795 8292 7911 9114 2400 - 2880 2146 8942 4343 400 + 7 9582 9279 1191 1424 0 + 29 9542 3277 13 1676 1600 - 859 4956 2144 8643 3792 0 - 3354 8740 7024 1474 7729 9200 + 9 9701 4920 8804 2631 9872 0", "x2": "mul x_0_2 mul sub mod sign sqr x_0_1 sqr INT- 8 abs INT+ 5 n", "tree": "(x_0_2 mul (((sign((x_0_1)**2) mod (-8)**2) sub abs(5)) mul n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 7 - 6 + 5 + 7 - 5 - 9 + 1 - 52 - 63 - 64 - 66 - 54 - 50 - 60 - 7 + 4 + 5 - 3 - 15 - 9 + 1 - 52 - 73 - 64 - 56 - 44 - 50 - 60 - 7 + 14 + 5 - 13 - 25 - 9", "x2": "sub sub mul INT- 5 sign x_0_2 x_0_7 mul add relu INT- 2 INT+ 8 INT+ 8", "tree": "(((-5 mul sign(x_0_2)) sub x_0_7) sub ((relu(-2) add 8) mul 8))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 7 + 1 - 9 - 8 + 5 + 4 + 10 + 1 + 7 + 5 + 7 + 4 + 10 + 2 + 10 + 2 + 10 + 1 + 10 + 2 + 10 + 2 + 10 + 2 + 10 + 2 + 10 + 2 + 10 + 3 + 10 + 3", "x2": "add INT+ 1 relu sub INT+ 9 relu sub x_0_1 idiv n x_0_5", "tree": "(1 add relu((9 sub relu((x_0_1 sub (n idiv x_0_5))))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 9 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2", "x2": "mod x_0_3 abs n", "tree": "(x_0_3 mod abs(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 - 7 - 9 - 5 + 5 - 10 - 6 - 64 + 162 - 1000 - 726 - 8640 + 2 5857 - 980 - 1 4175 - 217 624 + 718 3962 - 23 4900 - 311 9401 - 8 5790 7200 + 31 6769 4621 - 686 216 - 11 4825 9567 - 4900 1658 5664 + 1 9796 6232 5000 - 21 871 4400 - 6254 1434 9529 - 381 6895 3057 8496 + 1664 8902 4588 2503 - 1 334 3360 9400 - 470 9059 3882 2143 - 38 8822 9050 9158 928 + 181 3063 1813 7606 3078 - 722 9789 8805 4368", "x2": "mul mul sub mod x_0_7 x_0_4 mul sign x_0_7 sign idiv mod x_0_6 INT- 2 sqr INT- 3 n n", "tree": "((((x_0_7 mod x_0_4) sub (sign(x_0_7) mul sign(((x_0_6 mod -2) idiv (-3)**2)))) mul n) mul n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 7 + 36 + 0 + 1225 + 0 + 2401 + 0 + 3969 + 0 + 5929 + 0 + 8281 + 0 + 1 1025 + 0 + 1 4161 + 0 + 1 7689 + 0 + 2 1609 + 0 + 2 5921 + 0 + 3 625 + 0 + 3 5721 + 0 + 4 1209", "x2": "mul relu sqr mod INT+ 7 x_0_2 sqr n", "tree": "(relu(((7 mod x_0_2))**2) mul (n)**2)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 1 + 7 + 5 + 12 + 11 + 19 + 19 + 28 + 29 + 39 + 41 + 52 + 55 + 67 + 71 + 84 + 89 + 103 + 109 + 124 + 131 + 147 + 155 + 172 + 181 + 199 + 209 + 228", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 9 + 2 - 10 + 6 - 8 + 0 + 5 + 4 + 6 + 0 + 2 + 6 + 1 + 2 + 0 + 6 + 4 + 0 + 5 + 4 + 6 + 0 + 2 + 6 + 1 + 2 + 0 + 6 + 4 + 0 + 5 + 4", "x2": "sub INT+ 6 mod x_0_6 n", "tree": "(6 sub (x_0_6 mod n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 3 - 8 - 6 + 5 - 1 - 7 + 5 - 2 - 7 + 5 - 3 - 7 + 5 - 4 - 7 + 5 - 5 - 7 + 5 - 6 - 7 + 5 - 7 - 7 + 5 - 8 - 7 + 5 - 9 - 7 + 5 - 10", "x2": "sub x_0_3 relu sign idiv x_0_5 idiv sub INT- 2 x_0_1 sqr n", "tree": "(x_0_3 sub relu(sign((x_0_5 idiv ((-2 sub x_0_1) idiv (n)**2)))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 7 + 9 + 28 + 45 + 168 + 315 + 1344 + 2835 + 1 3440 + 3 1185 + 16 1280 + 40 5405 + 225 7920 + 608 1075 + 3612 6720 + 1 337 8275 + 6 5028 960 + 19 6418 7225 + 130 561 9200 + 412 4793 1725 + 2861 2362 2400 + 9487 242 9675 + 6 8669 6693 7600 + 23 7175 6074 1875 + 178 5411 4037 7600 + 640 3741 4003 625 + 4999 1519 3057 2800 + 1 8570 8500 6088 8125", "x2": "mul relu n mul sign n x_0_2", "tree": "(relu(n) mul (sign(n) mul x_0_2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 42 + 97 + 174 + 273 + 394 + 537 + 702 + 889 + 1098 + 1329 + 1582 + 1857 + 2154 + 2473 + 2814 + 3177 + 3562 + 3969 + 4398 + 4849 + 5322 + 5817 + 6334 + 6873 + 7434 + 8017", "x2": "sub mul sqr n sub INT+ 6 INT- 5 idiv INT+ 6 INT+ 3", "tree": "(((n)**2 mul (6 sub -5)) sub (6 idiv 3))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 5 - 6 + 2 + 2 + 2 + 5 + 5 + 5 + 10 + 10 + 10 + 17 + 17 + 17 + 26 + 26 + 26 + 37 + 37 + 37 + 50 + 50 + 50 + 65 + 65 + 65 + 82 + 82 + 82", "x2": "add sqr mod sign x_0_3 idiv n INT- 3 sign relu INT- 9", "tree": "(((sign(x_0_3) mod (n idiv -3)))**2 add sign(relu(-9)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 16 + 25 + 40 + 52 + 70 + 90 + 112 + 127 + 152 + 179 + 208 + 239 + 272 + 307 + 344 + 383 + 424 + 467 + 512 + 559 + 608 + 659 + 712 + 767 + 824 + 883", "x2": "abs add mod relu abs INT- 8 n mul add INT- 7 sub sub INT- 5 INT- 6 n n", "tree": "abs(((relu(abs(-8)) mod n) add ((-7 add ((-5 sub -6) sub n)) mul n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 1 + 16 + 16 + 1 + 1 + 16 + 16 + 1 + 1 + 16 + 16 + 1 + 1 + 16 + 16 + 1 + 1 + 16 + 16 + 1 + 1 + 16 + 16 + 1 + 1 + 16 + 16 + 1", "x2": "abs idiv idiv sqr INT- 4 x_0_2 INT- 1", "tree": "abs((((-4)**2 idiv x_0_2) idiv -1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 - 3 + 7 - 4 + 6 + 4 + 3 + 5 + 3 + 5 + 6 + 7 + 8 + 9 + 10 + 12 + 14 + 16 + 19 + 22 + 26 + 30 + 35 + 41 + 48 + 56 + 66 + 77 + 90 + 106 + 124 + 146", "x2": "add x_0_1 idiv x_0_5 INT+ 3", "tree": "(x_0_1 add (x_0_5 idiv 3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 4 + 6 + 8 + 10 + 12 + 14 + 8 + 10 + 12 + 14 + 16 + 18 + 20 + 22 + 16 + 18 + 20 + 22 + 24 + 26 + 28 + 30 + 24 + 26 + 28 + 30", "x2": "add n mod n INT+ 8", "tree": "(n add (n mod 8))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 5 - 7 + 0 + 7 + 5 + 7 + 0 + 7 + 5 + 7 + 0 + 7 + 5 + 7 + 0 + 7 + 5 + 7 + 0 + 7 + 5 + 7 + 0 + 7 + 5 + 7 + 0 + 7 + 5 + 7", "x2": "idiv mul abs x_0_4 mod n add n INT+ 7 n", "tree": "((abs(x_0_4) mul (n mod (n add 7))) idiv n)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8 - 8 - 8 - 9 - 9 - 9", "x2": "idiv abs n INT- 3", "tree": "(abs(n) idiv -3)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 5 + 4 - 10 - 9 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 78 + 168 + 270 + 384 + 510 + 648 + 798 + 960 + 1134 + 1320 + 1518 + 1728 + 1950 + 2184 + 2430 + 2688 + 2958 + 3240 + 3534 + 3840 + 4158 + 4488 + 4830 + 5184 + 5550 + 5928 + 6318", "x2": "mul n sub sqr INT- 5 add mul INT- 6 add INT+ 8 n sign n", "tree": "(n mul ((-5)**2 sub ((-6 mul (8 add n)) add sign(n))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 + 0 + 6 + 1 + 5 + 12 + 8 + 13 + 21 + 18 + 24 + 33 + 31 + 38 + 48 + 47 + 55 + 66 + 66 + 75 + 87 + 88 + 98 + 111 + 113 + 124 + 138 + 141 + 153 + 168", "x2": "add x_0_3 abs n", "tree": "(x_0_3 add abs(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 25 + 90 + 265 + 634 + 1305 + 2410 + 4105 + 6570 + 1 9 + 1 4650 + 2 745 + 2 8570 + 3 8425 + 5 634 + 6 5545 + 8 3530 + 10 4985 + 13 330 + 16 9 + 19 4490 + 23 4265 + 27 9850 + 33 1785 + 39 634 + 45 6985 + 53 1450", "x2": "add sqr mul n n INT+ 9", "tree": "(((n mul n))**2 add 9)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 1 + 9 - 6 - 2 - 1 - 5 - 2 - 1 - 5 + 9 + 11 + 8 + 23 + 26 + 24 + 40 + 26 + 24 + 40 + 47 + 46 + 63 + 71 + 71 + 63 + 98 + 99 + 92 + 218 + 223 + 220 + 251 + 359", "x2": "add x_0_3 mul sqr idiv x_0_7 abs n n", "tree": "(x_0_3 add (((x_0_7 idiv abs(n)))**2 mul n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 11 + 2 - 18 - 7 - 29 - 20 - 44 - 37 - 63 - 58 - 86 - 83 - 113 - 112 - 144 - 145 - 179 - 182 - 218 - 223 - 261 - 268 - 308 - 317 - 359 - 370 - 414", "x2": "sub mul abs relu n mul n INT- 1 x_0_1", "tree": "((abs(relu(n)) mul (n mul -1)) sub x_0_1)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 7 - 3 - 9 - 5 - 8 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0", "x2": "idiv sign idiv INT+ 5 mul sqr sign x_0_6 sub sign n mod INT+ 6 x_0_4 n", "tree": "(sign((5 idiv ((sign(x_0_6))**2 mul (sign(n) sub (6 mod x_0_4))))) idiv n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 9 + 71 + 72 + 70 + 70 + 74 + 74 + 72 + 70 + 70 + 74 + 72 + 77 + 77 + 72 + 78 + 80 + 78 + 72 + 82 + 89 + 71 + 72 + 70 + 90 + 82 + 71 + 85", "x2": "add sub mod x_0_1 idiv mul n n n mul INT- 7 INT+ 9 INT+ 7", "tree": "(((x_0_1 mod ((n mul n) idiv n)) sub (-7 mul 9)) add 7)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 7 - 22 - 87 - 262 - 631 - 1302 - 2407 - 4102 - 6567 - 1 6 - 1 4647 - 2 742 - 2 8567 - 3 8422 - 5 631 - 6 5542 - 8 3527 - 10 4982 - 13 327 - 16 6 - 19 4487 - 23 4262 - 27 9847 - 33 1782 - 39 631 - 45 6982 - 53 1447", "x2": "idiv add INT+ 6 sqr abs abs sqr n INT- 1", "tree": "((6 add (abs(abs((n)**2)))**2) idiv -1)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 5 - 6 + 0 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1", "x2": "sign sign add idiv sign abs x_0_4 INT- 6 mul x_0_5 idiv sqr INT+ 6 INT- 4", "tree": "sign(sign(((sign(abs(x_0_4)) idiv -6) add (x_0_5 mul ((6)**2 idiv -4)))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 7 - 10 - 1 - 9 + 6 - 7 - 10 - 20 - 14 - 21 - 33 - 55 - 72 - 95 - 131 - 191 - 270 - 374 - 517 - 724 - 1016 - 1419 - 1974 - 2749 - 3834 - 5346 - 7445 - 1 362 - 1 4423 - 2 75 - 2 7932 - 3 8850", "x2": "add sub x_0_1 idiv sub sub INT+ 5 x_0_4 x_0_5 n x_0_4", "tree": "((x_0_1 sub (((5 sub x_0_4) sub x_0_5) idiv n)) add x_0_4)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 - 6 - 6 - 6 - 7 + 1 - 8 - 4 + 10 - 8 - 10 - 9 + 5 + 7 + 7 + 7 + 8 + 0 + 9 + 5 - 9 + 9 + 11 + 10 - 4 - 6 - 6 - 6 - 7 + 1 - 8 - 4 + 10 - 8 - 10 - 9 + 5 + 7 + 7", "x2": "sub relu relu sign n x_0_12", "tree": "(relu(relu(sign(n))) sub x_0_12)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "- 7 + 6 + 7 + 1 - 69 - 9 - 9 - 74 - 712 - 200 - 236 - 1101 - 9450 - 3022 - 3848 - 1 8472 - 16 1126 - 5 4943 - 7 4455 - 37 7906 - 338 6713 - 121 2624 - 172 9434 - 921 1442 - 8471 6964 - 3159 5426 - 4703 6621 - 2 6094 6775 - 24 5788 2304 - 9 4943 1577 - 14 6655 3859", "x2": "add add idiv mod INT+ 3 x_0_3 n INT- 9 mul sub x_0_4 relu n n", "tree": "((((3 mod x_0_3) idiv n) add -9) add ((x_0_4 sub relu(n)) mul n))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 1 + 1 - 1 + 2 - 3 - 10 + 3 + 8 + 0 - 13 - 7 + 26 + 12 - 34 - 25 + 40 + 58 - 54 - 104 + 63 + 169 - 45 - 281 - 5 + 448 + 111 - 662 - 347 + 938 + 800 - 1275 - 1573", "x2": "sub add x_0_5 sub add INT+ 6 sub sub n INT+ 6 x_0_2 x_0_6 n", "tree": "((x_0_5 add ((6 add ((n sub 6) sub x_0_2)) sub x_0_6)) sub n)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 8 + 9 - 7 - 4 + 1 + 3 + 0 + 64 + 81 + 49 + 16 + 1 + 9 + 0 + 4096 + 6561 + 2401 + 256 + 1 + 81 + 0 + 1677 7216 + 4304 6721 + 576 4801 + 6 5536 + 1 + 6561 + 0 + 281 4749 7671 656 + 1853 201 8885 1841 + 33 2329 3056 9601 + 42 9496 7296 + 1 + 4304 6721", "x2": "sqr x_0_7", "tree": "(x_0_7)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 4 + 0 + 0 + 7 - 9 + 3 + 2 - 5 + 6 - 3 + 6 + 8 + 0 + 8 + 8 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 8 + 0 + 0 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 0 + 8 + 8", "x2": "relu sub INT+ 8 mul n sqr mul x_0_12 n", "tree": "relu((8 sub (n mul ((x_0_12 mul n))**2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 2 - 7 + 2 + 0 + 6 - 2 - 5 + 10 + 28 - 8 + 0 - 18 + 12 + 10 - 50 - 112 + 32 + 0 + 54 - 72 - 20 + 250 + 448 - 128 + 0 - 162 + 432 + 40 - 1250 - 1792 + 512 + 0 + 486 - 2592", "x2": "mul add sub relu abs sub mod mul INT+ 1 0 n INT+ 7 INT+ 4 INT+ 7 sign n x_0_7", "tree": "(((relu(abs((((10 mul n) mod 7) sub 4))) sub 7) add sign(n)) mul x_0_7)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 6 - 8 + 9 - 193 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784 - 841 - 900 - 961 - 1024 - 1089 - 1156 - 1225 - 1296 - 1369 - 1444 - 1521 - 1600", "x2": "sub mul mod x_0_3 x_0_1 relu sign mod n x_0_1 sqr sub INT- 1 0 n", "tree": "(((x_0_3 mod x_0_1) mul relu(sign((n mod x_0_1)))) sub ((-10 sub n))**2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 6 - 5 + 8 + 1 + 1 - 10 + 3 - 4 - 4 - 15 - 2 - 9 - 9 - 20 - 7 - 14 - 14 - 25 - 12 - 19 - 19 - 30 - 17 - 24 - 24 - 35 - 22 - 29 - 29 - 40", "x2": "add INT- 5 x_0_4", "tree": "(-5 add x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 2 + 7 + 8 + 10 - 1 + 9 - 6 - 6 + 6 - 1 + 20 + 15 + 21 + 23 + 26 + 17 + 27 + 19 + 20 + 27 + 22 + 43 + 39 + 46 + 49 + 53 + 45 + 56 + 49 + 51 + 59 + 55 + 77 + 74 + 82 + 86 + 91", "x2": "add n abs idiv relu add x_0_11 mod n idiv n sign x_0_9 idiv n n", "tree": "(n add abs((relu((x_0_11 add (n mod (n idiv sign(x_0_9))))) idiv (n idiv n))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 1 - 5 + 7 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1", "x2": "sign idiv INT- 8 mul x_0_3 x_0_1", "tree": "sign((-8 idiv (x_0_3 mul x_0_1)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 4 + 0 + 8 - 7 - 9 - 2 + 10 + 0 - 73 - 7 - 9 - 2 - 161 + 0 - 73 - 7 - 9 - 2 - 161 + 0 - 73 - 7 - 9 - 2 - 161 + 0 - 73 - 7 - 9 - 2 - 161 + 0 - 73 - 7", "x2": "mod x_0_6 sub x_0_7 sqr idiv mul n n n", "tree": "(x_0_6 mod (x_0_7 sub (((n mul n) idiv n))**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 6 + 6 + 3 + 1 + 8 + 3 + 4 + 4 + 1 + 1 + 5 + 0 + 2 + 2 + 2 + 0 + 3 + 2 + 0 + 1 + 0 + 2 + 2 + 0 + 1 + 1 + 2 + 1 + 0 + 2 + 1 + 1", "x2": "abs add add idiv x_0_4 INT- 3 relu x_0_6 INT- 1", "tree": "abs((((x_0_4 idiv -3) add relu(x_0_6)) add -1))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 6 + 3 + 4 + 5 + 6 + 4 + 3 + 9 + 9 + 3 + 12 + 12 + 3 + 15 + 15 + 3 + 18 + 18 + 3 + 21 + 21 + 3 + 24 + 24 + 3 + 27 + 27 + 3", "x2": "abs abs sub abs n mod mod relu mod mod n INT+ 6 n INT- 3 x_0_2", "tree": "abs(abs((abs(n) sub ((relu(((n mod 6) mod n)) mod -3) mod x_0_2))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 9 + 9 + 3 + 4 - 5 - 1 - 1 + 0 + 1 - 3 + 0 - 4 + 0 - 4 - 2 - 4 - 4 - 4 - 6 - 5 - 8 - 7 - 10 - 10 - 13 - 14 - 17 - 19 - 22 - 26 - 29 - 35", "x2": "add x_0_2 idiv x_0_5 INT+ 2", "tree": "(x_0_2 add (x_0_5 idiv 2))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 10 + 3 + 7 - 9 - 9 - 6 - 10 + 9 + 9 + 6 - 4 - 4 - 3 - 4 - 2 - 2 - 2 - 2 - 5 - 5 - 5 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 6 - 6 - 6 - 6", "x2": "sub idiv add n x_0_11 INT- 6 mod n n", "tree": "(((n add x_0_11) idiv -6) sub (n mod n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 5 - 3 - 1 - 4 + 3 - 720 - 770 + 768 - 1287 - 1400 + 11 9955 - 14 9184 - 17 1275 + 32 6088 - 40 995 - 3838 7840 + 5326 1187 - 6782 7672 - 1 4250 3515 + 1 9248 960 - 201 5361 9675 - 304 6540 2968 + 421 2098 8659 - 957 6236 6784 - 1395 4870 1075 + 15 7198 2335 1960 - 25 4995 4229 75 - 37 7404 584 4736 + 91 6445 8501 8987 - 142 3396 7510 3640 - 1 7056 83 3688 4195 + 2 9375 4727 1817 4464", "x2": "mul mul sign x_0_3 add INT+ 4 n mul n add INT+ 7 abs x_0_5", "tree": "((sign(x_0_3) mul (4 add n)) mul (n mul (7 add abs(x_0_5))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 3 + 0 + 8 + 5 + 9 + 8 + 8 + 9 + 5 + 0 + 0 - 3 + 9 + 9 + 0 - 4 + 0 + 9 - 7 + 9 - 6 + 6 + 0 - 2 - 1 + 9 + 5 + 8 - 12", "x2": "sub INT+ 9 mod sqr x_0_3 relu n", "tree": "(9 sub ((x_0_3)**2 mod relu(n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 + 25 + 401 + 4813 + 4 6205 + 36 9641 + 253 4682 + 1520 8093 + 8110 9830 + 3 8932 7185 + 16 9888 2262 + 67 9552 9049 + 250 9118 4181 + 860 2691 7193 + 2752 8613 5018 + 8258 5840 5055 + 2 3318 3549 6626 + 6 2182 2799 1003 + 15 7092 755 6219 + 37 7020 9813 4926 + 86 1762 2430 8403 + 188 208 5303 6516 + 392 3913 4546 7512 + 784 7826 9093 5025 + 1506 7827 6659 5249 + 2781 7527 9986 8153 + 4945 3383 1087 6717 + 8477 7228 1864 5801", "x2": "idiv add abs mul mul abs INT+ 6 INT- 8 x_0_1 n abs n", "tree": "((abs(((abs(6) mul -8) mul x_0_1)) add n) idiv abs(n))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 8 + 4 + 4 + 5 - 2 + 10 - 9 - 8 - 8 - 10 + 5 - 29 + 19 + 19 + 23 - 9 + 43 - 17 - 29 - 29 - 53 + 23 - 149 + 79 + 79 + 115 - 33 + 175 + 35 - 113 - 113 - 225 + 95 - 629 + 319 + 315 + 579 - 133", "x2": "sub mul sub idiv mod sqr idiv x_0_9 x_0_7 x_0_10 idiv n n x_0_11 INT- 4 INT- 3", "tree": "(((((((x_0_9 idiv x_0_7))**2 mod x_0_10) idiv (n idiv n)) sub x_0_11) mul -4) sub -3)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 10 + 6 + 10 - 43 - 33 - 43 + 212 + 195 + 384 - 2123 - 2148 - 3843 + 2 3350 + 2 5773 + 5 7642 - 37 3603 - 43 8144 - 92 2275 + 635 1248 + 788 6589 + 1936 7772 - 1 3972 7459 - 1 8139 1550 - 4 2609 987 + 32 1373 1554 + 43 5339 7197 + 115 445 6646 - 899 8448 3515 - 1262 4851 8716 - 3221 2478 6091", "x2": "add INT- 3 mod x_0_3 mul sub sign mul idiv x_0_2 n INT- 1 0 n x_0_3", "tree": "(-3 add (x_0_3 mod ((sign(((x_0_2 idiv n) mul -10)) sub n) mul x_0_3)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 + 0 + 9 + 0 + 5 + 0 + 7 + 0 + 9 + 0 + 11 + 0 + 13 + 0 + 15 + 0 + 17 + 0 + 19 + 0 + 21 + 0 + 23 + 0 + 25 + 0 + 27 + 0 + 29 + 0", "x2": "sub n relu mul sign INT+ 6 mod n mul abs abs x_0_3 n", "tree": "(n sub relu((sign(6) mul (n mod (abs(abs(x_0_3)) mul n)))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 2 - 7 + 4 + 6 - 6 + 7 + 3 + 5 + 54 + 16 + 20 + 22 + 33 + 12 + 52 + 30 + 5 + 63 + 25 + 20 + 22 + 42 + 12 + 52 + 75 + 5 + 72 + 34 + 29 + 22 + 60 + 12 + 52 + 138 + 5", "x2": "abs add mul abs idiv n x_0_8 sqr add INT- 2 mod INT+ 5 n x_0_9", "tree": "abs(((abs((n idiv x_0_8)) mul ((-2 add (5 mod n)))**2) add x_0_9))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 3 - 9 - 1 + 0 - 2 + 6 + 0 - 6 + 5 - 1 - 3 + 1 + 4 + 38 + 0 + 36 + 25 + 1 + 10 + 1 + 15 + 1440 + 0 + 1296 + 661 + 1 + 101 + 1 + 225 + 207 3600 + 0 + 167 9616 + 49 2649 + 1 + 1 238 + 1819 + 5 625 + 4 2998 1696 450", "x2": "abs add mul x_0_9 idiv x_0_11 n sqr x_0_8", "tree": "abs(((x_0_9 mul (x_0_11 idiv n)) add (x_0_8)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 6 + 8 - 6 + 120 + 280 + 168 + 1176 + 9408 + 8 4672 + 84 6720 + 931 3920 + 1 1176 7040 + 14 5297 1520 + 203 4160 1280 + 3051 2401 9200 + 4 8819 8430 7200 + 82 9937 3322 2400 + 1493 8871 9800 3200 + 2 8383 8567 6206 800 + 56 7677 1352 4121 6000 + 1192 1219 8400 6553 6000 + 2 6226 6836 4814 4179 2000 + 60 3213 7239 731 6121 6000 + 1447 7129 3737 7558 6918 4000 + 3 6192 8234 3443 8967 2960 0 + 94 1013 4092 9541 3149 6960 0 + 2540 7362 509 7615 5041 7920 0 + 7 1140 6137 4273 3234 1170 1760 0 + 206 3077 7985 3926 3789 3935 1040 0 + 6189 2333 9561 7791 3681 8053 1200 0", "x2": "mul mod x_0_1 sqr x_0_3 add abs n mod sub n n INT- 4", "tree": "((x_0_1 mod (x_0_3)**2) mul (abs(n) add ((n sub n) mod -4)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 5 + 2 + 10 + 9 + 2 + 5 - 3 - 9 - 3 - 8 - 10 - 8 - 2 - 1 - 2 + 2 - 7 - 9 - 12 - 19 - 24 - 29 - 28 - 32 - 32 - 32 - 41 - 43 - 55 - 64 - 81 - 95 - 111 - 129 - 145 - 163", "x2": "add add x_0_2 x_0_10 add INT- 2 sub n n", "tree": "((x_0_2 add x_0_10) add (-2 add (n sub n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 1 - 9 + 6 - 6 - 14 + 1 - 11 - 19 - 4 - 16 - 24 - 9 - 21 - 29 - 14 - 26 - 34 - 19 - 31 - 39 - 24 - 36 - 44 - 29 - 41 - 49 - 34 - 46 - 54 - 39", "x2": "add add sub sign n INT- 6 INT- 9 sub x_0_3 INT+ 3", "tree": "(((sign(n) sub -6) add -9) add (x_0_3 sub 3))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 1 + 7 - 9 - 8 + 5 + 2 + 2 + 8 - 8 - 7 + 6 + 3 + 3 + 9 - 7 - 6 + 7 + 4 + 4 + 10 - 6 - 5 + 8 + 5 + 5 + 11 - 5 - 4 + 9 + 6 + 6 + 12", "x2": "add sign sqr n x_0_6", "tree": "(sign((n)**2) add x_0_6)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 10 - 9 + 2 - 2 + 4 - 1 + 3 + 544 + 765 + 1030 + 1375 + 1764 + 2236 + 2786 + 3420 + 4144 + 4964 + 5886 + 6916 + 8060 + 9324 + 1 714 + 1 2236 + 1 3896 + 1 5700 + 1 7654 + 1 9764 + 2 2036 + 2 4476 + 2 7090 + 2 9884 + 3 2864 + 3 6036 + 3 9406", "x2": "mul n sub relu sqr n idiv sub INT+ 7 sign add sign sign x_0_4 x_0_7 INT- 2", "tree": "(n mul (relu((n)**2) sub ((7 sub sign((sign(sign(x_0_4)) add x_0_7))) idiv -2)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 3 - 2 - 1 + 0 + 2 + 3 + 4 + 5 + 6 + 8 + 9 + 10 + 11 + 12 + 14 + 15 + 16 + 17 + 18 + 20 + 21 + 22 + 23 + 24 + 26 + 27 + 28", "x2": "add add idiv add n n INT+ 1 0 n INT- 4", "tree": "((((n add n) idiv 10) add n) add -4)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 - 4 - 12 - 27 - 51 - 86 - 134 - 197 - 277 - 376 - 496 - 639 - 807 - 1002 - 1226 - 1481 - 1769 - 2092 - 2452 - 2851 - 3291 - 3774 - 4302 - 4877 - 5501 - 6176 - 6904 - 7687", "x2": "add idiv x_0_1 x_0_1 sub x_0_1 abs sqr n", "tree": "((x_0_1 idiv x_0_1) add (x_0_1 sub abs((n)**2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 1 - 9 - 7 - 1 - 8 + 6 - 8 + 10 + 6 - 2 + 0 + 6 - 1 + 13 - 1 + 17 + 13 + 5 + 7 + 13 + 6 + 20 + 6 + 24 + 20 + 12 + 14 + 20 + 13 + 27 + 13 + 31 + 27 + 19", "x2": "add INT+ 7 x_0_8", "tree": "(7 add x_0_8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 9 + 6 + 10 - 6 - 4 - 1 2012 + 3 6857 - 3 9373 - 10 7 + 8 7839 + 8 2937 + 3 4307 4725 - 14 1589 8519 + 19 9325 8118 + 65 5405 8745 - 73 3640 1126 - 87 639 4519 - 44 7098 4123 6732 + 226 5437 6303 9993 - 387 6508 3204 6765 - 1535 3275 8536 8727 + 2053 258 2750 959 + 2888 5727 4793 5737 + 1746 4781 7330 9843 7493 - 1 352 5062 6589 6384 1175 + 2 601 3545 8337 6483 8358 + 9 4369 8312 3124 26 2905 - 14 5206 6160 3007 578 2486 - 23 3974 3925 8279 4697 7 - 16 1290 9269 932 8020 9197 2860 + 108 5538 9610 2685 6687 2391 6793 - 244 3157 9028 8724 2308 7035 7725", "x2": "sub INT- 7 mul mul mul n n x_0_6 sqr n", "tree": "(-7 sub (((n mul n) mul x_0_6) mul (n)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 18 + 80 + 475 + 2916 + 2 3324 + 18 6688 + 188 9325 + 1866 8900 + 2 2860 8446 + 26 8832 1744 + 386 3482 7543 + 5269 1106 2020 + 8 6928 3619 7400 + 134 8892 3187 7376 + 2512 2296 6104 8889 + 4 3704 1111 2827 148 + 90 6914 9076 3864 9290 + 1748 1644 4513 805 9600 + 3 9994 9474 2686 4433 7331 + 84 6111 5914 4331 84 6884 + 2115 7327 1888 1128 5444 8628 + 4 8736 276 6713 4660 8780 5760 + 132 2332 9493 70 5340 3039 3125 + 3294 5554 7029 8303 753 5669 4436 + 9 6398 720 402 1419 3081 5658 8854 + 258 2931 4887 1386 9611 796 4843 8608 + 8107 778 5553 8201 3638 1596 9122 7055", "x2": "mul sqr n relu add add relu x_0_2 idiv mod sign INT- 6 INT- 1 INT- 9 sign x_0_2", "tree": "((n)**2 mul relu(((relu(x_0_2) add ((sign(-6) mod -1) idiv -9)) add sign(x_0_2))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 12 + 36 + 144 + 720 + 4320 + 3 240 + 24 1920 + 217 7280 + 2177 2800 + 2 3950 800 + 28 7400 9600 + 373 6212 4800 + 5230 6974 7200 + 7 8460 4620 8000 + 125 5367 3932 8000 + 2134 1245 6857 6000 + 3 8414 2422 3436 8000 + 72 9870 6024 5299 2000 + 1459 7412 490 5984 0 + 3 654 5653 302 5664 0 + 67 4400 4366 6656 4608 0 + 1551 1210 433 3098 5984 0 + 3 7226 9041 399 4366 3616 0 + 93 672 6025 9985 9159 400 0 + 2419 7487 6675 9633 8135 400 0 + 6 5333 2167 251 112 9646 800 0 + 182 9330 676 7028 3163 90 2400 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 - 10 - 6 - 9 - 4 + 1 - 3 + 1 - 2 + 3 + 8 + 4 + 8 + 5 + 10 + 15 + 11 + 15 + 12 + 17 + 22 + 18 + 22 + 19 + 24 + 29 + 25 + 29 + 26 + 31 + 36 + 32", "x2": "add mod relu INT+ 7 add n relu n x_0_5", "tree": "((relu(7) mod (n add relu(n))) add x_0_5)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 1 - 1 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8 - 8 - 8 - 9 - 9 - 9", "x2": "idiv n INT- 3", "tree": "(n idiv -3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 8 - 3 - 9 + 4 + 10 - 10 + 10 - 2 - 1 - 8 + 12 - 2 - 8 + 18 - 20 + 19 - 27 + 39 - 41 + 33 - 15 - 5 + 24 - 51 + 90 - 131 + 164 - 179", "x2": "sub x_0_7 x_0_1", "tree": "(x_0_7 sub x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 6 - 9 + 6 + 10 - 6 + 8 + 0 + 1 - 6 - 9 - 1 + 6 + 9 + 6 + 10 + 6 + 8 + 0 + 1 + 6 + 9 + 1 + 6 + 9 + 6 + 10 + 6 + 8 + 0 + 1 + 6 + 9 + 1", "x2": "abs abs x_0_11", "tree": "abs(abs(x_0_11))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 9 - 4 - 6 + 6 - 11 - 24 - 26 - 14 - 31 - 44 - 46 - 34 - 51 - 64 - 66 - 54 - 71 - 84 - 86 - 74 - 91 - 104 - 106 - 94 - 111 - 124", "x2": "add x_0_4 mul mod INT- 7 INT- 5 INT+ 1 0", "tree": "(x_0_4 add ((-7 mod -5) mul 10))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 7 + 9 - 8 + 5 + 6 + 44 - 23 + 30 + 35 + 188 - 79 + 134 + 155 + 768 - 299 + 554 + 639 + 3092 - 1175 + 2238 + 2579 + 1 2392 - 4675 + 8978 + 1 343 + 4 9596 - 1 8671", "x2": "add add mul x_0_4 INT+ 4 n sqr sign mod abs idiv x_0_3 abs relu x_0_6 x_0_4", "tree": "(((x_0_4 mul 4) add n) add (sign((abs((x_0_3 idiv abs(relu(x_0_6)))) mod x_0_4)))**2)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 6 + 9 - 1 - 4 - 3 - 6 - 10 + 5 - 4 + 0 - 15 + 0 - 10 - 13 - 12 - 15 - 19 - 4 - 13 - 9 - 24 - 9 - 19 - 22 - 21 - 24 - 28 - 13 - 22 - 18 - 33", "x2": "sub x_0_10 INT+ 9", "tree": "(x_0_10 sub 9)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 9 - 10 - 5 - 1 - 2 + 591 + 341 + 13 + 15 + 27 - 2339 - 665 + 19 + 23 - 52 + 4699 + 688 + 27 + 33 + 129 - 4672 + 31 + 37 - 37 - 98 + 4707 + 41", "x2": "sub add sqr mod mod n INT+ 4 n INT+ 5 sub mul x_0_5 idiv sqr INT+ 8 abs x_0_2 n", "tree": "(((((n mod 4) mod n))**2 add 5) sub ((x_0_5 mul ((8)**2 idiv abs(x_0_2))) sub n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 4 + 2 - 4 + 0 + 0 - 15 - 3 - 16 + 0 + 0 - 225 - 9 - 256 + 0 + 0 - 5 625 - 81 - 6 5536 + 0 + 0 - 25 6289 625 - 6561 - 42 9496 7296 + 0 + 0 - 656 8408 3557 1289 625", "x2": "sub idiv INT+ 8 n relu sqr x_0_5", "tree": "((8 idiv n) sub relu((x_0_5)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 - 8 - 10 - 11 - 13 - 14 - 16 - 17 - 19 - 20 - 22 - 23 - 25 - 26 - 28 - 29 - 31 - 32 - 34 - 35 - 37 - 38", "x2": "add INT- 5 sub idiv n add abs idiv n mul INT+ 3 n idiv INT- 9 INT+ 7 n", "tree": "(-5 add ((n idiv (abs((n idiv (3 mul n))) add (-9 idiv 7))) sub n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 3 - 9 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign mul mul sub relu mul x_0_3 add n idiv INT- 6 sign INT- 9 n abs n INT+ 7", "tree": "sign((((relu((x_0_3 mul (n add (-6 idiv sign(-9))))) sub n) mul abs(n)) mul 7))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 5 - 8 - 2 + 5 + 2 + 8 + 6 + 3 + 0 + 7 + 4 + 1 + 8 + 5 + 2 + 0 + 6 + 3 + 1 + 7 + 4 + 2 + 8 + 5 + 3", "x2": "mod add add INT+ 8 INT- 7 x_0_3 abs abs INT+ 9", "tree": "(((8 add -7) add x_0_3) mod abs(abs(9)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 3 - 3 + 6 + 1 + 5 - 1 + 10 - 2 - 9 + 15 + 3 - 30 - 12 - 9 + 75 - 3 - 300 + 24 + 81 + 1125 - 9 + 9000 - 288 - 729 + 8 4375 + 27 - 270 0 - 6912 - 5 9049 + 9492 1875 - 243", "x2": "mul sub x_0_5 relu add n add n mul n INT- 4 x_0_10", "tree": "((x_0_5 sub relu((n add (n add (n mul -4))))) mul x_0_10)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 7 - 4 + 10 - 7 + 10 - 4 - 9 - 25 - 10 - 29 - 17 - 14 + 0 - 17 + 0 - 14 - 19 - 35 - 20 - 39 - 27 - 24 - 10 - 27 - 10 - 24 - 29", "x2": "sub sub idiv abs n n x_0_5 add n n", "tree": "(((abs(n) idiv n) sub x_0_5) sub (n add n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 7 - 1 - 10 - 5 - 4 - 8 - 56 - 520 - 90 - 210 - 374 - 300 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600 - 650 - 702 - 756 - 812", "x2": "sub mul n mul n idiv n x_0_6 n", "tree": "((n mul (n mul (n idiv x_0_6))) sub n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 1 + 10 + 5 + 12 - 7 + 5 + 7 + 10 - 12 + 10 + 11 + 13 - 15 + 14 + 15 + 17 - 19 + 18 + 19 + 21 - 23 + 22 + 23 + 25 - 27", "x2": "add mul n sign idiv relu n x_0_4 idiv INT- 7 x_0_3", "tree": "((n mul sign((relu(n) idiv x_0_4))) add (-7 idiv x_0_3))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 4 + 3 + 4 + 5 - 3 + 6 + 2 - 5 + 8 + 7 + 3 + 4 + 5 + 12 + 6 + 2 + 13 + 8 + 7 + 3 + 4 + 5 + 12 + 6 + 2 + 13 + 8 + 7 + 3 + 4", "x2": "mod x_0_9 relu n", "tree": "(x_0_9 mod relu(n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 2 - 1 - 6 - 11 - 22 - 39 - 68 - 115 - 192 - 317 - 520 - 849 - 1382 - 2245 - 3642 - 5903 - 9562 - 1 5483 - 2 5064 - 4 567 - 6 5652 - 10 6241 - 17 1916 - 27 8181", "x2": "add x_0_2 sub x_0_1 n", "tree": "(x_0_2 add (x_0_1 sub n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 - 2 - 10 + 7 + 7 + 0 + 18 + 19 + 13 + 32 + 34 + 29 + 49 + 52 + 48 + 69 + 73 + 70 + 92 + 97 + 95 + 118 + 124 + 123 + 147", "x2": "add sub relu n sub idiv relu INT- 9 INT+ 1 x_0_3 INT+ 4", "tree": "((relu(n) sub ((relu(-9) idiv 1) sub x_0_3)) add 4)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 2 + 1 + 2 - 7 + 1 + 5 + 9 + 3 + 7 - 9 + 7 - 5 + 1297 + 893 + 942 + 61 + 2037 + 2445 + 1365 + 3817 + 1740 + 2373 + 5218 + 1341 + 1 7022 + 5457 + 1 9221 + 1 4277 + 9712 + 2 7 + 2 4828 + 2 9565 + 1 4781 + 9823", "x2": "add add INT- 1 mul add idiv x_0_5 n sqr mod sub INT- 5 x_0_12 n n INT- 2", "tree": "((-1 add (((x_0_5 idiv n) add (((-5 sub x_0_12) mod n))**2) mul n)) add -2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "+ 10 + 9 - 7 - 16 - 25 - 37 - 50 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401 - 442 - 485 - 530 - 577 - 626", "x2": "sub idiv relu n x_0_3 sqr n", "tree": "((relu(n) idiv x_0_3) sub (n)**2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 7 - 2 + 0 - 12 - 7 - 5 - 17 - 12 - 10 - 22 - 17 - 15 - 27 - 22 - 20 - 32 - 27 - 25 - 37 - 32 - 30 - 42 - 37 - 35 - 47", "x2": "sub x_0_3 INT+ 5", "tree": "(x_0_3 sub 5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 2 + 3 + 12 + 26 + 81 + 410 + 822 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0", "x2": "mul mod x_0_3 n add x_0_1 sub sign INT- 4 INT- 2", "tree": "((x_0_3 mod n) mul (x_0_1 add (sign(-4) sub -2)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 6 - 6 - 5 - 4 - 3 - 2 - 1 + 0 + 1 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 12", "x2": "sub add idiv n sub x_0_1 abs n n abs abs INT+ 8", "tree": "(((n idiv (x_0_1 sub abs(n))) add n) sub abs(abs(8)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 8 + 46 + 19 + 26 + 35 + 46 + 59 + 74 + 91 + 110 + 131 + 154 + 179 + 206 + 235 + 266 + 299 + 334 + 371 + 410 + 451 + 494 + 539", "x2": "add sqr mod n x_0_1 INT+ 1 0", "tree": "(((n mod x_0_1))**2 add 10)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 5 + 8 + 10 + 13 + 16 + 18 + 21 + 24 + 26 + 29 + 32 + 34 + 37 + 40 + 42 + 45 + 48 + 50 + 53 + 56 + 58", "x2": "idiv mul INT- 8 n mod INT- 1 0 INT- 7", "tree": "((-8 mul n) idiv (-10 mod -7))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 9 - 3 - 1 + 1 - 6 - 3 - 49 - 81 - 9 - 1 - 1 - 36 - 9 - 2401 - 6561 - 81 - 1 - 1 - 1296 - 81 - 576 4801 - 4304 6721 - 6561 - 1 - 1 - 167 9616 - 6561 - 33 2329 3056 9601", "x2": "mul sign x_0_2 abs sqr x_0_7", "tree": "(sign(x_0_2) mul abs((x_0_7)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 3 - 6 + 9 - 9 - 3 + 6 - 9 + 9 + 3 - 6 + 9 - 9 - 3 + 6 - 9 + 9 + 3 - 6 + 9 - 9 - 3 + 6 - 9 + 9 + 3", "x2": "idiv x_0_4 INT- 1", "tree": "(x_0_4 idiv -1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 2 + 6 - 6 + 7 - 6 - 9 - 2 + 1 - 5 + 8 + 17 + 6 + 20 + 8 + 6 + 14 + 18 + 13 + 27 + 37 + 27 + 42 + 31 + 30 + 39 + 44 + 40 + 55 + 66 + 57 + 73", "x2": "add n x_0_9", "tree": "(n add x_0_9)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 7 + 8 + 10 + 7 + 8 + 10 + 7 + 8 + 10 + 7 + 8 + 10 + 7 + 8 + 10 + 7 + 8 + 10 + 7 + 8 + 10 + 7 + 8 + 10 + 7", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 4 - 8 + 240 + 3944 + 8 4360 + 192 7128 + 4802 3080 + 12 9271 5400 + 373 9249 7208 + 1 1565 7457 3592 + 38 919 9825 3448 + 1330 9019 5940 5128 + 4 9167 482 3676 9400 + 191 4848 7218 8569 2120 + 7841 319 5631 7640 5896 + 33 6780 8999 3294 4430 4776 + 1513 9439 7463 5171 649 104 + 7 1087 9376 7037 2339 295 3880 + 348 278 636 6383 6336 8425 3192 + 1 7735 1876 5017 1022 2965 8185 6456 + 93 9268 3094 4385 5469 9033 6720 9080 + 5162 4259 3439 6763 1603 1456 802 7224 + 29 4070 2907 3155 2502 7409 7548 3028 5960 + 1733 9815 4694 9206 3704 1545 6407 7956 8136", "x2": "mul add mod INT- 1 n add n INT+ 8 sub sub mul relu x_0_2 mul INT- 2 INT- 1 sub x_0_3 x_0_1 x_0_3", "tree": "(((-1 mod n) add (n add 8)) mul (((relu(x_0_2) mul (-2 mul -1)) sub (x_0_3 sub x_0_1)) sub x_0_3))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 - 4 + 8 + 2 - 10 - 4 + 10 - 7 + 10 - 8 + 0 + 0 + 8 + 2 + 0 + 0 + 10 + 0 + 10 + 0 + 0 + 0 + 8 + 2 + 0 + 0 + 10 + 0 + 10 + 0 + 0 + 0", "x2": "relu x_0_10", "tree": "relu(x_0_10)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 1 - 4 + 2 + 0 + 4 + 0 + 8 + 0 + 16 + 0 + 32 + 0 + 64 + 0 + 128 + 0 + 256 + 0 + 512 + 0 + 1024 + 0 + 2048 + 0", "x2": "add x_0_2 abs x_0_2", "tree": "(x_0_2 add abs(x_0_2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 + 6 - 1 + 8 + 9 - 2 + 0 - 4 - 3 + 30 + 70 + 135 + 74 + 56 + 60 + 74 + 165 + 210 + 135 + 35 + 21 + 41 + 195 + 267 + 559 + 39 + 300 + 85 + 135 + 330 + 225", "x2": "abs sub x_0_3 mul mod x_0_9 n sub n idiv mod x_0_1 n n", "tree": "abs((x_0_3 sub ((x_0_9 mod n) mul (n sub ((x_0_1 mod n) idiv n)))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 2 + 7 - 9 + 4 - 1 + 3 - 4 - 8 + 2 + 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1", "x2": "sign sign mul x_0_9 mul INT- 1 0 sign mod INT- 9 relu relu n", "tree": "sign(sign((x_0_9 mul (-10 mul sign((-9 mod relu(relu(n))))))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 8 - 10 + 0 + 0 - 8 + 0 + 0 - 7 + 0 + 0 - 10 + 0 + 0 - 26 + 0 + 0 - 48 + 0 + 0 - 114 + 0 + 0 - 286 + 0", "x2": "mul add n INT- 2 idiv x_0_3 abs INT- 9", "tree": "((n add -2) mul (x_0_3 idiv abs(-9)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 4 + 9 + 32 + 155 + 924 + 6461 + 5 1680 + 46 5111 + 465 1100 + 5116 2089 + 6 1394 5056 + 79 8128 5715 + 1117 3799 9996 + 1 6760 6999 9925 + 26 8171 1999 8784 + 455 8910 3997 9311 + 8206 387 1962 7580 + 15 5914 7356 7292 4001 + 311 8294 7134 5848 0 + 6548 4188 9826 2807 9979 + 14 4065 2157 6178 1775 9516 + 331 3499 9625 2098 846 8845", "x2": "abs mul sub x_0_1 sign mul INT- 1 mod sqr n n n", "tree": "abs(((x_0_1 sub sign((-1 mul ((n)**2 mod n)))) mul n))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 9 - 6 + 8 + 4 - 7 - 102 + 7 + 8 + 9 + 10 - 1297 + 0 - 11 - 10 + 15 - 6 2240 + 17 - 66 - 281 + 20 - 74 7063 + 22 + 23 - 3588 + 25 - 896 4994 - 9", "x2": "mod n mul INT+ 3 mul sub x_0_5 x_0_4 sub n x_0_4", "tree": "(n mod (3 mul ((x_0_5 sub x_0_4) mul (n sub x_0_4))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 1 - 50 + 1 - 60 + 1 - 70 + 1 - 80 + 1 - 90 + 1 - 100 + 1 - 110 + 1 - 120 + 1 - 130 + 1 - 140 + 1 - 150", "x2": "mod sign abs n add mul INT+ 6 sub sub sqr x_0_1 n INT+ 7 n", "tree": "(sign(abs(n)) mod ((6 mul (((x_0_1)**2 sub n) sub 7)) add n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 0 + 5 - 3 - 20 - 6 - 21 - 8 + 36 + 0 + 44 + 12 - 130 - 14 - 180 - 64 + 527 + 36 + 836 + 300 - 2793 - 220 - 4830 - 1824 + 1 7425 + 1404", "x2": "mul n idiv sub INT- 4 x_0_4 abs INT+ 4", "tree": "(n mul ((-4 sub x_0_4) idiv abs(4)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 7 - 1 + 3 + 8 - 8 + 7 + 8 + 180 + 30 + 11 - 96 - 78 + 14 + 975 + 480 + 68 - 1728 - 1482 - 600 + 2 475 + 1 560 + 1564 - 4 1472 - 3 7050 - 1 5600 + 55 2825 + 29 5680", "x2": "mul n mod x_0_6 add sub n x_0_3 INT+ 4", "tree": "(n mul (x_0_6 mod ((n sub x_0_3) add 4)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 7 - 4 + 2 - 4 + 4 + 10 + 10 - 11 - 9 - 5 - 12 - 5 + 0 - 1 - 24 - 23 - 20 - 28 - 22 - 19 - 21 - 45 - 45 - 43 - 53 - 48 - 46 - 49 - 74", "x2": "sub add INT+ 6 sub sub x_0_7 sqr sign x_0_2 idiv n INT+ 5 n", "tree": "((6 add ((x_0_7 sub (sign(x_0_2))**2) sub (n idiv 5))) sub n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 4 - 8 + 2 - 5 - 9 + 1 - 6 - 10 + 0 - 7 - 11 - 1 - 8 - 12 - 2 - 9 - 13 - 3 - 10 - 14 - 4 - 11 - 15 - 5", "x2": "add sign INT- 1 0 x_0_3", "tree": "(sign(-10) add x_0_3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 21 + 86 + 261 + 630 + 1301 + 2406 + 4101 + 10 4981 + 16 5 + 23 4261 + 33 1781 + 45 6981 + 61 4661 + 81 5 + 104 8581 + 676 5206 + 850 3061 + 1055 6006 + 1296 5 + 1575 2966 + 1897 4741", "x2": "add INT+ 5 abs sqr sqr mul relu n idiv n INT- 8", "tree": "(5 add abs((((relu(n) mul (n idiv -8)))**2)**2))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 1 + 1 - 4 - 7 - 6 + 8 + 5 + 7 + 2 + 1 + 0 + 14 + 11 + 13 + 8 + 7 + 6 + 20 + 17 + 19 + 14 + 13 + 12 + 26 + 23 + 25 + 20 + 19", "x2": "abs add INT+ 3 sub INT- 9 x_0_6", "tree": "abs((3 add (-9 sub x_0_6)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 7 - 5 - 4 - 9 + 13 + 13 + 12 + 12 + 18 + 23 + 24 + 24 + 25 + 32 + 38 + 40 + 41 + 43 + 51 + 58 + 61 + 63 + 66 + 75 + 83 + 87", "x2": "sub n sub sign sqr x_0_1 abs x_0_5", "tree": "(n sub (sign((x_0_1)**2) sub abs(x_0_5)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 9 - 7 + 1 - 7 + 9 - 7 + 1 - 7 + 9 - 7 + 1 - 7 + 9 - 7 + 1 - 7 + 9 - 7 + 1 - 7 + 9 - 7 + 1", "x2": "idiv mod x_0_2 INT- 1 0 sign x_0_1", "tree": "((x_0_2 mod -10) idiv sign(x_0_1))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 5 + 10 - 4 - 1 + 7 + 8 - 6 + 3 - 5 + 6 + 8 + 1 + 7 - 4 - 6 + 1 + 5 - 6 + 8 + 1 + 3 + 8 - 6 + 1 - 1", "x2": "idiv sub INT+ 2 x_0_4 sign x_0_3", "tree": "((2 sub x_0_4) idiv sign(x_0_3))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 7 + 3 - 3 - 1 + 4 + 1 - 10 + 3 - 3 - 1 + 4 + 1 - 10 + 3 - 3 - 1 + 4 + 1 - 10 + 3 - 3 - 1 + 4 + 1 - 10 + 3 - 3 - 1 + 4 + 1", "x2": "mul x_0_6 sign sub x_0_9 sub x_0_5 abs relu sqr n", "tree": "(x_0_6 mul sign((x_0_9 sub (x_0_5 sub abs(relu((n)**2))))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 10 + 10 - 3 - 3 + 4 - 3 - 5 - 2 - 5 - 5 - 4 - 3 - 7 - 6 - 4 - 9 - 7 - 4 - 10 - 7 - 5 - 10 - 8 - 3", "x2": "sub mod x_0_2 x_0_3 INT+ 3", "tree": "((x_0_2 mod x_0_3) sub 3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 - 7 - 3 - 7 + 6 + 6 + 7 + 1 + 2 + 1 + 2 - 2 - 2 - 3 - 1 - 1 - 1 - 1 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0", "x2": "idiv x_0_7 INT- 3", "tree": "(x_0_7 idiv -3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 6 + 4 + 2 + 7 - 2 + 2 + 4 + 1 - 4 + 4 + 2 + 8 - 2 + 2 + 4 + 1 - 4 + 4 + 2 + 8 - 2 + 2 + 4 + 1 - 4 + 4", "x2": "idiv INT+ 8 x_0_4", "tree": "(8 idiv x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 7 - 8 + 1 - 8 + 3 - 6 - 5 + 66 + 71 + 68 + 65 + 70 + 67 + 74 + 76 + 76 + 78 + 72 + 66 + 68 + 85 + 66 + 65 + 88 + 88 + 80 + 72 + 72 + 87", "x2": "add mod x_0_8 add n idiv x_0_7 x_0_7 sqr INT- 8", "tree": "((x_0_8 mod (n add (x_0_7 idiv x_0_7))) add (-8)**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 + 7 + 6 + 560 - 784 - 672 - 6 2720 + 8 7808 + 7 5264 + 702 4640 - 983 4496 - 842 9568 - 7 8675 9680 + 11 146 3552 + 9 4411 1616 + 881 1708 4160 - 1233 6391 7824 - 1057 4050 992 - 9 8691 1342 5920 + 13 8167 5879 6288 + 11 8429 3611 1104 + 1105 3407 370 3040 - 1547 4769 8518 4256 - 1326 4088 4444 3648 - 12 3798 1588 1474 480", "x2": "mul mul sqr INT+ 4 INT- 7 x_0_3", "tree": "(((4)**2 mul -7) mul x_0_3)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 4 - 4 + 10 - 2 - 10 + 10 - 1 - 2 - 10 + 16 + 16 + 100 + 4 + 100 + 100 + 1 + 4 + 100 + 256 + 256 + 1 0 + 16 + 1 0 + 1 0 + 1 + 16 + 1 0 + 6 5536 + 6 5536 + 1 0 0 + 256", "x2": "sub sqr x_0_9 idiv n sub n INT- 8", "tree": "((x_0_9)**2 sub (n idiv (n sub -8)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1", "x2": "abs idiv mod n INT- 5 add relu n n", "tree": "abs(((n mod -5) idiv (relu(n) add n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 - 5 + 0 + 7 + 16 + 27 + 40 + 55 + 72 + 91 + 112 + 135 + 160 + 187 + 216 + 247 + 280 + 315 + 352 + 391 + 432 + 475", "x2": "sub n sub n sub sqr n INT+ 9", "tree": "(n sub (n sub ((n)**2 sub 9)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12", "x2": "mod sub mul relu INT- 9 INT- 4 x_0_1 n", "tree": "(((relu(-9) mul -4) sub x_0_1) mod n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 2 + 5 - 5 - 4 + 4 + 5 + 4 - 9 + 10 + 12 + 12 + 12 + 12 + 16 + 25 + 26 + 17 + 18 + 26 + 28 + 25 + 25 + 21 + 25 + 34 + 33 + 29 + 31 + 32 + 35", "x2": "add idiv sub n mul n idiv x_0_4 x_0_3 INT- 1 0 sub n mod add x_0_9 relu n INT- 1 0", "tree": "(((n sub (n mul (x_0_4 idiv x_0_3))) idiv -10) add (n sub ((x_0_9 add relu(n)) mod -10)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 9 - 1 - 10 - 11 - 21 - 32 - 53 - 85 - 138 - 223 - 361 - 584 - 945 - 1529 - 2474 - 4003 - 6477 - 1 480 - 1 6957 - 2 7437 - 4 4394 - 7 1831 - 11 6225", "x2": "add x_0_1 x_0_2", "tree": "(x_0_1 add x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 8 + 4 - 2 - 4 + 2 - 5 + 4 - 2 + 1 + 2 - 1 + 2 - 2 + 1 - 1 - 1 + 0 - 1 + 1 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv x_0_6 INT- 2", "tree": "(x_0_6 idiv -2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 + 9 - 3 - 1 - 3 + 9 - 3 - 1 - 3 + 9 - 3 - 1 - 3 + 9 - 3 - 1 - 3 + 9 - 3 - 1 - 3 + 9 - 3 - 1 - 3 + 9", "x2": "add x_0_4 relu idiv mod INT- 5 sqr INT+ 1 x_0_1", "tree": "(x_0_4 add relu(((-5 mod (1)**2) idiv x_0_1)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "idiv mod n abs INT+ 8 INT+ 4", "tree": "((n mod abs(8)) idiv 4)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 5 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "add sqr n relu sub sub INT+ 5 n abs n", "tree": "((n)**2 add relu(((5 sub n) sub abs(n))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 5 + 8 + 0 + 35 + 224 + 1792 + 1 4091 + 11 1160 + 87 6736 + 691 5251 + 5454 3888 + 4 3021 3952 + 33 9330 4859 + 267 6463 1656 + 2111 555 5584 + 1 6650 9131 659 + 13 1333 7806 3680 + 103 5892 8562 352 + 817 586 4578 8203 + 6444 5355 1985 9864 + 5 831 1591 5953 6448 + 40 929 8627 5577 4163 + 316 2327 1534 717 4256 + 2494 2799 1131 4063 8912", "x2": "mul add add idiv x_0_2 sign relu sign sqr x_0_2 x_0_1 INT- 3 INT+ 7", "tree": "((((x_0_2 idiv sign(relu(sign((x_0_2)**2)))) add x_0_1) add -3) mul 7)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 + 4 + 2 - 9 + 2 - 2 + 9 + 10 + 5 - 1 + 21 + 28 + 28 + 19 + 32 + 30 + 43 + 46 + 43 + 39 + 63 + 72 + 74 + 67 + 82 + 82 + 97 + 102 + 101 + 99 + 125 + 136", "x2": "add add x_0_10 n n", "tree": "((x_0_10 add n) add n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 6 + 0 + 2 + 7 + 6 + 10 - 7 - 5 + 9 - 2 + 20 + 15 + 14 + 10 + 12 + 9 + 27 + 26 + 13 + 25 + 4 + 10 + 12 + 17 + 16 + 20 + 3 + 5 + 19 + 8 + 30 + 25", "x2": "add sub n sub x_0_10 sign n idiv add mod n abs sub sqr n INT- 7 n n", "tree": "((n sub (x_0_10 sub sign(n))) add (((n mod abs(((n)**2 sub -7))) add n) idiv n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 10 + 2 - 14 - 3 - 20 - 10 - 28 - 19 - 38 - 30 - 50 - 43 - 64 - 58 - 80 - 75 - 98 - 94 - 118 - 115 - 140 - 138 - 164 - 163", "x2": "sub x_0_2 add abs sign relu add x_0_2 x_0_2 n", "tree": "(x_0_2 sub (abs(sign(relu((x_0_2 add x_0_2)))) add n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 64 + 32 + 21 + 16 + 12 + 10 + 9 + 8 + 7 + 6 + 5 + 5 + 4 + 4 + 4 + 4 + 3 + 3 + 3 + 3 + 3 + 2", "x2": "idiv sqr INT- 8 n", "tree": "((-8)**2 idiv n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 8 + 2 + 3 - 6 + 10 - 8 + 7 - 4 + 36 - 28 - 10 + 36 - 114 + 36 - 86 + 36 - 622 + 36 + 36 - 730 + 36 - 802 + 36 - 874 + 36 - 946 - 982 + 36 - 1054", "x2": "mod sqr INT- 6 sub INT- 1 0 mul n x_0_8", "tree": "((-6)**2 mod (-10 sub (n mul x_0_8)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 4 + 1 - 4 + 7 + 0 - 10 - 1 + 1 - 6 - 12 - 8 - 20 - 14 - 5 - 15 - 18 - 12 - 7 - 12 - 1 - 8 - 18 - 9 - 7 - 14 - 20 - 16 - 28 - 22 - 13", "x2": "sub INT- 1 add x_0_8 n", "tree": "(-1 sub (x_0_8 add n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 6 - 8 - 9 - 1 - 1 - 1 - 1 - 2 + 0 - 1 - 1 + 0 - 1 - 2 + 0 - 1 - 1 + 0 - 1 - 2 + 0 - 1 - 1 + 0 - 1", "x2": "mod relu idiv mul INT- 4 abs idiv mul abs add n n INT- 4 INT+ 4 x_0_3 INT- 3", "tree": "(relu(((-4 mul abs(((abs((n add n)) mul -4) idiv 4))) idiv x_0_3)) mod -3)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 7 + 5 + 7 - 4 + 4 - 5 - 7 - 105 + 20 + 84 - 12 + 4 - 485 - 196 - 9660 + 80 + 1008 - 5724 + 752 - 468 1220 - 1 7248 - 981 4560 + 45 7280 + 76 6080 - 267 9525 7488 + 1296 4480 - 45 9440 7711 3440 - 78 8730 3424 - 7 5188 1664 1280", "x2": "mul abs add x_0_5 relu INT+ 8 x_0_7", "tree": "(abs((x_0_5 add relu(8))) mul x_0_7)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506", "x2": "add sqr n n", "tree": "((n)**2 add n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 2 - 1 + 3 + 3 + 6 + 2 + 2 - 1 + 3 + 3 + 6 + 2 + 2 - 1 + 3 + 3 + 6 + 2 + 2 - 1 + 3 + 3 + 6 + 2", "x2": "sub add relu abs abs sub n x_0_3 INT+ 5 n", "tree": "((relu(abs(abs((n sub x_0_3)))) add 5) sub n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 + 1 - 1 - 3 + 10 + 2 + 9 - 8 - 3 + 8 - 6 + 152 + 24 + 120 - 26 - 64 - 30 + 28 + 1 4195 + 612 - 11 1096 - 18 - 441 + 0 + 1350 + 2847 7218 + 108 1990 - 7 8423 2232 - 26 - 30 - 29 + 263 9476 + 1197 1195 3788 5933", "x2": "mul add idiv mul INT- 3 sqr x_0_7 sub n x_0_3 INT+ 1 sub mod x_0_11 INT+ 5 n", "tree": "((((-3 mul (x_0_7)**2) idiv (n sub x_0_3)) add 1) mul ((x_0_11 mod 5) sub n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 8 + 4 + 6 - 9 + 10 - 7 - 5 + 12 - 22 + 14 - 5 - 20 + 31 - 39 + 16 + 12 - 54 + 67 - 58 + 1 + 63 - 124 + 122 - 62 - 65 + 184", "x2": "sub sub sub x_0_3 x_0_1 sign mul n sqr sub mod INT- 1 x_0_4 sub n sqr INT- 7 INT+ 2", "tree": "(((x_0_3 sub x_0_1) sub sign((n mul (((-1 mod x_0_4) sub (n sub (-7)**2)))**2))) sub 2)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 8 + 19 + 18 + 29 + 28 + 39 + 38 + 49 + 48 + 59 + 58 + 69 + 68 + 79 + 78 + 89 + 88 + 99 + 98 + 109 + 108 + 119 + 118", "x2": "abs abs sub INT- 1 0 x_0_2", "tree": "abs(abs((-10 sub x_0_2)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 1 - 1 + 0 + 2 + 2 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "relu sub mod add INT- 1 INT+ 5 abs INT+ 4 add x_0_3 INT- 1", "tree": "relu((((-1 add 5) mod abs(4)) sub (x_0_3 add -1)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 8 + 9 + 0 + 8 + 6 - 312 + 0 + 0 + 240 + 342 - 1 6848 + 0 + 0 + 1 800 + 26 2656 - 1814 5296 + 0 + 0 + 64 8000 + 85 2660 1728 - 14 2991 1018 8064 + 0 + 0 + 4860 0 + 1 6576 3788 3416 6784 - 3657 6845 4073 4546 4735 6960 + 0", "x2": "mul add n x_0_6 mul INT+ 3 x_0_5", "tree": "((n add x_0_6) mul (3 mul x_0_5))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 10 + 0 - 4 + 8 + 8 - 9 - 4 + 4 - 7 + 4 - 8 + 225 + 0 + 100 + 36 + 324 + 324 + 1 + 36 + 196 + 9 + 196 + 4 + 5 5225 + 100 + 1 2100 + 2116 + 11 1556 + 11 1556 + 121 + 2116 + 4 2436 + 361", "x2": "sqr add sub n add n INT- 1 0 x_0_12", "tree": "(((n sub (n add -10)) add x_0_12))**2", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "- 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3", "x2": "sub mod n INT- 5 mod n n", "tree": "((n mod -5) sub (n mod n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 7 + 4 + 6 - 8 + 3 - 3 - 5 - 8 - 6 + 6 - 5 + 1 + 3 + 6 + 4 - 8 + 3 - 3 - 5 - 8 - 6 + 6 - 5 + 1 + 3 + 6 + 4", "x2": "mod sub mod INT- 9 mul INT- 2 INT- 4 x_0_2 idiv INT- 9 sign x_0_6", "tree": "(((-9 mod (-2 mul -4)) sub x_0_2) mod (-9 idiv sign(x_0_6)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4", "x2": "idiv n INT+ 5", "tree": "(n idiv 5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 + 3 + 5 + 0 + 10 - 60 + 0 - 51 - 1 + 0 - 51 - 1 + 0 - 51 - 1 + 0 - 51 - 1 + 0 - 51 - 1 + 0 - 51 - 1 + 0 - 51 - 1", "x2": "mod x_0_3 sub x_0_6 add sqr INT+ 8 sub n n", "tree": "(x_0_3 mod (x_0_6 sub ((8)**2 add (n sub n))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 8 + 8 + 6 + 6 - 6 - 9 + 1 + 4 + 5 + 6 + 74 - 80 - 123 - 20 - 114 + 9 - 1 - 4 - 1525 - 2 9526 + 5806 + 5 2748 - 705 + 476 + 14 + 3 9641 + 79 7203 - 4145 4836 - 75 2761 2807 - 2042 2524 + 1 2971 4190 - 10 5612", "x2": "sub mul idiv x_0_9 relu INT+ 6 mul n x_0_7 x_0_10", "tree": "(((x_0_9 idiv relu(6)) mul (n mul x_0_7)) sub x_0_10)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462", "x2": "sub sqr n n", "tree": "((n)**2 sub n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 3 + 33 + 14 + 285 + 86 + 2787 + 788 + 2 7789 + 7790 + 27 7791 + 7 7792 + 277 7793 + 77 7794 + 2777 7795 + 777 7796 + 2 7777 7797 + 7777 7798 + 27 7777 7799 + 7 7777 7800 + 277 7777 7801 + 77 7777 7802 + 2777 7777 7803 + 777 7777 7804", "x2": "abs add n abs relu mul INT+ 1 0 abs sub n relu x_0_2", "tree": "abs((n add abs(relu((10 mul abs((n sub relu(x_0_2))))))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 20 + 100 + 500 + 2500 + 1 2500 + 6 2500 + 31 2500 + 156 2500 + 781 2500 + 3906 2500 + 1 9531 2500 + 9 7656 2500 + 48 8281 2500 + 244 1406 2500 + 1220 7031 2500 + 6103 5156 2500 + 3 517 5781 2500 + 15 2587 8906 2500 + 76 2939 4531 2500 + 381 4697 2656 2500 + 1907 3486 3281 2500 + 9536 7431 6406 2500", "x2": "abs mul INT- 5 x_0_1", "tree": "abs((-5 mul x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 9 - 4 + 3 + 8 - 9 - 4 + 3 + 8 - 9 - 4 + 3 + 8 - 9 - 4 + 3 + 8 - 9 - 4 + 3 + 8 - 9 - 4 + 3 + 8 - 9", "x2": "idiv x_0_4 sign relu sqr sqr n", "tree": "(x_0_4 idiv sign(relu(((n)**2)**2)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4", "x2": "idiv n abs relu abs INT+ 5", "tree": "(n idiv abs(relu(abs(5))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 13 + 18 + 25 + 34 + 45 + 58 + 73 + 90 + 109 + 130 + 153 + 178 + 205 + 234 + 265 + 298 + 333 + 370 + 409 + 450 + 493", "x2": "add mul abs n n INT+ 9", "tree": "((abs(n) mul n) add 9)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 7 - 2 - 2 + 4 + 3 + 5 + 7 + 7 + 9 + 0 + 2 + 4 + 6 + 8 + 10 + 12 + 14 + 16 + 18 + 20 + 0 + 13 + 15 + 17 + 19", "x2": "mod add n mod n sub INT- 1 0 sign x_0_4 n", "tree": "((n add (n mod (-10 sub sign(x_0_4)))) mod n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 4 - 2 + 4 + 5 + 0 - 9 + 53 + 58 + 78 + 104 + 127 + 146 + 163 + 253 + 288 + 340 + 400 + 459 + 516 + 573 + 705 + 784 + 882 + 990 + 1099 + 1208 + 1319 + 1507", "x2": "add add abs sqr n sub INT- 8 add n INT+ 2 x_0_7", "tree": "((abs((n)**2) add (-8 sub (n add 2))) add x_0_7)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 5 - 7 - 5 + 2 - 3 - 7 + 10 - 5 - 8 - 5 - 7 + 5 - 13 - 3 + 43 - 15 - 5 - 8 - 5 + 18 - 60 - 13 + 212 - 32 - 15 - 5 - 8 + 85 - 282 - 60 + 1047", "x2": "mod x_0_9 mul INT+ 5 x_0_8", "tree": "(x_0_9 mod (5 mul x_0_8))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 3 - 4 + 3 + 6 + 2 - 4 + 6 + 5 + 12 + 15 + 11 + 5 + 15 + 14 + 21 + 24 + 20 + 14 + 24 + 23 + 30 + 33 + 29 + 23 + 33 + 32 + 39 + 42", "x2": "add x_0_6 INT+ 9", "tree": "(x_0_6 add 9)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 - 8 - 7 + 6 + 9 + 99 + 120 + 145 + 170 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783 + 840 + 899 + 960", "x2": "sub sqr sub add INT- 3 n INT- 6 idiv idiv n sign x_0_6 n", "tree": "((((-3 add n) sub -6))**2 sub ((n idiv sign(x_0_6)) idiv n))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 5 + 8 + 3 + 2 + 2 + 0 + 2 + 2 + 2 + 0 + 3 + 2 + 2 + 2 + 0 + 3 + 2 + 2 + 2 + 0 + 3 + 2 + 2 + 2", "x2": "mod INT+ 8 sub INT+ 2 sub relu mod add x_0_3 add n n INT+ 5 INT+ 4", "tree": "(8 mod (2 sub (relu(((x_0_3 add (n add n)) mod 5)) sub 4)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 8 - 2 + 2 + 25 + 30 + 0 + 0 + 15 + 15 + 0 + 0 + 65 + 70 + 0 + 0 + 10 + 10 + 0 + 0 + 105 + 110 + 0 + 0 + 5 + 10", "x2": "relu mul idiv n idiv x_0_4 INT+ 8 INT+ 5", "tree": "relu(((n idiv (x_0_4 idiv 8)) mul 5))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 3 + 2 + 1 + 0 + 6 + 5 + 4 + 3 + 2 + 1 + 0 + 6 + 5 + 4 + 3 + 2 + 1 + 0 + 6 + 5", "x2": "mod mod sign n sub INT- 3 n abs INT+ 7", "tree": "((sign(n) mod (-3 sub n)) mod abs(7))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 2 - 1 - 6 - 4 - 42 - 24 - 378 - 240 - 4158 - 2400 - 5 4054 - 2 8800 - 81 810 - 46 800 - 1378 3770 - 737 2800 - 2 6189 1630 - 1 3271 400 - 54 9972 4230 - 29 1962 8800 - 1264 9365 7290 - 642 3183 3600 - 3 1623 4143 2250", "x2": "mul x_0_2 sub n sign mod INT+ 6 add mul x_0_3 mod mod n x_0_1 INT- 3 x_0_2", "tree": "(x_0_2 mul (n sub sign((6 mod ((x_0_3 mul ((n mod x_0_1) mod -3)) add x_0_2)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 5 + 8 + 0 - 1 - 2 - 6 + 2 + 7 - 7 - 6 + 0 - 21 - 15 - 24 + 0 + 3 + 6 + 18 - 6 - 21 + 21 + 18 + 0 + 63 + 45 + 72 + 0 - 9 - 18 - 54 + 18 + 63", "x2": "mul x_0_12 mod INT+ 7 INT- 1 0", "tree": "(x_0_12 mul (7 mod -10))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "+ 324 + 676 + 1156 + 1764 + 2500 + 3364 + 4356 + 5476 + 6724 + 8100 + 9604 + 1 1236 + 1 2996 + 1 4884 + 1 6900 + 1 9044 + 2 1316 + 2 3716 + 2 6244 + 2 8900 + 3 1684", "x2": "sqr sub mul mul INT+ 1 INT+ 8 n INT- 1 0", "tree": "((((1 mul 8) mul n) sub -10))**2", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 10 + 3 - 4 + 5 - 6 + 7 - 8 + 9 - 10 + 11 - 12 + 13 - 14 + 15 - 16 + 17 - 18 + 19 - 20 + 21 - 22 + 23", "x2": "idiv n sign x_0_2", "tree": "(n idiv sign(x_0_2))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 2 + 9 + 1 - 134 - 15 - 39 - 54 - 71 - 90 - 111 - 134 - 159 - 186 - 215 - 246 - 279 - 314 - 351 - 390 - 431 - 474 - 519", "x2": "sub INT+ 1 0 sqr sub sub n sqr relu sub x_0_2 n idiv INT+ 6 abs n", "tree": "(10 sub (((n sub (relu((x_0_2 sub n)))**2) sub (6 idiv abs(n))))**2)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 2 + 7 + 1 + 3 - 4 - 1 - 11 - 1 - 20 - 1 - 31 - 1 - 44 - 1 - 59 - 1 - 76 - 1 - 95 - 1 - 116 - 1 - 139", "x2": "idiv sub n x_0_2 sub x_0_1 relu idiv add sub abs mul n x_0_1 n INT+ 2 x_0_1", "tree": "((n sub x_0_2) idiv (x_0_1 sub relu((((abs((n mul x_0_1)) sub n) add 2) idiv x_0_1))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882", "x2": "mul mul idiv mul relu INT+ 4 INT+ 3 INT+ 5 sign abs relu INT+ 3 sqr n", "tree": "((((relu(4) mul 3) idiv 5) mul sign(abs(relu(3)))) mul (n)**2)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 3 + 5 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "mul sign x_0_2 sign INT- 8", "tree": "(sign(x_0_2) mul sign(-8))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 4 - 4 + 0 + 1 - 2 - 10 - 12 - 6 + 2 + 0 - 15 - 26 - 19 + 3 + 11 - 12 - 46 - 48 - 4 + 37 + 15 - 64 - 108 - 43 + 76 + 97", "x2": "sub x_0_5 add x_0_3 n", "tree": "(x_0_5 sub (x_0_3 add n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 6 + 2 + 8 + 9 + 0 + 0 + 4 + 0 + 0 + 0 + 0 + 2 + 2 + 2 + 2 + 2 + 1 + 2 + 1 + 2 + 1 + 4 + 0 + 8 + 0", "x2": "relu idiv INT+ 8 add x_0_5 sqr x_0_1", "tree": "relu((8 idiv (x_0_5 add (x_0_1)**2)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 8 + 12 + 18 + 26 + 36 + 50 + 66 + 84 + 104 + 126 + 150 + 176 + 204 + 234 + 266 + 300 + 336 + 374 + 414 + 456", "x2": "sub sqr n idiv sub relu INT- 6 abs sub n INT+ 6 sign n", "tree": "((n)**2 sub ((relu(-6) sub abs((n sub 6))) idiv sign(n)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 3 + 4 + 5 + 0", "x2": "mod add mod INT- 2 INT- 9 mod sub n INT+ 9 INT- 8 INT+ 6", "tree": "(((-2 mod -9) add ((n sub 9) mod -8)) mod 6)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 4 + 3 + 2 + 1 - 1 - 3 - 5 - 7 - 9 - 11 - 13 - 16 - 19 - 22 - 25 - 28 - 31 - 35 - 38 - 41 - 45", "x2": "add add idiv n sub INT- 5 idiv n INT+ 1 0 n sub x_0_1 n", "tree": "(((n idiv (-5 sub (n idiv 10))) add n) add (x_0_1 sub n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 3 - 3 + 7 + 8 - 1 - 1 + 9 + 10 + 1 + 1 + 11 + 12 + 3 + 3 + 13 + 14 + 5 + 5 + 15 + 16 + 7 + 7", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 4 - 5 - 4 + 10 - 9 - 7 - 3 - 80 + 649 + 620 - 80 + 1 1440 - 80 - 80 + 1 7920 + 292 8560 - 80 + 2 5840 + 646 9040 - 80 + 3 5200 + 1250 6480 + 34 2212 2080 + 4 6000 + 2199 9920 + 84 5438 400 - 80 + 3606 3920", "x2": "mod mul INT- 1 0 INT+ 8 mul mul n mul sign sign x_0_7 mul x_0_4 n INT+ 1", "tree": "((-10 mul 8) mod ((n mul (sign(sign(x_0_7)) mul (x_0_4 mul n))) mul 1))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 4 + 9 + 7 + 1 + 1 - 8 - 6 + 6 + 0 - 29 + 82 + 179 + 206 + 235 + 131 + 52 + 172 + 191 - 340 + 1321 + 5102 + 9657 + 1 5086 + 1 8255 + 1 9581 + 2 4080 + 2 9265 + 1 9774 + 5 8113 + 21 1204", "x2": "add mod sign n n add n add mul n x_0_9 x_0_1", "tree": "((sign(n) mod n) add (n add ((n mul x_0_9) add x_0_1)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 5 - 9 + 3 - 7 - 5 + 2 + 10 + 5 + 16 + 6 + 9 + 2 - 4 - 15 - 5 - 8 - 1 + 5 + 16 + 25 + 29 + 23 + 18 + 8 - 24 - 28 - 22", "x2": "mul sub x_0_5 mod sign x_0_7 n INT- 1", "tree": "((x_0_5 sub (sign(x_0_7) mod n)) mul -1)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 8 - 7 + 90 + 45 + 54 + 171 + 99 + 90 + 189 + 108 + 99 + 153 + 90 + 81 + 108 + 63 + 54 + 63 + 45 + 36 + 36 + 27 + 27", "x2": "mul INT+ 9 idiv add add sqr relu INT+ 6 mod INT+ 7 idiv x_0_2 abs INT- 5 x_0_3 n", "tree": "(9 mul ((((relu(6))**2 add (7 mod (x_0_2 idiv abs(-5)))) add x_0_3) idiv n))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 6 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "mul relu n mul n abs sign sub x_0_2 INT- 3", "tree": "(relu(n) mul (n mul abs(sign((x_0_2 sub -3)))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 4 + 6 - 4 + 1 + 2 + 6 - 7 - 6 + 7 - 4 - 5 + 11 + 18 + 21 + 12 + 18 + 20 + 25 + 13 + 15 + 29 + 19 + 19 + 36 + 44 + 48 + 40 + 47 + 50 + 56 + 45 + 48", "x2": "add x_0_12 n", "tree": "(x_0_12 add n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 7 + 5 + 2 - 63 + 45 + 18 - 567 + 405 + 162 - 5103 + 3645 + 1458 - 4 5927 + 3 2805 + 1 3122 - 41 3343 + 29 5245 + 11 8098 - 372 87 + 265 7205 + 106 2882 - 3348 783 + 2391 4845 + 956 5938", "x2": "mul x_0_3 add INT- 1 INT+ 1 0", "tree": "(x_0_3 mul (-1 add 10))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882", "x2": "mul mul n INT+ 2 n", "tree": "((n mul 2) mul n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 - 12 - 15 - 19 - 24 - 30 - 37 - 45 - 54 - 64 - 75 - 87 - 100 - 114 - 129 - 145 - 162 - 180 - 199 - 219 - 240 - 262", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 4 - 2 - 4 + 6 - 2 - 4 - 10 - 1 - 7 + 5096 + 7056 + 2744 + 4508 + 5684 + 100 4696 + 138 8856 + 81 4380 + 133 6230 + 168 798 + 2 9689 1196 + 4 1041 1064 + 2 4024 7980 + 3 9419 1084 + 4 9584 408 + 875 8140 7536 + 1210 6919 2356 + 708 7235 304 + 1162 8504 7368 + 1462 7125 2204 + 25 8362 1984 5436", "x2": "mul mul add x_0_10 add add n x_0_5 n abs sub sign sign x_0_7 INT- 5 sqr INT- 7", "tree": "(((x_0_10 add ((n add x_0_5) add n)) mul abs((sign(sign(x_0_7)) sub -5))) mul (-7)**2)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 0 - 4 - 8 - 1 - 4 - 1 - 9 + 5 - 8 - 44 - 12 - 169 - 42 - 135 - 768 - 221 - 3204 - 703 - 2860 - 1 7052 - 5126 - 7 7579 - 1 7880 - 7 4875 - 46 3320 - 14 4369 - 226 1924 - 53 8907 - 233 2050 - 1489 1532", "x2": "mul n add x_0_5 x_0_10", "tree": "(n mul (x_0_5 add x_0_10))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 7 + 14 - 28 + 56 - 112 + 224 - 448 + 896 - 1792 + 3584 - 7168 + 1 4336 - 2 8672 + 5 7344 - 11 4688 + 22 9376 - 45 8752 + 91 7504 - 183 5008 + 367 16 - 734 32 + 1468 64", "x2": "mul INT- 2 x_0_1", "tree": "(-2 mul x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 - 2 + 10 + 4 - 2 + 2 - 1 - 9 + 1 + 1 + 4 + 100 + 16 + 4 + 4 + 1 + 81 + 1 + 1 + 16 + 1 0 + 256 + 16 + 16 + 1 + 6561 + 1 + 1 + 256 + 1 0 0", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 7 - 1 + 9 + 9 + 27 + 7 + 129 - 3 + 1069 + 119 + 1 1645 + 1273 + 15 1205 + 1 7615 + 226 7839 + 28 1573 + 3855 2963 + 506 7979 + 7 3250 5925 + 1 135 9169 + 153 8262 3973 + 22 2990 1223 + 3538 35 839 + 535 1762 8765", "x2": "sub add mul abs sub n x_0_2 n INT- 2 idiv INT+ 9 sign x_0_3", "tree": "(((abs((n sub x_0_2)) mul n) add -2) sub (9 idiv sign(x_0_3)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 10 - 6 - 3 + 1 + 6 + 14 + 23 + 33 + 44 + 56 + 69 + 83 + 98 + 114 + 131 + 149 + 168 + 188 + 209 + 231 + 254 + 278", "x2": "add n add add idiv mod x_0_2 x_0_2 n x_0_1 sign mul x_0_2 mul n add n sqr n", "tree": "(n add ((((x_0_2 mod x_0_2) idiv n) add x_0_1) add sign((x_0_2 mul (n mul (n add (n)**2))))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 10 + 7 - 5 - 10 + 0 + 7 + 0 + 0 + 0 + 7 + 0 + 0 + 0 + 7 + 0 + 0 + 0 + 7 + 0 + 0 + 0 + 7 + 0 + 0 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 + 10 + 10 + 8 + 10 + 11 + 11 + 10 + 8 + 16 + 12 + 20 + 14 + 22 + 14 + 22 + 12 + 20 + 8 + 16 + 24 + 9", "x2": "add INT+ 8 mod x_0_1 relu add sign idiv n INT+ 2 n", "tree": "(8 add (x_0_1 mod relu((sign((n idiv 2)) add n))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 99 + 5 5488 + 76 7637 + 524 3616 + 2469 1335 + 9124 704 + 2 8340 5113 + 7 7177 3472 + 18 9506 3211 + 42 7956 7680 + 90 1829 7309 + 179 2974 2688 + 339 2017 9407 + 614 7778 9056 + 1073 3158 8225 + 1813 1323 7664 + 2974 6524 6963 + 4754 4489 6192 + 7422 7936 4901 + 1 1345 3409 720", "x2": "mul add n INT+ 9 sqr mod sub INT- 7 INT+ 6 relu sqr relu sqr relu n", "tree": "((n add 9) mul (((-7 sub 6) mod relu((relu((relu(n))**2))**2)))**2)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul sqr n sign relu sign abs sub sqr n INT- 4", "tree": "((n)**2 mul sign(relu(sign(abs(((n)**2 sub -4))))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 4 + 4 + 4 + 3 - 5 + 9 - 3 + 2 - 3 - 5 - 4 - 3 + 5 - 10 - 65 + 8 + 14 + 10 - 5 + 5 + 13 - 2 - 76 - 4200 - 38 - 169 - 72 + 4 + 5 - 138", "x2": "sub n sub sqr x_0_9 sign INT+ 3", "tree": "(n sub ((x_0_9)**2 sub sign(3)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 8 + 3 + 7 - 17 - 25 - 36 - 50 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401 - 442 - 485 - 530 - 577", "x2": "sub idiv INT+ 1 x_0_3 sqr n", "tree": "((1 idiv x_0_3) sub (n)**2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 2 + 2 - 4 + 8 + 8 - 1 + 3 + 7 + 1 + 13 + 13 + 4 + 8 + 12 + 6 + 18 + 18 + 9 + 13 + 17 + 11 + 23 + 23 + 14 + 18 + 22 + 16", "x2": "sub x_0_6 sub sub n relu relu relu n INT+ 5", "tree": "(x_0_6 sub ((n sub relu(relu(relu(n)))) sub 5))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 5 - 3 + 9 - 96 + 3264 - 13 280 + 416 9216 - 1 6676 8280 + 80 487 7920 - 4482 7316 2904 + 21 5171 1181 9968 - 1204 9582 6191 7480 + 7 7117 3287 6271 9616 - 555 2447 6709 1581 1272 + 3 5535 6650 9386 1192 2432 - 255 8567 8867 5800 5841 3880 + 2 468 5430 9406 4046 7311 1840 - 180 1231 7922 7763 6112 3384 248 + 1 4409 8543 3822 1088 8987 722 1440 - 126 8067 1817 6345 5823 862 3548 4872 + 1 2173 4449 4492 9175 9016 2786 654 9824 - 126 6038 2742 7263 4293 7692 9750 8117 9304 + 1 2153 9674 3301 7289 2201 8525 6077 9321 5488 - 126 4012 6130 3379 8078 8992 6663 2104 9440 8152", "x2": "mul sub n x_0_1 mul add abs sub mul sub n n x_0_4 relu mod n INT+ 4 n INT+ 4", "tree": "((n sub x_0_1) mul ((abs((((n sub n) mul x_0_4) sub relu((n mod 4)))) add n) mul 4))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 6 + 1 + 14 + 5 + 7 + 21 + 13 + 16 + 31 + 24 + 28 + 44 + 38 + 43 + 60 + 55 + 61 + 79 + 75 + 82 + 101 + 98 + 106", "x2": "add relu x_0_3 n", "tree": "(relu(x_0_3) add n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 + 9 - 8 + 10 - 7 + 11 - 6 + 12 - 5 + 13 - 4 + 14 - 3 + 15 - 2 + 16 - 1 + 17 + 0 + 18 + 1 + 19", "x2": "add sign INT+ 8 x_0_2", "tree": "(sign(8) add x_0_2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 - 5 + 9 + 7 + 21 + 33 + 47 + 63 + 81 + 101 + 123 + 147 + 173 + 201 + 231 + 263 + 297 + 333 + 371 + 411 + 453 + 497 + 543 + 591 + 641", "x2": "add sub sqr n n sub INT- 9 relu sub mul x_0_5 INT- 4 sqr x_0_5", "tree": "(((n)**2 sub n) add (-9 sub relu(((x_0_5 mul -4) sub (x_0_5)**2))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 8 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr add n sign mod INT- 8 sqr x_0_1", "tree": "((n add sign((-8 mod (x_0_1)**2))))**2", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 8 + 7 + 2 + 0 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5", "x2": "idiv sub n add idiv sub abs INT+ 9 x_0_3 n mul x_0_1 INT+ 3 INT- 8", "tree": "((n sub (((abs(9) sub x_0_3) idiv n) add (x_0_1 mul 3))) idiv -8)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 3 - 1 + 12 - 15 - 6 + 84 - 120 - 54 + 840 - 1320 - 648 + 1 920 - 1 8480 - 9720 + 17 4720 - 31 4160 - 17 4960 + 331 9680 - 628 3200 - 367 4160 + 7303 2960 - 1 4451 3600 - 8817 9840", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 3 + 4 + 4 - 7 - 3 + 4 + 4 - 7 - 3 + 4 + 4 - 7 - 3 + 4 + 4 - 7 - 3 + 4 + 4 - 7 - 3 + 4 + 4 - 7 - 3", "x2": "mul x_0_4 sign n", "tree": "(x_0_4 mul sign(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462", "x2": "add n sqr n", "tree": "(n add (n)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 - 1 + 1 + 30 - 131 + 7 + 1 + 22 - 6 + 11 - 3 + 21 - 2 + 42 - 21 + 112 - 89 + 126 - 101 + 140 - 113 + 154 - 125 + 168", "x2": "add idiv sub INT+ 6 INT- 5 n mul mod n sub INT+ 6 x_0_1 mod sign x_0_3 INT+ 8", "tree": "(((6 sub -5) idiv n) add ((n mod (6 sub x_0_1)) mul (sign(x_0_3) mod 8)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 10 - 8 + 9 - 9 + 8 - 10 + 7 - 11 + 6 - 12 + 5 - 13 + 4 - 14 + 3 - 15 + 2 - 16 + 1 - 17 + 0 - 18 - 1", "x2": "sub x_0_2 sign relu mod relu n idiv abs INT+ 7 mod mod x_0_3 INT- 4 x_0_3", "tree": "(x_0_2 sub sign(relu((relu(n) mod (abs(7) idiv ((x_0_3 mod -4) mod x_0_3))))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 4 - 7 + 8 + 4 - 10 - 10 + 3 + 4 + 18 + 2 + 7 + 22 + 23 + 11 + 11 - 2 + 15 + 11 - 1 - 3 + 10 + 11 + 25 + 9 + 14 + 27 + 30", "x2": "add sub n x_0_7 sign mod n INT- 1 0", "tree": "((n sub x_0_7) add sign((n mod -10)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 2 + 6 - 5 + 2 + 9 - 3 + 8 + 19 + 55 - 4 + 51 + 35 + 33 + 298 + 2828 + 92 + 2397 + 1141 + 996 + 8 7650 + 798 6574 + 1 929 + 573 6117 + 129 9719 + 98 9177 + 76 8217 2901 + 63 7853 3239 8834", "x2": "add sqr add mod INT- 2 mul INT- 4 INT+ 7 x_0_6 sub x_0_7 mod n idiv n sub sub n INT+ 2 n", "tree": "((((-2 mod (-4 mul 7)) add x_0_6))**2 add (x_0_7 sub (n mod (n idiv ((n sub 2) sub n)))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 3 - 3 + 4 - 10 - 6 - 6 + 24 + 27 - 30 + 44 - 120 - 78 - 84 + 360 + 432 - 510 + 792 - 2280 - 1560 - 1764 + 7920 + 9936 - 1 2240 + 1 9800 - 5 9280 - 4 2120 - 4 9392", "x2": "mul n x_0_7", "tree": "(n mul x_0_7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 4 + 7 + 5 + 3 + 8 + 0 + 7 + 5 + 3 + 8 + 0 + 7 + 5 + 3 + 8 + 0 + 7 + 5 + 3 + 8 + 0 + 7 + 5 + 3 + 8", "x2": "sub abs relu x_0_5 relu INT- 2", "tree": "(abs(relu(x_0_5)) sub relu(-2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 + 1 - 8 - 8 + 10 - 1 - 69 - 6 - 88 - 89 - 90 - 14 - 4911 - 61 - 7934 - 8114 - 8296 - 241 - 2412 7761 - 3862 - 6296 4244 - 6585 3245 - 6884 230 - 5 8586 - 582 1488 9912 8667 - 1492 2793 - 3964 4961 4842 50", "x2": "sub mod sub INT+ 1 0 INT+ 2 sub INT+ 6 mod mul INT- 2 n n add n sqr sub sign INT+ 5 x_0_6", "tree": "(((10 sub 2) mod (6 sub ((-2 mul n) mod n))) sub (n add ((sign(5) sub x_0_6))**2))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 3 + 10 + 0 + 8 + 3 - 2 + 0 + 144 + 6400 + 0 + 1 + 144 + 441 + 1296 + 45 5625 + 14 7041 5716 + 3969 + 4096 + 147 6225 + 1866 2400 + 2 42 649 + 29 8923 7528 1664 + 3 6539 8677 3853 36 4481 + 30 7359 3600 + 37 5830 3025 + 557 8787 173 5936 + 10 654 3181 3485 8609 + 1301 4572 2719 1511 400", "x2": "sqr mul mod INT- 1 0 n sub abs x_0_7 mod INT+ 9 n", "tree": "(((-10 mod n) mul (abs(x_0_7) sub (9 mod n))))**2", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 7 - 9 - 1437 - 3830 - 143 3981 - 551 850 - 28 1059 6837 - 141 776 8262 - 9 1063 3374 2085 - 56 4310 7303 5906 - 4 4074 6553 1167 6765 - 32 5042 9806 8680 1142 - 2 9794 4669 9069 3491 957 - 25 4833 6968 5845 2092 9570 - 2 6815 202 9162 4141 9858 5781 - 26 949 7055 8305 4943 1876 5830 - 3 998 1634 5711 7508 1356 5159 3397 - 33 8190 8184 3563 9206 3712 511 7602 - 4 4761 3480 3207 7681 7478 8090 860 9005 - 54 1105 3094 9702 2730 1939 2818 8158 3606 - 7 8959 179 2858 5030 6032 6190 9118 6279 4845 - 104 7579 8791 8623 6005 6554 4497 2274 5855 3602 - 16 7077 2819 3688 5924 7565 219 9695 167 3885 6197", "x2": "add mul n add mul mul mul add INT+ 3 x_0_2 INT- 5 n INT- 8 n INT- 6", "tree": "((n mul (((((3 add x_0_2) mul -5) mul n) mul -8) add n)) add -6)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 5 - 6 - 5 + 6 + 5 - 6 - 5 + 6 + 5 - 6 - 5 + 6 + 5 - 6 - 5 + 6 + 5 - 6 - 5 + 6 + 5 - 6", "x2": "sub idiv mod mod mod INT+ 2 sign relu n relu INT+ 9 add x_0_2 sqr INT- 9 n x_0_2", "tree": "(((((2 mod sign(relu(n))) mod relu(9)) mod (x_0_2 add (-9)**2)) idiv n) sub x_0_2)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 0 - 9 + 1 + 8 + 0 + 1015 + 1 + 8 + 0 + 1015 + 1 + 8 + 0 + 1015 + 1 + 8 + 0 + 1015 + 1 + 8 + 0 + 1015 + 1", "x2": "mod x_0_4 sqr mul INT- 8 sqr sub INT- 2 mod sub n mod n INT+ 2 n", "tree": "(x_0_4 mod ((-8 mul ((-2 sub ((n sub (n mod 2)) mod n)))**2))**2)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1", "x2": "relu mod n INT+ 5", "tree": "relu((n mod 5))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 - 4 + 10 - 8 - 7 - 6 - 5 + 10 - 88 + 53 + 15 - 187 - 176 - 161 + 68 - 1255 - 602 + 1217 - 3275 - 7267 - 7084 - 2053 - 2 7308 - 4 4575 + 1 5368 - 5 3515 - 28 4641 - 40 1835 - 26 4980", "x2": "sub INT- 6 sub sub sign sqr n add sqr sub n n mul n x_0_7 mul x_0_8 n", "tree": "(-6 sub ((sign((n)**2) sub (((n sub n))**2 add (n mul x_0_7))) sub (x_0_8 mul n)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 5 + 9 - 10 - 8 + 6 + 32 + 32 + 94 + 352 + 384 + 1168 + 4616 + 5416 + 1 7560 + 7 3896 + 9 2112 + 31 6120 + 140 4064 + 184 2280 + 663 8560 + 3088 9448 + 4237 2480 + 1 5932 5480 + 7 7223 6240 + 11 168 4520 + 43 178 8000", "x2": "add relu mul n x_0_3 abs mul add INT+ 4 relu sign add x_0_6 INT- 5 INT- 8", "tree": "(relu((n mul x_0_3)) add abs(((4 add relu(sign((x_0_6 add -5)))) mul -8)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 32 + 114 + 480 + 2430 + 1 4616 + 10 2354 + 81 8880 + 736 9974 + 7369 9800 + 8 1069 7866 + 97 2837 4464 + 1264 6886 8110 + 1 7705 6415 3624 + 26 5584 6230 4450 + 424 9353 9687 1296 + 7223 9017 4681 2134 + 13 30 2314 4261 8520 + 247 574 3974 975 1994 + 4941 1487 9481 9504 0 + 10 3764 1246 9120 9584 126 + 228 2810 7432 661 848 2904", "x2": "mul add x_0_1 INT+ 6 abs n", "tree": "((x_0_1 add 6) mul abs(n))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 10 + 19 + 32 + 54 + 78 + 113 + 152 + 204 + 262 + 335 + 416 + 514 + 622 + 749 + 888 + 1048 + 1222 + 1419 + 1632 + 1870 + 2126 + 2409", "x2": "add abs add abs add x_0_2 mod INT+ 2 sqr mul INT- 5 INT+ 4 INT+ 8 sqr n", "tree": "(abs((abs((x_0_2 add (2 mod ((-5 mul 4))**2))) add 8)) add (n)**2)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 5 + 5 - 8 + 6 + 3 - 10 + 4 + 2 + 5 + 7 + 1 + 5 + 5 + 8 + 6 + 3 + 10 + 4 + 2 + 5 + 7 + 1 + 5 + 5 + 8 + 6 + 3 + 10 + 4 + 2 + 5", "x2": "abs x_0_11", "tree": "abs(x_0_11)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 8 - 5 + 0 - 32 - 25 + 0 - 224 - 200 + 0 - 2240 - 2200 + 0 - 2 9120 - 3 800 + 0 - 46 5920 - 52 3600 + 0 - 885 2480 - 1047 2000 + 0 - 1 9475 4560 - 2 4085 6000 + 0", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 - 5 + 5 - 5 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3", "x2": "idiv abs add add mul mul sqr relu INT- 7 idiv INT- 1 n abs x_0_4 INT- 5 n INT+ 6", "tree": "(abs((((((relu(-7))**2 mul (-1 idiv n)) mul abs(x_0_4)) add -5) add n)) idiv 6)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 10 + 10 - 9 - 2 + 7 - 10 + 4 + 0 - 3 - 4 - 2 - 2 + 0 - 3 - 3 + 0 - 3 - 4 - 2 - 2 + 0 - 3 - 3 + 0 - 3 - 4 - 2 - 2 + 0", "x2": "mod x_0_8 INT- 7", "tree": "(x_0_8 mod -7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 10 - 9 + 5 + 7 + 4 + 10 + 9 + 5 + 7 + 4 + 10 + 9 + 5 + 7 + 4 + 10 + 9 + 5 + 7 + 4 + 10 + 9 + 5 + 7 + 4 + 10", "x2": "abs mul x_0_5 INT- 1", "tree": "abs((x_0_5 mul -1))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 4 + 18 + 48 + 100 + 180 + 294 + 448 + 648 + 900 + 1210 + 1584 + 2028 + 2548 + 3150 + 3840 + 4624 + 5508 + 6498 + 7600 + 8820", "x2": "abs mul add INT+ 7 sub n INT+ 8 sqr n", "tree": "abs(((7 add (n sub 8)) mul (n)**2))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign idiv abs mod n INT+ 6 INT- 3", "tree": "sign((abs((n mod 6)) idiv -3))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 + 65 - 1687 + 4 8927 - 146 7805 + 4256 6351 - 11 672 5119 + 232 4122 7507 - 3253 7718 5089 + 1 6268 8592 5455 + 9 7613 1555 2741 + 185 4649 9550 2091 + 6305 8098 4707 1107 + 32 1596 3022 62 6471 + 2251 1741 1540 4385 2985 + 20 4856 8445 179 9062 1651 + 2335 3680 2732 509 3086 8231 + 32 4616 1557 9755 793 9068 4127 + 5388 6281 8623 9343 1788 5356 5101 + 105 782 4963 1667 1919 8764 4519 4715 + 2 3747 6844 1675 6785 3892 766 1400 5611 + 615 650 2639 4000 7415 8047 8430 2745 3271", "x2": "add n mul x_0_1 add mul mul relu INT+ 1 n add n INT- 1 0 INT- 5", "tree": "(n add (x_0_1 mul (((relu(1) mul n) mul (n add -10)) add -5)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 28 + 88 + 268 + 808 + 2428 + 7288 + 2 1868 + 6 5608 + 19 6828 + 59 488 + 177 1468 + 531 4408 + 1594 3228 + 4782 9688 + 1 4348 9068 + 4 3046 7208 + 12 9140 1628 + 38 7420 4888 + 116 2261 4668 + 348 6784 4008 + 1046 353 2028", "x2": "add add add mod INT+ 5 sqr add n sign n x_0_1 x_0_1 sub x_0_1 INT+ 1", "tree": "((((5 mod ((n add sign(n)))**2) add x_0_1) add x_0_1) add (x_0_1 sub 1))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 8 + 20 + 40 + 108 + 248 + 764 + 1992 + 6884 + 1 9928 + 7 5732 + 23 9144 + 98 4524 + 334 8024 + 1476 7868 + 5356 8392 + 2 5105 3764 + 9 6423 1064 + 47 7002 1524 + 192 8462 1288 + 1001 7045 2012 + 4242 6166 8344 + 2 3039 2039 6284", "x2": "add INT+ 8 mul n x_0_2", "tree": "(8 add (n mul x_0_2))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 4 + 6 - 5 - 7 + 3 + 17 + 9 - 14 - 19 + 13 + 41 + 15 - 44 - 45 + 40 + 101 + 18 - 127 - 105 + 124 + 248 - 2 - 355", "x2": "sub sub n add x_0_2 x_0_3 add INT+ 1 idiv n abs INT- 4", "tree": "((n sub (x_0_2 add x_0_3)) sub (1 add (n idiv abs(-4))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 1 - 10 - 20 - 40 + 18 + 26 + 8 + 27 + 134 + 227 + 156 + 763 + 1430 + 1359 + 7088 + 1 2923 + 1 4418 + 7 7998 + 15 5204 + 18 9327 + 109 2890 + 232 8083 + 303 2856", "x2": "add mul add mul abs INT+ 8 INT- 1 n add sqr abs mod x_0_3 n x_0_3 n", "tree": "((((abs(8) mul -1) add n) mul ((abs((x_0_3 mod n)))**2 add x_0_3)) add n)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 - 2 + 10 + 7 - 1 + 2 + 2 + 142 + 308 + 308 + 532 + 787 + 935 + 1273 + 1426 + 1777 + 2090 + 2403 + 2507 + 2831 + 3022 + 3166 + 3823 + 4555 + 5293 + 5743", "x2": "add x_0_1 mod idiv x_0_5 INT- 3 sqr add mod mod sqr x_0_2 INT+ 9 mul INT+ 7 abs INT+ 3 n", "tree": "(x_0_1 add ((x_0_5 idiv -3) mod (((((x_0_2)**2 mod 9) mod (7 mul abs(3))) add n))**2))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 3 + 4 - 2 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5", "x2": "mod x_0_3 add n sign INT+ 6", "tree": "(x_0_3 mod (n add sign(6)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 + 9 + 0 + 4 - 1 + 6 + 1 - 9 + 9 - 4 + 12 - 6 + 12 + 9 - 9 + 20 - 12 + 24 - 12 + 11 + 9 - 20 + 35 - 24 + 37 - 11 + 18", "x2": "sub mul n abs sqr idiv n add mul x_0_1 n n x_0_6", "tree": "((n mul abs(((n idiv ((x_0_1 mul n) add n)))**2)) sub x_0_6)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 1 - 21 - 6 - 24 - 7 - 23 - 4 - 18 + 3 - 9 + 14 + 4 + 29 + 21 + 48 + 42 + 71 + 67 + 98 + 96 + 129 + 129", "x2": "mul sub INT+ 6 sub mul n add n INT- 1 0 x_0_1 INT- 1", "tree": "((6 sub ((n mul (n add -10)) sub x_0_1)) mul -1)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 18 + 72 + 162 + 288 + 450 + 648 + 882 + 1152 + 1458 + 1800 + 2178 + 2592 + 3042 + 3528 + 4050 + 4608 + 5202 + 5832 + 6498 + 7200 + 7938", "x2": "mul abs mul n add abs n n sqr INT- 3", "tree": "(abs((n mul (abs(n) add n))) mul (-3)**2)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 0 + 0 + 4 + 0 + 4 + 0 + 0 + 4 + 1 + 0 + 1 + 4 + 9 + 0 + 8 + 0 + 11 + 4 + 18", "x2": "mod idiv mul sqr INT+ 3 sqr INT- 4 sign n relu n", "tree": "((((3)**2 mul (-4)**2) idiv sign(n)) mod relu(n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 7 + 7 + 93 - 100 - 1841 + 2422 + 5 1569 - 7 7480 - 185 6453 + 309 9234 + 8168 3965 - 1 4876 3196 - 42 4756 6137 + 83 3073 9022 + 2548 5396 8265 - 5331 6729 7360 - 17 3300 6984 1965 + 38 3880 4540 9978 + 1317 853 798 9397 - 3071 436 3279 8180 - 11 635 1658 7110 9281 + 27 251 8396 8623 9910 + 1017 8435 2601 4205 3921", "x2": "sub mul INT- 4 sub add idiv sign x_0_1 INT+ 6 mul n x_0_2 n n", "tree": "((-4 mul (((sign(x_0_1) idiv 6) add (n mul x_0_2)) sub n)) sub n)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 + 2 + 0 + 10 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1", "x2": "idiv x_0_5 sub sqr add relu INT- 5 abs add relu INT+ 8 x_0_1 add INT- 7 abs INT- 8", "tree": "(x_0_5 idiv (((relu(-5) add abs((relu(8) add x_0_1))))**2 sub (-7 add abs(-8))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 5 - 22 - 200 - 3202 - 8 52 - 288 1874 - 1 4121 1828 - 90 3755 6994 - 7320 4211 6516 - 73 2042 1165 1602 - 8857 7096 984 3844 - 127 5510 1838 1751 3538 - 2 1556 1221 651 5978 7924 - 422 4999 9328 7713 1843 3106 - 9 5062 4984 8973 5466 4744 8852 - 2433 5999 6133 7227 9417 4690 6114 - 70 3310 3888 2645 8875 1648 5586 6948 - 2 2787 2565 9797 7267 5553 4133 89 1154 - 822 6199 6318 6979 3587 4782 2016 2170 6596 - 32 9047 9852 7479 1743 4991 2880 6486 8263 8402 - 1 4511 161 5061 8315 8883 1158 366 690 4353 5284 - 702 3331 8168 9926 4889 9428 489 7177 4170 7107 7458", "x2": "add mul mul x_0_1 abs n n sub sub idiv sign n INT- 4 sqr sub n n INT+ 1", "tree": "(((x_0_1 mul abs(n)) mul n) add (((sign(n) idiv -4) sub ((n sub n))**2) sub 1))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 10 - 2 + 1 + 6 + 6 + 7 + 2 - 18 - 30 - 11 - 36 - 26 - 14 - 30 - 48 - 17 - 54 - 57 - 20 - 42 - 66 - 23 - 72 - 75 - 26 - 81 - 84 - 29", "x2": "mul add INT- 3 mod mod n x_0_8 mod relu INT+ 3 n relu n", "tree": "((-3 add ((n mod x_0_8) mod (relu(3) mod n))) mul relu(n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 3 + 0 + 6 + 9 + 0 + 15 + 18 + 63 + 96 + 513 + 900 + 5577 + 1 728 + 7 2423 + 15 108 + 108 6255 + 240 1632 + 1846 6233 + 4322 9268 + 3 5085 8313 + 8 6458 5240 + 73 6802 4447 + 190 2087 5148", "x2": "mul mod mul INT+ 5 INT- 3 abs add INT+ 9 x_0_2 sub n relu sign mul n INT+ 7", "tree": "(((5 mul -3) mod abs((9 add x_0_2))) mul (n sub relu(sign((n mul 7)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 1 - 4 - 3 - 6 - 5 - 8 - 7 - 10 - 9 - 12 - 11 - 14 - 13 - 16 - 15 - 18 - 17 - 20 - 19 - 22 - 21 - 24", "x2": "mul idiv abs sqr n x_0_1 idiv n n", "tree": "((abs((n)**2) idiv x_0_1) mul (n idiv n))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 10 + 10 - 36 + 26 - 169 + 129 - 1061 + 908 - 8497 + 8062 - 8 3091 + 8 5985 - 96 172 + 107 26 - 1280 2303 + 1521 8138 - 1 9345 7032 + 2 4349 199 - 32 6727 4328 + 43 2871 4640 - 609 8912 799 + 846 5041 9617 - 1 2468 8869 1900", "x2": "idiv mul sub abs INT- 4 INT- 4 sub mul relu n x_0_2 INT+ 1 0 INT+ 9", "tree": "(((abs(-4) sub -4) mul ((relu(n) mul x_0_2) sub 10)) idiv 9)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 10 - 8 - 6 + 2 + 6 + 1 + 4 + 11 + 9 + 7 - 1 - 5 + 0 - 3 - 12 - 10 - 6 + 0 + 4 - 1 + 2 + 13 + 11 + 5 + 1 - 3 + 2 - 1", "x2": "sub sign x_0_4 x_0_7", "tree": "(sign(x_0_4) sub x_0_7)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 6 + 6 - 4 + 9 - 8 - 60 + 98 - 48 + 180 - 140 - 1298 + 2376 - 1222 + 5068 - 4170 - 4 1504 + 8 818 - 4 3956 + 19 2622 - 16 6760 - 174 3126 + 355 6036 - 202 1930 + 924 5904 - 833 7950 - 9064 2500", "x2": "mul add add mul x_0_5 INT+ 2 INT+ 2 idiv INT+ 1 n n", "tree": "((((x_0_5 mul 2) add 2) add (1 idiv n)) mul n)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261", "x2": "mul idiv sqr n sign INT+ 2 n", "tree": "(((n)**2 idiv sign(2)) mul n)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 12 + 18 + 26 + 36 + 48 + 62 + 78 + 96 + 116 + 138 + 162 + 188 + 216 + 246 + 278 + 312 + 312 + 314 + 318 + 324 + 332", "x2": "add mod add n n sqr INT+ 6 x_0_1", "tree": "(((n add n) mod (6)**2) add x_0_1)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 + 6 - 9 - 6 + 5 + 1 + 9 + 81 + 205 + 187 + 39 + 183 + 276 + 258 + 490 + 1880 + 4210 + 3962 + 1372 + 4569 + 6823 + 6962 + 1 4225 + 5 1844 + 11 4107 + 10 9084 + 4 3778 + 14 174", "x2": "add add mul n add sign x_0_1 add n INT- 1 add INT+ 9 mul x_0_8 mod n sqr x_0_6 x_0_7", "tree": "(((n mul (sign(x_0_1) add (n add -1))) add (9 add (x_0_8 mul (n mod (x_0_6)**2)))) add x_0_7)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 4 + 7 - 3 + 8 - 6 - 1 + 6 + 3 + 2 + 3 + 2 + 4 + 3 + 1 + 3 + 1 + 1 + 1 + 1 + 2 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1", "x2": "abs idiv mul x_0_8 sign abs add INT- 8 sign sub n x_0_1 INT+ 2", "tree": "abs(((x_0_8 mul sign(abs((-8 add sign((n sub x_0_1)))))) idiv 2))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 0 + 7 - 3 + 5 + 0 + 1275 + 1600 + 2200 + 2425 + 3150 + 3600 + 3 6100 + 4 4900 + 6 625 + 6 7025 + 8 5975 + 9 8100 + 91 1525 + 113 2500 + 152 6650 + 168 7725 + 216 2600 + 246 6900 + 2280 3750 + 2832 9400 + 3818 4475", "x2": "mul mul sqr INT- 5 abs add x_0_6 sqr n sqr sign n", "tree": "(((-5)**2 mul abs((x_0_6 add (n)**2))) mul (sign(n))**2)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 8 - 2 + 0 + 0 + 2 + 2 - 1 - 1 + 0 + 0 + 4 + 4 - 1 - 1 + 0 + 0 + 6 + 6 - 1 - 1 + 0 + 0", "x2": "idiv n sub INT+ 8 add INT+ 5 idiv mul x_0_2 sub sqr n x_0_1 n", "tree": "(n idiv (8 sub (5 add ((x_0_2 mul ((n)**2 sub x_0_1)) idiv n))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 9 + 27 - 27 + 27 - 27 + 27 - 27 + 27 - 27 + 18 - 27 + 27 - 27 + 18 - 27 + 27 - 27 + 27 - 27 + 18 - 36 + 18", "x2": "mul mul sign x_0_1 INT+ 9 sub INT- 3 idiv mod sqr add mul INT+ 4 x_0_1 n n x_0_1", "tree": "((sign(x_0_1) mul 9) mul (-3 sub (((((4 mul x_0_1) add n))**2 mod n) idiv x_0_1)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 + 7 + 0 + 0 + 0 + 0 - 1 - 2 - 3 - 5 - 1 - 1 - 2 - 1 - 1 - 5 - 2 - 3 - 1 + 0 - 5 - 5 - 17", "x2": "mod INT+ 7 idiv n add sub x_0_3 n relu add sign INT- 1 n", "tree": "(7 mod (n idiv ((x_0_3 sub n) add relu((sign(-1) add n)))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 1 + 1 - 3 + 2 + 2 + 6 + 1 + 1 - 3 + 2 + 2 + 6 + 1 + 1 - 3 + 2 + 2 + 6 + 1 + 1 - 3 + 2 + 2 + 6 + 1", "x2": "sub sub INT+ 4 x_0_3 sign sqr x_0_2", "tree": "((4 sub x_0_3) sub sign((x_0_2)**2))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 + 6 - 9 - 1 - 8 + 0 - 7 - 7 - 6 - 6 - 5 - 5 - 4 - 4 - 3 - 3 - 2 - 2 - 1 - 1 + 0 + 0 - 7 - 7 - 6 - 6", "x2": "mod add idiv sub n INT- 7 add INT+ 5 abs abs n x_0_2 add INT- 8 x_0_2", "tree": "((((n sub -7) idiv (5 add abs(abs(n)))) add x_0_2) mod (-8 add x_0_2))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 36 + 49 + 64 + 81 + 100 + 121 + 288 + 338 + 392 + 450 + 512 + 578 + 972 + 1083 + 1200 + 1323 + 1452 + 1587 + 2304", "x2": "mul sqr n idiv n INT+ 6", "tree": "((n)**2 mul (n idiv 6))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 7 + 10 + 8 + 5 - 7 + 5 - 3 + 8 + 500 - 847 + 1440 + 1352 + 980 - 1575 + 1280 - 867 + 2592 + 18 500 - 33 8800 + 63 5040 + 65 4368 + 51 8420 - 90 7200 + 80 0 - 58 6092 + 188 9568 + 1 4151 2000 - 2 8493 800 + 5 7153 6000 + 6 2884 7648 + 5 3086 2080 - 9 8794 800", "x2": "mul x_0_9 relu mul n n", "tree": "(x_0_9 mul relu((n mul n)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 10 + 10 + 5 - 10 + 10 + 7 - 2 - 201 - 90 + 111 + 82 - 7 - 156 + 355 + 1126 - 3243 - 52 + 2 9639 + 1080 - 28 7519 - 9608 + 290 6883 + 8 2094 - 2934 6235 - 9 924 + 2 9619 7807 + 167 9158 - 29 8979 2051 - 1563 1420", "x2": "add mul mod x_0_5 add mod x_0_4 x_0_5 mul add x_0_2 add x_0_6 n idiv INT- 9 n INT+ 1 0 n", "tree": "(((x_0_5 mod ((x_0_4 mod x_0_5) add ((x_0_2 add (x_0_6 add n)) mul (-9 idiv n)))) mul 10) add n)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 9 + 14 + 21 + 30 + 41 + 54 + 69 + 86 + 105 + 126 + 149 + 174 + 201 + 230 + 261 + 294 + 329 + 366 + 405 + 446 + 489 + 534 + 581", "x2": "relu sub sqr n INT- 5", "tree": "relu(((n)**2 sub -5))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 10 + 9 - 4 + 10 - 4 + 1 + 5 - 8 + 14 - 8 + 5 + 1 - 4 + 10 - 4 + 1 + 5 - 8 + 14 - 8 + 5 + 1 - 4 + 10 - 4 + 1", "x2": "sub sub INT+ 6 mod relu mod INT+ 9 mul INT- 8 x_0_3 add abs n n x_0_1", "tree": "((6 sub (relu((9 mod (-8 mul x_0_3))) mod (abs(n) add n))) sub x_0_1)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 7 - 10 + 7 - 4 + 3 + 0 + 64 + 0 + 6 + 0 + 12 + 0 + 0 + 0 + 14 + 17 + 14 + 0 + 0 + 0 + 18 + 19 + 22 + 0 + 0 + 0 + 24 + 25 + 26", "x2": "relu sub mul sub INT+ 2 x_0_3 sub n idiv x_0_6 idiv n INT+ 3 n", "tree": "relu((((2 sub x_0_3) mul (n sub (x_0_6 idiv (n idiv 3)))) sub n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 9 + 0 - 10 - 2 + 4 + 3 + 5 + 6 + 7 + 8 + 2 + 9 + 5 + 6 + 3 + 2 + 13 + 10 + 15 + 10 + 3 + 3 + 8 + 15 + 4 + 24 + 10 + 25", "x2": "mod add add x_0_4 INT- 1 0 idiv add mul n INT- 3 sqr add n x_0_1 n n", "tree": "(((x_0_4 add -10) add (((n mul -3) add ((n add x_0_1))**2) idiv n)) mod n)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 - 5 - 1 - 4 - 2 + 2 - 1 + 1 + 5 + 2 + 4 + 8 + 5 + 7 + 11 + 8 + 10 + 14 + 11 + 13 + 17 + 14 + 16 + 20 + 17 + 19 + 23", "x2": "add x_0_3 abs INT+ 3", "tree": "(x_0_3 add abs(3))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 4 + 9 - 1 + 0 + 9 + 2 + 7 + 18 - 4 + 0 + 9 + 0 + 63 + 36 - 28 + 0 + 36 + 0 + 567 + 0 - 1764 + 0 + 1008 + 0 + 2 412 + 0 - 100 188 + 0 + 177 8112 + 0 + 2057 5296", "x2": "mul x_0_6 abs abs x_0_8", "tree": "(x_0_6 mul abs(abs(x_0_8)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 8 + 3 - 14 + 3 - 20 + 3 - 26 + 3 - 32 + 3 - 38 + 3 - 44 + 3 - 50 + 3 - 56 + 3 - 62 + 3 - 68 + 3 - 74 + 3 - 80", "x2": "add x_0_2 mod INT- 6 x_0_2", "tree": "(x_0_2 add (-6 mod x_0_2))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 3 - 1 + 4 + 5 + 5 + 8 + 10 + 11 + 10 + 13 + 15 + 15 + 14 + 17 + 18 + 18 + 17 + 19 + 20 + 20 + 23 + 25 + 26 + 25 + 28 + 30", "x2": "add mod relu add INT- 2 x_0_3 abs INT- 5 sub n INT+ 1", "tree": "((relu((-2 add x_0_3)) mod abs(-5)) add (n sub 1))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 + 4 - 6 + 26 + 38 + 33 + 70 + 87 + 87 + 129 + 151 + 156 + 203 + 230 + 240 + 292 + 324 + 339 + 396 + 433 + 453 + 515 + 557 + 582 + 649 + 696 + 726", "x2": "relu sub add x_0_3 mul n INT+ 5 INT- 9", "tree": "relu(((x_0_3 add (n mul 5)) sub -9))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 9 - 6 + 4 + 4 + 0 + 2646 + 0 + 1944 + 0 + 52 3908 + 0 + 45 4896 + 0 + 1 4145 5160 + 0 + 1 3919 8176 + 0 + 483 7766 4720 + 0 + 526 1691 528 + 0 + 20 283 5319 4080 + 0 + 23 6776 973 7600 + 0 + 9733 7796 5232 2880 + 0 + 1 2359 7122 8302 7200", "x2": "relu mul sub mul x_0_5 INT+ 9 mul INT- 9 INT+ 2 mul x_0_4 n", "tree": "relu((((x_0_5 mul 9) sub (-9 mul 2)) mul (x_0_4 mul n)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 - 1 - 6 - 2 - 5 - 5 - 12 - 6 - 15 - 13 - 11 - 13 - 12 - 20 - 14 - 14 - 22 - 23 - 22 - 20 - 23 - 20 - 24 - 23 - 24 - 30", "x2": "sub mod sub n mod mod abs add INT- 7 x_0_2 x_0_1 INT- 5 INT+ 9 add INT+ 6 n", "tree": "(((n sub ((abs((-7 add x_0_2)) mod x_0_1) mod -5)) mod 9) sub (6 add n))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 + 1 + 1 + 6 - 8 + 4 + 4 - 8 - 3 + 14 + 11 + 17 + 112 + 16 + 14 + 14 + 19 + 25 + 24 + 21 + 27 + 12 + 26 + 24 + 24 + 29 + 35 + 34 + 31 + 37 + 22 + 36 + 34", "x2": "abs sub INT- 1 0 abs mod mod x_0_9 n mul sqr x_0_9 x_0_4", "tree": "abs((-10 sub abs(((x_0_9 mod n) mod ((x_0_9)**2 mul x_0_4)))))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 24 + 27 + 32 + 39 + 48 + 59 + 72 + 87 + 104 + 123 + 144 + 167 + 192 + 219 + 248 + 279 + 312 + 347 + 384 + 423 + 464 + 507 + 552 + 599", "x2": "sub sqr n sub sub INT- 8 INT+ 1 0 INT+ 5", "tree": "((n)**2 sub ((-8 sub 10) sub 5))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 2 + 3 - 5 - 1 + 6 - 3 + 0 + 9 - 2 + 3 + 12 - 1 + 6 + 15 + 0 + 9 + 18 + 3 + 12 + 21 + 6 + 15 + 24 + 9 + 18 + 27 + 12", "x2": "add x_0_3 mod sub abs add x_0_3 INT+ 1 n INT+ 4", "tree": "(x_0_3 add ((abs((x_0_3 add 1)) sub n) mod 4))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 5 - 2 - 7 - 8 - 5 + 10 + 9 - 10 + 19 + 10 + 23 + 12 - 29 + 14 - 1 - 18 - 37 + 18 + 39 - 64 - 45 - 24 + 47 - 76 + 51 - 82 - 1 - 30 - 1 - 94 + 63", "x2": "sub INT+ 5 sub add add n INT+ 6 n sub mul mod x_0_8 INT+ 6 n n", "tree": "(5 sub (((n add 6) add n) sub (((x_0_8 mod 6) mul n) sub n)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 6 + 0 - 5 + 10 - 1 + 10 - 4 + 0 + 0 + 0 + 5 + 2 + 1 + 2 + 4 + 0 + 0 + 0 + 1 + 4 + 5 + 4 + 2 + 0 + 0 + 0 + 5 + 2 + 1 + 2 + 4", "x2": "abs mod x_0_8 INT- 6", "tree": "abs((x_0_8 mod -6))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 8 + 9 - 10 - 4 - 7 + 6 + 6 + 2 - 67 - 87 - 107 - 27 + 1 + 1 + 1 + 1 - 4505 - 7586 - 1 1467 - 748 + 1 + 1 + 1 + 1 - 2029 5049 - 5754 7421 - 1 3149 2115 - 55 9531 + 1 + 1 + 1 + 1", "x2": "mod INT+ 1 sub sub idiv abs sqr x_0_4 relu n n sqr x_0_8", "tree": "(1 mod (((abs((x_0_4)**2) idiv relu(n)) sub n) sub (x_0_8)**2))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 5 - 3 + 6 + 8 + 3 + 6 + 1 + 1 + 6 + 2 + 6 + 11 + 10 + 11 + 6 + 0 + 16 + 9 + 5 + 5 + 3 + 1 + 17 + 2 + 2 + 21 + 8 + 23 + 6 + 17 + 12", "x2": "mod add abs sub x_0_8 INT- 1 0 x_0_1 n", "tree": "((abs((x_0_8 sub -10)) add x_0_1) mod n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 24 + 25 + 26", "x2": "add n idiv abs n idiv add INT+ 8 sub sqr INT+ 6 x_0_1 sign n", "tree": "(n add (abs(n) idiv ((8 add ((6)**2 sub x_0_1)) idiv sign(n))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 4 - 2 + 8 + 3 + 2 + 3 + 2 + 2 + 4 + 3 + 2 + 3 + 2 + 2 + 4 + 3 + 2 + 3 + 2 + 2 + 4 + 3 + 2 + 3 + 2 + 2 + 4", "x2": "sub INT+ 2 mod abs x_0_4 add x_0_2 INT- 6", "tree": "(2 sub (abs(x_0_4) mod (x_0_2 add -6)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12", "x2": "idiv n abs INT- 2", "tree": "(n idiv abs(-2))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 - 4 + 9 - 3 - 9 - 18 - 28 + 72 - 27 - 90 - 198 - 336 + 936 - 378 - 1350 - 3168 - 5712 + 1 6848 - 7182 - 2 7000 - 6 6528 - 12 5664 + 38 7504 - 17 2368 - 67 5000 - 172 9728 - 339 2928 + 1085 112 - 499 8672", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 6 + 3 + 1 + 1 + 0 + 1 + 1 + 1 + 2 + 3 + 5 + 7 + 10 + 13 + 17 + 21 + 26 + 31 + 37 + 43 + 50 + 57 + 65 + 73", "x2": "relu abs sub sub sqr INT+ 2 idiv n INT+ 2 x_0_1", "tree": "relu(abs((((2)**2 sub (n idiv 2)) sub x_0_1)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 + 3 + 9 - 10 - 4 - 6 + 0 + 48 - 144 - 100 + 418 - 1608 - 1170 + 5712 - 2 4270 - 1 8560 + 9 6934 - 43 7040 - 35 2450 + 193 8480 - 917 8050 - 775 3680 + 4458 4810 - 2 2027 3440 - 1 9384 1750 + 11 5920 4800 - 59 4738 3150 - 54 2756 8720 + 336 1693 8910", "x2": "mul add x_0_3 mul sign x_0_5 INT+ 1 0 n", "tree": "((x_0_3 add (sign(x_0_5) mul 10)) mul n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 2 + 1 + 0 - 6 - 3 + 4 + 11 + 13 + 19 + 33 + 55 + 80 + 112 + 159 + 229 + 325 + 454 + 631 + 879 + 1224 + 1699 + 2352 + 3254 + 4502 + 6226 + 8604 + 1 1885 + 1 6415", "x2": "add n mul add x_0_4 x_0_1 sign INT+ 1", "tree": "(n add ((x_0_4 add x_0_1) mul sign(1)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 10 + 5 + 3 + 0 + 2 - 5 + 8 - 10 + 5 - 10 - 13 + 7 - 21 + 4 + 20 + 6 + 4 + 25 - 2 - 24 + 41 - 28 + 27 + 49 - 23 + 2 - 68 + 0 - 56 + 79 + 8 + 34 + 35", "x2": "idiv abs add n x_0_6 sign sign sub x_0_9 x_0_4", "tree": "(abs((n add x_0_6)) idiv sign(sign((x_0_9 sub x_0_4))))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 5 + 4 + 3 + 2 + 1 + 0 - 1 - 2 - 3 - 4 - 5 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15 - 17 - 18 - 19 - 20", "x2": "sub INT+ 7 sub n idiv sub mul add x_0_1 abs INT- 5 n n mul INT+ 1 0 n", "tree": "(7 sub (n sub ((((x_0_1 add abs(-5)) mul n) sub n) idiv (10 mul n))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 5 - 1 + 1 + 0 + 5 + 1 + 0 + 5 + 1 + 0 + 5 + 1 + 0 + 5 + 1 + 0 + 5 + 1 + 0 + 5 + 1 + 0 + 5 + 1 + 0 + 5", "x2": "mod add x_0_3 n n", "tree": "((x_0_3 add n) mod n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 + 0 + 3 + 10 - 7 + 6 + 7 - 9 + 8 - 10 + 0 + 2 + 4 + 8 + 1 + 6 + 8 + 1 + 10 + 1 + 6 + 8 + 10 + 13 + 9 + 13 + 16 + 11 + 19 + 12 + 17 + 20 + 23 + 27", "x2": "idiv sqr add add x_0_10 INT+ 3 n mul abs INT- 9 idiv INT+ 1 0 sign sqr n", "tree": "((((x_0_10 add 3) add n))**2 idiv (abs(-9) mul (10 idiv sign((n)**2))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 6 - 6 - 9 - 6 - 10 + 8 - 35 - 44 - 71 - 57 - 85 + 60 - 457 - 636 - 121 - 933 - 1293 + 570 - 8855 - 1 2198 - 1047 - 2 879 - 2 7869 + 4262 - 22 4711 - 30 5990 - 2 1919 - 59 1595 - 77 6063 - 10 1106", "x2": "add abs INT- 7 add mul x_0_6 mod sign idiv idiv sub x_0_3 INT+ 1 0 INT+ 1 0 sqr x_0_5 n x_0_5", "tree": "(abs(-7) add ((x_0_6 mul (sign((((x_0_3 sub 10) idiv 10) idiv (x_0_5)**2)) mod n)) add x_0_5))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 9 + 5 - 7 + 3 - 9 - 4 - 8 - 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_7", "tree": "sign(x_0_7)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 10 - 10 - 1 - 40 - 50 - 6 - 280 - 400 - 54 - 2800 - 4400 - 648 - 3 6400 - 6 1600 - 9720 - 58 2400 - 104 7200 - 17 4960 - 1106 5600 - 2094 4000 - 367 4160 - 2 4344 3200 - 4 8171 2000 - 8817 9840 - 60 8608 0 - 125 2451 2000 - 23 8085 5680", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 6 - 3 + 10 - 9 - 7 + 0 - 14 - 10 - 5 - 2 - 18 - 9 - 2 - 2 - 21 - 5 - 1 - 2 - 23 - 2 - 1 - 2 - 23 - 1 - 1 - 1 - 19", "x2": "idiv sub x_0_3 sqr x_0_4 n", "tree": "((x_0_3 sub (x_0_4)**2) idiv n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 52 + 62 + 73 + 85 + 98 + 112 + 127 + 143 + 160 + 178 + 197 + 217 + 238 + 260 + 283 + 307 + 332", "x2": "abs add n x_0_1", "tree": "abs((n add x_0_1))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 9 - 9 + 7 - 1 - 2 - 2 - 1 - 4 - 3 - 4 - 5 - 3 - 4 - 4 - 3 - 5 - 4 - 4 - 5 - 4 - 5 - 5 - 5 - 6 - 5 - 5 - 5", "x2": "idiv sub INT- 3 sub x_0_4 n add x_0_4 sign sub x_0_1 add abs INT+ 1 0 x_0_4", "tree": "((-3 sub (x_0_4 sub n)) idiv (x_0_4 add sign((x_0_1 sub (abs(10) add x_0_4)))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 8 + 4 + 3 + 2 - 9 - 9 - 5 + 12 - 1 - 1 - 11 + 0 + 4 + 17 - 13 + 0 - 10 + 11 + 4 + 13 - 30 + 13 - 10 + 21 - 7 + 9 - 43 + 43 - 23 + 31 - 28", "x2": "sub x_0_6 x_0_7", "tree": "(x_0_6 sub x_0_7)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 2 - 8 + 5 + 13 + 45 - 16 - 67 - 302 + 150 + 677 + 3330 - 1629 - 8101 - 4 3265 + 2 4447 + 12 9629 + 73 5519 - 41 5566 - 233 3287 - 1397 4824 + 872 6904 + 5133 2333 + 3 2142 972 - 2 71 8747 - 12 3197 5945 - 80 3552 4251 + 54 1940 6193", "x2": "add sub mod INT- 3 add x_0_3 relu n mul x_0_3 n n", "tree": "(((-3 mod (x_0_3 add relu(n))) sub (x_0_3 mul n)) add n)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 5 + 7 - 4 - 1 - 15 - 5 - 15 - 17 - 25 - 22 - 27 - 32 - 34 - 35 - 39 - 42 - 45 - 47 - 51 - 54 - 57 - 59 - 63 - 66 - 69 - 71 - 75 - 78", "x2": "sub mul INT- 2 n idiv x_0_4 idiv x_0_2 n", "tree": "((-2 mul n) sub (x_0_4 idiv (x_0_2 idiv n)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 - 1 - 4 + 2 - 7 + 672 + 616 + 1080 + 900 + 2200 - 8 6856 - 9 3756 - 19 3648 - 18 5430 - 52 3680 + 2363 0 + 2869 5456 + 6623 4798 + 7047 1760 + 2 1995 5260 - 109 1704 8912 - 145 1988 8086 - 365 6159 4144 - 422 8303 9800 - 1429 7090 800 + 7 6637 6835 6582 + 10 9770 3541 5696 + 29 6880 1447 100 + 36 7862 4465 3840", "x2": "mul mul add n INT+ 1 sub add n INT+ 3 x_0_5 n", "tree": "(((n add 1) mul ((n add 3) sub x_0_5)) mul n)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 - 3 - 6 + 9 + 6 + 1 - 10 - 2 - 7 + 13 + 14 + 18 + 4 + 8 + 14 + 26 + 19 + 25 + 6 + 6 + 3 + 18 + 15 + 10 + 0 + 7 + 2 + 22 + 23 + 27 + 13 + 17 + 23", "x2": "relu sub n x_0_9", "tree": "relu((n sub x_0_9))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 9 + 4 + 11 + 14 + 18 + 15 + 22 + 23 + 26 + 31 + 29 + 28 + 29 + 33 + 39 + 38 + 38 + 41 + 46 + 44 + 52 + 54 + 49 + 54 + 53", "x2": "abs add mod abs x_0_1 add INT+ 5 sqr INT- 2 add add n idiv x_0_1 x_0_2 n", "tree": "abs(((abs(x_0_1) mod (5 add (-2)**2)) add ((n add (x_0_1 idiv x_0_2)) add n)))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 7 - 10 - 5 - 6 + 7 - 9 + 7 + 5 + 59 + 111 + 37 + 49 + 63 + 96 + 65 + 42 + 3499 + 1 2340 + 1389 + 2422 + 3991 + 9239 + 4249 + 1789 + 1224 3027 + 1 5227 5627 + 192 9349 + 586 6113 + 1592 8111 + 8535 9152 + 1805 4033 + 320 554", "x2": "sub add n mul sqr x_0_8 INT+ 1 relu sub sign add add x_0_9 x_0_3 n INT+ 4", "tree": "((n add ((x_0_8)**2 mul 1)) sub relu((sign(((x_0_9 add x_0_3) add n)) sub 4)))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 4 + 10 - 1 - 4 + 2 + 8 - 8 + 16 + 100 + 1 + 16 + 4 + 64 + 64 + 256 + 1 0 + 1 + 256 + 16 + 4096 + 4096 + 6 5536 + 1 0 0 + 1 + 6 5536 + 256 + 1677 7216 + 1677 7216 + 42 9496 7296 + 1 0 0 0 0 + 1", "x2": "abs sqr x_0_7", "tree": "abs((x_0_7)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254 + 277 + 301 + 326 + 352", "x2": "add add x_0_1 idiv mod abs abs n relu mod x_0_1 n sqr x_0_2 n", "tree": "((x_0_1 add ((abs(abs(n)) mod relu((x_0_1 mod n))) idiv (x_0_2)**2)) add n)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 4 + 10 - 1 + 8 - 5 + 10 - 7 - 41 - 44 - 51 - 54 - 62 - 64 - 72 - 84 - 89 - 96 - 101 - 108 - 113 - 120 - 127 - 133 - 140 - 146 - 152 - 158 - 165 - 171 - 177 - 184", "x2": "mod sub sub add n abs INT- 4 idiv x_0_7 INT- 5 INT+ 5 mul n INT- 6", "tree": "((((n add abs(-4)) sub (x_0_7 idiv -5)) sub 5) mod (n mul -6))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 3 + 3 + 3 - 6 + 3 - 22 + 3 + 3 - 61 - 22 + 3 - 33 - 141 - 6 - 61 - 166 + 3 - 13 - 61 - 141 - 253 - 397 + 3", "x2": "sub INT+ 3 sqr relu mod mul INT+ 9 INT- 8 n", "tree": "(3 sub (relu(((9 mul -8) mod n)))**2)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 10 - 10 - 8 + 0 - 64 - 64 + 0 + 0 - 144 - 16 + 0 + 0 - 400 - 784 + 0 + 0 - 784 - 784 + 0 + 0 - 256 - 1764 + 0 + 0 - 64 - 1296 + 0", "x2": "mul sqr mod mod x_0_4 n n INT- 4", "tree": "((((x_0_4 mod n) mod n))**2 mul -4)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 4 + 5 + 2 + 1 + 0 + 1 + 3 + 2 + 0 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 0 + 2 + 2 + 2", "x2": "abs idiv relu mod add x_0_3 sub x_0_5 INT- 4 mul x_0_4 n INT- 4", "tree": "abs((relu(((x_0_3 add (x_0_5 sub -4)) mod (x_0_4 mul n))) idiv -4))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 10 - 4 + 3 - 2 + 6 - 2 + 3 + 5 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign sub x_0_3 x_0_8", "tree": "sign((x_0_3 sub x_0_8))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 6 + 12 + 78 + 168 + 1170 + 2688 + 1 9890 + 4 8384 + 37 7910 + 96 7680 + 793 6110 + 2128 8960 + 1 8253 530 + 5 1093 5040 + 45 6326 3250 + 132 8431 1040 + 1232 810 7750 + 3719 6070 9120 + 3 5730 3512 4750 + 11 1588 2127 3600 + 110 7640 8886 7250 + 357 822 8075 5200 + 3655 2149 3261 9250 + 1 2140 7975 4567 6800 + 12 7932 5226 4167 3750", "x2": "abs mul sub INT- 6 add n INT+ 3 x_0_2", "tree": "abs(((-6 sub (n add 3)) mul x_0_2))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3", "x2": "mod n INT+ 7", "tree": "(n mod 7)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 7 - 10 + 2 + 4 - 28 - 40 + 8 + 16 - 112 - 160 + 32 + 64 - 448 - 640 + 128 + 256 - 1792 - 2560 + 512 + 1024 - 7168 - 1 240 + 2048 + 4096 - 2 8672 - 4 960 + 8192", "x2": "mul x_0_4 mod INT+ 4 mul mod add n INT+ 1 mod n mul relu mul n INT+ 8 INT+ 1 sub n INT- 1 0", "tree": "(x_0_4 mul (4 mod (((n add 1) mod (n mod (relu((n mul 8)) mul 1))) mul (n sub -10))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 2 + 253 + 6558 + 6 5533 + 39 622 + 167 9613 + 576 4798 + 1677 7213 + 4304 6718 + 9999 9997 + 2 1435 8878 + 4 2998 1693 + 8 1573 718 + 14 7578 9053 + 25 6289 622 + 42 9496 7293 + 69 7575 7438 + 110 1996 573 + 169 8356 3038 + 255 9999 9997 + 378 2285 9358 + 548 7587 3533 + 783 1098 5278 + 1100 7531 4173", "x2": "sub sqr sqr sqr n INT+ 3", "tree": "((((n)**2)**2)**2 sub 3)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 2 + 4 + 5 - 6 - 10 + 15 + 12 + 14 + 15 + 4 + 0 + 25 + 22 + 24 + 25 + 14 + 10 + 35 + 32 + 34 + 35 + 24 + 20 + 45 + 42 + 44 + 45 + 34 + 30", "x2": "relu add sub mul mod INT+ 4 INT- 5 INT- 5 INT- 5 x_0_6", "tree": "relu(((((4 mod -5) mul -5) sub -5) add x_0_6))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 8 + 3 + 3 - 6 + 0 + 5 - 10 + 4 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv sign x_0_9 mul mod INT- 5 INT+ 9 n", "tree": "(sign(x_0_9) idiv ((-5 mod 9) mul n))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 8 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 11 + 11 + 13 + 13 + 15 + 15 + 17 + 17 + 19 + 19 + 21 + 21 + 23 + 23 + 25 + 25 + 27", "x2": "add abs sub x_0_1 n add relu sub x_0_2 x_0_1 n", "tree": "(abs((x_0_1 sub n)) add (relu((x_0_2 sub x_0_1)) add n))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 + 3 - 3 + 4 - 5 + 6 - 7 + 8 - 9 + 10 - 11 + 12 - 13 + 14 - 15 + 16 - 17 + 18 - 19 + 20 - 21 + 22 - 23 + 24 - 25 + 26", "x2": "mul sign x_0_2 n", "tree": "(sign(x_0_2) mul n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 6 + 6 + 4 + 0 - 1 + 4 - 9 + 491 - 9 + 291 - 9 - 9 + 191 - 9 + 1191 - 9 + 1391 - 9 - 9 + 1691 - 9 + 1891 - 9 + 2091 - 9 - 9 + 2391 - 9 + 2591 - 9", "x2": "sub relu mul mod add INT- 4 n x_0_7 sqr INT+ 1 0 INT+ 9", "tree": "(relu((((-4 add n) mod x_0_7) mul (10)**2)) sub 9)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 3 - 10 - 3 + 4 - 8 - 3 + 9 + 1 - 7 + 3 + 9 + 9 + 100 + 9 + 16 + 64 + 9 + 81 + 1 + 49 + 9 + 81 + 81 + 1 0 + 81 + 256 + 4096 + 81 + 6561 + 1 + 2401 + 81 + 6561 + 6561", "x2": "sqr x_0_11", "tree": "(x_0_11)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 0 - 3 + 4 + 4 - 4 + 9 + 2 - 2 + 0 + 3 + 4 + 4 + 4 + 9 + 2 + 2 + 0 + 3 + 4 + 4 + 4 + 9 + 2 + 2 + 0 + 3 + 4 + 4 + 4 + 9 + 2 + 2", "x2": "abs mul x_0_8 sign idiv abs sqr n INT+ 1 0", "tree": "abs((x_0_8 mul sign((abs((n)**2) idiv 10))))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 9 - 1 + 10 + 9 + 9 + 10 - 18 - 24 - 57 - 104 - 236 - 424 - 952 - 1756 - 4840 - 8865 - 2 4290 - 4 4420 - 12 1550 - 26 6646 - 72 9432 - 160 14 - 437 6736 - 960 234 - 3063 7334 - 6720 1827 - 2 1446 1534 - 4 7041 2992 - 15 123 948 - 37 6330 4184", "x2": "mul abs sub sign INT+ 7 sub x_0_2 mod idiv n x_0_7 n add INT- 1 idiv abs n INT- 5", "tree": "(abs((sign(7) sub (x_0_2 sub ((n idiv x_0_7) mod n)))) mul (-1 add (abs(n) idiv -5)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 10 - 8 + 4 - 3 - 5 - 9 - 9 + 2 + 6 - 6 + 6 - 6 + 6 - 5 + 7 - 4 + 8 - 4 + 8 - 4 + 8 - 4 + 8 - 3 + 9 - 3 + 9 - 3 + 9 - 3 + 9 - 3 + 9 - 2", "x2": "sub mod x_0_10 INT+ 2 idiv x_0_2 sign add INT+ 6 INT- 8", "tree": "((x_0_10 mod 2) sub (x_0_2 idiv sign((6 add -8))))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 5 + 8 - 37 + 198 - 1466 + 1 1938 - 10 9014 + 110 2804 - 1224 9498 + 1 4817 8528 - 19 3947 2764 + 273 29 8800 - 4115 7947 9816 + 6 6128 9912 2528 - 112 8557 6271 7104 + 2038 1270 3490 1184 - 3 8843 3354 4045 7216 + 77 8944 3925 3221 1872 - 1639 8555 2271 8630 6624 + 3 6156 3346 2402 7133 9200 - 83 3307 7553 3123 908 1184 + 2003 6314 9833 9822 6768 6560 - 5 177 4854 951 766 2590 5856 + 130 6661 2868 9022 2107 2827 7888 - 3533 1906 1302 4822 9924 3631 4464 + 9 9062 7869 8580 1802 6648 7682 6784", "x2": "sub mod mul INT- 9 abs relu x_0_2 x_0_3 add mul add x_0_3 sub x_0_1 x_0_2 n x_0_3", "tree": "(((-9 mul abs(relu(x_0_2))) mod x_0_3) sub (((x_0_3 add (x_0_1 sub x_0_2)) mul n) add x_0_3))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 1 - 8 - 1 + 0 + 7 - 1 + 7 + 9 + 17 + 10 + 19 + 22 + 31 + 25 + 35 + 39 + 49 + 44 + 55 + 60 + 71 + 67 + 79 + 85 + 97 + 94 + 107", "x2": "sub n mul sign sign INT- 8 x_0_4", "tree": "(n sub (sign(sign(-8)) mul x_0_4))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 72 - 288 - 648 - 1152 - 1800 - 2592 - 3528 - 4608 - 5832 - 7200 - 8712 - 1 368 - 1 2168 - 1 4112 - 1 6200 - 1 8432 - 2 808 - 2 3328 - 2 5992 - 2 8800 - 3 1752 - 3 4848 - 3 8088 - 4 1472", "x2": "mul INT+ 4 mul mul INT- 9 mod INT- 3 INT+ 5 sqr n", "tree": "(4 mul ((-9 mul (-3 mod 5)) mul (n)**2))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 6 + 4 + 1 + 1229 + 1768 + 2403 + 3135 + 5196 + 6666 + 8330 + 1 189 + 1 3475 + 1 6268 + 1 9353 + 2 2731 + 2 7634 + 3 2142 + 3 7040 + 4 2329 + 4 9241 + 5 5856 + 6 2959 + 7 551 + 7 9864 + 8 8978 + 9 8678 + 10 8965", "x2": "sub x_0_4 sub relu INT+ 2 mul idiv n n abs abs sqr add mul INT+ 6 n n", "tree": "(x_0_4 sub (relu(2) sub ((n idiv n) mul abs(abs((((6 mul n) add n))**2)))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 2 + 6 - 9 + 5 - 3 + 1 - 1 + 1 - 3 + 6 - 7 + 7 - 3 + 1 - 1 + 1 - 3 + 7 - 7 + 7 - 3 + 1 - 1 + 1 - 3 + 7 - 7", "x2": "idiv sub idiv sub abs x_0_4 add INT- 3 mul mod INT+ 2 n INT+ 8 n INT- 8 x_0_4", "tree": "((((abs(x_0_4) sub (-3 add ((2 mod n) mul 8))) idiv n) sub -8) idiv x_0_4)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 + 4 + 4 + 2 - 4 - 3 + 7 + 0 - 6 + 3 - 3 + 1 + 4 + 4 + 2 + 4 + 3 + 7 + 0 + 6 + 3 + 3 + 1 + 4 + 4 + 2 + 4 + 3 + 7 + 0 + 6 + 3 + 3 + 1 + 4", "x2": "abs x_0_11", "tree": "abs(x_0_11)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 4 - 3 + 1 + 64 + 48 - 16 - 1024 - 768 + 256 + 1 6384 + 1 2288 - 4096 - 26 2144 - 19 6608 + 6 5536 + 419 4304 + 314 5728 - 104 8576 - 6710 8864 - 5033 1648 + 1677 7216 + 10 7374 1824 + 8 530 6368 - 2 6843 5456 - 171 7986 9184 - 128 8490 1888 + 42 9496 7296", "x2": "mul x_0_3 add abs abs INT- 1 idiv sqr INT- 9 INT- 5", "tree": "(x_0_3 mul (abs(abs(-1)) add ((-9)**2 idiv -5)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 - 5 - 1 + 25 + 1 + 5 + 1 + 25 + 1 + 31 + 1 + 4 + 1 + 16 + 1 + 25 + 1 + 31 + 1 + 4 + 1 + 16 + 1 + 25 + 1 + 31 + 1", "x2": "mod sqr x_0_2 sub x_0_3 mul INT+ 8 mod sqr INT+ 4 INT- 1 0", "tree": "((x_0_2)**2 mod (x_0_3 sub (8 mul ((4)**2 mod -10))))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 - 1 - 6 - 3 - 7 + 0 + 9 + 7 - 2 + 3 - 24 - 11 - 11 - 6 + 26 + 18 + 18 + 16 - 52 - 26 - 53 - 33 + 67 + 38 + 97 + 67 - 101 - 48 - 202 - 126 + 115 + 53 + 366 + 231", "x2": "add sub x_0_10 x_0_4 x_0_8", "tree": "((x_0_10 sub x_0_4) add x_0_8)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275 + 299 + 324", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 9 - 3 - 10 - 8 - 6 + 8 - 7 - 6 - 2 + 40 + 46 + 71 + 41 + 43 + 57 + 74 + 75 + 79 + 121 + 127 + 152 + 122 + 124 + 138 + 155 + 156 + 160 + 202 + 208 + 233 + 203 + 205 + 219", "x2": "relu add x_0_9 sqr sub relu add INT- 8 n add sign x_0_6 n", "tree": "relu((x_0_9 add ((relu((-8 add n)) sub (sign(x_0_6) add n)))**2))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 6 + 10 + 10 - 4 - 8 - 5 + 8 + 40 + 105 + 102 + 19 + 62 + 24 + 65 + 1601 + 1 1043 + 1 423 + 381 + 3846 + 598 + 4248 + 256 3225 + 1 2194 7874 + 1 863 8955 + 14 5188 + 1479 1744 + 35 7633 + 1804 5534 + 6 5701 2240 656 + 1 4871 2839 7311 9908 + 1 1802 4225 4349 2058", "x2": "add idiv n n add relu sqr x_0_7 mod n x_0_8", "tree": "((n idiv n) add (relu((x_0_7)**2) add (n mod x_0_8)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 9 + 5 - 1 + 9 - 2 + 10 + 8 - 2149 + 630 - 277 7796 - 13 5387 + 3 9690 - 112 151 8195 - 852 9381 + 250 470 - 44 4721 1218 6012 - 5 3735 1003 + 1 5752 9610 - 17 6510 7870 4956 8923 - 338 5311 3189 + 99 2436 5430 - 7 57 1383 7624 3532 436 - 2 1327 4613 907 + 6252 3502 2090 - 2 7805 6782 7103 4596 5065 4915 - 134 3630 624 7141 + 39 3898 639 1670 - 1 1036 737 611 9693 9988 1949 8572 - 8464 8693 9356 9883 + 2481 5578 267 5210 - 4380 2176 5396 1302 1420 1456 3076 5803", "x2": "mul INT+ 7 sub mul INT+ 9 x_0_3 sqr relu add idiv x_0_7 mul sign sqr n x_0_5 x_0_1", "tree": "(7 mul ((9 mul x_0_3) sub (relu(((x_0_7 idiv (sign((n)**2) mul x_0_5)) add x_0_1)))**2))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 5 + 8 + 9 + 12 + 12 + 10 + 11 + 14 + 14 + 12 + 13 + 16 + 16 + 14 + 15 + 18 + 18 + 16 + 17 + 20 + 20 + 18 + 19 + 22 + 22", "x2": "sub mod add n INT+ 7 abs x_0_2 INT- 8", "tree": "(((n add 7) mod abs(x_0_2)) sub -8)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 4 + 8 + 9 + 7 + 6 - 5 - 1 - 9 - 5 + 50 - 77 - 96 - 78 - 70 + 90 + 32 + 170 + 108 - 931 + 1560 + 2037 + 1738 + 1633 - 2136 - 775 - 4394 - 2889 + 2 6096 - 4 5211 - 6 1080 - 5 3847 - 5 2224 + 7 521", "x2": "add idiv mul n x_0_9 sign mod x_0_7 relu INT- 1 0 n", "tree": "(((n mul x_0_9) idiv sign((x_0_7 mod relu(-10)))) add n)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 8 - 7 + 20 + 40 - 42 + 140 + 320 - 378 + 1400 + 3520 - 4536 + 1 8200 + 4 9280 - 6 8040 + 29 1200 + 83 7760 - 122 4720 + 553 2800 + 1675 5200 - 2571 9120 + 1 2172 1600 + 3 8536 9600 - 6 1725 8880 + 30 4304 0 + 100 1960 9600 - 166 6598 9760", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 10 - 5 - 1 - 10 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 2 + 0 + 0 + 0 + 0 - 2 + 0 + 0 + 0 + 0", "x2": "mul idiv x_0_5 n idiv n INT+ 1 0", "tree": "((x_0_5 idiv n) mul (n idiv 10))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 6 + 8 + 5 - 6 + 9 + 1 - 4 + 5 + 5 - 28 + 6 + 18 - 345 + 69 + 22 - 5485 + 844 + 88 - 10 4173 + 1 1414 + 866 - 229 1695 + 15 8371 + 1 1439 - 5729 1483 + 182 5976 + 15 8399 - 16 415 56 + 4861 5153 + 182 6007 - 497 2849 3305", "x2": "mod add add mod x_0_4 x_0_1 sign mul sign abs sqr x_0_7 x_0_4 n mul n x_0_3", "tree": "((((x_0_4 mod x_0_1) add sign((sign(abs((x_0_7)**2)) mul x_0_4))) add n) mod (n mul x_0_3))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 10 + 6 - 2 + 6 - 5 - 4 + 8 - 32 + 13 - 20 - 31 + 18 - 6 + 15 - 12 - 9 + 16 - 54 + 24 - 34 - 49 + 30 - 10 + 24 - 19 - 14 + 24 - 79 + 35", "x2": "idiv sqr n x_0_5", "tree": "((n)**2 idiv x_0_5)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 + 6 - 9 + 6 - 12 + 6 - 15 + 6 - 18 + 6 - 21 + 6 - 24 + 6 - 27 + 6 - 30 + 6 - 33 + 6 - 36 + 6 - 39 + 6 - 42 + 6", "x2": "add mod mul n INT+ 3 x_0_2 mul sign sign n x_0_2", "tree": "(((n mul 3) mod x_0_2) add (sign(sign(n)) mul x_0_2))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 + 0 - 8 + 0 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr sub sqr sign relu add n mul sqr idiv n INT- 6 x_0_5 add n INT- 7", "tree": "(((sign(relu((n add (((n idiv -6))**2 mul x_0_5)))))**2 sub (n add -7)))**2", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 2 + 7 - 300 - 312 - 258 - 2160 - 2232 - 1908 - 1 3380 - 1 3812 - 1 1868 - 8 760 - 8 3352 - 7 1688 - 48 5100 - 50 652 - 43 668 - 291 1200 - 300 4512 - 258 4608 - 1746 7860 - 1802 7732 - 1550 8308 - 1 480 7880 - 1 816 7112 - 9305 568", "x2": "mul add mul idiv add relu INT- 8 sub INT- 9 n INT+ 3 INT+ 1 0 x_0_3 INT+ 6", "tree": "(((((relu(-8) add (-9 sub n)) idiv 3) mul 10) add x_0_3) mul 6)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 11 - 18 - 37 - 74 - 135 - 226 - 353 - 522 - 739 - 1010 - 1341 - 1738 - 2207 - 2754 - 3385 - 4106 - 4923 - 5842 - 6869 - 8010 - 9271 - 1 658 - 1 2177 - 1 3834", "x2": "sub n add n add mul relu relu n sqr n INT+ 1 0", "tree": "(n sub (n add ((relu(relu(n)) mul (n)**2) add 10)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 1 + 3 - 8 + 17 - 4 + 70 - 130 - 15 - 477 + 1210 + 639 + 3110 - 1 1500 - 8830 - 1 6455 + 11 2367 + 9 5964 + 3 5767 - 110 7226 - 89 9400 + 78 5370 + 1086 4483 + 730 9279 - 1793 2762 - 1 508 9573 - 4785 692 + 2 6648 4490", "x2": "sub sub add abs n sub n sign add relu INT- 1 x_0_2 add x_0_2 mul INT+ 9 x_0_3 INT- 4", "tree": "(((abs(n) add (n sub sign((relu(-1) add x_0_2)))) sub (x_0_2 add (9 mul x_0_3))) sub -4)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 1 - 3 + 2 - 4 - 2 - 9 - 1 - 4 - 2 + 0 - 7 - 1 - 6 + 0 - 4 - 5 - 3 - 8 - 4 - 2 - 9 - 1 - 18 - 2 + 0 - 7 - 1 - 48", "x2": "mul abs add x_0_5 INT+ 2 idiv INT- 6 add sqr mod add x_0_5 INT+ 5 add x_0_3 mod INT- 5 INT- 4 INT+ 2", "tree": "(abs((x_0_5 add 2)) mul (-6 idiv ((((x_0_5 add 5) mod (x_0_3 add (-5 mod -4))))**2 add 2)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 0 + 36 + 64 + 0 + 144 + 3136 + 2 736 + 8 2944 + 0 + 0 + 576 + 2704 + 1 2544 + 3 2400 + 8 2944 + 16 6464 + 33 1776 + 57 7600 + 100 0 + 158 7600 + 250 9056 + 373 2624 + 553 1904", "x2": "sqr mul idiv sqr mod sub sub n INT+ 4 INT+ 6 n INT+ 2 n", "tree": "(((((((n sub 4) sub 6) mod n))**2 idiv 2) mul n))**2", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 2 - 8 - 14 - 18 - 32 - 42 - 50 - 68 - 82 - 94 - 116 - 134 - 150 - 176 - 198 - 218 - 248 - 274 - 298 - 332 - 362 - 390 - 428 - 462 - 494 - 536", "x2": "add x_0_3 mul n INT- 4", "tree": "(x_0_3 add (n mul -4))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 - 4 - 1 + 10 + 7 + 6 + 5 + 8 + 19 + 16 + 15 + 14 + 17 + 28 + 25 + 24 + 23 + 26 + 37 + 34 + 33 + 32 + 35 + 46 + 43 + 42 + 41 + 44", "x2": "sub x_0_5 INT- 9", "tree": "(x_0_5 sub -9)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 6 - 3 - 3 - 12 - 12 - 21 - 21 - 30 - 30 - 39 - 39 - 48 - 48 - 57 - 57 - 66 - 66 - 75 - 75 - 84 - 84 - 93 - 93 - 102 - 102", "x2": "sub x_0_2 INT+ 9", "tree": "(x_0_2 sub 9)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 3 + 2 + 4 - 1 - 3 + 2 + 2 - 1 - 1 + 2 + 2 - 1 - 1 + 2 + 2 - 1 - 1 + 2 + 2 - 1 - 1 + 2 + 2 - 1 - 1 + 2", "x2": "sub sign mod n x_0_2 x_0_2", "tree": "(sign((n mod x_0_2)) sub x_0_2)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "abs mul sqr n INT+ 1", "tree": "abs(((n)**2 mul 1))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 + 2 + 10 + 5 + 5 + 25 + 20 + 15 + 25 + 145 + 575 + 570 + 1705 + 5110 + 2 5545 + 7 6630 + 15 3255 + 30 6505 + 30 6500 + 61 2995 + 183 8980 + 5 + 25 + 120 + 115 + 225 + 220 + 215 + 1285", "x2": "abs add mul mul sign x_0_1 mod add sub mod x_0_1 x_0_3 INT- 2 INT- 8 INT+ 7 relu x_0_1 INT- 5", "tree": "abs((((sign(x_0_1) mul ((((x_0_1 mod x_0_3) sub -2) add -8) mod 7)) mul relu(x_0_1)) add -5))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 7 + 2 - 2 + 2 + 1 - 6 - 1 + 4 - 7 + 80 - 12 - 34 - 16 + 4 + 100 + 26 - 58 - 136 + 1510 - 250 + 724 + 362 + 82 - 2390 + 640 - 1518 - 3682 - 4 2270 - 7260 - 2 1710 - 1 1212 - 2614 + 7 8880 - 2 1750 + 5 3140", "x2": "mul sign x_0_4 add mul n x_0_9 INT- 1 0", "tree": "(sign(x_0_4) mul ((n mul x_0_9) add -10))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 90 + 360 + 1210 + 3240 + 7290 + 1 4440 + 2 6010 + 4 3560 + 6 8890 + 10 4040 + 15 1290 + 21 3160 + 29 2410 + 39 2040 + 51 5290 + 66 5640 + 84 6810 + 106 2760 + 131 7690 + 161 6040 + 196 2490 + 236 1960 + 281 9610 + 334 840 + 393 1290 + 459 6840", "x2": "mul sqr abs sub sqr n INT- 2 relu INT+ 1 0", "tree": "((abs(((n)**2 sub -2)))**2 mul relu(10))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 8 + 1 - 10 + 6 - 5 + 3 + 5 + 0 - 8 - 10 + 1 + 10 - 1 + 5 - 3 - 2 + 0 + 12 + 10 + 1 - 7 + 6 - 5 + 3 + 6 + 0 - 12 - 12 + 1 + 7 - 1 + 5 - 3 - 2", "x2": "sub relu sub INT+ 5 abs abs x_0_5 add relu mod relu n mod n x_0_9 x_0_9", "tree": "(relu((5 sub abs(abs(x_0_5)))) sub (relu((relu(n) mod (n mod x_0_9))) add x_0_9))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 500 + 2250 + 8000 + 1 8750 + 4 500 + 7 3500 + 12 8000 + 20 2500 + 31 2500 + 45 3750 + 64 8000 + 88 7250 + 120 500 + 157 5000 + 204 8000 + 260 1000 + 328 500 + 406 1250 + 500 0 + 606 3750 + 732 500 + 872 8500 + 1036 8000 + 1218 7500 + 1428 500", "x2": "idiv mul sqr mul n relu INT+ 1 0 mul INT+ 1 0 idiv abs sqr n INT+ 4 INT+ 8", "tree": "((((n mul relu(10)))**2 mul (10 mul (abs((n)**2) idiv 4))) idiv 8)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 7 + 9 + 28 + 45 + 168 + 315 + 1344 + 2835 + 1 3440 + 3 1185 + 16 1280 + 40 5405 + 225 7920 + 608 1075 + 3612 6720 + 1 337 8275 + 6 5028 960 + 19 6418 7225 + 130 561 9200 + 412 4793 1725 + 2861 2362 2400 + 9487 242 9675 + 6 8669 6693 7600 + 23 7175 6074 1875 + 178 5411 4037 7600 + 640 3741 4003 625 + 4999 1519 3057 2800", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 2 - 1 + 9 - 9 + 9 + 10 + 40 + 0 + 40 + 60 + 234 + 6 + 287 + 457 + 1880 + 59 + 2592 + 4351 + 1 8810 + 630 + 2 8523 + 5 48 + 22 5732 + 7887 + 37 812 + 67 5661 + 316 262 + 11 4376 + 556 2195 + 1047 2761 + 5056 4208 + 188 7220", "x2": "idiv relu mul n add x_0_4 sign x_0_7 INT+ 2", "tree": "(relu((n mul (x_0_4 add sign(x_0_7)))) idiv 2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 2 + 4 - 1 + 6 - 9 + 4 - 8 + 8 - 3 - 4 - 5 - 5 - 6 - 6 - 6 - 6 - 7 - 7 - 7 - 7 - 7 - 8 - 8 - 8 - 8 - 8 - 8 - 8 - 8 - 8 - 8 - 8 - 9 - 9", "x2": "mod idiv sqr sub abs sqr sign x_0_8 INT+ 9 n INT- 1 0", "tree": "((((abs((sign(x_0_8))**2) sub 9))**2 idiv n) mod -10)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 1 - 7 - 8 + 2 + 1 - 8 - 1 + 0 + 1 + 68 + 87 + 17 + 5 + 111 + 7 - 9 + 9 + 1283 + 1731 + 348 + 101 + 2544 + 159 + 216 + 225 + 3 4632 + 4 8459 + 1 83 + 3021 + 7 8855 + 5079 + 7119 + 7641", "x2": "add INT- 9 mul n abs x_0_8", "tree": "(-9 add (n mul abs(x_0_8)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 10 - 10 - 7 - 8 + 15 + 10 + 0 + 0 + 16 + 0 - 11 - 12 + 6 - 14 - 7 - 7 - 15 - 8 - 17 - 18 - 11 - 20 - 11 - 11 - 21 - 11 - 23 - 24 - 14 - 26", "x2": "sub idiv sqr x_0_4 n n", "tree": "(((x_0_4)**2 idiv n) sub n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 2 - 5 + 4 - 6 + 4 + 10 + 2 - 7 + 7 + 5 + 15 + 6 + 17 + 24 + 17 + 9 + 24 + 23 + 34 + 26 + 38 + 46 + 40 + 33 + 49 + 49 + 61 + 54 + 67 + 76 + 71 + 65 + 82 + 83", "x2": "add relu n x_0_8", "tree": "(relu(n) add x_0_8)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 3 + 5 - 2 + 2 + 2 - 6 + 3 + 3 + 5 + 7 + 0 + 4 + 4 - 4 + 5 + 5 + 7 + 9 + 2 + 6 + 6 - 2 + 7 + 7 + 9 + 11 + 4 + 8 + 8 + 0 + 9 + 9 + 11", "x2": "add add sub abs abs abs INT- 2 n n x_0_8", "tree": "(((abs(abs(abs(-2))) sub n) add n) add x_0_8)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 1 + 3 + 2 - 1 + 2 + 1 - 1 + 2 + 1 - 2 + 3 + 1 - 4 + 5 + 2 - 9 + 11 + 4 - 23 + 28 + 11 - 67 + 84 + 34 - 218 + 283 + 119 - 791", "x2": "idiv mul x_0_3 relu n INT+ 8", "tree": "((x_0_3 mul relu(n)) idiv 8)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 + 2 - 10 - 8 - 7 + 36 + 9 + 0 + 64 + 64 + 100 + 121 + 144 + 81 + 196 + 225 + 225 + 324 + 361 + 169 + 400 + 225 + 361 + 529 + 289 + 576 + 676 + 729 + 441 + 841 + 961", "x2": "abs sqr sub mod mul sign INT+ 9 add x_0_2 x_0_5 INT+ 9 n", "tree": "abs(((((sign(9) mul (x_0_2 add x_0_5)) mod 9) sub n))**2)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 20 + 60 + 240 + 1200 + 7200 + 5 400 + 40 3200 + 362 8800 + 3628 8000 + 3 9916 8000 + 47 9001 6000 + 622 7020 8000 + 8717 8291 2000 + 13 767 4368 0 + 209 2278 9888 0 + 3556 8742 8096 0 + 6 4023 7370 5728 0 + 121 6451 40 8832 0 + 2432 9020 817 6640 0 + 5 1090 9421 7170 9440 0 + 112 4000 7277 7760 7680 0 + 2585 2016 7388 8497 6640 0 + 6 2044 8401 7332 3943 9360 0 + 155 1121 43 3309 8598 4000 0 + 4032 9146 1126 6056 3558 4000 0 + 10 8888 6945 418 3521 6076 8000 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 16 + 1 + 0 + 1 + 16 + 16 + 1 + 0 + 1 + 16 + 16 + 1 + 0 + 1 + 16 + 16 + 1 + 0 + 1 + 16 + 16 + 1 + 0 + 1", "x2": "mul INT+ 1 sqr mod relu sqr n INT+ 5", "tree": "(1 mul ((relu((n)**2) mod 5))**2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 - 3 + 5 + 36 + 10 + 24 + 245 + 72 + 207 + 2440 + 781 + 2472 + 3 1707 + 1 920 + 3 7065 + 50 7296 + 18 5623 + 66 7152 + 963 8605 + 371 2440 + 1401 171 + 2 1204 9288 + 8538 6097 + 3 3624 4080 + 53 123 2175 + 22 2003 8496 + 90 7859 133 + 1484 3450 872 + 643 8111 6355", "x2": "sub mul n abs x_0_3 relu n", "tree": "((n mul abs(x_0_3)) sub relu(n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4", "x2": "mod add sub sub n n mul INT+ 1 sign INT+ 7 add n add INT+ 7 n INT+ 6", "tree": "((((n sub n) sub (1 mul sign(7))) add (n add (7 add n))) mod 6)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 - 8 - 6 + 6 - 1 + 12 - 8 - 8 - 8 + 12 - 8 + 72 - 8 - 8 - 8 + 72 - 8 + 672 - 8 - 8 - 8 + 672 - 8 + 6672 - 8 - 8 - 8 + 6672 - 8 + 6 6672 - 8", "x2": "sub sign add n n sub mul INT- 1 0 relu relu mod INT- 4 x_0_6 INT- 9", "tree": "(sign((n add n)) sub ((-10 mul relu(relu((-4 mod x_0_6)))) sub -9))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 4 - 8 + 1 + 5 + 7 - 7 - 2 - 5 - 4 + 4 + 3 + 0 + 2 + 2 + 6 + 2 + 4 + 3 + 2 + 4 + 5 + 4 + 4 + 4 + 6 + 5 + 5 + 6 + 5 + 6 + 6 + 6 + 6 + 6 + 7", "x2": "idiv add x_0_10 sub n x_0_9 mul sign n INT+ 5", "tree": "((x_0_10 add (n sub x_0_9)) idiv (sign(n) mul 5))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 9 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul sign add mul INT+ 9 x_0_2 INT+ 8 sqr relu n", "tree": "(sign(((9 mul x_0_2) add 8)) mul (relu(n))**2)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 1 - 1 + 4 + 5 - 18 - 28 + 8 + 9 - 70 - 88 + 12 + 13 - 154 - 180 + 16 + 17 - 270 - 304 + 20 + 21 - 418 - 460 + 24 + 25 - 598 - 648 + 28 + 29", "x2": "sub n relu mul n idiv idiv relu x_0_2 INT+ 1 sign relu x_0_3", "tree": "(n sub relu((n mul ((relu(x_0_2) idiv 1) idiv sign(relu(x_0_3))))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 - 2 + 0 + 3 - 7 + 2 - 9 - 1 + 10 + 36 + 12 + 0 + 18 + 42 + 12 + 54 + 6 + 60 + 216 + 72 + 0 + 108 + 252 + 72 + 324 + 36 + 360 + 1296 + 432 + 0 + 648 + 1512 + 432 + 1944 + 216", "x2": "abs abs mul INT- 6 x_0_9", "tree": "abs(abs((-6 mul x_0_9)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 9 + 4 - 7 + 6 + 1 + 5 + 1 + 6 + 12 - 2 + 11 + 0 + 13 + 8 + 12 + 8 + 13 + 19 + 5 + 18 + 7 + 20 + 15 + 19 + 15 + 20 + 26 + 12 + 25 + 14 + 27 + 22 + 26 + 22", "x2": "mul sign sqr n sub x_0_9 INT- 7", "tree": "(sign((n)**2) mul (x_0_9 sub -7))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 9 + 6 + 1 - 3 + 1 + 5 + 5 + 6 + 1 + 7 + 1 + 5 + 5 + 6 + 1 + 7 + 1 + 5 + 5 + 6 + 1 + 7 + 1 + 5 + 5 + 6 + 1 + 7 + 1 + 5 + 5 + 6", "x2": "mod sub x_0_6 n n", "tree": "((x_0_6 sub n) mod n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 8 - 7 + 0 - 5 - 4 - 7 + 8 + 8 + 90 + 110 + 110 + 156 + 182 + 210 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756 + 812 + 870 + 930 + 992 + 1056 + 1122", "x2": "mul relu n sub relu n sign x_0_8", "tree": "(relu(n) mul (relu(n) sub sign(x_0_8)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 7 + 16 + 17 + 18 + 33 + 34 + 56 + 15 + 58 + 73 + 67 + 68 + 41 + 112 + 71 + 72 + 52 + 137 + 54 + 125 + 168 + 127 + 114 + 157 + 81 + 54 + 34", "x2": "relu add idiv mul n add n INT+ 7 n abs abs mul mod x_0_1 n sub INT+ 5 INT- 2", "tree": "relu((((n mul (n add 7)) idiv n) add abs(abs(((x_0_1 mod n) mul (5 sub -2))))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 5 + 2 - 10 - 10 - 24 - 56 - 192 - 513 - 1920 - 5786 - 2 3568 - 7 7545 - 33 6938 - 119 1750 - 548 3328 - 2066 117 - 1 9 5390 - 3 9894 3684 - 20 2574 2400 - 84 9296 6811 - 450 2085 4890 - 1976 4043 94 - 1 900 7516 5200 - 4 9916 5431 1725 - 28 5627 7143 1610 - 135 9902 2949 7876 - 805 2915 3212 6928 - 3975 3288 3522 8363 - 2 4308 4955 9315 8690 - 12 4120 6398 645 8202", "x2": "mul n add x_0_2 mod n x_0_5", "tree": "(n mul (x_0_2 add (n mod x_0_5)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 4 + 3 + 2 + 4 - 1 + 8 - 3 + 7 + 2 + 10 + 2 + 8 + 7 + 15 + 8 + 14 + 4 + 8 + 24 + 31 + 23 + 28 + 17 + 20 + 35 + 41 + 32 + 36 + 24 + 26 + 40 + 45", "x2": "add mod sqr INT- 6 n x_0_6", "tree": "(((-6)**2 mod n) add x_0_6)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 2 + 7 - 5 + 6 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5 - 29 - 16 - 5", "x2": "mod x_0_3 add sign relu sqr sub n x_0_5 mul sub relu INT+ 2 n relu INT+ 6", "tree": "(x_0_3 mod (sign(relu(((n sub x_0_5))**2)) add ((relu(2) sub n) mul relu(6))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 48 - 35 - 24 - 15 - 8 - 3 + 0 + 1 + 0 - 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323", "x2": "sub sign n sqr add n INT- 8", "tree": "(sign(n) sub ((n add -8))**2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 2 + 8 + 3 - 6 - 2 - 5 + 5 - 8 - 9 - 9 - 13 - 12 - 13 - 14 - 15 - 21 - 22 - 30 - 27 - 32 - 23 - 27 - 25 - 28 - 45 - 40 - 51 - 34 - 43 - 40 - 47 - 37 - 33", "x2": "sub mod mul INT+ 5 INT+ 8 x_0_7 relu n", "tree": "(((5 mul 8) mod x_0_7) sub relu(n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 5 + 9 - 6 - 9 - 8 + 13 + 16 - 3 - 3 - 5 + 17 + 15 - 7 + 6 + 4 + 24 + 10 - 10 + 11 + 10 + 32 - 2 - 8 + 13 + 11 + 34 - 22 + 2 + 17 + 10 + 35", "x2": "add x_0_5 sub abs INT+ 6 sub abs x_0_6 add INT+ 1 INT+ 5", "tree": "(x_0_5 add (abs(6) sub (abs(x_0_6) sub (1 add 5))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1", "x2": "idiv n sqr INT+ 5", "tree": "(n idiv (5)**2)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 5 + 2 - 2 - 7 - 13 - 20 - 28 - 37 - 47 - 58 - 70 - 83 - 97 - 112 - 128 - 145 - 163 - 182 - 202 - 223 - 245 - 268 - 292 - 317 - 343 - 370", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 9 - 12 - 32 - 55 - 186 - 378 - 1480 - 3393 - 1 4790 - 3 7312 - 17 7468 - 48 5043 - 248 4538 - 727 5630 - 3975 2592 - 1 2368 5693 - 7 1554 6638 - 23 5002 8148 - 143 1093 2740 - 493 5059 1087 - 3148 4052 258 - 1 1350 6359 4978 - 7 5561 7248 6168 - 28 3765 8987 4425 - 196 4604 8464 342 - 766 1679 2660 9448 - 5500 8935 6992 9548", "x2": "sub sub relu n mul n abs x_0_2 relu idiv x_0_1 sign n", "tree": "((relu(n) sub (n mul abs(x_0_2))) sub relu((x_0_1 idiv sign(n))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 17 + 59 + 251 + 1279 + 7709 + 5 4011 + 43 2151 + 388 9439 + 3889 4489 + 4 2783 9499 + 51 3407 4131 + 667 4296 3871 + 9344 149 4389 + 14 160 2241 6059 + 224 2563 5865 7199 + 3812 3580 9717 2671 + 6 8622 4457 4910 8401 + 130 3826 4692 3305 9979 + 2607 6529 3846 6119 9979 + 5 4760 7117 778 8519 9999 + 120 4735 6575 7134 7440 461 + 2770 8920 1241 4099 1121 1131 + 6 6501 4082 9793 8378 6906 7719 + 166 2535 2074 4845 9467 2669 3599 + 4322 5915 3936 5994 6148 9403 4249 + 11 6709 9715 6288 1854 6021 3892 5451", "x2": "sub mul add x_0_1 n n INT+ 1", "tree": "(((x_0_1 add n) mul n) sub 1)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 0 + 1 - 1 + 0 + 3 + 1 + 0 + 0 + 6 + 0 + 0 + 9 + 0 + 0 + 1 + 0 + 0 + 5 + 0 + 0 + 3 + 0 + 0 + 1 + 0 + 0 + 25 + 0 + 0", "x2": "mod sqr mul sqr x_0_3 sub add relu abs INT+ 8 x_0_3 x_0_4 n", "tree": "((((x_0_3)**2 mul ((relu(abs(8)) add x_0_3) sub x_0_4)))**2 mod n)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 - 9 + 4 + 25 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr sub sign add abs idiv n n x_0_2 n", "tree": "((sign((abs((n idiv n)) add x_0_2)) sub n))**2", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 8 + 5 - 8 + 3 + 7 + 7 - 13 + 0 + 9 + 0 - 11 + 0 + 11 - 9 - 16 + 1 + 12 - 19 - 15 - 3 - 5 - 35 - 26 - 25 - 4 - 56 - 24 - 28 - 4", "x2": "sub x_0_4 sub relu mod x_0_1 abs n INT+ 2", "tree": "(x_0_4 sub (relu((x_0_1 mod abs(n))) sub 2))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 3 + 2 - 1 - 5 - 10 + 3 + 11 + 22 + 37 + 57 + 64 + 63 + 51 + 24 - 23 - 64 - 63 - 51 - 24 + 23 + 97 + 170 + 231 + 265 + 252 + 165 + 5 - 216 - 265 - 252 - 165", "x2": "sub relu sub x_0_1 INT- 1 0 x_0_5", "tree": "(relu((x_0_1 sub -10)) sub x_0_5)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 2 - 4 + 5 - 3 + 8 - 1 + 10 + 1 - 69 + 84 - 188 + 207 - 186 + 209 - 184 + 211 - 182 + 213 - 180 + 215 - 178 + 217 - 176 + 219 - 174 + 221 - 172 + 223", "x2": "add relu n sub sub n INT+ 7 add sqr relu sub n mul x_0_3 x_0_3 x_0_1", "tree": "(relu(n) add ((n sub 7) sub ((relu((n sub (x_0_3 mul x_0_3))))**2 add x_0_1)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 6 + 3 + 22 - 61 + 6 + 373 - 2230 + 9 + 2 80 - 18 709 + 12 + 216 8521 - 2602 2238 + 15 + 3 9033 3586 - 58 5500 3773 + 18 + 1053 9006 7933 - 1 8970 2122 2774 + 21 + 39 8374 4567 8276 - 836 5863 5924 3773 + 24 + 2 78 726 2185 577 - 48 1873 7429 2441 3822 + 27 + 1301 591 589 5917 3222", "x2": "sub n mul relu x_0_1 x_0_2", "tree": "(n sub (relu(x_0_1) mul x_0_2))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 2 - 5 - 7 - 6 - 3 + 8 + 3 - 3 + 10 + 9 + 2 - 2 + 11 + 10 + 3 - 1 + 10 + 9 + 4 - 2 + 9 + 10 + 5 - 3 + 8 + 9 + 6 - 4 + 7 + 8 + 7 - 5 + 6 + 7 + 8", "x2": "add x_0_4 sub abs idiv idiv relu sqr x_0_5 sqr n x_0_2 sign add x_0_11 INT- 3", "tree": "(x_0_4 add (abs(((relu((x_0_5)**2) idiv (n)**2) idiv x_0_2)) sub sign((x_0_11 add -3))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 0 + 1 - 2 + 5 + 1 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv x_0_5 n", "tree": "(x_0_5 idiv n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 5 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 4 - 5 - 5 - 5", "x2": "idiv n sub sign x_0_1 abs INT+ 5", "tree": "(n idiv (sign(x_0_1) sub abs(5)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702", "x2": "add mul n n n", "tree": "((n mul n) add n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 0 - 10 - 5 + 11 + 9 + 11 + 12 + 13 + 12 + 9 + 9 + 9 + 9 + 12 + 12 + 12 + 12 + 9 + 9 + 9 + 9 + 12 + 12 + 12 + 12 + 9 + 9 + 9 + 9", "x2": "add abs mod relu mod x_0_4 n INT- 6 sqr add sub INT+ 6 INT+ 4 sign mul INT- 1 0 INT- 8", "tree": "(abs((relu((x_0_4 mod n)) mod -6)) add (((6 sub 4) add sign((-10 mul -8))))**2)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 - 5 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign sub abs mul relu INT- 1 0 abs INT- 8 mod mul n x_0_2 add x_0_2 sub n x_0_3", "tree": "sign((abs((relu(-10) mul abs(-8))) sub ((n mul x_0_2) mod (x_0_2 add (n sub x_0_3)))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 - 6 + 3 + 3 + 2 + 5 + 7 + 3 + 3 - 144 - 24 - 15 + 3 + 3 + 3 - 24 + 3 + 3 + 3 - 24 - 24 - 24 + 3 + 3 + 3 - 24 + 3 + 3 + 3 - 24 - 24 - 24 + 3", "x2": "sub INT+ 3 relu mul sqr relu x_0_3 x_0_7", "tree": "(3 sub relu(((relu(x_0_3))**2 mul x_0_7)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 - 4 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1", "x2": "mod relu sqr x_0_3 n", "tree": "(relu((x_0_3)**2) mod n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 9 - 8 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16 + 1 + 1 + 16", "x2": "idiv sqr mul sign sqr idiv n x_0_4 abs mod idiv INT- 4 sqr x_0_2 INT- 9 x_0_1", "tree": "(((sign(((n idiv x_0_4))**2) mul abs(((-4 idiv (x_0_2)**2) mod -9))))**2 idiv x_0_1)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 1 - 4 + 4 - 1 + 10 + 5 + 3 - 7 - 7 - 2 + 1 - 7 - 2 - 13 - 8 - 6 + 4 + 4 - 1 - 4 + 4 - 1 + 10 + 5 + 3 - 7 - 7 - 2 + 1 - 7 - 2 - 13 - 8 - 6 + 4", "x2": "sub INT- 3 idiv x_0_9 sqr idiv sub x_0_4 n sqr n", "tree": "(-3 sub (x_0_9 idiv (((x_0_4 sub n) idiv (n)**2))**2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 10 - 6 + 0 + 0 + 5 + 11 + 23 + 42 + 74 + 126 + 211 + 349 + 573 + 936 + 1524 + 2476 + 4017 + 6511 + 1 547 + 1 7078 + 2 7646 + 4 4746 + 7 2415 + 11 7185 + 18 9625 + 30 6836 + 49 6488 + 80 3352", "x2": "relu add n add x_0_2 x_0_1", "tree": "relu((n add (x_0_2 add x_0_1)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 6 - 4 + 0 + 8 + 24 + 56 + 120 + 248 + 504 + 1016 + 2040 + 4088 + 8184 + 1 6376 + 3 2760 + 6 5528 + 13 1064 + 26 2136 + 52 4280 + 104 8568 + 209 7144 + 419 4296 + 838 8600 + 1677 7208 + 3355 4424 + 6710 8856 + 1 3421 7720", "x2": "add add x_0_1 INT+ 5 sub mul x_0_1 sign n add INT- 1 INT- 2", "tree": "((x_0_1 add 5) add ((x_0_1 mul sign(n)) sub (-1 add -2)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 7 + 8 + 1 - 9 - 7 - 8 - 10 - 19 - 10 + 11 + 18 + 18 + 22 + 36 + 33 - 6 - 37 - 44 - 49 - 73 - 83 - 25 + 57 + 98 + 112 + 151 + 189 + 118 - 55 - 195 - 255 - 324", "x2": "sub idiv mul x_0_6 INT+ 7 INT- 5 x_0_7", "tree": "(((x_0_6 mul 7) idiv -5) sub x_0_7)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 1 - 17 + 3 - 45 + 3 - 189 + 3 - 483 + 7 - 469 + 11 - 319 + 3 - 2697 + 7 - 2863 + 17 - 697 + 3 - 7935 + 7 - 8393 + 7 - 1 1207 + 25 - 1425", "x2": "sub mod x_0_1 n mul relu relu idiv sqr abs n x_0_1 mul sub n x_0_1 x_0_1", "tree": "((x_0_1 mod n) sub (relu(relu(((abs(n))**2 idiv x_0_1))) mul ((n sub x_0_1) mul x_0_1)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 8 + 5 + 7 + 17 + 69 + 377 + 2590 + 2 665 + 18 5964 + 185 9907 + 2046 1435 + 2 4555 7729 + 31 9243 6259 + 446 9596 7323 + 6704 5997 1040 + 10 7276 509 4097 + 182 3724 7903 5602 + 3282 7493 1860 7817 + 6 2372 9075 1351 9183 + 124 7468 8778 7547 7337 + 2619 7028 8078 6405 9217 + 5 7633 7916 5223 2791 85 + 132 5583 4452 9210 5545 586 + 3181 4127 4338 9832 629 801 + 7 9535 5805 5503 3880 2132 8592 + 206 7930 8578 1004 6108 8245 2775 + 5583 4265 7192 1577 4148 8167 4755 + 15 6336 2621 5507 8506 5998 9318 3129 + 453 3759 5560 5533 2194 7849 2363 8463", "x2": "add x_0_4 mul sub sign x_0_4 n sub n x_0_1", "tree": "(x_0_4 add ((sign(x_0_4) sub n) mul (n sub x_0_1)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 + 0 + 7 - 4 - 4 + 10 + 75 8357 + 12 + 7279 - 75 8349 + 368 - 7271 + 83 9016 - 360 + 7 7184 - 83 4912 + 6 2048 - 7 7176 + 89 108 - 6 2040 + 12 7116 - 88 7122 + 10 7638 - 12 6938 + 92 9073 - 10 7473 + 16 5782 - 92 6725 + 14 3638 - 16 3590 + 96 558 - 14 1582", "x2": "sub add INT+ 8 idiv relu sqr sqr mul INT- 8 idiv mul INT+ 3 abs x_0_6 x_0_3 n x_0_3", "tree": "((8 add (relu((((-8 mul ((3 mul abs(x_0_6)) idiv x_0_3)))**2)**2) idiv n)) sub x_0_3)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 10 + 2 + 0 + 4 + 0 + 6 + 0 + 8 + 0 + 10 + 0 + 12 + 0 + 14 + 0 + 16 + 0 + 18 + 0 + 20 + 0 + 22 + 0 + 24 + 0 + 26 + 0", "x2": "abs mod n sqr sub x_0_1 n", "tree": "abs((n mod ((x_0_1 sub n))**2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 + 10 - 10 + 4 + 3 + 0 - 2 + 8 - 7 + 9 - 10 + 3 - 42 - 11 + 24 + 95 + 41 + 20 + 434 - 14 - 718 - 1147 + 742 + 2184 + 1 6072 - 499 - 30 1194 + 1 4731 - 56 2190 - 252 7983 + 1224 7458 - 112 385 - 48 5232 9656 - 677 8407 + 1691 476 8922 - 372 754 5058 - 6 8944 3393 688 + 2 8335 7569 6985", "x2": "add sub mul x_0_8 add x_0_12 x_0_6 sqr INT+ 5 n", "tree": "(((x_0_8 mul (x_0_12 add x_0_6)) sub (5)**2) add n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 2 + 6 + 1 - 5 - 6 + 4 + 0 - 5 - 5 + 73 + 35 - 39 - 61 + 74 + 97 - 20 - 98 + 1280 + 767 - 654 - 1271 + 1561 + 3543 + 320 - 3070 + 3 2044 + 2 2306 - 1 4732 - 3 6501 + 4 3799 + 14 1917 + 3 2587 - 11 6000 + 105 3038", "x2": "add add add x_0_5 n sub idiv INT+ 1 0 abs INT- 9 INT- 8 mul n sub x_0_8 sub n n", "tree": "(((x_0_5 add n) add ((10 idiv abs(-9)) sub -8)) add (n mul (x_0_8 sub (n sub n))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 7 - 7 + 9 - 4 - 4 + 6 + 7 - 5 + 3 - 1 + 198 + 228 + 286 + 252 + 285 + 352 + 408 + 414 + 418 + 420 + 4599 + 5500 + 7107 + 6624 + 7750 + 9828 + 1 1745 + 1 2376 + 1 2963 + 1 3500 + 14 3530 + 17 7024 + 23 5620 + 22 6372 + 27 2475 + 35 5104", "x2": "abs mul n sub mul n mod INT- 8 INT- 7 abs x_0_10", "tree": "abs((n mul ((n mul (-8 mod -7)) sub abs(x_0_10))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 2 - 7 + 8 + 9 - 3 + 8 + 0 - 2 - 6 - 2 + 8 + 24 - 12 + 48 + 52 + 4 + 48 + 16 + 8 - 8 + 8 + 48 + 72 - 32 - 8 - 16 + 32 + 16 + 80 + 48 - 16 + 48 + 56 - 32 - 112 - 16 - 48", "x2": "mul sub n abs sub sub n sqr INT+ 2 x_0_11 relu relu INT+ 4", "tree": "((n sub abs(((n sub (2)**2) sub x_0_11))) mul relu(relu(4)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 0 - 10 + 10 + 4 - 2 + 6 - 4 + 6 + 10 + 0 + 10 + 4 + 0 + 6 + 0 + 6 + 10 + 0 + 10 + 4 + 0 + 6 + 0 + 6 + 10 + 0 + 10 + 4 + 0 + 6 + 0 + 6 + 10 + 0 + 10", "x2": "relu mul sqr sign x_0_9 relu x_0_8", "tree": "relu(((sign(x_0_9))**2 mul relu(x_0_8)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 5 - 7 - 3 + 0 - 5 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8", "x2": "sub abs sign sqr x_0_8 x_0_2", "tree": "(abs(sign((x_0_8)**2)) sub x_0_2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 7 - 2 + 2 - 9 - 3 - 2 + 8 - 10 + 0 - 1 + 5 + 6 + 3 3124 + 3136 + 3600 + 8 2944 + 1 404 + 5184 + 9 2416 + 16 0 + 0 + 1936 + 5 2900 + 8 2944 + 2 7429 9844 0 + 265 9247 7184 + 377 9136 0 + 21 5747 6157 8496 + 3641 3017 8624 + 967 4588 1600 + 32 8305 1636 3264 + 104 8576 0 0 + 0 + 173 3119 5904 + 13 7122 900 0 + 35 6644 179 3024 + 4 1201 6454 5952 9166 3936 0 0 + 4 845 5525 1906 2938 5148 8256", "x2": "sqr mul INT+ 2 mul idiv n INT- 1 x_0_12", "tree": "((2 mul ((n idiv -1) mul x_0_12)))**2", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "+ 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1", "x2": "sqr mod n INT- 9", "tree": "((n mod -9))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 6 + 5 + 10 + 6 - 8 + 6 + 28 + 2 + 24 + 34 + 42 + 30 + 62 + 44 + 54 + 96 + 86 + 84 + 158 + 130 + 138 + 254 + 216 + 222 + 412 + 346 + 360 + 666 + 562 + 582 + 1078 + 908", "x2": "relu add x_0_6 add x_0_3 idiv abs mul idiv x_0_6 x_0_3 mul n x_0_7 x_0_5", "tree": "relu((x_0_6 add (x_0_3 add (abs(((x_0_6 idiv x_0_3) mul (n mul x_0_7))) idiv x_0_5))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 1 + 9 + 2 + 6 + 8 - 3 - 7 + 6 - 4 + 7 + 2 + 10 + 0 + 9 + 2 + 6 + 8 + 0 + 0 + 6 + 0 + 7 + 2 + 10 + 0 + 9 + 2 + 6 + 8 + 0 + 0 + 6 + 0 + 7 + 2 + 10 + 0", "x2": "relu x_0_12", "tree": "relu(x_0_12)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "+ 3 + 0 + 5 + 1 + 5 + 1 + 6 + 3 + 8 + 4 + 8 + 4 + 9 + 6 + 11 + 7 + 11 + 7 + 12 + 9 + 14 + 10 + 14 + 10 + 15 + 12 + 17 + 13 + 17", "x2": "sub sub n n sub x_0_3 n", "tree": "((n sub n) sub (x_0_3 sub n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 8 + 9 - 2 + 7 + 2 - 3 + 7 + 23 - 2 - 12 + 18 + 40 - 3 - 19 + 29 + 60 + 0 - 25 + 39 + 83 + 8 - 31 + 48 + 109 + 21 - 36 + 56 + 138 + 40 - 40 + 61 + 170", "x2": "sub x_0_4 add INT+ 5 add idiv x_0_7 n sub x_0_2 add n x_0_6", "tree": "(x_0_4 sub (5 add ((x_0_7 idiv n) add (x_0_2 sub (n add x_0_6)))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 8 - 10 + 10 - 9 + 11 - 8 + 12 - 7 + 13 - 6 + 14 - 5 + 15 - 4 + 16 - 3 + 17 - 2 + 18 - 1 + 19 + 0 + 20 + 1 + 21 + 2 + 22 + 3 + 23", "x2": "sub x_0_2 sign idiv x_0_3 mod n idiv n sqr idiv mod x_0_4 sqr relu INT- 1 INT- 4", "tree": "(x_0_2 sub sign((x_0_3 idiv (n mod (n idiv (((x_0_4 mod (relu(-1))**2) idiv -4))**2)))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 7 - 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7 + 7 + 9 + 7", "x2": "idiv abs x_0_3 sign abs relu x_0_3", "tree": "(abs(x_0_3) idiv sign(abs(relu(x_0_3))))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 3 + 8 + 0 + 5 - 4 + 50 + 0 + 650 + 0 + 5850 + 0 + 7 6050 + 0 + 98 8650 + 0 + 1285 2450 + 0 + 1 6708 1850 + 0 + 21 7206 4050 + 0 + 282 3683 2650 + 0 + 3670 7882 4450 + 0 + 4 7720 2471 7850 + 0 + 62 363 2133 2050 + 0 + 806 4721 7731 6650 + 0", "x2": "mul add mod INT- 1 0 relu INT+ 9 add x_0_5 INT+ 5 relu x_0_2", "tree": "(((-10 mod relu(9)) add (x_0_5 add 5)) mul relu(x_0_2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 14 + 56 + 280 + 1960 + 1 7640 + 19 4040 + 252 2520 + 3783 7800 + 6 4324 2600 + 122 2160 9400 + 2566 5379 7400 + 5 9030 3734 200 + 147 5759 3350 5000 + 3984 5502 463 5000 + 11 5551 9559 3441 5000 + 358 2110 6339 6686 5000 + 1 1820 9650 9209 654 5000 + 41 3733 7782 2317 2907 5000 + 1530 8149 7942 5739 7577 5000 + 5 9701 7841 9760 3850 5522 5000 + 244 7773 1521 175 7872 6422 5000 + 1 525 4245 5403 7558 8523 6167 5000 + 47 3644 1049 3169 148 3562 7537 5000 + 2226 1272 9317 8943 6972 7449 4262 5000 + 10 9080 2373 6576 8241 1664 5021 8862 5000 + 556 3092 1056 5418 299 4889 6116 1987 5000", "x2": "mul add INT- 3 idiv mul n mul x_0_1 INT+ 2 sub x_0_1 mod relu n x_0_1 x_0_1", "tree": "((-3 add ((n mul (x_0_1 mul 2)) idiv (x_0_1 sub (relu(n) mod x_0_1)))) mul x_0_1)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 4 - 1 + 5 - 1 + 0 + 5 - 6 + 6 - 1 - 5 + 11 - 12 + 7 + 4 - 16 + 23 - 19 + 3 + 20 - 39 + 42 - 22 - 17 + 59 - 81 + 64 - 5 - 76", "x2": "sub x_0_3 x_0_1", "tree": "(x_0_3 sub x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 - 4 + 8 + 8 - 6 - 1 - 5 + 5 + 3 - 8 - 7 + 16 + 16 + 64 + 64 + 36 + 1 + 25 + 25 + 9 + 64 + 49 + 256 + 256 + 4096 + 4096 + 1296 + 1 + 625 + 625 + 81 + 4096 + 2401 + 6 5536 + 6 5536 + 1677 7216 + 1677 7216", "x2": "sqr x_0_11", "tree": "(x_0_11)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 128 + 324 + 600 + 968 + 1440 + 2028 + 2744 + 3600 + 4608 + 5780 + 7128 + 8664 + 1 400 + 1 2348 + 1 4520 + 1 6928 + 1 9584 + 2 2500 + 2 5688 + 2 9160 + 3 2928 + 3 7004 + 4 1400 + 4 6128 + 5 1200 + 5 6628", "x2": "mul sqr sub n INT- 7 add n n", "tree": "(((n sub -7))**2 mul (n add n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 7 - 5 + 3 + 1 - 7 - 5 + 3 + 1 - 7 - 5 + 3 + 1 - 7 - 5 + 3 + 1 - 7 - 5 + 3 + 1 - 7 - 5 + 3 + 1 - 7 - 5 + 3", "x2": "sub INT- 4 x_0_2", "tree": "(-4 sub x_0_2)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 5 + 3 - 2 + 6 + 4 - 3 + 6 - 21 - 21 - 24 - 30 - 23 - 26 - 34 - 26 - 54 - 55 - 59 - 66 - 60 - 64 - 73 - 66 - 95 - 97 - 102 - 110 - 105 - 110 - 120 - 114 - 144 - 147", "x2": "sub x_0_8 add n sqr mod INT+ 4 INT- 8", "tree": "(x_0_8 sub (n add ((4 mod -8))**2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 6 - 10 + 9 + 1 - 9 - 1 - 9 + 3 + 6 - 8 + 0 - 1 + 30 + 15 - 1 + 13 + 0 + 23 + 30 + 3 + 20 + 19 + 82 + 53 + 22 + 51 + 26 + 73 + 88 + 35 + 70 + 69 + 196 + 139 + 78 + 137", "x2": "mod idiv sign n INT- 3 add add x_0_10 x_0_10 n", "tree": "((sign(n) idiv -3) mod ((x_0_10 add x_0_10) add n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 1 + 1 + 10 + 9 + 9 + 18 + 17 + 17 + 26 + 25 + 25 + 34 + 33 + 33 + 42 + 41 + 41 + 50 + 49 + 49 + 58 + 57 + 57 + 66 + 65 + 65 + 74 + 73 + 73", "x2": "sub abs sub x_0_3 relu INT- 3 INT- 8", "tree": "(abs((x_0_3 sub relu(-3))) sub -8)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 4 + 42 + 9 + 19 + 37 + 14 + 20 + 34 + 56 + 23 + 33 + 51 + 28 + 34 + 48 + 70 + 37 + 47 + 65 + 42 + 48 + 62 + 84 + 51 + 61", "x2": "add n relu add n sqr mod mod add n n mul n n INT+ 7", "tree": "(n add relu((n add ((((n add n) mod (n mul n)) mod 7))**2)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 2 - 2 - 10 + 6 + 3 + 3 + 5 + 1 + 2 + 2 + 0 + 4 + 3 + 3 + 5 + 1 + 2 + 2 + 0 + 4 + 3 + 3 + 5 + 1 + 2 + 2 + 0 + 4 + 3 + 3", "x2": "abs mod add idiv mul INT+ 9 idiv x_0_4 sign INT- 8 sign sub n add x_0_1 INT+ 4 INT+ 5 INT- 1 0", "tree": "abs(((((9 mul (x_0_4 idiv sign(-8))) idiv sign((n sub (x_0_1 add 4)))) add 5) mod -10))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 5 + 9 - 5 + 16 + 64 - 80 + 200 + 416 - 1120 + 2272 + 1760 - 1 2256 + 2 7168 - 4064 - 11 2096 + 31 5424 - 24 9824 - 86 4224 + 342 192 - 452 1952 - 491 5168 + 3427 5360 - 6353 7120 - 314 5696 + 3 1352 4256 - 7 8249 9808 + 4 8313 1424 + 25 3335 9648 - 87 6819 2480", "x2": "mul sub x_0_3 add INT- 4 x_0_4 INT+ 8", "tree": "((x_0_3 sub (-4 add x_0_4)) mul 8)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 - 6 - 8 + 9 + 4 + 23 + 1 + 25 - 16 + 30 - 35 + 52 - 59 + 93 - 105 + 158 - 192 + 269 - 344 + 467 - 607 + 817 - 1068 + 1430 - 1879 + 2504 - 3303 + 4389 - 5801", "x2": "add n sub add sub INT+ 6 n x_0_2 x_0_3", "tree": "(n add (((6 sub n) add x_0_2) sub x_0_3))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 + 2 - 4 + 2 + 8 + 6 + 4 + 3 + 3 + 3 + 2 + 0 + 6 + 5 - 3 - 5 + 4 + 4 - 6 - 5 + 3 - 1 - 12 + 2 + 2 - 13 - 3 + 1 - 12 - 6", "x2": "sub mod abs x_0_1 sub INT+ 7 add x_0_2 n sub INT- 5 relu sign relu x_0_4", "tree": "((abs(x_0_1) mod (7 sub (x_0_2 add n))) sub (-5 sub relu(sign(relu(x_0_4)))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 9 + 0 + 0 + 5 + 6 + 0 + 0 + 9 + 10 + 0 + 0 + 13 + 14 + 0 + 0 + 17 + 18 + 0 + 0 + 21 + 22 + 0 + 0 + 25 + 26 + 0 + 0", "x2": "relu sub n sqr x_0_2", "tree": "relu((n sub (x_0_2)**2))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "idiv sqr n sign n", "tree": "((n)**2 idiv sign(n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9801 + 8464 + 5329 + 1296 + 625 + 1 3456 + 5 9049 + 16 9744 + 39 5641 + 81 0 + 151 5361 + 265 384 + 439 7409 + 699 736 + 1072 5625 + 1596 8016 + 2316 4969 + 3285 5824 + 4568 4081 + 6241 0 + 8392 3921 + 1 1126 304 + 1 4561 2489 + 1 8834 8176 + 2 4102 5625 + 3 541 576", "x2": "sqr sub sqr abs INT+ 1 0 mul n abs sqr relu n", "tree": "(((abs(10))**2 sub (n mul abs((relu(n))**2))))**2", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 + 5 + 2 + 7 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1", "x2": "sign idiv abs relu abs x_0_4 abs relu x_0_5", "tree": "sign((abs(relu(abs(x_0_4))) idiv abs(relu(x_0_5))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 34 + 76 + 132 + 202 + 286 + 384 + 496 + 622 + 762 + 916 + 1084 + 1266 + 1462 + 1672 + 1896 + 2134 + 2386 + 2652 + 2932 + 3226 + 3534 + 3856 + 4192 + 4542 + 4906 + 5284", "x2": "sub x_0_1 mul INT- 7 add sub n relu INT- 1 0 n", "tree": "(x_0_1 sub (-7 mul ((n sub relu(-10)) add n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 - 4 - 36 - 160 - 520 - 1464 - 3808 - 9424 - 2 2536 - 5 2552 - 12 208 - 27 816 - 60 2680 - 132 7768 - 290 736 - 629 2336 - 1356 6952 - 2909 9112 - 6212 9392 - 1 3212 1984 - 2 7997 1352 - 5 9139 8584 - 12 4571 176 - 26 1724 7760 - 54 8615 1880 - 114 7561 8184 - 239 5786 7088 - 499 2899 7664", "x2": "mul INT+ 4 add sub x_0_1 abs sqr abs add n INT- 6 sub abs x_0_2 n", "tree": "(4 mul ((x_0_1 sub abs((abs((n add -6)))**2)) add (abs(x_0_2) sub n)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 9 + 3 + 9 - 9 - 4 + 15 + 4 - 1 + 18 + 14 - 4 + 8 + 14 - 4 + 1 + 20 + 9 + 4 + 23 + 19 + 1 + 13 + 19 + 1 + 6 + 25 + 14 + 9 + 28 + 24 + 6", "x2": "sub add n idiv mod INT- 9 idiv mul n INT+ 1 n sign INT+ 2 x_0_5", "tree": "((n add ((-9 mod ((n mul 1) idiv n)) idiv sign(2))) sub x_0_5)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 10 + 2 + 6 + 4 + 0 + 2 - 1 + 8 + 10 + 2 + 6 + 4 + 0 + 2 - 1 + 8 + 10 + 2 + 6 + 4 + 0 + 2 - 1 + 8 + 10 + 2 + 6 + 4 + 0 + 2 - 1 + 8 + 10", "x2": "mul sign mul add sub n INT- 1 mod abs INT+ 7 n INT+ 6 x_0_8", "tree": "(sign((((n sub -1) add (abs(7) mod n)) mul 6)) mul x_0_8)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 4 - 10 - 4 + 0 - 79 - 25 - 5 - 84 - 30 - 10 - 89 - 35 - 15 - 94 - 40 - 20 - 99 - 45 - 25 - 104 - 50 - 30 - 109 - 55 - 35 - 114 - 60 - 40 - 119 - 65", "x2": "add mul mul idiv INT- 1 INT+ 6 sign n add INT+ 5 relu sqr relu x_0_5 x_0_3", "tree": "((((-1 idiv 6) mul sign(n)) mul (5 add relu((relu(x_0_5))**2))) add x_0_3)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 7 + 9 - 3 + 1 + 5 - 9 + 0 + 2 + 9 + 3 - 1273 - 7 + 9 - 2008 - 2294 + 2 - 1489 - 3235 - 2932 - 179 - 3425 - 2016 - 1006 - 2381 - 2376 - 4170 - 4835 - 8626 - 7291 - 5214 - 5867 - 7952 - 8795 - 5477 - 1 3049 - 1 1904", "x2": "add mod sub x_0_6 mul x_0_6 x_0_8 mul mul n n INT- 9 x_0_11", "tree": "(((x_0_6 sub (x_0_6 mul x_0_8)) mod ((n mul n) mul -9)) add x_0_11)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 2 - 5 + 9 + 7 - 7 + 7 + 1216 + 1593 + 2032 + 2493 + 1809 + 2007 + 2193 + 2407 + 3816 + 4393 + 5032 + 5693 + 5209 + 5607 + 5993 + 6407 + 8016 + 8793 + 9632 + 1 493 + 1 209 + 1 807 + 1 1393 + 1 2007 + 1 3816 + 1 4793 + 1 5832 + 1 6893", "x2": "sub sqr mul INT- 5 n add x_0_4 mod relu INT- 2 mod mod sign INT- 4 x_0_6 n", "tree": "(((-5 mul n))**2 sub (x_0_4 add (relu(-2) mod ((sign(-4) mod x_0_6) mod n))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 5 - 1 - 10 - 6 - 10 - 8 + 3 - 4 + 8 - 5 - 1 - 10 - 6 - 10 - 8 + 3 - 4 + 8 - 5 - 1 - 10 - 6 - 10 - 8 + 3 - 4 + 8 - 5 - 1 - 10 - 6 - 10 - 8 + 3 - 4 + 8", "x2": "sub x_0_9 mod n n", "tree": "(x_0_9 sub (n mod n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323 - 360 - 399 - 440 - 483 - 528 - 575 - 624 - 675 - 728 - 783", "x2": "sub abs INT+ 1 sqr n", "tree": "(abs(1) sub (n)**2)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 5 + 18 + 58 + 179 + 543 + 1636 + 4916 + 1 4757 + 4 4281 + 13 2854 + 39 8574 + 119 5735 + 358 7219 + 1076 1672 + 3228 5032 + 9685 5113 + 2 9056 5357 + 8 7169 6090 + 26 1508 8290 + 78 4526 4891 + 235 3579 4695 + 706 738 4108 + 2118 2215 2348 + 6354 6645 7069 + 1 9063 9937 1233 + 5 7191 9811 3726 + 17 1575 9434 1206 + 51 4727 8302 3647", "x2": "relu relu add x_0_1 add relu n abs add x_0_1 relu mul INT+ 1 x_0_1", "tree": "relu(relu((x_0_1 add (relu(n) add abs((x_0_1 add relu((1 mul x_0_1))))))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 7 - 5 + 2 + 2 + 2 + 4 + 6 + 8 + 2 + 8 + 4 + 6 + 0 + 4 + 10 + 10 + 14 + 5 + 15 + 8 + 13 + 5 + 13 + 1 + 6 + 19 + 20 + 26 + 15 + 4", "x2": "mod add x_0_1 relu x_0_3 relu n", "tree": "((x_0_1 add relu(x_0_3)) mod relu(n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 3 - 2 + 5 - 2 + 1 - 1 - 4 - 3 - 7 - 6 - 4 - 6 - 3 - 5 - 8 - 7 - 11 - 10 - 8 - 10 - 7 - 9 - 12 - 11 - 15 - 14 - 12 - 14 - 11 - 13 - 16", "x2": "sub mod INT- 6 sub add sqr INT+ 3 sign INT+ 1 0 x_0_4 sub add n n n", "tree": "((-6 mod (((3)**2 add sign(10)) sub x_0_4)) sub ((n add n) sub n))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 9 + 9 - 10 - 6 - 3 + 7 - 8 + 0 - 21 + 7 - 5 - 12 - 18 - 7 - 15 + 7 - 27 - 15 - 7 + 3 - 14 - 8 - 31 + 3 - 10 - 19 - 30 - 16 - 21 + 0 - 35 - 23 - 15 - 5", "x2": "sub sub idiv add x_0_5 n add x_0_5 sqr idiv sub n sign x_0_5 INT+ 5 x_0_7 n", "tree": "((((x_0_5 add n) idiv (x_0_5 add (((n sub sign(x_0_5)) idiv 5))**2)) sub x_0_7) sub n)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 4 - 3 - 6 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 4", "x2": "abs idiv n INT- 9", "tree": "abs((n idiv -9))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 2 - 2 + 1 - 6 - 1 + 9 + 1 - 4 + 8 + 8 + 1 - 6 + 1 + 9 - 1 + 4 + 8 + 8 - 1 - 6 + 1 + 9 + 1 + 4 + 8 - 8 - 1 - 6 + 1 - 9 - 1 + 4 + 8 - 8 - 1 - 6 - 1 + 9", "x2": "idiv mul x_0_8 mul n sign x_0_11 n", "tree": "((x_0_8 mul (n mul sign(x_0_11))) idiv n)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 9 - 7 + 8 + 7 - 10 - 7 - 5 + 9 + 4 + 0 - 1 - 6554 - 6571 - 6568 + 6556 - 6552 - 6557 - 6561 - 6562 - 1 3115 - 1 3132 - 1 3129 - 5 - 1 3113 - 1 3118 - 1 3122 - 1 3123 - 1 9676 - 1 9693 - 1 9690 - 6566 - 1 9674 - 1 9679 - 1 9683 - 1 9684 - 2 6237 - 2 6254 - 2 6251 - 1 3127", "x2": "sub x_0_8 idiv sqr sqr sqr INT+ 3 sign sub n idiv x_0_11 mul x_0_5 INT- 4", "tree": "(x_0_8 sub ((((3)**2)**2)**2 idiv sign((n sub (x_0_11 idiv (x_0_5 mul -4))))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 4 - 8 + 3 - 3 + 176 + 173 + 161 + 172 + 166 + 345 + 342 + 330 + 341 + 335 + 514 + 511 + 499 + 510 + 504 + 683 + 680 + 668 + 679 + 673 + 852 + 849 + 837 + 848 + 842 + 1021 + 1018 + 1006", "x2": "add sqr sub sub abs sign INT+ 7 INT+ 8 INT+ 6 x_0_5", "tree": "((((abs(sign(7)) sub 8) sub 6))**2 add x_0_5)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 - 6 - 8 + 1 + 1 + 9 - 7 - 3 + 5 - 17 - 17 - 17 + 0 + 0 + 0 - 17 - 17 + 0 - 17 - 17 - 17 + 0 + 0 + 0 - 17 - 17 + 0 - 17 - 17 - 17 + 0 + 0 + 0 - 17 - 17 + 0 - 17", "x2": "mul sqr idiv idiv x_0_9 idiv sqr INT+ 9 n n sub INT- 8 sub mod INT- 4 INT- 1 INT- 9", "tree": "((((x_0_9 idiv ((9)**2 idiv n)) idiv n))**2 mul (-8 sub ((-4 mod -1) sub -9)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 4 + 4 + 3 + 9 + 3 + 2 - 10 - 19 - 22 - 23 - 24 - 51 - 54 - 60 - 62 - 70 - 73 - 112 - 119 - 122 - 129 - 133 - 138 - 196 - 200 - 208 - 220 - 228 - 232 - 302 - 310 - 323 - 332 - 344 - 353", "x2": "sub mul INT- 2 mul n relu idiv n INT+ 6 mod x_0_7 abs INT- 7", "tree": "((-2 mul (n mul relu((n idiv 6)))) sub (x_0_7 mod abs(-7)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 10 + 3 - 14 - 3 - 22 - 13 - 34 - 27 - 50 - 45 - 70 - 67 - 94 - 93 - 122 - 123 - 154 - 157 - 190 - 195 - 230 - 237 - 274 - 283 - 322 - 333 - 374 - 387 - 430 - 445", "x2": "sub sub x_0_2 add idiv INT+ 3 INT- 5 n mod idiv INT- 2 n n", "tree": "((x_0_2 sub ((3 idiv -5) add n)) sub ((-2 idiv n) mod n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 6 + 1 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783 + 840 + 899 + 960", "x2": "relu add sub mod mod n n sqr add x_0_1 n sign x_0_3 mul n n", "tree": "relu(((((n mod n) mod ((x_0_1 add n))**2) sub sign(x_0_3)) add (n mul n)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 6 + 5 + 8 + 4 - 45 - 76 - 30 + 8 + 9 + 10 - 66 - 75 - 84 + 14 + 15 + 16 - 120 - 129 - 138 + 20 + 21 + 22 - 174 - 183 - 192 + 26 + 27 + 28 - 228 - 237 - 246", "x2": "mul INT+ 1 mod n add n mul add INT- 2 INT- 9 x_0_3", "tree": "(1 mul (n mod (n add ((-2 add -9) mul x_0_3))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 3 - 9 - 10 - 7 + 0 - 4 + 8 + 1 9734 + 2 9142 + 1 7586 - 2 8044 - 42 - 11 4264 - 2 1577 5840 - 3 6251 7900 - 2 4684 5196 + 4 4163 6612 + 77 2188 + 22 2104 6136 + 4 6245 771 6900 + 8 5264 2022 8336 + 6 3436 1416 128 - 12 3635 8398 9240 - 249 3408 6600 - 72 9587 1587 9328 - 16 3818 5613 5897 4168 - 32 4856 5973 7347 7184 - 25 9248 4509 661 3704 + 54 834 3222 1055 2656 + 1202 5832 6534 352 + 363 643 3555 1474 4096 + 86 6927 8266 9673 823 9280 + 182 4979 3489 4949 574 2072 + 154 3259 5868 43 7294 3392 - 340 6477 6421 492 6849 5224", "x2": "mul INT+ 6 add x_0_8 mul relu idiv sqr mul n INT- 9 relu INT+ 1 0 sub INT- 4 x_0_6", "tree": "(6 mul (x_0_8 add (relu((((n mul -9))**2 idiv relu(10))) mul (-4 sub x_0_6))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 4 + 8 - 3 - 7 + 4 - 8 - 13 - 3 - 16 - 22 - 13 - 27 - 34 - 26 - 41 - 49 - 42 - 58 - 67 - 61 - 78 - 88 - 83 - 101 - 112 - 108 - 127 - 139 - 136 - 156 - 169", "x2": "sub x_0_3 abs abs sub mul sign relu mod sign x_0_1 INT+ 8 sign INT+ 5 n", "tree": "(x_0_3 sub abs(abs(((sign(relu((sign(x_0_1) mod 8))) mul sign(5)) sub n))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 - 3 - 3 - 3 - 3 - 3 - 3 - 2 - 2 - 2 - 2 - 2 - 2 - 1 - 1 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "idiv sub sub n INT+ 1 0 INT+ 1 0 INT+ 6", "tree": "(((n sub 10) sub 10) idiv 6)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 9 + 0 + 5 + 0 + 10 + 12 + 0 + 0 + 3 + 0 + 0 + 0 + 16 + 13 + 0 + 0 + 4 + 1 + 0 + 0 + 17 + 14 + 0 + 0 + 5 + 2 + 0 + 0 + 0", "x2": "relu add INT- 7 mod add sub n n sub INT- 1 0 add x_0_2 mul n INT+ 3 sqr mod INT- 4 INT+ 9", "tree": "relu((-7 add (((n sub n) add (-10 sub (x_0_2 add (n mul 3)))) mod ((-4 mod 9))**2)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 13 - 8 - 6 + 17 - 4 - 3 + 17 - 2 + 9 - 2 + 7 - 2 + 6 - 1 + 2 - 1 + 2 - 1 + 2 - 1 + 2 - 1 + 2 - 1 + 2 + 0 + 0 + 0", "x2": "idiv add sub add n x_0_1 x_0_1 mul add INT+ 3 mul mod INT+ 6 mod sign x_0_1 n x_0_1 INT- 9 n", "tree": "((((n add x_0_1) sub x_0_1) add ((3 add ((6 mod (sign(x_0_1) mod n)) mul x_0_1)) mul -9)) idiv n)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 4 + 1 + 4 + 4 - 6 - 6 - 3 + 9 + 10 - 3 + 2 + 5 + 5 - 5 - 5 - 4 + 8 + 9 - 2 + 3 + 4 + 6 - 4 - 4 - 5 + 7 + 8 - 1 + 4 + 5 + 7 - 3 - 3 - 4 + 8 + 7 + 0", "x2": "add sign mod INT+ 9 x_0_2 x_0_9", "tree": "(sign((9 mod x_0_2)) add x_0_9)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 12 + 24 + 48 + 96 + 192 + 384 + 768 + 1536 + 3072 + 6144 + 1 2288 + 2 4576 + 4 9152 + 9 8304 + 19 6608 + 39 3216 + 78 6432 + 157 2864 + 314 5728 + 629 1456 + 1258 2912 + 2516 5824 + 5033 1648 + 1 66 3296 + 2 132 6592 + 4 265 3184 + 8 530 6368 + 16 1061 2736", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 8 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6 + 1 + 3 + 6", "x2": "mod idiv sqr x_0_3 x_0_3 INT+ 9", "tree": "(((x_0_3)**2 idiv x_0_3) mod 9)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 3 - 7 + 2 + 5 - 3 + 70 + 24 - 63 + 20 + 55 - 36 + 910 + 336 - 945 + 320 + 935 - 648 + 1 7290 + 6720 - 1 9845 + 7040 + 2 1505 - 1 5552 + 43 2250 + 17 4720 - 53 5815 + 19 7120 + 62 3645 - 46 6560 + 1339 9750 + 559 1040 - 1768 1895 + 670 2080", "x2": "mul n x_0_6", "tree": "(n mul x_0_6)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 6 - 7 - 1 - 70 + 6 + 7 + 8 + 9 - 80 - 94 - 108 - 122 + 14 + 15 + 16 + 17 - 192 - 206 - 220 - 234 + 22 + 23 + 24 + 25 - 304 - 318 - 332 - 346 + 30 + 31 + 32", "x2": "mod n mul mul x_0_4 INT- 3 abs sub INT- 1 idiv INT+ 4 sign x_0_4", "tree": "(n mod ((x_0_4 mul -3) mul abs((-1 sub (4 idiv sign(x_0_4))))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 - 9 + 3 + 0 - 1 - 4 + 8 + 3 - 6 + 9 + 10 - 4 - 17 - 19 - 14 - 18 - 25 - 44 - 48 - 30 - 22 - 28 - 53 - 54 - 30 - 4 - 7 - 51 - 61 - 32 + 18 + 15 - 54 - 91 - 60 + 33 + 21 - 75 - 148", "x2": "add sub x_0_5 add relu x_0_6 add n x_0_8 mod mul x_0_11 mod sub relu x_0_4 INT+ 3 INT+ 5 INT+ 1", "tree": "((x_0_5 sub (relu(x_0_6) add (n add x_0_8))) add ((x_0_11 mul ((relu(x_0_4) sub 3) mod 5)) mod 1))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 3 - 3 + 9 + 3 - 1 + 8 - 3 + 10 - 2 + 9 - 7 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign idiv x_0_10 sub mod sub INT+ 1 n mul add n x_0_11 x_0_4 x_0_2", "tree": "sign((x_0_10 idiv (((1 sub n) mod ((n add x_0_11) mul x_0_4)) sub x_0_2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 5 - 7 - 10 + 7 - 5 + 2 - 1 + 9 + 9 - 1 + 9 - 1 + 9 - 1 - 1 + 9 - 1 + 9 - 1 + 9 + 9 - 1 + 9 - 1 + 9 - 1 - 1 + 9 - 1 + 9 - 1 + 9 + 9 - 1", "x2": "sub sqr INT- 2 mul mul INT+ 5 INT+ 1 sign x_0_6", "tree": "((-2)**2 sub ((5 mul 1) mul sign(x_0_6)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 10 - 3 - 6 + 10 + 3 + 6 - 10 - 3 - 6 + 10 + 3 + 6 - 10 - 3 - 6 + 10 + 3 + 6 - 10 - 3 - 6 + 10 + 3 + 6 - 10 - 3 - 6 + 10 + 3 + 6", "x2": "sub mul INT+ 3 relu sub x_0_3 x_0_3 x_0_3", "tree": "((3 mul relu((x_0_3 sub x_0_3))) sub x_0_3)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 8 + 2 - 8 - 10 - 2 - 7 - 10 - 7 + 4 - 10 + 0 + 3 - 2 + 6 + 0 + 10 + 5 + 11 + 12 + 11 + 31 + 12 + 33 + 32 + 34 + 44 + 38 + 69 + 46 + 74 + 75 + 77 + 108 + 84 + 137 + 114 + 145 + 157 + 154 + 217", "x2": "add x_0_12 add n x_0_7", "tree": "(x_0_12 add (n add x_0_7))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "+ 7 - 4 + 1 + 6 + 4 + 1 - 5 + 3 + 49 + 16 + 1 + 36 + 16 + 1 + 25 + 9 + 2401 + 256 + 1 + 1296 + 256 + 1 + 625 + 81 + 576 4801 + 6 5536 + 1 + 167 9616 + 6 5536 + 1 + 39 625 + 6561 + 33 2329 3056 9601 + 42 9496 7296 + 1 + 2 8211 990 7456", "x2": "sqr x_0_8", "tree": "(x_0_8)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 2 - 3 + 4 + 0 + 0 + 0 + 2401 + 4096 + 6561 + 0 + 0 + 0 + 2 8561 + 3 8416 + 5 625 + 0 + 0 + 0 + 13 321 + 16 0 + 19 4481 + 0 + 0 + 0 + 39 625 + 45 6976 + 53 1441 + 0 + 0 + 0 + 92 3521", "x2": "sqr mul n idiv n sqr sub n add sub n x_0_3 sqr INT+ 1", "tree": "((n mul (n idiv ((n sub ((n sub x_0_3) add (1)**2)))**2)))**2", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 7 - 9 - 1 - 10 + 5 - 4 - 4 - 21 - 24 - 17 - 27 - 13 - 23 - 24 - 42 - 46 - 40 - 51 - 38 - 49 - 51 - 70 - 75 - 70 - 82 - 70 - 82 - 85 - 105 - 111 - 107 - 120 - 109 - 122", "x2": "add x_0_7 sub INT- 5 n", "tree": "(x_0_7 add (-5 sub n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 2 + 5 + 10 + 1 - 3 - 1 + 55 + 154 + 493 + 1204 + 139 - 511 - 199 + 1 2373 + 3 9423 + 14 2477 + 39 97 + 5 181 - 20 4397 - 8 7755 + 598 8537 + 2085 4773 + 8206 6759 + 2 4381 633 + 3392 2365 - 1 4900 5403 - 6879 9909 + 50 3635 9629 + 187 6929 5713 + 788 6615 5413 + 2496 6208 8207 + 369 4145 5501 - 1722 5024 5851 - 842 7988 8507", "x2": "add add mod INT- 7 abs n mul mul n n x_0_7 add INT- 9 idiv sub INT- 1 idiv x_0_1 x_0_1 n", "tree": "(((-7 mod abs(n)) add ((n mul n) mul x_0_7)) add (-9 add ((-1 sub (x_0_1 idiv x_0_1)) idiv n)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730 + 785 + 842", "x2": "add abs mul n n sign idiv sub x_0_1 sub add x_0_1 add x_0_1 INT+ 4 mod x_0_1 n INT- 7", "tree": "(abs((n mul n)) add sign(((x_0_1 sub ((x_0_1 add (x_0_1 add 4)) sub (x_0_1 mod n))) idiv -7)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 3 + 7 + 0 + 8 - 7 + 9 - 8 - 7 - 8 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1", "x2": "idiv sign x_0_8 add x_0_10 n", "tree": "(sign(x_0_8) idiv (x_0_10 add n))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 4 - 6 - 4 - 8 + 6 - 5 + 9 + 15 + 9 + 21 - 3 + 12 - 3 - 3 - 3 - 3 + 6 - 3 + 6 + 6 + 6 + 6 - 3 + 6 - 3 - 3 - 3 - 3 + 6 - 3 + 6 + 6 + 6 + 6", "x2": "mul INT- 3 mod sign abs idiv mul n INT+ 1 0 add mul n n x_0_4 x_0_6", "tree": "(-3 mul (sign(abs(((n mul 10) idiv ((n mul n) add x_0_4)))) mod x_0_6))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 7 - 22 - 57 - 18 - 67 - 23 - 72 - 16 - 9 - 8 - 55 - 113 - 204 - 22 - 9 - 178 - 259 - 199 - 88 - 280 - 9 - 192 - 199 - 9 - 268 - 358 - 9 - 66 - 67", "x2": "sub mod n INT- 3 add mul n mod mul n x_0_2 sqr idiv INT+ 4 abs INT+ 1 INT+ 7", "tree": "((n mod -3) sub ((n mul ((n mul x_0_2) mod ((4 idiv abs(1)))**2)) add 7))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 4 + 10 - 9 + 20 + 10 + 30 - 5 7760 + 40 + 10 + 50 - 8 3405 4380 + 60 + 10 - 416 6221 8930 - 21 4018 3539 780 + 10 + 10 + 20 - 85 6287 4339 8510 7780 + 30 + 10 - 1712 5748 6796 9263 3560 - 493 4784 4820 5617 6136 1380 + 10 + 10 + 20 - 3869 3645 1238 247 7083 4580 5780 + 30 + 10 - 7 7387 2902 4760 4954 1668 9881 7560 - 3 9633 9007 31 877 2765 8608 8604 5380", "x2": "sub mod relu x_0_2 mul add x_0_3 sqr mul x_0_2 n x_0_4 INT- 1 0", "tree": "((relu(x_0_2) mod ((x_0_3 add ((x_0_2 mul n))**2) mul x_0_4)) sub -10)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 + 5 - 4 - 4 - 6 + 1 - 8 - 17 - 4 - 14 - 15 - 18 - 12 - 22 - 32 - 20 - 31 - 33 - 37 - 32 - 43 - 54 - 43 - 55 - 58 - 63 - 59 - 71 - 83 - 73 - 86 - 90 - 96 - 93 - 106", "x2": "sub x_0_7 n", "tree": "(x_0_7 sub n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 4 + 8 - 3 + 7 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14 + 9 + 15 + 10 + 16 + 11 + 17 + 12 + 18 + 13", "x2": "relu add sign x_0_3 x_0_2", "tree": "relu((sign(x_0_3) add x_0_2))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 10 + 3 + 9 - 2 - 8 + 4 + 89 + 108 + 130 + 155 + 181 + 208 + 238 + 270 + 304 + 340 + 378 + 418 + 460 + 504 + 550 + 598 + 648 + 700 + 754 + 810 + 868 + 928 + 990 + 1054 + 1120 + 1188 + 1258 + 1330", "x2": "add sub sqr sub INT- 2 n idiv x_0_6 sqr x_0_1 abs n", "tree": "((((-2 sub n))**2 sub (x_0_6 idiv (x_0_1)**2)) add abs(n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 9 - 2 - 4 - 5 + 4 + 7 + 77 + 98 + 4 + 7 + 77 + 98 + 4 + 7 + 77 + 98 + 4 + 7 + 77 + 98 + 4 + 7 + 77 + 98 + 4 + 7 + 77 + 98 + 4 + 7 + 77 + 98 + 4 + 7", "x2": "mod x_0_4 sub mod x_0_7 add INT+ 6 n add sub INT- 5 add add INT- 8 n sqr n INT- 1 0", "tree": "(x_0_4 mod ((x_0_7 mod (6 add n)) sub ((-5 sub ((-8 add n) add (n)**2)) add -10)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 4 - 8 + 0 + 5 + 2 + 6 - 6 + 2 - 14 - 3 - 20 - 14 - 20 - 26 - 16 - 29 - 14 - 22 - 18 - 14 - 26 - 15 - 32 - 26 - 32 - 38 - 28 - 41 - 26 - 34 - 30 - 26", "x2": "mul sign abs mul x_0_5 idiv mul INT- 8 INT+ 3 x_0_2 sub add abs x_0_4 x_0_2 n", "tree": "(sign(abs((x_0_5 mul ((-8 mul 3) idiv x_0_2)))) mul ((abs(x_0_4) add x_0_2) sub n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 2 - 6 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "idiv sign mod x_0_2 INT- 1 sign sign idiv x_0_3 x_0_2", "tree": "(sign((x_0_2 mod -1)) idiv sign(sign((x_0_3 idiv x_0_2))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 7 + 4 + 9 - 8 - 7 - 6 - 1 - 8 - 7 - 6 - 1 - 8 - 7 - 6 - 1 - 8 - 7 - 6 - 1 - 8 - 7 - 6 - 1 - 8 - 7 - 6 - 1 - 8 - 7 - 6 - 1 - 8", "x2": "mul INT+ 1 mod x_0_4 INT- 1 0", "tree": "(1 mul (x_0_4 mod -10))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 3 + 0 + 5 + 12 + 21 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437 + 480 + 525 + 572 + 621 + 672 + 725 + 780", "x2": "add INT- 4 sqr n", "tree": "(-4 add (n)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 24 + 414 - 9960 + 29 8770 - 1075 5756 + 4 5174 1710 - 216 8360 2128 + 1 1709 1451 4858 - 70 2548 7089 1540 + 4636 8214 7884 1574 - 33 3851 1464 7659 3400 + 2604 389 4251 7428 5122 - 21 8739 2711 7146 3995 332 + 1968 6534 4054 3175 9552 9790 - 18 8990 7302 9214 4891 7085 9936 + 1927 7054 4897 9877 8954 2771 3370 - 20 8192 1884 8982 6812 7061 9304 4068 + 2373 3909 4878 4025 6648 5060 702 3638 - 28 4806 9138 5408 3079 7820 7208 4283 6680 + 3588 5671 1456 1446 8052 5410 8261 9742 1554 - 47 3690 8591 2211 978 2935 4229 580 5964 5260 + 6536 9338 5588 5131 5004 5088 3610 122 3104 5742 - 94 1318 4752 4745 8936 649 2723 9841 7612 7058 6992 + 1 4119 7771 2871 1884 409 7390 8597 6264 1905 8804 8650 - 220 2685 2320 7905 3910 3919 2974 1229 7213 7317 3558 9556 + 3 5683 5007 5968 673 3483 4926 1807 9214 8624 5411 6550 7910 - 599 4828 1276 2635 3122 5226 7598 3730 8096 8922 9158 532 9048 + 10 4310 94 2069 8544 3318 9456 2116 9160 8859 2587 3501 2725 4178", "x2": "mul INT- 6 mul n add x_0_1 sign relu relu INT+ 5", "tree": "(-6 mul (n mul (x_0_1 add sign(relu(relu(5))))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 9 - 6 + 8 - 8 - 2 + 9 + 8 + 6 + 1 + 1 + 1 + 1 + 4 + 1 + 1 + 1 + 18 + 19 + 20 + 21 + 2 + 23 + 24 + 25 + 1 + 1 + 1 + 1 + 8 + 1 + 1 + 1 + 34 + 35 + 36 + 37", "x2": "relu add sign add n INT+ 3 idiv n sqr x_0_8", "tree": "relu((sign((n add 3)) add (n idiv (x_0_8)**2)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 4 - 2 + 1530 + 1584 + 1638 - 1 2150 - 1 2636 - 1 3122 + 11 970 + 11 5344 + 11 9718 - 99 7110 - 103 6476 - 107 5842 + 897 5610 + 932 9904 + 968 4198 - 8077 8870 - 8396 7516 - 8715 6162 + 7 2701 1450 + 7 5570 9264 + 7 8440 7078 - 65 4310 1430 - 68 138 1756 - 70 5966 2082 + 588 8791 4490 + 612 1243 7424 + 635 3696 358 - 5299 9122 8790", "x2": "mul add mul relu sqr INT- 6 INT- 5 x_0_3 INT- 9", "tree": "(((relu((-6)**2) mul -5) add x_0_3) mul -9)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 7 + 9 + 10 + 4 + 6 + 6 + 0 + 12 - 6 - 10 - 4 - 6 - 6 + 0 - 12 + 6 + 10 + 11 + 15 + 17 + 0 + 25 - 5 - 10 - 11 - 15 - 17 + 0 - 25 + 5 + 10 + 22 + 24 + 37 + 0", "x2": "sub relu add x_0_2 idiv mod n x_0_3 idiv add sqr sign x_0_6 n x_0_7 x_0_7", "tree": "(relu((x_0_2 add ((n mod x_0_3) idiv (((sign(x_0_6))**2 add n) idiv x_0_7)))) sub x_0_7)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 8 + 21 - 22 + 56 - 59 + 149 - 158 + 397 - 422 + 1058 - 1126 + 2821 - 3003 + 7522 - 8008 + 2 58 - 2 1355 + 5 3488 - 5 6947 + 14 2634 - 15 1859 + 38 357 - 40 4958 + 101 4285 - 107 9888 + 270 4760 - 287 9702 + 721 2693 - 767 9206", "x2": "idiv mul mul x_0_2 INT+ 4 INT+ 2 idiv add n abs add n n n", "tree": "(((x_0_2 mul 4) mul 2) idiv ((n add abs((n add n))) idiv n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 7 - 20 - 69 - 288 - 1455 - 8748 - 6 1257 - 49 80 - 441 747 - 4410 7500 - 4 8518 2533 - 58 2219 432 - 756 8847 5655 - 1 596 3865 9212 - 15 8945 7988 8225 - 254 3132 7821 1648 - 4323 3257 2959 8067 - 7 7819 8631 3276 5260 - 147 8577 3995 2253 9997 - 2957 1547 9904 5080 0 - 6 2100 2507 7994 6680 63 - 136 6205 5171 5882 6960 1452 - 3142 2726 8946 5302 83 3465 - 7 5414 5445 4716 7248 2000 3232 - 188 5363 6136 7918 1205 8 875 - 4901 9453 9556 5871 1330 210 2828 - 13 2352 5256 8027 8520 5910 5677 6437 - 370 5870 7190 4779 8576 5495 8974 320 - 1 747 250 8523 8615 8719 9381 246 9367", "x2": "mul add mul relu x_0_1 x_0_1 n sub x_0_1 abs INT+ 3", "tree": "(((relu(x_0_1) mul x_0_1) add n) mul (x_0_1 sub abs(3)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 5 + 4 - 5 - 1 + 2 - 2 - 10 + 2 + 2 + 2 + 11 + 6 + 7 + 2 + 7 + 8 + 8 + 1 + 3 + 2 + 10 + 3 + 2 + 3 + 25 + 8 + 13 + 2 + 9 + 15 + 10 + 1 + 4 + 2 + 17", "x2": "abs idiv n x_0_7", "tree": "abs((n idiv x_0_7))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 10 + 2 - 4 + 3 + 9 - 8 + 56 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156", "x2": "add relu idiv add add INT+ 8 n sqr relu x_0_6 idiv n x_0_3 sqr n", "tree": "(relu((((8 add n) add (relu(x_0_6))**2) idiv (n idiv x_0_3))) add (n)**2)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 2 + 10 - 4 - 7 + 15 + 24 + 21 + 8 + 54 + 40 + 110 + 96 + 26 + 168 + 75 + 0 + 153 + 108 + 342 + 0 + 126 + 440 + 460 + 0 + 25 + 624 + 27 + 0 + 725 + 720 + 837 + 0", "x2": "mod mul n x_0_4 sqr n", "tree": "((n mul x_0_4) mod (n)**2)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0 - 9 - 1 + 0", "x2": "mul x_0_3 add sign INT+ 9 mul x_0_1 sqr idiv INT+ 6 sub INT+ 6 INT- 1 0", "tree": "(x_0_3 mul (sign(9) add (x_0_1 mul ((6 idiv (6 sub -10)))**2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10 - 6 + 2 + 7 - 10", "x2": "mul x_0_4 sign add n sqr mul abs sign INT- 1 x_0_2", "tree": "(x_0_4 mul sign((n add ((abs(sign(-1)) mul x_0_2))**2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 18 + 54 + 216 + 1080 + 6480 + 4 5360 + 36 2880 + 326 5920 + 3265 9200 + 3 5925 1200 + 43 1101 4400 + 560 4318 7200 + 7846 462 800 + 11 7690 6931 2000 + 188 3051 899 2000 + 3201 1868 5286 4000 + 5 7621 3633 5155 2000 + 109 4805 9036 7948 8000 + 2189 6118 735 8976 0 + 4 5981 8479 5453 8496 0 + 101 1600 6549 9984 6912 0 + 2326 6815 649 9647 8976 0 + 5 5840 3561 5599 1549 5424 0 + 139 6008 9038 9978 8738 5600 0 + 3629 6231 5013 9450 7202 5600 0 + 9 7999 8250 5376 5169 4469 1200 0 + 274 3995 1015 542 4744 5135 3600 0 + 7957 5857 9436 5731 7590 8925 4400 0", "x2": "mul x_0_1 abs n", "tree": "(x_0_1 mul abs(n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 + 6 - 48 - 114 + 0 + 0 - 78 - 78 + 0 + 0 - 78 - 78 + 0 + 0 - 78 - 78 + 0 + 0 - 78 - 78 + 0 + 0 - 78 - 78 + 0 + 0 - 78 - 78 + 0 + 0", "x2": "sub mod n mul INT+ 6 sub INT- 6 sub x_0_2 INT- 7 n", "tree": "((n mod (6 mul (-6 sub (x_0_2 sub -7)))) sub n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 2 + 0 + 5 + 8 - 6 + 2 + 0 + 5 + 8 + 19 + 2 + 0 + 5 + 8 + 19 + 2 + 0 + 5 + 8 + 19 + 2 + 0 + 5 + 8 + 19 + 2 + 0 + 5 + 8 + 19 + 2 + 0 + 5", "x2": "mod x_0_5 sqr sub n relu x_0_2", "tree": "(x_0_5 mod ((n sub relu(x_0_2)))**2)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 1 + 9 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv x_0_3 sqr add INT+ 7 add abs x_0_2 n", "tree": "(x_0_3 idiv ((7 add (abs(x_0_2) add n)))**2)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 + 0 + 8 - 10 + 9 - 10 + 19 - 16 + 19 - 16 + 19 - 18 + 19 - 18 + 19 - 20 + 19 - 20 + 19 - 22 + 19 - 22 + 19 - 24 + 19 - 24 + 19 - 26 + 19 - 26 + 19 - 28 + 19", "x2": "add mod mul n INT- 1 0 sub INT- 2 sub x_0_6 x_0_4 x_0_2", "tree": "(((n mul -10) mod (-2 sub (x_0_6 sub x_0_4))) add x_0_2)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 3 - 8 + 0 - 11 - 12 - 2 - 11 - 1 - 1 - 12 - 4 - 15 - 16 - 6 - 15 - 5 - 5 - 16 - 8 - 19 - 20 - 10 - 19 - 9 - 9 - 20 - 12 - 23 - 24 - 14 - 23", "x2": "sub sub INT- 1 0 add INT- 6 sub x_0_4 sign INT+ 3 n", "tree": "((-10 sub (-6 add (x_0_4 sub sign(3)))) sub n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 9 - 2 + 0 + 3 - 4 - 6 - 9 - 2 + 0 + 3 - 4 - 6 - 9 - 2 + 0 + 3 - 4 - 6 - 9 - 2 + 0 + 3 - 4 - 6 - 9 - 2 + 0 + 3 - 4 - 6 - 9", "x2": "mul INT- 1 sub x_0_3 INT- 6", "tree": "(-1 mul (x_0_3 sub -6))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 8 + 3 + 10 - 9 + 4 + 11 - 10 + 5 + 12 - 11 + 6 + 13 - 12 + 7 + 14 - 13 + 8 + 15 - 14 + 9 + 16 - 15 + 10 + 17 - 16 + 11 + 18 - 17 + 12 + 19", "x2": "add x_0_3 sign x_0_3", "tree": "(x_0_3 add sign(x_0_3))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 1 + 9 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr add idiv mod INT+ 9 mul n n INT- 1 0 n", "tree": "((((9 mod (n mul n)) idiv -10) add n))**2", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 7 - 8 + 9 - 7 - 6 - 14 - 14 - 23 - 24 - 34 - 36 - 47 - 50 - 62 - 66 - 79 - 84 - 98 - 104 - 119 - 126 - 142 - 150 - 167 - 176 - 194 - 203 - 222 - 232 - 252 - 263 - 284", "x2": "add mod add sign n idiv sub relu n x_0_5 mul n INT+ 6 x_0_2 sub INT- 1 n", "tree": "(((sign(n) add ((relu(n) sub x_0_5) idiv (n mul 6))) mod x_0_2) add (-1 sub n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 1 - 2 + 3 - 2 - 5 + 27 + 38 - 10 - 19 + 362 + 155 - 384 - 36 + 5552 - 2941 - 5361 + 3974 + 10 3470 - 16 2074 + 2 1769 + 8 400 + 232 6251 - 623 5861 + 626 2772 - 336 1966 + 6606 1934 - 2 4106 8006 + 4 1105 7175 - 4 8073 6814 + 24 9734 2944 - 101 9470 9270 + 234 2928 6411 - 385 6899 8021", "x2": "sub sub mul x_0_4 n sub x_0_1 sqr INT- 6 mul add INT- 4 sqr INT+ 3 x_0_6", "tree": "(((x_0_4 mul n) sub (x_0_1 sub (-6)**2)) sub ((-4 add (3)**2) mul x_0_6))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 2 - 1 + 8 - 5 + 6 + 4 + 8 - 9 + 9 + 9 - 3 + 12 - 22 + 24 + 4 - 4 + 6 - 25 + 55 - 23 + 4 - 12 - 7 + 84 - 82 + 33 - 41 + 60 + 68 - 162 + 103 - 81 + 185 - 74 - 197 + 224 - 124", "x2": "add add x_0_9 sub n x_0_6 sub x_0_5 n", "tree": "((x_0_9 add (n sub x_0_6)) add (x_0_5 sub n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 0 + 4 + 1 - 1 + 2 + 10 + 8 + 9 + 10 + 15 + 14 + 19 + 18 + 19 + 20 + 17 + 20 + 36 + 20 + 23 + 22 + 46 + 26 + 25 + 30 + 52 + 32 + 31 + 32 + 62 + 32 + 33 + 34", "x2": "add sub abs n relu idiv INT- 5 x_0_6 mod x_0_2 x_0_4", "tree": "((abs(n) sub relu((-5 idiv x_0_6))) add (x_0_2 mod x_0_4))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 3 - 4 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign mul add x_0_3 x_0_3 sub mul n add n n INT+ 5", "tree": "sign(((x_0_3 add x_0_3) mul ((n mul (n add n)) sub 5)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 3 - 5 + 6 + 7 - 6 + 7 - 8 + 9 - 8 + 7 - 6 + 5 - 4 + 3 - 2 + 1 + 0 - 1 + 2 - 3 + 4 - 3 + 2 - 1 + 0 + 1 - 2 + 3 - 4 + 5 - 4 + 3", "x2": "sub sign x_0_5 x_0_1", "tree": "(sign(x_0_5) sub x_0_1)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 0 - 4 + 0 - 24 + 180 + 1408 + 1 2636 + 12 6320 + 240 4 + 4800 0 + 10 799 9916 + 231 8399 7976 + 4868 6395 7412 + 10 7110 706 2976 + 267 7751 7657 4300 + 6426 6042 3778 3104 + 13 4958 6889 9344 5100 + 472 3554 1147 7057 8360 + 1 1808 8852 8692 6445 8900 + 25 9795 4763 1238 1809 5712 + 1117 1205 4814 3241 7811 5444 + 4 1333 4602 8129 9945 9027 1280 + 136 4004 1892 8289 8214 7895 2108 + 6138 188 5177 3041 9665 5284 4680 + 25 1658 7729 2269 4720 6286 6663 1716 + 1233 1279 8732 1204 1310 8046 6495 3888 + 5 558 2474 8016 9369 3742 9912 6310 9244 + 273 145 3639 2914 5946 2121 5282 789 8960 + 1 3377 7122 8325 2815 1364 3954 8821 8704 8844 + 46 8219 9299 1384 8529 7753 8420 8765 4670 9400", "x2": "mul add add INT+ 1 mod x_0_3 n relu n add INT- 4 abs x_0_1", "tree": "(((1 add (x_0_3 mod n)) add relu(n)) mul (-4 add abs(x_0_1)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 - 6 + 7 - 6 - 6 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign idiv x_0_5 mod sqr mod INT+ 4 sub n add INT+ 7 n n", "tree": "sign((x_0_5 idiv (((4 mod (n sub (7 add n))))**2 mod n)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 6 + 6 + 7 + 9 + 4 + 1 - 8 - 6 - 4 + 72 + 20 + 92 + 165 + 240 + 310 + 377 + 435 + 495 + 557 + 695 + 781 + 939 + 1170 + 1476 + 1852 + 2295 + 2796 + 3357 + 3980 + 4741 + 5588 + 6593 + 7829 + 9371 + 1 1289 + 1 3650 + 1 6512", "x2": "mod add x_0_1 sub add sqr INT+ 8 x_0_10 INT- 2 add sub sqr x_0_2 mul INT- 4 abs INT- 7 n", "tree": "((x_0_1 add (((8)**2 add x_0_10) sub -2)) mod (((x_0_2)**2 sub (-4 mul abs(-7))) add n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 0 - 4 - 10 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 5 - 5 + 9 - 10 + 6 + 12 + 3 + 18 + 0 + 17 + 24 + 16 + 32 + 15 + 33 + 41 + 34 + 51 + 35 + 54 + 63 + 57 + 75 + 60 + 80 + 90 + 85 + 104 + 90 + 111 + 122 + 118", "x2": "add x_0_5 n", "tree": "(x_0_5 add n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 + 0 - 7 - 2 - 29 - 8 - 115 - 30 - 457 - 116 - 1823 - 458 - 7285 - 1824 - 2 9131 - 7286 - 11 6513 - 2 9132 - 46 6039 - 11 6514 - 186 4141 - 46 6040 - 745 6547 - 186 4142 - 2982 6169 - 745 6548 - 1 1930 4655 - 2982 6170 - 4 7721 8597 - 1 1930 4656", "x2": "sub add sub mul INT+ 4 x_0_2 abs idiv n n add n INT- 1 0 INT- 5", "tree": "((((4 mul x_0_2) sub abs((n idiv n))) add (n add -10)) sub -5)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 28 + 67 + 123 + 198 + 294 + 413 + 557 + 728 + 928 + 1159 + 1423 + 1722 + 2058 + 2433 + 2849 + 3308 + 3812 + 4363 + 4963 + 5614 + 6318 + 7077 + 7893 + 8768 + 9704 + 1 703 + 1 1767 + 1 2898", "x2": "relu add mul sub sub n relu INT- 6 INT- 1 0 n x_0_1", "tree": "relu(((((n sub relu(-6)) sub -10) mul n) add x_0_1))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 7 + 2 + 11 + 7 + 17 + 14 + 25 + 23 + 35 + 34 + 47 + 47 + 61 + 62 + 77 + 79 + 95 + 98 + 115 + 119 + 137 + 142 + 161 + 167 + 187 + 194 + 215 + 223 + 245 + 254", "x2": "add abs abs add n idiv relu sub mul INT- 1 x_0_3 x_0_3 INT+ 3 x_0_2", "tree": "(abs(abs((n add (relu(((-1 mul x_0_3) sub x_0_3)) idiv 3)))) add x_0_2)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 9 - 6 - 9 + 8 + 10 + 2 - 8 - 7 - 10 - 2 - 9 + 136 + 126 + 143 + 128 + 161 + 159 - 201 - 161 - 198 - 150 - 231 - 359 - 464 - 350 - 435 - 313 - 543 - 556 - 900 - 510 - 802 - 344 - 895 - 818 - 1953 - 687 - 1674 - 59", "x2": "add sub abs mul n INT- 1 0 abs mul INT+ 3 x_0_6 add n sub sign idiv n n x_0_11", "tree": "((abs((n mul -10)) sub abs((3 mul x_0_6))) add (n add (sign((n idiv n)) sub x_0_11)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 3 + 8 + 7 - 4 - 6 + 2 + 0 - 6 - 5 - 8 - 3 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1", "x2": "sign idiv sign mod abs add sub n mul x_0_11 INT- 9 add INT+ 8 n INT- 1 0 x_0_5", "tree": "sign((sign((abs(((n sub (x_0_11 mul -9)) add (8 add n))) mod -10)) idiv x_0_5))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 8 - 1 - 2 - 5 + 7 + 7 + 5 + 5 + 3 - 1 - 2 - 5 + 7 + 7 + 5 + 5 + 3 - 1 - 2 - 5 + 7 + 7 + 5 + 5 + 3 - 1 - 2 - 5 + 7 + 7 + 5 + 5 + 3 - 1 - 2 - 5 + 7", "x2": "add mod sqr mod add idiv n sub n mul add x_0_9 sign INT- 2 n INT+ 1 0 INT- 1 n x_0_8", "tree": "((((((n idiv (n sub ((x_0_9 add sign(-2)) mul n))) add 10) mod -1))**2 mod n) add x_0_8)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 7 - 4 - 7 + 2 + 7 + 4 + 7 + 2 + 7 + 4 + 7 + 2 + 7 + 4 + 7 + 2 + 7 + 4 + 7 + 2 + 7 + 4 + 7 + 2 + 7 + 4 + 7 + 2 + 7 + 4 + 7 + 2", "x2": "abs add add mod n n x_0_4 idiv abs sub x_0_2 x_0_2 x_0_2", "tree": "abs((((n mod n) add x_0_4) add (abs((x_0_2 sub x_0_2)) idiv x_0_2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 8 - 4 - 8 + 1 + 0 - 9 + 0 + 2 + 10 - 8 + 5 + 6 + 20 + 25 + 15 + 7 + 31 + 31 + 25 + 35 + 44 + 37 + 65 + 41 + 22 + 66 + 83 + 46 + 84 + 75 + 39 + 102 + 102 + 18 + 124 + 151 + 34 + 118 + 146", "x2": "sub relu add abs INT+ 7 INT+ 8 sub sub x_0_11 x_0_9 x_0_6", "tree": "(relu((abs(7) add 8)) sub ((x_0_11 sub x_0_9) sub x_0_6))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 1 - 9 - 3 - 2 + 9 - 3 + 4 + 4 - 2 + 6 + 0 - 1 + 6 + 0 + 1 + 1 - 1 + 3 - 3 - 2 + 3 - 3 - 2 - 2 - 2 + 0 + 0 - 1 + 0 + 0 - 1 - 1 - 1 - 3 - 3 - 2", "x2": "sub abs x_0_8 INT+ 3", "tree": "(abs(x_0_8) sub 3)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 4 - 1 - 8 - 17 - 28 - 41 - 56 - 73 - 92 - 113 - 136 - 161 - 188 - 217 - 248 - 281 - 316 - 353 - 392 - 433 - 476 - 521 - 568 - 617 - 668 - 721 - 776", "x2": "add mul INT- 1 abs mul relu n n INT+ 8", "tree": "((-1 mul abs((relu(n) mul n))) add 8)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 - 9 + 3 - 4 + 9 + 3 + 17 + 12 + 27 + 23 + 39 + 36 + 53 + 51 + 69 + 68 + 87 + 87 + 107 + 108 + 129 + 131 + 153 + 156 + 179 + 183 + 207 + 212 + 237 + 243", "x2": "add add x_0_2 sign n abs n", "tree": "((x_0_2 add sign(n)) add abs(n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 + 6 + 13 + 22 + 33 + 46 + 61 + 78 + 97 + 118 + 141 + 166 + 193 + 222 + 253 + 286 + 321 + 358 + 397 + 438 + 481 + 526 + 573 + 622 + 673 + 726 + 781", "x2": "relu relu sub add sub INT- 7 INT+ 5 sqr abs n INT- 9", "tree": "relu(relu((((-7 sub 5) add (abs(n))**2) sub -9)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 10 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11 - 2 - 12 - 2 - 13 - 2 - 14 - 2 - 15", "x2": "idiv relu n x_0_1", "tree": "(relu(n) idiv x_0_1)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 1 - 5 + 8 - 8 + 9 - 3 - 7 + 0 - 9 + 14 + 52 + 51 + 67 - 6 + 33 - 17 + 63 + 177 + 284 + 375 + 111 + 13 + 489 + 264 + 563 + 684 + 660 + 149 + 591 + 138 + 497 - 33 + 191 + 1096 + 108", "x2": "sub mod sqr x_0_8 relu sqr idiv mul n n relu n n", "tree": "(((x_0_8)**2 mod relu((((n mul n) idiv relu(n)))**2)) sub n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 3 - 2 - 9 + 10 + 0 + 0 + 0 + 90 + 0 + 0 + 0 + 1170 + 0 + 0 + 0 + 1 9890 + 0 + 0 + 0 + 41 7690 + 0 + 0 + 0 + 1044 2250 + 0 + 0 + 0 + 3 282 5250 + 0 + 0 + 0", "x2": "relu mul x_0_4 mod n sqr abs sub INT- 3 abs sub n INT- 1 0", "tree": "relu((x_0_4 mul (n mod (abs((-3 sub abs((n sub -10)))))**2)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 4 - 5 + 6 + 9 - 9 + 4 - 2 - 2 + 7 + 11 - 8 + 5 + 0 + 0 + 8 + 13 - 6 + 7 + 2 + 2 + 9 + 15 - 4 + 9 + 4 + 4 + 10 + 17 - 2 + 11 + 6 + 6 + 11", "x2": "sub x_0_6 sub INT- 2 idiv x_0_4 n", "tree": "(x_0_6 sub (-2 sub (x_0_4 idiv n)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 7 - 3 - 10 + 50 + 252 + 147 + 640 + 4050 + 2 5200 + 1 7787 + 9 2160 + 68 4450 + 493 9200 + 400 2075 + 2359 2960 + 1 9780 6050 + 16 30 800 + 14 4474 9075 + 94 3718 4000 + 872 3246 8050 + 7745 4558 7200 + 7642 7226 675 + 5 4358 1798 4000 + 54 5202 9253 1250 + 523 5928 1694 7200 + 557 1544 7803 2075 + 4261 6812 9945 6000 + 4 5851 5660 1878 1250 + 47 1233 5352 5248 0 + 53 5425 4533 8882 4075 + 436 3961 6506 4294 4000", "x2": "abs mul x_0_4 add mul n sub idiv INT+ 5 INT- 1 0 n n", "tree": "abs((x_0_4 mul ((n mul ((5 idiv -10) sub n)) add n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 9 + 2 5600 + 3 4969 + 4 6656 + 6 1009 + 7 8400 + 9 9225 + 12 3904 + 15 2881 + 18 6624 + 22 5625 + 27 400 + 32 1489 + 37 9456 + 44 4889 + 51 8400 + 60 625 + 69 2224 + 79 3881 + 90 6304 + 103 225 + 116 6400 + 131 5609 + 147 8656 + 165 6369 + 184 9600 + 205 9225 + 228 6144 + 253 1281", "x2": "sqr add INT- 8 add idiv abs sign x_0_2 sub sub INT+ 1 INT- 1 n sqr sub INT- 1 0 n", "tree": "((-8 add ((abs(sign(x_0_2)) idiv ((1 sub -1) sub n)) add ((-10 sub n))**2)))**2", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 1 - 5 - 8 - 12 - 17 - 23 - 30 - 38 - 47 - 57 - 68 - 80 - 93 - 107 - 122 - 138 - 155 - 173 - 192 - 212 - 233 - 255 - 278 - 302 - 327 - 353 - 380 - 408", "x2": "sub x_0_1 add idiv n mul idiv x_0_1 x_0_1 x_0_1 n", "tree": "(x_0_1 sub ((n idiv ((x_0_1 idiv x_0_1) mul x_0_1)) add n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 - 5 + 1 - 7 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4", "x2": "idiv add abs sqr mod sub x_0_4 sqr x_0_1 INT+ 3 abs n INT- 1 0", "tree": "((abs((((x_0_4 sub (x_0_1)**2) mod 3))**2) add abs(n)) idiv -10)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275 + 299 + 324 + 350 + 377 + 405 + 434", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 + 4 - 7 + 1 + 7 + 4 - 10 + 2 + 4 + 3 + 1 + 7 + 4 + 4 + 2 + 4 + 3 + 1 + 7 + 4 + 4 + 2 + 4 + 3 + 1 + 7 + 4 + 4 + 2 + 4 + 3 + 1 + 7 + 4 + 4", "x2": "abs mod x_0_7 n", "tree": "abs((x_0_7 mod n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6 + 5 + 5 + 6", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 5 + 4 - 2 - 4 - 1 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 0", "x2": "sqr idiv x_0_7 mul n INT- 6", "tree": "((x_0_7 idiv (n mul -6)))**2", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 4 + 2 + 7 - 6 + 5 + 3 - 1 + 10 - 9 + 10 - 2 - 10 - 13 - 9 - 4 - 17 - 6 - 8 - 12 - 1 - 20 - 1 - 13 - 21 - 24 - 20 - 15 - 28 - 17 - 19 - 23 - 12 - 31 - 12 - 24 - 32 - 35 - 31 - 26 - 39", "x2": "add add relu INT- 3 add INT- 1 0 sign x_0_3 x_0_12", "tree": "((relu(-3) add (-10 add sign(x_0_3))) add x_0_12)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 9 + 1 - 6 + 5 - 8 - 2 - 2 - 3 - 7 + 8 + 4 + 0 + 6 - 1 + 2 + 2 + 2 + 0 + 7 + 5 + 3 + 6 + 3 + 4 + 4 + 4 + 3 + 7 + 6 + 5 + 6 + 5 + 5 + 5 + 5 + 5 + 7", "x2": "idiv sub x_0_9 INT- 7 INT+ 2", "tree": "((x_0_9 sub -7) idiv 2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 6 + 0 + 3 + 7 + 12 + 18 + 25 + 33 + 42 + 52 + 63 + 75 + 88 + 102 + 117 + 133 + 150 + 168 + 187 + 207 + 228 + 250 + 273 + 297 + 322 + 348 + 375 + 403 + 432", "x2": "relu add x_0_1 n", "tree": "relu((x_0_1 add n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 2 + 6 + 4 + 15 + 30 + 0 + 8 + 18 + 30 + 44 + 60 + 78 + 98 + 120 + 144 + 170 + 198 + 228 + 260 + 294 + 330 + 368 + 408 + 450 + 494 + 540 + 588", "x2": "mul mod INT- 7 n n", "tree": "((-7 mod n) mul n)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 5 + 2 + 3 + 1 + 1 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783 + 840 + 899 + 960 + 1023 + 1088", "x2": "mod sign mul x_0_5 INT- 6 sqr add relu INT- 4 n", "tree": "(sign((x_0_5 mul -6)) mod ((relu(-4) add n))**2)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 + 1 - 6 - 4 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 - 1 + 1 - 5 + 2 - 7 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 0 + 0", "x2": "mod abs sub sign relu sqr INT+ 1 0 relu x_0_5 add x_0_7 n", "tree": "(abs((sign(relu((10)**2)) sub relu(x_0_5))) mod (x_0_7 add n))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 3 - 2 + 4 + 6 + 3 - 5 - 9 + 0 + 3 + 0 - 3 + 15 + 16 + 21 + 24 + 22 + 20 + 21 + 22 + 26 + 24 + 25 + 41 + 43 + 49 + 53 + 52 + 51 + 53 + 55 + 60 + 59 + 61 + 78 + 81 + 88 + 93 + 93 + 93", "x2": "add idiv INT+ 1 relu relu INT+ 3 add add mul sign INT+ 9 n relu x_0_11 INT+ 3", "tree": "((1 idiv relu(relu(3))) add (((sign(9) mul n) add relu(x_0_11)) add 3))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 3 - 1 + 10 - 5 - 8 - 4 + 11 + 1 - 54 + 21 + 36 + 16 - 59 - 9 + 266 - 109 - 184 - 84 + 291 + 41 - 1334 + 541 + 916 + 416 - 1459 - 209 + 6666 - 2709 - 4584 - 2084 + 7291 + 1041 - 3 3334 + 1 3541", "x2": "sub INT- 4 mul x_0_6 INT+ 5", "tree": "(-4 sub (x_0_6 mul 5))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 98 - 51 - 36 - 30 - 30 - 35 - 48 - 72 - 120 - 220 - 444 - 962 - 2254 - 5640 - 1 5040 - 4 2619 - 12 7872 - 40 4928 - 134 9760 - 472 4160 - 1732 1920 - 6640 701 - 2 6560 2816 - 11 667 8400 - 47 9560 6400 - 215 8022 8818 - 1007 773 4484 - 4867 5405 6", "x2": "mod mul n idiv x_0_1 INT+ 6 idiv abs sqr x_0_1 sub abs sign abs n n", "tree": "((n mul (x_0_1 idiv 6)) mod (abs((x_0_1)**2) idiv (abs(sign(abs(n))) sub n)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 4 + 2 + 10 + 4 - 10 - 5 - 1 + 5 + 10 + 7 + 14 + 23 + 18 + 5 + 11 + 16 + 23 + 29 + 27 + 35 + 45 + 41 + 29 + 36 + 42 + 50 + 57 + 56 + 65 + 76 + 73 + 62 + 70 + 77 + 86 + 94", "x2": "abs add n x_0_9", "tree": "abs((n add x_0_9))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 5 + 9 + 3 - 3 + 0 + 1 + 10 + 6 + 1 + 1 + 2 + 2 - 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 - 3 + 4 + 4 + 4 + 4 + 4 + 4 + 5 + 5 - 5 + 5 + 5 + 5 + 6 + 6", "x2": "mul idiv n INT+ 6 sign mul INT+ 4 x_0_9", "tree": "((n idiv 6) mul sign((4 mul x_0_9)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 1 - 7 + 1 + 8 + 16 + 64 + 0 - 72 - 136 - 520 + 8 + 584 + 1096 + 4168 - 56 - 4680 - 8776 - 3 3352 + 456 + 3 7448 + 7 216 + 26 6824 - 3656 - 29 9592 - 56 1736 - 213 4600 + 2 9256 + 239 6744 + 449 3896 + 1707 6808 - 23 4056 - 1917 3960", "x2": "mul INT- 8 add x_0_4 sign sub x_0_4 n", "tree": "(-8 mul (x_0_4 add sign((x_0_4 sub n))))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 - 6 + 3 + 1 - 6 + 5 + 1 + 10 + 5 + 6 - 3 - 1 + 6 - 5 - 1 - 10 - 5 - 6 + 3 + 1 - 6 + 5 + 1 + 10 + 5 + 6 - 3 - 1 + 6 - 5 - 1 - 10 - 5 - 6 + 3 + 1", "x2": "sub sqr mod idiv INT- 2 relu n INT- 3 add x_0_8 INT+ 1", "tree": "((((-2 idiv relu(n)) mod -3))**2 sub (x_0_8 add 1))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 2 - 6 - 4 + 6 - 6 + 17 + 10 + 3 + 6 + 17 + 6 + 30 + 24 + 18 + 22 + 34 + 24 + 49 + 44 + 39 + 44 + 57 + 48 + 74 + 70 + 66 + 72 + 86 + 78 + 105 + 102 + 99 + 106", "x2": "add n x_0_6", "tree": "(n add x_0_6)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 7 + 4 + 8 + 4 - 9 + 8 + 7 + 5 + 8 + 5 + 10 + 8 + 7 + 5 + 8 + 5 + 11 + 8 + 7 + 5 + 8 + 5 + 13 + 8 + 7 + 5 + 8 + 5 + 17 + 8 + 7 + 5 + 8", "x2": "add idiv sqr x_0_6 add INT+ 9 sqr add idiv idiv n sqr n n INT+ 2 INT+ 4", "tree": "(((x_0_6)**2 idiv (9 add ((((n idiv (n)**2) idiv n) add 2))**2)) add 4)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 1 + 3 - 1 + 9 + 25 + 9 + 9 + 9 + 9 + 17 + 25 + 33 + 9 + 9 + 9 + 65 + 73 + 9 + 9 + 9 + 33 + 41 + 49 + 9 + 9 + 9 + 9 + 17 + 25 + 33 + 121", "x2": "add INT+ 9 mul mod mod abs n x_0_3 abs n INT+ 8", "tree": "(9 add (((abs(n) mod x_0_3) mod abs(n)) mul 8))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 4 - 5 + 4 + 72 - 148 - 250 + 252 + 5760 - 1 4948 - 3 500 + 3 6036 + 96 7680 - 294 4756 - 689 3000 + 918 9180 + 2 7869 1840 - 9 5704 5700 - 24 9526 6000 + 36 6648 2820 + 1226 2440 9600 - 4641 6716 4500 - 1 3224 9098 0 + 2 1082 2762 1500 + 76 5176 3159 400 - 314 2411 7036 6500 - 965 4184 1540 0 + 1650 7422 2763 4500 + 6 4274 8105 3593 6000 - 28 3131 2945 21 6500 - 92 8732 5156 1480 0 + 168 8709 2988 7009 3500", "x2": "sub mul abs relu abs n mul n x_0_4 abs x_0_4", "tree": "((abs(relu(abs(n))) mul (n mul x_0_4)) sub abs(x_0_4))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 - 1 - 6 + 3 - 1 + 9 + 6 + 17 + 15 + 27 + 26 + 39 + 39 + 53 + 54 + 69 + 71 + 87 + 90 + 107 + 111 + 129 + 134 + 153 + 159 + 179 + 186 + 207 + 215 + 237", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 5 + 1 + 0 + 3 + 1 - 10 + 5 - 7 + 10 - 3 + 4 - 11 - 5 - 6 - 3 - 5 - 16 - 1 - 13 + 4 - 9 - 2 - 17 - 11 - 12 - 9 - 11 - 22 - 7 - 19 - 2 - 15 - 8 - 23 - 17 - 18 - 15 - 17", "x2": "add sign relu n add x_0_11 INT- 7", "tree": "(sign(relu(n)) add (x_0_11 add -7))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 3 - 5 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign sign x_0_3", "tree": "sign(sign(x_0_3))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 - 3 - 3 + 6 + 9 + 0 + 9 + 4 + 2 + 11 + 17 + 11 + 11 + 15 + 8 + 15 + 30 + 30 + 24 + 28 + 25 + 25 + 47 + 62 + 56 + 54 + 55 + 52 + 74 + 111 + 120 + 112 + 111 + 109 + 128", "x2": "add add add abs x_0_7 x_0_6 sign n sqr idiv INT- 9 INT+ 1 0", "tree": "(((abs(x_0_7) add x_0_6) add sign(n)) add ((-9 idiv 10))**2)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7 + 8 + 8 + 8 + 9 + 9", "x2": "idiv n INT+ 3", "tree": "(n idiv 3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 7 + 2 - 5 - 14 - 25 - 38 - 53 - 70 - 89 - 110 - 133 - 158 - 185 - 214 - 245 - 278 - 313 - 350 - 389 - 430 - 473 - 518 - 565 - 614 - 665 - 718 - 773 - 830", "x2": "add x_0_1 sub sub INT+ 5 add x_0_1 sqr n INT- 6", "tree": "(x_0_1 add ((5 sub (x_0_1 add (n)**2)) sub -6))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 4 + 1 + 10 + 7 - 9 - 3 + 3 + 64 + 36 + 16 + 196 + 144 + 9 + 16 + 121 + 5329 + 2116 + 729 + 4 3264 + 2 4649 + 529 + 961 + 1 8769 + 2857 9716 + 455 3956 + 55 9504 + 18 7350 4656 + 6 860 8900 + 30 3601 + 96 8256 + 3 5317 6849 + 816 8015 9562 7081 + 20 7387 5205 6324 + 3130 7493 9961 + 351 19 8009 6993 9856", "x2": "relu sqr add add abs n x_0_8 INT- 8", "tree": "relu((((abs(n) add x_0_8) add -8))**2)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 8 - 4 - 7 - 4 + 10 - 10 - 6 + 71 - 6 - 52 + 769 - 8 - 607 + 1 758 - 54 - 8945 + 18 2876 - 609 - 15 9199 + 365 7464 - 8947 - 331 9504 + 8412 1061 - 15 9201 - 7933 138 + 21 8713 8637 - 331 9506 - 21 3712 2805 + 634 2686 1270 - 7933 140 - 640 6366 8320 + 2 296 5624 1132 - 21 3712 2807", "x2": "mod add x_0_5 INT- 2 mul n x_0_3", "tree": "((x_0_5 add -2) mod (n mul x_0_3))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 + 1 + 4 + 9 - 83 - 90 - 164 - 104 - 100 - 80 - 80 - 81 - 81 - 81 - 80 - 80 - 81 - 81 - 80 - 80 - 80 - 81 - 81 - 80 - 80 - 80 - 81 - 81 - 80 - 80 - 80 - 81", "x2": "sub idiv x_0_2 x_0_5 sqr relu INT+ 9", "tree": "((x_0_2 idiv x_0_5) sub (relu(9))**2)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 9 - 21 + 39 + 108 - 231 - 753 + 1851 + 6780 - 1 8507 - 7 4577 + 22 2087 + 96 9504 - 310 9215 - 1454 2557 + 4974 7443 + 2 4722 3472 - 8 9545 3971 - 46 9724 5965 + 179 907 9423 + 986 4216 5268 - 3939 9974 7303 - 2 2687 6980 1161 + 9 4559 9393 5275 + 56 7192 4502 9028 - 245 8558 4231 7147 - 1531 4196 1578 3753 + 6883 9635 8488 119 + 4 4411 1688 5772 8840 - 20 6518 9075 4640 3567", "x2": "sub INT+ 3 mul n x_0_2", "tree": "(3 sub (n mul x_0_2))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 17 + 43 + 79 + 125 + 217 + 345 + 515 + 733 + 905 + 1216 + 1591 + 2036 + 2557 + 3160 + 3851 + 4636 + 5521 + 6512 + 7615 + 8836 + 1 181 + 1 1656 + 1 3267 + 1 5020 + 1 6921 + 1 8976 + 2 1191", "x2": "add add n mul n mul n add n idiv sub INT+ 9 n n INT- 5", "tree": "((n add (n mul (n mul (n add ((9 sub n) idiv n))))) add -5)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 6 - 6 - 2 + 3 - 5 + 1 + 6 - 10 + 0 + 0 + 0 + 0 + 12 + 0 + 4 + 24 + 0 + 0 + 0 + 0 + 0 + 48 + 0 + 16 + 96 + 0 + 0 + 0 + 0 + 0 + 68 + 0 + 64 + 112 + 0 + 0 + 0", "x2": "mul sqr INT- 2 mod relu x_0_9 n", "tree": "((-2)**2 mul (relu(x_0_9) mod n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 2 - 6 + 3 - 8 + 1 - 7 - 6 + 9 - 1 - 1 + 5 - 1 + 1 - 1 - 1 + 11 - 1 - 1 + 8 - 1 + 2 - 1 - 1 + 15 - 1 - 1 + 14 - 1 + 4 - 1 - 1 + 20 - 1 - 1 + 21 - 1", "x2": "sub idiv relu mul x_0_8 n add idiv idiv sqr n add x_0_8 n INT+ 3 x_0_8 sign n", "tree": "((relu((x_0_8 mul n)) idiv ((((n)**2 idiv (x_0_8 add n)) idiv 3) add x_0_8)) sub sign(n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 7 + 10 - 5 - 4 + 18 + 21 - 10 - 12 + 38 + 44 - 26 - 31 + 78 + 90 - 62 - 73 + 158 + 182 - 138 - 161 + 318 + 366 - 294 - 341 + 638 + 734 - 610 - 705 + 1278 + 1470 - 1246", "x2": "sub sub relu x_0_4 sub sub x_0_2 x_0_3 n x_0_3", "tree": "((relu(x_0_4) sub ((x_0_2 sub x_0_3) sub n)) sub x_0_3)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 9 - 2 - 10 + 4 - 6 - 2 + 5 - 3 + 11 + 1 + 5 + 12 + 4 + 18 + 8 + 12 + 19 + 11 + 25 + 15 + 19 + 26 + 18 + 32 + 22 + 26 + 33 + 25 + 39 + 29 + 33 + 40 + 32", "x2": "add abs idiv n n add INT+ 6 x_0_5", "tree": "(abs((n idiv n)) add (6 add x_0_5))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 3 + 0 + 2 + 3 + 3 + 2 + 0 + 7 + 3 + 8 + 2 + 5 + 7 + 8 + 8 + 7 + 5 + 2 + 8 + 3 + 7 + 0 + 2 + 3 + 3 + 2 + 0 + 7 + 3", "x2": "abs mod sub sub x_0_1 INT- 5 n INT+ 1 0", "tree": "abs((((x_0_1 sub -5) sub n) mod 10))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 2 - 3 + 3 + 8 + 10 + 14 - 14 - 21 + 21 + 56 + 70 - 98 + 98 - 147 + 147 + 392 - 490 - 686 - 686 - 1029 + 1029 - 2744 + 3430 + 4802 + 4802 - 7203 - 7203 - 1 9208 + 2 4010 + 3 3614 - 3 3614 + 5 421 + 5 421", "x2": "idiv mul INT+ 7 x_0_6 sign sign x_0_5", "tree": "((7 mul x_0_6) idiv sign(sign(x_0_5)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 9 + 4 + 7 - 9 - 8 - 9 + 8 + 10 + 3 - 2 + 67 + 84 + 19 + 52 + 84 + 67 + 84 + 67 + 103 + 12 + 7 + 4492 + 7059 + 364 + 2707 + 7059 + 4492 + 7059 + 4492 + 1 612 + 147 + 52 + 2017 8067 + 4982 9484 + 13 2499 + 732 7852 + 4982 9484 + 2017 8067", "x2": "add INT+ 3 sqr x_0_11", "tree": "(3 add (x_0_11)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 5 + 9 - 9 - 3 + 0 - 3 + 1 - 320 + 729 - 900 - 363 + 0 - 507 + 196 - 7 2000 + 18 6624 - 26 100 - 11 7612 + 0 - 20 2800 + 8 6436 - 3484 8000 + 9872 4096 - 1 4981 7600 - 7350 7500 + 0 - 1 4784 1200 + 6776 5824 - 293 716 8000 + 888 5168 6400 - 1439 7471 3600 - 752 7168 0 + 0 - 1709 442 7200 + 830 1313 4400", "x2": "mul abs mul relu n n x_0_7", "tree": "(abs((relu(n) mul n)) mul x_0_7)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 7 + 2 - 10 + 0 + 36 + 0 + 0 + 0 + 12 + 0 + 0 + 0 + 24 + 0 + 0 + 0 + 40 + 0 + 0 + 0 + 60 + 0 + 0 + 0 + 84 + 0 + 0 + 0 + 112 + 0 + 0", "x2": "relu idiv mul relu n n mod INT+ 8 x_0_4", "tree": "relu(((relu(n) mul n) idiv (8 mod x_0_4)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 3 + 2 + 2 + 1 + 1 + 0 + 0 - 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10", "x2": "sub idiv add n n INT- 4 INT- 4", "tree": "(((n add n) idiv -4) sub -4)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 10 + 1 - 4 - 8 - 2 + 10 - 4 + 7 + 2 - 2 + 4 + 16 + 2 + 13 + 8 + 4 + 10 + 22 + 8 + 19 + 14 + 10 + 16 + 28 + 14 + 25 + 20 + 16 + 22 + 34 + 20 + 31 + 26", "x2": "sub x_0_6 INT- 6", "tree": "(x_0_6 sub -6)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul add n mod n relu n mod relu n add n relu add INT+ 8 INT+ 5", "tree": "((n add (n mod relu(n))) mul (relu(n) mod (n add relu((8 add 5)))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 33 - 43 - 55 - 68 - 82 - 97 - 114 - 132 - 151 - 172 - 194 - 218 - 243 - 269 - 296 - 325 - 355 - 386 - 419 - 453 - 489 - 526 - 564 - 603 - 644 - 686 - 729 - 774", "x2": "idiv add idiv mul mul n abs INT+ 6 sqr add n INT+ 6 n abs n INT- 9", "tree": "(((((n mul abs(6)) mul ((n add 6))**2) idiv n) add abs(n)) idiv -9)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 6 - 10 - 5 + 2 + 5 - 5 + 4 - 8 - 5 - 99 - 108 + 117 + 126 - 135 - 144 + 153 - 162 + 171 + 180 + 189 + 198 - 207 - 216 + 225 + 234 - 243 + 252 - 261 - 270 - 279 - 288 + 297 + 306 - 315 - 324 + 333 - 342", "x2": "mul INT- 9 mul n sign x_0_10", "tree": "(-9 mul (n mul sign(x_0_10)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 3 + 1 - 9 - 6 - 3 - 1 + 9 + 6 + 3 + 1 - 9 - 6 - 3 - 1 + 9 + 6 + 3 + 1 - 9 - 6 - 3 - 1 + 9 + 6 + 3 + 1 - 9 - 6 - 3 - 1 + 9", "x2": "idiv x_0_4 idiv n mul abs INT- 1 0 sub sub add add n n x_0_1 x_0_1 sqr n", "tree": "(x_0_4 idiv (n idiv (abs(-10) mul ((((n add n) add x_0_1) sub x_0_1) sub (n)**2))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 0 + 15 - 210 + 3165 - 4 7460 + 71 1915 - 1067 8710 + 1 6018 665 - 24 270 9960 + 360 4064 9415 - 5406 974 1210 + 8 1091 4611 8165 - 121 6371 9177 2460 + 1824 5578 7658 6915 - 2 7368 3681 4880 3710 + 41 525 5222 3205 5665 - 615 7882 8334 8083 4960 + 9236 8242 5022 1252 4415 - 13 8552 3637 5331 8786 6210 + 207 8285 4562 9978 1799 3165 - 3117 4281 8444 9672 6989 7460 + 4 6761 4227 6674 5090 4846 1915 - 70 1421 3415 117 6357 2692 8710 + 1052 1320 1225 1764 5359 393 665 - 1 5781 9801 8377 6468 385 5895 9960 + 23 6729 7027 5664 7020 5783 8439 9415 - 355 945 5413 4970 5308 6757 6599 1210 + 5326 4183 1202 4557 9630 1364 8986 8165", "x2": "mul sub INT- 1 0 INT+ 5 sub x_0_1 idiv INT+ 7 INT+ 7", "tree": "((-10 sub 5) mul (x_0_1 sub (7 idiv 7)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 1 - 5 + 5 - 10 + 0 - 10 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1", "x2": "sub relu sign sub relu x_0_5 x_0_7 mod sqr n sign abs idiv n n", "tree": "(relu(sign((relu(x_0_5) sub x_0_7))) sub ((n)**2 mod sign(abs((n idiv n)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 1 + 7 + 5 + 40 - 5 + 42 + 35 + 320 - 45 + 420 + 385 + 3840 - 585 + 5880 + 5775 + 6 1440 - 9945 + 10 5840 + 10 9725 + 122 8800 - 20 8845 + 232 8480 + 252 3675 + 2949 1200 - 522 1125 + 6054 480 + 6813 9225 + 8 2575 3600 - 1 5141 2625 + 18 1621 4400 + 21 1231 5975", "x2": "mul x_0_4 add add relu sub n n INT- 1 n", "tree": "(x_0_4 mul ((relu((n sub n)) add -1) add n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr sub INT+ 6 n", "tree": "((6 sub n))**2", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 5 - 6 + 7 - 2 + 9 - 6 + 8 + 2 - 14 - 11 - 11 - 11 - 5 - 11 - 7 - 8 - 1 - 12 - 8 - 7 - 6 + 1 - 4 + 1 + 1 + 9 - 1 + 4 + 6 + 8 + 14 + 12 + 16 + 17 + 10 + 19", "x2": "sub mul sign n sub n sub INT+ 8 INT- 9 abs x_0_9", "tree": "((sign(n) mul (n sub (8 sub -9))) sub abs(x_0_9))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 7 - 6 - 2 - 5 - 6 + 3 - 1 - 8 + 5 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 1 - 6 - 6 - 1 - 1 - 6 - 6 - 1 - 1 - 6 - 6 - 1 - 1 - 6 - 6 - 1 - 1 - 6 - 6 - 1 - 1 - 6 - 6 - 1 - 1 - 6 - 6 - 1 - 1", "x2": "idiv INT- 6 abs x_0_2", "tree": "(-6 idiv abs(x_0_2))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 + 1 - 8 + 6 + 0 + 6 + 4 + 9 + 4 - 4 - 6 - 5 + 2 - 7 + 7 + 1 + 7 + 5 + 10 + 5 - 3 - 5 - 4 + 3 - 6 + 8 + 2 + 8 + 6 + 11 + 6 - 2 - 4 - 3 + 4 - 5 + 9 + 3 + 9", "x2": "sub x_0_11 sign INT- 6", "tree": "(x_0_11 sub sign(-6))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 3 + 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256 + 279 + 303 + 328 + 354 + 381 + 409", "x2": "add n add sub x_0_1 INT+ 3 idiv INT- 2 sign idiv n mod INT- 2 relu INT- 3", "tree": "(n add ((x_0_1 sub 3) add (-2 idiv sign((n idiv (-2 mod relu(-3)))))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 9 - 9 + 9 + 9 + 9 - 9 + 9 - 9 - 9 + 9 + 9 + 9 - 9 + 9 - 9 - 9 + 9 + 9 + 9 - 9 + 9 - 9 - 9 + 9 + 9 + 9 - 9 + 9 - 9 - 9", "x2": "sub mod mod INT- 8 INT- 1 0 sqr sign x_0_1 idiv x_0_3 idiv n idiv n sign sign x_0_1", "tree": "(((-8 mod -10) mod (sign(x_0_1))**2) sub (x_0_3 idiv (n idiv (n idiv sign(sign(x_0_1))))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 12 + 10 + 10 + 12 + 9 + 8 + 9 + 12 + 10 + 10 + 12 + 9 + 8 + 9 + 12 + 10 + 10 + 12 + 9 + 8 + 9 + 12 + 10 + 10 + 12 + 9 + 8", "x2": "sub mod sqr n INT+ 7 INT- 8", "tree": "(((n)**2 mod 7) sub -8)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 0 + 1 + 0 + 1 + 3 + 3 + 2 + 5 + 1 + 3 + 7 + 3 + 7 + 7 + 6 + 2 + 5 + 11 + 5 + 11 + 1 + 3 + 7 + 15 + 9 + 1 + 3 + 7", "x2": "mod add n add sign INT+ 5 n sub n x_0_1", "tree": "((n add (sign(5) add n)) mod (n sub x_0_1))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 6 + 9 - 10 + 4 + 5 + 4 + 7 + 2 - 2 + 7 - 3 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 - 1", "x2": "idiv x_0_12 add INT+ 2 mul add relu x_0_2 sign n sub n INT+ 1", "tree": "(x_0_12 idiv (2 add ((relu(x_0_2) add sign(n)) mul (n sub 1))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 2 + 5 - 6 + 0 + 27 + 41 + 43 + 64 + 108 + 141 + 164 + 208 + 277 + 337 + 389 + 464 + 566 + 661 + 750 + 864 + 1007 + 1145 + 1279 + 1440 + 1632 + 1821 + 2008 + 2224 + 2473 + 2721 + 2969 + 3248", "x2": "sub sub n n sub mul sqr abs relu n sign INT- 8 x_0_4", "tree": "((n sub n) sub (((abs(relu(n)))**2 mul sign(-8)) sub x_0_4))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 2 + 9 + 15 + 23 + 33 + 45 + 59 + 75 + 93 + 113 + 135 + 159 + 185 + 213 + 243 + 275 + 309 + 345 + 383 + 423 + 465 + 509 + 555 + 603 + 653 + 705 + 759 + 815", "x2": "idiv relu relu abs sqr sqr n add sqr n mod add n INT- 3 x_0_1", "tree": "(relu(relu(abs(((n)**2)**2))) idiv ((n)**2 add ((n add -3) mod x_0_1)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 8 - 1 + 4 + 0 + 2 + 6 + 2 + 7 + 4 + 10 + 8 + 15 + 14 + 22 + 22 + 31 + 32 + 42 + 44 + 55 + 58 + 70 + 74 + 87 + 92 + 106 + 112 + 127 + 134", "x2": "mod INT- 8 add n x_0_2", "tree": "(-8 mod (n add x_0_2))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 + 96 + 2304 + 7 3728 + 294 9125 + 1 4155 8012 + 79 2724 8714 + 5073 4391 7696 + 36 5287 6207 4166 + 2922 3009 6593 3300 + 25 7162 4850 213 477 + 2468 7598 5602 452 5840 + 25 6751 250 2612 7068 7399 + 2875 6114 8029 2623 1698 8716 + 34 5073 3776 3511 4780 3864 6025 + 4416 9392 3372 9469 1889 4669 1328 + 60 703 7357 8720 7809 6967 5002 761 + 8650 1337 9533 5792 4596 3320 298 9620 + 131 4820 3368 9104 453 8642 4644 5442 2430 + 2 1037 1253 9025 6647 2618 2794 3127 758 8800 + 353 4237 655 6311 6739 9870 9444 5348 7491 8421 + 6 2202 5723 5391 854 6237 7286 2238 1379 8564 2140 + 1144 5273 3131 1959 7250 7742 665 1817 3893 5815 4174 + 21 9749 2476 1189 6267 2148 6476 7714 8938 7567 6560 1600 + 4394 9849 5223 7925 3442 9729 5354 2978 7751 3531 2032 0 + 91 4156 8700 6548 8471 6138 3743 3693 9585 2281 4490 2656 312 + 1 9745 7883 9341 4550 9868 5888 8567 7895 409 2792 9897 3702 8040 + 442 3056 6001 2485 9421 563 9103 9184 8489 1678 5629 7010 9428 1632 + 10 2614 9131 2289 6738 5685 827 2109 884 9486 9426 6090 6538 7333 9088", "x2": "mul mul n abs idiv mul x_0_1 INT+ 8 mul n sign mul n INT- 9 n", "tree": "((n mul abs(((x_0_1 mul 8) idiv (n mul sign((n mul -9)))))) mul n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 8 + 1 + 3 + 1 - 9 + 9 - 8 + 10 + 7 + 1 + 3 + 7 + 6 + 10 + 10 + 15 + 14 + 3 + 9 + 12 + 7 + 20 + 23 + 2 + 18 + 6 + 20 + 22 + 6 + 30 + 0 + 32 + 4 + 12 + 30 + 12", "x2": "mod add sub sub n n x_0_9 x_0_4 n", "tree": "((((n sub n) sub x_0_9) add x_0_4) mod n)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 4 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 0 + 4 + 1 + 5 + 0 + 4 + 8 + 0 + 4 + 8 + 12 + 0 + 4 + 8 + 12 + 16 + 20 + 2 + 6 + 10 + 14", "x2": "relu mod add x_0_1 relu n add n INT- 4", "tree": "relu(((x_0_1 add relu(n)) mod (n add -4)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 7 - 3 + 1 - 4 + 10 + 7 + 3 + 16 + 13 + 10 + 16 + 3 + 7 + 12 + 0 + 4 + 8 + 3 + 17 + 14 + 10 + 23 + 20 + 17 + 23 + 10 + 14 + 19 + 7 + 11 + 15 + 10 + 24 + 21", "x2": "sub n x_0_7", "tree": "(n sub x_0_7)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 9 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 2 - 2 + 0 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 + 0", "x2": "idiv mul add x_0_1 sub INT- 3 x_0_2 mod relu add INT- 6 n relu abs INT+ 6 n", "tree": "(((x_0_1 add (-3 sub x_0_2)) mul (relu((-6 add n)) mod relu(abs(6)))) idiv n)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 40 + 430 - 4260 + 4 2650 - 42 6440 + 426 4470 - 4264 4620 + 4 2644 6290 - 42 6446 2800 + 426 4462 8110 - 4264 4628 980 + 4 2644 6280 9930 - 42 6446 2809 9160 + 426 4462 8099 1750 - 4264 4628 991 7340 + 4 2644 6280 9917 3570 - 42 6446 2809 9173 5520 + 426 4462 8099 1735 5390 - 4264 4628 991 7355 3700 + 4 2644 6280 9917 3553 7210 - 42 6446 2809 9173 5537 1880 + 426 4462 8099 1735 5371 9030 - 4264 4628 991 7355 3719 60 + 4 2644 6280 9917 3553 7190 850 - 42 6446 2809 9173 5537 1900 8240 + 426 4462 8099 1735 5371 9008 2670 - 4264 4628 991 7355 3719 82 6420 + 4 2644 6280 9917 3553 7190 826 4490", "x2": "mul sub idiv n relu sqr sign sqr x_0_1 x_0_1 INT+ 1 0", "tree": "(((n idiv relu((sign((x_0_1)**2))**2)) sub x_0_1) mul 10)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 5 - 6 - 10 - 4 + 2 - 4 - 8 + 4 + 49 - 990 + 8909 - 8 8730 + 89 3520 - 907 3940 + 9207 5600 - 9 3495 3000 + 95 142 7740 - 966 4758 6780 + 9839 7014 2520 - 10 266 9202 5400 + 102 2622 1114 3990 - 1043 8845 8053 1720 + 1 665 1580 1734 570 - 10 9057 9862 5950 1940 + 111 6145 3203 6673 9250 - 1143 2863 1946 563 9960 + 1 1720 8214 7710 3692 8030 - 12 261 8383 8630 2982 3780 + 123 4986 4958 9145 4118 110 - 1269 2850 8547 5271 378 9400 + 1 3056 1952 5402 7123 1217 7290 - 13 4410 3313 6863 2926 6538 2820 + 138 4857 7564 3621 5215 7587 1670 - 1428 134 4934 2374 4310 4711 3040 + 1 4737 1001 5523 2545 9093 6390 1250 - 15 2209 7734 8159 6244 4531 7682 8060", "x2": "sub mul sub add n x_0_1 sub mul n x_0_4 relu x_0_8 INT- 1 0 idiv INT+ 6 abs x_0_3", "tree": "((((n add x_0_1) sub ((n mul x_0_4) sub relu(x_0_8))) mul -10) sub (6 idiv abs(x_0_3)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 12 - 38 - 90 - 194 - 402 - 818 - 1650 - 3314 - 6642 - 1 3298 - 2 6610 - 5 3234 - 10 6482 - 21 2978 - 42 5970 - 85 1954 - 170 3922 - 340 7858 - 681 5730 - 1363 1474 - 2726 2962 - 5452 5938 - 1 905 1890 - 2 1810 3794 - 4 3620 7602 - 8 7241 5218 - 17 4483 450 - 34 8966 914", "x2": "mul INT- 2 sub INT+ 7 x_0_1", "tree": "(-2 mul (7 sub x_0_1))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 15 + 26 + 49 + 96 + 191 + 382 + 765 + 1532 + 3067 + 6138 + 1 2281 + 2 4568 + 4 9143 + 9 8294 + 19 6597 + 39 3204 + 78 6419 + 157 2850 + 314 5713 + 629 1440 + 1258 2895 + 2516 5806 + 5033 1629 + 1 66 3276 + 2 132 6571 + 4 265 3162 + 8 530 6345 + 16 1061 2712", "x2": "mod INT- 7 add mul x_0_1 INT+ 2 n", "tree": "(-7 mod ((x_0_1 mul 2) add n))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 6 + 6 + 17 + 20 + 20 + 30 + 45 + 80 + 56 + 42 + 89 + 128 + 108 + 98 + 149 + 192 + 323 + 170 + 78 + 272 + 407 + 258 + 170 + 624 + 507 + 106 + 278 + 736 + 899", "x2": "sub sqr n mod sign mod idiv sub n add INT- 8 x_0_1 abs INT+ 4 INT- 7 x_0_2", "tree": "((n)**2 sub (sign((((n sub (-8 add x_0_1)) idiv abs(4)) mod -7)) mod x_0_2))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 4 - 1 + 3 - 3 + 1 + 0 + 1 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1", "x2": "mod mod mod x_0_5 add INT- 1 0 x_0_2 INT+ 2 n", "tree": "(((x_0_5 mod (-10 add x_0_2)) mod 2) mod n)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 2 + 4 - 5 - 4 + 7 - 7 - 7 + 2 + 5 + 4 + 2 + 2 + 8 + 4 + 3 + 5 + 7 + 6 + 6 + 6 + 8 + 7 + 7 + 7 + 9 + 8 + 8 + 8 + 10 + 9 + 9 + 9 + 11 + 10 + 10", "x2": "sub idiv x_0_8 x_0_1 idiv sub n INT- 3 INT- 4", "tree": "((x_0_8 idiv x_0_1) sub ((n sub -3) idiv -4))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 4 - 6 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign mul x_0_2 add mul sqr sub mod relu INT- 8 n x_0_1 mod INT+ 3 INT- 7 x_0_2", "tree": "sign((x_0_2 mul (((((relu(-8) mod n) sub x_0_1))**2 mul (3 mod -7)) add x_0_2)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 29 + 69 + 149 + 309 + 629 + 1269 + 2549 + 5109 + 1 229 + 2 469 + 4 949 + 8 1909 + 16 3829 + 32 7669 + 65 5349 + 131 709 + 262 1429 + 524 2869 + 1048 5749 + 2097 1509 + 4194 3029 + 8388 6069 + 1 6777 2149 + 3 3554 4309 + 6 7108 8629 + 13 4217 7269 + 26 8435 4549 + 53 6870 9109", "x2": "abs add add mul mod x_0_1 INT- 5 INT- 3 sub mul abs INT- 1 x_0_1 INT- 8 x_0_1", "tree": "abs(((((x_0_1 mod -5) mul -3) add ((abs(-1) mul x_0_1) sub -8)) add x_0_1))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 - 8 - 6 + 10 + 6 + 4 + 15 + 16 + 25 + 6 + 9 + 23 + 14 + 23 - 4 + 19 + 31 + 9 + 28 - 3 + 44 + 34 + 1 + 43 - 3 + 73 + 17 - 5 + 71 - 13 + 107 - 24 + 16 + 110", "x2": "sub abs mul sign x_0_4 add relu x_0_5 n x_0_6", "tree": "(abs((sign(x_0_4) mul (relu(x_0_5) add n))) sub x_0_6)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 4 + 8 + 10 + 23 + 19 + 35 + 41 + 58 + 58 + 78 + 88 + 109 + 113 + 137 + 151 + 176 + 184 + 212 + 230 + 259 + 271 + 303 + 325 + 358 + 374 + 410 + 436 + 473 + 493 + 533 + 563", "x2": "relu abs sub mul INT+ 4 n sub sign n x_0_4", "tree": "relu(abs(((4 mul n) sub (sign(n) sub x_0_4))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 9 + 8 - 4 - 4 - 10 + 1 + 8 - 7 + 3 + 4 + 4 + 4 + 3 + 5 + 4 + 7 + 3 + 8 + 8 + 8 + 3 + 7 + 8 + 5 + 3 + 4 + 4 + 4 + 3 + 5 + 4 + 7 + 3 + 8 + 8 + 8", "x2": "sub INT+ 3 mod relu add x_0_8 INT+ 9 INT- 6", "tree": "(3 sub (relu((x_0_8 add 9)) mod -6))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 6 + 0 + 7 - 5 - 6 - 4 + 1 - 16 - 5 + 0 - 16 - 12 + 0 - 17 - 22 + 0 + 0 - 22 - 18 + 0 - 41 - 28 + 0 + 0 - 28 - 24 + 0 - 71 - 34 + 0 + 0 - 34 - 30 + 0 - 107", "x2": "mod relu add n x_0_2 sub x_0_7 add INT+ 6 n", "tree": "(relu((n add x_0_2)) mod (x_0_7 sub (6 add n)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 5 - 3 + 5 - 5 + 5 - 7 + 5 - 9 + 3 - 11 - 21 - 13 - 21 - 15 - 21 - 17 - 21 - 19 - 21 - 21 - 21 - 23 - 21 - 25 - 21 - 27 - 21 - 29 - 21 - 31", "x2": "sub x_0_2 mod add n n sqr add idiv mul n sign x_0_2 x_0_2 sign relu x_0_3", "tree": "(x_0_2 sub ((n add n) mod ((((n mul sign(x_0_2)) idiv x_0_2) add sign(relu(x_0_3))))**2))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 + 4 + 7 + 5 - 1 - 4 + 1 + 6 + 8 + 11 + 9 + 15 + 13 + 5 + 10 + 12 + 15 + 13 + 19 + 17 + 9 + 14 + 16 + 19 + 17 + 23 + 21 + 13 + 18 + 20 + 23 + 21 + 27 + 25 + 17", "x2": "add INT+ 4 mod x_0_7 n", "tree": "(4 add (x_0_7 mod n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 10 + 8 + 16 + 45 + 66 + 91 + 101 + 106 + 104 + 112 + 137 + 188 + 257 + 329 + 380 + 394 + 370 + 331 + 316 + 365 + 495 + 684 + 870 + 974 + 939 + 770 + 551 + 423 + 522 + 900", "x2": "sub sub x_0_1 x_0_3 mod abs sign x_0_1 sub n sqr n", "tree": "((x_0_1 sub x_0_3) sub (abs(sign(x_0_1)) mod (n sub (n)**2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 - 2 + 6 + 3 + 6 + 4 - 10 - 11 - 6 + 1 - 3 - 1 - 4 - 19 - 21 - 17 - 11 - 16 - 15 - 19 - 35 - 38 - 35 - 30 - 36 - 36 - 41 - 58 - 62 - 60 - 56 - 63 - 64 - 70 - 88", "x2": "add sub x_0_7 n relu INT+ 5", "tree": "((x_0_7 sub n) add relu(5))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 2 + 9 + 8 - 10 + 10 - 4 - 6 + 7 - 4 + 3 + 154 + 756 + 728 + 980 + 1050 + 448 + 714 + 882 + 532 + 420 + 2 2638 + 11 6424 + 11 7208 + 16 4640 + 18 3750 + 8 1536 + 13 4946 + 17 2872 + 10 7996 + 8 8200 + 491 2446 + 2607 8976 + 2707 5048 + 3918 4320 + 4501 8750 + 2054 7072 + 3495 1014 + 4598 3952", "x2": "abs abs mul mul x_0_10 n INT- 7", "tree": "abs(abs(((x_0_10 mul n) mul -7)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9 + 5 + 9 + 9", "x2": "mod x_0_3 mul INT+ 5 n", "tree": "(x_0_3 mod (5 mul n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 4 - 25 - 80 + 749 + 3359 - 4 1944 - 24 1849 + 377 4960 + 2660 3390 - 4 9829 4720 - 41 5012 8840 + 906 8963 9040 + 8715 2705 6400 - 21 7655 1336 9601 - 237 553 5934 800 + 6660 2470 9109 7905 + 8 1072 9328 9455 3599 - 253 893 8946 1720 3900 - 3405 631 8157 1251 1581 + 11 6927 2979 3131 4820 1800 + 172 2961 9698 7505 3085 9986 - 6454 3868 4580 8578 739 3600 - 10 3377 7181 9250 3185 1599 1600 + 419 5351 4497 7557 5748 584 0 + 7257 1158 1711 3723 5982 2610 3200 - 31 7168 5696 303 3526 5532 1504 1 - 589 2778 434 9634 3561 7595 9579 8400 + 2 7593 6655 5546 3916 8101 2970 8480 869 + 54 8028 3580 4515 9951 2436 4240 9251 1999", "x2": "sub idiv sub mul n mod n INT+ 3 n x_0_1 mul add n mul n n x_0_2", "tree": "((((n mul (n mod 3)) sub n) idiv x_0_1) sub ((n add (n mul n)) mul x_0_2))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 2 + 1 - 1 + 100 + 81 + 169 + 100 + 81 + 225 + 64 + 144 + 289 + 400 + 144 + 144 + 64 + 256 + 64 + 225 + 576 + 81 + 169 + 81 + 289 + 729 + 121 + 729 + 81 + 169 + 289 + 729", "x2": "sqr add mod x_0_3 n INT+ 8", "tree": "(((x_0_3 mod n) add 8))**2", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 3 - 2 - 8 + 0 - 1 + 5 - 3 - 2 - 8 + 0 - 1 + 5 - 3 - 2 - 8 + 0 - 1 + 5 - 3 - 2 - 8 + 0 - 1 + 5 - 3 - 2 - 8 + 0 - 1 + 5", "x2": "sub INT- 3 x_0_3", "tree": "(-3 sub x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783 + 840 + 899 + 960 + 1023", "x2": "sub sqr abs sub n INT- 4 sqr INT- 1", "tree": "((abs((n sub -4)))**2 sub (-1)**2)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 3 - 5 - 6 - 2 + 11 + 3 + 2 + 12 + 3 + 83 + 93 + 84 + 164 + 174 + 165 + 245 + 255 + 246 + 326 + 336 + 327 + 407 + 417 + 408 + 488 + 498 + 489 + 569 + 579 + 570 + 650", "x2": "add x_0_3 sqr mod sqr INT- 3 n", "tree": "(x_0_3 add (((-3)**2 mod n))**2)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 2 - 8 - 15 - 24 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784", "x2": "sub abs idiv INT+ 5 n mul mul n n sign relu n", "tree": "(abs((5 idiv n)) sub ((n mul n) mul sign(relu(n))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 6 + 10 + 3 - 4 + 10 + 0 + 10 + 3 + 0 + 10 + 0 + 10 + 3 + 0 + 10 + 0 + 10 + 3 + 0 + 10 + 0 + 10 + 3 + 0 + 10 + 0 + 10 + 3 + 0 + 10 + 0 + 10", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 + 6 + 2 + 5 + 1 + 4 + 0 + 3 + 6 + 2 + 5 + 1 + 4 + 0", "x2": "relu mod mul sub relu sign mul mod mul n n n n mul n INT- 6 INT+ 4 INT+ 7", "tree": "relu((((relu(sign((((n mul n) mod n) mul n))) sub (n mul -6)) mul 4) mod 7))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 3 - 8 + 5 - 9 + 6 + 2 - 9 + 4 + 0 + 20 + 10 + 0 + 16 + 0 + 92 + 50 + 0 + 60 + 0 + 428 + 250 + 0", "x2": "relu sub add mul x_0_5 INT+ 5 mod INT- 3 sign sub INT- 4 INT- 5 relu mul add x_0_1 INT+ 2 x_0_7", "tree": "relu((((x_0_5 mul 5) add (-3 mod sign((-4 sub -5)))) sub relu(((x_0_1 add 2) mul x_0_7))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 2 - 4 - 7 - 11 - 16 - 22 - 29 - 37 - 46 - 56 - 67 - 79 - 92 - 106 - 121 - 137", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 3 - 6 + 8 - 3 - 3 - 6 + 8 - 3 - 3 - 6 + 8 - 3 - 3 - 6 + 8 - 3 - 3 - 6", "x2": "add mul sqr mod mul n mod n n abs sub relu x_0_4 abs x_0_2 INT+ 7 x_0_4", "tree": "(((((n mul (n mod n)) mod abs((relu(x_0_4) sub abs(x_0_2)))))**2 mul 7) add x_0_4)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 3 - 5 - 8 - 12 - 17 - 23 - 30 - 38 - 47 - 57 - 68 - 80 - 93 - 107 - 122 - 138", "x2": "sub x_0_1 relu abs n", "tree": "(x_0_1 sub relu(abs(n)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 - 7 + 3 + 3 + 0 - 5 + 6 + 0 + 0 + 4 + 2 + 0 + 0 + 5 + 0 + 0 + 3 + 1 + 0 + 0 + 4 + 0", "x2": "relu sub x_0_7 sign sub x_0_2 sub abs x_0_2 x_0_4", "tree": "relu((x_0_7 sub sign((x_0_2 sub (abs(x_0_2) sub x_0_4)))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 1 - 6 - 6 + 4 + 8 - 2 + 2 + 6 + 5 - 5 + 6 + 14 + 6 - 1 - 1 + 9 + 13 + 3 + 7 + 11 + 10 + 0 + 11 + 19 + 11 + 4", "x2": "add INT+ 5 x_0_12", "tree": "(5 add x_0_12)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "+ 0 - 10 + 1 - 55 - 4 - 354 + 0 - 2859 + 319 - 2 8629 + 6325 - 34 3914 + 11 803 - 482 1176 + 200 5900 - 7724 9682 + 3892 1409 - 13 9250 247", "x2": "sub sub mul x_0_2 n sub x_0_3 sqr INT+ 1 relu mul INT+ 4 n", "tree": "(((x_0_2 mul n) sub (x_0_3 sub (1)**2)) sub relu((4 mul n)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 4 + 5 - 2 + 9 - 8 - 9 + 3 + 4 + 14 + 8 + 20 + 4 + 4 + 17 + 19 + 30 + 25 + 38 + 23 + 24 + 38 + 41", "x2": "add n x_0_7", "tree": "(n add x_0_7)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 3 + 1 - 10 - 6 + 2 + 6 + 8 + 1 + 3 + 17 + 14 + 13 + 21 + 20 + 9 + 11 + 13 + 9 + 9 + 20", "x2": "add relu sub n abs x_0_5 mod sqr INT- 3 n", "tree": "(relu((n sub abs(x_0_5))) add ((-3)**2 mod n))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 3 + 3 + 9 - 6 - 5 + 6 + 8 + 9 + 8 - 105 - 126 - 504 + 378 + 280 + 4410 + 7056 + 3 1752 - 2 1168 + 20 5800 + 388 9620 + 2489 3568 - 8401 5792 + 4148 9280 - 63 5304 6000", "x2": "mul x_0_5 mul x_0_9 INT- 7", "tree": "(x_0_5 mul (x_0_9 mul -7))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 5 - 2 - 1 - 2 - 5 - 3 - 2 - 3 - 4 - 4 - 2 - 3 - 6 - 5 - 2 - 3 - 8", "x2": "idiv add mod INT+ 9 x_0_2 n x_0_2", "tree": "(((9 mod x_0_2) add n) idiv x_0_2)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 4 - 5 + 1 + 9 - 4 - 5 + 1 + 9 - 4 - 5 + 1 + 9 - 4 - 5 + 1 + 9 - 4 - 5 + 1", "x2": "sub x_0_4 relu mod sqr sqr n idiv sign n n", "tree": "(x_0_4 sub relu((((n)**2)**2 mod (sign(n) idiv n))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 + 10 - 7 - 1 - 1 - 1 - 8 - 9 - 2 - 1 - 3 - 7 - 2 - 1 - 2 - 2 - 2 - 2", "x2": "idiv n mod sub sub x_0_2 x_0_1 add x_0_4 n sub idiv INT+ 9 INT+ 7 sqr INT- 9", "tree": "(n idiv (((x_0_2 sub x_0_1) sub (x_0_4 add n)) mod ((9 idiv 7) sub (-9)**2)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 6 + 3 + 1464 + 7320 + 4 3920 + 30 7440 + 245 9520 + 2213 5680 + 2 2135 6800 + 24 3492 4800 + 292 1909 7600 + 3798 4826 8800 + 5 3178 7576 3200 + 79 7681 3644 8000 + 1276 2901 8316 8000 + 2 1696 9331 1385 6000 + 39 544 7960 4940 8000", "x2": "mul add mul sqr sub INT- 7 n mod x_0_1 x_0_3 x_0_1 n", "tree": "(((((-7 sub n))**2 mul (x_0_1 mod x_0_3)) add x_0_1) mul n)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 + 10 + 6 - 1 + 5 - 48 - 22 + 8 - 12 + 10 + 11 - 24 + 13 - 32 - 36 + 16 - 44 + 18 + 19", "x2": "mod n sub n sub mul INT+ 7 x_0_4 abs x_0_4", "tree": "(n mod (n sub ((7 mul x_0_4) sub abs(x_0_4))))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 + 1 + 3 + 7 + 5 + 2 + 8 + 11 + 16 + 15 + 13 + 20 + 24 + 30 + 30 + 29 + 37 + 42 + 49 + 50", "x2": "abs add x_0_5 abs n", "tree": "abs((x_0_5 add abs(n)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 + 8 + 9 - 5 + 5 + 5 - 5 + 1 - 4 + 7 - 9 - 5 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0", "x2": "idiv x_0_12 mul n n", "tree": "(x_0_12 idiv (n mul n))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "+ 9 + 7 - 1 + 7 + 5 - 3 + 5 + 3 - 5 + 3 + 1 - 7 + 1 - 1 - 9 - 1 - 3 - 11", "x2": "sub idiv mul add INT- 2 relu add x_0_3 n n n abs n", "tree": "((((-2 add relu((x_0_3 add n))) mul n) idiv n) sub abs(n))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 3 + 32 - 24 + 256 - 192 + 2048 - 1536 + 1 6384 - 1 2288 + 13 1072 - 9 8304 + 104 8576 - 78 6432 + 838 8608 - 629 1456 + 6710 8864", "x2": "mul x_0_2 INT+ 8", "tree": "(x_0_2 mul 8)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 5 + 7 - 5 + 0 + 9 + 6 + 8 + 6 + 1 + 10 + 7 + 9 + 7 + 2 + 11 + 8 + 10 + 8 + 3", "x2": "add sign n abs x_0_5", "tree": "(sign(n) add abs(x_0_5))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 1 - 1 + 10 - 4 + 2 + 8 + 11 + 10 + 9 + 21 + 8 + 15 + 22 + 26 + 26 + 26 + 39 + 27 + 35 + 43 + 48", "x2": "add n x_0_7", "tree": "(n add x_0_7)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 2 + 0 + 2 + 5 + 3 + 3 - 7 + 6 - 4 - 8 + 6 + 1151 + 845 + 1176 + 2475 + 3328 + 867 + 2915 + 1083 + 2799 + 7496 + 2420 + 8464 + 4608 + 1 2500 + 9464", "x2": "add idiv sign x_0_11 sqr n mul n mul mod x_0_3 n n", "tree": "((sign(x_0_11) idiv (n)**2) add (n mul ((x_0_3 mod n) mul n)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 5 - 5 - 10 + 8 + 14 + 21 - 29 - 20 + 10 + 21 + 33 - 46 - 32 + 17 + 33 + 50 - 68 - 49 + 29", "x2": "mul sign mul add add INT- 9 INT+ 5 x_0_1 x_0_5 add n x_0_1", "tree": "(sign((((-9 add 5) add x_0_1) mul x_0_5)) mul (n add x_0_1))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 6 + 10 + 5 + 3 + 1 + 2 + 5 + 3 + 1 + 2 + 5 + 3 + 1 + 2 + 5 + 3 + 1 + 2", "x2": "mod x_0_4 add mod x_0_2 mod sub sub n n x_0_4 INT+ 4 n", "tree": "(x_0_4 mod ((x_0_2 mod (((n sub n) sub x_0_4) mod 4)) add n))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 + 2 - 2 + 216 + 0 + 0 - 144 + 5328 + 0 + 0 - 144 + 5328 + 0 + 0 - 144 + 5328 + 0", "x2": "mul sqr idiv INT+ 6 sqr sub abs INT- 1 x_0_2 mul sign x_0_1 sub x_0_1 INT+ 4", "tree": "(((6 idiv ((abs(-1) sub x_0_2))**2))**2 mul (sign(x_0_1) mul (x_0_1 sub 4)))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 4 - 1 + 6 + 0 + 14 - 11 + 34 - 9 - 10 - 44 + 22 - 85 - 64 - 235 + 72 - 442 - 338 - 2839 + 340", "x2": "sub mul x_0_4 relu mod x_0_5 n n", "tree": "((x_0_4 mul relu((x_0_5 mod n))) sub n)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 2 - 10 - 1 + 6 + 8 + 5 + 6 + 29 + 20 + 6 + 22 + 38 + 19 + 4 + 46 + 52 - 4 + 6 + 78 + 49 - 38 + 33", "x2": "sub relu add sqr INT+ 6 x_0_7 x_0_2", "tree": "(relu(((6)**2 add x_0_7)) sub x_0_2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 7 + 26 + 25 + 44 + 43 + 62 + 61 + 80 + 79 + 98 + 97 + 116 + 115 + 134 + 133 + 152", "x2": "add relu INT+ 8 sub x_0_2 INT- 1 0", "tree": "(relu(8) add (x_0_2 sub -10))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 + 4 - 4 + 2 - 169 + 1372 - 510 + 729 - 628 + 31 + 723 + 17 + 15 + 744 - 512 - 13 - 629 - 1830 - 44", "x2": "add relu x_0_3 idiv mul mul sqr n n INT- 4 x_0_5", "tree": "(relu(x_0_3) add ((((n)**2 mul n) mul -4) idiv x_0_5))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 1 - 2 - 3 + 1 + 9 + 1 - 3 - 6 + 9 + 10 + 7 + 0 + 0 + 0 + 225 + 256 + 289 + 0 + 0 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul abs sign idiv n idiv abs n n sqr relu mul sign x_0_11 n", "tree": "(abs(sign((n idiv (abs(n) idiv n)))) mul (relu((sign(x_0_11) mul n)))**2)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 1 + 2 + 9 + 3 + 6 - 7 - 10 - 512 + 1458 + 9000 + 3993 + 1 368 - 1 5379 - 2 7440 - 172 8000 + 597 1968 + 4421 7000 + 2328 7176 + 7111 4112 - 1 2303 2000 - 2 5412 1840 - 183 9974 4000", "x2": "mul mul sqr n n x_0_7", "tree": "(((n)**2 mul n) mul x_0_7)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 7 - 5 + 10 - 1 - 2 + 3 - 5 - 57 - 55 - 53 - 121 - 125 - 123 - 204 - 265 - 266 - 350 - 484 - 494 - 581 - 801 - 877", "x2": "add INT+ 2 add add x_0_3 sub x_0_7 abs mul abs add n INT+ 2 INT- 5 sqr sub INT- 7 INT- 7", "tree": "(2 add ((x_0_3 add (x_0_7 sub abs((abs((n add 2)) mul -5)))) add ((-7 sub -7))**2))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 1 + 1 + 4 + 4 + 9 + 9 + 16 + 16 + 25 + 25 + 36 + 36 + 49 + 49", "x2": "sqr idiv n abs INT+ 2", "tree": "((n idiv abs(2)))**2", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 1 - 1 - 1 - 3 - 3 - 5 - 5 - 7 - 7 - 9 - 9 - 11 - 11 - 13", "x2": "sub add mul mod mul n INT- 9 INT- 2 idiv n n add INT+ 6 INT- 3 n", "tree": "(((((n mul -9) mod -2) mul (n idiv n)) add (6 add -3)) sub n)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 2 - 8 - 3 - 4 + 6 - 3 + 4 + 0 + 12 + 54 + 0 + 0 + 72 + 72 + 0 + 0 + 0 + 42 + 0 + 0 + 0 + 72", "x2": "mul INT+ 6 mod mul sub n sub x_0_4 n add n x_0_8 n", "tree": "(6 mul (((n sub (x_0_4 sub n)) mul (n add x_0_8)) mod n))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 8 - 3 - 6 + 4 + 2 + 3 + 0 - 3 + 1 + 2 - 2 - 1 - 1 + 0 + 1 - 1 - 1 + 0 + 0 + 0 + 0", "x2": "idiv x_0_7 INT- 3", "tree": "(x_0_7 idiv -3)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 4 - 4 - 4 - 7 - 6 - 5 - 6 - 5 - 5 - 6 - 5 - 5 - 5 - 4 - 5 - 6", "x2": "mod idiv n INT+ 3 add INT- 6 idiv n x_0_2", "tree": "((n idiv 3) mod (-6 add (n idiv x_0_2)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 2 + 1 + 0 + 0 - 6 + 4 + 3600 + 81 + 0 + 1600 + 6400 + 2025 + 1 4400 + 6 2500 + 10 4976 + 17 6400 + 8 2944 + 14 2884 + 12 2500 + 14 8225 + 92 1600", "x2": "sqr mul sub abs INT- 1 0 mod x_0_7 n mul sub n INT+ 1 0 idiv n INT- 3", "tree": "(((abs(-10) sub (x_0_7 mod n)) mul ((n sub 10) mul (n idiv -3))))**2", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 - 4 - 15 + 0 - 50 + 36 - 301 + 352 - 2628 + 3620 - 2 8787 + 4 3584 - 37 4062 + 61 372 - 561 705 + 976 6208 - 9538 1696", "x2": "add mul x_0_2 n mul n n", "tree": "((x_0_2 mul n) add (n mul n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 - 3 + 16 + 9 + 4 + 1 + 1 + 9 + 4 + 25 + 1 + 9 + 4 + 25 + 1 + 25 + 4", "x2": "sqr add relu mod add x_0_2 abs abs mod n INT- 2 n INT- 4", "tree": "((relu(((x_0_2 add abs(abs((n mod -2)))) mod n)) add -4))**2", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 10 + 4 + 7 + 4 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr mod n add idiv x_0_5 mul sign INT+ 7 relu x_0_2 sqr n", "tree": "((n mod ((x_0_5 idiv (sign(7) mul relu(x_0_2))) add (n)**2)))**2", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 + 9 - 5 + 8 - 6 + 7 - 7 + 6 - 8 + 5 - 9 + 4 - 10 + 3 - 11 + 2", "x2": "idiv sub x_0_1 sub INT+ 7 n INT- 1", "tree": "((x_0_1 sub (7 sub n)) idiv -1)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 10 - 5 + 8 + 0 + 6 + 8 - 10 + 4 + 1 + 9 + 4 + 12 + 34 - 66 + 266 - 6 + 1590 - 54 - 1 5906 - 222 - 1 5912 - 2004 - 6 3654 - 2 4054 - 216 4242 + 158 7558", "x2": "add INT- 6 mul x_0_2 x_0_12", "tree": "(-6 add (x_0_2 mul x_0_12))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 2 + 10 - 8 + 0 - 9 + 4 + 2 + 2 + 10 + 8 + 0 + 9 + 4 + 2 + 2 + 10 + 8 + 0 + 9 + 4 + 2 + 2", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 4 - 4 + 9 + 25 + 24 - 28 + 72 + 225 + 240 - 308 + 864 + 2925 + 3360 - 4620 + 1 3824 + 4 9725 + 6 480 - 8 7780", "x2": "mul x_0_4 n", "tree": "(x_0_4 mul n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 10 + 1 + 15 + 7 + 22 + 15 + 31 + 25 + 42 + 37 + 55 + 51 + 70 + 67 + 87 + 85", "x2": "add add x_0_2 n sign idiv n x_0_1", "tree": "((x_0_2 add n) add sign((n idiv x_0_1)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 + 3 - 6 - 14 + 4 - 14 - 22 + 12 - 22 - 30 + 148 - 30 - 38 + 2 2044 - 38 - 46 + 4 8595 9972 - 46", "x2": "add sub sqr mul relu x_0_3 sqr sign n INT+ 8 x_0_3", "tree": "((((relu(x_0_3) mul (sign(n))**2))**2 sub 8) add x_0_3)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 2 - 1 - 8 - 9 - 13 - 14 - 25 - 30 - 41 - 48 - 67 - 80 - 105 - 122 - 163 - 192 - 239 - 276 - 361", "x2": "sub add mod add sub INT- 5 mod n INT+ 1 0 sign INT- 6 INT+ 6 add x_0_4 x_0_4 add n n", "tree": "(((((-5 sub (n mod 10)) add sign(-6)) mod 6) add (x_0_4 add x_0_4)) sub (n add n))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 0 - 8 + 9 + 6 + 29 + 50 + 66 + 102 + 138 + 200 + 286 + 391 + 535 + 718 + 966 + 1303 + 1748 + 2340 + 3118", "x2": "add n add add add n x_0_5 x_0_1 n", "tree": "(n add (((n add x_0_5) add x_0_1) add n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 1 - 8 - 8 + 5 + 12 - 14 + 0 - 9 - 20 + 0 + 12 - 26 + 0 + 0 - 32 + 0 + 0", "x2": "mul idiv x_0_3 abs n mul sign idiv x_0_2 sqr relu abs INT- 5 n", "tree": "((x_0_3 idiv abs(n)) mul (sign((x_0_2 idiv (relu(abs(-5)))**2)) mul n))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 7 + 6 - 28 + 30 - 168 + 210 - 1344 + 1890 - 1 3440 + 2 790 - 16 1280 + 27 270 - 225 7920 + 405 4050 - 3612 6720 + 6891 8850", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 - 8 + 5 + 8 + 7 - 5 - 1 + 10 + 9 + 52 + 26 + 66 - 16 + 25 + 9 + 115 - 25 + 10 - 2719 - 551 - 4266 + 2563 + 26 + 4285", "x2": "sub sub sqr INT+ 1 0 x_0_3 sqr x_0_9", "tree": "(((10)**2 sub x_0_3) sub (x_0_9)**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 4 + 5 - 6 - 8 - 2 + 4 + 5 - 6 - 8 + 2 + 4 + 5 - 6 - 8 + 2 + 4 + 5 - 6 - 8 + 2", "x2": "mul x_0_5 sign add sub sign mod idiv n INT+ 1 add mul INT- 5 INT+ 8 n mul x_0_5 x_0_2 n", "tree": "(x_0_5 mul sign(((sign(((n idiv 1) mod ((-5 mul 8) add n))) sub (x_0_5 mul x_0_2)) add n)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 2 + 100 + 615 + 3195 + 1 6100 + 8 630 + 40 3285 + 201 6565 + 1008 2970 + 5041 5000 + 2 5207 5155 + 12 6037 5935 + 63 187 9840 + 315 939 9370 + 1575 4699 7025 + 7877 3498 5305", "x2": "mul INT+ 5 add n sub x_0_1 mul INT- 1 0 INT+ 2", "tree": "(5 mul (n add (x_0_1 sub (-10 mul 2))))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 6 + 9 + 1 - 10 - 6 + 16 + 14 + 18 + 11 + 1 + 6 + 29 + 28 + 33 + 27 + 18 + 24 + 48 + 48 + 54", "x2": "add x_0_6 n", "tree": "(x_0_6 add n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 1 - 8 + 0 - 4 + 13 + 2 + 1 + 5 + 18 + 24 + 12 + 15 + 32 + 51 + 45 + 36 + 56 + 92 + 105", "x2": "add add x_0_4 INT+ 9 x_0_5", "tree": "((x_0_4 add 9) add x_0_5)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 - 6 - 9 + 1 + 0 + 8 + 1 + 8 - 5 + 9 + 36 + 81 + 1 + 0 + 64 + 1 + 64 + 25 + 81 + 1296 + 6561 + 1 + 0 + 4096", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 3 + 10 - 1 + 10 + 1 + 9 + 0 + 0 - 1 + 0 + 0 + 0 - 1 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1", "x2": "idiv sign sub mul x_0_4 idiv add n INT- 3 x_0_6 sign INT- 2 n", "tree": "(sign(((x_0_4 mul ((n add -3) idiv x_0_6)) sub sign(-2))) idiv n)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 + 5 + 5 + 6 + 7 + 9 + 8 + 9 + 9 + 10 + 11 + 13 + 12 + 13 + 13 + 14 + 15", "x2": "add mod x_0_1 relu INT+ 4 add sub abs x_0_2 x_0_1 x_0_1", "tree": "((x_0_1 mod relu(4)) add ((abs(x_0_2) sub x_0_1) add x_0_1))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 - 4 + 8 + 0 + 0 + 0 + 2 + 2 + 2 + 0 + 0 + 0 + 2 + 2 + 2 + 0 + 0 + 0", "x2": "relu sub mod x_0_3 INT- 6 INT- 2", "tree": "relu(((x_0_3 mod -6) sub -2))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 10 - 3 - 7 + 3 + 576 + 3969 + 256 + 2916 + 1600 + 4028 4409 + 22 6956 9600 + 1116 2281 + 16 6774 2244 + 5 7672 225 + 41 5445 4243 9631 3600 + 14 8862 3444 2233 7346 9089 + 4 369 2787 8099 7776 + 10 407 2474 6685 804 9025 + 1 3304 2487 6309 9643 400", "x2": "sqr mul n sub sub relu INT- 9 mod sign n add INT- 8 x_0_1 x_0_5", "tree": "((n mul ((relu(-9) sub (sign(n) mod (-8 add x_0_1))) sub x_0_5)))**2", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 7 + 2 - 4 - 9 - 10 - 7 + 6 - 7 - 10 - 2 + 3 + 7 + 104 + 42 + 75 + 160 + 187 + 144 + 133 + 160 + 231 + 66 + 92 + 192 + 2625 + 1118 + 2052", "x2": "mul n add sign n sub abs relu abs x_0_12 relu INT- 6", "tree": "(n mul (sign(n) add (abs(relu(abs(x_0_12))) sub relu(-6))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 9 - 10 + 1 + 9 + 7 + 1 + 9 + 7 + 1 + 9 + 7 + 1 + 9 + 7 + 1 + 9 + 7", "x2": "mod x_0_3 sub sub idiv sign idiv n INT+ 5 n INT- 1 0 INT- 7", "tree": "(x_0_3 mod (((sign((n idiv 5)) idiv n) sub -10) sub -7))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 6 + 10 - 7 - 4 + 6 + 0 + 15 3664 + 3 5721 + 0 + 9 4864 + 45 1584 + 40 5769 + 0 + 133 4025 + 61 4656 + 0 + 311 1696 + 113 2096 + 237 1600 + 0 + 286 9636", "x2": "sqr relu mul mul INT- 7 mod abs x_0_7 idiv n INT- 1 n", "tree": "(relu(((-7 mul (abs(x_0_7) mod (n idiv -1))) mul n)))**2", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 10 + 7 - 72 + 160 - 1700 + 5940 - 8 3006 + 38 608 - 672 2838 + 3806 1700 - 8 1346 2188 + 54 8088 6384 - 1374 7510 7744 + 1 742 5373 3812 - 30 9318 9923 9250 + 275 89 5585 9712 - 8939 3188 8013 8626", "x2": "sub mul add relu n x_0_2 mul n n sqr n", "tree": "(((relu(n) add x_0_2) mul (n mul n)) sub (n)**2)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 1 + 2 + 10 + 7 + 10 + 1 + 3 + 10 + 0 + 0 + 8 + 3 + 8 + 0 + 0 + 6 + 0 + 0 + 4 + 1 + 3 + 0", "x2": "idiv add n sub sqr abs abs x_0_8 add x_0_7 sign mod INT- 1 INT- 1 n", "tree": "((n add ((abs(abs(x_0_8)))**2 sub (x_0_7 add sign((-1 mod -1))))) idiv n)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 2 + 5 + 9 + 5 + 11 + 18 + 11 + 20 + 11 + 22 + 34 + 22 + 36 + 22 + 38", "x2": "abs add relu mod x_0_1 add n add sign INT- 7 n n", "tree": "abs((relu((x_0_1 mod (n add (sign(-7) add n)))) add n))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 6 - 5 - 5 - 6 - 6 - 5 - 5 - 6 - 6 - 5 - 5 - 6 - 6 - 5 - 5", "x2": "sub mod add add sub add mul INT- 6 n n mod n n x_0_1 INT- 7 INT- 2 INT+ 5", "tree": "(((((((-6 mul n) add n) sub (n mod n)) add x_0_1) add -7) mod -2) sub 5)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 9 - 6 - 4 - 8 - 6 - 8 - 8 - 10 - 14 - 20 - 20 - 14 - 18 - 24 - 16 - 26", "x2": "sub mod mul n mul INT- 9 abs add mod x_0_2 INT+ 1 n x_0_2 relu n", "tree": "(((n mul (-9 mul abs(((x_0_2 mod 1) add n)))) mod x_0_2) sub relu(n))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 1 - 4 + 10 - 3 - 4 + 7 - 6 - 70 - 7 - 28 - 70 - 21 - 28 - 49 - 42 - 490 - 49 - 196 - 490 - 147 - 196 - 343", "x2": "mul INT- 7 abs x_0_8", "tree": "(-7 mul abs(x_0_8))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 3 + 10 - 5 - 1 - 5 + 5 + 1 + 5 - 5 - 1 - 5 + 5 + 1 + 5 - 5 - 1 - 5", "x2": "sub mod INT+ 5 x_0_3 x_0_3", "tree": "((5 mod x_0_3) sub x_0_3)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 1 + 0 + 9 + 4 + 15 + 2 + 19 - 4 + 27 - 12 + 43 - 26 + 69 - 54 + 111 - 106 + 183", "x2": "sub abs n sub x_0_3 x_0_2", "tree": "(abs(n) sub (x_0_3 sub x_0_2))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 + 5 - 7 + 9 + 10 - 8 + 40 + 56 + 72 + 80 - 64 + 320 - 448 + 576 - 640 - 512 - 2560 + 3584 - 4608 - 5120", "x2": "mul mul sign sub relu x_0_5 x_0_2 x_0_5 INT- 8", "tree": "((sign((relu(x_0_5) sub x_0_2)) mul x_0_5) mul -8)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 2 + 8 - 6 - 3 + 3 - 4 + 1 + 9 + 2 + 8 + 6 + 3 + 3 + 4 + 1 + 9 + 2 + 8 + 6 + 3 + 3 + 4", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 8 - 6 - 6 + 8 + 8 + 4 + 8 + 9 + 10 + 13 + 12 + 13 + 18 + 23 + 25 + 27 + 19 + 31 + 33 + 39 + 45", "x2": "add relu mod x_0_7 x_0_6 n", "tree": "(relu((x_0_7 mod x_0_6)) add n)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 5 + 7 - 83 - 143 - 242 - 348 - 476 - 620 - 782 - 962 - 1161 - 1377 - 1611 - 1863 - 2133 - 2421 - 2727", "x2": "add idiv x_0_2 add idiv mod n n n relu abs n mul mul INT- 9 relu n n", "tree": "((x_0_2 idiv (((n mod n) idiv n) add relu(abs(n)))) add ((-9 mul relu(n)) mul n))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 1 - 2 + 1 + 2 - 1 - 2 + 1 + 2 - 1 - 2 + 1 + 2 - 1 - 2 + 1 + 2", "x2": "sub relu sub add mod add x_0_1 INT+ 9 INT+ 6 INT- 7 n x_0_2", "tree": "(relu(((((x_0_1 add 9) mod 6) add -7) sub n)) sub x_0_2)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 4 + 8 - 10 + 2 + 5 + 1 + 8 + 5 - 5 + 2 + 0 + 2 + 2 + 0 + 2 + 0 + 2 + 2 + 0 + 2 + 0 + 2 + 2 + 0", "x2": "add sign idiv sub x_0_5 x_0_1 n sign abs add INT+ 7 x_0_10", "tree": "(sign(((x_0_5 sub x_0_1) idiv n)) add sign(abs((7 add x_0_10))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 9 + 7 + 2277 + 3681 + 5121 - 1 3437 - 2 3913 - 3 4425 + 13 5333 + 23 2641 + 33 561 - 119 3661 - 206 5545 - 294 2649 + 1077 9813 + 1863 1521 + 2653 497", "x2": "mul sub x_0_3 sqr mul n INT- 4 INT- 9", "tree": "((x_0_3 sub ((n mul -4))**2) mul -9)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 9 + 9 + 10 - 4 + 10 + 1 + 3 + 2 - 9 + 122 + 153 + 178 + 206 + 221 + 266 + 290 + 327 + 363 + 391 + 563 + 637 + 707 + 782 + 846", "x2": "add abs abs sqr n x_0_10", "tree": "(abs(abs((n)**2)) add x_0_10)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 2 - 3 + 9 + 7 - 12 - 15 - 13 - 19 - 13 - 11 - 13 - 23 - 15 - 23 - 21 - 23 - 15 - 25 - 13", "x2": "sub add sub add INT- 9 INT- 4 n mod x_0_5 n INT- 3", "tree": "((((-9 add -4) sub n) add (x_0_5 mod n)) sub -3)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 9 - 2 + 1 - 5 + 7 + 1 - 10 + 4 + 7 + 9 + 10 + 10 + 82 + 5 + 2 + 26 + 50 + 2 + 101 + 17 + 50 + 82 + 101 + 101 + 6725 + 26", "x2": "add relu sign mul mod x_0_10 n INT+ 4 sqr x_0_12", "tree": "(relu(sign(((x_0_10 mod n) mul 4))) add (x_0_12)**2)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 10 - 7 - 10 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 0 + 3 + 0 + 5 + 0 + 7 + 0 + 9 + 0 + 11 + 0 + 13 + 0 + 15 + 0", "x2": "abs relu sub n add add x_0_1 x_0_1 sqr x_0_1", "tree": "abs(relu((n sub ((x_0_1 add x_0_1) add (x_0_1)**2))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 0 - 3 - 7 - 12 - 18 - 25 - 33 - 42 - 52 - 63 - 75 - 88 - 102 - 117 - 133", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226", "x2": "add sqr n sub sign mul idiv n relu sqr x_0_1 x_0_1 add sub n INT+ 1 n", "tree": "((n)**2 add (sign(((n idiv relu((x_0_1)**2)) mul x_0_1)) sub ((n sub 1) add n)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 2 + 10 + 8 + 4 + 14 + 8 + 14 + 18 + 18 + 28 + 32 + 42 + 56 + 70 + 94 + 122 + 160", "x2": "sub n sub n add x_0_3 abs sub abs INT+ 4 x_0_2", "tree": "(n sub (n sub (x_0_3 add abs((abs(4) sub x_0_2)))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 + 6 - 1 + 9 + 81 + 729 + 6561 + 5 9049 + 53 1441 + 478 2969 + 4304 6721 + 3 8742 489 + 34 8678 4401 + 313 8105 9609 + 2824 2953 6481 + 2 5418 6582 8329 + 22 8767 9245 4961 + 205 8911 3209 4649", "x2": "mul abs add x_0_1 mul mod x_0_3 x_0_3 x_0_2 INT+ 9", "tree": "(abs((x_0_1 add ((x_0_3 mod x_0_3) mul x_0_2))) mul 9)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 - 7 + 2 + 14 + 18 + 32 + 49 + 58 + 77 + 99 + 113 + 137 + 164 + 183 + 212 + 244 + 268 + 302", "x2": "add relu mul n sub abs sign idiv relu n n INT- 4 x_0_3", "tree": "(relu((n mul (abs(sign((relu(n) idiv n))) sub -4))) add x_0_3)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 5 + 12 + 20 + 60 + 120 + 420 + 960 + 3780 + 9600 + 4 1580 + 11 5200 + 54 540 + 161 2800 + 810 8100 + 2580 4800 + 1 3783 7700", "x2": "mul abs x_0_2 n", "tree": "(abs(x_0_2) mul n)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 6 - 4 - 8 - 6 - 4 - 8 - 6 - 4 - 8 - 6 - 4 - 8 - 6 - 4 - 8 - 6 - 4 - 8", "x2": "idiv x_0_3 sign mul sign INT- 9 relu mod sign x_0_4 add INT- 9 x_0_3", "tree": "(x_0_3 idiv sign((sign(-9) mul relu((sign(x_0_4) mod (-9 add x_0_3))))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 0 - 14 - 76 - 406 - 2468 - 1 7314 - 13 8556 - 124 7054 - 1247 596 - 1 3717 6618 - 16 4611 9484 - 213 9955 3366 - 2995 9374 7204 - 4 4939 620 8146 - 71 9024 9933 428", "x2": "mod add INT+ 8 n add INT- 4 mul n add INT- 7 x_0_1", "tree": "((8 add n) mod (-4 add (n mul (-7 add x_0_1))))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 + 2 - 2 + 36 + 9 + 4 + 16 + 6 - 5 + 6 - 110 + 8 + 45 + 8 + 852 + 10 - 113 + 10", "x2": "sub add n sign n mod x_0_2 mul INT+ 8 x_0_4", "tree": "((n add sign(n)) sub (x_0_2 mod (8 mul x_0_4)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 3 + 1 - 9 - 10 + 5 + 7 + 48 + 342 + 60 + 88 + 576 + 4446 + 840 + 1305 + 9216 + 7 5582 + 1 5084 + 2 4434 + 18 4260 + 158 7117", "x2": "mul n sub x_0_1 mod sub sub idiv idiv x_0_6 sub INT+ 5 INT- 7 n sub n n x_0_4 x_0_1", "tree": "(n mul (x_0_1 sub (((((x_0_6 idiv (5 sub -7)) idiv n) sub (n sub n)) sub x_0_4) mod x_0_1)))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 5 + 6 - 5 - 4 + 7 - 9 + 25 - 195 + 25 - 229 + 49 - 346 + 625 + 3 3552 - 23 4344 + 5 2441 - 36 4805 + 11 9716 - 44 7520 + 11 2573 6704 + 470 3695 3261", "x2": "sub sqr x_0_6 relu mul mod mod mod INT+ 7 n mul INT+ 8 sign INT+ 5 n add n x_0_1", "tree": "((x_0_6)**2 sub relu(((((7 mod n) mod (8 mul sign(5))) mod n) mul (n add x_0_1))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 8 + 6 - 9 + 5 + 8 + 6 + 9 + 5 + 8 + 6 + 9 + 5 + 8 + 6 + 9 + 5 + 8 + 6", "x2": "relu abs x_0_4", "tree": "relu(abs(x_0_4))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 4 + 10 - 7 - 10 + 9 - 5 - 2 - 8 + 0 + 196 + 1 + 361 + 529 + 25 + 400 + 324 + 625 + 324 + 441 + 361 + 529 + 576 + 4 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 784 + 1225 + 1296", "x2": "idiv relu mul relu n sqr sub mod INT- 1 add n sub n x_0_9 n abs n", "tree": "(relu((relu(n) mul (((-1 mod (n add (n sub x_0_9))) sub n))**2)) idiv abs(n))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 7 - 20 - 19 - 19 - 19 - 19 - 19 - 19 - 19 - 19 - 19 - 19 - 19 - 19 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 18 - 17", "x2": "add mul INT+ 5 INT- 4 abs idiv n mul add INT+ 5 add mod abs relu INT+ 2 INT- 1 x_0_1 INT+ 1", "tree": "((5 mul -4) add abs((n idiv ((5 add ((abs(relu(2)) mod -1) add x_0_1)) mul 1))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 23 + 47 - 171 + 475 - 1471 + 4359 - 1 3139 + 3 9347 - 11 8119 + 35 4271 - 106 2907 + 318 8619 - 956 5967 + 2869 7783 - 8609 3475 + 2 5828 291 - 7 7484 1015 + 23 2452 2895 - 69 7356 8843 + 209 2070 6363 - 627 6211 9263 + 1882 8635 7607 - 5648 5907 3011 + 1 6945 7721 8835 - 5 837 3165 6711 + 15 2511 9496 9919", "x2": "sub mul add mul n INT- 4 sub sign INT+ 9 x_0_1 INT+ 2 x_0_1", "tree": "((((n mul -4) add (sign(9) sub x_0_1)) mul 2) sub x_0_1)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 10 - 8 + 5 + 12 - 1 + 14 + 21 + 13 + 25 + 39 + 23 + 47 + 61 + 43 + 75 + 85 + 65 + 109 + 107 + 85 + 149 + 142 + 119 + 195 + 177 + 154 + 247 + 206", "x2": "sub add add n mod relu mod x_0_3 n n x_0_3 INT+ 3", "tree": "(((n add (relu((x_0_3 mod n)) mod n)) add x_0_3) sub 3)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 2323 + 1 2104 + 1 1887 + 1 1672 + 1 1459 + 1 1248 + 1 1039 + 1 832 + 1 627 + 1 424 + 1 223 + 1 24 + 9827 + 9632 + 9439 + 9248 + 9059 + 8872 + 8687 + 8504 + 8323 + 8144 + 7967 + 7792 + 7619 + 7448", "x2": "relu add n add sqr sub mul sqr INT+ 4 INT+ 7 abs n n", "tree": "relu((n add (((((4)**2 mul 7) sub abs(n)))**2 add n)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 1 + 0 + 1 + 0 + 3 + 0 + 3 + 0 + 7 + 0 + 3 + 0 + 13 + 0 + 5 + 0 + 9 + 0 + 1 + 0 + 9 + 0 + 9 + 0 + 3 + 0 + 27", "x2": "mod mul abs INT+ 9 x_0_2 n", "tree": "((abs(9) mul x_0_2) mod n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 + 10 - 11 + 1 - 19 - 10 - 31 - 23 - 45 - 38 - 61 - 55 - 79 - 74 - 99 - 95 - 121 - 118 - 145 - 143 - 171 - 170 - 199 - 199 - 229 - 230 - 261 - 263", "x2": "add x_0_2 add sub INT- 4 n sign x_0_1", "tree": "(x_0_2 add ((-4 sub n) add sign(x_0_1)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 - 5 + 2 - 10 - 2 - 7 - 3 - 4 + 3 - 10 + 10 + 6 - 39 - 70 - 15 - 8 + 51 - 17 - 5 - 2 + 13 + 4 - 5 - 8 - 5 - 7 + 16 - 4 + 16 + 42 + 99 - 10 + 66 - 27 - 434 + 1 + 38", "x2": "idiv idiv mul x_0_4 n INT+ 1 sub x_0_11 mul x_0_5 abs mul INT+ 1 idiv x_0_7 INT- 6", "tree": "(((x_0_4 mul n) idiv 1) idiv (x_0_11 sub (x_0_5 mul abs((1 mul (x_0_7 idiv -6))))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 2 + 0 + 3 + 7 + 12 + 18 + 25 + 33 + 42 + 52 + 63 + 75 + 88 + 102 + 117 + 133 + 150 + 168 + 187 + 207 + 228 + 250 + 273 + 297 + 322 + 348 + 375", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 4 - 5 - 3 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 2 + 2 - 5 + 3 + 8 + 0 + 2 + 2 + 5 + 3 + 8 + 0 + 2 + 2 + 5 + 3 + 8 + 0 + 2 + 2 + 5 + 3 + 8 + 0 + 2 + 2 + 5 + 3 + 8 + 0 + 2 + 2", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 - 2 + 41 + 39 + 13 - 5 + 0 - 2 - 20 + 27 + 25 - 26 + 21 - 29 - 23 + 15 - 20 - 2 + 9 + 7 - 44 + 3 - 47 - 41 - 3 - 38 - 20", "x2": "sub sub relu sqr mod x_0_2 INT+ 9 n n", "tree": "((relu(((x_0_2 mod 9))**2) sub n) sub n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul n abs relu n", "tree": "(n mul abs(relu(n)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 7 + 4 + 11 + 11 + 15 + 12 + 19 + 25 + 23 + 26 + 27 + 40 + 31 + 40 + 35 + 59 + 39 + 100 + 43 + 121 + 47 + 146 + 51 + 167 + 55 + 208 + 59", "x2": "add x_0_2 mod sqr n add x_0_2 INT+ 5", "tree": "(x_0_2 add ((n)**2 mod (x_0_2 add 5)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 9 + 7 + 9 - 7 - 1 - 2 + 0 - 2 - 8 - 7 - 9 - 7 - 1 - 2 + 0 - 2 - 8 - 7 - 9 - 7 - 1 - 2 + 0 - 2 - 8 - 7 - 9 - 7 - 1", "x2": "add add INT- 9 abs x_0_4 idiv x_0_2 INT- 1 0", "tree": "((-9 add abs(x_0_4)) add (x_0_2 idiv -10))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 + 7 + 5 + 4 + 9 - 11 - 7 - 5 - 15 + 25 + 17 + 13 + 33 - 47 - 31 - 23 - 63 + 97 + 65 + 49 + 129 - 191 - 127 - 95 - 255 + 385 + 257 + 193 + 513 - 767", "x2": "sub idiv INT- 7 INT- 2 mul x_0_4 INT+ 2", "tree": "((-7 idiv -2) sub (x_0_4 mul 2))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 64 + 729 + 4096 + 1 5625 + 4 6656 + 11 7649 + 26 2144 + 53 1441 + 100 0 + 177 1561 + 298 5984 + 482 6809 + 752 9536 + 1139 625 + 1677 7216 + 2413 7569 + 3401 2224 + 4704 5881 + 6400 0 + 8576 6121 + 1 1337 9904 + 1 4803 5889 + 1 9110 2976 + 2 4414 625 + 3 891 5776", "x2": "mul relu sqr mul n n relu sqr n", "tree": "(relu(((n mul n))**2) mul relu((n)**2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 8 - 10 + 3 + 7 + 9 + 8 + 13 + 0 + 16 + 0 + 19 + 0 + 22 + 0 + 25 + 0 + 28 + 0 + 31 + 0 + 34 + 0 + 37 + 0 + 40 + 0 + 43 + 0", "x2": "relu add n mod add idiv abs x_0_2 abs mod x_0_2 abs relu n x_0_2 n", "tree": "relu((n add (((abs(x_0_2) idiv abs((x_0_2 mod abs(relu(n))))) add x_0_2) mod n)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 9 + 9 - 80 + 145 - 1999 + 5221 - 9 7950 + 33 4145 - 793 3949 + 3341 4501 - 9 6000 7828 + 48 1168 8145 - 1622 4132 2931 + 9430 9087 6421 - 36 5042 9765 9474 + 241 4312 6436 3777 - 1 549 7420 2358 7985 + 7 8223 7296 5386 3749 - 380 8456 8705 1526 2584 + 3128 9491 8615 4549 9601 - 16 7952 9479 8972 3079 9543 + 151 4411 4060 9880 2180 6885 - 8884 7109 4865 6350 9295 8246 + 8 7230 969 9129 1005 6076 5761 - 555 2944 3429 1021 9330 9890 3749 + 5896 7545 5661 1271 9790 7765 4437 - 40 4809 6425 9815 4989 2291 83 3020 + 462 3055 5723 8323 7231 5968 8107 8609", "x2": "add mul n mul x_0_2 n sqr sign n", "tree": "((n mul (x_0_2 mul n)) add (sign(n))**2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 1 + 7 + 3 + 6 - 4 + 4 + 2 + 1 + 15 + 11 + 14 + 12 + 12 + 10 + 9 + 23 + 19 + 22 + 20 + 20 + 18 + 17 + 31 + 27 + 30 + 28 + 28 + 26 + 25 + 39 + 35 + 38 + 36", "x2": "add mod sub INT+ 8 idiv abs INT+ 7 INT+ 8 n abs x_0_7", "tree": "(((8 sub (abs(7) idiv 8)) mod n) add abs(x_0_7))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 2 + 0 - 9 + 7 - 1 - 3 + 1 - 3 + 1 - 1 - 8 + 15 - 16 + 13 - 12 + 9 - 8 + 7 - 15 + 30 - 46 + 59 - 71 + 80 - 88 + 95 - 110 + 140 - 186 + 245 - 316 + 396 - 484 + 579", "x2": "sub x_0_8 x_0_1", "tree": "(x_0_8 sub x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7 + 6 + 0 - 7", "x2": "add x_0_3 idiv idiv n sqr sqr sub mul n n n add x_0_3 abs n", "tree": "(x_0_3 add ((n idiv ((((n mul n) sub n))**2)**2) idiv (x_0_3 add abs(n))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 1 + 8 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 10 - 7 + 13 + 14 - 2 + 21 + 21 + 6 + 31 + 31 + 17 + 44 + 44 + 31 + 60 + 60 + 48 + 78 + 79 + 68 + 99 + 100 + 90 + 123 + 124 + 115 + 149 + 151", "x2": "add n sub x_0_3 idiv x_0_1 add n n", "tree": "(n add (x_0_3 sub (x_0_1 idiv (n add n))))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "abs mul sign add idiv INT+ 3 INT+ 7 n sqr n", "tree": "abs((sign(((3 idiv 7) add n)) mul (n)**2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 - 6 - 5 - 7 - 8 - 3 - 2 - 1 + 2 + 3 + 1 + 1 + 2 + 0 + 6 + 4 + 5 + 6 + 2 + 3 + 1 + 1 + 2 + 0 + 6 + 4 + 5 + 6 + 2 + 3 + 1 + 1 + 2 + 0 + 6", "x2": "mod x_0_10 INT+ 7", "tree": "(x_0_10 mod 7)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 3 - 9 - 9 - 4 + 4 + 3 + 10 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign sub relu mod add n add INT+ 6 INT+ 1 0 x_0_7 sign x_0_4", "tree": "sign((relu(((n add (6 add 10)) mod x_0_7)) sub sign(x_0_4)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 4 + 4 + 64 + 225 + 576 + 1225 + 2304 + 3969 + 6400 + 9801 + 1 4400 + 2 449 + 2 8224 + 3 8025 + 5 176 + 6 5025 + 8 2944 + 10 4329 + 12 9600 + 15 9201 + 19 3600 + 23 3289 + 27 8784 + 33 625 + 38 9376 + 45 5625 + 52 9984 + 61 3089", "x2": "sqr sub sign relu mul idiv idiv INT- 1 abs n n x_0_2 sqr n", "tree": "((sign(relu((((-1 idiv abs(n)) idiv n) mul x_0_2))) sub (n)**2))**2", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 5 - 5 + 2 - 9 + 2 + 10 + 2 - 2 + 2 + 167 + 242 + 184 + 506 + 362 + 642 + 2 + 146 + 6424 + 81 4962 + 94 5254 + 205 6386 + 423 6234 + 559 5074 + 6 4202 + 7698 + 2533 1294 + 1465 8920 4610 + 22 3400 8388 7890 + 58 3142 6947 6562 + 270 514 2849 5978 + 758 4656 3788 1090 + 11 8544 6232 6170 + 168 808 3602 + 6 8250 1108 1282", "x2": "relu add abs mul mul sub INT- 2 x_0_8 x_0_9 n INT+ 2", "tree": "relu((abs((((-2 sub x_0_8) mul x_0_9) mul n)) add 2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 7 - 1 - 8 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281", "x2": "sqr sub sqr n idiv relu INT- 1 0 x_0_3", "tree": "(((n)**2 sub (relu(-10) idiv x_0_3)))**2", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 9 + 5 - 5 + 10 + 1 + 17 + 9 + 26 + 19 + 37 + 31 + 50 + 45 + 65 + 61 + 82 + 79 + 101 + 99 + 122 + 121 + 145 + 145 + 170 + 171 + 197 + 199", "x2": "add mod relu n mul mul INT+ 5 n INT+ 3 x_0_2", "tree": "((relu(n) mod ((5 mul n) mul 3)) add x_0_2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 7 - 6 + 4 + 3 - 9 - 4 - 19 - 26 - 42 - 39 - 62 - 46 - 64 - 34 - 57 - 6 - 47 + 20 - 53 + 35 - 91 + 36 - 159 + 39 - 245 + 76 - 336 + 177 - 434 + 360", "x2": "add sub add x_0_2 relu INT- 1 add n n sub idiv relu x_0_5 n x_0_5", "tree": "(((x_0_2 add relu(-1)) sub (n add n)) add ((relu(x_0_5) idiv n) sub x_0_5))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 6 + 8 - 1 - 1 - 4 + 5 + 22 + 52 + 78 + 9 + 10 + 50 + 68 + 328 + 830 + 1324 + 160 + 188 + 998 + 1426 + 7214 + 1 9088 + 3 1774 + 3998 + 4886 + 2 6944 + 3 9926 + 20 9204 + 57 2638 + 98 4992 + 12 7934 + 16 1236", "x2": "add abs mul n x_0_7 INT- 2", "tree": "(abs((n mul x_0_7)) add -2)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 8 + 2 + 4 + 2 - 1 - 1 - 9 - 9 + 5 - 5 - 22 + 2 + 21 + 16 + 5 + 18 + 5 + 128 + 2 - 11 + 21 + 16 + 5 + 18 + 5 + 20 + 2 + 649 - 71 + 7 - 155 + 18 + 5 + 20 + 2 + 9", "x2": "mod x_0_8 add mul sub x_0_10 idiv INT+ 3 sign n x_0_11 add n INT+ 6", "tree": "(x_0_8 mod (((x_0_10 sub (3 idiv sign(n))) mul x_0_11) add (n add 6)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675", "x2": "sub mul n relu n sign sub abs INT- 1 0 sign sqr n", "tree": "((n mul relu(n)) sub sign((abs(-10) sub sign((n)**2))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 - 6 + 2 - 8 - 114 - 154 - 200 - 252 - 310 - 374 - 444 - 520 - 602 - 690 - 784 - 884 - 990 - 1102 - 1220 - 1344 - 1474 - 1610 - 1752 - 1900 - 2054 - 2214 - 2380 - 2552 - 2730 - 2914", "x2": "mul n sub mul n INT- 3 sign add add n INT+ 5 abs add idiv INT- 9 x_0_5 n", "tree": "(n mul ((n mul -3) sub sign(((n add 5) add abs(((-9 idiv x_0_5) add n))))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 1 - 6 - 14 - 23 - 33 - 44 - 56 - 69 - 83 - 98 - 114 - 131 - 149 - 168 - 188 - 209 - 231 - 254 - 278 - 303 - 329 - 356 - 384 - 413 - 443 - 474", "x2": "sub sub x_0_1 n sqr INT+ 2", "tree": "((x_0_1 sub n) sub (2)**2)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 + 8 + 9 - 1 - 5 + 8 + 9 - 1 - 5 + 8 + 9 - 1 - 5 + 8 + 9 - 1 - 5 + 8 + 9 - 1 - 5 + 8 + 9 - 1 - 5 + 8 + 9 - 1 - 5 + 8", "x2": "mul x_0_4 sign add INT+ 6 n", "tree": "(x_0_4 mul sign((6 add n)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 + 7 + 8 + 9 + 2 + 5 - 4 + 16 + 54 + 70 + 88 + 12 + 52 + 42 + 225 + 848 + 1173 + 1566 + 209 + 1020 + 861 + 4928 + 1 9481 + 2 8128 + 3 9125 + 5408 + 2 7513 + 2 4080 + 14 2883 + 58 4400 + 87 1937 + 125 1968 + 17 8431", "x2": "mul n sub abs x_0_7 sign INT+ 9", "tree": "(n mul (abs(x_0_7) sub sign(9)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 5 + 0 + 2 - 3 - 6 + 1 + 0 - 8 - 6 + 0 - 7 - 15 - 7 - 8 - 23 - 23 - 16 - 32 - 47 - 40 - 49 - 80 - 88 - 90 - 130 - 169 - 179 - 221 - 300", "x2": "add x_0_4 add sign x_0_1 mul x_0_3 sign INT+ 1 0", "tree": "(x_0_4 add (sign(x_0_1) add (x_0_3 mul sign(10))))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 - 6 + 3 - 2 - 7 + 10 - 135 - 205 - 76 - 1680 - 2690 - 1255 - 2 3804 - 4 815 - 2 653 - 40 5152 - 73 6800 - 39 5591 - 810 4835 - 1549 7192 - 874 4455 - 1 8643 2548 - 3 7233 8504 - 2 1934 8975 - 48 4764 2697 - 100 6124 5361 - 61 5726 9472 - 1405 9038 3712 - 3020 2379 4488 - 1912 4769 3314 - 4 4991 1162 9007 - 9 9716 3286 2121", "x2": "add mul n sub add INT- 7 x_0_3 n x_0_7", "tree": "((n mul ((-7 add x_0_3) sub n)) add x_0_7)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 100 + 484 + 1296 + 2704 + 4900 + 8100 + 1 2544 + 1 8496 + 2 6244 + 3 6100 + 4 8400 + 6 3504 + 8 1796 + 10 3684 + 12 9600 + 16 0 + 19 5364 + 23 6196 + 28 3024 + 33 6400 + 39 6900 + 46 5124 + 54 1696 + 62 7264 + 72 2500 + 82 8100", "x2": "sqr mul relu add n sqr INT- 3 n", "tree": "((relu((n add (-3)**2)) mul n))**2", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 5 + 6 + 10 + 1 + 4 - 10 + 10 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1", "x2": "idiv idiv INT- 1 0 sqr mul INT- 5 n sign idiv x_0_8 INT+ 5", "tree": "((-10 idiv ((-5 mul n))**2) idiv sign((x_0_8 idiv 5)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 6 - 7 - 1 - 11 - 12 - 6 - 16 - 17 - 11 - 21 - 22 - 16 - 26 - 27 - 21 - 31 - 32 - 26 - 36 - 37 - 31 - 41 - 42 - 36 - 46 - 47 - 41 - 51", "x2": "add INT- 5 x_0_3", "tree": "(-5 add x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 1 + 4 + 33 + 29 + 34 + 63 + 59 + 64 + 93 + 89 + 94 + 123 + 119 + 124 + 153 + 149 + 154 + 183 + 179 + 184 + 213 + 209 + 214 + 243 + 239 + 244 + 273 + 269", "x2": "add relu mul INT+ 3 INT+ 1 0 x_0_3", "tree": "(relu((3 mul 10)) add x_0_3)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 5 + 8 - 6 + 5 + 10 + 1 + 6 + 1 + 9 - 7 + 4 - 9 + 5 - 4 + 6 + 0 - 10 + 5 - 6 - 1 - 4 + 7 - 4 + 9 + 2 + 4 + 3 + 2 + 14 - 2 + 8 + 15 + 4 + 1 + 19 - 5 - 1 + 15", "x2": "sub abs relu x_0_3 x_0_12", "tree": "(abs(relu(x_0_3)) sub x_0_12)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "+ 2 + 27 + 431 + 7757 + 15 5139 + 341 3057 + 8191 3367 + 21 2974 7541 + 596 3293 1147 + 1 7889 8793 4409 + 57 2476 1390 1087 + 1946 4188 7263 6957 + 7 71 794 1493 451 + 266 2701 177 6735 7137 + 1 650 8040 7106 9428 5479 + 44 7333 7709 8491 5999 117 + 1968 2685 9233 3630 3956 5147 + 9 540 3552 4734 6998 1999 6761 + 434 5937 518 7265 5913 5984 4527 + 2 1729 6852 5936 3279 5679 9222 6349 + 112 9943 6334 8689 537 5355 9577 147 + 6101 6956 2082 9208 9026 9221 7158 7937 + 34 1694 9547 6643 5698 5507 6416 892 4471 + 1981 8307 3764 5327 515 9443 2133 1761 9317 + 11 8909 8442 5871 9623 956 6592 7990 5715 9019 + 737 2410 3440 4061 6631 9312 8753 5415 4385 9177 + 4 7183 4262 185 9946 4443 6024 226 6588 698 7327", "x2": "add sub relu INT- 2 mul x_0_1 mul INT- 2 sub n INT- 5 INT- 1", "tree": "((relu(-2) sub (x_0_1 mul (-2 mul (n sub -5)))) add -1)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 9 - 2 - 4 - 5 - 12 - 28 - 40 - 27 - 80 - 77 - 36 - 26 - 98 - 90 - 160 - 221 - 324 - 152 - 20 - 189 - 440 - 460 - 504 - 375 - 468 - 486 - 308 - 116", "x2": "mul sub mod x_0_3 n n n", "tree": "(((x_0_3 mod n) sub n) mul n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 4 + 3 - 2 + 5 + 7 + 7 + 8 + 9 + 10 + 8 + 8 + 7 + 10 + 9 + 7 + 7 + 8 + 9 + 10 + 8 + 8 + 7 + 10 + 9 + 7 + 7 + 8 + 9 + 10 + 8", "x2": "sub INT+ 7 mod x_0_5 idiv INT- 4 relu sign add INT+ 7 x_0_5", "tree": "(7 sub (x_0_5 mod (-4 idiv relu(sign((7 add x_0_5))))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 1 - 1 + 4 + 8 - 1 - 5 + 3 + 9 + 11 + 13 + 12 + 12 + 14 + 15 + 16 + 24 + 22 + 19 + 29 + 25 + 36 + 23 + 42 + 28 + 28 + 33 + 44 + 32 + 32 + 39 + 52 + 53 + 49", "x2": "relu add mod abs mul add x_0_5 x_0_8 x_0_2 add idiv x_0_7 x_0_8 x_0_6 n", "tree": "relu(((abs(((x_0_5 add x_0_8) mul x_0_2)) mod ((x_0_7 idiv x_0_8) add x_0_6)) add n))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 2 + 10 + 32 + 78 + 162 + 300 + 512 + 820 + 1250 + 1830 + 2592 + 3570 + 4802 + 6328 + 8192 + 1 440 + 1 3122 + 1 6290 + 2 0 + 2 4310 + 2 9282 + 3 4980 + 4 1472 + 4 8828 + 5 7122", "x2": "idiv sub INT- 4 sqr sqr n INT- 8", "tree": "((-4 sub ((n)**2)**2) idiv -8)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 3 - 6 - 5 - 4 - 3 - 7 - 4 + 0 - 7 - 4 - 6 - 7 - 4 - 3 - 7 - 4 + 0 - 7 - 4 - 6 - 7 - 4 - 3 - 7 - 4 + 0 - 7", "x2": "mod mul sub sqr sqr mod INT- 7 INT+ 9 mul n x_0_2 n INT- 9", "tree": "((((((-7 mod 9))**2)**2 sub (n mul x_0_2)) mul n) mod -9)", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 + 7 + 6 - 24 + 42 + 36 - 144 + 252 + 216 - 864 + 1512 + 1296 - 5184 + 9072 + 7776 - 3 1104 + 5 4432 + 4 6656 - 18 6624 + 32 6592 + 27 9936 - 111 9744 + 195 9552 + 167 9616 - 671 8464 + 1175 7312 + 1007 7696 - 4031 784 + 7054 3872", "x2": "sub n add mul x_0_3 INT- 6 n", "tree": "(n sub ((x_0_3 mul -6) add n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 0 + 10 - 8 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr sub n sign mod mod x_0_4 sub INT- 2 sqr sqr n x_0_2", "tree": "((n sub sign(((x_0_4 mod (-2 sub ((n)**2)**2)) mod x_0_2))))**2", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 9 - 7 + 4 + 1 - 7 - 6 - 52 - 31 - 424 - 224 - 4948 - 2747 - 6 9080 - 4 984 - 110 5028 - 69 6443 - 1989 184 - 1323 2060 - 3 9780 3284 - 2 7787 2823 - 87 5167 1768 - 63 9107 4404 - 2100 4012 1860 - 1597 7685 9479 - 5 4610 4316 7688 - 4 3139 7520 5208 - 152 9092 869 4484 - 125 1052 8095 195 - 4587 2762 6083 3624 - 3878 2637 945 5088 - 14 6792 8403 4667 4948 - 12 7982 7024 1201 6819", "x2": "add sub INT- 5 relu mul abs mod n x_0_2 n sign relu x_0_7", "tree": "((-5 sub relu((abs((n mod x_0_2)) mul n))) add sign(relu(x_0_7)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675", "x2": "add sub INT+ 5 abs sub INT+ 4 sub INT- 1 sub abs n add n INT- 1 relu sqr n", "tree": "((5 sub abs((4 sub (-1 sub (abs(n) sub (n add -1)))))) add relu((n)**2))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 8 + 9 - 8 + 6 - 3 + 5 + 3 + 0 - 1 + 5 - 8 + 0 - 1 + 5 - 23 + 0 - 18 + 5 - 42 + 0 - 39 + 5 - 65 + 0 - 89 + 5 - 92 + 0 - 147 + 5 - 185 + 0 - 246 + 5 - 325", "x2": "add mul n idiv x_0_6 sub abs x_0_9 mul INT+ 5 INT- 7 x_0_4", "tree": "((n mul (x_0_6 idiv (abs(x_0_9) sub (5 mul -7)))) add x_0_4)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 3 8809 + 5 1076 + 6 6049 + 8 4100 + 10 5625 + 13 1044 + 16 801 + 19 5364 + 23 5225 + 28 900 + 33 2929 + 39 1876 + 45 8329 + 53 2900 + 61 6225 + 70 8964 + 81 1801 + 92 5444 + 105 625 + 118 8100 + 133 8649 + 150 3076 + 168 2209 + 187 6900 + 208 8025 + 231 6484", "x2": "sqr add abs INT- 1 sqr sub sub INT- 5 n INT+ 8", "tree": "((abs(-1) add (((-5 sub n) sub 8))**2))**2", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 0 + 9 + 3 - 8 + 5 - 6 - 7 + 8 + 5 + 1 + 7 + 0 + 0 + 1 + 7 + 0 + 0 + 1 + 7 + 0 + 0 + 1 + 7 + 0 + 0 + 1 + 7 + 0 + 0 + 1 + 7 + 0 + 0", "x2": "abs idiv x_0_4 add sign mul relu n x_0_8 sub n mul n sign x_0_6", "tree": "abs((x_0_4 idiv (sign((relu(n) mul x_0_8)) add (n sub (n mul sign(x_0_6))))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 2 + 0 + 8 - 8 - 9 + 8 + 7 - 2 + 14 + 19 + 1 + 5 + 14 - 3 - 5 + 14 + 11 + 3 + 19 + 25 + 7 + 8 + 18 + 4 - 3 + 17 + 16 + 8 + 24 + 32 + 12", "x2": "add sub mod mod add add INT+ 1 0 n x_0_4 n INT- 4 x_0_5 n", "tree": "((((((10 add n) add x_0_4) mod n) mod -4) sub x_0_5) add n)", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 6 + 2 - 184 - 185 - 178 - 207 - 210 - 197 - 256 - 263 - 238 - 357 - 372 - 323 - 562 - 593 - 496 - 975 - 1038 - 845 - 1804 - 1931 - 1546 - 3465 - 3720 - 2951 - 6790 - 7301", "x2": "sub mul INT- 2 relu abs sub mul add mul INT+ 5 INT- 6 INT+ 2 mul sign INT+ 3 INT+ 3 x_0_3 n", "tree": "((-2 mul relu(abs(((((5 mul -6) add 2) mul (sign(3) mul 3)) sub x_0_3)))) sub n)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "idiv mul n n sign add mod x_0_1 n add sub INT+ 3 INT+ 4 n", "tree": "((n mul n) idiv sign(((x_0_1 mod n) add ((3 sub 4) add n))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 + 1 - 4 + 5 - 52 + 63 - 603 + 81 - 1314 + 99 - 2176 + 126 - 3288 + 144 - 4560 + 162 - 5992 + 180 - 7584 + 198 - 9327 + 225 - 1 1320 + 243 - 1 3473 + 261 - 1 5786 + 279", "x2": "mod mul sub n idiv n INT- 1 0 INT+ 9 add mul INT- 1 0 x_0_1 mod relu relu n x_0_2", "tree": "(((n sub (n idiv -10)) mul 9) mod ((-10 mul x_0_1) add (relu(relu(n)) mod x_0_2)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 - 3 - 2 - 10 + 2 + 169 + 289 + 361 + 484 + 484 + 484 + 2 449 + 6 8121 + 10 9561 + 1024 + 1156 + 20 704 + 4 1660 8921 + 46 3502 2561 + 95 625 + 96 400 + 123 2100 + 402 6283 336 + 17 3562 9513 9589 4641 + 5265 4470 1956 + 9035 8522 6041 + 9222 6059 8336 + 1 5179 2748 9764 + 16 2109 5501 8339 8223 6176 + 162 4833 2225 7082 7673 1129 + 2772 4932 3090 5351 4837 9664", "x2": "sqr sub add relu n n mod x_0_6 x_0_5", "tree": "(((relu(n) add n) sub (x_0_6 mod x_0_5)))**2", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 9 - 6 + 10 + 9 + 6 + 8 + 135 + 153 + 240 + 306 + 2241 + 2835 + 8634 + 8220 + 7 7787 + 7 4061 + 29 9940 + 9 1686 + 269 9541 + 82 5255 + 1029 2910 + 8 3424 + 9263 6271 + 75 897 + 3 4406 7288 - 1 1881 4982 + 30 9660 5673 - 1 5330 2469 + 113 5822 5186 - 13 7972 2140 + 1022 2402 6755 - 124 1749 9179", "x2": "mul sqr sign n mod mul sub INT- 9 x_0_2 INT- 9 mul mul INT- 6 sub add x_0_4 INT+ 1 0 x_0_7 INT- 8", "tree": "((sign(n))**2 mul (((-9 sub x_0_2) mul -9) mod ((-6 mul ((x_0_4 add 10) sub x_0_7)) mul -8)))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2", "x2": "mod n INT- 4", "tree": "(n mod -4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 - 9 + 4 + 10 + 8 - 6 + 9 - 212 - 207 + 157 + 444 + 475 - 91 + 8161 - 13 113 - 17 2742 + 26 2348 + 77 6589 + 57 1279 - 271 6533 + 43 1478 7286 - 729 7395 5332 - 2111 1115 4883 + 7504 3459 8074 + 1 2444 7942 9747 + 6 7450 6387 3564 - 4 6891 6773 1853 9763 + 12 7808 5769 2704 8871 1355 - 562 9726 5782 5341 764 832 - 6782 6833 1478 6049 6618 5282 + 3 1737 2768 2476 9872 2223 995 + 32 839 4118 6639 1863 1319 67 + 126 5195 6087 6340 1834 9288 9834 8718", "x2": "add relu abs sub x_0_3 INT+ 4 add INT+ 8 mul abs add x_0_7 mul x_0_6 INT- 4 x_0_7", "tree": "(relu(abs((x_0_3 sub 4))) add (8 add (abs((x_0_7 add (x_0_6 mul -4))) mul x_0_7)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 7 + 5 - 6 - 2 - 13 + 3 - 19 + 1 - 32 + 4 - 51 + 5 - 83 + 9 - 134 + 14 - 217 + 23 - 351 + 37 - 568 + 60 - 919 + 97 - 1487 + 157 - 2406 + 254 - 3893 + 411", "x2": "add x_0_4 add idiv INT+ 9 add INT+ 5 n x_0_2", "tree": "(x_0_4 add ((9 idiv (5 add n)) add x_0_2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 6 - 2 - 3 - 8 - 10 - 6 - 21 - 24 - 45 - 50 - 11 - 48 - 52 - 70 - 75 - 96 - 119 - 126 - 152 - 180 - 189 - 220 - 253 - 264 - 300 - 338 - 351", "x2": "mul n idiv sub mod sub x_0_1 mul INT+ 5 INT- 3 n n add mod INT+ 4 INT- 8 INT+ 6", "tree": "(n mul ((((x_0_1 sub (5 mul -3)) mod n) sub n) idiv ((4 mod -8) add 6)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 1 + 34 - 1361 + 6 8084 - 408 6401 + 2 8611 6154 - 228 9337 8721 + 2 606 9020 1044 - 206 919 1348 3121 + 2 2672 1711 7334 4354 - 272 866 6327 1480 5601 + 3 5373 5334 4240 9807 2484 - 495 2566 7686 64 4495 3361 + 7 4292 388 8235 3908 4107 6634 - 1188 7221 4778 5348 5410 1721 4801 + 20 2090 1943 2739 7487 3637 6759 2804 - 3637 7423 7010 7933 3074 191 8391 9521 + 69 1191 2593 3994 68 1551 87 1230 1794 - 1 3824 1889 6103 5812 1564 3275 7616 4427 8321 + 290 3148 8009 4345 4546 8576 9460 9540 1074 9204 - 6 3870 6560 3965 2103 6120 8492 4685 6440 910 3201 + 1469 541 2040 7 8176 2342 1844 7159 761 448 5434 - 35 2579 3759 6160 5841 4399 8245 1224 2863 9090 8560 7361 + 8814 6313 445 2186 367 8132 3622 7916 3136 3475 632 5684 - 229 1839 3970 9516 4530 1472 8814 170 9465 8314 2607 3028 5201 + 6 1880 5451 8469 9887 5325 8045 7916 9778 3690 7986 7446 8332 9954 - 1732 6781 8356 5567 8025 5755 4294 5567 8114 2889 4602 7720 6267 2321", "x2": "sub x_0_2 mul relu mul INT+ 1 0 n x_0_1", "tree": "(x_0_2 sub (relu((10 mul n)) mul x_0_1))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 2 + 2 + 34 + 142 + 398 + 898 + 1762 + 3134 + 5182 + 8098 + 1 2098 + 1 7422 + 2 4334 + 3 3122 + 4 4098 + 5 7598 + 7 3982 + 9 3634 + 11 6962 + 14 4398 + 17 6398 + 21 3442 + 25 6034 + 30 4702 + 35 9998 + 42 2498", "x2": "add INT- 2 sqr sub sqr n n", "tree": "(-2 add (((n)**2 sub n))**2)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 0 - 4 + 6 + 7 + 4 - 4 - 7 + 4 + 6 + 4 - 3 - 5 + 7 + 10 + 9 + 3 + 2 + 15 + 19 + 19 + 14 + 14 + 28 + 33 + 34 + 30 + 31 + 46 + 52 + 54", "x2": "add sub add INT- 6 x_0_5 abs INT+ 5 n", "tree": "(((-6 add x_0_5) sub abs(5)) add n)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 2 - 51 - 35 - 26 - 21 - 18 - 16 - 14 - 13 - 11 - 11 - 10 - 9 - 9 - 8 - 8 - 7 - 7 - 7 - 6 - 6 - 6 - 6 - 6 - 5 - 5 - 5", "x2": "sub idiv mul INT+ 1 0 INT- 1 0 idiv mul n x_0_1 x_0_1 INT+ 1", "tree": "(((10 mul -10) idiv ((n mul x_0_1) idiv x_0_1)) sub 1)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 3 - 3 + 4 + 1 + 0 + 7 + 8 + 0 + 10 + 11 + 0 + 13 + 14 + 0 + 16 + 17 + 0 + 19 + 20 + 0 + 22 + 23 + 0 + 25 + 26 + 0 + 28 + 29", "x2": "mod n add n x_0_3", "tree": "(n mod (n add x_0_3))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 6 + 9 - 7 - 5 - 3 + 2 + 10 + 9 - 10 + 0 + 12 + 18 - 14 - 10 - 6 + 4 + 20 + 18 - 20 + 0 + 24 + 36 - 28 - 20 - 12 + 8 + 40 + 36 - 40 + 0 + 48 + 72 - 56 - 40 - 24", "x2": "mul x_0_10 relu relu INT+ 2", "tree": "(x_0_10 mul relu(relu(2)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 4 + 5 + 7 + 9 + 11 + 13 + 16 + 20 + 24 + 28 + 32 + 37 + 43 + 49 + 55 + 61 + 68 + 76 + 84 + 92 + 100 + 109 + 119 + 129 + 139", "x2": "add idiv sqr n abs INT+ 5 INT+ 4", "tree": "(((n)**2 idiv abs(5)) add 4)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 - 90 - 810 - 7290 - 6 5610 - 59 490 - 531 4410 - 4782 9690 - 4 3046 7210 - 38 7420 4890 - 348 6784 4010 - 3138 1059 6090 - 2 8242 9536 4810 - 25 4186 5828 3290 - 228 7679 2454 9610 - 2058 9113 2094 6490 - 1 8530 2018 8851 8410 - 16 6771 8169 9666 5690 - 150 946 3529 6999 1210 - 1350 8517 1767 2992 890 - 1 2157 6654 5905 6928 8010 - 10 9418 9891 3151 2359 2090 - 98 4770 9021 8361 1232 8810 - 886 2938 1196 5250 1095 9290 - 7976 6443 768 7250 9863 3610 - 7 1789 7987 6918 5258 8770 2490 - 64 6108 1889 2266 7329 8932 2410", "x2": "sub mod x_0_1 add mul INT- 1 0 INT+ 4 x_0_1 mul x_0_1 mul INT+ 4 INT- 2", "tree": "((x_0_1 mod ((-10 mul 4) add x_0_1)) sub (x_0_1 mul (4 mul -2)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 7 + 0 + 10 + 23 + 41 + 0 + 47 + 0 + 121 + 0 + 143 + 0 + 233 + 0 + 271 + 0 + 377 + 0 + 431 + 0 + 553 + 0 + 623 + 0 + 761 + 0 + 847 + 0 + 1001", "x2": "abs relu sub x_0_4 add mul INT- 9 sub n mod x_0_3 abs x_0_4 n", "tree": "abs(relu((x_0_4 sub ((-9 mul (n sub (x_0_3 mod abs(x_0_4)))) add n))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 2 + 7 - 3 - 8 + 3 + 12 + 2 + 0 + 8 + 17 + 7 + 5 + 13 + 22 + 12 + 10 + 18 + 27 + 17 + 15 + 23 + 32 + 22 + 20 + 28 + 37 + 27 + 25 + 33 + 42", "x2": "relu add INT+ 5 add relu add idiv mul INT+ 2 n INT+ 9 INT- 6 sub x_0_4 idiv INT- 7 INT- 9", "tree": "relu((5 add (relu((((2 mul n) idiv 9) add -6)) add (x_0_4 sub (-7 idiv -9)))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 + 4 - 8 - 5 + 1 - 7 + 439 - 4 - 3 + 328 - 10 + 93 + 48 + 75 3070 + 682 + 312 + 1 6101 + 75 + 29 + 7 1642 + 661 + 290 + 4304 + 51 + 4 + 7 1616 + 634 + 262 + 19 + 21 - 27 + 7 1584", "x2": "sub mod x_0_6 mul sqr x_0_4 INT+ 7 n", "tree": "((x_0_6 mod ((x_0_4)**2 mul 7)) sub n)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 2 + 1 - 7 + 7 + 14 + 7 + 10 + 2 + 16 + 23 + 16 + 19 + 11 + 25 + 32 + 25 + 28 + 20 + 34 + 41 + 34 + 37 + 29 + 43 + 50 + 43 + 46 + 38 + 52 + 59", "x2": "add x_0_5 mul INT+ 1 INT+ 9", "tree": "(x_0_5 add (1 mul 9))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 1 + 4 + 11 + 20 + 31 + 44 + 59 + 76 + 95 + 116 + 139 + 164 + 191 + 220 + 251 + 284 + 319 + 356 + 395 + 436 + 479 + 524 + 571 + 620 + 671", "x2": "idiv relu mul abs sub mul n abs n INT+ 5 relu n n", "tree": "(relu((abs(((n mul abs(n)) sub 5)) mul relu(n))) idiv n)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 8 + 3 - 1 + 10 + 2 + 5 + 4 + 14 + 16 + 21 + 25 + 39 + 55 + 76 + 101 + 140 + 85 + 161 + 60 + 200 + 115 + 276 + 216 + 16 + 131 + 407 + 191 + 175 + 306 - 101", "x2": "sub x_0_1 mul sign add INT+ 6 sub x_0_1 mul INT+ 7 n x_0_4", "tree": "(x_0_1 sub (sign((6 add (x_0_1 sub (7 mul n)))) mul x_0_4))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 - 10 - 10 + 3 + 5 + 2 - 5 - 12 + 11 + 27 + 8 - 38 - 42 + 46 + 112 + 9 - 191 - 158 + 233 + 466 - 61 - 885 - 558 + 1184 + 1914 - 682 - 3978 - 1785 + 5849 + 7682 - 4741 - 1 7504 - 4721", "x2": "sub add sub INT+ 6 x_0_3 sign INT- 4 add relu idiv INT- 4 x_0_7 sub x_0_2 x_0_5", "tree": "(((6 sub x_0_3) add sign(-4)) sub (relu((-4 idiv x_0_7)) add (x_0_2 sub x_0_5)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 + 1 + 4 + 4 + 1 + 6 - 8 + 8 + 19 + 24 + 26 + 25 + 32 + 20 + 38 + 51 + 58 + 62 + 63 + 72 + 62 + 82 + 97 + 106 + 112 + 115 + 126 + 118 + 140 + 157 + 168 + 176 + 181", "x2": "add x_0_7 mul INT+ 2 n", "tree": "(x_0_7 add (2 mul n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 6 - 1 - 45 - 40 - 270 - 294 - 1953 - 2424 - 1 7658 - 2 4330 - 19 4337 - 29 2068 - 252 6498 - 408 9078 - 3789 7605 - 6542 5392 - 6 4425 9438 - 11 7765 7218 - 122 4092 9493 - 235 5314 4540 - 2570 5951 9542 - 5181 6918 78 - 5 9123 6894 9673 - 12 4360 6032 2088 - 147 8092 2374 2050 - 323 3375 6837 4522 - 3990 8490 4103 5593 - 9053 4519 1448 6868", "x2": "sub mul add x_0_2 INT- 8 n n", "tree": "(((x_0_2 add -8) mul n) sub n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 + 9 + 10 - 9 + 1 + 16 + 9 + 64 + 81 + 0 + 49 + 81 + 1 + 144 + 81 + 64 + 1 + 144 + 289 + 400 + 1 + 121 + 9 + 0 + 4 + 0 + 1 + 64 + 81 + 144", "x2": "sqr mod sqr n add mod x_0_3 sub sign idiv x_0_4 n n INT- 1 0", "tree": "(((n)**2 mod ((x_0_3 mod (sign((x_0_4 idiv n)) sub n)) add -10)))**2", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 + 3 - 4 + 3 + 3 + 7 - 2 + 0 + 3 + 0 + 3 + 3 + 7 + 0 + 0 + 3 + 0 + 3 + 3 + 7 + 0 + 0 + 3 + 0 + 3 + 3 + 7 + 0 + 0 + 3 + 0 + 3 + 3", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 5 + 3 - 4 + 5 - 6 + 7 - 8 + 9 - 10 + 11 - 12 + 13 - 14 + 15 - 16 + 17 - 18 + 19 - 20 + 21 - 22 + 23 - 24 + 25 - 26 + 27 - 28", "x2": "mul n sign x_0_2", "tree": "(n mul sign(x_0_2))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 5 - 5 + 2 - 2 - 2 + 2410 - 2236 - 2834 + 1400 - 1693 - 2012 + 285 1039 - 306 7776 - 446 3525 + 250 8836 - 342 4890 - 456 3152 + 72 457 5634 - 85 8977 2700 - 137 7890 1554 + 84 9993 6512 - 126 8236 7501 - 183 9862 8668 + 31 5200 1839 8975 - 40 6468 441 6144 - 70 3137 3462 9773 + 46 6476 5157 8180 - 74 6610 9747 8026 - 115 9113 6060 8000 + 21 2035 1637 6990 5266 - 29 1356 2940 5491 9708", "x2": "sub sqr add INT- 1 0 n mul n mul mul INT- 7 n x_0_6", "tree": "(((-10 add n))**2 sub (n mul ((-7 mul n) mul x_0_6)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 7 - 3 + 10 + 10 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv x_0_5 sqr n", "tree": "(x_0_5 idiv (n)**2)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 - 3 + 15 + 19 + 10 + 17 + 39 + 47 + 42 + 53 + 79 + 91 + 90 + 105 + 135 + 151 + 154 + 173 + 207 + 227 + 234 + 257 + 295 + 319 + 330 + 357 + 399 + 427", "x2": "sub sqr n x_0_2", "tree": "((n)**2 sub x_0_2)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 8 + 10 + 2 + 8 + 11 + 13 + 5 + 11 + 14 + 16 + 8 + 14 + 17 + 19 + 11 + 17 + 20 + 22 + 14 + 20 + 23 + 25 + 17 + 23 + 26 + 28 + 20 + 26 + 29", "x2": "sub x_0_4 INT- 3", "tree": "(x_0_4 sub -3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 - 9 + 9 + 0 + 0 + 54 + 0 + 0 + 486 + 0 + 0 + 5832 + 0 + 0 + 8 7480 + 0 + 0 + 157 4640 + 0 + 0 + 3306 7440 + 0 + 0 + 7 9361 8560 + 0 + 0 + 214 2770 1120 + 0 + 0", "x2": "mul sub add sign sqr sqr relu n n abs sign n relu x_0_3", "tree": "(((sign(((relu(n))**2)**2) add n) sub abs(sign(n))) mul relu(x_0_3))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 + 4 + 10 + 4 + 8 - 10 + 68 + 96 + 96 + 114 + 124 + 222 + 294 + 244 + 264 + 306 + 420 + 518 + 408 + 396 + 530 + 668 + 770 + 594 + 534 + 830 + 1034 + 1058 + 802 + 700 + 1234 + 1562", "x2": "add INT+ 6 sub relu sub add mul relu n n x_0_5 x_0_7 n", "tree": "(6 add (relu((((relu(n) mul n) add x_0_5) sub x_0_7)) sub n))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 6 + 7 + 6 - 5 - 7 + 1 - 9 + 8 + 4 - 8 - 6 + 84 - 78 - 70 + 90 + 128 + 0 + 180 - 133 - 60 + 189 + 154 - 1909 + 1896 + 1775 - 2314 - 3429 + 28 - 5191 + 4020 + 1891 - 6016 - 5049 + 6 4940 - 6 6325 - 6 3864 + 8 5655", "x2": "mul mul idiv n n sub idiv n n x_0_11 n", "tree": "(((n idiv n) mul ((n idiv n) sub x_0_11)) mul n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 9 - 2 + 1 + 8 + 40 + 126 + 0 + 10 + 36 + 38 + 40 + 126 + 128 + 650 + 1956 + 1958 + 9800 + 4 9010 + 4 9012 + 24 5070 + 122 5360 + 612 6810 + 1838 436 + 1838 438 + 5514 1320 + 5514 1322 + 5514 1324 + 2 7570 6630 + 2 7570 6632 + 13 7853 3170", "x2": "sub idiv mod n n INT- 7 mul mod sub x_0_4 relu INT+ 7 INT- 6 add x_0_1 INT+ 2", "tree": "(((n mod n) idiv -7) sub (((x_0_4 sub relu(7)) mod -6) mul (x_0_1 add 2)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 10 - 8 - 12 - 16 - 22 - 30 - 33 - 43 - 47 - 56 - 71 - 103 - 146 - 188 - 263 - 371 - 494 - 515 - 693 - 924 - 1363 - 2061 - 3224 - 5109 - 8179 - 1 3154 - 2 1217 - 3 4271", "x2": "sub add INT- 2 x_0_1 abs mod add sqr mod sqr INT+ 6 x_0_2 INT+ 1 0 mod n x_0_2", "tree": "((-2 add x_0_1) sub abs((((((6)**2 mod x_0_2))**2 add 10) mod (n mod x_0_2))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 10 + 21 + 36 + 55 + 78 + 105 + 136 + 171 + 210 + 253 + 300 + 351 + 406 + 465 + 528", "x2": "mul sub n sub INT- 1 n n", "tree": "((n sub (-1 sub n)) mul n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6", "x2": "idiv n sub INT- 2 sign INT+ 2", "tree": "(n idiv (-2 sub sign(2)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096", "x2": "mul relu idiv sqr n sign sign sign sign n n", "tree": "(relu(((n)**2 idiv sign(sign(sign(sign(n)))))) mul n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 10 - 8 - 4 + 5 - 10 - 8 - 4 + 5 - 10 - 8 - 4 + 5 - 10 - 8 - 4 + 5 - 10 - 8 - 4", "x2": "idiv x_0_4 sign relu mul n INT+ 3", "tree": "(x_0_4 idiv sign(relu((n mul 3))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512", "x2": "mul n add n n", "tree": "(n mul (n add n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 5 - 6 + 4 + 7 + 3 + 8 + 4 + 9 + 5 + 10 + 6 + 11 + 7 + 12 + 8 + 13 + 9 + 14", "x2": "add sign x_0_3 abs x_0_2", "tree": "(sign(x_0_3) add abs(x_0_2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 2 - 8 - 5 - 4 + 8 + 4 + 2 + 8 + 3 + 60 + 8 + 4 + 2 + 8 + 3 + 60 + 8 + 4 + 2 + 8 + 3", "x2": "idiv mod x_0_6 mul idiv INT- 2 INT- 2 sqr abs abs x_0_2 sign x_0_1", "tree": "((x_0_6 mod ((-2 idiv -2) mul (abs(abs(x_0_2)))**2)) idiv sign(x_0_1))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 6 + 8110 + 2 5601 + 7 611 + 15 5201 + 31 711 + 56 4801 + 96 6811 + 156 4801 + 243 911 + 363 8401 + 528 7011 + 748 1 + 1034 9511 + 1403 3601 + 1870 1611 + 2453 1201", "x2": "add relu x_0_2 add sqr abs mul INT+ 1 0 sqr n idiv sqr INT- 5 sqr n", "tree": "(relu(x_0_2) add ((abs((10 mul (n)**2)))**2 add ((-5)**2 idiv (n)**2)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 + 0 - 7 - 9 - 1 + 0 + 1 - 6 - 8 + 0 + 1 + 2 - 5 - 7 + 1 + 2 + 3 - 4 - 6 + 2 + 3", "x2": "add x_0_5 sign mul relu INT- 4 n", "tree": "(x_0_5 add sign((relu(-4) mul n)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 - 6 - 1 - 1 - 5 - 1 + 11 + 31 + 59 - 5 - 4 - 1 + 4 + 11 + 20 + 31 + 44 + 59", "x2": "add sqr mod INT- 1 0 abs n sub INT- 4 sign abs sub n x_0_2", "tree": "(((-10 mod abs(n)))**2 add (-4 sub sign(abs((n sub x_0_2)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 - 8 + 131 + 129 + 1369 + 1360 + 1 3770 + 1 3690 + 13 7800 + 13 7010 + 137 8120 + 137 230 + 1378 1340 + 1370 2450 + 1 3781 3560 + 1 3702 4670 + 13 7813 5780 + 13 7024 6890", "x2": "add idiv x_0_3 x_0_1 mul add n abs x_0_2 INT+ 1 0", "tree": "((x_0_3 idiv x_0_1) add ((n add abs(x_0_2)) mul 10))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 4 - 2 + 72 - 36 - 18 + 648 - 324 - 162 + 5832 - 2916 - 1458 + 5 2488 - 2 6244 - 1 3122 + 47 2392 - 23 6196 - 11 8098 + 425 1528", "x2": "mul add INT+ 9 sqr relu mod INT- 3 INT- 4 x_0_3", "tree": "((9 add (relu((-3 mod -4)))**2) mul x_0_3)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 5 - 3 - 9 + 1 - 1 - 4 - 5 + 6 - 40 + 0 + 0 + 3 - 4 - 20 - 195 - 6 + 40 + 0 + 0 + 57 - 776 - 100 - 7605", "x2": "mul sub relu abs x_0_6 sign INT+ 1 x_0_8", "tree": "((relu(abs(x_0_6)) sub sign(1)) mul x_0_8)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 6 - 2 + 4 + 7 - 2 + 3 + 9 + 11 + 3 + 8 + 14 + 16 + 8 + 13 + 20 + 21 + 13 + 19 + 26", "x2": "sub x_0_4 sub INT- 5 idiv x_0_3 n", "tree": "(x_0_4 sub (-5 sub (x_0_3 idiv n)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 5 + 0 + 9 + 4 - 5 + 0 + 9 + 4 - 5 + 0 + 9 + 4 - 5 + 0 + 9 + 4 - 5 + 0", "x2": "sub idiv sub idiv n n mod sqr INT- 5 INT- 4 INT+ 1 x_0_2", "tree": "((((n idiv n) sub ((-5)**2 mod -4)) idiv 1) sub x_0_2)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 2 - 4 - 5 - 8 - 10 - 13 - 17 - 20 - 25 - 29 - 34 - 40 - 45 - 52", "x2": "idiv sqr n INT- 5", "tree": "((n)**2 idiv -5)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 9 - 4 + 20 - 40 + 80 - 303 + 550 - 2704 + 5133 - 2 9265 + 5 8814 - 37 5397 + 79 4039 - 557 2240 + 1232 9121 - 9393 4154 + 2 1635 1818 - 17 7241 9932", "x2": "add sub add add x_0_3 INT+ 6 n mul relu n abs INT+ 8 mul n x_0_2", "tree": "((((x_0_3 add 6) add n) sub (relu(n) mul abs(8))) add (n mul x_0_2))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 8 + 10 - 6 + 3 - 16 - 1 - 11 + 7 - 9 + 0 - 19 - 4 - 14 + 4 - 12 - 3 - 22 - 7", "x2": "sub sub mod sign sub n n sign mod n sign x_0_2 abs n x_0_3", "tree": "(((sign((n sub n)) mod sign((n mod sign(x_0_2)))) sub abs(n)) sub x_0_3)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 4 - 2 + 9 + 5 + 4 + 2 - 9 - 5 - 6 - 4 + 7 + 3 + 6 + 4 - 7 - 3 - 8 - 6 + 5 + 1", "x2": "sub mul idiv idiv n n x_0_2 abs INT+ 2 x_0_4", "tree": "((((n idiv n) idiv x_0_2) mul abs(2)) sub x_0_4)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 4 - 6 - 7 + 1 - 4 + 22 + 32 + 63 + 100 + 92 + 68 + 6 + 10 + 0 + 0 + 0 + 8 + 41 + 0 + 0 + 0", "x2": "mod mul x_0_5 sqr relu n sub sqr abs INT- 1 0 add x_0_6 add INT- 8 n", "tree": "((x_0_5 mul (relu(n))**2) mod ((abs(-10))**2 sub (x_0_6 add (-8 add n))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 4 + 1 + 7 - 7 + 0 - 6 - 9 + 14 + 14 + 10 + 5 + 20 + 14 + 21 + 25 + 3 + 4 + 9 + 15 + 1 + 8 + 2 - 1", "x2": "sub n sub x_0_8 idiv INT+ 6 abs sub mul n n n", "tree": "(n sub (x_0_8 sub (6 idiv abs(((n mul n) sub n)))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 2 - 4 + 6 + 14 - 28 - 242 - 2603 - 3 1444 - 40 5950 - 558 5327 - 8160 4070 - 12 6184 8920 - 205 8886 314 - 3535 1833 2164 - 6 3720 9297 5046 - 120 3025 796 6848 - 2374 1349 9493 4168 - 4 8883 6501 232 9208 - 104 8343 4436 6884 3782", "x2": "sub mul INT+ 7 x_0_3 relu idiv mul add mul x_0_1 sub INT- 5 abs n x_0_4 INT- 6 INT- 7", "tree": "((7 mul x_0_3) sub relu(((((x_0_1 mul (-5 sub abs(n))) add x_0_4) mul -6) idiv -7)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 4 - 9 - 7 + 8 + 1 + 9 + 64 + 25 + 49 + 100 + 64 + 4096 + 625 + 2401 + 1 0 + 4096 + 1677 7216 + 39 625 + 576 4801 + 1 0 0", "x2": "relu sqr idiv sub n abs sqr x_0_5 mul idiv n n x_0_5", "tree": "relu((((n sub abs((x_0_5)**2)) idiv ((n idiv n) mul x_0_5)))**2)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 8 - 5 + 7 + 4 - 5 + 10 + 6 - 10 + 7 - 5 - 1007 - 8 - 5 - 1568 - 1788 - 5 - 2258 - 2521 - 10 - 3080 - 5 - 1007 - 8 - 5 - 1568 - 1788", "x2": "mod x_0_11 mul sqr n INT- 7", "tree": "(x_0_11 mod ((n)**2 mul -7))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 6 - 9 - 4 + 9 - 7 + 5 + 6 + 8 + 9 + 4 - 9 + 7 - 5 - 6 - 8 - 9 - 4 + 9 - 7 + 5 + 6 + 8 + 9 + 4", "x2": "sub mod idiv idiv INT+ 4 n add add x_0_8 abs n n add n n x_0_7", "tree": "((((4 idiv n) idiv ((x_0_8 add abs(n)) add n)) mod (n add n)) sub x_0_7)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 8 + 0 + 19 - 7 + 1 + 20 - 6 + 2 + 21 - 5 + 3 + 22 - 4 + 4 + 23 - 3 + 5 + 24", "x2": "sub sub INT+ 9 x_0_1 sub x_0_2 abs sub n sqr INT+ 1", "tree": "((9 sub x_0_1) sub (x_0_2 sub abs((n sub (1)**2))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 0 + 9 + 20 + 33 + 48 + 65 + 84 + 105 + 0", "x2": "mul mul n sqr INT- 1 mod n INT+ 8", "tree": "((n mul (-1)**2) mul (n mod 8))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 - 10 - 19 - 23 - 32 - 30 - 43 - 43 - 56 - 50 - 67 - 63 - 80 - 70 - 91 - 83 - 104 - 90", "x2": "add mul mod x_0_1 INT- 4 mod INT+ 2 n add x_0_2 INT- 7", "tree": "(((x_0_1 mod -4) mul (2 mod n)) add (x_0_2 add -7))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 3 - 8 + 0 - 7 + 9 + 6 + 20 4800 + 1 1664 + 25 6000 + 34 736 + 24 8832 + 87 8800 + 17 5616 + 2264 8356 8726 4000 + 8 9099 8620 1600 + 5151 4929 7 3728 + 1 833 3641 7992 9088 + 6794 8407 5860 2496 + 9 8852 1484 3084 8000 + 4569 6847 9763 1744 + 8738 9936 6245 8101 9020 701 8737 8550 9888 + 1545 4592 3358 1412 4604 7921 4043 3152", "x2": "mul n sqr mul abs mul INT+ 4 abs sub abs x_0_7 relu INT+ 4 n", "tree": "(n mul ((abs((4 mul abs((abs(x_0_7) sub relu(4))))) mul n))**2)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 23 + 56 + 121 + 250 + 507 + 1020 + 2045 + 4094 + 8191 + 1 6384 + 3 2769 + 6 5538 + 13 1075 + 26 2148 + 52 4293 + 104 8582", "x2": "add add add x_0_1 INT+ 8 INT+ 5 sub x_0_1 n", "tree": "(((x_0_1 add 8) add 5) add (x_0_1 sub n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 - 1 + 12 + 6 + 20 + 15 + 30 + 26 + 42 + 39 + 56 + 54 + 72 + 71 + 90 + 90 + 110", "x2": "add sub sub n mod sign n INT- 1 INT- 2 x_0_2", "tree": "(((n sub (sign(n) mod -1)) sub -2) add x_0_2)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 + 0 + 4 + 9 + 9 + 4 + 9 + 0 + 64 + 9 + 64 + 9 + 64 + 49 + 9 + 64 + 144", "x2": "sqr mod sub x_0_1 sign x_0_1 n", "tree": "(((x_0_1 sub sign(x_0_1)) mod n))**2", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12", "x2": "add sign x_0_2 x_0_2", "tree": "(sign(x_0_2) add x_0_2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 9 - 3 - 7 + 3 - 10 + 3252 + 5466 + 1 477 + 1 7130 + 2 6102 + 4 1155 + 1173 6186 + 3211 724 + 1 2629 395 + 3 3441 8493 + 8 2282 8059 + 20 5500 8893 + 137 7473 8178 4363 + 1031 1264 377 4518 + 1 6087 1228 9194 4932 + 11 2867 1792 5033 9002", "x2": "add x_0_2 sqr add abs add x_0_6 idiv n x_0_1 add mul n n abs INT- 1", "tree": "(x_0_2 add ((abs((x_0_6 add (n idiv x_0_1))) add ((n mul n) add abs(-1))))**2)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 - 3 + 6 - 37 - 18 + 17 - 156 - 81 + 58 - 635 - 336 + 219 - 2554 - 1359 + 860 - 1 233 - 5454 + 3421 - 4 952", "x2": "sub INT- 1 add mul n sqr sqr sign n mul INT- 4 x_0_3", "tree": "(-1 sub ((n mul ((sign(n))**2)**2) add (-4 mul x_0_3)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 + 5 + 1 + 9 + 7 - 2 - 2 + 7 + 5 - 9 + 10 - 2 + 6 + 12 + 6 + 1 + 21 - 4 + 3 - 5 + 4 - 3 + 16 - 17 + 26 + 13 + 15", "x2": "sub mod x_0_3 sub add n INT- 1 idiv idiv x_0_11 sub add x_0_8 INT- 5 n relu INT+ 1 0 x_0_7", "tree": "((x_0_3 mod ((n add -1) sub ((x_0_11 idiv ((x_0_8 add -5) sub n)) idiv relu(10)))) sub x_0_7)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 11 + 31 + 59 + 95 + 139 + 191 + 251 + 319 + 395 + 479 + 571 + 671 + 779 + 895 + 1019", "x2": "relu add mul sqr n sqr INT- 2 INT- 5", "tree": "relu((((n)**2 mul (-2)**2) add -5))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 7 + 9 + 9 - 2019 - 2898 + 3 + 4 - 1294 - 1303 - 3 - 3 - 1302 - 1312 - 13 - 14 - 1314 - 1325 - 27 - 29", "x2": "sub INT+ 9 sub add abs add sqr mul n relu x_0_2 sub x_0_4 n INT+ 3 INT- 1", "tree": "(9 sub ((abs((((n mul relu(x_0_2)))**2 add (x_0_4 sub n))) add 3) sub -1))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 1 - 6 + 9 - 4 - 30 + 54 - 28 - 240 + 486 - 280 - 2640 + 5832 - 3640 - 3 6960 + 8 7480 - 5 8240 - 62 8320 + 157 4640 - 110 6560", "x2": "mul x_0_3 relu n", "tree": "(x_0_3 mul relu(n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 - 2 + 3 + 3 - 9 - 5 - 9 + 4 + 9 + 7 - 26 - 14 - 22 + 6 + 13 + 10 - 48 - 24 - 36 + 7 + 16 + 12", "x2": "idiv sub INT- 7 sub sub mul n n sqr INT+ 6 x_0_6 x_0_3", "tree": "((-7 sub (((n mul n) sub (6)**2) sub x_0_6)) idiv x_0_3)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 288 - 2016 + 1 6416 - 13 1040 + 104 8608 - 838 8576 + 6710 8896 - 5 3687 880 + 42 9496 7328 - 343 5973 8336 + 2748 7790 6976 - 2 1990 2325 5520 + 17 5921 8604 4448 - 140 7374 8835 5296 + 1125 8999 684 2656 - 9007 1992 5474 960", "x2": "mul sub sqr INT- 6 x_0_1 INT+ 8", "tree": "(((-6)**2 sub x_0_1) mul 8)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 5 - 5 - 4 + 9 - 74 - 58 + 6 - 29 - 172 + 1263 + 958 - 223 + 222 + 4483 - 1 9954 - 1 5999 + 7054 - 3859 - 8 9262 + 83 6743", "x2": "sub add INT- 2 mul sub abs mod add n n x_0_5 x_0_5 n mul n n", "tree": "((-2 add ((abs(((n add n) mod x_0_5)) sub x_0_5) mul n)) sub (n mul n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 + 3 - 1 + 9 + 9 - 2 - 3 - 7 + 0 - 9 - 9 - 9 - 6 + 0 - 6 - 7 - 8 - 12 + 0 - 14 - 13", "x2": "sub relu sub relu idiv n abs INT- 7 INT+ 2 relu mod x_0_5 n", "tree": "(relu((relu((n idiv abs(-7))) sub 2)) sub relu((x_0_5 mod n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000 + 6 5383 7184 0 + 104 6139 4944 0 + 1778 4371 4048 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5184 + 2 736 + 4 6656 + 8 2944 + 12 9600 + 18 6624 + 25 4016 + 33 1776 + 41 9904 + 51 8400 + 62 7264 + 74 6496 + 87 6096 + 101 6064 + 116 6400 + 132 7104", "x2": "sqr idiv mul mul INT- 8 n mul n INT+ 9 relu abs n", "tree": "((((-8 mul n) mul (n mul 9)) idiv relu(abs(n))))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 8 - 1 - 6 + 5 - 6 + 0 + 10 - 3 - 78 - 10 - 56 - 63 - 156 - 10 - 206 - 111 - 1482 - 190 - 1270 - 1371 - 4758 - 410 - 6008 - 4035", "x2": "sub x_0_4 mul abs x_0_8 n", "tree": "(x_0_4 sub (abs(x_0_8) mul n))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 6 + 3 - 4 + 16 + 12 + 17 + 14 + 6 + 16 + 18 + 20 + 20 + 21 + 21 + 22 + 22 + 23 + 23 + 24", "x2": "add n sub abs sub INT- 1 0 abs abs idiv sign INT+ 4 n idiv x_0_3 mod x_0_2 n", "tree": "(n add (abs((-10 sub abs(abs((sign(4) idiv n))))) sub (x_0_3 idiv (x_0_2 mod n))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 - 6 + 4 + 7 + 12 + 3 + 1 - 3 + 7 + 10 + 15 + 6 + 4 + 0 + 10 + 13 + 18 + 9 + 7", "x2": "sub sub INT+ 5 sub x_0_3 n abs INT- 4", "tree": "((5 sub (x_0_3 sub n)) sub abs(-4))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 6 - 10 + 1 + 3 + 1 - 2 + 200 + 3 8025 + 250 + 3179 + 2 3232 + 4693 + 40 9374 + 117 6000 + 233 1606 8416 + 358 1577 + 2 588 2632 + 104 9542 9171 + 4 9163 5280 + 3 5194 1447 8461 + 30 4393 9272 7942 + 125 369 8096 7617 2936 6128", "x2": "mul n sqr abs add mul mod x_0_7 n n sub x_0_7 INT- 5", "tree": "(n mul (abs((((x_0_7 mod n) mul n) add (x_0_7 sub -5))))**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 49 + 49 + 0 + 0 + 49 + 49 + 0 + 0 + 49", "x2": "sqr mul mod add x_0_1 n idiv n INT- 8 relu INT+ 7", "tree": "((((x_0_1 add n) mod (n idiv -8)) mul relu(7)))**2", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 4 + 6 - 7 - 2 - 2 + 9 + 2 + 1 + 0 + 2 + 1 + 0 + 6 + 5 + 0 + 6 + 7 + 4 + 4 + 12 + 8 + 0", "x2": "mod idiv add mul n INT- 1 sqr add n x_0_2 n mod mod add idiv n INT- 2 x_0_6 n n", "tree": "((((n mul -1) add ((n add x_0_2))**2) idiv n) mod ((((n idiv -2) add x_0_6) mod n) mod n))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 4 + 0 + 16 + 4 + 36 + 4 + 25 + 64 + 1 + 16 + 1 + 16 + 49 + 100", "x2": "sqr mod add mod n INT- 1 0 mod n sub add INT- 6 n n n", "tree": "((((n mod -10) add (n mod ((-6 add n) sub n))) mod n))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 3 + 5 + 3 + 7 + 2 + 3 - 6 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr mod n sqr sub abs add sqr INT+ 7 abs x_0_2 add n x_0_7", "tree": "((n mod ((abs(((7)**2 add abs(x_0_2))) sub (n add x_0_7)))**2))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 3 + 1 + 47 - 17 + 27 + 766 - 137 + 504 + 1 4574 - 1211 + 1 608 + 32 654 - 1 871 + 25 4622 + 801 6382 - 9 7805 + 687 4830 + 2 2445 8734", "x2": "add mul n relu x_0_3 add n add abs relu n mul INT+ 9 x_0_3", "tree": "((n mul relu(x_0_3)) add (n add (abs(relu(n)) add (9 mul x_0_3))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 10 - 12 - 9 - 9 - 9 - 8 - 8 - 8 - 7 - 7 - 7 - 6 - 6 - 6 - 5 - 5 - 5", "x2": "add idiv mul mul x_0_2 INT- 5 n mul add x_0_2 x_0_1 INT- 8 INT- 1 0", "tree": "((((x_0_2 mul -5) mul n) idiv ((x_0_2 add x_0_1) mul -8)) add -10)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 4 - 46 - 963 - 3 812 - 138 6535 - 8319 2094 - 64 579 1231 - 6149 5595 8168 - 71 9498 4710 5647 - 1 72 9785 9479 570 - 166 2041 4681 4044 4039 - 3 1911 1961 8829 6525 5476 - 705 2374 3576 1353 2146 183 - 17 7719 8338 1186 1010 796 6102 - 5065 152 6363 8038 7872 7033 9055 - 162 804 8843 6417 2411 9265 849 7584 - 5 7862 7343 7180 955 1057 7635 3363 7471", "x2": "add n mul mul relu abs n x_0_1 add n INT+ 4", "tree": "(n add ((relu(abs(n)) mul x_0_1) mul (n add 4)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 + 0 - 9 + 2 - 10 - 17 - 17 - 26 - 24 - 34 - 51 - 68 - 94 - 118 - 152 - 203 - 271 - 365 - 483 - 635 - 838", "x2": "add x_0_1 x_0_5", "tree": "(x_0_1 add x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 9 - 5 + 4 + 12 + 13 + 23 + 26 + 38 + 43 + 57 + 64 + 80 + 89 + 107 + 118 + 138 + 151", "x2": "sub sqr n abs x_0_1", "tree": "((n)**2 sub abs(x_0_1))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 - 4 + 35 + 38 + 71 + 76 + 111 + 118 + 146 + 154 + 183 + 192 + 222 + 232 + 263 + 274 + 306 + 318", "x2": "add n sub INT- 2 sub sub abs mod INT+ 8 n sqr sub idiv INT- 4 INT+ 7 INT- 7 relu x_0_2", "tree": "(n add (-2 sub ((abs((8 mod n)) sub (((-4 idiv 7) sub -7))**2) sub relu(x_0_2))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 10 + 4 + 7 + 7 - 4 - 8 + 35 + 64 + 72 + 3910 + 55 + 0 + 845 + 1022 + 5 8665 + 896 + 17 + 1 5228 + 1 9437 + 117 3320 + 1 8837 + 396", "x2": "mul n mod add idiv n n x_0_5 sub add INT+ 1 0 relu add mul mul x_0_6 INT+ 7 INT+ 8 x_0_5 INT+ 4", "tree": "(n mul (((n idiv n) add x_0_5) mod ((10 add relu((((x_0_6 mul 7) mul 8) add x_0_5))) sub 4)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 2 + 6 + 9 - 9 - 2 - 8 + 32 - 8 - 8 + 47 - 8 - 8 - 8 + 67 + 72 - 8 - 8 + 87 + 92 - 8 - 8", "x2": "add mul mul relu INT+ 5 n relu idiv x_0_6 x_0_2 INT- 8", "tree": "(((relu(5) mul n) mul relu((x_0_6 idiv x_0_2))) add -8)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 2 - 1 + 2 - 4 + 3 + 10 - 7 - 2 - 9 + 318 + 172 + 252 + 220 + 3521 + 2107 + 2955 + 2661 + 3 5721 + 2 1621 + 3 477 + 2 7442 + 35 8175 + 21 7198 + 30 9116 + 27 7411", "x2": "add sub x_0_10 mod n INT- 1 sub sqr n add mul n INT- 8 mul INT- 1 0 x_0_4", "tree": "((x_0_10 sub (n mod -1)) add ((n)**2 sub ((n mul -8) add (-10 mul x_0_4))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 6562 + 2 + 6564 + 2 6248 + 5 9054 + 10 4982 + 16 4032 + 23 6204 + 32 1498 + 41 9914 + 53 1452 + 65 6112 + 79 3894 + 94 4798 + 110 8824 + 128 5972", "x2": "add sqr mul add abs n INT- 2 sqr INT- 9 n", "tree": "((((abs(n) add -2) mul (-9)**2))**2 add n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 4 + 0 - 9 - 1 + 0 + 1 - 8 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_7", "tree": "sign(x_0_7)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 0 - 20 + 140 - 60 - 1460 + 1 1140 - 5460 - 14 6060 + 122 5340 - 65 5260 - 1898 7860 + 1 7154 7540 - 9828 9060 - 30 3805 7660 + 291 6308 1740 - 176 9203 860 - 5772 3095 5460", "x2": "mul INT+ 1 0 sub mul x_0_3 n abs abs INT- 6", "tree": "(10 mul ((x_0_3 mul n) sub abs(abs(-6))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 7 + 0 - 1 + 2 + 6 - 3 + 5 + 7 - 9 + 150 + 238 + 104 + 25 - 3 + 21 + 1610 + 2608 + 1274 - 1255 - 933 + 1531 + 1 8620 + 2 7498 + 1 1424 - 3 705", "x2": "sub add INT- 5 mul INT+ 1 0 add n sub x_0_10 sub n add x_0_6 n x_0_3", "tree": "((-5 add (10 mul (n add (x_0_10 sub (n sub (x_0_6 add n)))))) sub x_0_3)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 5 - 8 + 1 + 0 + 4 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1", "x2": "mod sqr x_0_3 sub sub INT+ 7 INT+ 1 sign mod x_0_1 sqr INT- 7", "tree": "((x_0_3)**2 mod ((7 sub 1) sub sign((x_0_1 mod (-7)**2))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 - 10 - 2 + 6 - 5 + 14 + 4 + 6 + 27 - 1 + 30 + 20 + 3 + 54 - 3 + 40 + 49 - 17 + 93 - 5 + 31", "x2": "add n add sub x_0_5 add INT+ 2 x_0_4 abs n", "tree": "(n add ((x_0_5 sub (2 add x_0_4)) add abs(n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 5 - 4 - 9 - 1 - 10 + 2 - 5 + 402 + 149 + 1144 + 1131 + 466 + 405 + 8 + 258 5653 + 223 440 + 1870 9333 + 175 7240 + 171 7253 + 90 7144 + 90 6123 + 106 9696 2207 6418 + 27 3718 2057 8821", "x2": "abs add sub x_0_1 mul sqr INT+ 4 sqr x_0_7 add sqr INT- 2 INT- 1", "tree": "abs(((x_0_1 sub ((4)**2 mul (x_0_7)**2)) add ((-2)**2 add -1)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 1 - 2 - 4 - 9 - 3 - 7 - 9 + 20 + 25 + 6 + 13 + 12 + 10 + 16 + 11 + 21 + 17 + 5 + 1 + 2 + 2 + 3 + 8", "x2": "abs add x_0_7 mod x_0_8 mul sub INT- 6 mod abs INT- 1 sign add INT+ 2 n INT+ 4", "tree": "abs((x_0_7 add (x_0_8 mod ((-6 sub (abs(-1) mod sign((2 add n)))) mul 4))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 10 - 8 + 1 - 10 - 1 + 4 - 4 - 2 - 7 - 3 - 10 - 12 - 13 - 13 - 15 - 16 - 17 - 18 - 19 - 20 - 21 - 22 - 24 - 25 - 26 - 27", "x2": "add idiv x_0_8 add mod x_0_1 x_0_10 relu n sub sign add abs INT- 5 sign INT+ 6 n", "tree": "((x_0_8 idiv ((x_0_1 mod x_0_10) add relu(n))) add (sign((abs(-5) add sign(6))) sub n))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 5 + 0 + 8 - 4 - 8 + 7 - 8 - 10 + 4 + 9 + 2 + 0 - 4 + 2 + 4 - 4 + 4 + 5 - 2 - 5 - 1 + 0 + 2 - 1 - 2 + 2", "x2": "idiv x_0_10 add INT- 2 sqr mod idiv sign n mod sub sign x_0_3 INT+ 3 INT+ 5 sign n", "tree": "(x_0_10 idiv (-2 add (((sign(n) idiv ((sign(x_0_3) sub 3) mod 5)) mod sign(n)))**2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 8 + 1 - 2048 + 256 - 52 4288 + 6 5536 - 1 3421 7728 + 1677 7216 - 343 5973 8368 + 42 9496 7296 - 8 7960 9302 2208 + 1 995 1162 7776 - 2251 7998 1368 5248 + 281 4749 7671 656 - 57 6460 7523 342 3488 + 7 2057 5940 3792 7936 - 1 4757 3952 5896 7641 2928 + 1844 6744 737 955 1616", "x2": "mul mul abs INT- 4 x_0_2 abs sqr INT- 8", "tree": "((abs(-4) mul x_0_2) mul abs((-8)**2))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 6 + 0 + 10 + 1 + 8 + 0 + 5 + 5 + 1 + 3250 + 0 + 1548 + 3 6972 + 51 9876 + 0 + 4144 + 7 4851 + 137 646 + 2606 6898 + 0 + 1806 + 4 2108 + 97 2739 + 0 + 1700", "x2": "relu mul add x_0_1 idiv sqr sqr INT+ 6 mod x_0_9 n n", "tree": "relu(((x_0_1 add (((6)**2)**2 idiv (x_0_9 mod n))) mul n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 9 + 8 - 5 + 9 - 6 + 8 - 1 + 16 + 3 + 17 + 2 + 16 + 7 + 24 + 11 + 25 + 10 + 24 + 15 + 32 + 19", "x2": "add x_0_6 abs INT- 8", "tree": "(x_0_6 add abs(-8))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 2 - 3 - 4 - 6 - 7 - 9 - 12 - 14 - 17 - 20 - 23 - 27 - 30 - 34", "x2": "idiv sub mul sign INT- 9 sqr n n INT+ 8", "tree": "(((sign(-9) mul (n)**2) sub n) idiv 8)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 4 + 6 + 6 + 0 + 7 + 4 + 6 + 6 + 0 + 7 + 4 + 6 + 6 + 0 + 7 + 4 + 6 + 6 + 0 + 7", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 - 8 - 14 - 27 - 46 - 78 - 129 - 212 - 346 - 563 - 914 - 1482 - 2401 - 3888 - 6294 - 1 187 - 1 6486", "x2": "add x_0_1 sub x_0_2 relu INT+ 5", "tree": "(x_0_1 add (x_0_2 sub relu(5)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 + 1 - 10 + 7 + 2 + 7 + 0 - 1 - 1 + 10 - 7 - 2 - 7 + 0 + 1 + 1 - 10 + 7 + 2 + 7 + 0 - 1", "x2": "mul sign INT+ 8 sub idiv idiv add n n n INT+ 3 x_0_7", "tree": "(sign(8) mul ((((n add n) idiv n) idiv 3) sub x_0_7))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 10 - 2 - 9 + 6 + 7 + 6 + 5 + 1 + 2 + 11 + 0 + 4 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 2 + 2 + 2", "x2": "idiv idiv sub sqr n INT+ 3 add x_0_7 INT+ 1 0 sub abs n relu x_0_2", "tree": "((((n)**2 sub 3) idiv (x_0_7 add 10)) idiv (abs(n) sub relu(x_0_2)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 3 + 9 + 10 + 9 - 4 - 9 + 6 - 9 + 9 - 7 + 5 + 9 - 7 + 5 + 9 - 7 + 5 + 9 - 7 + 5 + 9 - 7 + 5 + 9 - 7 + 5 + 9", "x2": "idiv x_0_3 sign abs x_0_12", "tree": "(x_0_3 idiv sign(abs(x_0_12)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "- 3 + 10 - 8 + 10 + 8 - 1 + 12 - 6 + 12 + 10 + 1 + 14 - 4 + 14 + 12 + 3 + 16 - 2 + 16 + 14 + 5", "x2": "add x_0_5 add abs idiv idiv n idiv n INT- 9 n sign n", "tree": "(x_0_5 add (abs(((n idiv (n idiv -9)) idiv n)) add sign(n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 2 - 8 + 1 - 6 + 4 - 10 + 4 - 3 + 6 - 4 + 8 + 3 + 13 + 1 + 13 + 9 + 22 + 11 + 21 + 22 + 28 + 21 + 35 + 29", "x2": "sub x_0_8 sub mod abs x_0_6 abs add INT- 8 sign n n", "tree": "(x_0_8 sub ((abs(x_0_6) mod abs((-8 add sign(n)))) sub n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 6 + 36 + 216 + 1296 + 7776 + 4 6656 + 27 9936 + 167 9616 + 1007 7696 + 6046 6176 + 3 6279 7056 + 21 7678 2336 + 130 6069 4016 + 783 6416 4096 + 4701 8498 4576 + 2 8211 990 7456 + 16 9266 5944 4736", "x2": "abs mul x_0_1 INT+ 6", "tree": "abs((x_0_1 mul 6))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 + 1 - 9 + 10 + 9 - 2 - 16 + 8 - 87 - 91 + 5 + 12 - 154 + 14 + 15 - 187 - 109 + 18 - 298 - 228 + 21", "x2": "mod n sub INT- 4 add mul INT+ 9 x_0_5 abs abs x_0_3", "tree": "(n mod (-4 sub ((9 mul x_0_5) add abs(abs(x_0_3)))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 - 6 - 1 + 10 - 10 + 2 - 4 - 6 + 91 - 93 + 4 + 25 + 45 - 8278 - 8652 + 9 - 715 + 2117 + 6852 5287 + 7485 7078 - 35 - 51 9502 + 447 3036 - 4695 7149 5843 2377", "x2": "mul add mul sign idiv sqr x_0_4 x_0_2 sub sign n sqr x_0_5 x_0_8 sign x_0_3", "tree": "(((sign(((x_0_4)**2 idiv x_0_2)) mul (sign(n) sub (x_0_5)**2)) add x_0_8) mul sign(x_0_3))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 1 - 10 + 9 - 10 + 7 - 5 + 5 + 9 - 10 + 1 + 2 - 3 + 2 + 0 + 12 + 2 + 2 + 14 + 2 + 6 + 0 + 5 + 7 + 2 + 17", "x2": "mod add n mul INT- 1 add x_0_5 abs INT- 3 add n add x_0_10 INT- 7", "tree": "((n add (-1 mul (x_0_5 add abs(-3)))) mod (n add (x_0_10 add -7)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 36 + 25 + 16 + 9 + 4 + 1 + 0 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 49", "x2": "sqr add INT- 7 mod n INT+ 8", "tree": "((-7 add (n mod 8)))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 9 + 1 - 4 + 3 - 7 - 10 + 10 + 10 + 7 - 6 - 8 + 9 + 1 - 4 + 3 - 7 - 10 + 10 + 10 + 7 - 6 - 8 + 9 + 1 - 4 + 3 - 7", "x2": "add x_0_11 mod INT- 4 sign abs sub INT+ 9 add x_0_4 mod x_0_12 x_0_6", "tree": "(x_0_11 add (-4 mod sign(abs((9 sub (x_0_4 add (x_0_12 mod x_0_6)))))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 5 + 2 - 7 - 4 + 5 + 10 + 9 + 9 + 8 + 8 + 9 + 10 + 9 + 9 + 9 + 9 + 9 + 10 + 9 + 9 + 9 + 9", "x2": "idiv mod INT- 1 0 add x_0_6 mul sign n abs mul n INT- 1 0 n", "tree": "((-10 mod (x_0_6 add (sign(n) mul abs((n mul -10))))) idiv n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 8 + 9 - 3 - 3 - 3 + 7 - 10 + 2 + 2 + 2 - 8 + 9 - 3 - 3 - 3 + 7 - 10 + 2 + 2 + 2 - 8", "x2": "sub INT- 6 sub x_0_5 INT+ 5", "tree": "(-6 sub (x_0_5 sub 5))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 - 1 + 9 + 2 + 6 - 10 - 2 + 3 - 6 + 0 + 10 + 5 + 2 + 8 - 12 - 46 - 25 - 11 - 9 - 4 - 5 - 4 + 2 + 7 + 13 - 1 - 103", "x2": "sub mod x_0_3 abs n sub mul idiv x_0_11 sign x_0_5 relu x_0_4 add sub x_0_1 n INT+ 1 0", "tree": "((x_0_3 mod abs(n)) sub (((x_0_11 idiv sign(x_0_5)) mul relu(x_0_4)) sub ((x_0_1 sub n) add 10)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 5 + 4 + 4 + 9 + 5 - 5 - 9 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign x_0_8", "tree": "sign(x_0_8)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 5 + 5 + 2 - 3 - 10 + 2 - 9 - 6 + 1 - 4 - 11 + 1 - 10 - 7 + 0 - 5 - 12 + 0 - 11 - 8 - 1 - 6 - 13 - 1 - 12 - 9 - 2 - 7 - 14 - 2 - 13 - 10 - 3", "x2": "sub x_0_6 sqr sign x_0_8", "tree": "(x_0_6 sub (sign(x_0_8))**2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 6 - 2 + 7 + 0 + 4 + 14 + 8 + 13 + 24 + 19 + 25 + 37 + 33 + 40 + 53 + 50 + 58 + 72 + 70 + 79 + 94 + 93 + 103 + 119 + 119 + 130 + 147", "x2": "relu add x_0_3 n", "tree": "relu((x_0_3 add n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 + 2 - 8 + 7 - 5 + 15 + 2 + 7 + 18 + 4 + 17 - 2 + 12 + 8 - 2 + 13 + 1 + 21 + 8 + 13 + 24 + 10 + 23 + 4 + 18 + 14 + 4 + 19 + 7 + 27", "x2": "sub n x_0_6", "tree": "(n sub x_0_6)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 4 + 26 + 56 + 96 + 148 + 214 + 296 + 396 + 516 + 658 + 824 + 1016 + 1236 + 1486 + 1768 + 2084 + 2436 + 2826 + 3256 + 3728 + 4244 + 4806 + 5416 + 6076 + 6788 + 7554", "x2": "add add mod n sqr add n abs add x_0_2 n x_0_1 add mul n n INT+ 1 0", "tree": "(((n mod ((n add abs((x_0_2 add n))))**2) add x_0_1) add ((n mul n) add 10))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 8 - 21 - 33 - 44 - 54 - 63 - 71 - 78 - 84 - 89 - 93 - 96 - 98 - 99 - 99 - 98 - 96 - 93 - 89 - 84 - 78 - 71 - 63 - 54 - 44", "x2": "sub add x_0_1 n mul sqr INT- 4 INT+ 1", "tree": "((x_0_1 add n) sub ((-4)**2 mul 1))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 + 3 + 7 + 8 - 3 + 2 + 64 - 17 - 41 - 48 + 25 - 12 - 384 + 137 + 329 + 384 - 149 + 96 + 3072 - 821 - 1973 - 2304 + 1193 - 576 - 1 8432 + 6569 + 1 5785 + 1 8432 - 7157 + 4608 + 14 7456", "x2": "sub mul add sign x_0_6 INT- 7 x_0_6 mod abs x_0_6 INT- 2", "tree": "(((sign(x_0_6) add -7) mul x_0_6) sub (abs(x_0_6) mod -2))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 7 + 10 + 5 - 5 + 5 + 5 - 5 + 5 + 5 - 5 + 5 + 5 - 5 + 5 + 5 - 5 + 5 + 5 - 5 + 5 + 5 - 5 + 5 + 5 - 5 + 5 + 5", "x2": "mul sign x_0_3 relu INT+ 5", "tree": "(sign(x_0_3) mul relu(5))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 5 - 3 + 10 - 10 - 2 + 9 - 89 + 3 - 204 - 145 - 47 - 1326 - 164 - 3375 - 2580 - 1293 - 2 4338 - 3525 - 6 9227 - 5 4786 - 3 2306 - 56 2884 - 8 6470 - 175 5639 - 142 8638 - 94 2219 - 1581 6323 - 254 778 - 5323 2955 - 4437 5210 - 3190 7672", "x2": "add sub add sub sign INT- 7 abs x_0_7 mul n x_0_5 sqr n relu x_0_4", "tree": "((((sign(-7) sub abs(x_0_7)) add (n mul x_0_5)) sub (n)**2) add relu(x_0_4))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 6 + 8 - 3 + 2 + 5 + 10 + 5 + 14 - 11 + 5 + 3 + 5 - 5 + 9 - 25 + 16 - 2 + 2 - 10 + 14 - 34 + 41 - 18 + 4 - 12 + 24 - 48 + 75 - 59 + 22 - 16 + 36", "x2": "mul sub x_0_6 x_0_7 idiv n n", "tree": "((x_0_6 sub x_0_7) mul (n idiv n))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 16 + 1 + 49 + 0 + 1 + 16 + 81 + 4 + 0 + 1 + 16 + 81 + 256 + 0 + 1 + 16 + 81 + 256 + 0", "x2": "sqr sub sub n idiv n sign mul INT+ 4 n mod sqr relu mod n INT+ 5 n", "tree": "(((n sub (n idiv sign((4 mul n)))) sub ((relu((n mod 5)))**2 mod n)))**2", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 2 - 7 + 9 - 4 - 12 + 7 - 36 + 28 + 72 - 77 + 432 - 336 - 1008 + 462 - 6912 + 5712 + 1 8144 - 8778 + 13 8240 - 11 9952 - 39 9168 + 6 1446 - 331 7760 + 299 8800 + 159 6672 - 165 9042 + 9289 7280 - 2998 8000", "x2": "mul sub abs mod mod relu n x_0_2 n n x_0_4", "tree": "((abs(((relu(n) mod x_0_2) mod n)) sub n) mul x_0_4)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 3 + 0 - 7 - 8 + 10 + 1 + 40 + 15 + 80 + 91 - 69 + 14 - 335 - 108 - 691 - 788 + 654 - 91 + 3052 + 1011 + 6260 + 7135 - 5841 + 866 - 2 7419 - 9048 - 5 6287 - 6 4160 + 5 2626 - 7735 + 24 6832", "x2": "add add sign INT- 1 0 sub n mul abs INT- 9 x_0_6 n", "tree": "((sign(-10) add (n sub (abs(-9) mul x_0_6))) add n)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 9 + 4 - 9 - 6 + 0 + 2 - 9 - 8 + 9 + 6 - 18 - 14 + 9 + 8 - 27 - 22 + 18 + 14 - 45 - 36 + 27 + 22 - 72 - 58 + 45 + 36 - 117 - 94", "x2": "mul sign INT- 6 add x_0_2 abs x_0_4", "tree": "(sign(-6) mul (x_0_2 add abs(x_0_4)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 9 - 1 + 0 - 1 - 9 - 9 + 8 + 3 + 3 + 103 + 127 + 204 + 217 + 247 + 579 + 685 + 952 + 1029 + 1159 + 2197 + 2559 + 3406 + 3685 + 4125 + 7291 + 8431 + 1 1028 + 1 1923 + 1 3303 + 2 2863 + 2 6347 + 3 4204 + 3 6957 + 4 1167", "x2": "add idiv relu x_0_9 x_0_6 sub sqr n mul add x_0_5 n sub INT+ 6 abs INT- 9", "tree": "((relu(x_0_9) idiv x_0_6) add ((n)**2 sub ((x_0_5 add n) mul (6 sub abs(-9)))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 2 - 10 + 4 - 5 - 8 + 7 + 0 + 1 - 5 + 0 - 6 - 11 - 1 - 7 + 0 - 15 - 9 + 0 - 2 - 19 - 20 - 17 + 0 - 15 - 19 + 0 - 23 - 3 - 6 - 11 + 0 - 31 - 2", "x2": "mod relu sqr x_0_8 mul INT- 1 n", "tree": "(relu((x_0_8)**2) mod (-1 mul n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 5 - 5 + 8 - 10 + 3 - 9 - 3 + 0 - 2 + 0 + 9 + 4 + 176 + 199 + 236 + 268 + 305 + 339 + 369 + 406 + 448 + 481 + 522 + 402 + 256 + 247 + 231 + 217 + 203 + 198 + 192 + 176 + 166 + 159 + 307 + 644 + 872", "x2": "sub add abs add INT+ 1 0 mul n n idiv INT- 1 0 add x_0_11 INT+ 6 add x_0_12 add INT+ 3 x_0_11", "tree": "((abs((10 add (n mul n))) add (-10 idiv (x_0_11 add 6))) sub (x_0_12 add (3 add x_0_11)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 6 - 12 - 22 - 36 - 54 - 76 - 102 - 132 - 166 - 204 - 246 - 292 - 342 - 396 - 454 - 516 - 582 - 652 - 726 - 804 - 886 - 972 - 1062 - 1156 - 1254", "x2": "sub sub n abs mul sqr n INT- 2 add n INT+ 4", "tree": "((n sub abs(((n)**2 mul -2))) sub (n add 4))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 4 - 1 - 5 - 2 + 5 + 7 + 0 - 6 + 1 + 7 - 2 - 6 + 3 + 7 - 4 - 6 + 5 + 7 - 4 - 6 + 5 + 7 - 4 - 6 + 5 + 7 - 4 - 6 + 5 + 7 - 4 - 6", "x2": "sub sign mod mul x_0_4 sub n idiv n mul n x_0_8 x_0_4 x_0_2", "tree": "(sign(((x_0_4 mul (n sub (n idiv (n mul x_0_8)))) mod x_0_4)) sub x_0_2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 2 - 10 - 1 + 2 - 3 - 6 + 6 - 5 + 3 - 8 + 9 - 13 + 14 - 21 + 22 - 34 + 35 - 55 + 56 - 89 + 90 - 144 + 145 - 233 + 234 - 377 + 378 - 610", "x2": "sub mod abs sign relu sqr abs mod INT- 9 x_0_3 x_0_4 x_0_1", "tree": "((abs(sign(relu((abs((-9 mod x_0_3)))**2))) mod x_0_4) sub x_0_1)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 + 8 + 3 - 1 + 4 - 6 - 8 - 12 - 27 - 26 - 35 - 93 - 65 - 84 - 387 - 146 - 101 - 2340 - 311 - 121 - 3 7461 - 1266 - 144 - 453 2805 - 1 3951 - 170 - 162 1837 6317 - 135 3275 - 199 - 1 8852 9055 8430 9827", "x2": "idiv add mul idiv x_0_3 add relu sign n abs x_0_5 x_0_3 n INT- 1", "tree": "((((x_0_3 idiv (relu(sign(n)) add abs(x_0_5))) mul x_0_3) add n) idiv -1)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 2 + 3 + 4 + 5 + 8 + 7 + 8 + 9 + 11 + 11 + 17 + 15 + 21 + 19 + 16 + 22 + 28 + 26 + 20 + 36 + 36 + 34 + 24 + 37 + 44", "x2": "add idiv sqr mod mod abs mul mod n x_0_1 n INT- 8 n n n", "tree": "(((((abs(((n mod x_0_1) mul n)) mod -8) mod n))**2 idiv n) add n)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 0 + 6 + 1 - 8 - 9 - 4 - 6 + 10 + 0 + 6 + 1 + 8 + 9 + 4 + 6 + 10 + 0 + 6 + 1 + 8 + 9 + 4 + 6 + 10 + 0 + 6 + 1 + 8 + 9 + 4 + 6 + 10", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 81 + 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr add n INT- 1 0", "tree": "((n add -10))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 + 9 - 9 + 9 + 0 - 14 + 4 - 14 - 5 + 9 - 9 + 9 + 0 - 14 + 4 - 14 - 5 + 9 - 9 + 9 + 0 - 14 + 4 - 14 - 5 + 9 - 9 + 9 + 0", "x2": "sub sub INT- 5 x_0_4 relu relu mul n mul sqr n INT- 2", "tree": "((-5 sub x_0_4) sub relu(relu((n mul ((n)**2 mul -2)))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 6 - 6 - 6 - 6 - 7", "x2": "idiv relu n INT- 4", "tree": "(relu(n) idiv -4)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 7 + 1 - 5 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 2 + 33 + 52 + 33 + 32 + 71 + 94 + 79 + 82 + 125 + 152 + 141 + 148 + 195 + 226 + 219 + 230 + 281 + 316 + 313 + 328 + 383 + 422 + 423 + 442 + 501", "x2": "add INT+ 6 sub n add x_0_2 mul sub INT- 6 n abs n", "tree": "(6 add (n sub (x_0_2 add ((-6 sub n) mul abs(n)))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 6 + 6 + 13 - 1 + 11 + 18 + 4 + 16 + 23 + 9 + 21 + 28 + 14 + 26 + 33 + 19 + 31 + 38 + 24 + 36 + 43 + 29 + 41 + 48 + 34 + 46 + 53", "x2": "sub add INT+ 4 x_0_3 idiv sign idiv INT+ 1 0 mod n n sign n", "tree": "((4 add x_0_3) sub (sign((10 idiv (n mod n))) idiv sign(n)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 5 + 9 - 1 + 1 - 9 + 6 + 3 - 2 - 6 - 10 - 9 - 10 - 12 - 7 - 12 - 15 - 15 - 14 - 9 - 4 + 1 + 7 + 8 + 8 + 6 + 1 - 4 - 8 - 10 - 11 - 13 - 16 - 20", "x2": "add idiv sub mul x_0_9 x_0_4 n abs abs n x_0_1", "tree": "((((x_0_9 mul x_0_4) sub n) idiv abs(abs(n))) add x_0_1)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 9 - 1 + 4 + 6 + 5 + 7 + 7 + 9 + 9 + 11 + 11 + 13 + 13 + 15 + 15 + 17 + 17 + 19 + 19 + 21 + 21 + 23 + 23 + 25 + 25 + 27 + 27", "x2": "sub abs n idiv mod x_0_3 mod n mul INT+ 8 n x_0_2", "tree": "(abs(n) sub ((x_0_3 mod (n mod (8 mul n))) idiv x_0_2))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 50 + 166 + 415 + 830 + 1383 + 1975 + 2468 + 2742 + 2742 + 2492 + 2076 + 1596 + 1140 + 760 + 475 + 279 + 155 + 81 + 40 + 19 + 8 + 3 + 1 + 0 + 0", "x2": "idiv mul x_0_1 INT+ 1 0 n", "tree": "((x_0_1 mul 10) idiv n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 + 7 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr add n relu sign idiv mul mod x_0_1 x_0_2 n x_0_2", "tree": "((n add relu(sign((((x_0_1 mod x_0_2) mul n) idiv x_0_2)))))**2", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 - 8 - 2 - 1 - 3 - 6 - 2 - 1 - 3 - 6 - 2 - 1 - 3 - 6 - 2 - 1 - 3 - 6 - 2 - 1 - 3 - 6 - 2 - 1 - 3 - 6 - 2", "x2": "idiv INT+ 6 add x_0_2 mod abs mul sign INT- 2 n n", "tree": "(6 idiv (x_0_2 add (abs((sign(-2) mul n)) mod n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 + 3 + 1 - 3 + 7 - 17 - 8 - 10 - 14 - 4 - 28 - 19 - 21 - 25 - 15 - 39 - 30 - 32 - 36 - 26 - 50 - 41 - 43 - 47 - 37 - 61 - 52 - 54 - 58 - 48", "x2": "sub x_0_5 add abs INT- 5 INT+ 6", "tree": "(x_0_5 sub (abs(-5) add 6))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 2 - 7 + 15 - 10 - 35 + 75 - 50 - 175 + 375 - 250 - 875 + 1875 - 1250 - 4375 + 9375 - 6250 - 2 1875 + 4 6875 - 3 1250 - 10 9375 + 23 4375 - 15 6250 - 54 6875 + 117 1875 - 78 1250 - 273 4375 + 585 9375", "x2": "mul idiv x_0_3 sqr sqr INT+ 1 abs INT+ 5", "tree": "((x_0_3 idiv ((1)**2)**2) mul abs(5))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 61 + 155 + 357 + 643 + 1085 + 1659 + 2437 + 3395 + 4605 + 6043 + 7781 + 9795 + 1 2157 + 1 4843 + 1 7925 + 2 1379 + 2 5277 + 2 9595 + 3 4405 + 3 9683 + 4 5501 + 5 1835 + 5 8757 + 6 6243 + 7 4365", "x2": "sub mul mul INT+ 8 mul n n n x_0_1", "tree": "(((8 mul (n mul n)) mul n) sub x_0_1)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 13 + 18 + 25 + 34 + 45 + 58 + 73 + 90 + 109 + 130 + 153 + 178 + 205 + 234 + 265 + 298 + 333 + 370 + 409 + 450 + 493 + 538 + 585 + 634", "x2": "sub sqr n mod INT- 9 sub INT- 8 n", "tree": "((n)**2 sub (-9 mod (-8 sub n)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 7 + 14 + 28 + 56 + 112 + 224 + 448 + 896 + 1792 + 3584 + 7168 + 1 4336 + 2 8672 + 5 7344 + 11 4688 + 22 9376 + 45 8752 + 91 7504 + 183 5008 + 367 16 + 734 32 + 1468 64 + 2936 128 + 5872 256 + 1 1744 512 + 2 3488 1024", "x2": "relu mul INT+ 2 abs x_0_1", "tree": "relu((2 mul abs(x_0_1)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 1 + 22 + 1 + 40 + 1 + 58 + 1 + 76 + 1 + 94 + 1 + 112 + 1 + 130 + 1 + 148 + 1 + 166 + 1 + 184 + 1 + 202 + 1 + 220 + 1", "x2": "idiv idiv add sub INT+ 6 mod sign n n mul INT- 9 n INT- 1 abs x_0_1", "tree": "((((6 sub (sign(n) mod n)) add (-9 mul n)) idiv -1) idiv abs(x_0_1))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 2 + 3 + 6 + 4 - 1 - 2 + 4 + 7 + 4 - 2 - 1 + 4 + 6 + 3 - 2 + 0 + 3 + 4 + 2 - 1 + 0 + 2 + 3 + 2 + 0 - 1", "x2": "sub add sign sqr mul INT+ 5 n abs x_0_1 x_0_2", "tree": "((sign(((5 mul n))**2) add abs(x_0_1)) sub x_0_2)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 9 - 3 + 9 + 5 + 36 - 14 + 64 + 36 + 100 - 33 + 144 + 169 + 196 - 270 + 256 + 289 + 324 - 4769 + 400 + 441 + 484 - 10 9158 + 576 + 625 + 676 - 294 6537 + 784 + 841", "x2": "mul mod n x_0_4 n", "tree": "((n mod x_0_4) mul n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr add relu n INT- 9", "tree": "((relu(n) add -9))**2", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 - 1 + 10 - 10 - 1 + 4 + 10 - 8 + 0 + 110 - 99 + 0 + 65 + 154 - 105 + 16 + 1887 - 1764 + 19 + 1320 + 3255 - 2288 + 391 + 4 5312 - 4 4075 + 520 + 3 5667 + 9 1168 - 6 6323 + 1 1760 + 140 4703 - 141 368", "x2": "mul abs n add x_0_7 sqr idiv n n", "tree": "(abs(n) mul (x_0_7 add ((n idiv n))**2))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 5 + 2 - 6 + 7 - 2 + 8 - 7 + 7 - 5 + 7 - 3 + 11 - 10 + 7 - 1 + 21 - 114 + 11 + 5 + 20 + 56 + 22 + 12 + 15 + 51 + 140 + 19 + 8 + 47 + 128 + 35 + 17 + 35 + 97", "x2": "add idiv sqr sub n INT+ 6 x_0_2 abs x_0_9", "tree": "((((n sub 6))**2 idiv x_0_2) add abs(x_0_9))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 5 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 5 - 6", "x2": "idiv n mul INT+ 5 sign sub add x_0_1 n n", "tree": "(n idiv (5 mul sign(((x_0_1 add n) sub n))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 + 1 - 5 + 4 + 2 - 7 + 3 + 1 + 8 - 6 + 0 - 6 + 3 + 3 - 6 + 4 + 0 + 7 - 5 - 1 - 7 + 2 + 4 - 5 + 5 - 1 + 6 - 4 - 2 - 6 + 1 + 5 - 4 + 6", "x2": "add sign sub x_0_1 mul INT+ 9 x_0_4 x_0_9", "tree": "(sign((x_0_1 sub (9 mul x_0_4))) add x_0_9)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 3 - 7 + 10 - 8 + 8 - 4 - 7 + 9 - 9 + 8 - 5 - 7 + 8 - 10 + 8 - 6 - 7 + 7 - 11 + 8 - 7 - 7 + 6 - 12 + 8 - 8 - 7 + 5 - 13", "x2": "add x_0_5 idiv x_0_2 sqr relu INT+ 8", "tree": "(x_0_5 add (x_0_2 idiv (relu(8))**2))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 + 3 + 2 - 8 + 6 - 1 + 1 + 1 - 4 + 3 - 1 + 0 + 0 - 2 + 1 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv idiv x_0_5 INT+ 2 sign add INT- 5 n", "tree": "((x_0_5 idiv 2) idiv sign((-5 add n)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000 + 12 1645 1004 883 2000 + 243 2902 81 7664 0 + 5109 942 1717 944 0 + 11 2400 727 7776 768 0 + 258 5201 6738 8849 7664 0 + 6204 4840 1733 2394 3936 0 + 15 5112 1004 3330 9859 8400 0 + 403 2914 6112 6605 6355 8400 0", "x2": "mul x_0_1 n", "tree": "(x_0_1 mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "mul relu n abs n", "tree": "(relu(n) mul abs(n))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 18 + 84 + 260 + 630 + 1302 + 2408 + 4104 + 6570 + 1 10 + 1 4652 + 2 748 + 2 8574 + 3 8430 + 5 640 + 6 5552 + 8 3538 + 10 4994 + 13 340 + 16 20 + 19 4502 + 23 4278 + 27 9864 + 33 1800 + 39 650", "x2": "relu add sqr relu abs sqr abs n n", "tree": "relu(((relu(abs((abs(n))**2)))**2 add n))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 9 + 5 + 1 + 19 + 7 + 13 + 3 + 11 + 7 + 19 + 13 + 19 + 9 + 17 + 13 + 25 + 19 + 25 + 15 + 23 + 19 + 31 + 25 + 31 + 21 + 29 + 25", "x2": "abs sub x_0_3 abs mul n idiv INT- 9 add INT+ 4 sqr sign n", "tree": "abs((x_0_3 sub abs((n mul (-9 idiv (4 add (sign(n))**2))))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 1 - 10 - 2 - 1 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1", "x2": "idiv x_0_3 mul sign x_0_1 mod idiv INT- 1 0 INT+ 1 sqr n", "tree": "(x_0_3 idiv (sign(x_0_1) mul ((-10 idiv 1) mod (n)**2)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 4 + 10 + 10 - 5 + 5 + 4 - 4 + 1 + 16 + 100 + 100 + 25 + 25 + 16 + 16 + 1 + 256 + 1 0 + 1 0 + 625 + 625 + 256 + 256 + 1 + 6 5536 + 1 0 0 + 1 0 0 + 39 625 + 39 625 + 6 5536 + 6 5536 + 1", "x2": "sqr x_0_8", "tree": "(x_0_8)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250", "x2": "mul n add n n", "tree": "(n mul (n add n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 + 0 - 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11 - 12 - 12", "x2": "add sign sub n x_0_1 idiv n INT- 2", "tree": "(sign((n sub x_0_1)) add (n idiv -2))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 4 + 10 + 0 + 30 + 40 + 62 + 88 + 86 + 108 + 90 + 92 + 82 + 68 + 82 + 72 + 102 + 112 + 134 + 160 + 158 + 180 + 162 + 164 + 154 + 140 + 154 + 144 + 174", "x2": "sub abs add sub sub mod sqr sqr n sign INT+ 7 mul n INT- 7 n x_0_2 x_0_4", "tree": "(abs(((((((n)**2)**2 mod sign(7)) sub (n mul -7)) sub n) add x_0_2)) sub x_0_4)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 7 - 8 + 4 + 5 + 2 + 2 + 3 + 0 + 0 + 1 + 2 + 2 + 1 + 0 + 0 + 1 + 2 + 2 + 1 + 0 + 0 + 1 + 2 + 2 + 1 + 0 + 0", "x2": "abs add relu x_0_3 INT- 2", "tree": "abs((relu(x_0_3) add -2))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 4 + 3 - 3 + 0 + 8 + 8 + 12 + 11 + 5 + 8 + 16 + 16 + 20 + 19 + 13 + 16 + 24 + 24 + 28 + 27 + 21 + 24 + 32 + 32 + 36 + 35 + 29 + 32 + 40 + 40", "x2": "add x_0_6 relu INT+ 8", "tree": "(x_0_6 add relu(8))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 1 + 1 - 3 + 4 + 3 - 5 - 6 - 5 - 3 - 7 + 0 - 1 - 9 - 10 - 9 - 7 - 11 - 4 - 5 - 13 - 14 - 13 - 11 - 15 - 8 - 9 - 17 - 18 - 17 - 15 - 19 - 12", "x2": "mul add INT- 4 x_0_7 mod sign mul n n INT+ 3", "tree": "((-4 add x_0_7) mul (sign((n mul n)) mod 3))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 + 8 + 5 + 3 - 3 - 8 - 4 + 6 - 8 - 2 + 9 + 72 - 104 - 70 - 45 + 48 + 136 + 144 - 228 + 320 + 84 - 396 + 0 + 0 - 1750 + 2340 - 2592 - 7616 + 0 + 2 520 - 2 9760 + 0 + 3 9204 + 0 + 0 + 18 9000", "x2": "mul mul n INT+ 1 mul x_0_11 idiv idiv mod relu n sqr n mod INT+ 6 add x_0_10 n INT- 2", "tree": "((n mul 1) mul (x_0_11 mul (((relu(n) mod (n)**2) idiv (6 mod (x_0_10 add n))) idiv -2)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 20 + 45 + 80 + 125 + 180 + 245 + 320 + 405 + 500 + 605 + 720 + 845 + 980 + 1125 + 1280 + 1445 + 1620 + 1805 + 2000 + 2205 + 2420 + 2645 + 2880 + 3125", "x2": "mul sqr n INT+ 5", "tree": "((n)**2 mul 5)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 7 + 8 + 5 - 2 - 6 + 1 + 8 + 14 + 11 + 13 + 9 + 7 + 14 + 11 + 8 + 10 + 6 + 13 + 11 + 8 + 14 + 7 + 12 + 10 + 8 + 14 + 11 + 13 + 9 + 7 + 14", "x2": "add INT+ 6 mod x_0_6 INT+ 9", "tree": "(6 add (x_0_6 mod 9))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 5 + 8 - 4 - 21 + 15 - 24 + 12 + 63 - 45 + 72 - 36 - 189 + 135 - 216 + 108 + 567 - 405 + 648 - 324 - 1701 + 1215 - 1944 + 972 + 5103 - 3645 + 5832 - 2916 - 1 5309", "x2": "mul x_0_4 INT- 3", "tree": "(x_0_4 mul -3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 + 9 + 1 + 10 + 2 + 11 + 3 + 12 + 4 + 13 + 5 + 14 + 6 + 15 + 7 + 16 + 8 + 17 + 9 + 18 + 10 + 19 + 11 + 20 + 12 + 21 + 13", "x2": "add relu x_0_2 sign sqr sqr INT- 1", "tree": "(relu(x_0_2) add sign(((-1)**2)**2))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 8 + 10 - 2 + 8 + 2 + 5 - 9 - 6 - 1 + 1024 + 441 + 1156 + 841 + 1225 + 529 + 784 + 1156 + 112 5721 + 23 400 + 143 5204 + 78 3225 + 161 5441 + 33 2929 + 69 5556 + 145 9264 + 1 2673 6935 625 + 531 996 7936 + 2 599 7700 8644 + 6135 3539 1225 + 2 6098 4994 3009 + 1108 8433 8049 + 4838 8996 6884 + 2 1296 4988 6224 + 1 6062 2507 1081 658 9698 3025", "x2": "abs sqr add add n x_0_8 add idiv idiv x_0_10 n x_0_1 abs n", "tree": "abs((((n add x_0_8) add (((x_0_10 idiv n) idiv x_0_1) add abs(n))))**2)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 5 + 9 + 6 - 8 - 8 + 1 + 3 - 5 + 1 + 16 + 12 + 6 + 5 + 9 + 6 - 8 - 8 + 1 + 3 - 5 + 1 + 16 + 12 + 6 + 5 + 9 + 6 - 8 - 8 + 1 + 3 - 5 + 1", "x2": "sub add add idiv sub x_0_4 x_0_4 add x_0_9 relu x_0_1 x_0_9 x_0_3 mul x_0_6 sign INT+ 8", "tree": "(((((x_0_4 sub x_0_4) idiv (x_0_9 add relu(x_0_1))) add x_0_9) add x_0_3) sub (x_0_6 mul sign(8)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 7 + 1 + 13 + 0 + 14 + 13 + 14 + 27 + 27 + 41 + 54 + 68 + 95 + 122 + 163 + 217 + 285 + 380 + 502 + 665 + 882 + 1167 + 1547 + 2049 + 2714 + 3596 + 4763", "x2": "relu add abs x_0_2 x_0_3", "tree": "relu((abs(x_0_2) add x_0_3))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 22 + 36 + 52 + 70 + 90 + 112 + 136 + 162 + 190 + 220 + 252 + 286 + 322 + 360 + 400 + 442 + 486 + 532 + 580 + 630 + 682 + 736 + 792 + 850", "x2": "mul add add abs INT+ 8 n sqr mod INT- 9 INT+ 1 0 n", "tree": "(((abs(8) add n) add ((-9 mod 10))**2) mul n)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 4 + 1 - 3 + 2 + 4 + 6 + 3 + 7 + 6 + 5 + 9 + 6 + 8 + 10 + 7 + 11 + 10 + 9 + 13 + 10 + 12 + 14 + 11 + 15 + 14 + 13 + 17 + 14", "x2": "mod sub n x_0_4 n", "tree": "((n sub x_0_4) mod n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 2 + 2 - 4 - 4 + 4 + 15 + 4 + 8 + 2 + 2 + 10 + 21 + 10 + 14 + 8 + 8 + 16 + 27 + 16 + 20 + 14 + 14 + 22 + 33 + 22 + 26 + 20 + 20 + 28 + 39", "x2": "add INT+ 6 x_0_6", "tree": "(6 add x_0_6)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 14 + 26 + 42 + 62 + 86 + 114 + 146 + 182 + 222 + 266 + 314 + 366 + 422 + 482 + 546 + 614 + 686 + 762 + 842 + 926 + 1014 + 1106 + 1202 + 1302 + 1406", "x2": "relu sub sub x_0_1 mul INT- 4 n sub x_0_1 x_0_1", "tree": "relu(((x_0_1 sub (-4 mul n)) sub (x_0_1 sub x_0_1)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 4 + 4 - 5 - 1 - 2 - 7 + 5 - 6 + 60 + 660 + 7920 + 10 2960 + 144 1440 + 2162 1600 + 3 4594 5600 + 58 8107 5200 + 1058 5935 3600 + 2 113 2771 8400 + 40 2265 5436 8000 + 844 7576 4172 8000 + 1 8584 6681 1801 6000 + 42 7447 3667 1436 8000 + 1025 8736 8011 4483 2000 + 2 5646 8420 286 2080 0 + 66 6817 8920 7441 4080 0 + 1800 4083 860 918 160 0 + 5 411 4326 4082 5704 4480 0 + 146 1931 5465 8394 5428 9920 0 + 4385 7946 3975 1836 2869 7600 0 + 13 5959 6338 3230 6924 8962 5600 0 + 435 708 2826 3382 1596 6801 9200 0 + 1 4357 3373 3269 1611 2690 4463 3600 0 + 48 8149 4693 1151 4783 1475 1754 2400 0", "x2": "abs mul x_0_1 mul mul INT+ 1 n sign add x_0_9 idiv n x_0_4", "tree": "abs((x_0_1 mul ((1 mul n) mul sign((x_0_9 add (n idiv x_0_4))))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 3 - 9 + 8 - 10 + 8 - 11 + 9 - 12 + 10 - 12 + 10 - 13 + 11 - 14 + 12 - 15 + 13 - 16 + 14 - 17 + 15 - 18 + 16 - 19 + 17 - 20 + 18 - 21", "x2": "sub add idiv mod n x_0_4 n mod INT+ 6 INT- 8 x_0_1", "tree": "((((n mod x_0_4) idiv n) add (6 mod -8)) sub x_0_1)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 3 + 9 - 9 - 16 + 15 + 60 - 28 - 32 + 198 + 260 - 44 - 48 + 494 + 588 - 60 - 64 + 918 + 1044 - 76 - 80 + 1470 + 1628 - 92 - 96 + 2150 + 2340 - 108", "x2": "mul add sub INT- 5 x_0_2 add relu x_0_2 sign x_0_2 n", "tree": "(((-5 sub x_0_2) add (relu(x_0_2) add sign(x_0_2))) mul n)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 7 + 30 + 35 + 150 + 175 + 750 + 875 + 3750 + 4375 + 1 8750 + 2 1875 + 9 3750 + 10 9375 + 46 8750 + 54 6875 + 234 3750 + 273 4375 + 1171 8750 + 1367 1875 + 5859 3750 + 6835 9375 + 2 9296 8750 + 3 4179 6875 + 14 6484 3750 + 17 898 4375 + 73 2421 8750", "x2": "abs mul x_0_2 INT- 5", "tree": "abs((x_0_2 mul -5))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 5 + 10 + 9 + 9 - 2 + 6 - 8 - 6 + 5 + 10 + 9 + 9 + 2 + 6 + 8 + 6 + 5 + 10 + 9 + 9 + 2 + 6 + 8 + 6 + 5 + 10 + 9 + 9 + 2 + 6 + 8 + 6 + 5", "x2": "abs idiv x_0_8 sign n", "tree": "abs((x_0_8 idiv sign(n)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 4 + 7 - 8 - 10 + 9 - 10 + 1 + 3 + 95 + 129 + 195 + 187 + 229 - 7 + 47 + 1 8057 + 3 3285 + 7 5869 + 6 9689 + 10 4501 - 267 + 3969 + 6 5211 521 + 22 1578 2365 + 115 1217 4217 + 97 1304 6881 + 218 4076 6273 + 3209 + 3129 6929 + 85 496 2631 9778 3425 + 981 9382 9780 8997 8521 + 2 6506 310 4038 1490 5145 + 1 8868 6559 4205 7609 1601", "x2": "add INT+ 9 mul INT- 2 sub x_0_9 sqr x_0_7", "tree": "(9 add (-2 mul (x_0_9 sub (x_0_7)**2)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 3 + 210 - 140 + 1 4350 - 350 + 100 4150 - 350 + 7029 150 - 350 + 49 2031 150 - 350 + 3444 2171 150 - 350 + 24 1095 1971 150 - 350 + 1687 6663 7971 150 - 350 + 11 8136 6465 7971 150 - 350 + 826 9565 2605 7971 150 - 350 + 5 7886 9568 2405 7971 150 - 350 + 405 2086 9776 8405 7971 150 - 350 + 2 8364 6088 4378 8405 7971 150", "x2": "mul INT+ 1 0 mul INT+ 7 mod INT- 5 x_0_2", "tree": "(10 mul (7 mul (-5 mod x_0_2)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 + 4 - 2 - 10 + 9 - 6 - 1 - 7 - 15 + 4 - 11 - 6 - 12 - 20 - 1 - 16 - 11 - 17 - 25 - 6 - 21 - 16 - 22 - 30 - 11 - 26 - 21 - 27 - 35 - 16", "x2": "add x_0_5 INT- 5", "tree": "(x_0_5 add -5)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 3 + 10 - 6 - 1 + 4 + 2 + 2 + 2 + 2 + 4 + 3 + 3 + 2 + 2 + 3 + 3 + 3 + 2 + 2 + 3 + 3 + 3 + 2 + 2 + 3 + 3 + 3 + 2 + 2 + 3", "x2": "add relu idiv x_0_5 x_0_3 INT+ 2", "tree": "(relu((x_0_5 idiv x_0_3)) add 2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 8 - 6 + 1 + 2 + 1 - 2 - 4 - 3 - 3 - 7 - 7 - 10 - 12 - 10 - 12 - 11 - 11 - 15 - 15 - 18 - 20 - 18 - 20 - 19 - 19 - 23 - 23 - 26", "x2": "sub sub relu INT+ 7 relu mod relu n mod sub INT+ 6 x_0_4 n n", "tree": "((relu(7) sub relu((relu(n) mod ((6 sub x_0_4) mod n)))) sub n)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 0 - 6 - 8 + 1 - 2754 + 0 + 2 9160 + 4 9248 - 7614 + 2543 436 + 0 - 3 7791 3600 - 7 4197 368 + 1 3198 1076 - 5026 713 7104 + 0 + 9 4894 1049 6000 + 20 7944 6153 3568 - 4 1051 3938 7904 + 1 7261 5395 1669 9776 + 0 - 39 2007 5475 8976 0 - 93 6499 3696 2576 8448 + 20 839 8394 1381 5296 - 9 1441 2794 3576 5393 3824 + 0 + 241 3198 4629 6256 2560 0 + 618 9886 2334 7847 9133 9008 - 142 1825 5591 4616 4006 5024", "x2": "mul sub mul abs sqr INT- 9 sub mod INT- 4 n sqr n mod n n x_0_5", "tree": "(((abs((-9)**2) mul ((-4 mod n) sub (n)**2)) sub (n mod n)) mul x_0_5)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 1 - 8 + 0 + 6 - 10 - 8 - 57 + 0 + 55 - 98 - 85 - 680 + 5 + 776 - 1463 - 1352 - 1 1551 + 100 + 1 4755 - 2 9248 - 2 8379 - 25 4108 + 2315 + 35 4136 - 73 1183 - 73 7836 - 686 897 + 6 4840 + 1026 9965 - 2193 5468", "x2": "add add mul n x_0_5 n INT- 8", "tree": "(((n mul x_0_5) add n) add -8)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 10 + 2 - 8 + 3 + 8 + 4 + 70 - 4 + 48 + 0 - 32 - 8 + 0 + 8 - 384 + 0 + 64 + 32 + 0 - 48 + 3072 + 0 - 512 - 256 + 0 + 96 - 1 8432 + 0 + 2048 + 512 + 0", "x2": "mul x_0_6 mod x_0_3 INT- 1 0", "tree": "(x_0_6 mul (x_0_3 mod -10))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 1 + 3 + 9 + 1 + 1 - 5 + 210 + 330 + 510 + 270 + 270 + 90 + 6540 + 1 140 + 1 5540 + 8340 + 8340 + 2940 + 19 6440 + 30 4440 + 46 6440 + 25 440 + 25 440 + 8 8440 + 589 3440 + 913 3440 + 1399 3440 + 751 3440 + 751 3440 + 265 3440 + 1 7680 3440", "x2": "idiv mul mul INT+ 6 add INT+ 8 x_0_6 INT+ 5 INT+ 1", "tree": "(((6 mul (8 add x_0_6)) mul 5) idiv 1)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 1 + 0 + 6 - 5 - 6 + 154 + 112 + 162 + 320 + 132 + 144 + 4342 + 3528 + 5310 + 1 752 + 5066 + 5832 + 16 5718 + 14 1920 + 22 3902 + 47 4056 + 23 4094 + 28 1088 + 828 7150 + 738 1192 + 1209 2166 + 2654 8704 + 1357 9134 + 1686 7080 + 5 1380 5222", "x2": "mul add n x_0_6 relu add n n", "tree": "((n add x_0_6) mul relu((n add n)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 9 - 4 - 5 + 9 + 2 + 5 - 6 - 1 - 24 - 14 - 38 - 13 - 44 - 16 - 58 - 25 - 90 - 47 - 136 - 68 - 188 - 92 - 254 - 125 - 352 - 180 - 496 - 256 - 692 - 356 - 954 - 489", "x2": "idiv sub sub INT+ 9 x_0_2 sub x_0_8 idiv idiv x_0_5 n n INT- 1", "tree": "(((9 sub x_0_2) sub (x_0_8 sub ((x_0_5 idiv n) idiv n))) idiv -1)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 8 - 10 - 9 - 9 + 9 + 18 + 19 + 18 + 18 + 9 + 1 - 1 + 0 - 9 - 8 + 0 + 1 + 9 + 17 + 8 + 1 + 8 + 8 - 9 - 7 + 7 + 0 + 1 + 16 + 14", "x2": "sub relu abs x_0_4 x_0_5", "tree": "(relu(abs(x_0_4)) sub x_0_5)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 9 + 7 + 2 - 4 + 3 + 1 - 21 - 10 - 14 - 22 - 17 - 21 - 45 - 36 - 42 - 52 - 49 - 55 - 81 - 74 - 82 - 94 - 93 - 101 - 129 - 124 - 134 - 148 - 149 - 159 - 189", "x2": "sub x_0_6 sub add n add abs relu n mod INT- 3 sub x_0_6 n idiv INT+ 1 INT- 7", "tree": "(x_0_6 sub ((n add (abs(relu(n)) add (-3 mod (x_0_6 sub n)))) sub (1 idiv -7)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 1 - 8 - 2 + 8 - 1 - 2 - 1 + 8 - 1 - 2 - 1 + 2 - 1 - 2 - 1 + 2 - 1 - 2 - 1 + 2 - 1 - 2 - 1 + 2 - 1 - 2 - 1 + 2 - 1", "x2": "idiv x_0_4 abs sub sqr x_0_3 mod relu n x_0_4", "tree": "(x_0_4 idiv abs(((x_0_3)**2 sub (relu(n) mod x_0_4))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 8 + 1 + 9 + 11 + 12 + 5 + 13 + 15 + 16 + 9 + 17 + 19 + 20 + 13 + 21 + 23 + 24 + 17 + 25 + 27 + 28 + 21 + 29 + 31 + 32 + 25 + 33 + 35", "x2": "add x_0_4 INT+ 4", "tree": "(x_0_4 add 4)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 9 + 6 + 6 - 1 - 2 - 5 - 6 - 243 - 75 - 15 - 12 - 1 - 1 - 3 - 6 - 867 - 972 - 121 - 34 - 1 - 1 - 1 - 2 - 1875 - 2028 - 2187 - 588 - 1", "x2": "idiv mul INT- 3 sqr mul relu sqr sign x_0_1 n sqr x_0_4", "tree": "((-3 mul ((relu((sign(x_0_1))**2) mul n))**2) idiv (x_0_4)**2)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 2 - 4 - 3 - 10 + 5 - 10 + 33 + 45 + 33 + 40 - 51 + 24 - 51 - 1040 - 1976 - 1040 - 1551 - 2552 - 527 - 2552 - 108 1551 - 390 4527 - 108 1551 - 240 5552 - 651 2655 - 27 7680 - 651 2655 - 1 1697 5256 5552 - 15 2453 3109 3680 - 1 1697 5256 5552 - 5 7866 8042 4655", "x2": "sub sqr INT+ 7 mul x_0_7 x_0_7", "tree": "((7)**2 sub (x_0_7 mul x_0_7))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 9 + 6 + 5 + 9 + 11 + 8 + 7 + 11 + 13 + 10 + 9 + 13 + 15 + 12 + 11 + 15 + 17 + 14 + 13 + 17 + 19 + 16 + 15 + 19 + 21 + 18", "x2": "abs sub add mod sign n abs n sub n x_0_2 INT- 9", "tree": "abs((((sign(n) mod abs(n)) add (n sub x_0_2)) sub -9))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 + 2 + 7 + 8 + 5 + 8 + 3 - 8 - 3 + 8 + 3 - 8 - 3 + 8 + 3 - 11 + 5 + 8 + 3 - 14 + 16 + 8 + 3 - 17 + 16 + 8 + 3 - 20 + 16 + 8 + 3 - 23 + 16", "x2": "add mul x_0_5 idiv x_0_8 n x_0_4", "tree": "((x_0_5 mul (x_0_8 idiv n)) add x_0_4)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 8 - 14 - 18 - 20 - 20 - 18 - 14 - 8 + 0 - 80 - 77 - 72 - 65 - 56 - 45 - 32 - 17 + 0 - 152 - 140 - 126 - 110 - 92 - 72 - 50", "x2": "sub add abs n mul n mod abs n INT- 9 n", "tree": "((abs(n) add (n mul (abs(n) mod -9))) sub n)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 5 + 10 - 8 + 6 - 9 + 4 + 8 - 6 - 6 + 16 + 8 + 24 + 7 + 22 + 8 + 22 + 27 + 14 + 15 + 38 + 31 + 48 + 32 + 48 + 35 + 50 + 56 + 44 + 46 + 70 + 64", "x2": "add add abs INT- 6 add n x_0_10 INT- 5", "tree": "((abs(-6) add (n add x_0_10)) add -5)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "mul n sqr n", "tree": "(n mul (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 9 - 10 + 1 - 4 - 3 + 8 - 9 + 18 + 36 + 28 + 20 + 6 + 0 + 88 + 54 + 210 + 429 + 372 + 299 + 126 + 45 + 1456 + 969 + 3834 + 8208 + 7500 + 6342 + 2838 + 1104", "x2": "abs mul sub n add add n INT- 7 n sub abs INT- 6 sub INT+ 3 x_0_8", "tree": "abs(((n sub ((n add -7) add n)) mul (abs(-6) sub (3 sub x_0_8))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 4 - 32 - 279 - 2495 - 2 2430 - 20 1834 - 181 6457 - 1634 8049 - 1 4713 2360 - 13 2419 1140 - 119 1772 139 - 1072 5948 1107 - 9653 3532 9794 - 8 6880 1796 7950 - 78 1921 6171 1325 - 703 7294 5540 1669 - 6333 5650 9861 4732 - 5 7002 858 8753 2264 - 51 3018 7729 8779 15 - 461 7168 9568 9010 9735 - 4155 4520 6120 1098 7174 - 3 7399 685 5080 9888 4082 - 33 6591 6169 5728 8995 6209", "x2": "mod mul n n mul x_0_1 INT+ 9", "tree": "((n mul n) mod (x_0_1 mul 9))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 0 + 2 - 9 + 5 + 0 - 6 - 6 - 1 - 7 - 14 - 10 - 12 - 19 - 15 - 10 - 16 - 16 - 11 - 17 - 24 - 20 - 22 - 29 - 25 - 20 - 26", "x2": "mod INT+ 8 sub sub abs x_0_5 n n", "tree": "(8 mod ((abs(x_0_5) sub n) sub n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 3 + 7 - 8 - 8 - 1 - 9 + 4 + 4 - 3 + 5 - 6 - 6 - 1 - 7 + 2 + 2 - 3 + 3 - 4 - 4 - 1 - 5 + 0 + 0 - 3", "x2": "sub INT- 3 sub x_0_4 sign sub add mul x_0_4 abs n INT- 3 x_0_1", "tree": "(-3 sub (x_0_4 sub sign((((x_0_4 mul abs(n)) add -3) sub x_0_1))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 7 + 6 - 4 + 1 + 2 - 9 + 9 + 10 + 11 + 18 + 13 + 15 + 17 + 16 + 26 + 28 + 30 + 38 + 34 + 37 + 40 + 40 + 51 + 54 + 57 + 66 + 63 + 67", "x2": "add relu x_0_8 n", "tree": "(relu(x_0_8) add n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 36 + 144 + 324 + 576 + 900 + 1296 + 1764 + 2304 + 2916 + 3600 + 4356 + 5184 + 6084 + 7056 + 8100 + 9216 + 1 404 + 1 1664 + 1 2996 + 1 4400 + 1 5876 + 1 7424", "x2": "abs sqr mul n INT+ 6", "tree": "abs(((n mul 6))**2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 100 + 50 + 33 + 25 + 20 + 16 + 14 + 12 + 11 + 10 + 9 + 8 + 7 + 7 + 6 + 6 + 5 + 5 + 5 + 5 + 4 + 4", "x2": "idiv sqr INT+ 1 0 abs n", "tree": "((10)**2 idiv abs(n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 + 5 - 3 - 10 + 11 + 17 + 18 + 22 + 20 + 27 + 29 + 34 + 33 + 41 + 44 + 34 + 50 + 41 + 44 + 54 + 50 + 63 + 67 + 54 + 50 + 63", "x2": "add add mod x_0_4 n n relu n", "tree": "(((x_0_4 mod n) add n) add relu(n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 - 1 + 5 + 2 - 8 - 10 - 10 + 6 - 7 + 16 + 7 + 4 + 11 + 5 + 22 + 30 + 35 + 47 + 53 + 76 + 107 + 143 + 191 + 245 + 322 + 430 + 574", "x2": "add INT+ 1 mul sign x_0_3 add x_0_1 x_0_5", "tree": "(1 add (sign(x_0_3) mul (x_0_1 add x_0_5)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 + 4 + 10 + 34 + 54 + 71 + 108 + 143 + 177 + 233 + 289 + 346 + 427 + 510 + 596 + 708 + 824 + 945 + 1094 + 1249 + 1411 + 1603 + 1803 + 2012 + 2253", "x2": "add add abs mul n n x_0_3 sqr add sign sqr x_0_3 add INT- 1 0 INT+ 4", "tree": "((abs((n mul n)) add x_0_3) add ((sign((x_0_3)**2) add (-10 add 4)))**2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 2 - 2 - 4 - 4 - 6 - 6 - 8 - 8 - 10 - 10 - 12 - 12 - 14 - 14 - 16 - 16 - 18 - 18 - 20 - 20 - 22", "x2": "mul idiv n INT+ 2 INT- 2", "tree": "((n idiv 2) mul -2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 2 + 0 - 5 - 5 - 4 - 44 - 58 - 63 - 75 - 82 - 88 - 135 - 156 - 168 - 187 - 201 - 214 - 268 - 296 - 315 - 341 - 362 - 382 - 443 - 478 - 504 - 537", "x2": "sub x_0_6 abs mul idiv n sign sign INT- 3 INT- 7", "tree": "(x_0_6 sub abs(((n idiv sign(sign(-3))) mul -7)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 1 + 0 + 1 + 3 + 2 + 0 + 1 + 0 + 7 + 0 + 5 + 3 + 12 + 11 + 10 + 15 + 8 + 5 + 2 + 0 + 17 + 7", "x2": "mod add sub sqr x_0_1 add abs n INT- 8 INT+ 9 n", "tree": "((((x_0_1)**2 sub (abs(n) add -8)) add 9) mod n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 5 + 6 - 10 - 7 - 3 + 8 + 7 - 1 - 4 - 2 + 8 + 7 - 1 - 4 - 2 + 8 + 7 - 1 - 4 - 2 + 8 + 7 - 1 - 4 - 2 + 8 + 7 - 1 - 4 - 2 + 8 + 7", "x2": "sub x_0_5 idiv relu idiv INT- 8 n add add INT+ 9 sqr mul n n add x_0_11 n", "tree": "(x_0_5 sub (relu((-8 idiv n)) idiv ((9 add ((n mul n))**2) add (x_0_11 add n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 2 - 4 + 9 + 6 + 3 + 3 - 4 - 8 - 9 + 4 + 2 + 8 + 9 + 9 + 9 + 8 + 6 + 4 + 12 + 14 + 15 + 15 + 24 + 23 + 22 + 19 + 22 + 24 + 23 + 32 + 32", "x2": "add add INT- 7 mod x_0_7 x_0_9 n", "tree": "((-7 add (x_0_7 mod x_0_9)) add n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 10 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275", "x2": "add n relu add x_0_1 mod mul x_0_1 n x_0_1", "tree": "(n add relu((x_0_1 add ((x_0_1 mul n) mod x_0_1))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 10 - 4 - 7 + 2 + 7 + 4 + 0 - 640 + 0 - 250 + 0 - 250 + 0 - 4 + 0 - 7 + 0 - 3 + 0 - 17 + 0 - 5 + 0 - 3 + 0 - 9 + 0 - 23", "x2": "idiv sqr mod mul sqr INT+ 5 x_0_2 add mul x_0_7 abs INT+ 1 0 add n idiv n n INT- 1 0", "tree": "(((((5)**2 mul x_0_2) mod ((x_0_7 mul abs(10)) add (n add (n idiv n)))))**2 idiv -10)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 152 + 3419 - 8 2160 + 188 9557 - 4534 9520 + 10 4303 8791 - 250 3293 1184 + 5757 5741 7017 - 13 8181 7800 8656 + 317 8180 9419 8827 - 7627 6342 6077 2144 + 17 5435 5879 9775 9005 - 421 454 1119 4621 6464 + 9684 444 5747 6297 8319 - 23 2417 669 7943 1148 48 + 534 5592 5405 2691 6404 705 - 1 2829 4220 9726 4599 3697 7360 + 29 5076 7082 3708 5785 5047 8835 - 708 1840 9976 9005 8852 1149 2528 + 1 6288 2342 9468 7135 3598 6432 7653 - 39 917 6230 7249 1248 6367 4386 4208 + 899 1105 3306 6729 8718 6451 887 6247", "x2": "sub mul add n x_0_1 sub mul INT+ 4 add sign INT- 9 INT- 5 idiv idiv INT+ 4 x_0_1 INT+ 8 INT+ 8", "tree": "(((n add x_0_1) mul ((4 mul (sign(-9) add -5)) sub ((4 idiv x_0_1) idiv 8))) sub 8)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 3 + 4 - 10 + 6 - 7 + 3 - 5 - 2 - 9 + 6 + 1 + 0 - 6 - 1 - 2 + 1 + 0 + 1 - 3 + 0 + 1 + 2 + 0 + 1 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1", "x2": "idiv add n sub relu n relu sqr x_0_10 n", "tree": "((n add (relu(n) sub relu((x_0_10)**2))) idiv n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 9 + 59 + 119 + 171 + 215 + 251 + 279 + 299 + 311 + 315 + 311 + 299 + 279 + 251 + 215 + 171 + 119 + 59 - 9 - 85 - 169 - 261 - 361", "x2": "sub sub add sqr INT- 1 0 INT- 8 mul INT+ 8 n sub relu abs INT+ 8 x_0_1", "tree": "((((-10)**2 add -8) sub (8 mul n)) sub (relu(abs(8)) sub x_0_1))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 - 9 - 10 - 11 - 14 - 13 - 14 - 15 - 16 - 19 - 18 - 19 - 20 - 21 - 24 - 23 - 24 - 25 - 26 - 29 - 28 - 29", "x2": "sub sub INT- 8 n sign mod n INT- 5", "tree": "((-8 sub n) sub sign((n mod -5)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 + 4 - 7 - 5 + 10 + 2 + 61 + 10 + 2 + 61 + 10 + 2 + 61 + 10 + 2 + 61 + 10 + 2 + 61 + 10 + 2 + 61 + 10 + 2 + 61 + 10 + 2 + 61", "x2": "mod x_0_3 add x_0_6 add n mul INT+ 9 n", "tree": "(x_0_3 mod (x_0_6 add (n add (9 mul n))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 5 + 4 - 2 + 10 + 54 - 35 + 32 - 18 + 100 + 594 - 420 + 416 - 252 + 1500 + 9504 - 7140 + 7488 - 4788 + 3 0 + 19 9584 - 15 7080 + 17 2224 - 11 4912 + 75 0 + 518 9184 - 424 1160", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 2 + 2 + 3 + 2 + 4 + 2 + 5 + 2 + 6 + 2 + 7 + 2 + 8 + 2 + 9 + 2 + 10 + 2 + 11 + 2 + 12 + 2", "x2": "idiv add n x_0_1 x_0_1", "tree": "((n add x_0_1) idiv x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 8 - 24 - 56 - 104 - 160 - 288 - 384 - 496 - 616 - 760 - 920 - 1144 - 1328 - 1536 - 1760 - 2000 - 2248 - 2568 - 2856 - 3160 - 3472 - 3808", "x2": "mul sub sub mod n INT+ 6 sub INT+ 2 sub n mod idiv n INT- 4 sqr n n INT+ 8", "tree": "((((n mod 6) sub (2 sub (n sub ((n idiv -4) mod (n)**2)))) sub n) mul 8)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 8 - 11 - 15 - 20 - 26 - 33 - 41 - 50 - 60 - 71 - 83 - 96 - 110 - 125 - 141 - 158 - 176 - 195 - 215 - 236 - 258 - 281 - 305", "x2": "sub sub x_0_1 n abs sign abs INT- 1", "tree": "((x_0_1 sub n) sub abs(sign(abs(-1))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 1 - 10 - 10 - 3 - 5 - 4 - 9 - 4 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783 + 840 + 899 + 960", "x2": "sub sqr abs sub n idiv mul n INT- 2 add sub n sub x_0_9 INT+ 5 n sign n", "tree": "((abs((n sub ((n mul -2) idiv ((n sub (x_0_9 sub 5)) add n)))))**2 sub sign(n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 9 + 5 - 7 - 3 + 5 + 251 + 7 + 8 + 254 + 1 2309 + 354 + 404 + 1 2459 + 60 3155 + 1 7361 + 1 9812 + 61 508 + 2955 4613 + 85 708 + 97 808 + 2991 4913 + 14 4817 6059 + 4168 4715 + 4756 9616 + 14 6583 762 + 709 6062 6917", "x2": "add relu mul sqr INT+ 7 x_0_4 relu n", "tree": "(relu(((7)**2 mul x_0_4)) add relu(n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 7 - 8 + 2 - 3 + 10 - 9 - 3 + 9 - 1 - 7 - 8 - 12 - 1 - 12 - 9 - 3 - 8 - 1 - 7 - 8 - 12 - 1 - 12 - 9 - 3 - 8 - 1 - 7 - 8 - 12 - 1", "x2": "mod x_0_9 sub x_0_8 add sign mod mod n mod INT- 1 add idiv mod n n x_0_8 n x_0_2 n", "tree": "(x_0_9 mod (x_0_8 sub (sign(((n mod (-1 mod (((n mod n) idiv x_0_8) add n))) mod x_0_2)) add n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 3 + 3 + 6 - 5 - 3 + 9 + 28 + 31 + 37 + 65 + 132 + 206 + 293 + 437 + 716 + 1144 + 1747 + 2639 + 4090 + 6398 + 9913 + 1 5213 + 2 3416 + 3 6236 + 5 6087 + 8 6539", "x2": "add add n sub x_0_1 mul sign INT- 6 x_0_4 relu x_0_4", "tree": "((n add (x_0_1 sub (sign(-6) mul x_0_4))) add relu(x_0_4))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 - 3 - 9 + 3 + 83 - 717 + 83 - 1917 - 22 6317 + 83 - 76 6717 - 3433 9117 + 83 - 3 668 6717 - 124 8282 5117 + 83 - 1226 7468 6717 - 4 90 2957 8317 + 83 - 49 698 7468 6717 - 335 5380 2407 7917 + 83 - 1 9627 9498 7468 6717 - 4 7069 8413 9232 5117 + 83 - 785 1179 9498 7468 6717", "x2": "add mul INT+ 1 0 add INT+ 8 mul relu add sub idiv n x_0_4 mod x_0_1 x_0_3 x_0_4 mul INT+ 5 INT- 8 INT+ 3", "tree": "((10 mul (8 add (relu((((n idiv x_0_4) sub (x_0_1 mod x_0_3)) add x_0_4)) mul (5 mul -8)))) add 3)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 15 + 0 - 65 - 240 - 609 - 1280 - 2385 - 4080 - 6545 - 9984 - 1 4625 - 2 720 - 2 8545 - 3 8400 - 5 609 - 6 5520 - 8 3505 - 10 4960 - 13 305 - 15 9984 - 19 4465 - 23 4240", "x2": "sub INT+ 2 sub sqr sqr n add relu INT+ 9 INT+ 5", "tree": "(2 sub (((n)**2)**2 sub (relu(9) add 5)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8", "x2": "idiv n sub INT+ 5 add INT- 2 INT+ 1 0", "tree": "(n idiv (5 sub (-2 add 10)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 - 5 + 2 + 3 + 5 - 9 - 4 - 1 - 5 + 2 + 3 + 5 - 9 - 4 - 1 - 5 + 2 + 3 + 5 - 9 - 4 - 1 - 5 + 2 + 3 + 5 - 9 - 4 - 1", "x2": "add x_0_7 relu idiv INT+ 1 sub mod INT- 4 mod n x_0_5 n", "tree": "(x_0_7 add relu((1 idiv ((-4 mod (n mod x_0_5)) sub n))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 3 + 7 + 3 + 4 - 5 + 6 - 14 - 6 - 8 + 10 - 12 + 28 + 12 + 16 - 20 + 24 - 56 - 24 - 32 + 40 - 48 + 112 + 48 + 64 - 80 + 96 - 224", "x2": "mul INT- 2 x_0_5", "tree": "(-2 mul x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 7 - 3 - 9 - 4 - 13 - 5 - 17 - 6 - 21 - 7 - 25 - 8 - 29 - 9 - 33 - 10 - 37 - 11 - 41 - 12 - 45 - 13 - 49", "x2": "idiv sqr add sub n sign sign n INT+ 3 x_0_1", "tree": "((((n sub sign(sign(n))) add 3))**2 idiv x_0_1)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 5 + 6 - 2 + 7 + 1 + 8 + 4 + 11 + 7 + 14 + 10 + 17 + 13 + 20 + 16 + 23 + 19 + 26 + 22 + 29 + 25 + 32 + 28", "x2": "add add abs mod INT+ 2 x_0_1 x_0_2 abs sign sub INT- 5 relu n", "tree": "((abs((2 mod x_0_1)) add x_0_2) add abs(sign((-5 sub relu(n)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 3 - 3 - 8 - 5 - 1 + 1 + 1 + 1 + 1 + 1 + 4 + 4 + 4 + 4 + 1 + 1 + 1 + 1 + 1 + 1 + 9 + 9 + 9 + 9 + 1 + 1 + 1", "x2": "sqr idiv n mul INT- 1 0 abs mul x_0_6 mul x_0_4 sign n", "tree": "((n idiv (-10 mul abs((x_0_6 mul (x_0_4 mul sign(n)))))))**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 3 + 14 - 21 + 98 - 147 + 686 - 1029 + 4802 - 7203 + 3 3614 - 5 421 + 23 5298 - 35 2947 + 164 7086 - 247 629 + 1152 9602 - 1729 4403 + 8070 7214 - 1 2106 821 + 5 6495 498 - 8 4742 5747 + 39 5465 3486 - 59 3198 229", "x2": "mul x_0_2 add sub INT+ 7 x_0_1 x_0_1", "tree": "(x_0_2 mul ((7 sub x_0_1) add x_0_1))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 8 - 1 + 8 + 0 - 3 + 10 + 7 + 1 + 7 + 2 + 6 + 6 + 2 + 5 + 0 + 6 + 3 + 4 + 9 + 7 + 13 + 8 + 12 + 12 + 8 + 11 + 6 + 12", "x2": "abs sub sub n sub add INT- 7 n add x_0_6 sign INT+ 2 abs n", "tree": "abs(((n sub ((-7 add n) sub (x_0_6 add sign(2)))) sub abs(n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 10 + 18 + 28 + 40 + 54 + 70 + 88 + 108 + 130 + 154 + 180 + 208 + 238 + 270 + 304 + 340 + 378 + 418 + 460 + 504 + 550", "x2": "mul n sub n INT- 3", "tree": "(n mul (n sub -3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 6 + 6 + 6 + 3 + 0 + 1 - 5 + 8 + 29 + 32 + 35 + 34 + 8 - 9 - 29 - 8 + 28 + 806 + 1015 + 1224 + 1155 + 63 + 52 + 34 - 952 - 441 + 64 8480 + 103 161 + 149 8123 + 133 3990", "x2": "sub add INT- 1 abs sqr abs x_0_9 relu x_0_6", "tree": "((-1 add abs((abs(x_0_9))**2)) sub relu(x_0_6))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 2 + 4 + 8 + 16 + 16 + 32 + 32 + 64 + 64 + 64 + 64 + 128 + 128 + 128 + 128 + 256 + 256 + 256 + 256 + 256 + 256 + 256 + 512", "x2": "abs mul x_0_1 idiv mul n n x_0_1", "tree": "abs((x_0_1 mul ((n mul n) idiv x_0_1)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 7 + 3 + 4 + 1 + 1 + 5 + 0 + 1 + 3 + 3 + 2 + 3 + 5 + 5 + 4 + 5 + 7 + 7 + 6 + 7 + 9 + 9 + 8", "x2": "mod INT- 7 abs sub n x_0_2", "tree": "(-7 mod abs((n sub x_0_2)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 10 - 1 - 6 + 10 + 1 + 6 + 10 + 1 + 6 + 10 + 1 + 6 + 10 + 1 + 6 + 10 + 1 + 6 + 10 + 1 + 6 + 10 + 1 + 6 + 10", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 6 + 9 - 6 - 7 - 10 + 5 + 8 + 10 - 5 - 10 - 11 + 4 + 11 + 11 - 4 - 13 - 12 + 3 + 15 + 12 - 3 - 17 - 13 + 2", "x2": "sub idiv INT+ 6 x_0_1 x_0_3", "tree": "((6 idiv x_0_1) sub x_0_3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 - 8 + 5 - 6 + 7 - 10 + 7 + 8 + 5 + 6 + 7 + 10 + 7 + 8 + 5 + 6 + 7 + 10 + 7 + 8 + 5 + 6 + 7 + 10 + 7 + 8 + 5 + 6", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 8 - 9 + 1 + 7 + 26 + 43 + 75 + 107 + 156 + 207 + 277 + 351 + 446 + 547 + 671 + 803 + 960 + 1127 + 1321 + 1527 + 1762 + 2011 + 2291 + 2587", "x2": "add sqr n x_0_2", "tree": "((n)**2 add x_0_2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 2 + 0 + 2 - 4 + 10 - 5 - 26 - 11 - 10 - 25 - 44 - 70 + 88 + 258 + 82 + 206 + 1036 + 2989 - 6094 + 2 2939 + 2 1214 + 1 7073 + 21 4426 + 309 9566 - 1822 1088 - 1 3976 7356 + 4 8664 9130 + 3 6220 3664", "x2": "sub mul x_0_6 x_0_7 sub INT+ 2 sub x_0_6 n", "tree": "((x_0_6 mul x_0_7) sub (2 sub (x_0_6 sub n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 1 + 2 + 6 + 5 - 1 + 1 + 293 + 2 + 6 + 5 + 3 5452 + 1 + 293 + 2 + 6 + 5 + 3 5452 + 1 + 293 + 2 + 6 + 5 + 3 5452 + 1 + 293 + 2 + 6 + 5", "x2": "relu mod x_0_6 abs mul x_0_4 sqr n", "tree": "relu((x_0_6 mod abs((x_0_4 mul (n)**2))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 10 + 0 + 3 + 10 + 0 + 3 + 10 + 0 + 3 + 10 + 0 + 3 + 10 + 0 + 3 + 10 + 0 + 3 + 10 + 0 + 3 + 10 + 0 + 3", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 5 + 9 - 6 + 4 - 6 + 8 - 7 + 3 - 7 + 7 - 8 + 2 - 8 + 6 - 9 + 1 - 9 + 5 - 10 + 0 - 10 + 4 - 11 - 1 - 11", "x2": "add sign INT- 8 x_0_4", "tree": "(sign(-8) add x_0_4)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 3 - 10 + 8 + 2 + 7 + 4 + 2 + 4 + 0 + 0 + 3 + 4 + 0 + 4 + 4 + 1 + 1 + 4 + 11 + 4 + 4 + 20 + 18 + 4 + 0 + 4 + 4 + 0", "x2": "mod sqr relu mod add INT- 2 x_0_6 INT+ 9 abs n", "tree": "((relu(((-2 add x_0_6) mod 9)))**2 mod abs(n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 10 + 8 + 4 + 9 + 1 - 10 - 2 - 9 + 7 + 81 + 324 + 2025 + 8100 + 2916 + 1 8225 + 5 9049 + 3 2400 + 6 3504 + 1 3689 + 29 1600 + 738 7524 + 3 2464 8324 + 52 8296 3856 + 6 7698 8361 + 268 2749 1681 + 2821 7131 5204 + 848 8365 7104 + 3263 5512 5625 + 151 1203 761 + 6 8860 1102 2641 + 4420 5780 8205 5184", "x2": "sqr mul sub x_0_10 n relu mul sign sqr INT+ 8 INT+ 9", "tree": "(((x_0_10 sub n) mul relu((sign((8)**2) mul 9))))**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 4 + 0 - 6 + 9 - 10 + 10 - 1 + 10 + 8 + 11 + 12 + 19 + 9 + 19 + 9 + 13 + 9 + 11 + 15 + 12 + 9 + 17 + 8 + 21 + 9 + 9 + 8", "x2": "sub mod sqr x_0_3 x_0_2 add sign x_0_5 INT- 9", "tree": "(((x_0_3)**2 mod x_0_2) sub (sign(x_0_5) add -9))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 7 + 2 - 4 + 5 - 6 + 7 - 8 + 9 - 10 + 11 - 12 + 13 - 14 + 15 - 16 + 17 - 18 + 19 - 20 + 21 - 22 + 23 - 24 + 25", "x2": "mul n sign sub relu x_0_2 x_0_3", "tree": "(n mul sign((relu(x_0_2) sub x_0_3)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 - 3 + 0 + 7 - 5 + 9 + 3 - 10 - 3 + 8 - 10 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign sub mul n add x_0_7 mod add mod n INT+ 5 n sign x_0_12 INT+ 8", "tree": "sign(((n mul (x_0_7 add (((n mod 5) add n) mod sign(x_0_12)))) sub 8))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "+ 6 + 5 - 10 - 6 - 5 + 10 + 6 + 5 - 10 - 6 - 5 + 10 + 6 + 5 - 10 - 6 - 5 + 10 + 6 + 5 - 10 - 6 - 5 + 10 + 6", "x2": "mul sign INT- 3 x_0_3", "tree": "(sign(-3) mul x_0_3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 3 - 10 - 6 + 0 - 8 - 9 - 8 + 76 + 4 + 95 + 31 - 5 + 59 + 76 + 59 + 5771 + 11 + 9020 + 956 + 20 + 3476 + 5771 + 3476 + 3330 4436 + 116 + 8136 395 + 91 3931 + 395 + 1208 2571", "x2": "add INT- 5 abs sqr x_0_8", "tree": "(-5 add abs((x_0_8)**2))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 10 + 5 - 5 + 1 + 10 + 27 + 63 + 133 + 273 + 563 + 1144 + 2307 + 4634 + 9289 + 1 8600 + 3 7223 + 7 4470 + 14 8965 + 29 7956 + 59 5939 + 119 1906 + 238 3841 + 476 7712 + 953 5455 + 1907 942 + 3814 1917", "x2": "add x_0_1 add sub x_0_1 INT- 7 abs mod n mod INT- 3 sub x_0_4 mod INT- 5 n", "tree": "(x_0_1 add ((x_0_1 sub -7) add abs((n mod (-3 mod (x_0_4 sub (-5 mod n)))))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 6 - 10 + 2 - 5 + 7 - 14 + 51 - 64 + 144 - 610 + 827 - 2009 + 9136 - 1 3181 + 3 4089 - 16 4304 + 24 9829 - 68 953 + 344 8375 - 548 7102 + 1564 8738 - 8272 6911 + 1 3701 3246 - 4 661 7359 + 22 3294 5644 - 38 3292 2513 + 117 8641 6309", "x2": "sub x_0_7 mul n x_0_3", "tree": "(x_0_7 sub (n mul x_0_3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 9 - 9 + 8 + 6 - 8 + 0 - 72 - 72 + 64 + 48 - 64 + 0 - 576 - 576 + 512 + 384 - 512 + 0 - 4608 - 4608 + 4096 + 3072 - 4096 + 0 - 3 6864 - 3 6864 + 3 2768", "x2": "mul INT+ 8 x_0_6", "tree": "(8 mul x_0_6)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11", "x2": "idiv n mod INT- 2 INT- 6", "tree": "(n idiv (-2 mod -6))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 2 + 1 + 2 + 0 + 0 + 3 + 0 + 3 + 0 + 3 + 0 + 2 + 2 + 1 + 2 + 1 + 2 + 1 + 2 + 0 + 0 + 3 + 0", "x2": "mod abs sub x_0_2 relu add INT- 4 mod n mul INT+ 8 add INT+ 8 INT- 7 INT+ 8", "tree": "(abs((x_0_2 sub relu((-4 add (n mod (8 mul (8 add -7))))))) mod 8)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 7 - 8 - 3 - 10 + 7 + 4 - 8 - 2 + 10 - 2 + 0 + 0 + 6 + 4 + 4 + 0 + 4 + 6 + 5 + 3 + 5 + 0 + 0 + 6 + 4 + 4 + 0 + 4 + 6 + 5 + 3 + 5", "x2": "mod x_0_11 INT+ 7", "tree": "(x_0_11 mod 7)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462", "x2": "mul n sub n sign n", "tree": "(n mul (n sub sign(n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 0 + 1 + 3 - 4 + 10 + 7 - 5 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mod abs idiv mul x_0_5 x_0_8 sign sub n INT+ 5 relu x_0_6", "tree": "sign((abs(((x_0_5 mul x_0_8) idiv sign((n sub 5)))) mod relu(x_0_6)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 8 - 7 - 4 + 1 + 8 + 17 + 28 + 41 + 56 + 73 + 92 + 113 + 136 + 161 + 188 + 217 + 248 + 281 + 316 + 353 + 392 + 433 + 476", "x2": "add INT- 6 add mod relu INT+ 3 mul n abs abs INT- 2 add x_0_1 add n n", "tree": "(-6 add ((relu(3) mod (n mul abs(abs(-2)))) add (x_0_1 add (n add n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 7 + 3 + 1 8 16 + 1 10 25 + 1112 2224 3330 1 + 1 12 36 + 123 2344 6561 4404 + 1 18 81 + 1 4904 9181 4449 + 1 22 121 + 2367 7956 + 1 26 169 + 1 28 196 + 1 22 121 + 1 30 225 + 1 34 289 + 1 34 289 + 1 36 324 + 1 38 361 + 1 40 400 + 1 42 441 + 1 44 484 + 1 46 529 + 1 48 576", "x2": "sqr add sub sqr sqr INT+ 1 0 idiv x_0_2 x_0_3 n", "tree": "(((((10)**2)**2 sub (x_0_2 idiv x_0_3)) add n))**2", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 8 - 2 - 3 - 4 - 10 + 6 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 2 + 0 + 0 + 0 + 0 + 0 + 8 + 0 + 4 + 8 + 0 + 4 + 8", "x2": "mul mod sub sign INT+ 9 INT- 3 relu idiv sub x_0_7 add n n INT- 9 mod n INT+ 3", "tree": "(((sign(9) sub -3) mod relu(((x_0_7 sub (n add n)) idiv -9))) mul (n mod 3))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 9 - 10 - 7 + 6 + 5 - 56 + 16 - 144 - 144 - 32 - 64 - 560 + 8 - 1280 - 1288 - 384 - 664 - 4640 - 104 - 1 416 - 1 488 - 3264 - 5512 - 3 7328 - 1048 - 8 3552 - 8 4136", "x2": "mul INT+ 2 mul INT- 4 sub mul n INT+ 1 add x_0_6 sign x_0_3", "tree": "(2 mul (-4 mul ((n mul 1) sub (x_0_6 add sign(x_0_3)))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 8 + 9 - 1 + 7 + 1 + 27 + 12 + 47 + 27 + 89 + 55 + 153 + 100 + 261 + 175 + 435 + 297 + 719 + 496 + 1179 + 819 + 1925 + 1343 + 3133 + 2192 + 5089 + 3567", "x2": "add x_0_2 add add x_0_4 n sub INT+ 4 idiv n sub sign x_0_5 sqr n", "tree": "(x_0_2 add ((x_0_4 add n) add (4 sub (n idiv (sign(x_0_5) sub (n)**2)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 3 + 8 + 6 + 3 - 8 + 2 + 1 + 1 + 3 + 1 + 6 + 14 + 15 + 5 + 17 + 3 + 1 + 1 + 4 + 1 + 7 + 24 + 25 + 6 + 27 + 4 + 1", "x2": "idiv add n relu abs relu INT+ 2 abs x_0_5", "tree": "((n add relu(abs(relu(2)))) idiv abs(x_0_5))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "mod n INT- 3", "tree": "(n mod -3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 + 4 + 3 - 9 - 4 + 2 + 9 + 17 + 26 + 36 + 46 + 58 + 71 + 84 + 99 + 114 + 131 + 148 + 167 + 186 + 207 + 227 + 250 + 272 + 296 + 320", "x2": "sub add x_0_1 n idiv relu mod sub relu x_0_4 idiv INT+ 1 mul n mod INT- 7 INT- 6 n INT+ 8", "tree": "((x_0_1 add n) sub (relu(((relu(x_0_4) sub (1 idiv (n mul (-7 mod -6)))) mod n)) idiv 8))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 8 + 6 + 1 - 1 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0", "x2": "mod mul n n idiv n add sub sub n n n sign x_0_4", "tree": "((n mul n) mod (n idiv (((n sub n) sub n) add sign(x_0_4))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 6 - 9 + 4 + 2 + 4 + 0 + 0 + 0 + 1 + 2 + 0 + 0 + 0 + 0 + 7 + 0 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 0 + 1 + 0 + 0", "x2": "relu mod n idiv INT+ 8 mod sign n x_0_5", "tree": "relu((n mod (8 idiv (sign(n) mod x_0_5))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 2 - 9 + 5 - 9 - 7 - 8 - 21 - 21 - 34 - 46 - 58 - 82 - 105 - 140 - 186 - 243 - 323 - 425 - 561 - 742 - 979 - 1295 - 1712 - 2264", "x2": "add INT- 6 add x_0_2 add abs sub INT+ 9 n x_0_3", "tree": "(-6 add (x_0_2 add (abs((9 sub n)) add x_0_3)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 0 + 1 + 3 - 3 + 1 + 1 + 3 + 4 - 8 - 1 - 3 - 6 - 6 - 8 + 0 - 8 - 4 - 7 + 7 - 1 - 3 + 7", "x2": "add sub sign mod x_0_1 relu INT+ 1 mod INT+ 9 n mod mul INT- 5 x_0_1 n", "tree": "((sign((x_0_1 mod relu(1))) sub (9 mod n)) add ((-5 mul x_0_1) mod n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 600 - 500 - 400 - 300 - 200 - 100 + 0 - 600 - 500 - 400 - 300 - 200 - 100 + 0 - 600 - 500 - 400 - 300 - 200 - 100 + 0 - 600", "x2": "mul mod n INT- 7 sqr INT- 1 0", "tree": "((n mod -7) mul (-10)**2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 8 - 2 + 0 + 1 + 5 + 3 - 6 + 13 + 15 + 25 + 16 + 36 + 36 + 50 + 52 + 55 + 55 + 61 + 74 + 59 + 61 + 55 + 68 + 52 + 56 + 46 + 48 + 49 + 53", "x2": "add n sub x_0_4 sub sub x_0_8 INT- 2 n", "tree": "(n add (x_0_4 sub ((x_0_8 sub -2) sub n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 67 + 739 + 8132 + 8 9456 + 98 4021 + 1082 4237 + 1 1906 6614 + 13 973 2762 + 144 706 391 + 1584 7766 4311 + 1 7432 5430 7432 + 19 1757 9738 1764 + 210 9337 7119 9417 + 2320 2714 8319 3601 + 2 5522 9863 1512 9626 + 28 752 8494 6642 5902 + 308 8281 3441 3068 4939 + 3397 1094 7854 3753 4347 + 3 7368 2042 6398 1287 7836 + 41 1050 2469 379 4165 6216 + 452 1552 7159 4173 5821 8397 + 4973 7079 8753 5909 4040 2389", "x2": "relu sub n add sign n mul sub INT- 4 INT+ 7 x_0_1", "tree": "relu((n sub (sign(n) add ((-4 sub 7) mul x_0_1))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 0 + 2 + 7 - 6 - 10 - 1 - 6 + 6 + 0 + 11 + 0 + 0 + 98 + 165 + 32 + 119 + 0 + 19 + 0 + 21 + 22 + 0 + 0 + 0 + 0 + 27 + 0 + 29 + 0 + 0", "x2": "relu sub mul idiv n n n mul x_0_9 n", "tree": "relu((((n idiv n) mul n) sub (x_0_9 mul n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 10 + 0 + 3 + 9 - 5 - 3 - 8 + 0 + 3 + 9 - 5 - 3 - 3 + 0 + 3 + 9 - 5 - 3 + 1 + 0 + 3 + 9 - 5 - 3 + 1 + 0 + 3 + 9", "x2": "add x_0_6 relu idiv add n n mod idiv n idiv x_0_6 x_0_3 x_0_3", "tree": "(x_0_6 add relu(((n add n) idiv ((n idiv (x_0_6 idiv x_0_3)) mod x_0_3))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 6 - 5 - 4 + 10 - 4 + 5 + 1 + 1 + 2 + 2 + 1 + 3 + 2 + 15 + 16 + 8 + 9 + 19 + 6 + 10 + 1 + 1 + 3 + 2 + 1 + 4 + 2 + 29", "x2": "idiv n abs abs x_0_7", "tree": "(n idiv abs(abs(x_0_7)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 6 + 9 + 13 + 17 + 22 + 27 + 33 + 39 + 46 + 53 + 61 + 69 + 78 + 87 + 97 + 107 + 118 + 129 + 141 + 153 + 166 + 179 + 193", "x2": "add idiv x_0_1 x_0_1 relu sub x_0_2 sub add INT+ 3 INT- 5 relu n", "tree": "((x_0_1 idiv x_0_1) add relu((x_0_2 sub ((3 add -5) sub relu(n)))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 6 - 192 + 0 + 0 - 128 - 128 + 0 + 0 - 128 - 128 + 0 + 0 - 128 - 128 + 0 + 0 - 128 - 128 + 0 + 0 - 128 - 128 + 0", "x2": "mul idiv idiv sub INT- 4 relu n abs n add x_0_2 sub x_0_2 INT- 1 sqr INT- 8", "tree": "((((-4 sub relu(n)) idiv abs(n)) idiv (x_0_2 add (x_0_2 sub -1))) mul (-8)**2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 5 - 3 + 4 - 7 + 5 + 9 + 10 + 9 + 13 + 11 + 12 + 15 + 13 + 17 + 18 + 17 + 21 + 19 + 20 + 23 + 21 + 25 + 26 + 25 + 29 + 27", "x2": "add n sub n abs x_0_4", "tree": "(n add (n sub abs(x_0_4)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 4 + 0 - 1 + 3 + 2 + 6 + 5 + 9 + 8 + 12 + 11 + 15 + 14 + 18 + 17 + 21 + 20 + 24 + 23 + 27 + 26 + 30 + 29 + 33", "x2": "add x_0_2 mul mod idiv n relu n add add INT+ 6 n n INT+ 3", "tree": "(x_0_2 add (((n idiv relu(n)) mod ((6 add n) add n)) mul 3))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 1 - 1 - 10 + 14 + 25 + 3 - 4 + 20 + 29 + 5 + 0 + 26 + 33 + 9 + 4 + 30 + 37 + 13 + 8 + 34 + 41 + 17 + 12 + 38 + 45", "x2": "add sign x_0_3 add n add sub INT+ 6 x_0_2 n", "tree": "(sign(x_0_3) add (n add ((6 sub x_0_2) add n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 7 + 0 + 11 + 7 + 11 + 18 + 18 + 29 + 36 + 47 + 65 + 83 + 112 + 148 + 195 + 260 + 343 + 455 + 603 + 798 + 1058 + 1401 + 1856 + 2459", "x2": "add x_0_2 x_0_3", "tree": "(x_0_2 add x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 10 + 4 + 2 - 1 - 7 + 14 + 14 + 5 + 0 + 15 + 9 + 21 + 16 + 22 + 11 + 38 + 27 + 45 + 29 + 62 + 40 + 85 + 58 + 109 + 71 + 149 + 100", "x2": "mod add x_0_6 add x_0_4 INT+ 2 add sub x_0_4 INT- 4 x_0_6", "tree": "((x_0_6 add (x_0_4 add 2)) mod ((x_0_4 sub -4) add x_0_6))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 3 - 1 + 4 - 9 - 1 - 2 + 7 - 30 - 60 - 10 - 45 - 45 - 95 + 0 + 0 - 25 + 0 + 0 + 0 - 95 - 110 + 0 - 110 - 125 - 130 + 0 + 0 - 135 + 0", "x2": "mul relu add sign x_0_7 add n x_0_6 sub INT- 4 INT+ 1", "tree": "(relu((sign(x_0_7) add (n add x_0_6))) mul (-4 sub 1))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 1 + 2 + 8 - 9 - 10 + 4 - 3 + 2 - 5 + 5 - 5 + 3 + 4 + 16 + 9 + 10 + 0 + 6 + 2 + 10 + 0 + 10 + 0 + 8 + 16 + 9 + 10 + 0 + 12 + 0 + 20 + 0 + 20", "x2": "abs mul idiv sub INT+ 1 0 x_0_1 INT- 5 abs x_0_11", "tree": "abs((((10 sub x_0_1) idiv -5) mul abs(x_0_11)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 1 - 3 + 6 - 18 + 36 - 108 + 216 - 648 + 1296 - 3888 + 7776 - 2 3328 + 4 6656 - 13 9968 + 27 9936 - 83 9808 + 167 9616 - 503 8848 + 1007 7696 - 3023 3088 + 6046 6176 - 1 8139 8528 + 3 6279 7056", "x2": "mul add idiv x_0_1 mul sign INT- 8 abs sub x_0_1 mul abs INT+ 5 abs x_0_1 INT- 2 x_0_1", "tree": "(((x_0_1 idiv (sign(-8) mul abs((x_0_1 sub (abs(5) mul abs(x_0_1)))))) add -2) mul x_0_1)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 3 + 9 - 2 + 1 + 0 + 6 - 9 - 9 + 6 - 6 - 4 + 5 - 1 - 2 - 1 - 1 - 1 + 1 + 5 + 2 - 12 - 1 - 4 + 14 + 1 + 4 - 1 - 12 - 4 + 1 + 21 + 4 - 6 - 2", "x2": "idiv add x_0_12 mod INT- 1 0 abs mod INT- 5 n x_0_6", "tree": "((x_0_12 add (-10 mod abs((-5 mod n)))) idiv x_0_6)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 1 - 4 - 10 - 22 - 47 - 93 - 175 - 316 - 554 - 950 - 1603 - 2673 - 4419 - 7260 - 1 1874 - 1 9358 - 3 1487 - 5 1133 - 8 2943 - 13 4436 - 21 7778 - 35 2654 - 57 915 - 92 4097", "x2": "add sub mod n x_0_2 abs sub n mul n n x_0_1", "tree": "(((n mod x_0_2) sub abs((n sub (n mul n)))) add x_0_1)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 + 0 - 81 + 0 - 2025 + 0 - 9 9225 + 0 - 803 7225 + 0 - 9 7250 4225 + 0 - 1643 5321 4025 + 0 - 36 9794 7315 5625 + 0 - 1 687 677 4197 5625 + 0 - 385 8031 4548 5320 625 + 0 - 17 139 1871 5902 6147 5625 + 0 - 9000 3630 71 2483 2060 5625 + 0", "x2": "mul x_0_2 relu add abs idiv n add n sqr n abs sqr relu n", "tree": "(x_0_2 mul relu((abs((n idiv (n add (n)**2))) add abs((relu(n))**2))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 7 + 445 - 2 8026 + 176 5654 - 1 1123 6177 + 70 787 9187 - 4414 9638 8732 + 27 8142 7249 180 - 1752 2991 6688 1259 + 11 394 8475 1351 9417 - 695 4875 3933 5172 3150 + 4 3815 7149 7811 5855 8594 - 276 390 436 2129 8919 1253 + 1 7390 4572 7481 4183 1904 9135 - 109 5598 8083 1329 3541 9 5280 + 6902 2724 9237 3749 3083 600 2896 - 43 4843 1670 1954 6206 4232 7818 2159 + 2739 5119 5222 3141 1004 6665 2547 6341 - 17 2589 2529 9005 7889 3293 9911 500 9122 + 1087 3122 9383 7364 7027 7521 4396 1557 5086 - 6 8500 6745 1175 3976 2748 3850 6957 8122 9977 + 431 5542 4942 4050 505 3148 2593 8342 1748 9035 - 2 7187 9177 1371 5153 1834 8340 3411 5557 180 8676", "x2": "add mul INT- 7 mul x_0_1 INT+ 9 mul relu n n", "tree": "((-7 mul (x_0_1 mul 9)) add (relu(n) mul n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7", "x2": "abs idiv mul sign x_0_1 n INT+ 3", "tree": "abs(((sign(x_0_1) mul n) idiv 3))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 8 + 8 + 7 + 7 + 7 + 6 + 6 + 6 + 5 + 5 + 5 + 4 + 4 + 4 + 3 + 3 + 3 + 2 + 2 + 2 + 1", "x2": "add INT+ 9 idiv n INT- 3", "tree": "(9 add (n idiv -3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 9 + 4 + 7 + 5 + 4 - 8 + 5 - 7 + 6 - 6 + 7 - 5 + 6 - 4 + 5 - 3 + 4 - 2 + 3 - 1 + 2 + 0 + 1 + 1 + 0 + 2 - 1 + 3", "x2": "add sign x_0_7 x_0_2", "tree": "(sign(x_0_7) add x_0_2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 8 - 1 - 2 + 1 + 9 - 8 + 9 + 1 - 5 - 7 - 4 + 77 + 59 + 57 + 59 + 66 + 48 + 64 + 55 + 48 + 45 + 47 + 127 + 108 + 105 + 106 + 112 + 93 + 108 + 98 + 90 + 86 + 87", "x2": "abs add sub x_0_11 mul sign x_0_1 n relu add INT- 8 sqr INT- 9", "tree": "abs(((x_0_11 sub (sign(x_0_1) mul n)) add relu((-8 add (-9)**2))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 + 2 - 3 + 2 - 2 + 3 - 4 + 2 - 3 + 5 - 4 + 2 - 4 + 7 - 4 + 2 - 5 + 9 - 4 + 2 - 6 + 11 - 4 + 2", "x2": "idiv n x_0_2", "tree": "(n idiv x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 + 9 + 7 + 0 + 0 + 6 + 7 + 2 + 2 + 8 + 9 + 4 + 4 + 10 + 11 + 6 + 6 + 12 + 13 + 8 + 8 + 14 + 15", "x2": "relu sub add idiv INT+ 2 mul INT- 2 INT+ 5 n x_0_2", "tree": "relu((((2 idiv (-2 mul 5)) add n) sub x_0_2))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 18 + 54 + 216 + 1080 + 6480 + 4 5360 + 36 2880 + 326 5920 + 3265 9200 + 3 5925 1200 + 43 1101 4400 + 560 4318 7200 + 7846 462 800 + 11 7690 6931 2000 + 188 3051 899 2000 + 3201 1868 5286 4000 + 5 7621 3633 5155 2000 + 109 4805 9036 7948 8000 + 2189 6118 735 8976 0 + 4 5981 8479 5453 8496 0 + 101 1600 6549 9984 6912 0 + 2326 6815 649 9647 8976 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 3 + 18 + 12 + 90 + 72 + 630 + 576 + 5670 + 5760 + 6 2370 + 6 9120 + 81 810 + 96 7680 + 1216 2150 + 1548 2880 + 2 675 6550 + 2 7869 1840 + 39 2837 4450 + 55 7383 6800 + 824 9586 3450 + 1226 2440 9600 + 1 8974 485 9350 + 2 9429 8583 400", "x2": "mul relu x_0_2 n", "tree": "(relu(x_0_2) mul n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 4 + 4 - 1 - 31 - 186 - 966 - 4871 - 2 4401 - 12 2057 - 61 342 - 305 1772 - 1525 8927 - 7629 4707 - 3 8147 3612 - 19 736 8142 - 95 3684 797 - 476 8420 4077 - 2384 2102 483 - 1 1921 510 2518 - 5 9605 2551 2698 - 29 8026 2756 3603 - 149 131 3781 8133", "x2": "add mul INT- 5 sub add n add n sub n abs add n n x_0_1 idiv n INT- 9", "tree": "((-5 mul ((n add (n add (n sub abs((n add n))))) sub x_0_1)) add (n idiv -9))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 8 - 12 - 21 - 37 - 62 - 98 - 147 - 211 - 292 - 392 - 513 - 657 - 826 - 1022 - 1247 - 1503 - 1792 - 2116 - 2477 - 2877 - 3318 - 3802 - 4331", "x2": "sub x_0_1 sqr n", "tree": "(x_0_1 sub (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 + 5 - 3 + 5 + 1 + 4 + 3 + 7 + 19 + 36 + 66 + 114 + 193 + 321 + 529 + 866 + 1412 + 2296 + 3727 + 6043 + 9791 + 1 5856 + 2 5670 + 4 1550 + 6 7245 + 10 8821 + 17 6093 + 28 4942 + 46 1064 + 74 6036", "x2": "sub n sub sub mod x_0_1 sign sub INT- 3 abs add x_0_8 n x_0_2 x_0_1", "tree": "(n sub (((x_0_1 mod sign((-3 sub abs((x_0_8 add n))))) sub x_0_2) sub x_0_1))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 6 + 2 - 2 + 7 + 8 + 2 + 9 - 7 + 4 - 20 + 77 + 96 + 26 + 126 - 105 + 64 - 340 + 1386 + 1824 + 520 + 2646 - 2310 + 1472 - 8160 + 3 4650 + 4 7424 + 1 4040 + 7 4088 - 6 6990 + 4 4160 - 25 2960", "x2": "mul add n sign mul n sub INT- 8 idiv INT+ 9 x_0_10 x_0_7", "tree": "((n add sign((n mul (-8 sub (9 idiv x_0_10))))) mul x_0_7)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 3 + 1 + 9 - 3 - 27 + 9 + 81 - 27 - 243 + 81 + 729 - 243 - 2187 + 729 + 6561 - 2187 - 1 9683 + 6561 + 5 9049 - 1 9683 - 17 7147 + 5 9049 + 53 1441 - 17 7147", "x2": "add mul x_0_2 INT- 3 mod n abs n", "tree": "((x_0_2 mul -3) add (n mod abs(n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 8 - 6 + 1 + 9 + 4 - 5 - 1 - 7 - 19 - 16 - 23 - 34 - 32 - 40 - 52 - 51 - 60 - 73 - 73 - 83 - 97 - 98 - 109 - 124 - 126 - 138 - 154 - 157", "x2": "sub sub sub x_0_3 sign mul INT- 5 mul x_0_6 INT- 9 n abs INT- 4", "tree": "(((x_0_3 sub sign((-5 mul (x_0_6 mul -9)))) sub n) sub abs(-4))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 4 + 36 + 144 + 400 + 900 + 1764 + 3136 + 5184 + 8100 + 1 2100 + 1 7424 + 2 4336 + 3 3124 + 4 4100 + 5 7600 + 7 3984 + 9 3636 + 11 6964 + 14 4400 + 17 6400 + 21 3444", "x2": "sqr add n sub n mul add sqr sign n n n", "tree": "((n add (n sub (((sign(n))**2 add n) mul n))))**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 2 - 6 + 4 + 5 + 1 + 1 - 9 + 37 + 43 + 43 + 50 + 55 + 55 + 59 + 67 + 68 + 71 + 75 + 79 + 88 + 92 + 93 + 98 + 103 + 103 + 111 + 112 + 118 + 119", "x2": "add mod x_0_8 INT+ 7 add mul INT+ 4 n INT- 2", "tree": "((x_0_8 mod 7) add ((4 mul n) add -2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 4 + 3 + 8 + 11 + 30 + 51 + 158 + 315 + 1116 + 2531 + 1 56 + 2 5323 + 11 630 + 30 3891 + 143 8206 + 425 4491 + 2157 3108 + 6807 1875 + 3 6674 2856 + 12 2529 3771 + 69 6811 4286 + 245 587 5443 + 1463 3040 30", "x2": "sub n mul x_0_2 sub sub sign sub INT+ 3 INT+ 5 sub n INT+ 7 INT+ 3", "tree": "(n sub (x_0_2 mul ((sign((3 sub 5)) sub (n sub 7)) sub 3)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 8 + 0 - 2 - 10 - 1 - 2 - 15 - 5 - 5 - 17 - 6 - 5 - 22 - 10 - 8 - 24 - 11 - 8 - 29 - 15 - 11 - 31 - 16 - 11", "x2": "sub x_0_3 mul INT- 1 mod sub n INT+ 1 INT- 6", "tree": "(x_0_3 sub (-1 mul ((n sub 1) mod -6)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 5 - 4 + 0 + 0 - 1 - 6 - 18 + 14 + 13 + 10 + 21 + 39 + 105 + 259 - 108 - 218 - 283 - 2220 - 1 152 - 1 1412 - 5 7179 + 2 7204 + 48 180 + 285 3981 + 2534 3734 + 5 8064 1294 + 3 1140 3402 + 274 6466 159", "x2": "sub n add add mul abs x_0_5 x_0_7 idiv sub n x_0_3 mod n add n INT- 3 INT- 8", "tree": "(n sub (((abs(x_0_5) mul x_0_7) add ((n sub x_0_3) idiv (n mod (n add -3)))) add -8))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 8 + 2 - 10 - 10 - 20 - 22 - 34 - 38 - 52 - 58 - 74 - 82 - 100 - 110 - 130 - 142 - 164 - 178 - 202 - 218 - 244 - 262", "x2": "sub add n abs x_0_1 sqr n", "tree": "((n add abs(x_0_1)) sub (n)**2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 37 + 156 + 360 + 688 + 1075 + 1548 + 2107 + 3264 + 4212 + 5300 + 6534 + 7920 + 9464 + 1 1172 + 1 3050 + 1 5104 + 1 7340 + 1 9764 + 2 2382 + 2 5200 + 2 8224 + 3 1460", "x2": "mul add add mod INT+ 7 n n sqr INT+ 6 sqr n", "tree": "((((7 mod n) add n) add (6)**2) mul (n)**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 4 + 9 + 16 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 287 + 322 + 359 + 398 + 439 + 482 + 527", "x2": "add sqr n add idiv add idiv mod sub n x_0_1 x_0_1 INT- 4 INT+ 1 0 mod INT+ 3 INT+ 5 INT- 3", "tree": "((n)**2 add ((((((n sub x_0_1) mod x_0_1) idiv -4) add 10) idiv (3 mod 5)) add -3))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 2 - 8 + 8 - 4 - 7 + 8 + 1 + 16 + 81 + 625 + 2401 + 1 4641 + 1 4641 + 625 + 2401 + 2 736 + 3 8416 + 81 + 1 0 + 4096 + 256 + 625 + 5 625 + 0 + 3 8416 + 4096 + 1 4641 + 39 625", "x2": "sqr sqr mod sub add n INT- 9 idiv x_0_7 sign mul n x_0_4 n", "tree": "(((((n add -9) sub (x_0_7 idiv sign((n mul x_0_4)))) mod n))**2)**2", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 4 - 7 + 0 + 9 + 13 + 7 + 1 + 4 + 3 + 10 + 8 + 10 + 4 + 7 + 6 + 13 + 11 + 13 + 7 + 10 + 9 + 16 + 14 + 16", "x2": "abs sub n x_0_3", "tree": "abs((n sub x_0_3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 5 + 0 + 20 + 0 + 120 + 0 + 960 + 0 + 9600 + 0 + 11 5200 + 0 + 161 2800 + 0 + 2580 4800 + 0 + 4 6448 6400 + 0 + 92 8972 8000 + 0 + 2043 7401 6000 + 0 + 4 9049 7638 4000", "x2": "mul x_0_2 mul n abs idiv INT- 1 add INT- 1 0 sqr mul n INT+ 5", "tree": "(x_0_2 mul (n mul abs((-1 idiv (-10 add ((n mul 5))**2)))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 10 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign sub sub x_0_1 sqr mul n relu relu relu idiv n relu x_0_1 x_0_2", "tree": "sign(((x_0_1 sub ((n mul relu(relu(relu((n idiv relu(x_0_1)))))))**2) sub x_0_2))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 - 9 - 6 + 5 - 9 + 18 - 12 + 7 + 2 - 20 + 32 - 39 + 37 - 17 - 15 + 54 - 91 + 108 - 93 + 39 + 52 - 160 + 253 - 292 + 240", "x2": "sub idiv add sign x_0_4 INT- 4 INT- 1 0 add x_0_4 x_0_1", "tree": "(((sign(x_0_4) add -4) idiv -10) sub (x_0_4 add x_0_1))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 1 + 2 + 0 - 5 + 9 + 1 + 6 + 10 + 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign sign x_0_9", "tree": "sign(sign(x_0_9))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 2 - 7 - 2 - 8 - 10 + 7 + 2 + 9 + 5 - 1 - 5 + 6 + 336 + 1757 + 1123 - 264 - 1455 + 1951 + 12 1298 + 70 2809 + 49 5248 - 12 7777 - 76 9700 + 112 3782 + 7581 1586 + 4 7510 641 + 3 6103 6915 - 1 17 7432 - 6 4731 9155 + 10 1140 5751 + 728 5505 5444 + 4865 375 9193 + 3931 6969 5683 - 1158 523 9169", "x2": "add mul n mul x_0_6 n x_0_12", "tree": "((n mul (x_0_6 mul n)) add x_0_12)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "+ 9 + 2 + 3 + 3 + 5 + 2 + 1 + 1 + 2 + 4 + 0 + 4 + 2 + 1 + 1 + 2 + 4 + 0 + 4 + 2 + 1 + 1 + 2", "x2": "mod add mod INT- 8 n x_0_1 relu INT+ 7", "tree": "(((-8 mod n) add x_0_1) mod relu(7))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 7 + 2 - 7 - 9 - 7 - 2 + 19 + 0 + 4 - 26 - 9 - 11 + 24 + 28 + 11 - 20 - 54 - 20 + 9 + 78 + 48 + 2 - 98 - 102 - 22 + 107 + 180 + 70", "x2": "sub x_0_7 x_0_3", "tree": "(x_0_7 sub x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 10 + 10 + 618 + 1915 + 8168 + 3 372 + 12 6720 + 52 7421 + 232 2676 + 1044 7618 + 4876 7984 + 2 3335 5639 + 11 4946 3692 + 57 9926 2608 + 299 8994 4928 + 1585 6735 4833 + 8569 5371 9012 + 4 7266 8718 494 + 26 5924 4874 1872 + 152 4453 2827 4763 + 889 9245 2887 1356 + 5286 916 806 2908 + 3 1930 3719 903 9008 + 19 6013 340 1965 1365", "x2": "add abs add sqr sqr INT- 5 relu add x_0_1 add x_0_1 mul x_0_2 n add n x_0_2", "tree": "(abs((((-5)**2)**2 add relu((x_0_1 add (x_0_1 add (x_0_2 mul n)))))) add (n add x_0_2))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 7 + 9 - 2 - 4 - 6 + 7 + 2 + 855 + 990 + 924 + 1200 - 9763 - 1 2376 - 1 2465 - 1 7632 + 15 3136 + 20 6748 + 22 1179 + 33 640 - 300 8733 - 427 3984 - 479 8122 - 750 9792 + 7139 2425 + 1 575 736 + 1 2358 161 + 2 101 9056 - 19 8312 4168 - 30 4429 9560", "x2": "mul abs n sub add n sub sqr add INT- 9 INT- 1 add x_0_8 n x_0_4", "tree": "(abs(n) mul ((n add (((-9 add -1))**2 sub (x_0_8 add n))) sub x_0_4))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 8 - 9 + 8 + 10 - 3 + 5 + 78 + 82 + 73 + 182 + 95 + 102 + 6270 + 6823 + 5435 + 3 9398 + 1 5852 + 1 5843 + 3935 2302 + 4656 9185 + 2955 5072 + 15 9155 4710 + 2 9785 5093 + 2 8055 5725 + 1548 6052 6425 3918 + 2168 6892 8941 9322 + 873 5025 6148 913 + 253 4595 1 8743 8022", "x2": "relu add add x_0_3 INT+ 4 sqr x_0_6", "tree": "relu(((x_0_3 add 4) add (x_0_6)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0", "x2": "idiv mod sqr mod n INT- 6 INT+ 1 0 INT+ 5", "tree": "((((n mod -6))**2 mod 10) idiv 5)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 9 + 4 + 1 - 4 - 1 - 1 + 1 + 7 + 11 + 17 + 15 + 16 + 15 + 10 + 7 + 2 + 5 + 5 + 7 + 13 + 17 + 23 + 21 + 22 + 21 + 16 + 13", "x2": "add n sub INT+ 2 x_0_6", "tree": "(n add (2 sub x_0_6))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 6 - 3 - 2 - 1 - 10 + 7 + 6 - 8 - 6 + 6 + 4 - 2 - 5 - 1 + 3 + 7 - 5 - 6 + 6 + 6 - 5 - 6 + 6 + 3 - 3 - 2 + 6 + 3", "x2": "add mod sub x_0_5 INT+ 9 x_0_6 mul INT- 6 sign x_0_2", "tree": "(((x_0_5 sub 9) mod x_0_6) add (-6 mul sign(x_0_2)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 3 + 0 - 3 + 0 + 18 + 0 - 24 + 0 + 180 + 0 - 288 + 0 + 2520 + 0 - 4608 + 0 + 4 5360 + 0 - 9 2160 + 0 + 99 7920 + 0 - 221 1840 + 0 + 2594 5920", "x2": "mul relu n x_0_4", "tree": "(relu(n) mul x_0_4)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 9 - 10 - 2 + 4 + 4 - 5 - 9 - 10 - 2 + 4 + 4 - 5 - 9 - 10 - 2 + 4 + 4 - 5 - 9 - 10 - 2 + 4 + 4 - 5 - 9 - 10 - 2 + 4", "x2": "add x_0_6 sqr mod mod n sign INT+ 8 add x_0_5 mul x_0_7 x_0_7", "tree": "(x_0_6 add (((n mod sign(8)) mod (x_0_5 add (x_0_7 mul x_0_7))))**2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 7 + 5 - 7 + 10 + 243 - 247 + 238 - 438 + 243 + 2 4053 - 2 9649 + 3 3834 - 7 3779 + 2 4053 + 538 2276 - 755 6310 + 970 4247 - 2388 343 + 538 2276 + 21 4535 4090 - 33 2262 8463 + 46 7297 5205 - 126 2731 9171 + 21 4535 4090 + 1 3375 2367 7787 - 2 2414 2386 5783", "x2": "mod x_0_4 mul x_0_5 sqr sub idiv n n abs n", "tree": "(x_0_4 mod (x_0_5 mul (((n idiv n) sub abs(n)))**2))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 0 + 0 + 0 + 1 + 1 + 4 + 4 + 0 + 3 + 3 + 0 + 10 + 8 + 6 + 4 + 2 + 0 + 17 + 17 + 16 + 15 + 14", "x2": "mod sqr INT- 6 idiv sub abs abs add sqr n INT+ 1 0 abs x_0_1 n", "tree": "((-6)**2 mod ((abs(abs(((n)**2 add 10))) sub abs(x_0_1)) idiv n))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 - 4 + 5 + 0 + 3 + 3 + 2 + 2 + 2 + 1 + 2 + 1 + 1 + 2 + 0 + 2 + 1 + 0 + 3 + 1 + 0 + 4 + 2 + 1", "x2": "abs sub add INT+ 1 mod x_0_3 n x_0_1", "tree": "abs(((1 add (x_0_3 mod n)) sub x_0_1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 7 - 6 - 3 - 3 + 6 - 8 + 4 - 4 + 6 + 0 + 6 + 6 + 56 - 24 + 12 - 18 + 0 - 48 + 24 - 224 - 144 + 0 - 108 + 0 - 2688 - 576 - 2688 + 2592 + 0 + 5184 + 0 + 60 2112 + 8 2944 + 0", "x2": "mul mul sign INT+ 6 x_0_7 x_0_12", "tree": "((sign(6) mul x_0_7) mul x_0_12)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "+ 4 - 4 - 5 - 2 - 9 + 5 - 288 + 0 - 1008 + 0 - 1760 + 0 - 3 1304 + 0 - 12 2760 + 0 - 24 1672 + 0 - 476 1096 + 0 - 2062 7208 + 0 - 4447 1880 + 0 - 9 5222 4200 + 0 - 44 5548 2760 + 0", "x2": "mul mul abs sub abs abs n x_0_6 relu add n x_0_1 INT- 8", "tree": "((abs((abs(abs(n)) sub x_0_6)) mul relu((n add x_0_1))) mul -8)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 9 + 2 - 6 - 2 + 6 - 8 - 3 + 2 + 0 + 14 + 10 + 3 + 15 + 20 + 34 + 46 + 37 + 44 + 63 + 84 + 112 + 117 + 117 + 145 + 187 + 238 + 273 + 280", "x2": "add n sub sub add x_0_6 x_0_5 mul n INT- 1 INT+ 1 0", "tree": "(n add (((x_0_6 add x_0_5) sub (n mul -1)) sub 10))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 4 + 6 + 4 + 0 + 30 + 54 + 59 + 78 + 101 + 92 + 91 + 111 + 119 + 125 + 165 + 199 + 214 + 243 + 276 + 277 + 286 + 316 + 334 + 350 + 400 + 444", "x2": "add sub sqr n x_0_5 abs idiv INT- 7 abs n", "tree": "(((n)**2 sub x_0_5) add abs((-7 idiv abs(n))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 9 + 5 + 7 + 10 - 7 + 3 - 11 + 21 + 14 + 32 - 16 + 2 - 29 + 52 + 28 + 78 - 50 - 7 - 87 + 123 + 57 + 188 - 149 - 39 - 249 + 299 + 124", "x2": "add x_0_6 sub n x_0_3", "tree": "(x_0_6 add (n sub x_0_3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 7 + 12 + 19 + 28 + 39 + 52 + 67 + 84 + 103 + 124 + 147 + 172 + 199 + 228 + 259 + 292 + 327 + 364 + 403 + 444 + 487", "x2": "add sqr INT- 2 abs add sqr n idiv INT- 2 INT+ 9", "tree": "((-2)**2 add abs(((n)**2 add (-2 idiv 9))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 7 + 9 - 1 + 6 + 27 + 40 + 62 + 107 + 167 + 251 + 382 + 575 + 854 + 1266 + 1873 + 2761 + 4063 + 5974 + 8775 + 1 2880 + 1 8898 + 2 7719 + 4 647 + 5 9595 + 8 7366", "x2": "add n sub n mul sub add abs add x_0_3 INT+ 5 x_0_1 mod INT- 2 INT+ 5 sign idiv n INT- 3", "tree": "(n add (n sub (((abs((x_0_3 add 5)) add x_0_1) sub (-2 mod 5)) mul sign((n idiv -3)))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "abs mod idiv relu n INT+ 4 INT- 2", "tree": "abs(((relu(n) idiv 4) mod -2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 + 7 + 256 + 289 + 144 + 961 + 1024 + 1521 + 784 + 2209 + 256 + 3025 + 144 + 3969 + 1936 + 5041 + 1936 + 6241 + 2304 + 7569 + 3136 + 9025 + 8464 + 1 609", "x2": "sqr sub sub mod abs x_0_2 mul add n mod sqr n mod n x_0_2 INT- 4 INT- 1 INT+ 9", "tree": "((((abs(x_0_2) mod ((n add ((n)**2 mod (n mod x_0_2))) mul -4)) sub -1) sub 9))**2", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 6 + 1029 + 261 + 5 + 5 + 1029 + 1029 + 5 + 5 + 1029 + 1029 + 5 + 5 + 1029 + 1029 + 5 + 5 + 1029 + 1029 + 5 + 5 + 1029 + 1029", "x2": "add INT+ 5 sqr mul INT- 4 relu mod idiv INT+ 8 idiv x_0_2 INT+ 3 mul n INT+ 4", "tree": "(5 add ((-4 mul relu(((8 idiv (x_0_2 idiv 3)) mod (n mul 4)))))**2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 - 5 + 4 + 13 + 20 + 4 + 13 + 20 + 4 + 13 + 20 + 4 + 13 + 20 + 4 + 13 + 20 + 4 + 13 + 20 + 4 + 13 + 20 + 4 + 13", "x2": "mod x_0_3 sqr n", "tree": "(x_0_3 mod (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 3 + 10 - 2 + 9 - 2 + 4 - 2 + 3 - 1 + 6 - 1 + 7 - 3 + 8 - 5 + 17 - 3 + 19 - 2 + 7 - 2 + 5 - 1 + 9 - 1 + 14 - 4 + 15", "x2": "mul sign INT- 5 idiv n x_0_7", "tree": "(sign(-5) mul (n idiv x_0_7))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 1 + 2 + 17 + 0 - 13 + 34 + 13 - 47 + 55 + 73 - 102 + 37 + 248 - 139 - 174 + 635 + 35 - 809 + 1235 + 879 - 2044 + 1591 + 3802 - 3635", "x2": "add sub relu x_0_3 x_0_2 x_0_3", "tree": "((relu(x_0_3) sub x_0_2) add x_0_3)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 + 4 + 5 + 10 + 1 + 4 - 5 + 1 + 58 + 26 + 36 + 112 + 14 + 30 + 40 + 17 + 3381 + 694 + 1315 + 1 2564 + 217 + 922 + 1623 + 313 + 1143 1186 + 48 1662 + 172 9252 + 1 5785 4124 + 4 7118 + 85 114", "x2": "add sqr x_0_8 n", "tree": "((x_0_8)**2 add n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 7 + 5 + 8 + 3 + 4 + 10 + 4 - 9 + 5 - 6 + 0 + 9 + 3 + 6 + 14 + 0 + 2 + 9 + 7 + 5 + 18 + 13 + 22 + 5 + 11 + 10 + 0 + 11 + 27 + 25 + 11 + 0 + 12", "x2": "mod sub abs sqr x_0_11 sqr sub mul INT+ 6 sqr n x_0_9 n", "tree": "((abs((x_0_11)**2) sub (((6 mul (n)**2) sub x_0_9))**2) mod n)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 10 - 495 - 1104 + 8 6650 + 27 8244 - 2972 901 - 1 2465 3248 + 168 5175 948 + 872 5727 3700 - 14 2734 3305 2835 - 87 9553 3188 9456 + 1 6885 4713 150 3974 + 12 674 7153 5233 3828 - 2659 4617 2998 6875 8825 - 2 1624 9089 9113 8221 9520 + 538 91 797 6344 9910 3264 + 4904 5293 5919 148 7387 1684 - 135 9549 158 5622 3792 3394 7767 - 1373 2682 2057 3241 6468 4071 4800 + 41 9692 7811 9481 6284 6951 9675 7170 + 465 2632 7313 214 2699 4963 4174 2884 - 15 5412 2368 7644 470 2226 3135 9179 9981 - 187 5941 5172 6102 3936 4369 2499 730 7712", "x2": "mul mul n relu n sub sign add INT- 3 n mul x_0_2 INT+ 7", "tree": "((n mul relu(n)) mul (sign((-3 add n)) sub (x_0_2 mul 7)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 6 + 4 + 4 + 6 + 10 + 16 + 24 + 34 + 46 + 60 + 76 + 94 + 114 + 136 + 160 + 186 + 214 + 244 + 276 + 310 + 346", "x2": "add sqr sub INT+ 4 n n", "tree": "(((4 sub n))**2 add n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 3 + 7 + 3 + 4 + 8 + 4 + 5 + 9 + 5 + 6 + 10 + 6 + 7 + 11 + 7 + 8 + 12 + 8 + 9 + 13 + 9 + 10 + 14 + 10", "x2": "add idiv n n mod relu x_0_3 add mul x_0_1 relu x_0_2 n", "tree": "((n idiv n) add (relu(x_0_3) mod ((x_0_1 mul relu(x_0_2)) add n)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 5 - 7 - 8 - 2 + 9 - 5 - 3 + 2 + 0 + 2 + 15 + 2 + 1 - 6 - 11 + 14 - 2 - 5 + 2 - 2 - 13 + 13 + 1 + 7 + 5 - 25 + 16 + 3 - 7 + 4 + 11 - 26", "x2": "sub x_0_11 x_0_10", "tree": "(x_0_11 sub x_0_10)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 2 + 0 + 5 - 6 + 8 + 0 - 4 - 10 + 2 - 1 + 8 + 9 + 4 + 16 + 225 + 64 + 81 + 64 + 169 + 196 + 196 + 5 1076 + 3136 + 5184 + 3600 + 2 3409 + 841 + 1 7424 + 26 49 25 + 943 7184 + 2515 225 + 1158 7216 + 5 3884 3369 + 25 2355 5225", "x2": "relu sqr sub x_0_12 x_0_7", "tree": "relu(((x_0_12 sub x_0_7))**2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "- 9 - 7 - 6 + 81 + 63 + 54 - 729 - 567 - 486 + 6561 + 5103 + 4374 - 5 9049 - 4 5927 - 3 9366 + 53 1441 + 41 3343 + 35 4294 - 478 2969 - 372 87 - 318 8646 + 4304 6721 + 3348 783 + 2869 7814 - 3 8742 489", "x2": "mul INT- 9 x_0_3", "tree": "(-9 mul x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 - 6 - 6 - 10 - 15 - 21 - 28 - 36 - 45 - 55 - 66 - 78 - 91 - 105 - 80 - 91 - 102 - 114 - 127 - 140 - 154 - 169", "x2": "idiv add n sqr n idiv idiv abs add INT- 1 0 sub sub n n n idiv INT- 1 0 INT+ 8 INT+ 6", "tree": "((n add (n)**2) idiv ((abs((-10 add ((n sub n) sub n))) idiv (-10 idiv 8)) idiv 6))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 6 + 18 + 72 + 360 + 2160 + 1 5120 + 12 960 + 108 8640 + 1088 6400 + 1 1975 400 + 14 3700 4800 + 186 8106 2400 + 2615 3487 3600 + 3 9230 2310 4000 + 62 7683 6966 4000 + 1067 622 8428 8000 + 1 9207 1211 1718 4000 + 36 4935 3012 2649 6000 + 729 8706 245 2992 0 + 1 5327 2826 5151 2832 0 + 33 7200 2183 3328 2304 0 + 775 5605 216 6549 2992 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 5 - 2 + 3 + 0 + 3 - 5 + 12 + 19 + 18 + 23 + 17 + 36 + 45 + 46 + 53 + 49 + 70 + 81 + 84 + 93 + 91 + 114 + 127 + 132 + 143 + 143 + 168 + 183", "x2": "add n sub n sub sqr mod idiv mod abs x_0_6 n n n x_0_5", "tree": "(n add (n sub (((((abs(x_0_6) mod n) idiv n) mod n))**2 sub x_0_5)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 5 + 2 - 15 + 8 - 75 + 48 - 525 + 384 - 4725 + 3840 - 5 1975 + 4 6080 - 67 5675 + 64 5120 - 1013 5125 + 1032 1920 - 1 7229 7125 + 1 8579 4560 - 32 7364 5375 + 37 1589 1200 - 687 4655 2875 + 817 4960 6400 - 1 5811 7071 6125 + 1 9619 9055 3600", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 28 + 83 + 285 + 1185 + 5979 + 3 5937 + 25 1631 + 201 3129 + 1811 8251 + 1 8118 2609 + 19 9300 8807 + 239 1610 5801 + 3109 937 5539 + 4 3527 3125 7681 + 65 2909 6886 5359 + 1044 6555 184 5897 + 1 7759 1435 3138 411 + 31 9664 5835 6484 7569 + 607 3627 877 3210 3991 + 1 2147 2541 7546 4208 9 + 25 5092 3376 8474 8368 387 + 561 2031 4290 6446 4096 8721", "x2": "sub mul add INT+ 9 x_0_1 n add x_0_1 idiv mod x_0_1 add sign INT- 4 x_0_1 x_0_1", "tree": "(((9 add x_0_1) mul n) sub (x_0_1 add ((x_0_1 mod (sign(-4) add x_0_1)) idiv x_0_1)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 3 + 1 - 6 - 5 + 6 + 6 + 13 + 13 + 7 + 8 + 9 + 11 + 12 + 11 + 14 + 14 + 13 + 15 + 12 + 10 + 21 + 19 + 15 + 18 + 25 + 19", "x2": "add mod x_0_1 sub INT+ 3 x_0_4 n", "tree": "((x_0_1 mod (3 sub x_0_4)) add n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 5 - 3 - 5 - 6 + 1 + 1 - 3 - 2 - 2 + 11 + 12 - 5 - 7 - 8 + 1 + 1 - 4 - 3 - 3 + 21 + 22 - 6 - 8 - 9 + 1 + 1", "x2": "idiv n x_0_5", "tree": "(n idiv x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 3 - 6 - 8 + 2 + 2 + 9 + 448 + 416 + 384 + 368 + 544 + 560 + 688 + 7728 + 7232 + 6736 + 6496 + 9328 + 9600 + 1 1664 + 12 4320 + 11 6400 + 10 8480 + 10 4656 + 14 9984 + 15 4352 + 18 7392 + 198 9904", "x2": "mul add add n x_0_7 relu mul INT+ 5 INT+ 4 sqr sqr INT+ 2", "tree": "(((n add x_0_7) add relu((5 mul 4))) mul ((2)**2)**2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 1 + 16 - 9 + 75 - 59 + 520 - 477 + 4675 - 4775 + 5 1420 - 5 7305 + 66 8455 - 80 2275 + 1002 6820 - 1283 6405 + 1 7045 5935 - 2 3105 5295 + 32 3866 2760 - 46 2110 5905 + 680 1191 7955 - 1016 6432 9915 + 1 5642 7411 2960 - 2 4399 4391 7965", "x2": "sub mul add n relu relu INT- 7 x_0_2 INT+ 5", "tree": "(((n add relu(relu(-7))) mul x_0_2) sub 5)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 - 1 - 4 + 10 + 10 + 10 + 13 + 17 + 4 + 5 + 6 + 4 + 1 + 15 + 15 + 15 + 18 + 22 + 9 + 10 + 11 + 9 + 6 + 20 + 20 + 20", "x2": "sub mod relu add n INT+ 4 sub mul INT+ 2 n mul INT- 8 x_0_1 x_0_5", "tree": "((relu((n add 4)) mod ((2 mul n) sub (-8 mul x_0_1))) sub x_0_5)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 5 + 3 - 9 - 2 - 5 - 2 - 4 + 10 - 3 - 9 - 7 + 16 + 11 + 24 + 19 + 22 + 20 + 12 + 10 + 24 + 31 + 13 + 4 + 11 + 18 + 15 + 15 + 4 + 7 + 4 + 24 + 12 + 16", "x2": "abs sub n add x_0_11 mod idiv INT- 2 sub x_0_4 INT- 8 add x_0_10 sign x_0_5", "tree": "abs((n sub (x_0_11 add ((-2 idiv (x_0_4 sub -8)) mod (x_0_10 add sign(x_0_5))))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 3 - 1 + 20 + 56 + 50 + 8 + 6 + 0 + 54 + 40 + 30 + 32 + 6 + 40 + 62 + 0 + 38 + 40 + 62 + 32 + 6 + 40 + 62 + 0", "x2": "mod mul mul n INT- 1 0 mul INT- 9 add n x_0_2 sqr INT- 8", "tree": "(((n mul -10) mul (-9 mul (n add x_0_2))) mod (-8)**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 + 3 + 1 + 2 + 0 + 4 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0", "x2": "mod abs mul INT- 8 sub INT+ 8 n sub INT+ 6 x_0_1", "tree": "(abs((-8 mul (8 sub n))) mod (6 sub x_0_1))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 10 + 6 - 1 - 568 - 743 - 762 - 1301 - 3 2008 - 4 6519 - 8 3002 - 14 957 - 258 456 - 404 9447 - 1005 1594 - 1758 2341 - 2 7325 9192 - 4 5492 3767 - 14 1914 2122 - 25 6480 5965 - 358 4980 1656 - 626 1474 4615 - 2316 9141 5962 - 4319 4680 5109 - 5 6091 6166 5960 - 10 1998 4696 6711", "x2": "sub mul mul n INT- 8 INT+ 8 abs add mod INT+ 2 n sub x_0_2 mul mul x_0_4 n INT- 6", "tree": "(((n mul -8) mul 8) sub abs(((2 mod n) add (x_0_2 sub ((x_0_4 mul n) mul -6)))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 + 10 + 14 + 19 + 25 + 32 + 40 + 49 + 59 + 70 + 82 + 95 + 109 + 124 + 140 + 157 + 175 + 194 + 214 + 235 + 257 + 280", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 4 - 8 + 7 - 2 - 3 - 9 - 8 - 2 + 3 + 8 + 7 + 3 + 2 + 7 + 6 + 2 + 1 + 8 + 7 + 3 + 2 + 9 + 8 + 4 + 3 + 10 + 9 + 5 + 4 + 11 + 10", "x2": "add abs x_0_4 sign x_0_9", "tree": "(abs(x_0_4) add sign(x_0_9))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 9 + 10 - 5 + 8 + 10 + 5 - 11 - 7 - 8 - 9 - 21 - 18 - 20 - 22 - 35 - 33 - 36 - 39 - 53 - 52 - 56 - 60 - 75 - 75 - 80 - 85 - 101 - 102", "x2": "add sub sign relu add sub INT- 2 x_0_7 n relu n mod idiv n n x_0_4", "tree": "((sign(relu(((-2 sub x_0_7) add n))) sub relu(n)) add ((n idiv n) mod x_0_4))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 1 - 10 + 3 + 9 - 8 - 6 - 4 - 10 + 5 + 2 + 10 + 13 + 13 + 14 + 0 + 16 + 18 + 18 + 0 + 21 + 22 + 23 + 0 + 25 + 26 + 27 + 0 + 29 + 30 + 31 + 0 + 33 + 34", "x2": "relu sub n sqr idiv sign abs add add x_0_12 x_0_6 INT+ 6 mod n x_0_8", "tree": "relu((n sub ((sign(abs(((x_0_12 add x_0_6) add 6))) idiv (n mod x_0_8)))**2))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3", "x2": "relu relu idiv n INT+ 7", "tree": "relu(relu((n idiv 7)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 - 8 - 3 + 4 - 10 - 9 - 7 + 5 - 3 + 2 + 2 + 4 + 10 + 4 + 5 + 7 + 10 + 5 + 16 + 2 + 2 + 4 + 10 + 4 + 5 + 7 + 10 + 5 + 16 + 2 + 2 + 4", "x2": "mod x_0_10 mod n add add n idiv abs idiv x_0_4 abs idiv INT- 7 n n abs n", "tree": "(x_0_10 mod (n mod ((n add (abs((x_0_4 idiv abs((-7 idiv n)))) idiv n)) add abs(n))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 6 - 3 - 4 - 5 + 6 + 8 + 6 - 3 - 4 - 5 + 6 + 8 + 6 - 3 - 4 - 5 + 6 + 8 + 6 - 3 - 4 - 5 + 6 + 8 + 6 - 3 - 4", "x2": "mul x_0_6 INT+ 1", "tree": "(x_0_6 mul 1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 + 4 + 5 + 0 + 2 - 10 - 13 - 14 - 9 - 11 - 19 - 22 - 23 - 18 - 20 - 28 - 31 - 32 - 27 - 29 - 37 - 40 - 41 - 36 - 38 - 46 - 49", "x2": "sub mod n n sub abs x_0_5 INT- 9", "tree": "((n mod n) sub (abs(x_0_5) sub -9))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 12 + 21 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437 + 480 + 525 + 572", "x2": "sub mul add n INT+ 5 n n", "tree": "(((n add 5) mul n) sub n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 3 - 9 + 8 - 7 + 9 + 9 + 704 - 486 - 1800 - 8 4216 + 6 8976 + 30 5721 + 1650 8100 - 1536 1200 - 7838 8992 - 47 7136 1100 + 49 4974 2816 + 283 2332 6448 + 1 9086 6672 8400 - 2 1755 5650 9756 - 13 7159 2482 1632 - 1009 7261 6710 368 + 1250 3722 4562 5856 + 8575 5466 278 0 + 68 2594 355 2852 7616 - 91 129 9490 1624 5424 - 672 4934 1728 8316 8704 - 5 7407 3118 9722 6671 7568", "x2": "mul sub x_0_7 x_0_3 sqr relu n", "tree": "((x_0_7 sub x_0_3) mul (relu(n))**2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 1 + 0 + 3 + 10 + 25 + 56 + 119 + 246 + 501 + 1012 + 2035 + 4082 + 8177 + 1 6368 + 3 2751 + 6 5518 + 13 1053 + 26 2124 + 52 4267 + 104 8554 + 209 7129 + 419 4280 + 838 8583", "x2": "sub x_0_1 sub n add add x_0_1 n n", "tree": "(x_0_1 sub (n sub ((x_0_1 add n) add n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 7 + 7 - 2 + 4 - 8 - 13 + 0 - 10 - 5 - 18 - 24 - 12 - 23 - 19 - 33 - 40 - 29 - 41 - 38 - 53 - 61 - 51 - 64 - 62 - 78 - 87 - 78", "x2": "sub x_0_5 abs n", "tree": "(x_0_5 sub abs(n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 + 1 - 9 - 17 + 7 - 47 - 112 + 7 - 416 - 1113 + 7 - 4985 - 1 4462 + 7 - 7 4768 - 23 1385 + 7 - 134 5817 - 439 6308 + 7 - 2826 2150 - 9671 8769 + 7 - 6 7829 1593 - 24 1796 9218", "x2": "sub sub mod sign INT+ 2 mul n x_0_3 INT- 5 INT- 1", "tree": "(((sign(2) mod (n mul x_0_3)) sub -5) sub -1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 2 + 0 + 7 + 6 - 8 - 5 - 4 - 3 + 4 - 8 + 0 - 9 - 10 - 8 - 10 - 8 - 9 - 8 - 8 + 0 - 9 - 10 - 8 - 10 - 8 - 9 - 8 - 8 + 0 - 9 - 10", "x2": "idiv relu add INT+ 8 abs mod INT+ 8 x_0_9 INT- 1", "tree": "(relu((8 add abs((8 mod x_0_9)))) idiv -1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 4 - 4 + 5 + 7 - 5 - 10 + 2 - 9 + 7 + 3 + 5 - 3 + 6 - 1 + 3 - 2 + 8 + 8 + 6 - 2 + 14 + 13 + 17 + 19 + 16 + 22 + 16 + 13 + 9 + 26 + 20", "x2": "idiv sub mul abs n mod x_0_10 x_0_5 INT+ 6 x_0_5", "tree": "(((abs(n) mul (x_0_10 mod x_0_5)) sub 6) idiv x_0_5)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 9 + 9 - 1 - 9 - 12 - 14 - 16 - 13 - 20 - 20 - 16 - 19 - 28 - 26 - 32 - 34 - 22 - 33 - 38 - 40 - 38 - 46 - 34 - 41 - 44 - 40", "x2": "add mul n INT- 2 mod abs mod n x_0_2 mod x_0_5 n", "tree": "((n mul -2) add (abs((n mod x_0_2)) mod (x_0_5 mod n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 5 + 0 - 1 + 5 + 5 + 0 + 1 + 5 + 5 + 0 + 1 + 5 + 5 + 0 + 1 + 5 + 5 + 0 + 1 + 5 + 5 + 0 + 1 + 5 + 5", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 - 7 - 7 + 4 - 9 - 2 + 3 - 5 - 557 - 145 + 76 - 221 - 35 + 409 - 444 - 14 1737 - 2 6315 + 7718 - 3 4033 - 231 + 14 6574 - 14 6805 - 7468 5492 - 124 8498 + 374 3070 - 499 1568 - 2 1798 + 1 994 4253 - 1 996 6051", "x2": "mod sub x_0_2 x_0_1 add INT+ 7 add mul mul x_0_7 n n mod n INT- 7", "tree": "((x_0_2 sub x_0_1) mod (7 add (((x_0_7 mul n) mul n) add (n mod -7))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 5 + 0 - 20 + 0 - 120 + 0 - 960 + 0 - 9600 + 0 - 11 5200 + 0 - 161 2800 + 0 - 2580 4800 + 0 - 4 6448 6400 + 0 - 92 8972 8000 + 0 - 2043 7401 6000 + 0 - 4 9049 7638 4000", "x2": "mul x_0_2 relu n", "tree": "(x_0_2 mul relu(n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 4 + 1 + 8 + 11 + 13 + 15 + 17 + 25 + 25 + 25 + 25 + 27 + 37 + 40 + 41 + 43 + 52 + 47 + 49 + 58 + 53 + 55", "x2": "add relu mod mul x_0_3 x_0_3 relu n add n n", "tree": "(relu(((x_0_3 mul x_0_3) mod relu(n))) add (n add n))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 - 9 + 10 + 5 - 2 - 1 + 71 + 40 + 10 + 91 + 50 + 20 + 3585 + 2580 + 570 + 1 3339 + 8846 + 3172 + 69 3739 + 57 5576 + 14 5814 + 450 7559 + 342 2710 + 128 6304 + 2 8200 1569 + 2 5782 5544", "x2": "sub relu add mul n mul add INT- 9 n mod INT- 4 x_0_6 x_0_3 INT- 1 0", "tree": "(relu(((n mul ((-9 add n) mul (-4 mod x_0_6))) add x_0_3)) sub -10)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 1 + 5 + 4 + 5 + 6 + 7 + 8 + 9 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 18 + 19 + 20 + 21", "x2": "add sub sqr relu sqr sub x_0_3 relu x_0_3 idiv n abs INT+ 1 0 n", "tree": "(((relu(((x_0_3 sub relu(x_0_3)))**2))**2 sub (n idiv abs(10))) add n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 8 + 9 - 3 - 3 - 2 - 5 - 6 - 6 - 10 - 7 - 8 - 13 - 11 - 13 - 14 - 13 - 16 - 18 - 18 - 17 - 20 - 21", "x2": "sub mod x_0_3 INT+ 5 n", "tree": "((x_0_3 mod 5) sub n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 3 + 0 - 7 + 2 + 8 + 9 + 7 + 5 + 230 + 77 - 12 + 91 + 210 - 15 + 112 + 391 + 126 + 285 + 140 - 21 + 506 + 345 + 168 - 25 + 598 + 405 + 196 - 29", "x2": "sub abs mul mul n mod x_0_9 mod sqr INT+ 2 n INT- 8 n", "tree": "(abs(((n mul (x_0_9 mod ((2)**2 mod n))) mul -8)) sub n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 4 + 6 + 0 + 0 - 720 + 0 + 0 + 12 9600 + 0 + 0 - 6220 8000 + 0 + 0 + 373 2480 0 + 0 + 0 - 40 3107 8400 0 + 0 + 0 + 5 791 5878 4000 0 + 0 + 0", "x2": "mul mul mul idiv n INT+ 6 mul INT- 1 0 x_0_3 idiv n n add n n", "tree": "((((n idiv 6) mul (-10 mul x_0_3)) mul (n idiv n)) mul (n add n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 + 1 + 5 + 10 + 4 - 9 - 4 + 6 - 2 - 1 - 5 - 10 - 4 + 9 + 4 - 6 + 2 + 1 + 5 + 10 + 4 - 9 - 4 + 6 - 2 - 1 - 5", "x2": "mul x_0_8 INT- 1", "tree": "(x_0_8 mul -1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 4 - 9 + 9 - 10 + 1 + 4 - 4 - 4 - 12 + 4 - 15 - 12 + 1 - 20 - 17 - 12 - 17 - 33 - 25 - 17 - 54 - 43 - 30 - 72 - 77 - 56 - 90", "x2": "sub x_0_7 abs sub sign sqr idiv abs sign relu add n INT- 9 x_0_3 x_0_3", "tree": "(x_0_7 sub abs((sign(((abs(sign(relu((n add -9)))) idiv x_0_3))**2) sub x_0_3)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 9 - 3 + 1 + 1 + 3 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1", "x2": "relu mod relu sqr sub n x_0_3 n", "tree": "relu((relu(((n sub x_0_3))**2) mod n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 - 10 + 1 + 1 + 5 + 6 + 8 + 9 + 11 + 12 + 13 + 15 + 16 + 17 + 19 + 20 + 21 + 23 + 24 + 25 + 27 + 28", "x2": "add sub idiv x_0_2 INT+ 4 abs relu mul INT- 7 abs sqr n n", "tree": "(((x_0_2 idiv 4) sub abs(relu((-7 mul abs((n)**2))))) add n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 4 + 4 + 0 + 8 - 5 - 4 - 14 - 6 - 10 - 2 - 15 - 14 - 24 - 16 - 20 - 12 - 25 - 24 - 34 - 26 - 30 - 22 - 35 - 34 - 44 - 36", "x2": "add INT- 1 0 x_0_6", "tree": "(-10 add x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "mul sub n sub sign INT+ 1 sign n n", "tree": "((n sub (sign(1) sub sign(n))) mul n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 5 + 6", "x2": "add sign add INT+ 9 sqr x_0_1 sub n add n idiv n INT- 5", "tree": "(sign((9 add (x_0_1)**2)) add (n sub (n add (n idiv -5))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 10 - 9 - 10 + 0 - 2 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 2 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1", "x2": "mod abs mod x_0_4 abs idiv n INT+ 2 INT- 3", "tree": "(abs((x_0_4 mod abs((n idiv 2)))) mod -3)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 - 5 + 0 - 8 - 6 + 3 + 3 + 8 + 0 + 2 + 11 + 11 + 16 + 8 + 10 + 19 + 19 + 24 + 16 + 18 + 27 + 27 + 32 + 24 + 26", "x2": "add add mod INT+ 6 INT- 1 x_0_5 abs INT- 8", "tree": "(((6 mod -1) add x_0_5) add abs(-8))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 + 0 - 7 + 2 + 4 + 7 + 9 + 7 + 5 + 0 + 7 + 5 + 4 + 7 + 10 + 0 + 10 + 13 + 15 + 13 + 11 + 0 + 13 + 11 + 10 + 13 + 16 + 0 + 16 + 19", "x2": "mod relu sub mul sub n mul x_0_10 INT- 1 n x_0_6 n", "tree": "(relu((((n sub (x_0_10 mul -1)) mul n) sub x_0_6)) mod n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 8 + 4 + 10 + 8 + 7 + 3 - 7 + 8 + 5184 + 1600 + 1 2100 + 9216 + 8281 + 1764 + 1 1025 + 1 6384 + 77 6654 4384 + 8 2944 0 + 528 5401 0 + 339 7386 2400 + 302 4155 7801 + 15 606 864 + 643 28 625 + 1546 1882 2656 + 376 9950 7292 9012 1216 0 + 4 6506 8202 3936 0 0 + 2 364 9530 5975 3929 0 0 + 9049 1108 7877 3208 6784 0", "x2": "sqr mul n add x_0_8 relu sub idiv add INT+ 5 INT+ 6 n INT+ 6", "tree": "((n mul (x_0_8 add relu((((5 add 6) idiv n) sub 6)))))**2", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 1 - 7 - 5 + 4 + 1 + 49 + 121 + 16 + 1 + 25 + 1 + 256 + 1 + 625 + 1 + 324 + 1 + 289 + 1 + 900 + 1 + 169 + 1", "x2": "sqr mod x_0_4 add n n", "tree": "((x_0_4 mod (n add n)))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 0 - 1 + 3 + 0 + 1 + 3 + 0 + 1 + 3 + 0 + 1 + 3 + 0 + 1 + 3 + 0 + 1 + 3 + 0 + 1 + 3 + 0", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 3 + 3 + 9 + 0 + 2 - 8 - 3 - 1 - 99 - 138 - 144 - 169 - 208 - 138 - 143 - 166 - 175 - 272 - 421 - 464 - 510 - 586 - 467 - 373 - 405 - 422 - 499 - 825", "x2": "add sub sign x_0_9 add add sqr n n add mod INT- 3 sign sub n x_0_6 x_0_5 x_0_9", "tree": "((sign(x_0_9) sub (((n)**2 add n) add ((-3 mod sign((n sub x_0_6))) add x_0_5))) add x_0_9)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 10 - 1 - 41 - 6 - 247 - 43 - 1977 - 388 - 1 9771 - 4269 - 23 7253 - 5 5498 - 332 1543 - 83 2471 - 5314 4689 - 1415 2008 - 9 5660 4403 - 2 6888 8153 - 191 3208 8061 - 56 4665 1214 - 4209 593 7343", "x2": "sub mul x_0_2 n sign n", "tree": "((x_0_2 mul n) sub sign(n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 3 + 2 + 3 + 1 + 1 + 0 + 1 + 2 + 3 + 4 + 5 - 6 - 13 + 0 - 13 + 3 - 13 + 5 - 13 + 0 - 20", "x2": "sub mod n INT+ 7 mod sub abs n idiv mul x_0_2 add INT+ 7 x_0_2 abs mul n INT- 3 n", "tree": "((n mod 7) sub ((abs(n) sub ((x_0_2 mul (7 add x_0_2)) idiv abs((n mul -3)))) mod n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 10 + 5 + 6 + 8 + 8 + 9 + 8 + 8 + 14 + 13 + 10 + 8 + 14 + 9 + 20 + 9 + 10 + 16 + 8 + 19 + 10 + 23", "x2": "add INT+ 6 relu sub add add abs mod n n INT+ 1 x_0_2 mod n x_0_2", "tree": "(6 add relu((((abs((n mod n)) add 1) add x_0_2) sub (n mod x_0_2))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 + 1 + 10 + 26 + 51 + 87 + 136 + 200 + 281 + 381 + 502 + 646 + 815 + 1011 + 1236 + 1492 + 1781 + 2105 + 2466 + 2866 + 3307", "x2": "abs add x_0_1 sqr n", "tree": "abs((x_0_1 add (n)**2))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 + 10 + 6 - 10 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "idiv idiv x_0_4 INT+ 9 sqr abs INT+ 2", "tree": "((x_0_4 idiv 9) idiv (abs(2))**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 + 3 + 28 - 12 - 112 + 48 + 448 - 192 - 1792 + 768 + 7168 - 3072 - 2 8672 + 1 2288 + 11 4688 - 4 9152 - 45 8752 + 19 6608 + 183 5008 - 78 6432 - 734 32 + 314 5728", "x2": "mul x_0_2 INT- 4", "tree": "(x_0_2 mul -4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 2 - 1 + 5 + 10 - 8 + 3 - 1 - 7 - 16 - 19 - 17 - 33 - 38 - 47 - 62 - 86 - 113 - 138 - 179 - 225 - 280 - 350 - 444 - 565 - 711 - 898", "x2": "add x_0_1 sub x_0_7 INT+ 8", "tree": "(x_0_1 add (x_0_7 sub 8))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 18 + 38 + 78 + 158 + 318 + 638 + 1278 + 2558 + 5118 + 1 238 + 2 478 + 4 958 + 8 1918 + 16 3838 + 32 7678 + 65 5358 + 131 718 + 262 1438 + 524 2878 + 1048 5758", "x2": "add sub abs x_0_1 mod x_0_1 mod abs INT+ 3 INT- 8 x_0_1", "tree": "((abs(x_0_1) sub (x_0_1 mod (abs(3) mod -8))) add x_0_1)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 - 1 + 3 + 8 + 9 + 6 - 4 - 6 + 0 - 37 - 54 - 78 - 139 - 153 - 390 - 190 + 261 + 243 + 5885 + 2 6925 + 4 1724 + 5423 - 3 1779 - 232 6953 - 744 2728 + 344 7210 + 476 4972 - 1 8225 4471 - 628 3546 4025", "x2": "add sub mul x_0_9 x_0_5 n x_0_1", "tree": "(((x_0_9 mul x_0_5) sub n) add x_0_1)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 40 + 228 + 916 + 4625 + 2 7900 + 19 5300 + 156 2432 + 1406 2032 + 1 4062 680 + 15 4682 7491 + 185 6193 0 + 2413 509 325 + 3 3782 7126 4550 + 50 6740 6896 8310 + 810 7851 349 3216 + 1 3783 3467 5938 5284 + 24 8100 2416 6893 5130 + 471 3904 5917 976 7641 + 9427 8091 8341 9535 3320 + 19 7983 9928 5181 241 9720", "x2": "mul add sqr mod mul INT- 2 n INT- 7 x_0_1 n", "tree": "(((((-2 mul n) mod -7))**2 add x_0_1) mul n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 8 - 6 - 9 - 16 - 12 - 18 - 32 - 24 - 36 - 64 - 48 - 72 - 128 - 96 - 144 - 256 - 192 - 288 - 512 - 384 - 576 - 1024 - 768", "x2": "add x_0_3 idiv x_0_3 relu idiv n n", "tree": "(x_0_3 add (x_0_3 idiv relu((n idiv n))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 8 - 2 + 3 + 2 + 6 + 4 + 6 + 3 + 6 + 5 + 9 + 7 + 9 + 6 + 9 + 8 + 12 + 10 + 12 + 9 + 12 + 11", "x2": "sub n mod relu x_0_3 mul n mod sign n n", "tree": "(n sub (relu(x_0_3) mod (n mul (sign(n) mod n))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 - 6 - 8 + 0 + 1 - 4 - 2 - 48 - 54 - 80 + 0 + 12 - 52 - 28 - 720 - 864 - 1360 + 0 + 228 - 1040 - 588 - 1 5840 - 1 9872 - 3 2640 + 0 + 5928 - 2 8080", "x2": "mul abs relu n x_0_7", "tree": "(abs(relu(n)) mul x_0_7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 8 - 10 + 6 - 7 - 6 + 2 + 9 - 4 + 87 + 103 - 61 + 98 + 100 - 18 - 33 + 183 - 1523 - 1738 + 1278 - 1958 - 2112 + 601 - 741 - 6106 + 3 9378 + 4 3256 - 3 6591 + 5 5453", "x2": "sub x_0_6 sub mul x_0_8 n n", "tree": "(x_0_6 sub ((x_0_8 mul n) sub n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 6 + 7 - 8 + 4 + 4 - 2 - 67 + 3732 + 3 3611 + 33 6099 + 369 7078 + 4436 4941 + 5 7674 4433 + 80 7441 867 + 1211 1606 2173 + 1 9378 5598 6472 + 32 9435 4067 8791 + 592 9835 9912 3416 + 1 1266 6866 5311 1606 + 22 5333 7088 3899 9520 + 473 2007 5222 7080 3402 + 1 410 4159 6763 8971 5429 + 23 9439 5573 7263 4141 8495 + 574 6549 1990 4813 9667 3633 + 1 4366 3726 5961 9749 5750 6008 + 37 3525 6823 9010 2223 7815 7649", "x2": "add relu mul x_0_1 n sub sign mod INT- 7 x_0_6 mul mod INT+ 3 mul n x_0_1 x_0_6", "tree": "(relu((x_0_1 mul n)) add (sign((-7 mod x_0_6)) sub ((3 mod (n mul x_0_1)) mul x_0_6)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 - 4 - 1 - 4 + 0 - 4 - 5 - 4 - 4 - 4 - 3 - 4 - 2 - 4 - 1 - 4 + 0 - 4 - 5 - 4 - 4 - 4", "x2": "mod sub x_0_2 mod sub sub INT+ 9 INT+ 7 n INT- 2 INT- 6", "tree": "((x_0_2 sub (((9 sub 7) sub n) mod -2)) mod -6)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 3 + 10 - 4 + 8 + 7 - 9 + 3 + 3 + 2 + 4 + 0 + 7 + 7 + 3 + 3 + 2 + 4 + 0 + 7 + 7 + 3 + 3 + 2 + 4 + 0 + 7", "x2": "mod x_0_7 INT+ 8", "tree": "(x_0_7 mod 8)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 10 - 2 - 9 - 1 - 8 + 0 - 7 - 1 - 6 + 0 - 5 - 1 - 4 + 0 - 3 - 1 - 2 + 0 - 1 - 1 + 0 + 0", "x2": "add sign add abs x_0_2 idiv idiv sqr sign sign INT+ 5 abs INT- 7 x_0_2 x_0_2", "tree": "(sign((abs(x_0_2) add (((sign(sign(5)))**2 idiv abs(-7)) idiv x_0_2))) add x_0_2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 2401 + 2401 + 625 + 1 + 1 + 1 + 1 + 1 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr sqr add add INT- 1 0 mod sqr add INT+ 2 sign sqr mod INT+ 3 x_0_1 n n", "tree": "((((-10 add (((2 add sign(((3 mod x_0_1))**2)))**2 mod n)) add n))**2)**2", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 8 - 2 + 3 - 7 - 1 - 1 - 2 - 1 - 10 - 6 - 12 - 2 - 3 - 2 - 8 - 6 - 9 - 3 - 4 - 3 - 8 - 6 - 8 - 4", "x2": "idiv n sub x_0_3 relu mul n x_0_5", "tree": "(n idiv (x_0_3 sub relu((n mul x_0_5))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 5 - 6 + 5 - 1 + 7 + 7 + 6 - 2 + 6 + 11 + 4 + 39 + 51 + 50 + 5 + 5 + 0 + 38 + 0 + 7 + 117 + 99 + 72 + 0 + 8 + 144 + 0 + 241 + 0", "x2": "idiv relu relu mul mod sqr sqr mul x_0_10 abs INT- 5 n n INT+ 3", "tree": "(relu(relu((((((x_0_10 mul abs(-5)))**2)**2 mod n) mul n))) idiv 3)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 6 + 2 - 8 + 5 - 3 + 9 + 6 + 20 + 16 + 35 + 33 + 51 + 54 + 74 + 76 + 101 + 105 + 129 + 138 + 164 + 172", "x2": "sub sub mod n INT+ 3 mul INT+ 5 n sub x_0_1 sqr n", "tree": "(((n mod 3) sub (5 mul n)) sub (x_0_1 sub (n)**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 20 + 45 + 88 + 155 + 252 + 385 + 560 + 783 + 1060 + 1397 + 1800 + 2275 + 2828 + 3465 + 4192 + 5015 + 5940 + 6973 + 8120", "x2": "mul n add INT+ 6 mul n n", "tree": "(n mul (6 add (n mul n)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 10 - 5 + 3 - 4 + 3 + 8 + 4 - 9 + 7 + 6 - 72 - 40 + 8 - 32 + 8 + 40 + 8 - 72 + 24 + 16 - 656 - 344 + 24 - 264 + 24 + 224 + 24 - 640 + 120 + 64", "x2": "mul INT- 8 add INT- 1 sub abs idiv sub sub INT+ 1 x_0_10 n INT- 5 x_0_10", "tree": "(-8 mul (-1 add (abs((((1 sub x_0_10) sub n) idiv -5)) sub x_0_10)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "add sqr n sub n relu n", "tree": "((n)**2 add (n sub relu(n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 - 4 - 4 + 4 + 1 + 9 + 4 - 4 + 9 + 1 - 10 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "sub sqr n mul relu x_0_5 relu idiv sub sqr INT- 6 relu INT+ 5 mod x_0_11 x_0_11", "tree": "((n)**2 sub (relu(x_0_5) mul relu((((-6)**2 sub relu(5)) idiv (x_0_11 mod x_0_11)))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 9 - 7 - 7 - 7 - 8 + 3 - 6 - 7 + 4 - 5 - 6 + 5 - 4 - 5 + 6 - 3 - 4 + 7 - 2 - 3 + 8 - 1 - 2 + 9 + 0 - 1", "x2": "add x_0_3 sign mod n mod sign mul x_0_4 x_0_6 mul INT+ 5 n", "tree": "(x_0_3 add sign((n mod (sign((x_0_4 mul x_0_6)) mod (5 mul n)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 9 - 7 - 10 - 7 - 6 + 14 + 20 + 16 + 15 + 20 + 23 + 19 + 25 + 21 + 36 + 25 + 28 + 24 + 30 + 26 + 41 + 30 + 33 + 54 + 35", "x2": "sub add mod x_0_6 n n INT- 5", "tree": "(((x_0_6 mod n) add n) sub -5)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 6 - 2 + 0 + 9 - 6 + 9 + 64 + 121 + 441 + 49 + 529 + 6241 + 1 8769 + 20 9764 + 4489 + 30 304 + 3920 121 + 3 5306 4100 + 440 1016 5796 + 2035 8144 + 901 9690 7584 + 1536 6514 4642 1316 + 12 4654 2770 6814 3876 + 19 3689 4695 7679 5726 7329 + 414 4551 6718 1584", "x2": "sqr idiv add sub n idiv INT- 3 mod INT+ 1 n x_0_5 sign sqr n", "tree": "((((n sub (-3 idiv (1 mod n))) add x_0_5) idiv sign((n)**2)))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 10 - 10 + 0 - 9 + 3 - 1 + 2 + 6 + 9 + 9 + 1 + 8 + 4 + 0 + 3 + 7 + 10 + 10 + 2 + 9 + 5 + 1 + 4 + 8 + 11 + 11 + 3", "x2": "abs add x_0_8 sign mul add INT+ 2 x_0_5 sub relu x_0_2 idiv n INT- 3", "tree": "abs((x_0_8 add sign(((2 add x_0_5) mul (relu(x_0_2) sub (n idiv -3))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 1 + 8 - 35 - 6 - 47 - 246 - 49 - 424 - 2461 - 540 - 5089 - 3 1994 - 7561 - 7 6336 - 51 1905 - 12 8538 - 137 4049 - 972 6196 - 257 761 - 2885 5030 - 2 1397 6313 - 5912 7504", "x2": "sub sign sign mul mul INT+ 3 n add x_0_3 x_0_1 abs mul abs n x_0_3", "tree": "(sign(sign(((3 mul n) mul (x_0_3 add x_0_1)))) sub abs((abs(n) mul x_0_3)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 10 - 7 + 3 - 4 + 0 - 5 + 3 + 3 + 5 - 10 - 7 + 3 - 4 + 0 - 5 + 3 + 3 + 5 - 10 - 7 + 3 - 4 + 0 - 5 + 3 + 3 + 5 - 10", "x2": "sub x_0_9 mul relu x_0_6 sub n n", "tree": "(x_0_9 sub (relu(x_0_6) mul (n sub n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 1 - 4 - 7 + 4 - 6 + 0 + 81 + 1 + 16 + 49 + 16 + 36 + 0 + 6561 + 1 + 256 + 2401 + 256 + 1296 + 196 + 4304 6721 + 1 + 6 3504 + 576 4801 + 6 5025 + 167 9616", "x2": "sqr sub idiv abs x_0_6 sub abs sqr relu n INT- 6 x_0_7", "tree": "(((abs(x_0_6) idiv (abs((relu(n))**2) sub -6)) sub x_0_7))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 7 + 2 + 9 + 4 + 10 + 8 + 571 2100 + 4 + 81 + 16 + 100 + 64 + 361 0 + 16 + 6561 + 256 + 1 0 + 4096 + 84 3072 8761 + 256 + 4304 6721 + 6 5536 + 1 0 0 + 1677 7216 + 3 3712 6321 + 6 5536", "x2": "sqr mod x_0_6 add sqr sqr n sub idiv n x_0_5 n", "tree": "((x_0_6 mod (((n)**2)**2 add ((n idiv x_0_5) sub n))))**2", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 - 1 - 5 - 2 - 28 - 14 - 35 - 21 - 152 - 83 - 189 - 120 - 776 - 432 - 963 - 619 - 3900 - 2181 - 4837 - 3118 - 1 9524 - 1 930 - 2 4211 - 1 5617", "x2": "sub INT- 3 abs sub n mul INT+ 5 x_0_4", "tree": "(-3 sub abs((n sub (5 mul x_0_4))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 - 3 + 4 + 4 + 5 + 15 + 7 + 44 + 45 + 19 + 155 + 93 + 1 5389 + 1535 + 2120 6040 + 2041 + 3749 1146 + 2619 + 6173 2468 + 3269 + 9617 7270 + 3991", "x2": "add n sqr mod mul x_0_1 INT- 3 mul x_0_2 INT- 1", "tree": "(n add (((x_0_1 mul -3) mod (x_0_2 mul -1)))**2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 + 10 + 7 + 1 + 7 + 14 - 2 + 2 + 9 + 4 - 2 + 15 + 12 + 6 + 12 + 19 + 3 + 7 + 14 + 9 + 3 + 20 + 17 + 11 + 17", "x2": "sub abs sub INT- 1 n x_0_5", "tree": "(abs((-1 sub n)) sub x_0_5)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 1 - 8 - 36 - 15 + 144 + 756 + 360 - 3888 - 2 2680 - 1 1880 + 13 9968 + 88 4520 + 49 8960 - 629 8560 - 4245 6960 - 2544 6960 + 3 4012 2240 + 24 2004 6720 + 15 2681 7600 - 214 2770 1120 - 1597 2308 3520 - 1053 5041 4400", "x2": "mul mul INT- 3 n x_0_3", "tree": "((-3 mul n) mul x_0_3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 1 + 0 + 10 + 7 + 7 - 2 - 10 + 9 + 180 + 2079 + 2 5056 + 32 5845 + 456 1956 + 6842 9460 + 10 9487 1488 + 186 1281 5449 + 3350 3067 8244 + 6 3655 8288 6807 + 127 3116 5773 6320 + 2673 5448 1246 2909 + 5 8817 9858 7418 4196 + 135 2813 6751 623 6715 + 3246 7528 2025 4968 1376 + 8 1168 8205 637 4203 4625 + 211 389 3331 6572 9290 484 + 5698 511 9954 7469 831 3311 + 15 9545 4335 8732 9134 3277 2960", "x2": "mul n abs add add x_0_1 idiv sign x_0_8 n sub n add n INT- 9", "tree": "(n mul abs(((x_0_1 add (sign(x_0_8) idiv n)) add (n sub (n add -9)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 4 - 2 + 9 + 2 - 5 - 5 + 576 + 1296 + 6400 + 9801 + 576 + 1 816 + 1 5876 + 8100 + 0 + 1 8496 + 2 6244 + 1 2996 + 10 2400 + 0 + 7744 + 0 + 14 7456 + 22 5625 + 32 7184 + 18 6624", "x2": "sqr abs abs mul n mod x_0_7 abs n", "tree": "(abs(abs((n mul (x_0_7 mod abs(n))))))**2", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 256 + 576 + 1024 + 1600 + 2304 + 3136 + 4096 + 5184 + 6400 + 7744 + 9216 + 1 816 + 1 2544 + 1 4400 + 1 6384 + 1 8496 + 2 736 + 2 3104 + 2 5600 + 2 8224", "x2": "mul relu mul n sqr idiv INT+ 8 sign mul sub sqr n add x_0_1 x_0_1 n n", "tree": "(relu((n mul ((8 idiv sign((((n)**2 sub (x_0_1 add x_0_1)) mul n))))**2)) mul n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 4 - 8 - 6 + 8 + 49 + 16 + 64 + 36 + 64 + 2401 + 256 + 4096 + 1296 + 4096 + 576 4801 + 6 5536 + 1677 7216 + 167 9616 + 1677 7216 + 33 2329 3056 9601 + 42 9496 7296 + 281 4749 7671 656 + 2 8211 990 7456 + 281 4749 7671 656", "x2": "relu sqr x_0_5", "tree": "relu((x_0_5)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 1 + 8 + 8 + 9 + 72 + 36 + 288 + 144 + 1152 + 576 + 4608 + 2304 + 1 8432 + 9216 + 7 3728 + 3 6864 + 29 4912 + 14 7456 + 117 9648 + 58 9824 + 471 8592 + 235 9296 + 1887 4368 + 943 7184", "x2": "mul sqr idiv x_0_2 sub add x_0_5 n add n x_0_2 x_0_2", "tree": "(((x_0_2 idiv ((x_0_5 add n) sub (n add x_0_2))))**2 mul x_0_2)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 1 + 18 + 2 + 38 + 3 + 66 + 4 + 102 + 5 + 146 + 6 + 198 + 7 + 258 + 8 + 326 + 9 + 402 + 10 + 486", "x2": "abs abs idiv mul sqr n idiv n INT- 2 x_0_1", "tree": "abs(abs((((n)**2 mul (n idiv -2)) idiv x_0_1)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121", "x2": "sqr sub n sub sign INT+ 3 INT- 8", "tree": "((n sub (sign(3) sub -8)))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 + 4 - 7 + 8 + 0 + 16 + 0 + 32 + 0 + 64 + 0 + 128 + 0 + 256 + 0 + 512 + 0 + 1024 + 0 + 2048 + 0 + 4096 + 0 + 8192", "x2": "relu mul INT+ 4 x_0_4", "tree": "relu((4 mul x_0_4))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 1 - 7 + 3 + 3 + 212 + 343 + 512 + 726 + 997 + 1119 + 1385 + 1685 + 2018 + 2378 + 2977 + 3528 + 4147 + 4841 + 5622 + 6284 + 7120 + 8020 + 8983 + 1 3", "x2": "sub abs mul sqr relu n n relu x_0_5", "tree": "(abs(((relu(n))**2 mul n)) sub relu(x_0_5))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 9 - 2 - 2 - 8 + 7 - 5 - 6 + 2 - 43 - 91 + 9 + 10 + 11 - 93 + 13 + 14 - 21 + 16 + 17 + 18 - 201 + 20 + 21 - 303 + 23 + 24 + 25 - 467", "x2": "add sub sub n relu relu INT+ 2 mul n relu sub x_0_9 relu x_0_7 INT- 1", "tree": "(((n sub relu(relu(2))) sub (n mul relu((x_0_9 sub relu(x_0_7))))) add -1)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 8 + 9 + 3 - 9 + 4 + 7 + 8 + 2 + 10 + 3 + 6 + 7 + 1 + 9 + 2 + 5 + 6 + 0 + 8 + 1 + 4 + 5 + 1 + 7", "x2": "abs sub sign INT+ 5 x_0_5", "tree": "abs((sign(5) sub x_0_5))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 8 - 4 - 7 + 9 - 3 + 13 + 0 + 14 + 3 + 19 + 3 + 23 + 16 + 30 + 18 + 35 + 18 + 47 + 37 + 49 + 37 + 55 + 57 + 67", "x2": "add abs mod sqr abs sub sub x_0_5 n sign INT+ 4 sub x_0_2 add x_0_4 n x_0_2", "tree": "(abs(((abs(((x_0_5 sub n) sub sign(4))))**2 mod (x_0_2 sub (x_0_4 add n)))) add x_0_2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 8 + 3 - 6 - 9 + 9 + 2 - 10 + 4 + 8 + 3 - 6 - 9 + 9 + 2 - 10 + 4 + 8 + 3 - 6 - 9 + 9 + 2 - 10 + 4 + 8 + 3 - 6", "x2": "add idiv sub n n INT+ 8 x_0_8", "tree": "(((n sub n) idiv 8) add x_0_8)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 79 - 172 - 274 - 385 - 505 - 634 - 772 - 919 - 1075 - 1240 - 1414 - 1597 - 1789 - 1990 - 2200 - 2419 - 2647 - 2884 - 3130 - 3385", "x2": "sub sub x_0_1 INT- 6 abs mul INT- 9 add n INT+ 8", "tree": "((x_0_1 sub -6) sub abs((-9 mul (n add 8))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 + 9 + 10 + 6 - 1 - 1 - 1 - 1 - 6 - 6 - 6 - 6 - 1 - 1 - 1 - 1 - 6 - 6 - 6 - 6 - 1 - 1 - 1 - 1", "x2": "idiv INT- 6 abs x_0_4", "tree": "(-6 idiv abs(x_0_4))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 5 - 5 + 1 - 9 + 5 + 6 + 0 + 4 + 10 - 9 + 6 + 673 + 4898 - 6758 + 1788 - 2 806 + 1 4563 + 2 1658 + 665 + 2 6058 + 5 6154 - 6 4874 + 3 1026 + 674 4555 + 5630 9466 - 8867 7819 + 2666 98 - 3 4990 774 + 2 7517 5818 + 4 5792 4454 + 2240 6627", "x2": "sub add mul mul n mod INT- 9 n mul n x_0_12 x_0_7 INT+ 8", "tree": "((((n mul (-9 mod n)) mul (n mul x_0_12)) add x_0_7) sub 8)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 6 + 2 + 7 + 20 + 10 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552", "x2": "add n mul mod n x_0_3 relu n", "tree": "(n add ((n mod x_0_3) mul relu(n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 - 10 + 6 + 56 + 75 + 0 - 343 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529", "x2": "mul add mul sign x_0_1 n mul x_0_3 idiv INT- 5 add n mul x_0_1 INT+ 4 n", "tree": "(((sign(x_0_1) mul n) add (x_0_3 mul (-5 idiv (n add (x_0_1 mul 4))))) mul n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 8 - 1 - 4 + 8 + 1 + 4 + 8 + 1 + 4 + 8 + 1 + 4 + 8 + 1 + 4 + 8 + 1 + 4 + 8 + 1 + 4 + 8 + 1", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 2 - 7 + 2 - 3 + 0 + 28 + 24 - 54 + 30 - 22 + 12 + 377 + 350 - 795 + 496 - 357 + 234 + 7182 + 7020 - 1 6674 + 1 934 - 8188 + 5640 + 17 9575 + 18 2546", "x2": "add mul x_0_6 n n", "tree": "((x_0_6 mul n) add n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 6 - 2 - 4 - 2 - 6 - 2 + 4 + 12 + 8 + 16 + 20 + 34 + 38 + 56 + 58 + 82 + 92 + 126 + 134 + 178 + 192 + 252 + 272 + 352 + 376 + 482", "x2": "abs add x_0_4 add add n x_0_6 n", "tree": "abs((x_0_4 add ((n add x_0_6) add n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 7 + 5 + 41 + 121 + 271 + 523 + 915 + 1491 + 2301 + 3401 + 4853 + 6725 + 9091 + 1 2031 + 1 5631 + 1 9983 + 2 5185 + 3 1341 + 3 8561 + 4 6961 + 5 6663", "x2": "add mul n add sqr n n x_0_1", "tree": "((n mul ((n)**2 add n)) add x_0_1)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 8 - 1 - 8 + 9 - 6 - 10 + 9 + 6 - 6 + 784 - 769 - 112 - 887 + 1074 - 778 - 1351 + 1302 + 906 - 176 + 13 943 - 13 5456 - 2 1495 - 16 9230 + 21 4022 - 16 3175 - 29 514 + 29 2554 + 21 16 + 8 8703", "x2": "add mul x_0_10 mul INT+ 8 n x_0_9", "tree": "((x_0_10 mul (8 mul n)) add x_0_9)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 7 - 7 - 9 - 9 + 5 + 1 + 8 + 9 + 6 + 7 + 11 + 11 + 7 + 8 + 13 + 13 + 9 + 10 + 15 + 15 + 11 + 12 + 17 + 17 + 13 + 14 + 19", "x2": "sub n add idiv mod n x_0_8 n mod mod sqr INT+ 4 INT- 1 0 mod x_0_2 sqr n", "tree": "(n sub (((n mod x_0_8) idiv n) add (((4)**2 mod -10) mod (x_0_2 mod (n)**2))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 9 + 6 + 6 + 10 - 2 - 9 + 6 + 6 + 10 - 2 - 9 + 6 + 6 + 10 - 2 - 9 + 6 + 6 + 10 - 2 - 9 + 6 + 6 + 10 - 2", "x2": "add x_0_5 sub n n", "tree": "(x_0_5 add (n sub n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 5 + 3 - 9 + 2 + 2 - 4 + 6 + 10 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 10 + 10 - 7 + 8 + 6 - 3 + 1 + 10 + 4 + 5 + 1 + 8 + 11 + 11 + 11 + 14 + 15 + 16 + 16 + 18 + 19 + 22 + 28 + 35 + 42 + 50 + 60 + 73", "x2": "add mod sub add x_0_6 x_0_7 n x_0_8 x_0_1", "tree": "((((x_0_6 add x_0_7) sub n) mod x_0_8) add x_0_1)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 24 + 144 + 864 + 5184 + 3 1104 + 18 6624 + 111 9744 + 671 8464 + 4031 784 + 2 4186 4704 + 14 5118 8224 + 87 712 9344 + 522 4277 6064 + 3134 5665 6384 + 1 8807 3993 8304 + 11 2844 3962 9824 + 67 7066 3777 8944 + 406 2398 2667 3664 + 2437 4389 6004 1984 + 1 4624 6337 6025 1904", "x2": "mul INT+ 6 x_0_1", "tree": "(6 mul x_0_1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420", "x2": "add n idiv abs sqr n sign INT+ 6", "tree": "(n add (abs((n)**2) idiv sign(6)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 9 + 7 + 6 + 2 + 6 - 5 - 1 - 10 + 6 + 5 + 1 + 5 - 6 - 2 - 11 + 5 + 4 + 0 + 4 - 7 - 3 - 12 + 4 + 3 - 1 + 3 - 8", "x2": "sub x_0_7 sign add abs add n sign x_0_8 mod x_0_7 idiv relu n n", "tree": "(x_0_7 sub sign((abs((n add sign(x_0_8))) add (x_0_7 mod (relu(n) idiv n)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 4 - 1 + 5 + 11 + 20 + 29 + 41 + 53 + 68 + 83 + 101 + 119 + 140 + 161 + 185 + 209 + 236 + 263 + 293 + 323 + 356 + 389", "x2": "abs sub add relu relu mul INT+ 3 n n sub n x_0_2", "tree": "abs(((relu(relu((3 mul n))) add n) sub (n sub x_0_2)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 8 + 3 - 5 + 6 + 8 + 3 + 5 + 6 + 8 + 3 + 5 + 6 + 8 + 3 + 5 + 6 + 8 + 3 + 5 + 6 + 8 + 3 + 5", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 0 - 5 - 16 - 71 - 406 - 2767 - 2 1726 - 19 2763 - 190 5900 - 2077 2133 - 2 4735 9692 - 31 9490 3859 - 444 8129 4330 - 6640 2451 1087 - 10 5799 1088 3058 - 179 1944 6050 895 - 3214 9203 7813 3048 - 6 904 2927 2402 7013 - 121 4870 9341 240 7208 - 2545 1385 3234 2652 4351 - 5 5871 5606 1812 8112 8510", "x2": "add INT+ 4 sub mul n x_0_1 x_0_2", "tree": "(4 add ((n mul x_0_1) sub x_0_2))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 5 - 7 - 10 + 1 - 9 - 10 + 64 + 45 - 70 - 110 + 12 - 117 - 140 + 960 + 720 - 1190 - 1980 + 228 - 2340 - 2940 + 2 1120 + 1 6560 - 2 8560 - 4 9500 + 5928 - 6 3180", "x2": "mul n x_0_7", "tree": "(n mul x_0_7)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 8 + 7 - 7 - 10 + 3 - 63 + 50 - 72 - 108 + 22 - 768 + 639 - 1022 - 1633 + 336 - 1 3073 + 1 1486 - 1 9437 - 3 2678 + 7035 - 28 7628 + 26 4157 - 46 6512 - 81 6973 + 18 2884", "x2": "add add mul x_0_5 n sub x_0_5 n sign x_0_2", "tree": "(((x_0_5 mul n) add (x_0_5 sub n)) add sign(x_0_2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 1 + 9 + 2 + 5 - 4 + 4 + 2 + 12 + 5 + 8 - 1 + 7 + 5 + 15 + 8 + 11 + 2 + 10 + 8 + 18 + 11 + 14 + 5", "x2": "sub n x_0_3", "tree": "(n sub x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 8 + 9 - 7 - 5 - 1 - 6 + 6 - 1 - 3 + 8 + 35 - 1 + 6 + 8 - 3 + 5 + 7 - 7 - 3 + 20 - 15 - 9 + 26 + 14 - 35 + 50 + 32 - 73 - 23", "x2": "sub INT+ 5 mul idiv add idiv mul sub x_0_9 INT- 9 x_0_10 mod INT- 3 relu add n INT- 5 n INT+ 9 x_0_5", "tree": "(5 sub ((((((x_0_9 sub -9) mul x_0_10) idiv (-3 mod relu((n add -5)))) add n) idiv 9) mul x_0_5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 17 + 1 - 5 - 6 - 10 - 12 - 14 - 16 - 18 - 21 - 24 - 27 - 31 - 35 - 39 - 43 - 48 - 53 - 58 - 64", "x2": "sub sub sqr idiv INT- 5 n INT+ 8 idiv sqr add mul relu INT- 3 n n INT+ 7", "tree": "((((-5 idiv n))**2 sub 8) sub ((((relu(-3) mul n) add n))**2 idiv 7))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 8 + 1 - 3 - 2 - 2 - 1 - 1 + 0 + 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7", "x2": "add idiv n INT+ 2 mod sign mod sub sign INT+ 1 sub x_0_2 relu x_0_2 INT+ 5 INT- 5", "tree": "((n idiv 2) add (sign(((sign(1) sub (x_0_2 sub relu(x_0_2))) mod 5)) mod -5))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 8 + 0 + 0 + 5 - 5 + 3 + 5 + 1 + 12 - 3 + 17 + 11 + 3 + 23 + 4 + 29 + 22 + 7 + 35 + 18 + 32 + 32 + 16 + 43 + 36 + 42 + 47 + 35 + 49 + 55 + 66 + 81 + 83 + 98", "x2": "add x_0_5 abs sub abs sub n x_0_1 idiv mod INT- 1 0 n x_0_2", "tree": "(x_0_5 add abs((abs((n sub x_0_1)) sub ((-10 mod n) idiv x_0_2))))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250 + 1352 + 1458 + 1568 + 1682", "x2": "mul INT+ 2 mul n n", "tree": "(2 mul (n mul n))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 + 3 - 10 - 4 - 4 - 7 - 4 - 5 - 7 - 4 - 7 - 4 - 8 - 5 - 4 - 9 - 5 - 4 - 8 - 4 - 6 - 5 - 8 - 7 - 5 - 10 - 4 - 12 - 7 - 4 - 5 - 11", "x2": "add INT- 4 mod sub x_0_1 sub x_0_3 INT- 9 idiv add INT+ 1 add n sub mod INT- 9 INT+ 1 0 x_0_3 x_0_1", "tree": "(-4 add ((x_0_1 sub (x_0_3 sub -9)) mod ((1 add (n add ((-9 mod 10) sub x_0_3))) idiv x_0_1)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 3 + 6 - 8 + 6 + 1 + 247 + 278 + 609 + 890 + 731 + 142 + 3 4593 + 4 1714 + 9 7455 + 15 1316 + 13 1597 + 2 6998 + 691 8619 + 875 9960 + 2144 121 + 3480 2702 + 3158 3303 + 674 9524 + 17 9884 965 + 23 6518 9226 + 60 323 3907 + 100 9278 3608 + 94 7499 929 + 20 9235 2470 + 5756 2910 8831 + 7805 1244 4612 + 2 410 9952 8413 + 3 5324 7426 2834 + 3 4109 9673 4475", "x2": "add abs mul relu add n INT+ 1 mul x_0_6 INT+ 1 0 n", "tree": "(abs((relu((n add 1)) mul (x_0_6 mul 10))) add n)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 7 - 1 - 7 + 6 - 2 + 4 - 2 + 11 + 3 + 9 + 3 + 16 + 8 + 14 + 8 + 21 + 13 + 19 + 13 + 26 + 18 + 24 + 18 + 31 + 23 + 29 + 23 + 36 + 28 + 34 + 28 + 41", "x2": "add x_0_4 mul INT+ 5 sign abs sign INT- 2", "tree": "(x_0_4 add (5 mul sign(abs(sign(-2)))))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 9 + 2 - 8 - 6 + 0 + 42 + 72 + 18 - 80 - 66 + 0 + 546 + 1008 + 270 - 1280 - 1122 + 0 + 1 374 + 2 160 + 5670 - 2 8160 - 2 5806 + 0 + 25 9350 + 52 4160 + 15 3090 - 78 8480 - 74 8374 + 0 + 803 9850 + 1677 3120 + 505 1970 - 2680 8320 - 2619 3090", "x2": "mul n x_0_6", "tree": "(n mul x_0_6)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 1 - 3 + 4 + 5 + 2 + 6 + 11 + 13 + 19 + 30 + 43 + 62 + 92 + 135 + 197 + 289 + 424 + 621 + 910 + 1334 + 1955 + 2865 + 4199 + 6154 + 9019 + 1 3218 + 1 9372 + 2 8391 + 4 1609 + 6 981 + 8 9372", "x2": "relu add x_0_3 x_0_1", "tree": "relu((x_0_3 add x_0_1))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 9 + 4 - 7 - 7 - 2 + 9 + 9 + 4 - 7 - 7 - 2 + 9 + 9 + 4 - 7 - 7 - 2 + 9 + 9 + 4 - 7 - 7 - 2 + 9 + 9 + 4 - 7 - 7 - 2 + 9 + 9", "x2": "sub idiv INT+ 9 sqr INT- 2 x_0_3", "tree": "((9 idiv (-2)**2) sub x_0_3)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 4 - 15 - 20 - 18 - 24 - 39 - 48 - 50 - 60 - 79 - 92 - 98 - 112 - 135 - 152 - 162 - 180 - 207 - 228 - 242 - 264 - 295 - 320 - 338 - 364 - 399 - 428 - 450 - 480 - 519", "x2": "sub INT- 8 mod x_0_2 relu sqr n", "tree": "(-8 sub (x_0_2 mod relu((n)**2)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 + 2 + 6 + 1 + 4 - 3 - 2 + 0 + 54 + 16 + 0 - 486 - 96 + 0 + 5832 + 960 + 0 + 3 4992 - 9600 + 0 - 370 9152 + 9 6000 + 0 - 35 2369 4400 - 96 0 + 0 + 33 8627 318 4000 + 960 0 + 0 + 325 480 8786 3216 0 - 9600 0 + 0 - 3 1204 9414 8295 6599 2160 0 + 9 6000 0 + 0 - 2995 6712 6186 9685 2290 7607 8400 0", "x2": "mul add INT- 4 sub x_0_8 INT+ 6 x_0_3", "tree": "((-4 add (x_0_8 sub 6)) mul x_0_3)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 4 + 4 - 5 + 8 + 6 - 16 - 9 - 19 - 7 - 10 - 33 - 27 - 38 - 27 - 31 - 55 - 50 - 62 - 52 - 57 - 82 - 78 - 91 - 82 - 88 - 114 - 111 - 125 - 117 - 124 - 151 - 149 - 164 - 157", "x2": "add sub x_0_5 n INT- 6", "tree": "((x_0_5 sub n) add -6)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 7 - 5 + 9 + 3 + 14 + 0 + 13 + 10 + 18 + 9 + 22 + 21 + 28 + 21 + 35 + 36 + 43 + 37 + 52 + 55 + 62 + 57 + 73 + 78 + 85 + 81 + 98 + 105 + 112 + 109 + 127 + 136 + 143", "x2": "add x_0_4 add n idiv sub INT- 7 x_0_2 add sub mod INT- 2 abs INT+ 5 idiv idiv INT- 1 n n x_0_3", "tree": "(x_0_4 add (n add ((-7 sub x_0_2) idiv (((-2 mod abs(5)) sub ((-1 idiv n) idiv n)) add x_0_3))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 1 + 8 + 4 + 4 - 3 + 6 + 70 + 48 + 54 + 10 + 88 + 864 + 650 + 784 + 180 + 1440 + 1 4722 + 1 1736 + 1 4934 + 3640 + 3 282 + 32 3928 + 26 9974 + 35 8464 + 9 1050 + 78 7384 + 874 6110 + 755 9328 + 1039 5514 + 273 1560 + 2440 8966 + 2 7987 5584 + 2 4945 7890 + 3 5344 7544", "x2": "abs abs mul mul abs add INT+ 2 x_0_5 n sign add n mod n sign n", "tree": "abs(abs(((abs((2 add x_0_5)) mul n) mul sign((n add (n mod sign(n)))))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 6 + 10 + 7 - 5 - 3 + 0 - 8 - 2 + 1 - 7 - 1 + 2 - 6 + 0 + 3 - 5 + 1 + 4 - 4 + 2 + 5 - 3 + 3 + 6 - 2 + 4 + 7 - 1 + 5 + 8 + 0 + 6 + 9 + 1 + 7 + 10", "x2": "add x_0_3 sign abs mul abs x_0_8 idiv INT- 8 INT- 6", "tree": "(x_0_3 add sign(abs((abs(x_0_8) mul (-8 idiv -6)))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 10 + 6 - 160 + 251 - 214 + 7843 - 1 6060 + 1 7339 - 78 4294 + 194 3267 - 249 6808 + 1 3254 5695 - 3 8088 322 + 5 6178 1811 - 339 3169 7908 + 1100 7441 3071 - 1820 1730 6750 + 12 2493 4294 4803 - 44 297 6522 8384 + 80 2696 3227 6767 - 5928 6819 8528 4634 + 2 3291 7458 581 5155 - 4 6235 3081 9141 7772 + 370 5426 2408 289 6271 - 1574 5220 1647 3104 4758 + 3370 5539 6715 4355 5811 - 29 505 4172 7894 7067 6440 + 132 4173 158 5388 864 1503 - 303 3498 5704 3892 22 9874 + 2 7917 5706 50 6813 2005 8867 - 13 5595 3168 2343 7400 4889 9044", "x2": "idiv sub n add mul relu relu n mul n x_0_3 INT+ 4 sign mod n n", "tree": "((n sub ((relu(relu(n)) mul (n mul x_0_3)) add 4)) idiv sign((n mod n)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 6 + 3 - 9 - 9 - 5 - 358 + 30 - 611 - 751 - 919 - 1107 + 382 - 1558 - 1149 - 1257 - 1353 + 1131 - 3230 - 1602 - 2339 - 2575 + 1377 - 5699 - 1730 - 3766 - 3453 + 2599 - 8065 - 1461 - 5918 - 4386 + 3477 - 1 1807 - 1695", "x2": "sub mul sub INT+ 4 mod sign idiv INT+ 7 x_0_5 mul n n INT+ 8 x_0_6", "tree": "(((4 sub (sign((7 idiv x_0_5)) mod (n mul n))) mul 8) sub x_0_6)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 7 + 7 + 5 + 3 + 1 - 3 - 7 - 11 - 17 - 23 - 29 - 37 - 45 - 53 - 63 - 73 - 83 - 95 - 107 - 119 - 133 - 147 - 161 - 177 - 193 - 209 - 227 - 245", "x2": "add sub idiv mul n n INT- 3 idiv mul n INT- 1 sign n abs INT+ 7", "tree": "((((n mul n) idiv -3) sub ((n mul -1) idiv sign(n))) add abs(7))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 4 + 5 - 8 + 1 - 3 - 7 - 2 - 10 - 9 - 12 - 19 - 21 - 31 - 40 - 52 - 71 - 92 - 123 - 163 - 215 - 286 - 378 - 501 - 664 - 879 - 1165 - 1543 - 2044 - 2708 - 3587 - 4752 - 6295", "x2": "add x_0_3 x_0_2", "tree": "(x_0_3 add x_0_2)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 5 + 4 + 8 - 5 - 4 + 2 + 6 - 1 - 4 - 10 - 9 + 2 8224 + 3 8416 + 5 625 + 6 5536 + 8 4100 + 10 6276 + 12 8164 + 16 0 + 19 6249 + 23 5225 + 28 900 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281 + 81 0 + 92 3521 + 104 8576 + 118 5921 + 133 6336 + 150 625 + 167 9616 + 187 4161 + 208 5136 + 231 3441 + 256 0 + 282 5761", "x2": "sqr sub idiv mod sub add sqr idiv x_0_11 n mod n x_0_8 x_0_4 INT+ 8 x_0_12 mul n n", "tree": "((((((((x_0_11 idiv n))**2 add (n mod x_0_8)) sub x_0_4) mod 8) idiv x_0_12) sub (n mul n)))**2", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "- 7 + 2 - 1 - 5 + 8 - 8 + 4 + 20 + 11 + 14 + 18 + 5 + 21 + 9 - 7 + 2 - 1 - 5 + 8 - 8 + 4 + 20 + 11 + 14 + 18 + 5 + 21 + 9 - 7 + 2 - 1 - 5 + 8 - 8 + 4 + 20", "x2": "sub mul INT+ 3 sign relu n add x_0_7 INT- 1 0", "tree": "((3 mul sign(relu(n))) sub (x_0_7 add -10))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 5 - 72 - 1345 - 2 5532 - 48 5085 - 921 6592 - 1 7511 5225 - 33 2718 9252 - 632 1659 5765 - 1 2011 1531 9512 - 22 8211 9107 705 - 433 6026 3034 3372 - 8238 4499 7652 4045 - 15 6530 5495 5395 6832 - 297 4080 4415 2517 9785 - 5650 7528 3889 7841 5892 - 10 7364 3039 3905 8990 1925 - 203 9921 7748 4212 813 6552 - 3875 8513 7220 29 5459 4465 - 7 3641 1760 7180 561 3729 4812 - 139 9182 3453 6421 666 860 1405 - 2658 4464 5619 2000 2655 6342 6672 - 5 510 4826 6764 8005 457 510 6745 - 95 9699 1706 8531 2095 8683 9702 8132 - 1823 4284 2430 2092 9821 4995 4353 4485 - 3 4645 1400 6173 9766 6608 4913 2715 5192 - 65 8257 6611 7305 5566 5561 3352 1594 8625 - 1250 6895 5622 8805 5764 5665 3691 302 3852 - 2 3763 1015 6834 7305 9526 7642 129 5745 3165 - 45 1498 9297 9859 8813 1008 5198 2461 9161 112", "x2": "sub INT+ 7 relu sub sub x_0_1 mul add x_0_1 x_0_1 INT+ 1 0 mul INT- 4 INT- 4", "tree": "(7 sub relu(((x_0_1 sub ((x_0_1 add x_0_1) mul 10)) sub (-4 mul -4))))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 - 5 + 3 + 12 + 16 + 8 - 1 - 5 + 3 + 12 + 16 + 8 - 1 - 5 + 3 + 12 + 16 + 8 - 1 - 5 + 3 + 12 + 16 + 8 - 1 - 5 + 3 + 12 + 16 + 8 - 1 - 5", "x2": "sub idiv INT+ 8 INT+ 7 add INT- 1 0 x_0_3", "tree": "((8 idiv 7) sub (-10 add x_0_3))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 5 + 1 + 3 + 2 + 1 + 3 + 5 + 2 + 5 + 4 + 5 + 2 + 5 + 4 + 5 + 3 + 5 + 3 + 5 + 3 + 5 + 3 + 5 + 4 + 5 + 3 + 5 + 4 + 5 + 3", "x2": "add mod mod idiv mul sub INT- 1 n sqr INT- 7 mul n x_0_2 INT+ 5 n sign n", "tree": "((((((-1 sub n) mul (-7)**2) idiv (n mul x_0_2)) mod 5) mod n) add sign(n))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 6 + 0 - 5 + 7 + 10 + 1 - 2 - 2 - 2 - 2 + 2 + 2 + 6 - 4 - 4 - 4 - 4 + 2 + 2 + 2 - 6 - 6 - 6 - 6 + 2 + 2 + 2 - 8 - 8 - 8 - 8 + 2 + 2 + 2 - 10 - 10", "x2": "mul INT- 2 idiv n sub INT+ 7 relu mul n x_0_7", "tree": "(-2 mul (n idiv (7 sub relu((n mul x_0_7)))))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 7 - 8 + 6 + 9 - 3 - 2 + 4 - 10 + 6 5610 + 12 1275 + 12 + 13 + 18 8384 + 15 + 33 6400 + 37 2368 + 52 6338 + 19 + 20 + 65 496 + 74 4832 + 23 + 96 0 + 25 + 26 + 27 + 150 7072 + 167 400 + 30 + 31 + 223 272 + 33 + 266 5600 + 290 3040 + 315 4176 + 37 + 38", "x2": "mul sqr mod sign x_0_6 sub x_0_9 relu mul n INT+ 9 n", "tree": "(((sign(x_0_6) mod (x_0_9 sub relu((n mul 9)))))**2 mul n)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 5 + 10 + 2 - 10 - 8 + 6 + 8 + 8 - 8 - 1 - 9 - 4 + 8 + 10 + 2 + 6 + 9 + 6 + 8 + 8 + 13 + 21 + 14 + 20 + 8 + 10 + 2 + 6 + 9 + 6 + 8 + 8 + 13 + 21 + 14 + 20 + 8 + 10 + 2 + 6 + 9", "x2": "mod add n x_0_12 n", "tree": "((n add x_0_12) mod n)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 9 - 6 - 3 + 4 + 9 + 6 + 3 + 4 + 9 + 6 + 3 + 4 + 9 + 6 + 3 + 4 + 9 + 6 + 3 + 4 + 9 + 6 + 3 + 4 + 9 + 6 + 3 + 4 + 9 + 6 + 3 + 4 + 9", "x2": "mul mod sign idiv x_0_4 INT+ 6 x_0_4 x_0_4", "tree": "((sign((x_0_4 idiv 6)) mod x_0_4) mul x_0_4)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 - 8 + 0 + 2 + 2 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0", "x2": "mod relu relu sub abs x_0_3 sub x_0_2 relu mul x_0_1 n n", "tree": "(relu(relu((abs(x_0_3) sub (x_0_2 sub relu((x_0_1 mul n)))))) mod n)", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 - 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "abs sqr idiv n sign idiv add mul INT+ 7 sub x_0_1 x_0_2 idiv n x_0_1 n", "tree": "abs(((n idiv sign((((7 mul (x_0_1 sub x_0_2)) add (n idiv x_0_1)) idiv n))))**2)", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 10 - 10 - 9 + 7 + 5 + 4 + 2 - 1 - 4 - 6 - 9 - 11 - 9 - 8 - 6 - 5 - 8 - 10 - 13 - 15 - 13 - 12 - 10 - 9 - 12 - 14 - 17 - 19 - 17 - 16 - 14 - 13 - 16", "x2": "sub relu abs x_0_4 n", "tree": "(relu(abs(x_0_4)) sub n)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 1 + 2 - 10 + 40 + 6 + 14 - 80 + 360 + 60 + 154 - 960 + 4680 + 840 + 2310 - 1 5360 + 7 9560 + 1 5120 + 4 3890 - 30 7200 + 167 760 + 33 2640 + 100 9470 - 737 2800 + 4176 9000 + 864 8640 + 2725 5690 - 2 643 8400 + 12 1130 1000 + 2 5945 9200 + 8 4492 6390 - 66 602 8800 + 399 7293 3000", "x2": "mul n x_0_4", "tree": "(n mul x_0_4)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 + 7 + 10 + 3 + 4 + 9 + 14 + 18 + 12 + 14 + 20 + 26 + 31 + 26 + 29 + 36 + 43 + 49 + 45 + 49 + 57 + 65 + 72 + 69 + 74 + 83 + 92 + 100 + 98 + 104 + 114 + 124 + 133 + 132", "x2": "add abs x_0_5 n", "tree": "(abs(x_0_5) add n)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 + 3 + 3 - 4 - 5 + 6 + 7 - 8 - 9 + 10 + 11 - 12 - 13 + 14 + 15 - 16 - 17 + 18 + 19 - 20 - 21 + 22 + 23 - 24 - 25 + 26 + 27 - 28 - 29 + 30 + 31", "x2": "mul sign mod n mod n mul sub mod x_0_2 x_0_1 n mul INT+ 6 x_0_2 n", "tree": "(sign((n mod (n mod (((x_0_2 mod x_0_1) sub n) mul (6 mul x_0_2))))) mul n)", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 + 5 + 10 - 1 + 2 + 3 + 44 + 5 + 2 6254 + 8 9999 + 5 8566 + 8 2947 + 11 4288 + 15 3669 + 22 8754 + 9 6399 + 39 2650 + 16 5891 + 63 5572 + 29 8069 + 100 6678 + 103 3423 + 151 2014 + 149 2995 + 219 8072 + 212 5973 + 313 2442 + 349 2047 + 434 1138 + 473 2995 + 219 9033 + 632 277 + 356 8042 + 354 8691 + 458 1238", "x2": "add sqr mul n mod add n n idiv mul n x_0_2 x_0_6 x_0_6", "tree": "(((n mul ((n add n) mod ((n mul x_0_2) idiv x_0_6))))**2 add x_0_6)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 4 + 6 + 6 - 8 + 2 + 7 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "idiv sign idiv INT- 9 x_0_7 sign add n sqr mul abs n sub INT+ 6 n", "tree": "(sign((-9 idiv x_0_7)) idiv sign((n add ((abs(n) mul (6 sub n)))**2)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 5 + 3 - 4 - 2 - 7 + 1 + 1 + 4 + 7 + 3 + 3 + 4 + 8 + 3 + 0 + 1 + 3 + 8 + 4 + 2 + 4 + 7 + 4 + 1 + 0 + 3 + 7 + 5 + 3 + 3 + 7 + 3 + 2 + 1", "x2": "mod sub add n x_0_5 idiv INT+ 1 INT+ 7 INT+ 9", "tree": "(((n add x_0_5) sub (1 idiv 7)) mod 9)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281", "x2": "relu sqr sqr n", "tree": "relu(((n)**2)**2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 6 + 5 + 1 - 2 - 1 + 8 - 6 + 0 - 2 - 13 - 12 - 5 - 37 + 1 - 17 - 3 + 15 + 17 - 7 + 77 - 37 + 23 - 52 - 69 - 94 - 9 - 244 + 99 - 106 + 202 + 138 + 272 - 59 + 628 - 427 + 272 - 888 - 354", "x2": "sub x_0_10 sub n mul x_0_7 INT- 3", "tree": "(x_0_10 sub (n sub (x_0_7 mul -3)))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 7 + 10 + 16 + 7 + 30 + 6 + 56 + 3 + 30 + 7 + 18 + 22 + 49 + 7 + 176 + 1 + 25 + 6 + 4 + 262 + 0 + 9 + 6 + 0 + 23 + 162 + 0 + 333 + 1 + 0 + 7", "x2": "idiv mul x_0_3 n sub sqr idiv add x_0_1 sub x_0_3 n relu INT+ 8 sign INT- 6", "tree": "((x_0_3 mul n) idiv ((((x_0_1 add (x_0_3 sub n)) idiv relu(8)))**2 sub sign(-6)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 10 + 1 + 8 + 8 + 8 - 4 - 7 + 6 + 2 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign sub relu x_0_10 sign n", "tree": "sign((relu(x_0_10) sub sign(n)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 9 - 9 + 4 + 9 + 1 + 9 + 27 + 4 + 9 + 1 + 9 + 27 + 4 + 9 + 1 + 9 + 27 + 4 + 9 + 1 + 9 + 27 + 4 + 9 + 1 + 9 + 27 + 4 + 9 + 1 + 9 + 27 + 4", "x2": "mod x_0_5 sqr add sqr mod x_0_3 INT+ 2 INT- 7", "tree": "(x_0_5 mod ((((x_0_3 mod 2))**2 add -7))**2)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 + 5 - 7 - 2 + 1 - 8 + 432 + 783 + 1250 + 77 + 1320 + 1365 + 1456 + 8280 + 1 4576 + 2 3562 + 3978 + 2 7968 + 3 500 + 3 4104 + 18 6032 + 33 9480 + 57 96 + 10 4450 + 73 2576 + 82 9332 + 96 1184 + 540 1656 + 1019 1600 + 1768 664 + 335 592 + 2418 3720 + 2820 6536 + 3365 1240 + 1 9446 9984", "x2": "abs mul n abs sub mul sub idiv relu n x_0_5 n INT+ 8 x_0_7", "tree": "abs((n mul abs(((((relu(n) idiv x_0_5) sub n) mul 8) sub x_0_7))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 2 + 5 - 6 + 9 - 1 - 15 + 1 - 11 - 25 - 13 - 24 - 35 - 28 - 40 - 52 - 46 - 59 - 72 - 67 - 81 - 95 - 91 - 106 - 121 - 118 - 134 - 150 - 148 - 165 - 182 - 181 - 199 - 217", "x2": "sub add add idiv INT+ 3 x_0_5 x_0_3 mul INT+ 1 0 mod mul sub n n x_0_2 n n", "tree": "((((3 idiv x_0_5) add x_0_3) add (10 mul (((n sub n) mul x_0_2) mod n))) sub n)", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 3 - 4 + 8 + 8 + 3 + 19 + 16 + 36 + 33 + 48 + 61 + 73 + 106 + 115 + 163 + 185 + 245 + 300 + 369 + 472 + 563 + 726 + 872 + 1104 + 1353 + 1676 + 2088 + 2557 + 3201 + 3919 + 4886 + 6016 + 7452 + 9226", "x2": "relu abs sub add add x_0_2 abs x_0_5 idiv idiv n x_0_4 n INT- 9", "tree": "relu(abs((((x_0_2 add abs(x_0_5)) add ((n idiv x_0_4) idiv n)) sub -9)))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 9 - 10 - 7 - 10 - 10 + 8 - 9 - 6 + 10 - 6 + 110 + 120 + 143 + 140 + 165 + 416 + 204 + 180 + 551 + 380 + 651 + 704 + 759 + 816 + 875 + 936 + 999 + 1064 + 1131 + 1200 + 1271 + 1344 + 1419 + 1496 + 1575 + 1656 + 1739 + 1824 + 1911", "x2": "abs mul n relu sub mod n add x_0_10 abs abs add n INT- 3 INT- 1 0", "tree": "abs((n mul relu(((n mod (x_0_10 add abs(abs((n add -3))))) sub -10))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 6 - 3 + 7 + 0 - 9 - 10 - 10 - 10 + 10 - 9 - 11 - 1 - 8 - 11 - 12 - 11 - 10 + 2 - 17 - 19 - 9 - 16 - 19 - 20 - 19 - 18 - 6 - 25 - 27 - 17 - 24 - 27 - 28 - 27 - 26 - 14 - 33 - 35", "x2": "sub mod INT- 9 add add n sign n x_0_9 n", "tree": "((-9 mod ((n add sign(n)) add x_0_9)) sub n)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 3 + 7 + 1 + 7 + 7 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign x_0_6", "tree": "sign(x_0_6)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 + 9 + 20 + 32 + 45 + 59 + 74 + 90 + 107 + 125 + 144 + 164 + 185 + 207 + 230 + 254 + 279 + 305 + 332 + 360 + 389 + 419 + 450 + 482 + 515 + 549 + 584 + 620 + 657 + 695", "x2": "relu add n idiv add add x_0_1 INT- 2 relu INT+ 1 0 sign sub n INT- 7", "tree": "relu((n add (((x_0_1 add -2) add relu(10)) idiv sign((n sub -7)))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 + 1 - 1 - 9 + 10 + 6 - 3 + 9 - 9 + 10 + 10 + 20 + 24 + 43 + 29 + 53 + 49 + 62 + 77 + 72 + 88 + 74 + 87 + 55 + 83 + 28 + 61 - 6 + 13 - 45 - 45 - 86 - 98 - 106 - 145 - 97 - 168 - 52 - 141", "x2": "sub n sub x_0_10 sub x_0_2 idiv abs mod x_0_1 n x_0_2", "tree": "(n sub (x_0_10 sub (x_0_2 sub (abs((x_0_1 mod n)) idiv x_0_2))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 9 - 3 + 7 + 4 - 8 - 10 + 1 - 3 + 3 - 7 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign mul idiv mul x_0_8 idiv x_0_7 INT+ 1 n x_0_11", "tree": "sign((((x_0_8 mul (x_0_7 idiv 1)) idiv n) mul x_0_11))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 2 - 6 + 6 + 24 + 30 + 144 + 210 + 1152 + 1890 + 1 1520 + 2 790 + 13 8240 + 27 270 + 193 5360 + 405 4050 + 3096 5760 + 6891 8850 + 5 5738 3680 + 13 945 8150 + 111 4767 3600 + 274 9862 1150 + 2452 4881 9200 + 6324 6828 6450 + 5 8859 7166 800 + 15 8117 716 1250 + 153 352 6318 800 + 426 9160 9335 3750 + 4284 9873 6906 2400 + 1 2380 5667 725 8750 + 12 8549 6210 7187 2000 + 38 3797 5679 2502 1250", "x2": "mul n abs x_0_2", "tree": "(n mul abs(x_0_2))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 9 - 9 + 3 - 7 + 5 + 8 + 4 + 8 + 1 + 1 + 46 - 4 + 45 - 21 - 15 + 1 - 47 + 1 + 1 + 1 - 1 + 1 + 23 - 1 - 25 - 1 - 25 + 1 - 51 + 594 - 5 + 1 - 1 + 2564 + 35 2850 - 1 - 31", "x2": "mod sign x_0_9 sub sub sqr x_0_5 n x_0_6", "tree": "(sign(x_0_9) mod (((x_0_5)**2 sub n) sub x_0_6))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 + 0 + 3 + 3 + 8 + 6 + 233 + 0 + 3 + 3 + 8 + 6 + 233 + 0 + 3 + 3 + 8 + 6 + 233 + 0 + 3 + 3 + 8 + 6 + 233 + 0 + 3 + 3 + 8 + 6 + 233 + 0 + 3 + 3 + 8", "x2": "mod x_0_6 sub sub sub mul INT+ 4 sqr INT+ 8 INT- 1 add sign n mod INT+ 4 n INT+ 1 0", "tree": "(x_0_6 mod ((((4 mul (8)**2) sub -1) sub (sign(n) add (4 mod n))) sub 10))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 9 + 7 - 4 + 3 - 10 - 9 + 0 + 126 + 0 + 0 + 0 + 0 + 0 + 756 + 0 + 0 + 0 + 0 + 0 + 4536 + 0 + 0 + 0 + 0 + 0 + 2 7216 + 0 + 0 + 0 + 0 + 0 + 16 3296 + 0 + 0 + 0", "x2": "mul mul mod abs add x_0_5 INT- 6 sub INT- 7 sign n INT- 3 relu x_0_6", "tree": "(((abs((x_0_5 add -6)) mod (-7 sub sign(n))) mul -3) mul relu(x_0_6))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 3 + 1 + 1 + 5 + 30 + 42 + 11 + 2 + 1 + 5 + 60 + 156 + 36 + 3 + 1 + 5 + 90 + 342 + 76 + 4 + 1 + 5 + 120 + 600 + 130 + 5 + 1 + 5 + 150 + 930", "x2": "abs idiv mul n abs x_0_1 x_0_2", "tree": "abs(((n mul abs(x_0_1)) idiv x_0_2))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 0 - 6 + 4 + 2 - 9 + 6 + 9 + 0 - 3 + 7 + 9 + 0 + 0 + 60 - 160 - 153 + 108 - 19 + 0 - 63 + 154 - 3818 + 0 + 0 - 546 - 648 + 700 + 3132 - 570 + 0 - 224 - 1 1121 - 1 9652 + 0 + 0 - 2 202 + 1 6264 + 1 1076 - 34 7880 - 2 3370", "x2": "mul mod x_0_11 sub x_0_7 sub x_0_12 INT- 8 n", "tree": "((x_0_11 mod (x_0_7 sub (x_0_12 sub -8))) mul n)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "+ 9 - 10 + 9 - 7 + 0 + 3 - 9 - 8 - 2592 + 0 - 4000 - 275 - 2028 - 3757 - 504 - 960 - 1 609 0 - 5508 - 2 8527 498 - 123 5475 - 8056 980 - 2 9295 4725 - 508 9942 - 2015 208 - 27 121 9870 9201 5000 - 7 5130 8100 - 211 5860 2822 3860 7866 - 41 2108 9082 4843 - 18 1721 8711 2868 3228 - 248 8851 1463 5374 7725 - 777 2158 1963 7630 - 1 2586 9173 7776 256 - 2 3349 841 3137 2384 1433 6819 5888 6435 4848 - 1862 7305 7312 979 1748 - 152 2134 95 4464 6004 3385 6392 9544 9383 5074 - 5 9441 8132 9009 5662 1868 3055 3715 - 1 1888 2218 4074 3506 9349 9603 832 5392 9316", "x2": "mul sqr add n x_0_8 sub INT+ 1 n", "tree": "(((n add x_0_8))**2 mul (1 sub n))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 7 - 3 - 10 - 7 - 15 - 13 - 22 - 21 - 31 - 31 - 42 - 43 - 55 - 57 - 70 - 73 - 87 - 91 - 106 - 111 - 127 - 133 - 150 - 157 - 175 - 183 - 202 - 211 - 231 - 241 - 262", "x2": "sub x_0_2 n", "tree": "(x_0_2 sub n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 1 - 2 + 5 + 6 - 7 - 1 - 2 + 5 + 6 - 7 - 1 - 2 + 5 + 6 - 7 - 1 - 2 + 5 + 6 - 7 - 1 - 2 + 5 + 6 - 7 - 1 - 2 + 5 + 6 - 7 - 1 - 2 + 5 + 6", "x2": "add mod x_0_2 x_0_2 x_0_5", "tree": "((x_0_2 mod x_0_2) add x_0_5)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 - 4 - 10 + 3 + 10 + 4 + 2 + 4 + 22 + 8 + 0 + 33 + 52 + 0 + 0 + 0 + 38 + 24 + 0 + 0 + 0 + 16 + 16 + 0 + 0 + 0 + 16 + 16 + 0 + 0 + 0 + 16 + 16 + 0 + 0 + 0 + 16", "x2": "relu mul sub sub x_0_2 x_0_8 relu sqr INT+ 4 idiv idiv INT- 6 x_0_5 sqr sign n", "tree": "relu((((x_0_2 sub x_0_8) sub relu((4)**2)) mul ((-6 idiv x_0_5) idiv (sign(n))**2)))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 8 + 1 + 9 - 4 - 13 + 2 + 9 - 5 - 15 - 1 + 5 - 10 - 14 - 1 + 4 - 12 - 17 - 5 - 1 - 11 - 17 - 6 - 3 - 14 - 21 - 11 - 2 - 14 - 22 - 13 - 5 - 18", "x2": "add x_0_4 sub INT+ 1 mod abs n sub relu INT- 7 INT- 7", "tree": "(x_0_4 add (1 sub (abs(n) mod (relu(-7) sub -7))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 4 + 0 + 4 - 15 + 6 + 0 + 8 - 18 - 10 + 11 + 0 + 13 - 28 - 15 + 16 + 0 + 18 - 38 - 20 + 21 + 0 + 23 - 48 - 25 + 26 + 0 + 28 - 58 - 30", "x2": "sub n mod mul abs n x_0_1 sub n mul add INT- 4 sub abs n n n", "tree": "(n sub ((abs(n) mul x_0_1) mod (n sub ((-4 add (abs(n) sub n)) mul n))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 4 + 3 + 4 + 0 - 2 + 4 + 3 + 4 + 0 - 3 + 3 + 3 + 4 + 0 - 4 + 2 + 3 + 4 + 0 - 5 + 1 + 3 + 4 + 0 - 6 + 0 + 3 + 4 + 0 - 7 - 1 + 2 + 4 + 0", "x2": "add idiv add idiv INT+ 1 INT- 2 x_0_6 INT+ 1 0 x_0_5", "tree": "((((1 idiv -2) add x_0_6) idiv 10) add x_0_5)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 2 + 6 - 9 - 2 - 1 + 7 - 8 - 1 + 0 + 8 - 7 + 0 + 1 + 9 - 6 + 1 + 2 + 10 - 5 + 2 + 3 + 11 - 4 + 3 + 4 + 12 - 3 + 4 + 5 + 13 - 2 + 5 + 6", "x2": "add x_0_4 abs sqr sign idiv mod sign x_0_4 n sub n n", "tree": "(x_0_4 add abs((sign(((sign(x_0_4) mod n) idiv (n sub n))))**2))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 25 + 56 + 119 + 246 + 501 + 1012 + 2035 + 4082 + 8177 + 1 6368 + 3 2751 + 6 5518 + 13 1053 + 26 2124 + 52 4267 + 104 8554 + 209 7129 + 419 4280 + 838 8583 + 1677 7190 + 3355 4405 + 6710 8836 + 1 3421 7699 + 2 6843 5426 + 5 3687 881 + 10 7374 1792 + 21 4748 3615 + 42 9496 7262 + 85 8993 4557", "x2": "add sub add idiv x_0_1 sign n sub n INT- 3 x_0_1 add x_0_1 x_0_1", "tree": "((((x_0_1 idiv sign(n)) add (n sub -3)) sub x_0_1) add (x_0_1 add x_0_1))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 8 - 6 + 8 - 7 - 10 + 9 - 6 + 8 + 20 + 19 + 48 + 67 + 56 + 35 + 74 + 93 + 62 + 9 + 170 + 39 + 12 + 77 + 86 + 215 + 124 + 53 + 62 + 221 + 60 + 89 + 98 + 167 + 76 + 155 + 134 + 213 + 272", "x2": "abs sub mul mod x_0_9 n INT+ 1 0 n", "tree": "abs((((x_0_9 mod n) mul 10) sub n))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 0 + 8 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0", "x2": "idiv mul n mod x_0_3 n n", "tree": "((n mul (x_0_3 mod n)) idiv n)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 4 + 4 - 2 - 392 + 392 - 392 + 392 + 392 - 392 + 392 - 392 - 392 + 392 - 392 + 392 + 392 - 392 + 392 - 392 - 392 + 392 - 392 + 392 + 392 - 392 + 392 - 392 - 392 + 392 - 392 + 392 + 392", "x2": "mul INT+ 8 mul INT+ 7 idiv INT- 7 sign x_0_4", "tree": "(8 mul (7 mul (-7 idiv sign(x_0_4))))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 6 + 10 - 4 + 3586 + 3602 + 3588 + 7178 + 7194 + 7180 + 1 770 + 1 786 + 1 772 + 1 4362 + 1 4378 + 1 4364 + 1 7954 + 1 7970 + 1 7956 + 2 1546 + 2 1562 + 2 1548 + 2 5138 + 2 5154 + 2 5140 + 2 8730 + 2 8746 + 2 8732 + 3 2322 + 3 2338 + 3 2324 + 3 5914 + 3 5930", "x2": "add add abs add sqr mul INT+ 1 0 INT+ 6 INT- 1 0 x_0_3 INT+ 2", "tree": "((abs((((10 mul 6))**2 add -10)) add x_0_3) add 2)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 + 24 - 96 + 384 - 1536 + 6144 - 2 4576 + 9 8304 - 39 3216 + 157 2864 - 629 1456 + 2516 5824 - 1 66 3296 + 4 265 3184 - 16 1061 2736 + 64 4245 944 - 257 6980 3776 + 1030 7921 5104 - 4123 1686 416 + 1 6492 6744 1664 - 6 5970 6976 6656 + 26 3882 7906 6624 - 105 5531 1626 6496 + 422 2124 6506 5984 - 1688 8498 6026 3936 + 6755 3994 4105 5744 - 2 7021 5977 6422 2976 + 10 8086 3910 5689 1904 - 43 2345 5642 2756 7616 + 172 9382 2569 1027 464", "x2": "mul mul INT- 4 INT+ 1 x_0_1", "tree": "((-4 mul 1) mul x_0_1)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 + 8 - 5 + 9 - 4 + 10 - 3 + 11 - 2 + 12 - 1 + 13 + 0 + 14 - 9 + 25 - 8 + 26 - 7 + 27 - 6 + 28 - 5 + 29 - 4 + 30 - 3 + 31 - 2 + 32 - 1", "x2": "mod sub n x_0_1 sub sub x_0_2 INT- 4 x_0_1", "tree": "((n sub x_0_1) mod ((x_0_2 sub -4) sub x_0_1))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 3 + 0 + 5 + 12 + 21 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437 + 480 + 525 + 572 + 621 + 672 + 725 + 780 + 837", "x2": "add sqr sqr sqr relu sign INT- 3 sub sqr n INT+ 4", "tree": "((((relu(sign(-3)))**2)**2)**2 add ((n)**2 sub 4))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 7 - 3 - 3 - 5 + 10 - 7 - 3 - 14 + 3 - 3 + 23 - 11 - 1 - 38 + 13 - 3 + 60 - 25 + 1 - 99 + 37 - 5 + 158 - 63 + 5 - 258 + 99 - 11 + 415 - 163 + 15 - 674 + 261 - 27 + 1088", "x2": "sub x_0_6 add x_0_3 sign n", "tree": "(x_0_6 sub (x_0_3 add sign(n)))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 7 + 7 + 2 - 2 + 1 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1", "x2": "idiv x_0_3 n", "tree": "(x_0_3 idiv n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 6 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul n abs add idiv INT+ 2 n abs abs n", "tree": "(n mul abs(((2 idiv n) add abs(abs(n)))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 10 + 1 - 6 + 3690 - 366 + 2178 - 132 8400 + 13 662 - 77 1012 + 4 6626 8400 - 4547 376 + 2 6599 9140 - 1594 6379 2800 + 154 1445 7464 - 893 7571 1040 + 53 1014 4300 2400 - 5 867 7096 3120 + 29 2258 5751 80 - 1 7204 8675 3277 7600 + 1632 8534 7916 1520 - 9293 8226 8820 5440 + 541 9533 2728 2494 4000 - 50 9450 2854 9839 4240 + 287 1791 2106 5548 960 - 16 5837 7181 4844 3286 4000 + 1 5436 3436 5060 1345 4720 - 8 6153 7363 1966 4428 8000 + 4925 3802 2900 8765 6060 8000 - 453 8285 332 7679 5568 7680 + 2507 737 2690 2234 8780 8000 - 141 8509 5059 5452 4494 5510 4000 + 12 9341 1234 4838 8673 7098 8800", "x2": "mul add mod INT- 1 sqr INT- 8 sub sqr INT+ 8 n mul add relu INT+ 2 sub INT- 6 INT- 1 x_0_3", "tree": "(((-1 mod (-8)**2) add ((8)**2 sub n)) mul ((relu(2) add (-6 sub -1)) mul x_0_3))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 13 + 18 + 25 + 34 + 45 + 58 + 73 + 90 + 109 + 130 + 153 + 178 + 205 + 234 + 265 + 298 + 333 + 370 + 409 + 450 + 493 + 538 + 585 + 634 + 685 + 738 + 793 + 850", "x2": "add sqr n INT+ 9", "tree": "((n)**2 add 9)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 10 + 2 - 7 + 1014 + 1960 + 450 - 1792 + 29 3046 + 63 5040 + 16 2450 - 71 6800 + 1 2923 3286 + 3 735 9360 + 8593 6050 - 4 1287 6800 + 807 7080 3750 + 2077 7492 7360 + 626 4738 450 - 3236 9541 1200 + 67 9282 4595 3750 + 186 9974 3462 4000 + 60 2041 3261 2450 - 331 4641 106 8800 + 7 3973 8598 4363 3750 + 21 6169 344 2534 4000 + 7 3750 624 5025 1250 - 42 9577 4749 8516 4800 + 1 127 214 1259 3460 3750 + 3 1214 8085 7101 9673 6000 + 1 1217 3844 9868 3215 1250 - 6 8732 3959 9762 6368 0 + 1702 3522 9945 6960 6890 3750", "x2": "mul sqr add n add abs sub x_0_2 x_0_2 INT+ 8 x_0_4", "tree": "(((n add (abs((x_0_2 sub x_0_2)) add 8)))**2 mul x_0_4)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 8 - 8 + 4 - 5 + 0 - 4 - 3 - 6 - 8 - 13 - 20 - 32 - 51 - 82 - 132 - 213 - 344 - 556 - 899 - 1454 - 2352 - 3805 - 6156 - 9960 - 1 6115 - 2 6074 - 4 2188 - 6 8261 - 11 448 - 17 8708 - 28 9155 - 46 7862", "x2": "add x_0_1 add x_0_2 sign mod INT+ 1 sqr relu add sub INT+ 3 add x_0_1 x_0_4 x_0_4", "tree": "(x_0_1 add (x_0_2 add sign((1 mod (relu(((3 sub (x_0_1 add x_0_4)) add x_0_4)))**2))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 3 + 9 - 3 + 8 + 0 + 144 + 225 + 121 + 225 + 100 + 100 + 100 + 121 + 121 + 121 + 196 + 196 + 196 + 121 + 121 + 121 + 196 + 196 + 196 + 121 + 121 + 121 + 196 + 196 + 196 + 121 + 121 + 121 + 196", "x2": "relu sqr add INT+ 1 0 sub mod x_0_6 INT+ 8 relu relu INT- 5", "tree": "relu(((10 add ((x_0_6 mod 8) sub relu(relu(-5)))))**2)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 8 - 22 - 111 - 852 - 8465 - 10 1502 - 142 923 - 2273 4632 - 4 922 3205 - 81 8446 3890 - 1800 5820 5327 - 4 3213 9692 7548 - 112 3563 2011 5897 - 3145 9769 6324 4710 - 9 4379 3088 9734 835 - 302 137 8847 1490 6192 - 1 268 4688 803 680 9933 - 36 9664 8770 8910 4515 6922 - 1404 7265 3293 8597 1596 2295 - 5 6189 613 1754 3886 3849 980 - 235 9940 5753 3684 3228 1662 257 - 1 383 7385 3148 2110 2039 3129 318 - 47 7651 9724 4817 7069 3808 3935 3547 - 2292 7294 6775 1249 9330 2802 8896 9080 - 11 4636 4733 8756 2496 6514 144 4845 2725 - 596 1096 6161 5324 9825 8728 7513 1954 322 - 3 2189 9217 2722 7549 597 1352 5712 5517 5903 - 180 2635 6167 2474 2747 3439 5743 9902 8984 8972 - 1 455 2865 7700 3507 9345 9495 3151 4368 1123 8665 - 62 7317 1946 2021 476 756 9718 9086 2086 7431 8070", "x2": "add n mul n mul add n x_0_1 INT+ 2", "tree": "(n add (n mul ((n add x_0_1) mul 2)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 5 + 10 + 2 + 5 + 3 - 2 + 40 + 45 + 100 + 22 + 60 + 39 - 28 + 600 + 720 + 1700 + 396 + 1140 + 780 - 588 + 1 3200 + 1 6560 + 4 800 + 9900 + 2 9640 + 2 1060 - 1 6464 + 38 2800 + 49 6800 + 126 4800 + 31 6800 + 97 8120 + 71 6040 - 57 6240 + 1378 800", "x2": "mul x_0_7 mul relu n idiv n n", "tree": "(x_0_7 mul (relu(n) mul (n idiv n)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 3 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275 + 299 + 324 + 350 + 377 + 405 + 434 + 464", "x2": "add abs n relu x_0_1", "tree": "(abs(n) add relu(x_0_1))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 8 + 27 + 68 + 130 + 222 + 350 + 528 + 747 + 1020 + 1353 + 1764 + 2236 + 2786 + 3420 + 4160 + 4981 + 5904 + 6935 + 8100 + 9366 + 1 758 + 1 2282 + 1 3968 + 1 5775 + 1 7732 + 1 9845 + 2 2148 + 2 4592", "x2": "mul add abs idiv n INT+ 4 mul n n n", "tree": "((abs((n idiv 4)) add (n mul n)) mul n)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 4 - 8 + 16 + 36 - 104 - 236 + 868 + 2020 - 8916 - 2 1352 + 10 9012 + 26 8660 - 154 7520 - 392 888 + 2502 8980 + 6510 7576 - 4 5444 2528 - 12 1201 4964 + 91 5395 8136 + 249 9787 1716 - 2025 9909 3956 - 5657 9709 1332 + 4 8873 7612 6660 + 13 9423 2818 9344 - 127 6375 7638 4492 - 371 5554 8498 5628 + 3587 7944 6695 5120 + 1 647 4714 8819 8720 - 10 8005 3894 9363 9228 - 32 6483 8216 6720 5200 + 346 6819 9352 8465 4016", "x2": "sub x_0_3 mul x_0_2 n", "tree": "(x_0_3 sub (x_0_2 mul n))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 + 7 - 10 - 1 + 10 + 7 + 11 + 17 + 17 + 17 + 19 + 19 + 24 + 36 + 49 + 63 + 80 + 98 + 98 + 6 + 19 + 33 + 50 + 68 + 68 + 71 + 88 + 3 + 3 + 28 + 28 + 31 + 48 + 49", "x2": "relu relu mod sub mod mod n INT- 1 0 x_0_6 abs n add relu x_0_1 n", "tree": "relu(relu(((((n mod -10) mod x_0_6) sub abs(n)) mod (relu(x_0_1) add n))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 9 - 1 + 10 + 25 + 30 + 0 + 40 + 45 + 50 + 0 + 60 + 65 + 70 + 0 + 80 + 85 + 90 + 0 + 100 + 105 + 110 + 0 + 120 + 125 + 130 + 0 + 140 + 145 + 150 + 0 + 160 + 165", "x2": "relu mul mod sub INT+ 5 sub n n x_0_4 n", "tree": "relu((((5 sub (n sub n)) mod x_0_4) mul n))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 6 - 6 - 6 - 6 - 7 - 7 - 7 - 7 - 8", "x2": "idiv n INT- 4", "tree": "(n idiv -4)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 9 - 5 - 6 - 10 - 1 + 6 - 7 + 8 + 0 + 8 + 2 + 3 + 6 + 10 + 6 + 14 + 14 + 11 + 12 + 16 + 8 + 22 + 18 + 0 + 14 + 9 + 0 + 18 + 8 + 15 + 20 + 26 + 32 + 33 + 16 + 17", "x2": "mod add add abs x_0_8 add mul INT+ 2 add x_0_1 INT- 7 n x_0_8 n", "tree": "(((abs(x_0_8) add ((2 mul (x_0_1 add -7)) add n)) add x_0_8) mod n)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 8 + 6 + 0 + 9 - 3 + 0 - 35 - 35 - 32 - 25 - 33 - 20 - 22 + 14 + 15 + 13 + 7 + 16 + 4 + 7 - 28 - 28 - 25 - 18 - 26 - 13 - 15 + 21 + 22 + 20 + 14 + 23 + 11 + 14 - 21", "x2": "sub n add sqr INT+ 6 x_0_7", "tree": "(n sub ((6)**2 add x_0_7))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 2 + 0 + 12 + 5 + 18 + 35 + 56 + 0 + 10 + 22 + 36 + 52 + 70 + 90 + 112 + 136 + 162 + 190 + 220 + 252 + 286 + 322 + 360 + 400 + 442 + 486 + 532 + 580 + 630", "x2": "mul n mod idiv INT+ 9 sign sub INT- 6 mul mul add n x_0_1 n INT+ 1 n", "tree": "(n mul ((9 idiv sign((-6 sub (((n add x_0_1) mul n) mul 1)))) mod n))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 7 + 14 - 14 + 21 - 28 + 42 - 56 + 84 - 112 + 161 - 224 + 315 - 441 + 623 - 868 + 1218 - 1701 + 2387 - 3339 + 4676 - 6545 + 9163 - 1 2824 + 1 7955 - 2 5137 + 3 5196 - 4 9273 + 6 8985 - 9 6579", "x2": "mul idiv x_0_1 relu abs relu INT+ 5 INT- 7", "tree": "((x_0_1 idiv relu(abs(relu(5)))) mul -7)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 + 1 - 1 + 5 + 10 + 3 + 0 + 4 + 29 + 34 + 40 + 28 + 20 + 31 + 59 + 60 + 41 + 24 + 10 + 33 + 69 + 59 + 12 - 6 - 1 + 39 + 89 + 56 - 27 - 35 + 17 + 69 + 119 + 47 - 86 - 61 + 47", "x2": "add mul INT+ 8 INT+ 4 add x_0_6 sub INT- 2 relu relu add sub idiv x_0_8 INT+ 1 INT- 8 INT- 8", "tree": "((8 mul 4) add (x_0_6 add (-2 sub relu(relu((((x_0_8 idiv 1) sub -8) add -8))))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 1 + 4 + 9 - 4 - 3 + 10 - 6 - 9 - 10 - 2 + 0 + 0 + 0 - 1 + 1 + 0 + 1 - 1 + 2 + 1 + 1 - 1 + 1 + 1 + 0 - 1 - 2 + 1 + 0 - 2 - 2 - 1 + 0 - 2 + 1 - 1 + 1 - 2", "x2": "add sign add x_0_4 mul x_0_5 x_0_8 idiv x_0_10 INT- 1 0", "tree": "(sign((x_0_4 add (x_0_5 mul x_0_8))) add (x_0_10 idiv -10))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 11 + 15 + 3 + 7 + 11 + 15 + 3 + 7 + 11 + 15 + 3 + 7 + 11 + 15 + 3 + 7 + 11 + 15 + 3 + 7 + 11 + 15 + 3 + 7 + 11 + 15 + 3 + 7 + 11", "x2": "add abs mod add mul sqr INT- 1 0 add INT- 9 n INT- 5 sqr INT- 4 abs sub n n", "tree": "(abs(((((-10)**2 mul (-9 add n)) add -5) mod (-4)**2)) add abs((n sub n)))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 1 + 3 + 10 - 1 - 7 + 3 + 6 + 12 + 11 + 14 + 22 + 12 + 7 + 18 + 22 + 29 + 29 + 33 + 42 + 33 + 29 + 41 + 46 + 54 + 55 + 60 + 70 + 62 + 59 + 72 + 78 + 87 + 89 + 95 + 106 + 99", "x2": "add x_0_8 n", "tree": "(x_0_8 add n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 3 + 8 + 7 - 9 + 3 - 2 + 0 + 3 + 1 + 3 + 9 + 9 + 2 + 0 + 12 + 15 + 14 + 9 + 10 + 18 + 0 + 10 + 8 + 10 + 16 + 16 + 9 + 0 + 19 + 22 + 21 + 16 + 17 + 25 + 0 + 17", "x2": "abs mod sub n x_0_7 n", "tree": "abs(((n sub x_0_7) mod n))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 1 + 0 - 1 + 3 + 3 - 2 - 3 + 10 + 11 - 2 - 3 + 10 + 11 - 2 - 3 + 10 + 11 - 2 - 3 + 10 + 11 - 2 - 3 + 10 + 11 - 2 - 3 + 10 + 11 - 2", "x2": "sub mod INT+ 8 n x_0_2", "tree": "((8 mod n) sub x_0_2)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 9 - 7 + 0 - 10 + 2 + 0 + 4 + 48 + 608 + 7768 + 9 9425 + 127 2625 + 1628 9582 + 2 850 6635 + 26 6888 4956 + 341 6172 8023 + 4372 7012 6440 + 5 5970 5771 7833 + 71 6423 4006 862 + 917 219 6906 8589 + 1 1737 8814 1258 4547 + 15 244 8847 4996 7129 + 192 3134 5589 6130 7244 + 2461 6122 7919 7485 9132 + 3 1508 6377 3343 3591 4690 + 40 3310 5701 5218 3976 8861 + 516 2375 3896 5015 1810 9975 + 6607 8406 1613 1008 4439 2191 + 8 4580 3613 8892 5755 5818 7137 + 108 2628 6450 959 5261 610 2559 + 1385 7646 9022 8404 7261 3297 1848 + 1 7737 7883 5000 9957 8288 3795 4304 + 22 7043 6949 1323 3161 7309 6558 3910 + 290 6159 3465 1313 8366 6578 7758 3980 + 3719 8840 2961 5223 2706 3216 7746 7091 + 4 7614 5164 2487 8471 7533 4930 2976 5856", "x2": "sub idiv abs sub mod INT- 9 mul x_0_1 sqr INT- 8 abs n INT+ 5 sub n abs x_0_7", "tree": "((abs(((-9 mod (x_0_1 mul (-8)**2)) sub abs(n))) idiv 5) sub (n sub abs(x_0_7)))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 4 + 6 - 3 + 7 - 2 + 8 - 1 + 9 + 0 + 10 + 1 + 11 + 2 + 12 + 3 + 13 + 4 + 14 + 5 + 15 + 6 + 16 + 7 + 17 + 8 + 18 + 9 + 19 + 10 + 20", "x2": "sub relu n x_0_1", "tree": "(relu(n) sub x_0_1)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 - 21 - 68 - 315 - 1854 - 1 2929 - 10 3368 - 93 231 - 930 2210 - 1 232 4189 - 12 2789 124 - 159 6257 1443 - 2234 7600 6 - 3 3521 3999 9865 - 53 6342 3999 7584 - 911 7820 7995 8639 - 1 6412 774 3925 5178 - 31 1829 4713 4584 8021 - 623 6589 4269 1696 20 - 1 3096 8377 9652 5615 9979 - 28 8130 4315 2356 3551 9054 - 662 6999 9250 4196 1693 7713 - 1 5904 7998 2010 708 650 4536 - 39 7619 9955 251 7701 6261 2775 - 1033 8119 8830 6546 242 2793 1474", "x2": "mul mod n x_0_1 n", "tree": "((n mod x_0_1) mul n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 3 + 9 + 1 + 0 + 0 - 6 + 10 - 10 - 1 - 7 - 3 + 10 - 5 + 10 - 10 - 7 + 4 - 13 + 10 - 11 + 8 + 1 - 12 + 15 - 23 + 4 - 6 - 5 + 12 - 23 + 24 - 22 - 8 + 10 - 28", "x2": "sub add x_0_7 abs add relu INT- 7 INT- 8 sub idiv x_0_11 n sub x_0_10 abs INT- 8", "tree": "((x_0_7 add abs((relu(-7) add -8))) sub ((x_0_11 idiv n) sub (x_0_10 sub abs(-8))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 6 + 8 + 0 + 4 + 1 + 5 + 2 + 6 + 3 + 7 + 4 + 8 + 5 + 9 + 6 + 10 + 7 + 11 + 8 + 12 + 9 + 13 + 10 + 14 + 11 + 15", "x2": "relu mul sign idiv sub x_0_1 x_0_1 n sub n x_0_1", "tree": "relu((sign(((x_0_1 sub x_0_1) idiv n)) mul (n sub x_0_1)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 8 - 20 - 67 - 285 - 1482 - 9139 - 6 5279 - 53 392 - 483 2461 - 4880 7857 - 5 4132 3505 - 65 4099 2353 - 855 3605 3847 - 1 2036 1447 1990 - 18 1344 5804 4650 - 291 2847 3234 2191 - 4968 9748 4583 7376 - 8 9717 6013 8317 4845 - 170 9356 4053 48 9153 - 3427 2595 9262 7480 7518 - 7 2135 6542 8292 1261 5379 - 159 263 2876 76 4174 8128 - 3664 5197 4968 8717 4463 776 - 8 8101 1623 1543 2915 2716 4907 - 220 6053 1043 7844 198 4020 9272 - 5744 2228 9101 6169 2858 3929 5275", "x2": "add mul n x_0_1 idiv x_0_1 n", "tree": "((n mul x_0_1) add (x_0_1 idiv n))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 2 + 0 + 4 + 10 + 18 + 28 + 40 + 54 + 70 + 88 + 108 + 130 + 154 + 180 + 208 + 238 + 270 + 304 + 340 + 378 + 418 + 460 + 504 + 550", "x2": "mul mod INT- 3 n mul n INT+ 1", "tree": "((-3 mod n) mul (n mul 1))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 - 9 + 10 - 6 + 5 - 5 + 8 - 5 - 9 - 10 + 11 - 12 - 13 + 14 + 15 + 16 - 17 + 18 + 19 - 20 - 21 - 22 + 23 - 24 - 25 + 26 + 27 + 28 - 29 + 30 + 31 - 32 - 33", "x2": "mul sign sub x_0_8 x_0_6 abs n", "tree": "(sign((x_0_8 sub x_0_6)) mul abs(n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 4 + 2 - 5 - 3 + 3 + 4 + 5 - 3 + 6 + 13 + 15 + 13 + 10 + 20 + 26 + 31 + 30 + 28 + 33 + 42 + 46 + 52 + 49 + 53 + 67 + 66 + 77 + 73 + 82 + 97 + 97", "x2": "add x_0_5 add mod mul sqr sqr sub sign INT- 4 x_0_6 x_0_6 INT- 8 n", "tree": "(x_0_5 add ((((((sign(-4) sub x_0_6))**2)**2 mul x_0_6) mod -8) add n))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 1 - 2 + 0 + 0 + 0 + 0 + 7 + 8 + 9 + 10 + 22 + 24 + 26 + 28 + 45 + 48 + 51 + 54 + 76 + 80 + 84 + 88 + 115 + 120 + 125", "x2": "mul n idiv sub add INT- 8 n INT- 5 INT+ 4", "tree": "(n mul (((-8 add n) sub -5) idiv 4))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2 + 4 + 0 + 2", "x2": "mod mul INT- 4 n INT+ 6", "tree": "((-4 mul n) mod 6)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 6 + 1 + 1 + 800 - 400 + 0 + 0 - 3 5200 + 1 6000 + 0 + 0 + 108 3200 - 45 6800 + 0 + 0 - 2548 6800 + 1015 1200 + 0 + 0 + 4 8546 3200 - 1 8456 7200 + 0 + 0 - 77 6741 1200 + 28 3949 5600 + 0 + 0 + 1071 3670 6400", "x2": "mul INT+ 8 mul INT- 5 mul INT+ 1 0 idiv x_0_4 n", "tree": "(8 mul (-5 mul (10 mul (x_0_4 idiv n))))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 - 9 + 3 - 10 - 4 - 6 + 1 - 5 - 2 - 3 + 0 - 2 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1", "x2": "mul idiv mul INT+ 4 x_0_4 n mod sign relu mod INT- 1 0 n relu n", "tree": "(((4 mul x_0_4) idiv n) mul (sign(relu((-10 mod n))) mod relu(n)))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 6 - 8 - 16 - 24 - 52 - 160 - 588 - 2296 - 9124 - 3 6432 - 14 5660 - 58 2568 - 233 196 - 932 704 - 3728 2732 - 1 4913 840 - 5 9652 3268 - 23 8609 2976 - 95 4437 1804 - 381 7748 7112 - 1527 994 8340 - 6108 3979 3248 - 2 4433 5917 2876 - 9 7734 3669 1384 - 39 937 4676 5412 - 156 3749 8706 1520", "x2": "mul INT- 4 abs mul mod INT+ 6 add n x_0_1 INT+ 1", "tree": "(-4 mul abs(((6 mod (n add x_0_1)) mul 1)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 0 - 8 - 9 - 6 - 4 + 4 + 5 + 2 + 0 - 12 - 14 - 8 - 4 + 8 + 10 + 4 + 0 - 20 - 24 - 12 - 4 + 16 + 20 + 8 + 0 - 36 - 44 - 20", "x2": "sub sub mod mod n n INT+ 9 sub relu x_0_4 INT- 4 x_0_4", "tree": "((((n mod n) mod 9) sub (relu(x_0_4) sub -4)) sub x_0_4)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 5 - 6 + 6 + 6 - 8 + 2 + 0 + 76 + 105 + 127 + 138 + 163 + 204 + 223 + 256 + 213 + 219 + 234 + 262 + 278 + 280 + 306 + 320 + 412 + 457 + 495 + 522 + 563 + 620 + 655 + 704 + 677", "x2": "sub sqr n x_0_8", "tree": "((n)**2 sub x_0_8)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 + 2 + 3 - 10 + 5 - 36 - 35 - 132 - 796 - 5429 - 3 7845 - 26 4742 - 185 3006 - 1297 839 - 9079 5655 - 6 3556 9352 - 44 4898 5216 - 311 4289 6249 - 2180 27 3465 - 1 5260 191 3962 - 10 6820 1339 7426 - 74 7740 9378 1659 - 523 4186 5647 1275 - 3663 9305 9529 8572 - 2 5647 5141 6708 9636 - 17 9532 5991 6962 7069", "x2": "sub n abs mul INT- 7 mod INT+ 6 add n mod mul sub INT+ 7 n sign x_0_1 x_0_1", "tree": "(n sub abs((-7 mul (6 mod (n add (((7 sub n) mul sign(x_0_1)) mod x_0_1))))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 2 - 2 + 2 - 2 - 4 - 2 - 12 - 11 - 22 - 33 - 46 - 72 - 102 - 147 - 230 - 334 - 500 - 771 - 1180 - 1821 - 2896 - 4535 - 7288 - 1 1785 - 1 9092 - 3 1468 - 5 2104", "x2": "add mul n idiv x_0_3 INT+ 1 0 x_0_2", "tree": "((n mul (x_0_3 idiv 10)) add x_0_2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 6 - 6 + 2 - 1 - 1 + 5 + 6 + 6 + 2 + 1 + 1 + 5 + 6 + 6 + 2 + 1 + 1 + 5 + 6 + 6 + 2 + 1 + 1 + 5 + 6 + 6 + 2 + 1 + 1 + 5 + 6", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 + 1 + 0 + 2 - 7 + 2 + 1 - 1 - 5 - 6 - 8 + 1 - 8 - 5 - 5 - 1 + 0 + 2 - 5 + 4 - 1 + 1 - 5 - 4 - 8 - 1 - 10 - 5 - 7 - 1 - 2 + 2", "x2": "sub sign mul add n n x_0_2 add x_0_7 INT+ 5", "tree": "(sign(((n add n) mul x_0_2)) sub (x_0_7 add 5))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 7 - 7 - 3 + 0 + 0 + 1 + 7 + 0 + 0 + 10 + 3 + 4 + 13 + 3 + 3 + 16 + 6 + 7 + 19 + 6 + 6 + 22 + 9 + 10 + 25 + 9 + 9 + 28", "x2": "mod n idiv add INT+ 8 x_0_3 relu sign idiv relu n n", "tree": "(n mod ((8 add x_0_3) idiv relu(sign((relu(n) idiv n)))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 3 - 3 - 1 - 4 - 6 + 10 + 10 - 9 - 20 - 7 - 7 - 9 - 6 - 4 - 20 - 20 - 1 + 10 - 3 - 3 - 1 - 4 - 6 + 10 + 10 - 9 - 20 - 7 - 7 - 9 - 6 - 4 - 20", "x2": "sub mul x_0_9 sign sub sub idiv INT- 7 n sqr n sign idiv n x_0_7 INT+ 1 0", "tree": "((x_0_9 mul sign((((-7 idiv n) sub (n)**2) sub sign((n idiv x_0_7))))) sub 10)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 7 - 9 + 2 + 9 + 9 + 7 + 15 - 81 - 145 - 153 - 145 - 217 + 543 + 1047 + 1103 + 1031 + 1599 - 4489 - 8529 - 8985 - 8417 - 1 2969 + 3 5727 + 6 8039 + 7 1679 + 6 7127 + 10 3535 - 28 6041 - 54 4545 - 57 3673", "x2": "add INT- 1 mul add n x_0_5 INT- 8", "tree": "(-1 add ((n add x_0_5) mul -8))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 9 + 8 + 1 - 3 + 10 + 12 + 7 + 0 + 27 + 10 + 11 + 0 + 0 + 42 + 15 + 16 + 0 + 0 + 19 + 20 + 42 + 0 + 0 + 48 + 50 + 26 + 0 + 0 + 58 + 60", "x2": "mul idiv mod x_0_5 sub sqr INT- 6 INT+ 8 INT+ 8 n", "tree": "(((x_0_5 mod ((-6)**2 sub 8)) idiv 8) mul n)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 9 + 10 + 4 + 3 + 5 - 5 - 4 + 1 - 1 + 0 + 0 + 0 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 0 + 1 + 1 + 1", "x2": "add sign idiv mod sub relu n INT+ 4 sign x_0_7 INT- 2 idiv relu x_0_7 INT- 6", "tree": "(sign((((relu(n) sub 4) mod sign(x_0_7)) idiv -2)) add (relu(x_0_7) idiv -6))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089", "x2": "sqr add INT+ 8 n", "tree": "((8 add n))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 10 + 8 - 5 - 5 - 2 - 3 - 8 - 1 - 9 - 17 - 18 - 16 - 18 - 24 - 18 - 27 - 36 - 38 - 37 - 40 - 47 - 42 - 52 - 62 - 65 - 65 - 69 - 77 - 73 - 84 - 95 - 99 - 100 - 105", "x2": "add sign sub x_0_10 n sub x_0_7 n", "tree": "(sign((x_0_10 sub n)) add (x_0_7 sub n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 9 - 7 + 4 - 4 + 2 - 8 - 8 + 0 + 484 + 81 + 1 + 441 + 64 + 625 + 256 + 81 + 21 7156 + 17 8084 + 1 0 + 17 5561 + 15 9201 + 28 9444 + 15 4449 + 4 0 + 471 1026 8401 + 15 2873 1801 + 282 6164 4544 + 274 84 3024 + 2 6863 2100 + 169 5516 4944 + 182 3229 729 + 131 612 8324 + 22 1937 3616 7908 9148 6689", "x2": "sqr sub add n x_0_9 x_0_8", "tree": "(((n add x_0_9) sub x_0_8))**2", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 21 - 29 - 25 - 15 - 5 - 1 - 9 - 35 - 85 - 165 - 281 - 439 - 645 - 905 - 1225 - 1611 - 2069 - 2605 - 3225 - 3935 - 4741 - 5649 - 6665 - 7795 - 9045", "x2": "sub INT+ 5 relu add n mul sqr add n mod sign sqr INT- 3 INT- 7 n", "tree": "(5 sub relu((n add (((n add (sign((-3)**2) mod -7)))**2 mul n))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 1 + 2 - 1 + 4 + 1 - 8 + 5 - 10 + 7 + 8 - 13 + 10 - 15 + 12 + 13 - 18 + 15 - 20 + 17 + 18 - 23 + 20 - 25 + 22 + 23 - 28 + 25 - 30 + 27 + 28", "x2": "sub idiv n sign idiv INT+ 9 x_0_5 INT+ 2", "tree": "((n idiv sign((9 idiv x_0_5))) sub 2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 10 - 6 - 7 - 4 - 7 - 10 - 9 - 12 - 9 - 18 - 13 - 20 - 21 - 17 - 25 - 27 - 24 - 33 - 36 - 34 - 44 - 48 - 47 - 58 - 63 - 63 - 75 - 81", "x2": "mul sub mod abs INT- 1 0 x_0_3 n sign mul idiv x_0_1 sub idiv n n mul n INT- 1 INT- 4", "tree": "(((abs(-10) mod x_0_3) sub n) mul sign(((x_0_1 idiv ((n idiv n) sub (n mul -1))) mul -4)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 5 - 1 - 14 - 25 - 16 - 27 - 28 - 69 - 40 - 71 - 92 - 33 - 114 - 75 - 76 - 137 - 38 - 119 - 180 - 121 - 152 - 43 - 214 - 65 - 216 - 127 - 148", "x2": "sub sub mul sub INT+ 7 relu mod add x_0_2 n add n INT- 2 INT+ 1 0 n sqr sqr INT- 3", "tree": "((((7 sub relu(((x_0_2 add n) mod (n add -2)))) mul 10) sub n) sub ((-3)**2)**2)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7 + 8 + 8", "x2": "mod idiv n INT+ 3 n", "tree": "((n idiv 3) mod n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 10 - 2 + 6 + 26 + 42 + 34 + 26 + 6 - 10 - 2 + 6 + 26 + 42 + 34 + 26 + 6 - 10 - 2 + 6 + 26 + 42 + 34 + 26 + 6 - 10 - 2 + 6 + 26", "x2": "sub n add mul relu INT+ 4 INT- 8 add x_0_4 n", "tree": "(n sub ((relu(4) mul -8) add (x_0_4 add n)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 9 + 8 + 2 - 4 + 3 - 9 - 8 + 2 - 4 + 3 + 9 - 8 + 2 - 4 - 3 + 9 - 8 + 2 + 4 - 3 + 9 - 8 - 2 + 4 - 3 + 9 + 8 - 2 + 4", "x2": "idiv x_0_5 mul sign x_0_5 sign sign mul INT- 1 0 x_0_4", "tree": "(x_0_5 idiv (sign(x_0_5) mul sign(sign((-10 mul x_0_4)))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 2 + 3 + 7 - 10 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1", "x2": "add add sign idiv x_0_4 mod n INT- 5 mod INT- 8 INT- 5 INT+ 3", "tree": "((sign((x_0_4 idiv (n mod -5))) add (-8 mod -5)) add 3)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 5 + 0 - 3 + 4 - 4 + 8 + 0 + 0 + 8 + 2 + 0 + 12 + 0 + 0 + 17 + 0 + 0 + 28 + 0 + 0 + 52 + 6 + 0 + 108 + 39 + 0 + 241 + 164 + 10 + 560 + 577", "x2": "relu add add x_0_3 add x_0_6 sub abs x_0_4 relu n x_0_3", "tree": "relu(((x_0_3 add (x_0_6 add (abs(x_0_4) sub relu(n)))) add x_0_3))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 2 - 8 + 5 + 4 - 2 - 1 - 3 - 11 - 20 - 70 - 114 - 138 - 164 - 192 - 207 - 223 - 240 - 258 - 277 - 297 - 318 - 340 - 363 - 387 - 412 - 438 - 465 - 493 - 522 - 552 - 583 - 615", "x2": "add mul idiv n sub add INT+ 1 x_0_7 INT+ 8 n x_0_1", "tree": "(((n idiv ((1 add x_0_7) sub 8)) mul n) add x_0_1)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 1 + 2 + 5 + 7 + 1 - 2 - 118 - 81 - 98 - 133 - 159 - 113 - 94 - 912 - 569 - 712 - 1017 - 1241 - 817 - 636 - 7988 - 4891 - 6168 - 8903 - 1 909 - 7083 - 5444 - 7 1602 - 4 3719 - 5 5202 - 7 9807", "x2": "add n mul INT- 9 abs add n x_0_7", "tree": "(n add (-9 mul abs((n add x_0_7))))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 5 + 8 + 7 - 4 - 8 + 8 - 4 - 2 - 3 - 4 - 4 - 3 + 4 + 3 - 2 - 4 + 4 - 2 - 1 - 2 - 2 - 2 - 2 + 2 + 1 - 1 - 2 + 2 - 1 - 1 - 1 - 1 - 1 - 1 + 1 + 0", "x2": "idiv x_0_11 INT+ 2", "tree": "(x_0_11 idiv 2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 4 + 4 - 1 - 1 - 9 - 1 + 9 + 20 + 65 + 45 + 50 + 15 + 60 + 115 + 175 + 405 + 310 + 340 + 170 + 400 + 680 + 985 + 2140 + 1670 + 1825 + 980 + 2135 + 3540 + 5070 + 1 850 + 8505 + 9285", "x2": "mul INT+ 5 mul sign n add x_0_7 n", "tree": "(5 mul (sign(n) mul (x_0_7 add n)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 4 - 2 + 40 + 24 - 14 + 320 + 216 - 140 + 3520 + 2592 - 1820 + 4 9280 + 3 8880 - 2 9120 + 83 7760 + 69 9840 - 55 3280 + 1675 5200 + 1469 6640 - 1217 2160 + 3 8536 9600 + 3 5271 9360 - 3 430 4000 + 100 1960 9600 + 95 2342 2720 - 85 2051 2000 + 2905 6867 8400", "x2": "mul add sign sign n relu n x_0_3", "tree": "((sign(sign(n)) add relu(n)) mul x_0_3)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 - 6 + 0 - 5 - 1 + 6 + 2 + 7 + 15 + 12 + 18 + 27 + 25 + 32 + 42 + 41 + 49 + 60 + 60 + 69 + 81 + 82 + 92 + 105 + 107 + 118 + 132 + 135", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "mod n INT- 3", "tree": "(n mod -3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 4 + 0 - 8 - 6 - 8 + 5 - 7 + 7 + 1 - 1 + 1 - 2 - 2 - 3 + 5 - 2 + 4 + 3 - 7 + 4 + 22 - 3 + 24 + 0 - 6 + 0 + 9 - 3 + 7 + 1 - 6 + 1 + 34", "x2": "idiv n add x_0_9 x_0_3", "tree": "(n idiv (x_0_9 add x_0_3))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 8 - 18 + 78 - 384 + 2310 - 1 6164 + 12 9318 - 116 3856 + 1163 8566 - 1 2802 4220 + 15 3629 646 - 199 7177 8392 + 2796 489 7494 - 4 1940 7346 2404 + 67 1051 7539 8470 - 1140 7879 8177 3984 + 2 534 1836 7193 1718 - 39 149 4897 6670 2636 + 780 2989 7953 3405 2726 - 1 6386 2785 7020 1510 7240 + 36 498 1285 4443 3235 9286 - 829 1456 9565 2196 4426 3572 + 1 9899 4966 9565 2714 6232 5734 - 49 7487 4173 9131 7865 5814 3344 + 1293 4672 8521 7426 4505 1172 6950", "x2": "sub add sign INT- 9 INT+ 7 mul n x_0_1", "tree": "((sign(-9) add 7) sub (n mul x_0_1))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 - 8 - 10 - 20 - 8 - 22 - 26 - 38 - 28 - 44 - 50 - 64 - 56 - 74 - 82 - 98 - 92 - 112 - 122 - 140 - 136 - 158 - 170 - 190 - 188 - 212 - 226 - 248", "x2": "add mul n INT- 2 x_0_4", "tree": "((n mul -2) add x_0_4)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "mod n INT- 3", "tree": "(n mod -3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 0 + 8 + 10 + 1 - 3 + 225 + 0 + 200 + 250 + 25 + 0 + 5625 + 0 + 5000 + 6250 + 625 + 0 + 14 625 + 0 + 12 5000 + 15 6250 + 1 5625 + 0 + 351 5625 + 0 + 312 5000 + 390 6250 + 39 625 + 0 + 8789 625", "x2": "mul relu x_0_6 sqr INT+ 5", "tree": "(relu(x_0_6) mul (5)**2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624", "x2": "sub mul n mod n add n INT+ 6 sign sign n", "tree": "((n mul (n mod (n add 6))) sub sign(sign(n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 0 - 10 + 2 + 10 + 2 + 1 - 1 + 2 + 3 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 5 + 6", "x2": "idiv add relu add sign x_0_2 n x_0_5 INT+ 6", "tree": "((relu((sign(x_0_2) add n)) add x_0_5) idiv 6)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 8 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sub relu INT- 2 sign x_0_2", "tree": "(relu(-2) sub sign(x_0_2))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 9 + 3 + 5 + 6 - 24 + 14 - 40 - 36 - 40 - 385 + 24 - 689 - 700 - 825 - 6416 + 119 - 1 2726 - 1 3661 - 1 6900 - 13 5177 + 2134 - 29 3227 - 32 8440 - 42 3125 - 351 5278 + 5 6889 - 821 1140 - 952 5601 - 1269 4650", "x2": "mul n sub x_0_5 n", "tree": "(n mul (x_0_5 sub n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 5 - 2 + 0 + 1 - 5 - 6 - 2 - 5 - 9 - 8 - 8 - 9 - 11 - 14 - 12 - 11 - 17 - 18 - 14 - 17 - 21 - 20 - 20 - 21 - 23 - 26", "x2": "sub sub mod x_0_1 sub INT- 1 INT+ 5 n INT- 5", "tree": "(((x_0_1 mod (-1 sub 5)) sub n) sub -5)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 17 + 49 + 113 + 241 + 497 + 1009 + 2033 + 4081 + 8177 + 1 6369 + 3 2753 + 6 5521 + 13 1057 + 26 2129 + 52 4273 + 104 8561 + 209 7137 + 419 4289 + 838 8593 + 1677 7201 + 3355 4417 + 6710 8849 + 1 3421 7713 + 2 6843 5441 + 5 3687 897", "x2": "add x_0_1 relu idiv relu add add INT+ 9 abs x_0_1 INT+ 6 sign add INT+ 5 n", "tree": "(x_0_1 add relu((relu(((9 add abs(x_0_1)) add 6)) idiv sign((5 add n)))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 0 - 9 + 0 - 6 - 8 + 1 - 1 + 45 + 0 - 99 + 0 - 78 - 112 + 15 - 16 + 765 + 0 - 1881 + 0 - 1638 - 2464 + 345 - 384 + 1 9125 + 0 - 5 787 + 0 - 4 7502 - 7 3920 + 1 695 - 1 2288 + 63 1125", "x2": "mul x_0_8 n", "tree": "(x_0_8 mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 1 + 2 + 2 - 84 - 54 + 168 + 3888 - 7056 - 7776 + 71 9712 + 44 3232 - 143 9424 - 5850 6624 + 1 363 8528 + 1 1701 3248 - 167 8944 1536 - 101 8015 2576 + 335 7888 3072 + 1 9545 8929 4592 - 3 4250 4607 3344 - 3 9091 7858 9184 + 760 3602 2828 2368 + 457 3738 9493 4528 - 1520 7204 5656 4736 - 11 5258 2215 2350 1056 + 20 735 1002 6654 5152 + 23 516 4430 4700 2112", "x2": "mul add mul mod mod sub INT+ 6 n INT+ 3 n mul INT- 5 n INT- 2 x_0_2", "tree": "((((((6 sub n) mod 3) mod n) mul (-5 mul n)) add -2) mul x_0_2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 5 - 3 + 3 + 0 + 2 + 53 - 50 - 37 + 20 - 10 + 14 + 679 - 710 - 565 + 310 - 180 + 242 + 1 2891 - 1 4210 - 1 1875 + 6810 - 4150 + 5798 + 32 2265 - 36 9470 - 32 635 + 19 670 - 12 360 + 17 3930 + 999 205", "x2": "mul add INT- 1 0 mul x_0_6 n sign n", "tree": "((-10 add (x_0_6 mul n)) mul sign(n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 1 1571 - 3857 - 965 - 193 - 33 - 5 - 1 + 143 - 71 874 7033 - 6 4624 9731 - 5385 4145 - 414 2627 - 29 5902 - 1 9727 - 1233 - 73 - 5 - 1 + 269 - 1466 1120 640 - 66 6414 5484 - 2 8974 5456 - 1207 2728 - 48 2910 - 1 8574", "x2": "mod idiv x_0_1 n mul add idiv n INT- 1 0 add sqr sqr x_0_1 INT- 9 sub INT- 7 n", "tree": "((x_0_1 idiv n) mod (((n idiv -10) add (((x_0_1)**2)**2 add -9)) mul (-7 sub n)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 0 - 18 + 36 + 35 - 18 + 14 + 56 + 162 + 290 + 462 + 684 + 962 + 1302 + 1710 + 2192 + 2754 + 3402 + 4142 + 4980 + 5922 + 6974 + 8142 + 9432 + 1 850 + 1 2402 + 1 4094", "x2": "mul add add sign x_0_2 sqr add mul n relu idiv abs x_0_2 x_0_2 INT- 4 INT- 8 n", "tree": "(((sign(x_0_2) add (((n mul relu((abs(x_0_2) idiv x_0_2))) add -4))**2) add -8) mul n)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 6 - 1 - 1 - 1 - 1 - 1 - 2 - 1 - 2 - 1 - 2 - 1 - 3 - 1 - 3 - 1 - 3 - 1 - 4 - 1 - 4 - 1 - 4 - 1 - 5 - 1", "x2": "idiv n mul mul INT- 6 INT+ 1 abs x_0_1", "tree": "(n idiv ((-6 mul 1) mul abs(x_0_1)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 1 - 3 - 8 + 1 + 0 - 4 - 8 - 1536 - 1734 - 1896 - 2040 - 2256 - 2436 - 2586 - 2736 + 6258 + 7272 + 8070 + 8760 + 9882 + 1 788 + 1 1514 + 1 2240 + 3 3198 + 3 9108 + 4 3722 + 4 7688 + 5 4246 + 5 9508 + 6 3690 + 6 7872 + 19 3446", "x2": "mul INT+ 3 sub mul abs x_0_8 abs idiv INT+ 5 INT- 3 mul add sqr INT- 7 INT+ 9 n", "tree": "(3 mul ((abs(x_0_8) mul abs((5 idiv -3))) sub (((-7)**2 add 9) mul n)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 42 + 210 - 840 + 2520 - 7560 + 2 2680 - 6 8040 + 20 4120 - 40 8240 + 81 6480 - 163 2960 + 326 5920 - 653 1840 + 1306 3680 - 2612 7360 + 5225 4720 - 1 450 9440 + 2 901 8880 - 4 1803 7760 + 8 3607 5520 - 16 7215 1040 + 33 4430 2080 - 66 8860 4160 + 133 7720 8320 - 267 5441 6640", "x2": "mul x_0_1 sub idiv INT- 1 0 n abs idiv n n", "tree": "(x_0_1 mul ((-10 idiv n) sub abs((n idiv n))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 5 + 10 - 9 + 2 + 4 - 10 + 24 - 5 + 22 + 6 + 4 + 41 - 1 + 61 + 17 + 43 + 65 + 22 + 122 + 37 + 126 + 105 + 89 + 212 + 85 + 275 + 170 + 244 + 347 + 205 + 519", "x2": "add x_0_7 idiv mul add x_0_5 n n n", "tree": "(x_0_7 add (((x_0_5 add n) mul n) idiv n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 10 - 3 - 11 - 4 - 12 - 5 - 13 - 6 - 14 - 7 - 15 - 8 - 16 - 9 - 17 - 10 - 18 - 11 - 19 - 12 - 20 - 13 - 21 - 14 - 22 - 15 - 23", "x2": "add x_0_2 idiv add abs sign n sqr INT- 1 INT- 1 0", "tree": "(x_0_2 add ((abs(sign(n)) add (-1)**2) idiv -10))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 7 - 7 - 5 + 2 - 4 + 7 + 7 + 5 + 2 + 4 + 7 + 7 + 5 + 2 + 4 + 7 + 7 + 5 + 2 + 4 + 7 + 7 + 5 + 2 + 4 + 7 + 7 + 5 + 2 + 4", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 7 - 10 - 1 - 2 + 7 + 10 + 1 + 2 + 7 + 10 + 1 + 2 + 7 + 10 + 1 + 2 + 7 + 10 + 1 + 2 + 7 + 10 + 1 + 2 + 7 + 10 + 1 + 2 + 7", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 4 - 10 - 5 + 5 + 4 + 5 - 7 + 7 + 5 + 0 + 0 + 3 + 9 + 1 + 0 + 2 + 16 + 1 + 1 + 4 + 20 + 0 + 1 + 1 + 17 + 0 + 0 + 9 + 1 + 1 + 0 + 0", "x2": "mod sqr sub x_0_8 abs sign INT- 6 n", "tree": "(((x_0_8 sub abs(sign(-6))))**2 mod n)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 10 - 10 + 6 + 6 + 6 - 10 - 10 - 10 + 6 + 6 + 6 - 10 - 10 - 10 + 6 + 6 + 6 - 10 - 10 - 10 + 6 + 6 + 6 - 10 - 10 - 10 + 6 + 6", "x2": "sub mod INT+ 5 INT- 9 x_0_3", "tree": "((5 mod -9) sub x_0_3)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 - 7 - 4 + 4 + 4 + 0 + 8 + 8 + 4 + 8 + 16 + 12 + 12 + 24 + 12 + 24 + 36 + 17 + 36 + 39 + 31 + 53 + 51 + 45 + 58 + 77 + 68 + 74", "x2": "add relu x_0_3 mod idiv x_0_4 sqr idiv INT- 9 add n INT+ 3 n", "tree": "(relu(x_0_3) add ((x_0_4 idiv ((-9 idiv (n add 3)))**2) mod n))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 2 - 9 + 57 + 62 + 69 + 3 - 2 - 9 + 57 + 62 + 69 + 3 - 2 - 9 + 57 + 62 + 69 + 3 - 2 - 9 + 57 + 62 + 69 + 3 - 2 - 9 + 57", "x2": "sub add abs relu sqr INT- 8 INT- 5 add x_0_3 sign INT- 2", "tree": "((abs(relu((-8)**2)) add -5) sub (x_0_3 add sign(-2)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 3 + 8 - 9 - 1 + 7 + 4 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784 - 841 - 900 - 961 - 1024", "x2": "mul sub relu mod INT+ 3 mul abs mod x_0_7 n sub x_0_3 sub INT+ 9 INT- 5 n n", "tree": "((relu((3 mod (abs((x_0_7 mod n)) mul (x_0_3 sub (9 sub -5))))) sub n) mul n)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 2 - 7 - 2 + 6 - 10 - 42 - 14 + 48 - 90 - 420 - 154 + 576 - 1170 - 5880 - 2310 + 9216 - 1 9890 - 10 5840 - 4 3890 + 18 4320 - 41 7690 - 232 8480 - 100 9470 + 442 3680 - 1044 2250 - 6054 480 - 2725 5690 + 1 2386 3040 - 3 282 5250", "x2": "mul n x_0_4", "tree": "(n mul x_0_4)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 + 10 + 14 + 19 + 25 + 32 + 40 + 49 + 59 + 70 + 82 + 95 + 109 + 124 + 140 + 157 + 175 + 194 + 214 + 235 + 257 + 280 + 304 + 329 + 355", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 4 + 4 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1", "x2": "sub mod sub INT- 2 n x_0_1 sign sub relu sqr mod sqr n abs INT+ 9 n", "tree": "(((-2 sub n) mod x_0_1) sub sign((relu((((n)**2 mod abs(9)))**2) sub n)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 3 - 10 - 6 - 10 + 5 - 2 - 6 - 7 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1", "x2": "idiv x_0_8 mul abs INT+ 5 n", "tree": "(x_0_8 idiv (abs(5) mul n))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 2 - 3 - 3 + 8 + 6 + 9 + 0 - 9 + 0 + 6 - 15 - 30 + 8 - 66 + 9 + 54 - 9 + 270 + 6 - 411 - 165 - 1612 - 138 - 1 7811 + 108 - 2 2203 + 1755 - 43 5234 - 1239 + 732 156 - 1 9432 + 3579 1098 - 26 1 + 77 5195 2882", "x2": "add x_0_9 mul x_0_10 x_0_6", "tree": "(x_0_9 add (x_0_10 mul x_0_6))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 3 + 9 - 10 - 10 + 1 - 5 - 3 - 72 - 1944 - 5 8320 - 256 6080 - 1 2317 1840 - 64 493 5680 - 4483 4549 7600 - 33 6259 1232 0 - 2690 729 8560 0 - 27 4387 4445 3120 0 - 2963 3844 93 6960 0 - 33 7825 8217 681 3440 0 - 4729 5615 389 5388 1600 0 - 69 5245 5410 7262 2059 5200 0 - 1 706 7813 3251 8379 7166 800 0 - 197 47 7651 8338 1867 8558 7200 0 - 3 7824 9170 9152 931 8628 3274 2400 0 - 756 4983 4183 418 6372 5665 4848 0 0 - 17 7020 6119 8831 7961 1180 5723 4432 0 0 - 4301 6008 7131 6126 4551 6879 796 6976 0 0 - 108 4003 4195 7166 3866 7025 3528 767 7952 0 0 - 3 1436 991 6757 8252 1343 7352 3142 2660 6080 0 0 - 943 829 7502 7347 5640 3120 5694 2679 8182 4000 0 0 - 29 2355 7222 5847 7744 8496 7376 5223 743 6544 0 0 0 - 1 290 9214 2349 8416 6187 851 6535 8522 1766 3488 0 0 0", "x2": "mul mul x_0_1 sub n abs sign mod sub add n x_0_2 n x_0_8 idiv n INT+ 3", "tree": "((x_0_1 mul (n sub abs(sign((((n add x_0_2) sub n) mod x_0_8))))) mul (n idiv 3))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 1 - 1 + 3 - 8 - 9 + 2 + 2 - 6 + 16 + 18 - 4 - 4 + 12 - 32 - 36 + 8 + 8 - 24 + 64 + 72 - 16 - 16 + 48 - 128 - 144 + 32 + 32 - 96 + 256 + 288", "x2": "mul INT- 2 mul relu sign add n mul INT+ 6 INT+ 6 x_0_5", "tree": "(-2 mul (relu(sign((n add (6 mul 6)))) mul x_0_5))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 10 + 3 - 7 - 2 - 2 - 7 + 7 + 2 + 1 + 13 + 4 + 10 + 11 + 7 + 22 + 18 + 18 + 31 + 23 + 30 + 32 + 29 + 45 + 42 + 43 + 57 + 50 + 58 + 61 + 59 + 76 + 74 + 76", "x2": "abs add x_0_8 n", "tree": "abs((x_0_8 add n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625", "x2": "sub sub mul n sign n sqr n n", "tree": "(((n mul sign(n)) sub (n)**2) sub n)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 10 + 10 + 5 + 5 + 88 + 98 + 98 + 48 + 49 + 879 + 979 + 979 + 479 + 489 + 8789 + 9789 + 9789 + 4789 + 4889 + 8 7889 + 9 7889 + 9 7889 + 4 7889 + 4 8889 + 87 8889 + 97 8889 + 97 8889 + 47 8889 + 48 8889", "x2": "add idiv INT- 1 0 n abs mul INT+ 1 0 abs x_0_5", "tree": "((-10 idiv n) add abs((10 mul abs(x_0_5))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 10 + 2 + 8 + 8 + 1 - 7 + 1 + 2 + 0 - 87 - 5 - 63 + 1 - 5 - 7 - 94 - 17 - 7 - 94 + 18 + 434 - 101 + 78 + 42 + 8829 - 313 - 3045 + 9487 + 1397 + 1 8221 - 89 1736 - 2 4421 - 12 7897 + 8376 716", "x2": "sub mul x_0_6 idiv x_0_9 sqr INT+ 1 INT+ 7", "tree": "((x_0_6 mul (x_0_9 idiv (1)**2)) sub 7)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 4 + 2 - 8 - 10 - 19 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600 - 650", "x2": "add sub add x_0_1 sub n x_0_1 sqr abs relu n idiv INT- 8 add n x_0_1", "tree": "(((x_0_1 add (n sub x_0_1)) sub (abs(relu(n)))**2) add (-8 idiv (n add x_0_1)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 5 - 2 + 2 - 5 + 2 + 10 + 1 + 5 + 8 + 12 + 5 + 12 + 20 + 11 + 15 + 18 + 22 + 15 + 22 + 30 + 21 + 25 + 28 + 32 + 25 + 32 + 40 + 31 + 35 + 38 + 42 + 35", "x2": "sub x_0_7 INT- 1 0", "tree": "(x_0_7 sub -10)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 9 - 7 + 0 + 12 + 10 + 3 - 9 - 7 + 0 + 12 + 10 + 3 - 9 - 7 + 0 + 12 + 10 + 3 - 9 - 7 + 0 + 12 + 10 + 3 - 9 - 7 + 0 + 12", "x2": "sub INT+ 3 x_0_3", "tree": "(3 sub x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 16 + 20 + 26 + 34 + 44 + 56 + 70 + 86 + 104 + 124 + 146 + 170 + 196 + 224 + 254 + 286 + 320 + 356 + 394 + 434 + 476 + 520 + 566 + 614 + 664", "x2": "relu add add sqr n add relu abs INT- 5 relu abs INT- 9 n", "tree": "relu((((n)**2 add (relu(abs(-5)) add relu(abs(-9)))) add n))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 9 - 5 - 6 - 10 - 5 - 6 - 12 - 14 - 19 - 15 - 17 - 24 - 27 - 33 - 30 - 33 - 41 - 45 - 52 - 50 - 54 - 63 - 68 - 76 - 75 - 80 - 90 - 96 - 105", "x2": "sub mod sign n x_0_5 n", "tree": "((sign(n) mod x_0_5) sub n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 6 + 7 - 10 - 7 + 4 + 10 + 10 + 486 + 3240 + 2376 + 6480 + 4914 + 7560 + 1 2150 + 1 3824 + 1 5606 + 1 7496 + 1 8468 + 2 1600 + 2 3814 + 2 1384 + 2 1114 + 3 1104 + 2 5650 + 3 888 + 3 9366 + 3 9312 + 3 7584 + 4 2120 + 4 6872 + 5 5296 + 4 2768", "x2": "mul mul n abs sub n abs mod mod x_0_8 n INT+ 1 0 mul INT- 9 INT- 6", "tree": "((n mul abs((n sub abs(((x_0_8 mod n) mod 10))))) mul (-9 mul -6))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 6 - 110 - 150 - 171 - 209 - 251 - 290 - 329 - 368 - 407 - 447 - 486 - 526 - 566 - 605 - 645 - 685 - 725 - 764 - 804 - 844 - 884 - 924 - 964 - 1004 - 1043", "x2": "sub idiv sub mul INT+ 7 INT+ 5 sub x_0_2 sign mul INT+ 2 sqr INT+ 1 n mul mul n INT+ 5 INT+ 8", "tree": "((((7 mul 5) sub (x_0_2 sub sign((2 mul (1)**2)))) idiv n) sub ((n mul 5) mul 8))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 - 8 - 1 - 4 - 6 + 36 + 41 + 64 + 80 + 67 + 4 - 14 - 7 + 22 + 64 + 13 + 277 + 304 - 33 + 60 - 255 - 18 + 313 + 492 + 69 + 430 + 407 - 170 + 432 - 352", "x2": "sub mod x_0_5 mul n n mod INT- 9 x_0_4", "tree": "((x_0_5 mod (n mul n)) sub (-9 mod x_0_4))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 6 + 1 - 4 - 5 - 3 + 2402 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281 + 81 0 + 92 3521", "x2": "add sqr sqr n relu sub sub add INT+ 9 idiv x_0_3 relu x_0_6 mod n n n", "tree": "(((n)**2)**2 add relu((((9 add (x_0_3 idiv relu(x_0_6))) sub (n mod n)) sub n)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 6 + 3 + 10 - 9 - 3 - 8 + 2 + 6 - 7 - 36 - 5 + 0 - 41 - 34 - 138 - 184 - 150 + 0 - 256 - 590 - 558 - 1796 - 3130 + 0 - 2572 - 7680 - 5394 - 2 3840 - 4 1360 + 0 - 3 3318 - 9 9772 - 7 1526 - 30 9008", "x2": "mul add x_0_9 add add x_0_3 x_0_5 INT- 2 mod n INT+ 6", "tree": "((x_0_9 add ((x_0_3 add x_0_5) add -2)) mul (n mod 6))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 + 0 - 9 - 5 + 5 + 7 + 4 + 7 - 6 + 7 - 99 + 0 - 117 - 70 + 75 + 112 + 68 + 126 - 114 + 140 - 2079 + 0 - 2691 - 1680 + 1875 + 2912 + 1836 + 3528 - 3306 + 4200 - 6 4449 + 0 - 8 8803 - 5 7120 + 6 5625", "x2": "mul x_0_10 n", "tree": "(x_0_10 mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 48 + 135 + 280 + 495 + 792 + 1183 + 1680 + 2295 + 3040 + 3927 + 4968 + 6175 + 7560 + 9135 + 1 912 + 1 2903 + 1 5120 + 1 7575 + 2 280 + 2 3247 + 2 6488 + 3 15 + 3 3840 + 3 7975", "x2": "mul mul sub n mul mul INT- 3 sign INT- 8 INT- 2 abs sub sub idiv n n n n n", "tree": "(((n sub ((-3 mul sign(-8)) mul -2)) mul abs((((n idiv n) sub n) sub n))) mul n)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 - 8 - 6 + 2 + 6 + 6 + 6 + 2 + 9 + 8 + 1 - 2 - 1 + 0 + 5 - 1 - 8 + 0 + 4 + 4 + 4 + 0 + 7 + 15 + 8 - 4 - 3 - 2 + 3 - 3 - 10", "x2": "sub mod n add sign add INT+ 8 idiv x_0_6 INT- 6 abs INT+ 8 x_0_7", "tree": "((n mod (sign((8 add (x_0_6 idiv -6))) add abs(8))) sub x_0_7)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 3 + 4 - 1 - 6 + 4 + 7 - 5 + 1 + 0 + 6 + 5 + 1 + 1 + 0 + 6 + 9 + 1 + 1 + 0 + 16 + 18 + 1 + 1 + 0 + 6 + 12 + 1 + 1 + 0 + 6 + 20 + 1", "x2": "mod sqr idiv x_0_5 sign idiv x_0_7 add INT- 1 INT+ 1 n", "tree": "(((x_0_5 idiv sign((x_0_7 idiv (-1 add 1)))))**2 mod n)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 2 + 10 + 0 + 11 + 0 + 17 + 6 + 23 + 12 + 29 + 18 + 35 + 24 + 41 + 30 + 47 + 36 + 53 + 42 + 59 + 48 + 65 + 54 + 71 + 60 + 77", "x2": "add mod INT+ 6 n x_0_2", "tree": "((6 mod n) add x_0_2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 + 2 + 3 + 9 + 25 + 117 + 33 + 117 + 27 + 140 + 421 + 1683 + 3277 + 5618 + 2 2520 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481", "x2": "mod sqr sqr n add add x_0_1 abs mul x_0_1 abs add INT- 5 INT+ 9 n", "tree": "(((n)**2)**2 mod ((x_0_1 add abs((x_0_1 mul abs((-5 add 9))))) add n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 1 + 1 + 1", "x2": "idiv INT- 5 idiv abs sub n INT- 1 INT- 9", "tree": "(-5 idiv (abs((n sub -1)) idiv -9))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 10 - 3 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 4 - 8 - 3 - 7 + 2 - 1 + 5 + 2 + 12 + 10 + 17 + 15 + 26 + 25 + 33 + 32 + 44 + 44 + 53 + 53 + 66 + 67 + 77 + 78", "x2": "add x_0_4 mod n add sqr abs n mul x_0_2 x_0_5", "tree": "(x_0_4 add (n mod ((abs(n))**2 add (x_0_2 mul x_0_5))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 3 - 2 - 2 - 1 - 1 + 0 + 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7", "x2": "sub idiv n INT+ 2 INT+ 3", "tree": "((n idiv 2) sub 3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 7 + 12 + 42 + 199 + 1153 + 7873 + 6 1832 + 54 8616 + 542 4329 + 5911 9004 + 7 400 3720 + 90 9292 9357 + 1265 9700 7279 + 1 8898 6217 9829 + 30 1111 9786 9986 + 510 5 160 9934 + 9149 8978 3110 8827 + 17 3338 582 8945 7780 + 345 7611 2679 5804 6774 + 7243 6498 5688 2952 4475 + 15 9014 5357 2462 9149 1677", "x2": "add x_0_1 sub sub mul x_0_1 n abs x_0_1 add abs x_0_2 sign INT- 7", "tree": "(x_0_1 add (((x_0_1 mul n) sub abs(x_0_1)) sub (abs(x_0_2) add sign(-7))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 3 + 10 + 2 - 7 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1", "x2": "idiv x_0_5 mul n sub idiv sqr INT- 7 n x_0_1", "tree": "(x_0_5 idiv (n mul (((-7)**2 idiv n) sub x_0_1)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 9 + 8 + 5 - 6 + 8 + 3 + 4 + 10 + 8 + 5 + 5 + 15 + 9 + 6 + 8 + 19 + 12 + 7 + 13 + 24 + 13 + 9 + 19 + 25 + 18 + 14 + 19 + 31", "x2": "add add x_0_4 mod x_0_9 INT+ 7 relu sign mul INT- 9 sqr INT- 1 0", "tree": "((x_0_4 add (x_0_9 mod 7)) add relu(sign((-9 mul (-10)**2))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 7 - 7 - 1 + 9 - 8 - 5 - 9 - 49 - 65 - 89 - 119 - 124 - 151 - 173 - 161 - 175 - 183 - 187 - 218 - 229 - 247 - 301 - 331 - 369 - 413 - 432 - 473", "x2": "sub relu n add x_0_7 sqr n", "tree": "(relu(n) sub (x_0_7 add (n)**2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 3 - 9 - 8 - 3 + 3 + 5 - 8 + 3 + 23 + 8 + 204 + 441 + 45 + 33 + 92 + 203 + 183 + 0 + 102 + 2 101 + 17 3386 + 224 + 17 + 4201 + 2 720 + 274 + 2 + 1668", "x2": "mod add mul sub sub n x_0_8 x_0_3 n mod relu x_0_4 INT+ 5 sqr add n sub INT+ 2 x_0_9", "tree": "(((((n sub x_0_8) sub x_0_3) mul n) add (relu(x_0_4) mod 5)) mod ((n add (2 sub x_0_9)))**2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 64 + 729 + 4096 + 1 5625 + 4 6656 + 11 7649 + 26 2144 + 53 1441 + 100 0 + 177 1561 + 298 5984 + 482 6809 + 752 9536 + 1139 625 + 1677 7216 + 2413 7569 + 3401 2224 + 4704 5881 + 6400 0", "x2": "sqr mul mul n n n", "tree": "(((n mul n) mul n))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 36 - 30 - 22 - 12 + 0 + 14 + 30 + 48 + 68 + 90 + 114 + 140 + 168 + 198 + 230 + 264 + 300 + 338 + 378 + 420", "x2": "mul sub add n sign INT+ 6 INT+ 6 sub n INT- 8", "tree": "(((n add sign(6)) sub 6) mul (n sub -8))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 12 + 12 + 13 + 15 + 3 + 3 + 3 + 5 + 7 + 1 + 1 + 2 + 3 + 4 + 1 + 1 + 1 + 2 + 3 + 0", "x2": "idiv sub abs mul sqr mod n INT+ 5 INT+ 3 sub idiv INT+ 7 n sqr INT- 4 n", "tree": "((abs((((n mod 5))**2 mul 3)) sub ((7 idiv n) sub (-4)**2)) idiv n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 3 + 7 + 15 + 23 + 23 + 37 + 23 + 41 + 79 + 68 + 14 + 25 + 35 + 98 + 130 + 136 + 26 + 313 + 367 + 182", "x2": "mod add INT- 2 sqr x_0_1 sqr n", "tree": "((-2 add (x_0_1)**2) mod (n)**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 4 + 1 + 8 + 8 + 2 + 3 + 10 + 10 + 4 + 5 + 12 + 12 + 6 + 7 + 14 + 14 + 8 + 9 + 16 + 16 + 10 + 11", "x2": "add n sub sub INT+ 6 relu x_0_2 mod sign mod INT- 2 x_0_1 INT+ 7", "tree": "(n add ((6 sub relu(x_0_2)) sub (sign((-2 mod x_0_1)) mod 7)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 - 7 + 4 + 4 - 10 + 5 + 10 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mul x_0_7 INT+ 1", "tree": "sign((x_0_7 mul 1))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 4 + 6 + 10 + 19 + 38 + 61 + 93 + 144 + 218 + 324 + 481 + 712 + 1049 + 1543 + 2268 + 3330 + 4886 + 7167 + 1 510 + 1 5409 + 2 2589 + 3 3112 + 4 8534", "x2": "add add add x_0_1 mul INT+ 4 idiv n n sqr INT- 3 x_0_3", "tree": "(((x_0_1 add (4 mul (n idiv n))) add (-3)**2) add x_0_3)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 2 - 10 + 1 - 10 + 3 + 9 + 8 + 9 - 10 + 11 - 12 + 13 + 14 + 15 + 16 - 17 + 18 - 19 + 20 + 21 + 22 + 23 - 24 + 25 - 26 + 27", "x2": "mul mul sign x_0_7 n relu sign n", "tree": "((sign(x_0_7) mul n) mul relu(sign(n)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 3 + 9 + 5 - 5 + 2 + 9 + 0 + 0 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 - 1 + 0 - 1", "x2": "idiv sign mul add abs idiv n add sqr abs x_0_2 sqr n n x_0_7 INT- 4", "tree": "(sign(((abs((n idiv ((abs(x_0_2))**2 add (n)**2))) add n) mul x_0_7)) idiv -4)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 2 - 2 + 9 + 5 + 3 + 6 + 2 + 6 + 4 + 7 + 3 + 7 + 5 + 8 + 4 + 8 + 6 + 9 + 5 + 9 + 7 + 10 + 6", "x2": "add sub mod n idiv n sign idiv INT+ 2 sub INT- 5 x_0_2 INT- 1 relu mod x_0_4 n", "tree": "(((n mod (n idiv sign((2 idiv (-5 sub x_0_2))))) sub -1) add relu((x_0_4 mod n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4", "x2": "mod n mul INT- 8 INT+ 1", "tree": "(n mod (-8 mul 1))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 9 + 6 + 2 + 6 - 4 + 35 + 3 + 35 + 5 + 28 + 5 - 61 + 23 - 54 + 23 + 3609 + 16 + 2855 - 3568 + 3602 - 2807 - 1 1468 + 1272 3535 - 7698 + 787 6435", "x2": "sub mod add INT- 7 x_0_4 sqr x_0_4 relu add mod n mul INT- 8 n sub x_0_3 mul x_0_6 INT- 5", "tree": "(((-7 add x_0_4) mod (x_0_4)**2) sub relu(((n mod (-8 mul n)) add (x_0_3 sub (x_0_6 mul -5)))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 10 + 3 - 9 + 5 - 3 - 2 + 3 + 18 + 0 + 14 + 3 + 18 + 11 + 13 + 19 + 35 + 18 + 33 + 23 + 39 + 33 + 36 + 43 + 60 + 44 + 60 + 51", "x2": "add x_0_8 n", "tree": "(x_0_8 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 1 - 8 + 37 + 9 + 189 + 77 + 797 + 349 + 3229 + 1437 + 1 2957 + 5789 + 5 1869 + 2 3197 + 20 7517 + 9 2829 + 83 109 + 37 1357 + 332 477 + 148 5469 + 1328 1949 + 594 1917", "x2": "sub mul INT- 9 INT- 5 add mul INT- 4 x_0_2 sqr INT+ 2", "tree": "((-9 mul -5) sub ((-4 mul x_0_2) add (2)**2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 4 + 10 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "idiv sign sqr sign n sign x_0_3", "tree": "(sign((sign(n))**2) idiv sign(x_0_3))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 0 + 7 + 80 + 0 + 70 + 800 + 0 + 700 + 8000 + 0 + 7000 + 8 0 + 0 + 7 0 + 80 0 + 0 + 70 0 + 800 0 + 0 + 700 0 + 8000 0 + 0", "x2": "mul INT+ 1 0 x_0_3", "tree": "(10 mul x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 - 4 - 8 - 2 + 1 - 1 + 8 + 4 + 1 + 1 + 1 + 1 + 1 + 1 + 14 + 15 + 1 + 1 + 1 + 1 + 1 + 1 + 22 + 23 + 1 + 1 + 1 + 1", "x2": "mod sign sub sign mod sqr n sign abs sign n x_0_8 n", "tree": "(sign((sign(((n)**2 mod sign(abs(sign(n))))) sub x_0_8)) mod n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 5 - 1 - 1 + 7 + 9 + 8 + 16 + 19 + 66 + 34 + 32 + 300 + 1067 + 825 + 430 + 5 1701 + 18 5734 + 30 4040 + 21 4926 + 20 7362 1968 + 8 5247 6913 + 47 8442 7159 + 85 3729 9586 + 40 6002 4605 2514 4651", "x2": "add sqr mod x_0_2 x_0_4 add add INT+ 2 x_0_3 INT+ 7", "tree": "(((x_0_2 mod x_0_4))**2 add ((2 add x_0_3) add 7))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576", "x2": "abs add x_0_1 mul x_0_1 INT+ 1", "tree": "abs((x_0_1 add (x_0_1 mul 1)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 6 + 4 - 1 + 0 - 3 + 3 - 7 + 6 + 23 - 2 + 8 - 28 + 65 - 29 - 288 + 55 + 231 + 227 - 873 + 91 + 3818 - 612 - 5840 - 1603 + 1 4801 + 920 - 5 2108 + 5291", "x2": "sub abs x_0_8 sub x_0_2 mul x_0_6 INT- 1 0", "tree": "(abs(x_0_8) sub (x_0_2 sub (x_0_6 mul -10)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 2 + 9 - 3 - 13 - 5 + 7 - 2 - 15 - 9 + 5 - 2 - 17 - 13 + 3 - 2 - 16 - 17 - 2 - 2 - 20 - 21 + 18", "x2": "sub mul idiv idiv abs x_0_2 INT+ 4 INT- 4 x_0_2 n", "tree": "((((abs(x_0_2) idiv 4) idiv -4) mul x_0_2) sub n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 10 - 10 + 1 + 7 - 4 + 72 + 84 + 24 + 81 + 60 + 814 + 1032 + 338 + 1162 + 930 + 1 3056 + 1 7578 + 6120 + 2 2116 + 1 8640 + 27 4218 + 38 6760 + 14 806 + 53 832 + 46 6050", "x2": "add relu add mul abs x_0_5 n n n", "tree": "(relu(((abs(x_0_5) mul n) add n)) add n)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 1 + 11 + 89 + 0 + 15 + 525 + 0 + 59 + 2950 + 0 + 246 + 0 + 18 + 3780 + 0 + 223 + 2 4084 + 0 + 1205 + 0 + 55", "x2": "relu sub mul sub n idiv x_0_1 n mul abs x_0_1 n idiv abs x_0_2 mul INT- 1 n", "tree": "relu((((n sub (x_0_1 idiv n)) mul (abs(x_0_1) mul n)) sub (abs(x_0_2) idiv (-1 mul n))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 7 + 2 + 5 + 12 + 16 + 23 + 31 + 42 + 59 + 83 + 117 + 167 + 240 + 346 + 501 + 728 + 1060 + 1546 + 2258 + 3301 + 4829 + 7068 + 1 349", "x2": "add abs mod mul idiv n sign add n sqr INT+ 4 INT- 1 x_0_3 add INT+ 3 x_0_1", "tree": "(abs((((n idiv sign((n add (4)**2))) mul -1) mod x_0_3)) add (3 add x_0_1))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 6 - 2 - 4 + 1 - 4 + 6 - 3 - 8 - 4 + 17 - 5 + 3 - 7 - 3 - 6 + 1 - 5 + 8 - 4 - 9 - 5 + 29 - 6 + 3 - 8 - 4", "x2": "idiv sub n INT- 7 x_0_6", "tree": "((n sub -7) idiv x_0_6)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 2 - 3 + 6 + 1 + 60 + 5 + 0 + 59 + 4 - 1 + 58 + 3 + 62 + 57 + 2 + 61 + 56 + 1 + 60 + 55 + 0 + 59", "x2": "add sign sub sqr idiv n INT- 5 idiv x_0_2 relu sub INT- 4 INT+ 7 mod x_0_3 sqr INT- 8", "tree": "(sign((((n idiv -5))**2 sub (x_0_2 idiv relu((-4 sub 7))))) add (x_0_3 mod (-8)**2))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 - 2 + 9 - 72 - 12 - 300 - 392 - 1312 - 2840 - 6896 - 1 6696 - 3 9040 - 9 4472 - 22 3056 - 53 4168 - 127 240 - 302 9032 - 721 7776 - 1719 7240 - 4098 7392 - 9766 232 - 2 3273 8704 - 5 5459 680", "x2": "mul sub add sub n x_0_2 n x_0_3 INT- 4", "tree": "((((n sub x_0_2) add n) sub x_0_3) mul -4)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 0 + 4 - 7 - 5 - 2 - 9 - 12 + 0 - 8 + 14 + 10 + 4 + 18 + 24 + 0 + 16 - 28 - 20 - 8 - 36 - 48 + 0 - 32 + 56 + 40 + 16", "x2": "mul x_0_7 INT- 2", "tree": "(x_0_7 mul -2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 5 - 9 - 6 + 25 + 30 + 35 + 56 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sub sqr n relu mul n idiv x_0_4 INT- 4", "tree": "((n)**2 sub relu((n mul (x_0_4 idiv -4))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 + 10 - 10 + 2 - 2 - 2 + 2 + 2 - 2 + 2 + 2 + 2 - 2 - 2 - 2 - 2 + 2 - 2 + 2 - 2 - 2 + 2 + 2 - 2", "x2": "idiv x_0_1 sign x_0_4", "tree": "(x_0_1 idiv sign(x_0_4))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 5 + 6 - 4 - 4 - 9 - 5 + 4 - 134 - 134 - 200 - 80 - 80 - 470 - 134 - 80 - 10 7720 - 10 7720 - 23 9984 - 3 8384 - 3 8384 - 132 5384 - 10 7720 - 3 8384 - 696 2159 384 - 696 2159 384 - 3455 5392 1520 - 88 3998 8720", "x2": "add mul mul x_0_8 INT- 6 x_0_8 mul abs INT- 8 INT+ 2", "tree": "(((x_0_8 mul -6) mul x_0_8) add (abs(-8) mul 2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 10 + 7 + 4 - 3 + 3 + 1 - 4 + 1 - 2 + 2 + 4 - 6 + 6 + 19 - 5 + 21 - 11 + 11 + 6 - 5 + 4 + 1 - 6 + 1 - 3 + 2 + 5", "x2": "sub idiv sub n INT- 4 x_0_8 relu sub INT- 6 sqr INT+ 5", "tree": "(((n sub -4) idiv x_0_8) sub relu((-6 sub (5)**2)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 4 - 2 + 1 + 2 - 90 - 970 - 9770 - 9 7750 - 97 7570 - 977 5770 - 9775 7770 - 9 7757 7770 - 97 7577 7770 - 977 5777 7770 - 9775 7777 7770 - 9 7757 7777 7770 - 97 7577 7777 7770 - 977 5777 7777 7770 - 9775 7777 7777 7770 - 9 7757 7777 7777 7770 - 97 7577 7777 7777 7770 - 977 5777 7777 7777 7770 - 9775 7777 7777 7777 7770 - 9 7757 7777 7777 7777 7770", "x2": "mul sub relu add abs x_0_1 INT- 1 sub INT- 7 sign mul add x_0_4 x_0_5 x_0_2 INT- 1 0", "tree": "((relu((abs(x_0_1) add -1)) sub (-7 sub sign(((x_0_4 add x_0_5) mul x_0_2)))) mul -10)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 7 + 5 - 10 + 133 - 1285 + 1 2880 - 12 8627 + 128 5025 - 1283 7330 + 1 2824 4713 - 12 8116 2065 + 127 9878 3360 - 1278 5958 8847 + 1 2773 1472 6445 - 12 7603 4848 1050 + 127 4756 2522 1693 - 1273 4789 3749 445 + 1 2722 290 2642 3440 - 12 7092 8146 3901 2667 + 126 9654 6674 5263 6265 - 1268 3824 6454 9993 9170 + 1 2671 1153 6403 6037 9073 - 12 6584 1881 7361 5115 4425", "x2": "mod x_0_3 mul INT- 1 0 add INT- 4 x_0_1", "tree": "(x_0_3 mod (-10 mul (-4 add x_0_1)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 4 - 7 + 0 + 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0", "x2": "mod n sub sub mod INT+ 4 sign n add INT+ 1 0 INT- 7 x_0_2", "tree": "(n mod (((4 mod sign(n)) sub (10 add -7)) sub x_0_2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign mod n INT- 1 0", "tree": "sign((n mod -10))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 9 - 9 + 1 + 9 - 9 + 1 + 9 - 9 + 1 + 9 - 9 + 1 + 9 - 9 + 1 + 9 - 9 + 1 + 9 - 9 + 1 + 9", "x2": "add n sub x_0_3 n", "tree": "(n add (x_0_3 sub n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 + 4 - 8 + 3 + 3 + 1 + 11 + 0 + 12 + 13 + 12 + 23 + 13 + 26 + 28 + 28 + 40 + 31 + 45 + 48 + 49 + 62 + 54 + 69 + 73", "x2": "add n x_0_5", "tree": "(n add x_0_5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 10 + 5 + 3 - 2 + 10 - 8 - 4 - 4 - 8 - 5 - 10 - 9 + 20 - 20 + 48 + 32 - 164 + 32 - 435 - 670 + 90 + 1060 + 1 6260 - 960 + 1536 - 5248 + 103 4976 + 91 1325 + 5 6950 - 6 300", "x2": "mul mod x_0_10 add idiv sub x_0_6 n sub INT+ 5 INT+ 1 0 add x_0_4 x_0_4 x_0_9", "tree": "((x_0_10 mod (((x_0_6 sub n) idiv (5 sub 10)) add (x_0_4 add x_0_4))) mul x_0_9)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 3 - 4 + 2 + 5 - 7 - 218 - 219 - 213 - 210 - 222 - 433 - 434 - 428 - 425 - 437 - 648 - 649 - 643 - 640 - 652 - 863 - 864 - 858 - 855 - 867", "x2": "add INT+ 1 add mul INT- 9 mul abs INT- 4 INT+ 6 x_0_5", "tree": "(1 add ((-9 mul (abs(-4) mul 6)) add x_0_5))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 + 7 + 2 - 9 + 3 - 4 + 4 + 10 + 27 + 77 + 226 + 672 + 2009 + 6019 + 1 8048 + 5 4134 + 16 2391 + 48 7161 + 146 1470 + 438 4396 + 1315 3173 + 3945 9503 + 1 1837 8492 + 3 5513 5458 + 10 6540 6355 + 31 9621 9045 + 95 8865 7114", "x2": "add abs mul x_0_1 relu sub INT+ 5 add x_0_7 sub INT+ 2 x_0_7 sub INT+ 6 n", "tree": "(abs((x_0_1 mul relu((5 sub (x_0_7 add (2 sub x_0_7)))))) add (6 sub n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 2 - 6 + 0 + 10 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "mul sign mul n add n x_0_4 sqr n", "tree": "(sign((n mul (n add x_0_4))) mul (n)**2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6", "x2": "mod add INT+ 6 n INT- 8", "tree": "((6 add n) mod -8)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 + 5 + 4 + 9 + 2 - 9 + 9 - 10 - 8 + 17 - 15 + 7 + 5 - 51 + 62 - 55 - 14 + 85 - 131 + 159 - 88 - 146 + 308 - 454", "x2": "sub sub sub x_0_3 add n mod idiv x_0_1 n sub INT- 1 add sub n x_0_3 n x_0_4 x_0_1", "tree": "(((x_0_3 sub (n add ((x_0_1 idiv n) mod (-1 sub ((n sub x_0_3) add n))))) sub x_0_4) sub x_0_1)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 8 - 3 - 2 + 30 - 1 + 179 + 195 + 191 + 161 + 99 - 1 + 1583 + 1689 + 1763 + 1799 + 1791 + 1733 + 1619 + 1443 + 1199 + 881", "x2": "add idiv sub INT- 7 INT- 2 n mul sqr n mod x_0_1 n", "tree": "(((-7 sub -2) idiv n) add ((n)**2 mul (x_0_1 mod n)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 25 + 9 + 4 + 4 + 1 + 4 + 4 + 4 + 4 + 1 + 4 + 4 + 4 + 4 + 1 + 4 + 4 + 4 + 4 + 1", "x2": "abs sqr sub idiv mod n INT- 5 n sqr INT+ 1", "tree": "abs(((((n mod -5) idiv n) sub (1)**2))**2)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 4 - 2 + 7 + 7 + 28 + 0 + 49 + 7 + 0 + 35 + 49 + 0 + 49 + 28 + 0 + 105 + 70 + 0 + 35 + 49 + 0 + 84", "x2": "mul INT+ 7 mod x_0_3 n", "tree": "(7 mul (x_0_3 mod n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 30 + 210 + 1680 + 1 5120 + 15 1200 + 166 3200 + 1995 8400 + 2 5945 9200 + 36 3242 8800 + 544 8643 2000 + 8717 8291 2000 + 14 8203 950 4000 + 266 7655 7107 2000 + 5068 5458 5036 8000 + 10 1370 9170 736 0 + 212 8789 2571 5456 0 + 4683 3363 6574 32 0 + 10 7716 7364 1202 736 0 + 258 5201 6738 8849 7664 0 + 6463 41 8472 1244 1600 0", "x2": "mul x_0_1 add INT+ 4 n", "tree": "(x_0_1 mul (4 add n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 3 + 3 - 8 - 10 - 6 + 4 + 0 - 2 + 0 - 2 - 2 - 2 + 0 + 0 - 2 + 0 - 2 - 2 - 2 + 0 + 0 - 2 + 0 - 2 - 2 - 2", "x2": "sub sign x_0_7 sign relu mod mod INT- 1 INT- 4 add INT+ 9 n", "tree": "(sign(x_0_7) sub sign(relu(((-1 mod -4) mod (9 add n)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 4 + 7 - 2 - 10 - 9 + 4 + 2 + 8 + 8 + 6 - 5 + 5 + 4 + 9 + 21 + 12 + 12 + 8 - 3 + 7 + 8 + 15 + 25 + 16 + 16 + 10 + 1 + 11 + 12 + 21 + 31", "x2": "sub n add sign idiv sign sub sqr x_0_4 relu mod add n x_0_10 INT+ 8 x_0_11 x_0_4", "tree": "(n sub (sign((sign(((x_0_4)**2 sub relu(((n add x_0_10) mod 8)))) idiv x_0_11)) add x_0_4))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 3 - 3820 - 1 760 + 1 2710 + 5 5270 - 22 3630 - 71 7030 + 197 3370 + 676 9810 - 2031 9830 - 6852 8030 + 2 205 5370 + 6 8374 3170 - 20 2257 9190 - 68 4005 3630 + 202 2245 570 + 683 9633 6770 - 2022 2971 9030 - 6839 6976 8190 + 2 222 8941 570 + 6 8396 8831 1170", "x2": "mul add add sqr INT+ 7 sqr mul n mul n INT- 2 x_0_2 INT- 1 0", "tree": "((((7)**2 add ((n mul (n mul -2)))**2) add x_0_2) mul -10)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 3 + 4 - 3 - 1 + 4 - 4 + 9 + 18 + 17 + 11 + 13 + 25 + 43 + 5 + 15 + 14 + 15 + 16 + 16 + 17 + 18 + 19 + 20 + 20 + 21 + 22", "x2": "sub n mod idiv x_0_1 INT+ 4 add mod mod sqr idiv n n x_0_1 INT+ 4 mul x_0_6 x_0_7", "tree": "(n sub ((x_0_1 idiv 4) mod (((((n idiv n))**2 mod x_0_1) mod 4) add (x_0_6 mul x_0_7))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 1 - 2 - 6 + 5 - 6 - 7 - 8 + 9 - 10 - 11 - 12 + 13 - 14 - 15 - 16 + 17 - 18 - 19 - 20 + 21 - 22 - 23 - 24", "x2": "mul n add add sign INT- 8 sign x_0_4 sign relu sub add INT+ 8 INT- 7 INT- 7", "tree": "(n mul ((sign(-8) add sign(x_0_4)) add sign(relu(((8 add -7) sub -7)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 3 + 9 - 10 - 1 + 10 - 5 + 1 + 2 + 1 + 8 + 19 + 1 + 9 + 20 + 6 + 11 + 12 + 11 + 18 + 29 + 11 + 19 + 30 + 16 + 21 + 22 + 21 + 28 + 39", "x2": "add idiv mul n sqr idiv abs sign x_0_4 x_0_3 n sub x_0_9 INT- 1 0", "tree": "(((n mul ((abs(sign(x_0_4)) idiv x_0_3))**2) idiv n) add (x_0_9 sub -10))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 6 - 10 + 2 - 7 - 8 - 2 + 0 - 2 - 7 + 2 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_10 mod n mul idiv sub n mul INT+ 7 mul n INT- 5 abs sign sign n INT+ 3", "tree": "(x_0_10 idiv (n mod (((n sub (7 mul (n mul -5))) idiv abs(sign(sign(n)))) mul 3)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 40 + 90 + 160 + 250 + 360 + 490 + 640 + 810 + 1000 + 1210 + 1440 + 1690 + 1960 + 2250 + 2560 + 2890 + 3240 + 3610 + 4000", "x2": "mul abs INT+ 1 0 sqr n", "tree": "(abs(10) mul (n)**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 8 + 6 - 5 - 25 - 16 - 15 - 29 - 52 - 36 - 37 - 53 - 78 - 64 - 67 - 85 - 112 - 100 - 86 - 105 - 133 - 122 - 109 - 129", "x2": "sub sub x_0_4 n mul relu idiv sqr INT+ 6 add n add mod INT- 7 INT- 2 n n", "tree": "((x_0_4 sub n) sub (relu(((6)**2 idiv (n add ((-7 mod -2) add n)))) mul n))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 11 + 42 + 33 + 44 + 15 + 6 + 17 + 48 + 39 + 50 + 21 + 12 + 23 + 54 + 45 + 56 + 27 + 18 + 29 + 60", "x2": "add n mul INT+ 1 0 mod sqr sqr n INT+ 6", "tree": "(n add (10 mul (((n)**2)**2 mod 6)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 5 - 4 + 3 + 24 + 65 + 84 + 105 + 128 + 153 + 180 + 209 + 240 + 273 + 308 + 345 + 384 + 425 + 468 + 513 + 560 + 609", "x2": "mul n add mod INT+ 8 add x_0_1 idiv x_0_1 add sqr n n mod n add abs n n", "tree": "(n mul ((8 mod (x_0_1 add (x_0_1 idiv ((n)**2 add n)))) add (n mod (abs(n) add n))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 7 + 10 + 0 + 7 + 10 + 0 + 7 + 10 + 0 + 7 + 10 + 0 + 7 + 10 + 0 + 7 + 10 + 0 + 7 + 10 + 0 + 7", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 - 10 - 9 + 0 - 2 - 22 - 42 - 45 - 40 - 46 - 70 - 94 - 101 - 100 - 110 - 138 - 166 - 177 - 180 - 194 - 226 - 258 - 273 - 280 - 298", "x2": "add mul n add sub relu mod mod add INT+ 1 x_0_6 n sign x_0_6 INT- 6 INT- 1 0 x_0_5", "tree": "((n mul ((relu((((1 add x_0_6) mod n) mod sign(x_0_6))) sub -6) add -10)) add x_0_5)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 + 0 - 5 - 3 + 0 + 2 + 0 + 5 + 2 + 0 + 2 + 9 + 0 + 2 + 0 + 9 + 2 + 0 + 2 + 13 + 0 + 2 + 0 + 13", "x2": "mod sub INT+ 2 x_0_4 n", "tree": "((2 sub x_0_4) mod n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 2 + 10 - 8 + 4 - 24 + 2 - 435 + 6 - 2301 + 13 - 6 2521 + 4 - 45 857 + 2 - 1600 5217 + 6 - 1 4607 7489 + 13 - 64 208 6601 + 4 - 707 150 4457 + 2 - 3 6876 188 1937", "x2": "idiv add sqr mul mod abs INT+ 5 mul n x_0_4 sign INT+ 4 sign x_0_4 x_0_4", "tree": "(((((abs(5) mod (n mul x_0_4)) mul sign(4)))**2 add sign(x_0_4)) idiv x_0_4)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 8 + 6 + 9 + 1 - 25 - 155 - 810 - 4085 - 45 - 35 + 60 + 285 - 60 - 70 - 425 - 2205 - 85 - 90 - 75 + 45 - 95 - 110 - 115 - 695", "x2": "mul sub n mod relu abs idiv x_0_4 x_0_1 sub x_0_1 mod sign mod x_0_4 n x_0_4 INT- 5", "tree": "((n sub (relu(abs((x_0_4 idiv x_0_1))) mod (x_0_1 sub (sign((x_0_4 mod n)) mod x_0_4)))) mul -5)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 8 - 6 - 1 + 0 + 4 + 4 + 7 + 6 + 8 + 6 + 7 + 4 + 4 + 0 - 1 - 6 - 8 - 14 - 17 - 24 - 28 - 36", "x2": "sub add INT+ 1 0 x_0_2 n", "tree": "((10 add x_0_2) sub n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 - 8 + 2 + 10 + 2 - 4 + 6 + 14 + 7 + 2 + 13 + 22 + 15 + 10 + 22 + 32 + 26 + 22 + 34 + 44 + 39 + 36", "x2": "sub idiv relu sqr n INT+ 6 x_0_2", "tree": "((relu((n)**2) idiv 6) sub x_0_2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 8 - 3 + 15 + 16 + 11 + 23 + 24 + 19 + 31 + 32 + 27 + 39 + 40 + 35 + 47 + 48 + 43 + 55 + 56 + 51 + 63 + 64", "x2": "add abs mul sign INT+ 5 x_0_3 INT+ 8", "tree": "(abs((sign(5) mul x_0_3)) add 8)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 5 + 3 + 1 + 6 - 9 - 8 + 6 + 5 + 4 + 13 + 12 + 18 + 4 + 6 + 21 + 21 + 21 + 31 + 31 + 38 + 25 + 28 + 44 + 45 + 46 + 57 + 58 + 66", "x2": "add x_0_8 n", "tree": "(x_0_8 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 1 - 10 - 1 + 10 - 9 - 1 + 0 + 10 - 19 + 18 - 18 + 28 - 47 + 65 - 83 + 111 - 158 + 223 - 306 + 417 - 575 + 798 - 1104", "x2": "add idiv x_0_1 INT- 1 x_0_4", "tree": "((x_0_1 idiv -1) add x_0_4)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 + 1 + 1 - 9 - 1 + 0 + 1 + 0 - 2 - 2 + 0 + 0 + 0 - 2 - 2 + 0 - 1 - 1 - 3 - 3 - 1 - 3 - 3 - 3", "x2": "add sign x_0_5 sub mod idiv abs x_0_2 n n abs idiv n INT+ 9", "tree": "(sign(x_0_5) add (((abs(x_0_2) idiv n) mod n) sub abs((n idiv 9))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 5 + 40 + 320 + 2560 + 2 480 + 16 3840 + 131 720 + 1048 5760 + 8388 6080 + 6 7108 8640 + 53 6870 9120 + 429 4967 2960 + 3435 9738 3680 + 2 7487 7906 9440 + 21 9902 3255 5520 + 175 9218 6044 4160 + 1407 3748 8355 3280 + 1 1258 9990 6842 6240 + 9 71 9925 4740 9920 + 72 575 9403 7927 9360 + 576 4607 5230 3423 4880", "x2": "abs mul x_0_1 sub sub INT+ 3 INT- 1 0 INT+ 5", "tree": "abs((x_0_1 mul ((3 sub -10) sub 5)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 6 - 3 + 2 - 6 + 12 + 1 + 5 + 11 + 4 + 23 + 13 + 18 + 25 + 19 + 39 + 30 + 36 + 44 + 39 + 60 + 52 + 59 + 68 + 64", "x2": "add add relu mod abs add abs x_0_4 n INT- 1 x_0_5 n", "tree": "((relu((abs((abs(x_0_4) add n)) mod -1)) add x_0_5) add n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 6 + 1 - 7 - 6 + 1 - 7 - 6 + 1 - 7 - 6 + 1 - 7 - 6 + 1 - 7 - 6 + 1 - 7 - 6 + 1 - 7 - 6 + 1", "x2": "mul sign INT+ 8 idiv x_0_3 sub mul n INT+ 1 sub relu n idiv n n", "tree": "(sign(8) mul (x_0_3 idiv ((n mul 1) sub (relu(n) sub (n idiv n)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 3 - 10 + 2 + 14 + 6 - 1 + 11 + 23 + 15 + 8 + 20 + 32 + 24 + 17 + 29 + 41 + 33 + 26 + 38 + 50 + 42 + 35 + 47", "x2": "add x_0_4 sqr mod INT+ 3 n", "tree": "(x_0_4 add ((3 mod n))**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 8 + 9 - 5 + 6 - 5 - 8 + 8 + 1 + 7 + 12 + 13 + 14 + 20 + 2 + 21 + 38 + 44 + 50 + 76 + 8 + 88 + 70 + 67 + 104 + 88 + 41", "x2": "idiv mod mul x_0_6 abs abs n abs sqr add relu idiv x_0_2 n n INT+ 5", "tree": "(((x_0_6 mul abs(abs(n))) mod abs(((relu((x_0_2 idiv n)) add n))**2)) idiv 5)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 10 + 4 - 4 - 1 - 4 - 16 - 5 - 6 - 7 - 4 - 3 - 8 - 10 - 9 - 7 - 8 - 4 - 10 - 10 - 7 - 8 - 5 - 10", "x2": "add idiv sub n x_0_3 x_0_2 idiv mod x_0_2 INT+ 7 sign sub INT- 5 sqr n", "tree": "(((n sub x_0_3) idiv x_0_2) add ((x_0_2 mod 7) idiv sign((-5 sub (n)**2))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400", "x2": "mul sub idiv INT+ 1 sub n add relu INT- 9 mod n idiv INT+ 8 INT+ 5 n n", "tree": "(((1 idiv (n sub (relu(-9) add (n mod (8 idiv 5))))) sub n) mul n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 3 + 8 + 10 - 11 - 2 + 21 - 9 - 23 + 30 + 14 - 53 + 16 + 67 - 69 - 51 + 136 - 18 - 187 + 154 + 169 - 341 - 15", "x2": "sub x_0_3 x_0_2", "tree": "(x_0_3 sub x_0_2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 + 8 - 6 - 4 - 8 + 0 - 8 + 1 + 1 + 2 - 4 + 11 - 1 - 1 - 4 + 4 - 4 + 5 + 5 + 5 - 1 + 16 + 3 + 4 - 1 + 7 + 0 + 9 + 9 + 9 + 3", "x2": "add sub idiv sign mod idiv x_0_9 INT- 1 0 mod INT+ 7 mul x_0_12 x_0_12 add x_0_7 abs x_0_4 INT- 4 x_0_10", "tree": "(((sign(((x_0_9 idiv -10) mod (7 mod (x_0_12 mul x_0_12)))) idiv (x_0_7 add abs(x_0_4))) sub -4) add x_0_10)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "- 8 - 1 - 17 - 17 - 42 - 53 - 91 - 117 - 172 - 217 - 293 - 361 - 462 - 557 - 687 - 813 - 976 - 1137 - 1337 - 1537 - 1778 - 2021", "x2": "sub x_0_2 sqr abs abs n", "tree": "(x_0_2 sub (abs(abs(n)))**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 + 8 - 1 - 4 + 7 - 7 - 9 + 9 - 10 + 0 + 19 + 11 + 9 + 21 + 8 + 7 + 26 + 8 + 19 + 39 + 32 + 31 + 44 + 32 + 32 + 52 + 35 + 47 + 68", "x2": "abs abs add n x_0_9", "tree": "abs(abs((n add x_0_9)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 3 + 10 - 1 - 4 + 4 + 8 - 42 + 26 - 290 - 472 + 302 - 3780 - 6618 + 3440 - 6 1066 - 12 2920 + 4 5062 - 117 524 - 259 4490 + 70 8152 - 2587 5090 - 6187 1620 + 1257 1094 - 6 4849 9060 - 16 5080 850 + 2 4601 8104", "x2": "sub mul sub x_0_3 mul relu sqr sub INT- 7 sign INT- 1 0 idiv abs x_0_7 n n INT+ 1 0", "tree": "(((x_0_3 sub (relu(((-7 sub sign(-10)))**2) mul (abs(x_0_7) idiv n))) mul n) sub 10)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 10 + 7 - 1 - 9 - 10 + 5 + 2 + 7 + 9 + 2 + 2 + 5 + 2 + 7 + 9 + 2 + 2 + 5 + 2 + 7 + 9 + 2 + 2 + 5 + 2", "x2": "sub mod x_0_6 n mul mod x_0_5 x_0_5 mod idiv INT- 5 n n", "tree": "((x_0_6 mod n) sub ((x_0_5 mod x_0_5) mul ((-5 idiv n) mod n)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 4 - 8 + 3 + 8 - 7 - 2 - 8 - 10 - 4 - 2 + 4 + 4 - 3 + 95 + 27 + 125 + 167 + 69 + 35 - 3 - 3 + 63 - 3 - 3 - 3 - 3 - 3 - 3 + 84 + 87 - 3 + 93", "x2": "mod add sqr sign sign INT- 1 INT- 4 mul x_0_9 sub mod x_0_11 sign x_0_12 n", "tree": "(((sign(sign(-1)))**2 add -4) mod (x_0_9 mul ((x_0_11 mod sign(x_0_12)) sub n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 8 - 8 + 3 - 7 + 9 + 10 + 5 + 11 + 4 + 5 + 8 + 6 + 11 + 11 + 11 + 13 + 11 + 12 + 13 + 13 + 15 + 16 + 16 + 17", "x2": "add idiv INT+ 3 n add abs n idiv x_0_4 add INT- 3 idiv n n", "tree": "((3 idiv n) add (abs(n) add (x_0_4 idiv (-3 add (n idiv n)))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 10 + 7 + 7 - 8 - 5 - 2 - 54 - 1 - 91 - 42 - 2 - 3705 - 1 - 2719 - 5046 - 2 - 358 3174 - 8 - 171 4029 - 749 614 - 1 - 2 9206 2289 4312 - 20 - 6419 5643 7398 - 13 2875 6531 4100 - 1", "x2": "idiv add relu n sqr add relu mul sign INT- 5 x_0_3 x_0_7 x_0_1", "tree": "((relu(n) add ((relu((sign(-5) mul x_0_3)) add x_0_7))**2) idiv x_0_1)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 1 - 10 - 2 + 4 + 8 + 320 + 405 + 1100 + 1452 + 864 + 2028 + 6 4288 + 16 3125 + 38 5280 + 73 7528 + 75 384 + 104 4012 + 2652 6400 + 1 28 9133 + 2 6542 8020 + 5 9396 5432 + 8 5703 7312 + 11 2149 7500 + 186 3759 8512 + 924 4852 3557", "x2": "mul mul relu abs add abs x_0_7 abs x_0_6 abs n n", "tree": "((relu(abs((abs(x_0_7) add abs(x_0_6)))) mul abs(n)) mul n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 10 - 6 + 3 + 7 + 7 + 16 + 51 + 58 + 56 + 73 + 116 + 48 + 38 + 161 + 8 + 64 + 302 + 149 + 77 + 165 + 371 + 181", "x2": "sub abs add INT- 6 mod mul n x_0_3 sqr n idiv n add INT- 1 0 sign n", "tree": "(abs((-6 add ((n mul x_0_3) mod (n)**2))) sub (n idiv (-10 add sign(n))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 8 + 6 - 4 - 18 - 4 - 14 - 28 - 14 - 24 - 38 - 24 - 34 - 48 - 34 - 44 - 58 - 44 - 54 - 68 - 54 - 64 - 78", "x2": "sub x_0_3 INT+ 1 0", "tree": "(x_0_3 sub 10)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 22 - 76 - 314 - 1580 - 9490 - 6 6440 - 53 1530 - 478 3780 - 4783 7810 - 5 2621 5920 - 63 1459 1050 - 820 8968 3660 - 1 1492 5557 1250 - 17 2388 3356 8760 - 275 8213 3710 170 - 4688 9627 3070 2900 - 8 4401 3291 5265 2210 - 160 3625 2539 39 2000 - 3207 2505 780 784 10", "x2": "add INT- 1 0 mul n sub mod INT+ 8 abs add INT- 3 sign n abs x_0_1", "tree": "(-10 add (n mul ((8 mod abs((-3 add sign(n)))) sub abs(x_0_1))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 1 - 4 - 1 + 17 + 12 + 6 - 11 - 5 + 32 + 36 + 5 - 27 - 35 + 86 + 138 + 37 - 85 - 128 + 230 + 489 + 133", "x2": "add sub mod x_0_1 relu n x_0_3 relu mul x_0_2 INT- 3", "tree": "(((x_0_1 mod relu(n)) sub x_0_3) add relu((x_0_2 mul -3)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 4 + 1 - 3 + 2 + 10 - 5 + 3 - 8 + 5 + 25 + 16 + 1 + 9 + 4 + 100 + 25 + 9 + 64 + 25 + 625 + 256 + 1 + 81 + 16 + 1 0 + 625 + 81 + 4096", "x2": "mul add x_0_10 mul x_0_5 relu add INT- 4 idiv n n x_0_10", "tree": "((x_0_10 add (x_0_5 mul relu((-4 add (n idiv n))))) mul x_0_10)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 6 + 5 + 2 + 6 + 4 + 6 + 5 + 2 + 6 + 4 + 6 + 5 + 2 + 6 + 4 + 6 + 5 + 2 + 6 + 4 + 6 + 5 + 2", "x2": "add x_0_5 mul INT- 4 sqr mod x_0_3 abs INT+ 1", "tree": "(x_0_5 add (-4 mul ((x_0_3 mod abs(1)))**2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 - 10 - 2 + 2 + 6 + 0 + 8 + 12 + 16 + 10 + 18 + 22 + 26 + 20 + 28 + 32 + 36 + 30 + 38 + 42 + 46 + 40 + 48", "x2": "sub x_0_4 INT- 1 0", "tree": "(x_0_4 sub -10)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 6 - 38 - 5 - 37 - 4 - 36 - 3 - 35 - 2 - 34 - 1 - 33 + 0 + 14 + 1 + 15 + 2 + 16 + 3 + 17", "x2": "sub n mod x_0_1 mod INT- 3 sqr INT+ 7", "tree": "(n sub (x_0_1 mod (-3 mod (7)**2)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 7 - 7 - 4 - 7 - 10 + 6 - 5 - 9 + 3969 + 4900 + 1936 + 7056 + 1 6900 + 7056 + 5625 + 2 736 + 45 5260 5729 + 77 7924 0 + 13 5306 2656 + 199 1485 4400 + 1259 5401 0 + 240 9697 3824 + 167 3789 625 + 2476 6945 6896 + 129 5388 6827 3272 6340 625 + 409 920 4684 8576 0 0 + 13 3463 7563 7240 3349 944", "x2": "sqr mul n sub sqr mod relu n n x_0_8", "tree": "((n mul (((relu(n) mod n))**2 sub x_0_8)))**2", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 5 - 2 + 9 + 7 - 3 + 0 + 11 + 9 - 1 + 2 + 13 + 11 + 1 + 4 + 15 + 13 + 3 + 6 + 17 + 15", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 6 + 7 + 4 + 1 + 1 + 16 + 1 + 1 + 36 + 1 + 1 + 100 + 1 + 1 + 16 + 1 + 1 + 256 + 1 + 1 + 196", "x2": "sqr mod abs mul sign mod sign sub n n sub n INT+ 1 0 x_0_3 n", "tree": "((abs((sign((sign((n sub n)) mod (n sub 10))) mul x_0_3)) mod n))**2", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 2 + 3 + 5 - 4 + 2 + 35 + 37 + 45 + 62 - 15 + 41 + 345 + 373 + 429 + 579 - 92 + 424 + 3189 + 3536 + 3891 + 5210 - 575 + 4196 + 2 9090", "x2": "add add mul INT+ 9 x_0_6 relu add add n mod relu x_0_4 x_0_5 INT+ 1 0 sign INT- 5", "tree": "(((9 mul x_0_6) add relu(((n add (relu(x_0_4) mod x_0_5)) add 10))) add sign(-5))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 4 - 4 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 - 36 + 12 - 144 + 48 - 576 + 192 - 1152 + 384 - 2304 + 768 - 4608 + 1536 - 9216 + 3072 - 1 8432 + 6144 - 3 6864 + 1 2288 - 7 3728", "x2": "mul x_0_2 mul idiv INT- 9 n INT- 2", "tree": "(x_0_2 mul ((-9 idiv n) mul -2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 1 - 4 - 1 - 65 + 15 + 19 - 83 + 381 - 94 - 119 + 396 - 2299 + 556 + 705 - 2482 + 1 3777 - 3348 - 4243 + 1 4782 - 8 2683 + 2 72 + 2 5441", "x2": "sub sub idiv INT+ 9 abs x_0_4 mul INT+ 6 sub sqr idiv x_0_3 x_0_1 sub relu INT+ 1 x_0_4 n", "tree": "(((9 idiv abs(x_0_4)) sub (6 mul (((x_0_3 idiv x_0_1))**2 sub (relu(1) sub x_0_4)))) sub n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 2 + 10 + 1 + 10 - 2 + 9 + 0 + 4 + 0 + 1 + 4 + 4 + 11 + 0 + 0 + 0 + 1 + 16 + 16 + 16 + 0 + 0 + 0 + 1 + 22", "x2": "mod sqr x_0_7 n", "tree": "((x_0_7)**2 mod n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 9 + 4 - 8 + 0 - 4 - 4 - 4 - 4 - 5 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 13 - 4 - 4 - 4 - 17 - 4 - 4", "x2": "sub mod mul INT- 4 sign mod n sub mod n x_0_4 INT- 3 n n", "tree": "(((-4 mul sign((n mod ((n mod x_0_4) sub -3)))) mod n) sub n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 5 + 8 + 6 - 7 + 3 - 7 + 9 - 7 + 0 + 25 + 13 + 16 + 30 + 21 + 32 + 17 + 34 + 28 + 34 + 23 + 27 + 42 + 34 + 46 + 32 + 50 + 45 + 52", "x2": "relu add mod n mul sqr n n abs sub x_0_9 INT+ 1 0", "tree": "relu(((n mod ((n)**2 mul n)) add abs((x_0_9 sub 10))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "abs abs sqr abs n", "tree": "abs(abs((abs(n))**2))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 - 4 - 6 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign idiv idiv x_0_3 x_0_1 INT- 3", "tree": "sign(((x_0_3 idiv x_0_1) idiv -3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 10 + 6 + 0 - 7 - 4 + 4 + 6 + 6 + 0 + 0 + 4 + 10 + 12 + 6 + 0 + 4 + 14 + 22 + 18 + 6 + 4 + 18 + 36 + 40 + 24", "x2": "mod relu add mod relu relu x_0_6 n x_0_5 sqr INT- 9", "tree": "(relu(((relu(relu(x_0_6)) mod n) add x_0_5)) mod (-9)**2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 1 - 10 + 6 + 9 + 7 + 1 - 11 + 10 + 11 + 12 + 1 - 19 + 15 + 16 + 17 + 1 - 19 + 20 + 21 + 22 + 1 - 33 + 25", "x2": "add mod add mod INT+ 1 sub relu add INT+ 5 x_0_4 INT- 6 n x_0_5 x_0_5", "tree": "((((1 mod (relu((5 add x_0_4)) sub -6)) add n) mod x_0_5) add x_0_5)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 7 + 5 - 5 - 4 + 8 - 4 - 10 + 6 + 19 + 9 + 14 + 10 + 10 + 16 + 12 + 15 + 21 + 20 + 22 + 22 + 24 + 25 + 25 + 27 + 27 + 28 + 29", "x2": "add n idiv sub n idiv INT+ 1 0 relu n x_0_9", "tree": "(n add ((n sub (10 idiv relu(n))) idiv x_0_9))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 10 + 12 - 36 + 55 - 210 + 378 - 1672 + 3393 - 1 6710 + 3 7312 - 20 508 + 48 5043 - 280 7098 + 727 5630 - 4491 3552 + 1 2368 5693 - 8 844 3918 + 23 5002 8148 - 161 6887 8340 + 493 5059 1087", "x2": "mul mod sign x_0_1 x_0_2 n", "tree": "((sign(x_0_1) mod x_0_2) mul n)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 3 + 1 + 8 - 3 - 10 + 3 + 2 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_8 sub mul n sqr relu mod n abs x_0_2 INT- 1 0", "tree": "(x_0_8 idiv ((n mul (relu((n mod abs(x_0_2))))**2) sub -10))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 6 - 4 + 2 + 8 + 4 + 6 + 14 + 18 + 24 + 38 + 56 + 80 + 118 + 174 + 254 + 372 + 546 + 800 + 1172 + 1718 + 2518", "x2": "add x_0_3 relu x_0_1", "tree": "(x_0_3 add relu(x_0_1))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 + 0 + 6 + 0 + 2 + 1 + 1 + 0 + 36 + 0 + 4 + 1 + 1 + 0 + 1296 + 0 + 16 + 1 + 1 + 0 + 167 9616 + 0 + 256 + 1", "x2": "idiv sqr x_0_6 relu relu sign abs sign INT+ 5", "tree": "((x_0_6)**2 idiv relu(relu(sign(abs(sign(5))))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 1 - 3 + 10 + 10 - 9 + 0 + 1 + 38 + 10 + 10 - 9 + 0 + 1 + 38 + 10 + 10 - 9 + 0 + 1 + 38 + 10 + 10 - 9 + 0", "x2": "mod x_0_6 add mul INT- 2 add INT- 7 x_0_3 relu n", "tree": "(x_0_6 mod ((-2 mul (-7 add x_0_3)) add relu(n)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 3 + 0 + 7 + 16 + 27 + 40 + 55 + 72 + 91 + 112 + 135 + 160 + 187 + 216 + 247 + 280 + 315 + 352", "x2": "mod INT- 9 sqr n", "tree": "(-9 mod (n)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342", "x2": "sub abs n relu sqr n", "tree": "(abs(n) sub relu((n)**2))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 + 16 - 26 + 36 - 46 + 56 - 66 + 76 - 86 + 96 - 106 + 116 - 126 + 136 - 146 + 156 - 166 + 176 - 186 + 196", "x2": "sub idiv INT- 1 0 sign add x_0_1 INT- 3 x_0_1", "tree": "((-10 idiv sign((x_0_1 add -3))) sub x_0_1)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 4 - 6 - 9 + 1 + 1 - 10 + 81 + 40 - 66 - 108 + 13 + 14 - 150 + 1296 + 680 - 1188 - 2052 + 260 + 294 - 3300 + 2 9808 + 1 6320 - 2 9700 - 5 3352 + 7020", "x2": "mul add n abs mod sign n INT+ 6 x_0_7", "tree": "((n add abs((sign(n) mod 6))) mul x_0_7)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 9 + 14 + 21 + 30 + 41 + 54 + 69 + 86 + 105 + 126 + 149 + 174 + 201 + 230 + 261 + 294 + 329 + 366 + 405", "x2": "mod INT- 1 add add x_0_1 n n", "tree": "(-1 mod ((x_0_1 add n) add n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 - 8 + 0 + 9 - 1 + 50 + 65 + 1 + 82 + 2 + 2501 + 4226 + 2 + 6725 + 5 + 625 5002 + 1785 9077 + 5 + 4522 5626 + 26 + 39 1250 5002 5 + 318 9466 3129 1930 + 26 + 2045 3572 4709 1877", "x2": "add sqr x_0_5 sign INT+ 3", "tree": "((x_0_5)**2 add sign(3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 3 - 4 + 8 + 7 - 12 - 4 - 4 - 17 - 17 + 1 - 8 - 9 + 3 + 2 - 17 - 9 - 9 - 22 - 22 - 4 - 13 - 14 - 2", "x2": "sub idiv n sign idiv n INT- 9 x_0_5", "tree": "((n idiv sign((n idiv -9))) sub x_0_5)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 6 - 5 - 4 + 7 - 6 + 2 - 6 + 2 - 14 + 8 - 6 + 14 - 42 + 13 - 90 + 49 - 42 + 85 - 258 + 79 - 546 + 295 - 258 + 511", "x2": "sub mul x_0_6 mod n add n INT- 6 idiv INT+ 6 mod abs relu INT+ 1 x_0_1", "tree": "((x_0_6 mul (n mod (n add -6))) sub (6 idiv (abs(relu(1)) mod x_0_1)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 4 + 3 - 3 - 7 + 3 - 5 - 7 - 4 - 5 + 7 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1", "x2": "sub sign idiv n x_0_10 mul n mod n INT- 1", "tree": "(sign((n idiv x_0_10)) sub (n mul (n mod -1)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 0 + 36 - 64 - 1000 + 2160 + 4 8804 - 13 8496 - 395 3448 + 1384 9200 + 4 7836 6724 - 19 9428 5376 - 808 4397 7032 + 3908 7993 2912 + 18 1898 9483 1300 - 100 652 6282 6496 - 5256 8796 624 6856 + 3 2421 1451 5578 3408 + 189 7733 5378 5511 3572 - 1296 8458 623 1336 4800 - 8 3690 490 1941 508 7016", "x2": "mul mul n sub INT- 4 x_0_2 relu sub relu add n n n", "tree": "((n mul (-4 sub x_0_2)) mul relu((relu((n add n)) sub n)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 3 + 2 + 6 + 7 - 10 + 27 - 43 + 44 - 59 + 397 - 310 + 2720 - 2083 + 7850 - 1 3944 + 4 5017 - 22 9198 + 57 1277 - 362 2151 + 205 5910 - 2478 3780 + 48 9669 - 4 9361 9690 - 1352 1393", "x2": "sub x_0_3 mul sub mod mod x_0_5 n n n x_0_2", "tree": "(x_0_3 sub ((((x_0_5 mod n) mod n) sub n) mul x_0_2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 5 + 6 - 10 - 2 - 1 - 17 - 9 - 8 - 24 - 16 - 15 - 31 - 23 - 22 - 38 - 30 - 29 - 45 - 37 - 36 - 52", "x2": "sub INT- 2 add sub INT+ 6 INT+ 1 mul x_0_3 INT- 1", "tree": "(-2 sub ((6 sub 1) add (x_0_3 mul -1)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 15 + 37 + 81 + 169 + 345 + 697 + 1401 + 2809 + 5625 + 1 1257 + 2 2521 + 4 5049 + 9 105 + 18 217 + 36 441 + 72 889 + 144 1785 + 288 3577 + 576 7161", "x2": "add add x_0_1 abs INT- 7 mod relu x_0_1 relu mul x_0_1 n", "tree": "((x_0_1 add abs(-7)) add (relu(x_0_1) mod relu((x_0_1 mul n))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 6 - 8 - 9 - 5 + 8 - 9 - 8 + 7 + 5 + 9 + 7 + 9 + 8 + 1 + 15 + 2 + 15 + 12 + 2 + 10 + 9 + 15 + 7 + 6 + 9 + 16", "x2": "mod add abs INT+ 6 sqr sub x_0_8 sub INT+ 4 mod mod x_0_1 INT+ 9 x_0_4 n", "tree": "((abs(6) add ((x_0_8 sub (4 sub ((x_0_1 mod 9) mod x_0_4))))**2) mod n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 1 - 6 - 8 + 9 + 7 + 2 + 0 + 17 + 15 + 10 + 8 + 25 + 23 + 18 + 16 + 33 + 31 + 26 + 24 + 41 + 39 + 34", "x2": "add add INT+ 7 x_0_4 sign n", "tree": "((7 add x_0_4) add sign(n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 + 10 - 17 + 121 - 339 + 3631 - 1 4237 + 20 3337 - 102 5063 + 1830 331 - 1 1275 6929 + 24 1564 3693 - 175 9008 923 + 4396 4715 2127 - 3 6939 1699 3829 + 105 5153 1651 481 - 1004 7454 2232 1487 + 3 2287 6868 5220 7187 - 34 3622 9344 3394 8553 + 1226 9321 38 3873 1061 - 1 4432 1632 4622 5839 2259", "x2": "add mul sub n sign n mul relu n x_0_2 idiv n n", "tree": "(((n sub sign(n)) mul (relu(n) mul x_0_2)) add (n idiv n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 3 - 4 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3 + 1", "x2": "mod idiv INT+ 9 idiv INT+ 9 x_0_3 n", "tree": "((9 idiv (9 idiv x_0_3)) mod n)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 10 + 8 - 10 - 198 - 4742 - 13 2750 - 424 7936 - 1 5292 5113 - 61 1699 1170 - 2691 4722 5208 - 12 9190 5406 6105 - 671 7903 4089 9533 - 3 7620 2398 6557 1876 - 225 7213 5306 6404 1286 - 1 4446 1623 9756 233 5852 - 98 2338 8217 3856 7262 7561 - 7072 8382 6251 167 2562 6243 - 53 7535 6319 1833 9040 1062 9087 - 4300 2845 6417 7301 4515 6669 5206 - 36 1223 8697 1071 1119 5022 3450 9924 - 3178 7698 911 9879 7069 2010 2 6076", "x2": "sub mul mod n mul INT+ 4 x_0_1 relu n add idiv x_0_3 n sqr INT+ 5", "tree": "(((n mod (4 mul x_0_1)) mul relu(n)) sub ((x_0_3 idiv n) add (5)**2))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 - 7 + 5 - 5 + 39 + 61 - 69 + 61 - 633 - 1107 + 1371 - 1351 + 1 5183 + 2 8773 - 3 8397 + 4 521 - 48 5865 - 97 8291 + 138 2283 - 153 9807 + 1943 4591 + 4108 8213 - 6082 461", "x2": "sub INT- 9 mul x_0_4 add abs n add n INT- 2", "tree": "(-9 sub (x_0_4 mul (abs(n) add (n add -2))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 10 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0", "x2": "mod abs mul idiv mod n add INT+ 2 INT- 1 0 INT+ 7 x_0_3 n", "tree": "(abs((((n mod (2 add -10)) idiv 7) mul x_0_3)) mod n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 11 - 7 + 29 - 43 + 101 - 187 + 389 - 763 + 1541 - 3067 + 6149 - 1 2283 + 2 4581 - 4 9147 + 9 8309 - 19 6603 + 39 3221 - 78 6427 + 157 2869", "x2": "sub add INT+ 8 INT+ 7 add x_0_1 x_0_1", "tree": "((8 add 7) sub (x_0_1 add x_0_1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 + 90 + 966 + 5114 + 1 8744 + 5 4426 + 13 4450 + 29 4906 + 59 484 + 109 9994 + 193 2606 + 323 4810 + 519 8096 + 806 7354 + 1214 9994 + 1782 5786 + 2555 7420 + 3590 1786 + 4952 1974", "x2": "add INT- 6 mul add sqr n n sqr abs abs mul n n", "tree": "(-6 add (((n)**2 add n) mul (abs(abs((n mul n))))**2))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3 + 8 + 4 - 7 - 3", "x2": "sub mod sqr sub INT+ 1 0 mul mul n INT+ 9 x_0_1 INT+ 9 x_0_2", "tree": "((((10 sub ((n mul 9) mul x_0_1)))**2 mod 9) sub x_0_2)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 + 5 + 0 - 3 - 10 - 5 + 1 + 5 + 6 + 11 + 16 + 12 + 12 + 6 - 21 - 26 - 60 - 93 - 66 - 65 - 22 + 21 + 22 + 24 + 26 + 23 + 22 + 25", "x2": "sub add idiv x_0_9 x_0_4 n relu mul x_0_7 INT+ 7", "tree": "(((x_0_9 idiv x_0_4) add n) sub relu((x_0_7 mul 7)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 4 + 4 - 792 - 792 - 15 8392 - 15 8392 - 3167 8392 - 3167 8392 - 63 3567 8392 - 63 3567 8392 - 1 2671 3567 8392 - 1 2671 3567 8392 - 253 4271 3567 8392 - 253 4271 3567 8392 - 5 685 4271 3567 8392 - 5 685 4271 3567 8392 - 1013 7085 4271 3567 8392 - 1013 7085 4271 3567 8392 - 20 2741 7085 4271 3567 8392 - 20 2741 7085 4271 3567 8392 - 4054 8341 7085 4271 3567 8392", "x2": "mul INT- 8 add mul abs x_0_2 sqr INT+ 5 idiv INT+ 5 INT- 5", "tree": "(-8 mul ((abs(x_0_2) mul (5)**2) add (5 idiv -5)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 - 3 + 3 + 10 - 5 - 1 - 7 + 3 + 6 + 0 + 2 - 9 + 2 + 9 + 1 + 3 - 5 + 9 + 5 - 4 - 1 - 7 + 9 + 4 - 13 - 11 + 1", "x2": "sub mod add n x_0_5 INT- 4 add INT- 1 0 mod sub x_0_8 n add n relu x_0_3", "tree": "(((n add x_0_5) mod -4) sub (-10 add ((x_0_8 sub n) mod (n add relu(x_0_3)))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362", "x2": "add sign n sqr n", "tree": "(sign(n) add (n)**2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 8 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400", "x2": "mul idiv INT+ 5 x_0_1 sub mul add sign n n n n", "tree": "((5 idiv x_0_1) mul (((sign(n) add n) mul n) sub n))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 + 5 + 1 - 5 - 1 + 9 + 1 + 6 + 2 + 1 + 1 + 10 + 2 + 7 + 3 + 2 + 2 + 11 + 3 + 8 + 4 + 3 + 3 + 12 + 4", "x2": "abs mod add INT+ 1 relu x_0_6 n", "tree": "abs(((1 add relu(x_0_6)) mod n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 8 - 9 - 4 + 8 - 3 + 8 + 4 + 4 + 369 + 400 + 88 - 348 + 52 - 504 - 300 - 6160 - 3 1892 - 3 384 - 76 + 2 6800 + 6216 + 5 952 + 16 9280 + 135 6768 + 394 8800 + 316 1912 - 71 5392", "x2": "mul sub mul x_0_8 INT- 4 x_0_7 n", "tree": "(((x_0_8 mul -4) sub x_0_7) mul n)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 12 + 192 + 972 + 3072 + 7500 + 1 5552 + 2 8812 + 4 9152 + 7 8732 + 12 0 + 17 5692 + 24 8832 + 34 2732 + 46 992 + 60 7500 + 78 6432 + 100 2252 + 125 9712 + 156 3852", "x2": "mul abs add n sub INT- 3 n sqr relu add mul n n sqr relu n", "tree": "(abs((n add (-3 sub n))) mul (relu(((n mul n) add (relu(n))**2)))**2)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 7 - 7 - 3 - 6 - 4 - 4 + 0 - 3 - 1 - 1 - 4 + 0 - 5 - 5 - 1 - 4 - 2 - 2 - 5 - 1 - 6 - 6 - 2", "x2": "mod sub INT+ 3 sub idiv INT+ 2 sub n INT- 2 x_0_4 INT- 7", "tree": "((3 sub ((2 idiv (n sub -2)) sub x_0_4)) mod -7)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 10 - 6 + 1 + 2 - 9 - 10 + 5 + 6 - 13 - 14 + 9 + 10 - 17 - 18 + 13 + 14 - 21 - 22 + 17 + 18", "x2": "add INT- 3 idiv n sign idiv sign INT- 3 mod INT+ 1 mul n x_0_2", "tree": "(-3 add (n idiv sign((sign(-3) idiv (1 mod (n mul x_0_2))))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 144 + 441 + 900 + 1521 + 2304 + 3249 + 4356 + 5625 + 7056 + 8649 + 1 404 + 1 2321 + 1 4400 + 1 6641 + 1 9044 + 2 1609 + 2 4336 + 2 7225 + 3 276", "x2": "sqr add mul n INT+ 9 add INT+ 1 idiv INT- 9 INT- 4", "tree": "(((n mul 9) add (1 add (-9 idiv -4))))**2", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 8 + 4 + 3 + 7 + 1 + 5 - 1 - 8 + 19 + 19 + 23 + 22 + 8 + 23 + 13 + 24 + 21 + 43 + 40 + 37 + 32 + 14 + 23 + 27 + 47 + 48 + 54", "x2": "add abs x_0_9 mod x_0_2 sub n INT- 8", "tree": "(abs(x_0_9) add (x_0_2 mod (n sub -8)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 28 + 180 - 1416 + 1 4200 - 17 340 + 238 4844 - 3815 7392 + 6 8683 3200 - 137 3666 3820 + 3022 660 4260 - 7 2529 5850 1976 + 188 5769 2105 1688 - 5280 1537 8944 6900 + 15 8404 6136 8340 7420 - 506 8947 6378 6903 6960 + 1 7234 4219 6875 4725 7184 - 62 439 1908 7517 125 8012 + 2357 6689 2532 5646 4780 5140 - 9 4306 7570 1302 5859 1220 4840", "x2": "mul add n n sub relu abs n add x_0_1 sqr INT+ 1", "tree": "((n add n) mul (relu(abs(n)) sub (x_0_1 add (1)**2)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 1 + 6 - 6 + 0 + 4 - 2 + 6 - 9 + 10 + 1 + 6 - 6 + 0 + 4 - 2 + 6 - 9 + 10 + 1 + 6 - 6 + 0 + 4 - 2 + 6 - 9 + 10", "x2": "add idiv n mul sqr sqr idiv INT- 2 sign INT- 3 n x_0_9", "tree": "((n idiv ((((-2 idiv sign(-3)))**2)**2 mul n)) add x_0_9)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 10 + 0 + 10 - 2 - 4 - 10 + 25 + 100 + 0 + 100 + 4 + 16 + 100 + 625 + 1 0 + 0 + 1 0 + 16 + 256 + 1 0 + 39 625 + 1 0 0 + 0 + 1 0 0 + 256", "x2": "add mul relu sub INT+ 1 INT+ 9 n sqr idiv x_0_7 sign INT+ 8", "tree": "((relu((1 sub 9)) mul n) add ((x_0_7 idiv sign(8)))**2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 10 - 6 + 9 - 9 - 10 - 2 + 6 + 10 - 16 - 8 - 21 - 23 + 11 + 30 + 179 + 33 + 55 - 214 - 85 - 56 + 204 - 177 - 45 + 28 - 139 - 22 - 4", "x2": "idiv add add mul n idiv x_0_3 sign n INT- 6 n x_0_9", "tree": "((((n mul (x_0_3 idiv sign(n))) add -6) add n) idiv x_0_9)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 2 + 3 + 6 + 4 - 4 + 4 + 3 - 3 - 2 + 8 - 10 - 6 + 13 + 70 - 30 + 224 + 34 - 162 - 1273 + 540 - 4746 - 572 + 3496 + 3 408 - 1 3175 + 12 5216 + 1 4634 - 9 1616 - 88 846 + 39 390 - 392 1159", "x2": "mul n sub relu sub n sqr x_0_1 sub x_0_5 x_0_12", "tree": "(n mul (relu((n sub (x_0_1)**2)) sub (x_0_5 sub x_0_12)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3", "x2": "idiv n INT- 8", "tree": "(n idiv -8)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 - 9 + 3 + 0 - 4 - 2 - 3 - 4 - 6 - 6 + 5 - 12 - 16 - 32 - 34 - 22 - 140 - 250 - 1018 - 1161 - 472 - 1 9584 - 6 2468 - 103 6290 - 134 7899 - 22 2644 - 3 8353 2806 - 39 225 6", "x2": "sub idiv mul INT- 3 relu INT+ 2 add mod x_0_1 INT+ 1 0 mul n INT- 1 0 add x_0_9 sqr x_0_5", "tree": "(((-3 mul relu(2)) idiv ((x_0_1 mod 10) add (n mul -10))) sub (x_0_9 add (x_0_5)**2))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 5 + 10 - 1 + 1 - 1 + 6 - 6 + 6 - 1 + 1 - 1 + 6 - 6 + 6 - 1 + 1 - 1 + 6 - 6 + 6 - 1", "x2": "idiv INT- 6 x_0_3", "tree": "(-6 idiv x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 7 - 4 + 2 + 9 + 1 - 4 - 6 + 10 - 4 + 3 - 5 - 8 + 7 + 16 - 8 - 32 + 13 + 64 - 17 - 128 + 34 + 253 - 69 - 503 + 147 + 1000 - 299 - 1998 + 627 + 3992", "x2": "sub sub mod relu n x_0_11 x_0_2 x_0_2", "tree": "(((relu(n) mod x_0_11) sub x_0_2) sub x_0_2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 8 - 3 + 4 - 5 + 0 + 4 + 4 + 4 + 3 + 3 + 3 + 2 + 2 + 2 + 2 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 0", "x2": "idiv sub add abs mul INT+ 6 INT- 7 x_0_5 n n", "tree": "(((abs((6 mul -7)) add x_0_5) sub n) idiv n)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 - 6 + 8 + 5 - 36 - 22 - 55 - 46 - 92 - 125 - 106 - 102 - 135 - 146 - 132 - 245 - 236 - 282 - 265 - 376 - 292 - 415 - 586", "x2": "add mul INT- 1 0 relu mod add x_0_1 idiv n add INT+ 4 x_0_4 n x_0_3", "tree": "((-10 mul relu(((x_0_1 add (n idiv (4 add x_0_4))) mod n))) add x_0_3)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 8 - 1 + 645 + 140 + 14 5120 + 4 5355 + 6399 7914 + 2612 4473 + 466 5447 9298 + 235 1202 5691 + 50 8067 2795 5512 + 30 4715 8529 5526 + 7 7277 332 2033 3741 + 5 3751 8764 6130 7852 + 1 5648 5992 2711 7582 5512 + 1 2384 4323 3668 5329 994 + 4070 2006 5897 3283 2215 6697 + 3611 3004 6937 7441 9653 8489 + 1322 4081 9410 419 7186 8710 8537 + 1300 681 6897 5879 1075 3856 383 + 524 8638 1223 8456 5863 4691 3378 3335", "x2": "add idiv n abs INT+ 6 mul n sub mul abs x_0_2 mul n INT+ 9 sign INT+ 5", "tree": "((n idiv abs(6)) add (n mul ((abs(x_0_2) mul (n mul 9)) sub sign(5))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 2 - 10 + 0 + 5 + 6 + 3 - 307 - 471 - 283 + 11 + 12 + 13 - 2131 - 2673 - 3299 + 17 + 18 + 19 - 6763 - 7899 - 9155", "x2": "mod n add sub n mul x_0_3 sqr n INT- 3", "tree": "(n mod ((n sub (x_0_3 mul (n)**2)) add -3))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 6 + 7 - 8 + 5 - 10 + 3 - 11 + 2 - 12 + 1 - 13 + 0 - 14 - 1 - 15 - 2 - 16 - 3 - 17 - 4", "x2": "add idiv INT- 8 n x_0_2", "tree": "((-8 idiv n) add x_0_2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 - 9 - 3 - 9 - 6 - 17 - 7 - 17 - 12 + 121 - 15 - 169 - 28 - 2 - 43 + 1 + 64 - 17 + 22 - 17 - 6 - 49", "x2": "idiv mul n n sub sub INT- 5 add n idiv sign n n x_0_4", "tree": "((n mul n) idiv ((-5 sub (n add (sign(n) idiv n))) sub x_0_4))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 8 + 6 + 1 - 9 + 2 + 6 + 3 - 5 - 6 - 6 + 1 - 13 - 14 - 18 - 22 - 20 - 34 - 32 - 38 - 48 - 54 - 52 - 46 - 44 - 50 - 60 - 66 - 64 - 58 - 56", "x2": "add mod sub x_0_1 n x_0_2 sub mul idiv n x_0_12 mul mod INT+ 7 INT+ 1 add n x_0_11 n", "tree": "(((x_0_1 sub n) mod x_0_2) add (((n idiv x_0_12) mul ((7 mod 1) mul (n add x_0_11))) sub n))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 10 - 8 + 5 + 3 + 8 + 144 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr add n relu mod x_0_5 mul x_0_4 INT- 1", "tree": "((n add relu((x_0_5 mod (x_0_4 mul -1)))))**2", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 5 + 9 - 7 + 2 + 0 + 5 - 4 + 1 + 5 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "idiv relu idiv n relu sign INT+ 5 mul sign x_0_9 n", "tree": "(relu((n idiv relu(sign(5)))) idiv (sign(x_0_9) mul n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 4 + 4 + 7 + 8 + 12 + 14 + 19 + 22 + 28 + 32 + 39 + 44 + 52 + 58 + 67 + 74 + 84 + 92 + 103 + 112", "x2": "sub mul idiv sub sign abs INT- 5 abs INT+ 1 0 INT- 5 add x_0_2 relu n sign n", "tree": "((((sign(abs(-5)) sub abs(10)) idiv -5) mul (x_0_2 add relu(n))) sub sign(n))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 + 9 + 16 + 25 + 72 + 147 + 512 + 486 + 800 + 1089 + 576 + 507 + 2352 + 675 + 4096 + 1445 + 2592 + 6498 + 3200 + 5292", "x2": "mul sqr n sub n mod x_0_2 n", "tree": "((n)**2 mul (n sub (x_0_2 mod n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 5 - 7 + 8 - 2 + 3 - 3 - 8 + 49 + 64 + 4 + 9 + 9 + 64 + 2401 + 4096 + 16 + 81 + 81 + 4096 + 576 4801 + 1677 7216 + 256 + 6561 + 6561 + 1677 7216 + 33 2329 3056 9601", "x2": "add mod x_0_8 sign n sqr x_0_6", "tree": "((x_0_8 mod sign(n)) add (x_0_6)**2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 6 - 4 - 4 + 10 - 2 - 1 - 1 + 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1", "x2": "idiv x_0_4 n", "tree": "(x_0_4 idiv n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 9 - 3 + 4 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 2 + 1 + 1 + 2 + 1", "x2": "mod add sign relu x_0_3 sqr mod sqr INT+ 3 x_0_3 idiv sqr n x_0_1", "tree": "((sign(relu(x_0_3)) add (((3)**2 mod x_0_3))**2) mod ((n)**2 idiv x_0_1))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 9 + 7 + 9 - 8 - 7 - 9 - 9 - 7 - 9 + 8 + 7 + 9 + 9 + 7 + 9 - 8 - 7 - 9 - 9 - 7 - 9 + 8 + 7 + 9", "x2": "sub mod relu n sign n x_0_6", "tree": "((relu(n) mod sign(n)) sub x_0_6)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 5 - 2 - 15 - 8 - 75 - 48 - 525 - 384 - 4725 - 3840 - 5 1975 - 4 6080 - 67 5675 - 64 5120 - 1013 5125 - 1032 1920 - 1 7229 7125 - 1 8579 4560 - 32 7364 5375 - 37 1589 1200 - 687 4655 2875", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 8 - 5 - 8 - 52 - 35 - 54 - 319 - 218 - 333 - 1924 - 1319 - 2010 - 1 1557 - 7928 - 1 2075 - 6 9358 - 4 7585 - 7 2468 - 41 6167 - 28 5530 - 43 4829 - 249 7024", "x2": "sub mul abs add INT- 6 sqr mul INT- 5 mul relu mul INT+ 3 x_0_1 INT- 2 x_0_3 n", "tree": "((abs((-6 add ((-5 mul (relu((3 mul x_0_1)) mul -2)))**2)) mul x_0_3) sub n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 3 + 5 + 0 - 9 + 1 + 5 + 6 + 9 - 3 + 6 + 8 + 72 + 4 + 32 + 30 + 96 + 7 + 180 + 76 + 140 + 42 + 1606 + 115 + 792 + 775 + 2522 + 216 + 5068 + 2233", "x2": "mod add sub abs mul n x_0_10 relu sign INT- 2 n sqr x_0_4", "tree": "(((abs((n mul x_0_10)) sub relu(sign(-2))) add n) mod (x_0_4)**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 8 + 0 + 14 + 6 + 8 + 0 + 2 + 6 + 4 + 0 + 2 + 6 + 4 + 0 + 2 + 6 + 4 + 0 + 2 + 6", "x2": "abs add sub sign n x_0_2 INT+ 5", "tree": "abs(((sign(n) sub x_0_2) add 5))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 3 + 6 + 9 + 10 + 1 + 1 + 2 - 7 + 12 + 27 + 60 + 9 + 10 + 2 - 7 + 24 - 189 + 720 + 243 + 600 + 18 - 70 + 48 + 1323 + 1 7280 - 4 5927 + 43 2000", "x2": "mul x_0_9 x_0_7", "tree": "(x_0_9 mul x_0_7)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 4 + 9 - 5 + 2 - 7 - 8 + 3 + 17 + 4 + 12 + 4 + 4 + 16 + 31 + 19 + 28 + 21 + 22 + 35 + 51 + 40 + 50 + 44 + 46 + 60", "x2": "add x_0_6 n", "tree": "(x_0_6 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 1 + 0 - 1 + 2 - 3 + 4 - 5 + 6 - 7 + 8 - 9 + 10 - 11 + 12 - 13 + 14 - 15 + 16 - 17", "x2": "mul idiv sign x_0_1 INT+ 1 sub INT+ 3 n", "tree": "((sign(x_0_1) idiv 1) mul (3 sub n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 10 + 1 + 6 + 5 + 1 + 10 + 53 + 150 + 52 + 88 + 78 + 55 + 155 + 2865 + 2 2557 + 2762 + 7803 + 6144 + 3086 + 2 4087 + 820 8288 + 5 881 8313 + 762 8709 + 6088 6875 + 3774 8803", "x2": "sub mul idiv mul n sign x_0_6 n add n add abs sqr INT- 6 sqr x_0_7 INT- 5", "tree": "((((n mul sign(x_0_6)) idiv n) mul (n add (abs((-6)**2) add (x_0_7)**2))) sub -5)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 2 + 1 + 8 + 0 + 4 + 11 + 4 + 13 + 21 + 15 + 25 + 34 + 29 + 40 + 50 + 46 + 58 + 69 + 66 + 79 + 91", "x2": "add x_0_3 idiv n idiv add INT+ 8 n n", "tree": "(x_0_3 add (n idiv ((8 add n) idiv n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 + 5 + 0 + 3 + 6 + 1 - 5 + 5 + 2 - 72 - 72 - 54 - 72 - 72 - 72 - 54 - 72 - 72 - 72 - 72 - 72 - 72 - 72 - 72 - 54 - 72 - 72 - 72", "x2": "mul mul INT- 9 add INT+ 7 sign mod x_0_5 x_0_9 sign relu x_0_6", "tree": "((-9 mul (7 add sign((x_0_5 mod x_0_9)))) mul sign(relu(x_0_6)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 8 + 27 + 112 + 565 + 3396 + 2 3779 + 19 240 + 171 2169 + 1712 1700 + 1 8833 8711 + 22 6006 4544 + 293 8083 9085 + 4113 3174 7204 + 6 1699 7620 8075 + 98 7196 1932 9216 + 1678 2335 2859 6689 + 3 208 2035 1474 420 + 57 3955 8667 8006 7999 + 1147 9117 3356 136 0", "x2": "abs mul n sub INT- 1 x_0_1", "tree": "abs((n mul (-1 sub x_0_1)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 + 7 - 4 + 6 - 1 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7", "x2": "sub abs relu sub sub n sign add n mul x_0_2 INT+ 2 sign n x_0_1", "tree": "(abs(relu(((n sub sign((n add (x_0_2 mul 2)))) sub sign(n)))) sub x_0_1)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 - 7 - 5 - 10 - 5 + 2 - 1 - 9 + 27 + 28 + 71 + 60 + 91 + 60 + 21 + 40 + 87 - 128 - 133 - 390 - 323 - 508 - 321 - 86 - 199 - 478", "x2": "add n add add sign sub mod n n x_0_8 sqr INT- 4 mul x_0_9 INT- 6", "tree": "(n add ((sign(((n mod n) sub x_0_8)) add (-4)**2) add (x_0_9 mul -6)))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 2 + 7 + 10 - 10 + 8 + 8 + 7 - 2 + 6 - 10 + 10 - 10 - 1692 + 680 - 20 + 3210 + 1 6920 - 7 2760 + 200 - 73 8300 - 148 8960 + 145 5200 - 3 1200 + 4 8727 8000 + 7742 5920 - 1018 6400 + 205 9200 - 799 1359 2000 - 712 3184 6400 + 35 1430 8000", "x2": "mul mod x_0_7 sub n sub mul n mod x_0_12 abs add n n INT+ 9 x_0_4", "tree": "((x_0_7 mod (n sub ((n mul (x_0_12 mod abs((n add n)))) sub 9))) mul x_0_4)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "+ 9 - 3 + 7 + 9 + 13 + 21 + 37 + 69 + 133 + 61 + 117 + 229 + 115 + 225 - 5 + 497 + 411 + 169 + 333", "x2": "add INT- 5 mul mod x_0_1 abs mul n n mul INT+ 1 add INT+ 2 mod n n", "tree": "(-5 add ((x_0_1 mod abs((n mul n))) mul (1 mul (2 add (n mod n)))))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 8 + 3 + 3 - 1 - 5 - 5 - 10 - 15 - 15 - 21 - 27 - 28 - 35 - 42 - 44 - 52 - 60 - 63 - 72 - 81 - 85 - 95 - 105", "x2": "sub idiv x_0_5 sub INT+ 3 mul abs x_0_6 INT+ 1 0 sub relu n x_0_3", "tree": "((x_0_5 idiv (3 sub (abs(x_0_6) mul 10))) sub (relu(n) sub x_0_3))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 3 - 8 - 8 - 4 - 1 + 7 + 3 - 8 - 8 - 4 - 1 + 7 + 3 - 8 - 8 - 4 - 1 + 7 + 3 - 8 - 8 - 4 - 1", "x2": "idiv x_0_6 sign abs sub x_0_4 sign add mul x_0_3 abs idiv INT- 5 sign x_0_2 x_0_2", "tree": "(x_0_6 idiv sign(abs((x_0_4 sub sign(((x_0_3 mul abs((-5 idiv sign(x_0_2)))) add x_0_2))))))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 1 - 6 - 9 + 5 - 9 + 5 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1", "x2": "sign x_0_7", "tree": "sign(x_0_7)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 4 - 5 - 6 + 1 + 9 - 19 + 26 + 37 - 6 + 1 - 151 - 519 + 926 - 215 - 6 + 1 + 7 8889 - 48 1519 - 19 8874 + 1297 - 6 + 1 - 379 8607 871", "x2": "mul sub x_0_5 add mul x_0_5 x_0_6 idiv n n INT- 1", "tree": "((x_0_5 sub ((x_0_5 mul x_0_6) add (n idiv n))) mul -1)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 - 4 - 3 + 1 - 6 + 9 + 5 + 9 - 11 - 18 - 17 - 10 - 25 + 4 - 5 + 2 - 39 - 54 - 53 - 40 - 71 - 14 - 33 - 20 - 103 - 134", "x2": "add sub x_0_8 n x_0_8", "tree": "((x_0_8 sub n) add x_0_8)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 1 - 1 + 5 + 4 - 10 - 2 - 2 - 128 - 2 - 2 - 242 - 288 - 338 - 392 - 450 - 512 - 578 - 648 - 722 - 800 - 882 - 968 - 1058", "x2": "mul sqr abs mod sign x_0_6 n INT- 2", "tree": "((abs((sign(x_0_6) mod n)))**2 mul -2)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 1 + 8 - 8 + 1 - 5 - 9 - 10 - 9 + 120 - 32 + 13 + 15 - 54 + 0 + 36 - 600 + 128 + 1625 - 405 - 972 + 0 - 1764 - 3000 + 5248 - 96 6875 - 5 3865", "x2": "mul add sub x_0_9 idiv INT- 6 INT+ 2 INT+ 2 x_0_7", "tree": "(((x_0_9 sub (-6 idiv 2)) add 2) mul x_0_7)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 5 + 4 - 1 + 11 + 1 + 16 + 4 + 31 + 9 + 43 + 1 + 76 + 27 + 103 + 9 + 178 + 1 + 238 + 27 + 407 + 9", "x2": "mod sign mod n INT- 6 add sub idiv mul x_0_4 INT- 9 INT- 4 abs INT- 2 INT+ 1 0", "tree": "(sign((n mod -6)) mod ((((x_0_4 mul -9) idiv -4) sub abs(-2)) add 10))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 3 - 7 + 6 - 13 - 17 - 4 - 23 - 27 - 14 - 33 - 37 - 24 - 43 - 47 - 34 - 53 - 57 - 44 - 63 - 67 - 54", "x2": "sub x_0_3 INT+ 1 0", "tree": "(x_0_3 sub 10)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 1 + 2 + 2 + 3 + 4 + 4 + 5 + 6 + 6 + 7 + 8 + 8 + 9 + 10 + 10 + 11 + 12", "x2": "add idiv n INT- 3 relu n", "tree": "((n idiv -3) add relu(n))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 + 3 + 8 + 8 + 0 - 29 - 2 - 57 - 57 + 7 - 834 + 3 - 3242 - 3242 - 42 - 69 5549 - 2 - 1051 557 - 1051 557 - 1757 - 4837 8841 1394 + 3 - 110 4718 845 242", "x2": "add INT+ 5 sub add INT- 2 INT+ 4 sqr x_0_5", "tree": "(5 add ((-2 add 4) sub (x_0_5)**2))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 9 + 0 + 0 - 5 + 676 + 1225 + 2304 + 3969 + 6400 + 9801 + 1 4400 + 2 449 + 2 8224 + 3 8025 + 5 176 + 6 5025 + 8 2944 + 10 4329 + 12 9600 + 15 9201 + 19 3600 + 23 3289", "x2": "sqr sub sign add x_0_4 n sqr n", "tree": "((sign((x_0_4 add n)) sub (n)**2))**2", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 10 - 10 + 7 - 9 + 9 + 3 + 7 + 19 + 21 + 6 + 24 + 8 + 16 + 14 + 4 + 4 + 12 - 4 + 14 + 8 + 12 + 24 + 26 + 20", "x2": "add mod n mod INT+ 9 INT+ 1 0 sub n x_0_7", "tree": "((n mod (9 mod 10)) add (n sub x_0_7))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 1 + 5 + 3 + 3 - 3 + 10 - 6 + 38 + 30 - 27 + 124 - 74 + 530 + 461 - 437 + 2147 - 1301 + 1 44 + 9345 - 9250 + 4 7765 - 2 9461 + 24 620 + 23 5773 - 24 1800", "x2": "sub add add x_0_8 n sub mul x_0_5 n idiv sub sign INT+ 7 n sqr INT- 8 n", "tree": "(((x_0_8 add n) add ((x_0_5 mul n) sub ((sign(7) sub n) idiv (-8)**2))) sub n)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 4 - 4 + 10 + 0 - 10 - 9 + 7 - 10 + 8 + 4 - 7 + 1 + 1 + 11 + 1 + 1 + 1 + 8 + 1 + 9 + 5 + 1 + 2 + 2 + 12 + 2 + 2 + 2 + 9", "x2": "add relu x_0_11 idiv sign INT+ 3 sign mod sub n n idiv sqr INT- 4 INT+ 7", "tree": "(relu(x_0_11) add (sign(3) idiv sign(((n sub n) mod ((-4)**2 idiv 7)))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 1 + 6 + 4 + 6 - 8 + 1 - 42 - 63 - 79 - 99 - 120 - 132 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576", "x2": "sub idiv n abs x_0_6 sqr n", "tree": "((n idiv abs(x_0_6)) sub (n)**2)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 9 + 13 + 14 + 20 + 21 + 29 + 30 + 40 + 41 + 53 + 54 + 68 + 69 + 85 + 86 + 104 + 105", "x2": "add abs n add abs sqr idiv n add idiv n n INT- 3 INT+ 6", "tree": "(abs(n) add (abs(((n idiv ((n idiv n) add -3)))**2) add 6))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 1 + 8 - 9 - 10 - 1 - 7 - 71 - 89 - 109 - 11 - 60 - 5053 - 7934 - 1 1895 - 136 - 3616 - 2553 2826 - 6294 8374 - 1 4149 1044 - 1 8516 - 1307 5477 - 651 9252 354 6298 - 3962 4977 8924 3899", "x2": "mul relu add n sqr x_0_5 sign INT- 9", "tree": "(relu((n add (x_0_5)**2)) mul sign(-9))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 6 - 2 + 5 + 8 - 5 - 8 - 7 + 6 - 1 + 7 - 10 - 936 - 312 + 910 + 1920 - 1360 - 2448 - 2142 + 2280 - 380 + 3234 - 5060 - 51 6672 - 17 2224 + 54 6000 + 134 7840 - 102 8160 - 198 7776 - 173 9304", "x2": "idiv mul n mul x_0_11 sub n sign x_0_10 idiv n n", "tree": "((n mul (x_0_11 mul (n sub sign(x_0_10)))) idiv (n idiv n))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "+ 8 - 6 + 6 + 10 - 4 - 1 - 6 - 3 - 6 - 6 + 4 - 2 - 3 - 2 + 4 - 12 - 3 - 14 - 8 - 23 - 16 - 15 - 30 - 21 - 46 - 25 - 81 - 44 - 110", "x2": "add x_0_2 sub add n add x_0_7 x_0_11 abs n", "tree": "(x_0_2 add ((n add (x_0_7 add x_0_11)) sub abs(n)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 9 + 5 + 4 - 4 + 8 + 33 - 3 + 4 + 9 + 18 + 77 + 3 + 29 + 59 + 123 + 555 + 41 + 279 + 609 + 1373 + 6681 + 555 + 3929", "x2": "add add mul sub n INT+ 9 x_0_5 abs abs n idiv INT+ 7 abs mul n abs x_0_1", "tree": "((((n sub 9) mul x_0_5) add abs(abs(n))) add (7 idiv abs((n mul abs(x_0_1)))))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 2304 + 9409 + 2 1316 + 3 8025 + 5 9536 + 8 5849 + 11 6964 + 15 2881 + 19 3600 + 23 9121 + 28 9444 + 34 4569 + 40 4496 + 46 9225 + 53 8756 + 61 3089 + 69 2224 + 77 6161", "x2": "sqr sub abs mul n sqr abs INT+ 7 sqr INT- 1", "tree": "((abs((n mul (abs(7))**2)) sub (-1)**2))**2", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 0 - 4 - 2 + 7 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3", "x2": "abs idiv idiv n INT+ 7 sign x_0_5", "tree": "abs(((n idiv 7) idiv sign(x_0_5)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 3 - 6 + 3 - 1 - 4 - 19 - 90 - 367 - 1481 - 5942 - 2 3803 - 9 5320 - 38 1667 - 152 8171 - 611 8650 - 2449 8429 - 9808 9064 - 3 9273 7953 - 15 7248 15 - 62 9603 8744 - 252 865 3441 - 1009 3270 2866", "x2": "add INT- 1 sub add x_0_5 mul add x_0_1 mod relu INT+ 1 sub x_0_1 n INT+ 2 INT- 7", "tree": "(-1 add ((x_0_5 add ((x_0_1 add (relu(1) mod (x_0_1 sub n))) mul 2)) sub -7))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 2 + 10 - 9 + 9 + 2 - 10 - 9 + 9 - 2 + 10 - 9 - 9 - 2 - 10 + 9 + 9 + 2 - 10 + 9 + 9 - 2", "x2": "sub mul x_0_4 sign x_0_3 relu idiv INT+ 1 mod n INT- 6", "tree": "((x_0_4 mul sign(x_0_3)) sub relu((1 idiv (n mod -6))))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 10 - 8 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4", "x2": "relu relu x_0_3", "tree": "relu(relu(x_0_3))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 10 + 4 + 7 + 0 + 8 - 6 - 3 + 8 + 10 - 9 + 5 + 8 + 1 + 9 - 5 - 2 + 9 + 11 - 8 + 6 + 9 + 2 + 10 - 4 - 1 + 10 + 12", "x2": "add sign mod idiv x_0_10 INT- 8 sign INT+ 3 x_0_9", "tree": "(sign(((x_0_10 idiv -8) mod sign(3))) add x_0_9)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 10 + 4 + 10 + 1 - 8 + 1 + 100 + 16 + 100 + 1 + 64 + 1 + 1 0 + 256 + 1 0 + 1 + 4096 + 1 + 1 0 0 + 6 5536 + 1 0 0 + 1 + 1677 7216", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 9 - 6 - 1 - 6 - 4 - 4 - 9 - 6 - 1 - 4 - 5 - 4 - 1 - 6 - 9 + 0 - 9 - 6", "x2": "mod sqr sub n mod add n INT+ 6 mul sqr sign INT+ 5 n INT- 1 0", "tree": "(((n sub ((n add 6) mod ((sign(5))**2 mul n))))**2 mod -10)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 7 + 7 + 3 - 10 + 6 + 8 - 5 + 45 + 46 + 7 + 99 + 36 + 65 + 27 + 2028 + 2120 + 54 + 9807 + 1303 + 4233 + 738 + 411 2794 + 449 4411 + 2928 + 9617 7262", "x2": "add relu sqr x_0_7 add sub n INT+ 1 0 INT- 2", "tree": "(relu((x_0_7)**2) add ((n sub 10) add -2))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 2 - 1 + 12 + 16 + 40 + 24 + 42 + 0 + 54 + 0 + 198 + 0 + 156 + 0 + 360 + 0 + 204 + 0 + 342 + 0", "x2": "mul n mul INT+ 2 mod add mul x_0_1 n add x_0_2 x_0_2 n", "tree": "(n mul (2 mul (((x_0_1 mul n) add (x_0_2 add x_0_2)) mod n)))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 7 + 2 + 3 + 3 + 2 + 4 + 2 + 2 + 1 + 1 + 9 + 12 + 7 + 2 + 10 + 13 + 16 + 15 + 1 + 10 + 17 + 17", "x2": "mod mod sub add mod n x_0_3 x_0_2 x_0_5 n n", "tree": "(((((n mod x_0_3) add x_0_2) sub x_0_5) mod n) mod n)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 5 + 1 - 5 - 5 + 4304 6734 + 4304 6696 + 4304 6724 + 4304 6716 + 4304 6692 + 3 132 7212 + 1 2913 9436 + 1 2914 1644 + 1 2913 7164 + 1 2914 5932 + 21 9537 2556 + 8 1787 9052 + 4 7355 4924 + 1 2903 4188 + 8 1814 5804 + 159 6973 5564 + 8 1873 7676 + 21 9401 764", "x2": "sub sqr sqr sqr INT+ 9 add INT- 3 mod mul x_0_1 INT+ 2 mul INT- 8 x_0_5", "tree": "((((9)**2)**2)**2 sub (-3 add ((x_0_1 mul 2) mod (-8 mul x_0_5))))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 3 + 6 + 10 + 15 + 21 + 28 + 36 + 45 + 55 + 66 + 78 + 91 + 105 + 120 + 136 + 153 + 171 + 190", "x2": "sub abs add n x_0_1 sqr relu idiv sign x_0_1 n", "tree": "(abs((n add x_0_1)) sub (relu((sign(x_0_1) idiv n)))**2)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144", "x2": "sqr sub n INT+ 6", "tree": "((n sub 6))**2", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 - 10 - 8 + 2 + 1 + 3 - 1 - 2 - 1 - 2 - 3 - 3 - 4 - 5 - 5 - 8 - 17 - 18 + 9 + 1 + 1", "x2": "idiv abs n sub INT- 6 x_0_3", "tree": "(abs(n) idiv (-6 sub x_0_3))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 3 - 10 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign add x_0_3 sub relu INT- 1 relu mod relu INT- 8 n", "tree": "sign((x_0_3 add (relu(-1) sub relu((relu(-8) mod n)))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 3 + 8 + 10 - 2 + 2 - 1 + 2 + 25 + 4 + 27 + 6 + 29 + 8 + 31 + 10 + 33 + 12 + 35 + 14 + 37 + 16 + 39 + 18 + 41 + 20", "x2": "sub sub add n n INT- 7 mod mul relu sign abs x_0_8 INT- 2 x_0_1", "tree": "(((n add n) sub -7) sub ((relu(sign(abs(x_0_8))) mul -2) mod x_0_1))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 3 - 4 - 10 - 3 - 4 - 10 - 3 - 4 - 10 - 3 - 4 - 10 - 3 - 4 - 10 - 3 - 4 - 10 - 3 - 4 - 10", "x2": "mul x_0_3 sign idiv x_0_1 idiv INT- 9 INT+ 5", "tree": "(x_0_3 mul sign((x_0_1 idiv (-9 idiv 5))))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 + 2 - 6 - 8 + 4 - 12 - 16 + 8 - 24 - 32 + 16 - 48 - 64 + 32 - 96 - 128 + 64 - 192 - 256 + 128 - 384", "x2": "add x_0_3 x_0_3", "tree": "(x_0_3 add x_0_3)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 9 - 1 + 2 - 10 - 6 - 9 - 3 + 9 + 36 + 25 + 9 + 87 + 169 + 64 + 144 + 1 + 49 + 49 + 16 + 49 + 49 + 49 + 49 + 289 + 49", "x2": "mul mod sqr sub relu sub relu n x_0_8 relu INT+ 7 relu mul n n INT+ 1", "tree": "((((relu((relu(n) sub x_0_8)) sub relu(7)))**2 mod relu((n mul n))) mul 1)", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 1 + 5 + 10 - 1 - 8 - 4 + 14 + 72 + 135 + 50 + 22 + 48 + 299 + 1148 + 2190 + 992 + 595 + 1116 + 5966 + 2 3280 + 4 6347 + 2 2220 + 1 4122 + 2 7264", "x2": "mul mod INT- 4 mul add n x_0_6 idiv n add INT- 3 n n", "tree": "((-4 mod ((n add x_0_6) mul (n idiv (-3 add n)))) mul n)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 2 + 3 + 5 + 6 + 8 + 10 + 12 + 14 + 16 + 19 + 21 + 24 + 27", "x2": "idiv sub n idiv sqr n sign idiv sqr n n sub INT- 9 mod INT+ 2 n", "tree": "((n sub ((n)**2 idiv sign(((n)**2 idiv n)))) idiv (-9 sub (2 mod n)))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 4 + 0 + 0 - 1 - 3 - 5 - 7 - 9 - 12 - 15 - 19 - 22 - 26 - 31 - 36 - 41 - 46 - 52 - 58", "x2": "idiv sub sqr n sub x_0_1 add INT- 4 INT- 5 INT- 7", "tree": "(((n)**2 sub (x_0_1 sub (-4 add -5))) idiv -7)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 8 + 3 + 0 + 1 + 0 + 7 + 0 + 1 + 0 + 11 + 0 + 1 + 0 + 15 + 0 + 1 + 0 + 19 + 0", "x2": "relu idiv n add relu x_0_2 sub relu n n", "tree": "relu((n idiv (relu(x_0_2) add (relu(n) sub n))))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 - 8 - 3 - 3 - 7 + 4 + 7 - 9 - 5 + 57 + 85 + 29 + 43 + 105 + 69 + 117 + 210 + 175 + 1054 + 1657 + 504 + 877 + 2298 + 1446 + 2750 + 4406 + 3068", "x2": "abs sub x_0_7 mul x_0_9 n", "tree": "abs((x_0_7 sub (x_0_9 mul n)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 4 + 2 + 4 + 3 + 10 - 2 + 10 + 9 - 6 - 4 - 7 - 4 + 7 + 22 - 33 - 56 - 3 - 58 + 44 - 152 + 111 + 370 - 11 - 430 + 943 + 4990 - 6243 - 1138 + 609", "x2": "sub mul x_0_11 x_0_6 relu n", "tree": "((x_0_11 mul x_0_6) sub relu(n))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 8 - 5 + 10 - 4 + 2 + 6 - 5 + 8 + 1 - 5 + 9 - 7 - 1 + 7 - 8 + 10 + 1 - 6 + 12 - 8 - 2 + 9 - 9 + 12 + 2 - 7", "x2": "sub add idiv INT+ 3 INT- 8 abs idiv x_0_8 INT- 2 x_0_4", "tree": "(((3 idiv -8) add abs((x_0_8 idiv -2))) sub x_0_4)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 10 - 7 + 4 + 7 + 1 + 2 + 1 + 7 + 9 + 1 + 4 + 1 + 7 + 6 + 1 + 16 + 1 + 11 + 16 + 1 + 14 + 1", "x2": "mod sqr x_0_5 n", "tree": "((x_0_5)**2 mod n)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 + 6 + 4 - 3 - 5 + 8 + 10 + 6 + 7 + 10 + 12 + 4 + 5 + 6 + 7 + 2 + 3 + 6 + 4 + 6 + 8 + 8 + 6 + 8", "x2": "sub INT+ 8 mod mod n abs mul INT- 4 INT- 1 0 sub n sub n x_0_6", "tree": "(8 sub ((n mod abs((-4 mul -10))) mod (n sub (n sub x_0_6))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 3 - 1 - 1 - 3 - 2 - 3 - 1 - 4 - 2 - 3 - 2 - 4 - 4 - 2 - 3 - 2 - 4 - 4", "x2": "mod abs sub mod INT- 5 mul INT+ 9 relu INT+ 7 mul n n INT- 5", "tree": "(abs(((-5 mod (9 mul relu(7))) sub (n mul n))) mod -5)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 5 - 8 + 9 + 6 + 5 + 225 + 36 + 16 + 484 + 400 + 400 + 5 8081 + 2809 + 1156 + 25 3009 + 17 6400 + 17 7241 + 33 7595 8609 + 802 224 + 139 2400 + 640 2620 5156 + 311 2613 3476 + 314 2394 3824", "x2": "sqr abs sub x_0_6 sub idiv mul x_0_3 INT- 3 x_0_3 n", "tree": "(abs((x_0_6 sub (((x_0_3 mul -3) idiv x_0_3) sub n))))**2", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 3 + 10 + 10 + 5 - 9 - 4 - 2 - 6 + 1 + 4 - 8 - 32 + 61 - 270 + 250 - 536 + 1509 + 540 - 6032 + 4331 - 19 3001 - 26 4177 - 5211 256 + 6604 4323 - 279 3109 7198 - 996 6088 3142 + 15 827 9248 6942 - 601 1544 4711 1032 - 6 5323 5742 6094 5244", "x2": "add abs mod x_0_6 n sub relu x_0_11 mul x_0_9 x_0_2", "tree": "(abs((x_0_6 mod n)) add (relu(x_0_11) sub (x_0_9 mul x_0_2)))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 6 - 3 + 4 + 7 + 4 + 4 - 5 - 2 + 5 + 8 + 5 + 5 - 4 - 1 + 6 + 9 + 6 + 6 - 3 + 0 + 7 + 10 + 7 + 7", "x2": "sub x_0_6 idiv INT- 5 add add x_0_6 n n", "tree": "(x_0_6 sub (-5 idiv ((x_0_6 add n) add n)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 3 - 3 - 3 - 3 - 7 - 7 - 8 - 8 - 12 - 12 - 12 - 12 - 16 - 17 - 17 - 17 - 21 - 21", "x2": "sub idiv abs n INT- 7 sub n relu mod add sub INT- 2 mul x_0_1 INT- 8 n INT+ 4", "tree": "((abs(n) idiv -7) sub (n sub relu((((-2 sub (x_0_1 mul -8)) add n) mod 4))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 10 + 4 + 0 + 6 - 1728 - 2013 - 2308 - 2601 - 2884 - 4907 - 5481 - 6065 - 6647 - 7219 - 9531 - 1 394 - 1 1267 - 1 2138 - 1 2999 - 1 5600 - 1 6752 - 1 7914", "x2": "sub x_0_5 add n mul mul mul INT+ 4 n INT+ 8 INT+ 9", "tree": "(x_0_5 sub (n add (((4 mul n) mul 8) mul 9)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 6 - 1 + 2 - 10 + 10 - 3 - 8 - 5 - 5 - 5 + 9 - 5 - 2 + 3 - 5 - 5 + 17 - 5 + 4 + 0 - 5 - 5 - 5 - 5 + 4", "x2": "add relu add add sub INT+ 4 idiv idiv sqr n x_0_3 x_0_8 INT- 6 idiv n INT+ 8 INT- 5", "tree": "(relu((((4 sub (((n)**2 idiv x_0_3) idiv x_0_8)) add -6) add (n idiv 8))) add -5)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 3 - 12 - 27 - 48 - 75 - 108 - 147 - 192 - 243 - 300 - 363 - 432 - 507 - 588 - 675 - 768 - 867 - 972", "x2": "mul sqr n INT- 3", "tree": "((n)**2 mul -3)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 7 - 4 + 2 - 30 - 11 + 0 + 18 - 26 + 7 - 8 + 44 + 22 + 0 + 12 - 96 + 0 - 4 + 80 + 0 + 0 + 0", "x2": "mul sign sub INT- 3 n mul idiv add x_0_3 INT+ 1 0 n sub x_0_4 INT- 4", "tree": "(sign((-3 sub n)) mul (((x_0_3 add 10) idiv n) mul (x_0_4 sub -4)))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 7 + 18 + 118 + 407 + 1083 + 2452 + 4952 + 9177 + 1 5901 + 2 6102 + 4 986 + 6 2011 + 9 911 + 12 9720 + 18 796 + 24 6845 + 33 945 + 43 6570 + 56 7614", "x2": "add sqr add INT+ 1 sqr n x_0_1", "tree": "(((1 add (n)**2))**2 add x_0_1)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 4 + 4 + 4 + 4 + 4 + 9 + 9 + 9 + 9", "x2": "sqr relu idiv n INT+ 5", "tree": "(relu((n idiv 5)))**2", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296", "x2": "mul sqr n INT+ 4", "tree": "((n)**2 mul 4)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 - 3 + 10 - 3 - 8 - 7 + 2 + 8 + 6 + 6 + 9 + 8 + 4 + 6 + 1 + 7 + 5 + 5 + 8 + 7 + 3 + 5 + 0 + 6 + 4 + 4", "x2": "add mod x_0_8 abs n INT- 1", "tree": "((x_0_8 mod abs(n)) add -1)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3", "x2": "idiv n add INT- 9 sqr mod INT+ 7 abs INT- 6", "tree": "(n idiv (-9 add ((7 mod abs(-6)))**2))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 - 2 + 2 + 7 + 5 + 5 + 8 + 2 - 3 - 8 + 0 + 5 + 10 + 8 + 8 + 12 + 6 + 1 - 4 + 5 + 10 + 15 + 13 + 14 + 18 + 12 + 7", "x2": "add x_0_9 idiv relu n INT+ 4", "tree": "(x_0_9 add (relu(n) idiv 4))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 1 - 7 - 7 - 8 - 2 - 9 + 6 + 16 + 17 + 26 + 27 + 29 + 24 + 32 + 18 + 9 + 9 + 1 + 1 + 0 + 6 - 1 + 14 + 24 + 25", "x2": "add n sub INT+ 8 x_0_8", "tree": "(n add (8 sub x_0_8))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 7 - 79 - 55 + 633 + 441 - 5063 - 3527 + 4 505 + 2 8217 - 32 4039 - 22 5735 + 259 2313 + 180 5881 - 2073 8503 - 1444 7047 + 1 6590 8025 + 1 1557 6377 - 13 2726 4199 - 9 2461 1015", "x2": "add sqr idiv INT- 2 relu abs n mul x_0_2 INT- 8", "tree": "(((-2 idiv relu(abs(n))))**2 add (x_0_2 mul -8))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 - 33 + 992 - 3 845 + 92 5230 - 2683 1815 + 7 5129 652 - 202 8484 7793 + 5274 604 2410 - 13 1851 5106 475 + 316 4436 2545 1160 - 7278 2033 8537 6933 + 16 120 4744 7829 2262 - 336 2529 9640 4413 7775 + 6725 599 2808 8275 5220 - 12 7776 1386 3367 7234 9465 + 229 9970 4954 619 229 82 - 3909 9498 4219 523 3893 1683", "x2": "mul abs sub n mul INT- 4 INT- 9 sub INT+ 2 add x_0_1 n", "tree": "(abs((n sub (-4 mul -9))) mul (2 sub (x_0_1 add n)))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 10 + 10 - 1 - 10 + 8 - 4 + 0 - 18 + 5 + 10 + 10 - 1 - 10 + 8 - 4 + 0 - 18 + 5 + 10 + 10 - 1 - 10 + 8", "x2": "sub mul x_0_6 INT- 1 add relu idiv INT+ 6 n x_0_3", "tree": "((x_0_6 mul -1) sub (relu((6 idiv n)) add x_0_3))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 8 - 3 + 3 + 10 + 48 - 64 - 24 + 24 + 80 + 384 - 512 - 192 + 192 + 640 + 3072 - 4096 - 1536 + 1536 + 5120 + 2 4576 - 3 2768 - 1 2288", "x2": "mul x_0_5 INT+ 8", "tree": "(x_0_5 mul 8)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 1 + 9 + 7 + 5 + 56 + 7 + 280 + 7 + 1960 + 7 + 1 3692 + 7 + 9 5844 + 7 + 67 880 + 7 + 469 6146 + 7 + 3287 2980 + 7", "x2": "add mod INT+ 7 x_0_1 mul mul idiv x_0_2 n x_0_3 n", "tree": "((7 mod x_0_1) add (((x_0_2 idiv n) mul x_0_3) mul n))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 6 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5", "x2": "idiv n add INT- 4 idiv mod mul INT- 4 mul sub x_0_1 idiv mod x_0_2 sqr n x_0_1 INT+ 3 n n", "tree": "(n idiv (-4 add (((-4 mul ((x_0_1 sub ((x_0_2 mod (n)**2) idiv x_0_1)) mul 3)) mod n) idiv n)))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sub sqr abs n relu INT- 7", "tree": "((abs(n))**2 sub relu(-7))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 2 + 4 - 4 - 4 + 8 - 6 + 72 + 18 + 36 - 36 - 36 + 72 - 54 + 648 + 162 + 324 - 324 - 324 + 648 - 486 + 5832 + 1458 + 2916 - 2916", "x2": "mul x_0_7 abs mod INT+ 9 sub sub mul n add n INT+ 8 n sub INT+ 4 sqr INT- 1", "tree": "(x_0_7 mul abs((9 mod (((n mul (n add 8)) sub n) sub (4 sub (-1)**2)))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 1 + 6 + 6 + 1 + 2 + 10 + 10 + 12 + 21 + 35 + 43 + 44 + 53 + 60 + 60 + 55 + 56 + 64 + 64 + 66 + 75 + 89 + 97", "x2": "abs sub x_0_6 mul INT- 9 sub INT+ 7 n", "tree": "abs((x_0_6 sub (-9 mul (7 sub n))))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 10 - 4 + 4 + 5 + 5 + 6 + 8 + 9 + 9 + 10 + 11 + 12 + 14 + 14 + 15 + 16 + 17 + 19 + 19 + 20", "x2": "add idiv mod sub INT+ 1 0 x_0_3 INT- 5 add INT+ 4 sub n n n", "tree": "((((10 sub x_0_3) mod -5) idiv (4 add (n sub n))) add n)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 - 10 + 5 - 900 - 1 6000 + 1 2500 - 324 0 - 7840 0 + 8000 0 - 262 4400 0 - 7840 0 0 + 9680 0 0 - 377 9136 0 0 - 1 3249 6000 0 0 + 1 8972 8000 0 0 - 850 3056 0 0 0 - 3 3918 9760 0 0 0 + 5 4831 3920 0 0 0 - 2754 9901 4400 0 0 0 - 12 2447 5033 6000 0 0 0 + 21 9325 5680 0 0 0 0", "x2": "mul sqr add n add INT- 1 0 mul n INT+ 9 x_0_3", "tree": "(((n add (-10 add (n mul 9))))**2 mul x_0_3)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 5 + 8 - 6 + 8 + 3 + 9 + 10 - 16 + 12 - 16 + 3 - 18 + 20 + 48 + 24 + 48 - 9 + 54 - 60 + 144 - 96 + 144 + 36", "x2": "mul idiv n mul mod sign abs INT+ 8 INT- 8 sign x_0_3 x_0_6", "tree": "((n idiv ((sign(abs(8)) mod -8) mul sign(x_0_3))) mul x_0_6)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 144 + 2592 + 4 6656 + 83 9808 + 1511 6544 + 2 7209 7792 + 48 9776 256 + 881 5968 4608 + 1 5868 7432 2944 + 28 5637 3781 2992 + 514 1472 8063 3856 + 9254 6510 5140 9408 + 16 6583 7189 2536 9344 + 299 8506 9406 5664 8192 + 5397 3124 9318 1966 7456 + 9 7151 6248 7727 5401 4208 + 174 8729 2477 9095 7225 5744 + 3147 7126 4602 3723 60 3392", "x2": "mul mul mul INT- 3 sign sqr mul n sqr sqr mul relu INT- 2 x_0_1 x_0_1 INT- 6", "tree": "(((-3 mul sign(((n mul (((relu(-2) mul x_0_1))**2)**2))**2)) mul x_0_1) mul -6)", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 10 + 5 - 3 - 1 - 20 - 5 - 13 - 11 - 30 - 15 - 23 - 21 - 40 - 25 - 33 - 31 - 50 - 35 - 43 - 41 - 60", "x2": "add INT- 1 0 x_0_4", "tree": "(-10 add x_0_4)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 - 7 + 2 + 0 + 6 + 4 + 3 - 10 + 0 - 1 - 5 + 0 + 0 + 0 + 4 + 0 + 36 + 16 + 9 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 16 + 0 + 1296", "x2": "sqr relu x_0_12", "tree": "(relu(x_0_12))**2", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 9 + 6 - 4 - 6 - 10 + 10 - 1 + 7 + 17 + 18 + 23 + 39 + 56 + 81 + 106 + 165 + 248 + 356 + 522 + 771 + 1128 + 1651 + 2423 + 3552 + 5204 + 7628", "x2": "sub add x_0_1 x_0_3 sub INT- 1 idiv n x_0_8", "tree": "((x_0_1 add x_0_3) sub (-1 sub (n idiv x_0_8)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 8 - 10 - 13 - 17 - 22 - 28 - 35 - 43 - 52 - 62 - 73 - 85 - 98 - 112 - 127 - 143 - 160 - 178 - 197", "x2": "add x_0_1 idiv n sign x_0_1", "tree": "(x_0_1 add (n idiv sign(x_0_1)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 3", "x2": "idiv n INT+ 6", "tree": "(n idiv 6)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 - 8 - 10 + 7 + 4 - 1 - 10 + 2 - 3 + 9 - 3 + 4 - 10 + 14 - 3 + 16 - 10 + 21 - 10 + 33 - 10 + 40 - 17 + 57", "x2": "add x_0_4 add x_0_6 INT+ 3", "tree": "(x_0_4 add (x_0_6 add 3))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 10 + 9 - 6 + 5 + 1 - 1 + 12 + 4 + 5 + 2 + 4 + 6 + 7 + 5 + 6 + 5 + 6 + 6 + 5 + 5 + 6 + 5 + 6 + 6", "x2": "add INT+ 4 idiv n add x_0_4 x_0_7", "tree": "(4 add (n idiv (x_0_4 add x_0_7)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 8 + 0 - 8 + 5 + 5 + 8 + 0 + 8 + 5 + 5 + 8 + 0 + 8 + 5 + 5 + 8 + 0 + 8 + 5 + 5 + 8 + 0", "x2": "abs idiv x_0_5 sign abs INT- 1", "tree": "abs((x_0_5 idiv sign(abs(-1))))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 3 - 4 + 3 + 1600 + 625 + 144 + 0 + 0 + 0 + 2500 + 3025 + 3600 + 0 + 0 + 0 + 6400 + 7225 + 8100 + 0 + 0 + 0", "x2": "sqr mul idiv INT+ 1 0 add x_0_3 INT+ 2 n", "tree": "(((10 idiv (x_0_3 add 2)) mul n))**2", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 - 20 - 80 - 320 - 1280 - 5120 - 2 480 - 8 1920 - 32 7680 - 131 720 - 524 2880 - 2097 1520 - 8388 6080 - 3 3554 4320 - 13 4217 7280 - 53 6870 9120 - 214 7483 6480 - 858 9934 5920 - 3435 9738 3680", "x2": "mul sub mul mul x_0_1 idiv INT+ 8 x_0_1 sign n x_0_1 INT- 2", "tree": "((((x_0_1 mul (8 idiv x_0_1)) mul sign(n)) sub x_0_1) mul -2)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 24 + 55 + 156 + 399 + 1264 + 3609 + 1 2660 + 3 9721 + 15 1944 + 51 6399 + 212 7244 + 774 6015 + 3403 5936 + 1 3168 2289 + 6 1264 6884 + 25 196 3529 + 122 5293 7720", "x2": "mul sub x_0_2 INT- 2 n", "tree": "((x_0_2 sub -2) mul n)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 9 + 5 - 36 + 292 - 1895 + 1 6758 - 15 6954 + 165 8000 - 1915 9569 + 2 4133 5910 - 32 8696 556 + 481 3161 9696 - 7539 251 7459 + 12 5761 6327 1966 - 222 5680 6236 4830 + 4164 7448 3489 2000 - 8 2151 6333 7376 9973 + 170 3625 6218 1202 7910 - 3705 1529 9167 3341 8352 + 8 4324 8135 6433 9004 2080", "x2": "mul mul n sub x_0_1 sub mul INT- 3 sub INT- 7 x_0_2 idiv INT+ 1 mod sqr x_0_2 x_0_1 INT- 1", "tree": "((n mul (x_0_1 sub ((-3 mul (-7 sub x_0_2)) sub (1 idiv ((x_0_2)**2 mod x_0_1))))) mul -1)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 4 - 7 + 4 - 7 - 4 + 7 - 4 - 7 + 4 - 7 - 4 + 7 - 4 - 7 + 4 - 7 - 4 + 7 - 4", "x2": "mul sign mul abs abs x_0_1 x_0_1 x_0_2", "tree": "(sign((abs(abs(x_0_1)) mul x_0_1)) mul x_0_2)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296", "x2": "sqr add n n", "tree": "((n add n))**2", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 2 - 6 - 3 - 5 - 9 - 2 - 2 + 79 + 19 + 108 + 39 + 135 + 70 + 157 + 101 + 109 + 196 + 57 + 304 + 2 + 412 - 40 + 515 + 1 + 479", "x2": "sub sub sqr n x_0_8 add x_0_1 mod mul x_0_4 relu INT- 9 x_0_4", "tree": "(((n)**2 sub x_0_8) sub (x_0_1 add ((x_0_4 mul relu(-9)) mod x_0_4)))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 8 + 18 + 35 + 61 + 98 + 148 + 213 + 295 + 396 + 518 + 663 + 833 + 1030 + 1256 + 1513 + 1803 + 2128 + 2490", "x2": "add add x_0_1 sqr n INT+ 1", "tree": "((x_0_1 add (n)**2) add 1)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 + 9 + 13 + 13 + 9 + 14 + 14 + 9 + 13 + 13 + 9 + 14 + 14 + 9 + 13 + 13 + 9 + 14", "x2": "add mod sub x_0_1 x_0_2 sqr INT- 3 sqr abs INT+ 3", "tree": "(((x_0_1 sub x_0_2) mod (-3)**2) add (abs(3))**2)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 1 - 6 + 8 + 3 + 2 + 4 - 5 + 3 + 3 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0", "x2": "idiv x_0_10 abs sub sub x_0_7 n INT+ 6", "tree": "(x_0_10 idiv abs(((x_0_7 sub n) sub 6)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 4 - 8 + 0 - 1 + 1 + 8 + 4 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign sub x_0_7 relu sign x_0_6", "tree": "sign((x_0_7 sub relu(sign(x_0_6))))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 7 - 40 - 238 - 1426 - 8554 - 5 1322 - 30 7930 - 184 7578 - 1108 5466 - 6651 2794 - 3 9907 6762 - 23 9446 570 - 143 6676 3418 - 862 58 506 - 5172 348 3034 - 3 1032 2089 8202 - 18 6193 2538 9210 - 111 7159 5233 5258", "x2": "sub sub relu abs INT- 5 mul abs x_0_1 INT+ 6 INT+ 3", "tree": "((relu(abs(-5)) sub (abs(x_0_1) mul 6)) sub 3)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 4 - 10 - 10 - 10 + 2 + 190 + 20 + 0 + 0 + 130 + 2040 + 2230 + 340 + 150 + 1460 + 2 1870 + 4 2880 + 2 5890 + 5100 + 1 6310 + 23 3520 + 64 7730", "x2": "relu mul add x_0_5 add n relu x_0_6 INT+ 1 0", "tree": "relu(((x_0_5 add (n add relu(x_0_6))) mul 10))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 2 + 0 - 9 + 1 + 8 + 4 + 10 + 2 + 4 + 5 + 5 + 12 + 8 + 14 + 6 + 8 + 9 + 9 + 16 + 12 + 18 + 10 + 12 + 13", "x2": "abs sub INT+ 8 sub relu INT+ 6 add x_0_7 INT+ 2", "tree": "abs((8 sub (relu(6) sub (x_0_7 add 2))))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 48 + 459 + 7408 + 18 5325 + 667 1916 + 3 2692 4227 + 209 2315 1040 + 1 6947 7523 4969 + 169 4775 2349 7900 + 2 506 7803 4324 7231 + 295 2976 3694 2760 2992 + 4 9905 3006 4332 6490 7845 + 978 1438 9260 9199 2194 364 + 22 82 3758 3706 9824 3658 5275 + 5634 1088 2142 8987 5037 6583 4496 + 162 8257 4493 9297 7388 5883 2617 4257 + 5 2755 5413 6033 2467 3902 6176 8046 5100", "x2": "mul relu abs abs add n x_0_1 sqr n", "tree": "(relu(abs(abs((n add x_0_1)))) mul (n)**2)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 + 27 + 416 + 1 375 + 37 3464 + 1829 9687 + 11 7117 9904 + 948 6557 2143 + 9 4865 5721 4200 + 1147 8734 2291 8079 + 16 5293 7729 20 3232 + 2793 4647 6201 3434 6039 + 54 7519 933 5463 3182 3448 + 1 2319 1796 47 9246 6027 5575 + 315 3709 9777 2268 7130 3054 6944 + 9 1142 2183 5618 5658 658 2806 6527 + 2953 78 7474 415 3213 3282 9355 4424", "x2": "abs mul sub n mul relu x_0_1 n n", "tree": "abs(((n sub (relu(x_0_1) mul n)) mul n))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 0 + 11 + 24 + 39 + 56 + 75 + 96 + 119", "x2": "abs mul mod n relu INT+ 1 0 relu n", "tree": "abs(((n mod relu(10)) mul relu(n)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 + 10 + 4 + 7 + 5 + 4 - 2 - 1 + 1 + 0 - 1 + 1 - 2 - 3 + 1 + 0 - 3 + 1 - 2 - 3 + 1 + 0 - 3", "x2": "add sign x_0_6 mod add n n INT- 3", "tree": "(sign(x_0_6) add ((n add n) mod -3))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 0 + 10 + 1 - 2 - 3 + 0 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 + 0 - 1", "x2": "idiv x_0_6 add n abs sqr n", "tree": "(x_0_6 idiv (n add abs((n)**2)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 8 - 2 + 4 - 8 - 12 - 22 - 15 - 31 - 48 - 51 - 144 - 33 - 336 - 87 - 751 - 98 - 1959 - 6 - 5863 - 13", "x2": "add sub n add abs add mod x_0_4 INT+ 7 mul INT- 3 mod abs x_0_1 x_0_2 idiv n INT+ 2 INT- 9", "tree": "((n sub (abs(((x_0_4 mod 7) add (-3 mul (abs(x_0_1) mod x_0_2)))) add (n idiv 2))) add -9)", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 8 - 1 + 2 + 8 + 2 + 4 + 10 + 35 - 160 - 8 - 2 - 56 - 54 - 320 - 100 - 385 + 1120 + 72 + 14 + 280 - 54 - 1 1200 + 300 + 6545", "x2": "mul x_0_8 sub idiv sqr n add x_0_3 idiv INT+ 5 x_0_1 INT+ 5", "tree": "(x_0_8 mul (((n)**2 idiv (x_0_3 add (5 idiv x_0_1))) sub 5))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 576 + 529 + 484 + 441 + 400 + 361 + 324 + 289 + 256 + 225 + 196 + 169 + 144 + 121 + 100 + 81 + 64", "x2": "sqr sub n sqr INT- 5", "tree": "((n sub (-5)**2))**2", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 14 + 22 + 8 - 14 + 6 + 20 + 14 - 6 - 8 + 14 + 22 + 8 - 14 + 6 + 20 + 14 - 6", "x2": "sub abs x_0_1 x_0_2", "tree": "(abs(x_0_1) sub x_0_2)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 + 8 - 10 + 0 - 8 + 10 + 8 - 4 - 5 - 8 + 1 - 1 + 0 + 4 + 2 + 0 + 3 + 3 + 3 + 2 + 4 + 3 + 1 + 0 + 3 + 4 + 0", "x2": "mod add mod sqr n INT+ 6 x_0_10 sub sub INT+ 8 relu x_0_6 sign relu n", "tree": "((((n)**2 mod 6) add x_0_10) mod ((8 sub relu(x_0_6)) sub sign(relu(n))))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3", "x2": "relu mod n INT+ 7", "tree": "relu((n mod 7))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 7 - 9 + 7 - 1 - 10 - 1 - 1 + 7 + 5 + 5 + 13 + 11 + 11 + 19 + 17 + 17 + 25 + 23 + 23 + 31 + 29 + 29 + 37 + 35 + 35", "x2": "abs sub mul idiv sub INT+ 3 abs mod x_0_9 x_0_1 n relu mod n n add INT+ 6 x_0_3", "tree": "abs(((((3 sub abs((x_0_9 mod x_0_1))) idiv n) mul relu((n mod n))) sub (6 add x_0_3)))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 2 - 5 - 9 - 5 + 10 + 3 + 0 + 0 + 0 + 0 + 1 + 6 + 0 + 0 + 0 + 0 + 10 + 6 + 0 + 0 + 0 + 0 + 8", "x2": "mod relu mul x_0_6 INT+ 1 0 n", "tree": "(relu((x_0_6 mul 10)) mod n)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 7 + 0 - 1 + 10 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1", "x2": "add sign idiv x_0_3 sub mod sqr sub sign INT+ 6 INT+ 8 n n mod mod x_0_4 INT- 1 n", "tree": "(sign((x_0_3 idiv ((((sign(6) sub 8))**2 mod n) sub n))) add ((x_0_4 mod -1) mod n))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 9 + 18 + 36 + 9 + 18 + 36 + 9 + 18 + 36 + 9 + 18 + 36 + 9 + 18 + 36 + 9 + 18", "x2": "mul mod x_0_1 INT+ 7 sub sub n n INT- 9", "tree": "((x_0_1 mod 7) mul ((n sub n) sub -9))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 3 + 4 - 10 + 9 + 2 + 4 - 2 - 8 + 9 - 6 + 8 + 8 + 15 + 23 + 8 + 22 + 10 + 10 + 4 - 4 + 12 + 0 + 12 + 14 + 18 + 30 + 16", "x2": "sub idiv x_0_7 sub abs x_0_11 n sub x_0_6 n", "tree": "((x_0_7 idiv (abs(x_0_11) sub n)) sub (x_0_6 sub n))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 4 + 5 + 5 + 3 + 9 - 5 - 6 - 4 - 4 + 5 + 5 + 3 + 9 - 5 - 6 - 4 - 4 + 5 + 5 + 3 + 9 - 5 - 6 - 4 - 4", "x2": "sub x_0_8 mod relu sub INT- 6 relu n idiv n INT- 3", "tree": "(x_0_8 sub (relu((-6 sub relu(n))) mod (n idiv -3)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 10 - 8 - 9 - 1 - 8 - 9 - 7 - 1 + 870 + 890 - 704 - 864 - 89 - 704 - 810 - 672 - 935 + 83 850 + 68 4410 - 65 4016 - 13 3056 - 6 8441 - 61 6000 - 59 6970 - 67 2000", "x2": "mul x_0_9 add sqr INT- 9 abs sub sqr abs INT- 4 abs x_0_8", "tree": "(x_0_9 mul ((-9)**2 add abs(((abs(-4))**2 sub abs(x_0_8)))))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 10 - 9 + 20 + 66 + 382 + 35 + 136 + 765 + 70 + 275 + 1524 + 143 + 546 + 3045 + 272 + 1105 + 6102 + 551 + 2220", "x2": "add n mod mul mul idiv x_0_3 n INT+ 2 n sqr x_0_2", "tree": "(n add ((((x_0_3 idiv n) mul 2) mul n) mod (x_0_2)**2))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 8 - 2 + 2 - 1 + 3 + 0 + 0 + 2 + 0 + 3 + 0 + 0 + 2 + 0 + 3 + 0 + 0 + 2 + 0 + 3 + 0 + 0", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 - 10 + 5 + 8 + 8 + 17 + 13 + 17 + 18 + 28 + 25 + 30 + 32 + 43 + 41 + 47 + 50 + 62 + 61 + 68 + 72", "x2": "abs add relu add abs x_0_4 sign sqr x_0_4 n", "tree": "abs((relu((abs(x_0_4) add sign((x_0_4)**2))) add n))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 6 + 3 - 1 - 6 - 12 - 19 - 27 - 36 - 46 - 57 - 69 - 82 - 96 - 111 - 127 - 144 - 162", "x2": "mul sub x_0_1 n mod INT+ 1 n", "tree": "((x_0_1 sub n) mul (1 mod n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 9 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 + 2 + 0 - 4 - 9 + 6 + 10 + 9 + 25 + 9 + 4 + 16 + 9 + 36 + 49 + 25 + 4 + 9 + 0 + 49 + 16 + 25 + 49 + 36", "x2": "abs sqr mod add x_0_7 add INT+ 2 mul sqr x_0_1 n INT- 9", "tree": "abs((((x_0_7 add (2 add ((x_0_1)**2 mul n))) mod -9))**2)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 3 - 4 - 6 - 10 - 18 - 34 - 66 - 130 - 258 - 514 - 1026 - 2050 - 4098 - 8194 - 1 6386 - 3 2770 - 6 5538 - 13 1074", "x2": "sub x_0_1 sub mod INT- 6 INT- 4 x_0_1", "tree": "(x_0_1 sub ((-6 mod -4) sub x_0_1))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 8 - 2 - 5 + 3 - 30 + 350 + 200 + 333 + 410 + 3762 + 5 556 + 3 3982 + 6 5478 + 9 2490 + 96 3344 + 1461 990 + 1101 510 + 2363 7938 + 3699 6420 + 4 2483 5166 + 70 7171 9666", "x2": "add n mul sqr n add sign x_0_3 abs x_0_5", "tree": "(n add ((n)**2 mul (sign(x_0_3) add abs(x_0_5))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 2 + 4 + 4 - 3 + 1 - 9 - 7 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0", "x2": "idiv x_0_7 n", "tree": "(x_0_7 idiv n)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 1 + 1 + 2 + 4 + 5 + 7 + 9 + 11 + 13 + 16 + 18 + 21 + 25 + 28 + 32", "x2": "idiv sqr mul n sign abs INT+ 4 sqr INT- 3", "tree": "(((n mul sign(abs(4))))**2 idiv (-3)**2)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 2 + 3 - 5 + 3 + 3 + 9 + 0 + 2 + 3 + 5 + 3 + 3 + 9 + 0 + 2 + 3 + 5 + 3 + 3 + 9 + 0 + 2 + 3 + 5", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 6 - 6 + 7 + 7 - 9 + 4 + 4 - 4 + 6 + 9 + 4 + 4 + 4 + 6 + 9 + 4 + 4 + 4 + 6 + 9 + 4 + 4 + 4 + 6 + 9 + 4", "x2": "abs sub mod x_0_4 sqr sign mul x_0_9 sign sign INT+ 4 x_0_5", "tree": "abs(((x_0_4 mod (sign((x_0_9 mul sign(sign(4)))))**2) sub x_0_5))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 2 + 4 + 36 + 52 + 76 + 134 + 180 + 238 + 334 + 422 + 526 + 672 + 814 + 976 + 1184 + 1392 + 1624 + 1906 + 2192", "x2": "relu relu add x_0_3 mul add n relu n n", "tree": "relu(relu((x_0_3 add ((n add relu(n)) mul n))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 7 - 1 - 10 + 3 + 120 + 77 - 10 8560 - 3 6936 - 542 7700 - 201 8280 - 3 2565 2760 - 1 4530 1000 - 228 86 4240 - 117 1173 0 - 1 8243 9206 4000 - 1 508 5801 9200 - 164 2214 3994 0 - 104 1636 7602 9600 - 1 6424 4863 4000 0 - 1 1320 3083 1654 8000 - 180 6924 6861 6422 4000", "x2": "mul mod INT- 5 x_0_2 mul n add sub sub mul INT- 2 x_0_5 x_0_2 n n", "tree": "((-5 mod x_0_2) mul (n mul ((((-2 mul x_0_5) sub x_0_2) sub n) add n)))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 3 - 9 + 1 - 6 - 4 - 10 + 5 + 2 - 4 - 9 + 1 - 6 - 4 - 10 + 5 + 2 - 4 - 9 + 1 - 6 - 4 - 10 + 5 + 2", "x2": "sub mul sign mul INT+ 3 idiv sub n n relu sqr INT- 6 x_0_8 idiv abs INT+ 1 0 n", "tree": "((sign((3 mul ((n sub n) idiv relu((-6)**2)))) mul x_0_8) sub (abs(10) idiv n))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 5 + 7 + 9 + 11 + 13 + 15 + 18 + 20 + 22 + 24 + 26 + 28 + 30 + 33 + 35 + 37", "x2": "relu add mod abs n mul n relu mul INT- 1 0 INT- 1 sub n idiv n INT- 7", "tree": "relu(((abs(n) mod (n mul relu((-10 mul -1)))) add (n sub (n idiv -7))))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 2 + 9 + 6 + 5 - 4 + 4 + 5 + 1 + 0 + 5 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 5 + 0 + 0", "x2": "relu mod n idiv add x_0_5 mul idiv relu sub mul x_0_4 relu x_0_8 x_0_1 INT- 1 0 n INT- 7", "tree": "relu((n mod ((x_0_5 add ((relu(((x_0_4 mul relu(x_0_8)) sub x_0_1)) idiv -10) mul n)) idiv -7)))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 4 - 7 + 8 - 7 - 2 - 8 + 2 + 8 - 7 - 343 + 128 - 343 - 128 - 392 + 8 + 512 - 28 - 2 1952 + 6272 - 4035 3607 - 209 7152 - 4611 8408 + 13 1072 + 7867 5968 - 1792 - 57 5458 5088", "x2": "mul sqr x_0_10 x_0_8", "tree": "((x_0_10)**2 mul x_0_8)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306", "x2": "add n mul n n", "tree": "(n add (n mul n))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 5 - 4 - 2 + 8 + 5 - 3 - 33 - 9 + 62 - 16 - 98 - 5 + 533 - 17 - 1021 + 44 - 855 - 22 + 1533 + 510 + 109 + 191 + 46", "x2": "add add idiv idiv mul mul n INT+ 6 x_0_2 x_0_1 INT+ 3 sub sub relu n n n mod INT- 1 x_0_7", "tree": "((((((n mul 6) mul x_0_2) idiv x_0_1) idiv 3) add ((relu(n) sub n) sub n)) add (-1 mod x_0_7))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 7 - 175 - 3150 - 5 5125 - 96 4600 - 1688 500 - 2 9540 8750 - 51 6965 3125 - 904 6892 9600 - 1 5832 626 7825 - 27 7061 968 6850 - 484 8569 1951 9700 - 8484 9960 9159 4575 - 14 8487 4316 290 4975 - 259 8530 530 5083 6800 - 4547 4275 9283 8964 3825 - 7 9579 9828 7468 1876 6675 - 139 2649 7003 693 2841 6550", "x2": "mul mul sqr INT+ 5 INT+ 7 idiv mod idiv n sign relu n x_0_1 INT+ 1 0", "tree": "(((5)**2 mul 7) mul (((n idiv sign(relu(n))) mod x_0_1) idiv 10))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 - 4 + 444 + 668 + 2 5532 + 6 2940 + 149 2732 + 501 7372 + 8861 364 + 3 6958 3196 + 53 3176 3580 + 260 2842 2556 + 3246 718 3036 + 1 7821 9884 6172 + 19 9602 109 6188 + 119 7633 3648 1820 + 1237 5345 9786 8348 + 7944 2814 4085 268 + 7 7246 2189 2147 7756", "x2": "sub x_0_1 sub idiv abs mod relu INT- 1 0 INT- 7 sign INT+ 8 abs mul INT+ 7 mul INT+ 8 x_0_2", "tree": "(x_0_1 sub ((abs((relu(-10) mod -7)) idiv sign(8)) sub abs((7 mul (8 mul x_0_2)))))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 4095 + 6 5534 + 33 1773 + 104 8572 + 255 9995 + 530 8410 + 983 4489 + 1677 7208 + 2687 3847 + 4095 9990 + 5996 9525 + 8493 4644 + 1 1698 5843 + 1 5735 1922 + 2 735 9985 + 2 6843 5440 + 3 4210 1999", "x2": "abs sub n sqr mul sqr mul INT+ 8 n sqr INT+ 1", "tree": "abs((n sub ((((8 mul n))**2 mul (1)**2))**2))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 6 + 0 - 5 - 1 - 6 - 2 - 7 - 3 - 6 - 4 - 5 - 5 - 6 - 4 - 7 - 5 - 8 - 6 - 7 - 7", "x2": "add sign mod INT+ 1 mod n x_0_3 x_0_2", "tree": "(sign((1 mod (n mod x_0_3))) add x_0_2)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 - 8 + 10 + 62 + 58 + 72 + 54 + 2 + 6 - 8 + 10 + 62 + 58 + 72 + 54 + 2 + 6 - 8 + 10 + 62", "x2": "sub relu sqr INT+ 8 x_0_4", "tree": "(relu((8)**2) sub x_0_4)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 1 + 5 + 2 - 4 + 6 + 1 + 5 + 2 + 0 + 6 + 1 + 5 + 2 + 0 + 6 + 1 + 5 + 2 + 0 + 6 + 1", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121", "x2": "relu sqr sub n add INT+ 9 INT- 3", "tree": "relu(((n sub (9 add -3)))**2)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 5 + 4 + 1 - 3 - 9 - 4 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "mul idiv n sign abs idiv mul x_0_7 n x_0_5 n", "tree": "((n idiv sign(abs(((x_0_7 mul n) idiv x_0_5)))) mul n)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 2 + 6 + 7 - 9 + 2 - 4 + 32 - 64 + 181 + 211 + 299 + 275 - 219 + 1031 - 1774 + 5246 + 61 + 5119 + 9166 - 1 1574 + 4 8702 - 6 6842 + 6 8383", "x2": "add abs x_0_1 mul n mul sign x_0_3 sub INT- 6 x_0_6", "tree": "(abs(x_0_1) add (n mul (sign(x_0_3) mul (-6 sub x_0_6))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 9 - 7 - 27 - 26 - 153 - 173 - 1215 - 1548 - 1 2141 - 1 7019 - 14 5683 - 22 1238 - 203 9553 - 331 8561 - 3263 2839 - 5641 5528 - 5 8739 1093 - 10 7189 5023 - 117 4782 1851", "x2": "add add x_0_2 INT+ 9 mul relu n x_0_2", "tree": "((x_0_2 add 9) add (relu(n) mul x_0_2))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 10 - 12 - 10 - 16 - 10 - 12 - 10 - 16 - 10 - 12 - 10 - 16 - 10 - 12 - 10 - 16 - 10", "x2": "mul add INT- 1 0 sub x_0_1 add x_0_1 mod mul n x_0_1 sub abs INT+ 4 INT- 4 INT+ 1", "tree": "((-10 add (x_0_1 sub (x_0_1 add ((n mul x_0_1) mod (abs(4) sub -4))))) mul 1)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 121 + 121 + 121 + 121 + 121 + 121 + 121 + 100 + 121 + 121 + 121 + 121 + 121 + 121 + 121 + 100 + 121", "x2": "sqr add INT- 1 0 idiv mod n INT+ 8 INT- 7", "tree": "((-10 add ((n mod 8) idiv -7)))**2", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 9 + 8 + 0 - 1 - 26 + 0 - 1 - 13 + 0 - 1 - 7 + 0 - 1 - 4 + 0 - 1 - 2 + 0 - 1", "x2": "mod idiv x_0_3 relu add INT+ 2 sqr x_0_2 mul INT+ 6 INT- 5", "tree": "((x_0_3 idiv relu((2 add (x_0_2)**2))) mod (6 mul -5))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 - 9 + 7 + 10 + 5 + 6 + 4 - 13 - 9 + 5 + 6 - 1 - 2 + 3 - 16 - 14 - 2 + 6 - 3 - 6 - 3 - 24 - 15 - 5", "x2": "mul sign n sub x_0_7 mod mul n sub INT+ 3 INT+ 1 0 abs INT- 9", "tree": "(sign(n) mul (x_0_7 sub ((n mul (3 sub 10)) mod abs(-9))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913", "x2": "relu mul n mul n n", "tree": "relu((n mul (n mul n)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 + 10 - 9 - 4 + 9 - 8 + 0 + 2 + 8 - 6 - 1 + 3 - 25 + 210 - 154 - 78 + 152 + 22 - 10 + 12 - 362 - 712 - 46 + 41 - 735 + 2930 + 9 3006 - 1804 + 4550", "x2": "add mul add sign add sub n abs x_0_10 INT- 4 add mod x_0_1 x_0_5 relu n x_0_12 INT- 1 0", "tree": "(((sign(((n sub abs(x_0_10)) add -4)) add ((x_0_1 mod x_0_5) add relu(n))) mul x_0_12) add -10)", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "- 5 + 5 + 6 + 1 + 5 - 5 + 6 - 1 - 5 - 5 + 6 + 1 + 5 + 5 - 6 + 1 - 5 + 5 + 6 - 1 + 5", "x2": "idiv x_0_4 sign sign sub INT- 2 x_0_1", "tree": "(x_0_4 idiv sign(sign((-2 sub x_0_1))))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3", "x2": "idiv n mul INT+ 8 INT- 1", "tree": "(n idiv (8 mul -1))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 5 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 1", "x2": "mul mod mod sqr mod INT+ 8 sqr sub n sign n n INT+ 2 sign idiv x_0_2 n", "tree": "(((((8 mod ((n sub sign(n)))**2))**2 mod n) mod 2) mul sign((x_0_2 idiv n)))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 6 + 9 + 8 - 1 - 2 + 49 + 64 + 81 + 80 + 121 + 144 + 0 + 0 + 0 + 0 + 0 + 0 + 361 + 400 + 441 + 484 + 529", "x2": "mul sub n relu mod n x_0_6 n", "tree": "((n sub relu((n mod x_0_6))) mul n)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 2 - 7 - 14 - 23 - 34 - 47 - 62 - 79 - 98 - 119 - 142 - 167 - 194 - 223 - 254 - 287", "x2": "sub sign sqr INT- 2 mod INT- 1 abs sqr n", "tree": "(sign((-2)**2) sub (-1 mod abs((n)**2)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 - 6 + 48 - 384 + 3072 - 2 4576 + 19 6608 - 157 2864 + 1258 2912 - 1 66 3296 + 8 530 6368 - 64 4245 944 + 515 3960 7552 - 4123 1686 416 + 3 2985 3488 3328 - 26 3882 7906 6624 + 211 1062 3253 2992 - 1688 8498 6026 3936 + 1 3510 7988 8211 1488", "x2": "add mul INT- 8 x_0_1 mul INT- 7 mod mul add add mod x_0_3 INT+ 4 x_0_2 mod INT- 4 x_0_1 x_0_1 x_0_3", "tree": "((-8 mul x_0_1) add (-7 mul (((((x_0_3 mod 4) add x_0_2) add (-4 mod x_0_1)) mul x_0_1) mod x_0_3)))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 3 - 9 - 17 - 35 - 56 - 91 - 138 - 210 - 312 - 469 - 700 - 1065 - 1624 - 2540 - 4005 - 6499 - 1 669 - 1 8053", "x2": "idiv mul mod n sub x_0_2 relu mul n INT+ 9 n INT+ 7", "tree": "(((n mod (x_0_2 sub relu((n mul 9)))) mul n) idiv 7)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 + 1 + 10 + 5 + 3 + 3 + 1 + 4 + 3 + 6 + 6 + 0 + 4 + 3 + 2 + 1 + 3 + 7 + 5 + 0", "x2": "mod sub sqr sub x_0_3 INT- 3 n INT+ 8", "tree": "((((x_0_3 sub -3))**2 sub n) mod 8)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 7 - 3 - 1 + 6 - 7 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign mul x_0_6 sqr add x_0_2 add n INT- 6", "tree": "sign((x_0_6 mul ((x_0_2 add (n add -6)))**2))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 3 + 7 - 4 - 9 - 2 - 3 - 9 + 8 + 10 - 4 + 2 + 0 + 9 + 0 + 2 + 10 + 0 + 0 + 4 + 13 + 0 + 0 + 0 + 9 + 0 + 0 + 0", "x2": "relu add INT+ 9 sub idiv x_0_10 mod INT+ 2 mod x_0_9 INT- 5 relu mod x_0_2 n", "tree": "relu((9 add ((x_0_10 idiv (2 mod (x_0_9 mod -5))) sub relu((x_0_2 mod n)))))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 2 + 0 + 4 + 10 + 18 + 28 + 40 + 54 + 70 + 88 + 108 + 130 + 154 + 180 + 208 + 238", "x2": "mul mod INT- 3 n n", "tree": "((-3 mod n) mul n)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 3 - 5 + 7 + 3 + 1 - 3 - 10 + 6 - 15 + 42 + 21 + 3 - 3 - 120 + 36 - 90 + 126 + 84 + 3 - 9 - 2280 + 648 - 1080 + 1260", "x2": "mul mod x_0_8 n x_0_7", "tree": "((x_0_8 mod n) mul x_0_7)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 9 - 4 - 8 + 9 + 0 + 4 + 16 + 12 + 17 + 19 + 11 + 16 + 29 + 26 + 32 + 35 + 28 + 34 + 48 + 46 + 53 + 57 + 51", "x2": "add n abs x_0_6", "tree": "(n add abs(x_0_6))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 8 + 1 + 3 + 112 - 240 - 486 - 8330 + 2 416 + 5 1516 + 108 1600 - 314 5758 - 927 5040 - 2 2497 5504 + 7 4868 7072 + 25 425 6750 + 683 9254 8352 - 2545 5361 260 - 9466 905 8304 - 28 5880 8521 9078 + 117 946 6071 400", "x2": "mul n mul sub INT- 3 n add relu n x_0_3", "tree": "(n mul ((-3 sub n) mul (relu(n) add x_0_3)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 9 + 9 - 8 + 4 + 10 + 2 - 6 + 3 + 1521 + 16 + 1681 + 196 + 484 + 1444 + 1600 + 625 + 219 6324 + 238 849 + 264 625 + 233 1729 + 5 9536 + 83 5396 + 1 1664 + 105 625 + 4 8208 6574 8609", "x2": "sqr sub relu add add n n x_0_9 x_0_8", "tree": "((relu(((n add n) add x_0_9)) sub x_0_8))**2", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 8 - 8 - 38 - 38 - 248 - 248 - 1718 - 1718 - 1 2008 - 1 2008 - 8 4038 - 8 4038 - 58 8248 - 58 8248 - 411 7718 - 411 7718 - 2882 4008 - 2882 4008 - 2 176 8038", "x2": "add x_0_2 mul INT- 6 sub idiv n add x_0_1 x_0_1 add sub x_0_2 INT- 3 INT- 1", "tree": "(x_0_2 add (-6 mul ((n idiv (x_0_1 add x_0_1)) sub ((x_0_2 sub -3) add -1))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 - 8 + 10 + 1 - 1 - 1 - 3 + 0 + 4 + 0 + 1 + 8 + 12 + 12 + 0 + 3 + 2 + 1 + 10 + 2 + 14 + 8 + 11 + 14", "x2": "mod add x_0_7 mul mul INT+ 2 n n idiv sqr n add x_0_3 n", "tree": "((x_0_7 add ((2 mul n) mul n)) mod ((n)**2 idiv (x_0_3 add n)))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 9 + 5 - 4 - 8 - 8 + 7 + 9 + 4 + 3 + 5 - 6 + 11 - 5 + 1 - 14 + 6 + 19 + 13 - 2 - 28 - 13 + 32 + 36 + 12 - 74 - 43 + 39", "x2": "sub x_0_5 sub x_0_3 x_0_10", "tree": "(x_0_5 sub (x_0_3 sub x_0_10))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 7 + 7 - 3 - 9 - 7 - 9 + 3 + 4 + 10 - 10 + 8 + 58 + 58 + 18 + 90 + 58 + 90 + 18 + 25 + 109 + 109 + 73 + 3373 + 3373 + 333 + 8109 + 3373 + 8109", "x2": "mul sub INT- 9 sqr x_0_11 sign sign INT- 5", "tree": "((-9 sub (x_0_11)**2) mul sign(sign(-5)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 1 + 10 - 5 - 2 - 3 + 4 + 0 - 6 - 1 + 6 + 0 + 16 + 0 + 2 + 0 + 5 + 7 + 0 + 0 + 7 + 0 + 17 + 0 + 3 + 0 + 0", "x2": "relu sub x_0_10 sub x_0_9 sign n", "tree": "relu((x_0_10 sub (x_0_9 sub sign(n))))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 4 + 5 + 0 + 2 + 3 - 2 + 0 + 1 - 4 - 2 - 1 - 6 - 4 - 3 - 8 - 6 - 5 - 10 - 8", "x2": "sub x_0_3 relu abs INT+ 2", "tree": "(x_0_3 sub relu(abs(2)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 6 - 6 - 6 + 15 + 45 + 105 + 204 + 372 + 648 + 1101 + 1839 + 3039 + 4986 + 8142 + 1 3254 + 2 1531 + 3 4929 + 5 6613 + 9 1704 + 14 8488", "x2": "add relu relu x_0_1 sub relu x_0_1 sub x_0_3 INT+ 9", "tree": "(relu(relu(x_0_1)) add (relu(x_0_1) sub (x_0_3 sub 9)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 7 + 3 - 6 - 8 + 1 - 10 - 2 - 1 - 11 - 1 - 10 - 12 - 3 - 14 - 6 - 5 - 15 - 5 - 14 - 16", "x2": "idiv add x_0_4 n mod INT- 4 INT- 3", "tree": "((x_0_4 add n) idiv (-4 mod -3))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 10 - 12 - 13 - 13 - 12 - 10 - 7 - 10 - 5 - 4 - 5 - 7 - 5 - 5 - 4 - 4 - 7 - 7", "x2": "add mod sub INT- 4 mod n n INT- 6 mod n x_0_1", "tree": "(((-4 sub (n mod n)) mod -6) add (n mod x_0_1))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign mod relu n INT- 8", "tree": "sign((relu(n) mod -8))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 8 + 18 + 60 + 280 + 1650 + 1 1508 + 9 2008 + 82 8000 + 827 9910 + 9107 8900 + 10 9294 6668 + 142 830 6528 + 1989 1629 1210 + 2 9837 4436 7940 + 47 7399 988 6800 + 811 5784 6807 5328 + 1 4608 4124 2535 5598", "x2": "mul add sign INT+ 7 abs sub n x_0_1 n", "tree": "((sign(7) add abs((n sub x_0_1))) mul n)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 + 10 + 16 + 45 + 60 + 112 + 360 + 540 + 1120 + 3960 + 6480 + 1 4560 + 5 5440 + 9 7200 + 23 2960 + 94 2480 + 174 9600 + 442 6240 + 1884 9600", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 2 + 1 - 2 - 10 + 7 + 2 + 1 - 2 - 10 + 7 + 2 + 1 - 2 - 10 + 7 + 2 + 1 - 2 - 10 + 7 + 2", "x2": "add x_0_5 idiv mod mod abs mod mul relu INT- 1 x_0_5 INT- 1 0 x_0_2 x_0_4 sub mod INT+ 3 x_0_3 n", "tree": "(x_0_5 add (((abs(((relu(-1) mul x_0_5) mod -10)) mod x_0_2) mod x_0_4) idiv ((3 mod x_0_3) sub n)))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 1 + 1 + 1 + 3 + 10 + 6 + 21 + 80 + 54 + 210 + 880 + 648 + 2730 + 1 2320 + 9720 + 4 3680 + 20 9440 + 17 4960 + 82 9920 + 418 8800 + 367 4160", "x2": "idiv mul sub sub add idiv x_0_4 add x_0_2 x_0_1 n x_0_3 abs n n sign sub INT- 9 x_0_3", "tree": "((((((x_0_4 idiv (x_0_2 add x_0_1)) add n) sub x_0_3) sub abs(n)) mul n) idiv sign((-9 sub x_0_3)))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 5 - 3 + 2 + 9 + 5 - 1 - 2 - 11 - 7 - 1 - 6 - 13 - 15 - 25 - 22 - 17 - 23 - 31 - 34 - 45 - 43 - 39", "x2": "sub x_0_6 mod sign INT- 1 0 n", "tree": "(x_0_6 sub (sign(-10) mod n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 9 + 3 - 10 + 4 + 4 - 1 + 12 + 0 + 13 + 4 - 9 + 8 - 8 + 3 + 15 - 5 + 24 - 2 + 0 + 9 - 16 + 14", "x2": "sub abs sub add INT- 1 INT+ 8 x_0_6 x_0_4", "tree": "(abs(((-1 add 8) sub x_0_6)) sub x_0_4)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 1 - 3 - 9 - 16 - 27 - 39 - 55 - 72 - 93 - 115 - 141 - 168 - 199 - 231 - 267 - 304 - 345", "x2": "add idiv idiv mul sqr n mul n INT+ 1 0 n INT- 8 n", "tree": "(((((n)**2 mul (n mul 10)) idiv n) idiv -8) add n)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 10 - 7 + 1 + 4 + 7 + 1 + 9 + 7 + 7 + 1 + 1 + 0 + 1 + 2 + 7 + 6 + 9 + 2 + 0 + 7 + 8", "x2": "mod sub sub add INT+ 8 n relu relu mod n idiv mul add n x_0_1 INT+ 1 x_0_5 x_0_2 INT+ 1 0", "tree": "((((8 add n) sub relu(relu((n mod (((n add x_0_1) mul 1) idiv x_0_5))))) sub x_0_2) mod 10)", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 9 + 4 + 2 - 7 - 2 + 10 - 10 + 0 - 9 + 7 + 6 + 361 + 1 6129 + 49 + 1 201 + 1 + 1 + 8281 + 1 + 3481 + 1 8821 961 + 40 5890 8035 3936 + 7963 5812 7321 + 97 5695 5627 4647 3024 + 1 1060 7289 + 43 9807 7124 + 222 1858 5481 + 6889 0", "x2": "sqr add mul add relu add x_0_10 add n mul n idiv x_0_11 INT+ 4 INT- 1 0 x_0_9 sign x_0_6", "tree": "((((relu((x_0_10 add (n add (n mul (x_0_11 idiv 4))))) add -10) mul x_0_9) add sign(x_0_6)))**2", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 3 - 10 + 6 - 4 + 6 + 2 + 8 - 4 + 0 - 2 - 1 + 1 + 1 + 1 + 7 + 1 + 7 + 3 + 26 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 8 + 2 + 8", "x2": "add relu x_0_12 mod sign mul n mod idiv INT- 4 x_0_10 sqr sign INT+ 7 n", "tree": "(relu(x_0_12) add (sign((n mul ((-4 idiv x_0_10) mod (sign(7))**2))) mod n))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 5 - 1 - 1 + 100 - 25 - 29 + 3501 - 999 - 1304 + 17 5051 - 5 4944 - 7 8238 + 1137 8317 - 384 6078 - 586 7848 + 9 1026 5362 - 3 2691 6628 - 5 2810 6317 + 864 7520 9393 - 326 9166 2797", "x2": "add mul mul INT+ 5 x_0_3 n idiv n INT+ 6", "tree": "(((5 mul x_0_3) mul n) add (n idiv 6))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 6 - 4 + 8 - 8 + 4 - 7 - 6 + 4 - 8 + 8 - 4 + 7 + 6 - 4 + 8 - 8 + 4 - 7 - 6 + 4 - 8 + 8", "x2": "sub idiv n sqr sign INT- 6 abs add n x_0_6", "tree": "((n idiv (sign(-6))**2) sub abs((n add x_0_6)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 7 + 10 + 6 + 2 + 1 + 9 - 7 - 2 + 3 + 5 - 2 + 15 + 11 + 7 + 6 + 14 - 2 + 3 + 8 + 10 + 3", "x2": "sub n sub x_0_5 INT- 5", "tree": "(n sub (x_0_5 sub -5))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913", "x2": "mul n sqr n", "tree": "(n mul (n)**2)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 8 + 5 - 13 - 10 + 8 + 5 - 13 - 10 + 8 + 5 - 13 - 10 + 8 + 5 - 13 - 10 + 8 + 5", "x2": "add relu mod n sign INT+ 2 sub INT- 5 x_0_2", "tree": "(relu((n mod sign(2))) add (-5 sub x_0_2))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 5 + 2 + 10 - 10 - 2 + 3 + 8 + 11 - 10 + 4 - 1 + 8 + 11 - 4 + 10 - 5 + 10 + 11 + 2", "x2": "add x_0_5 mod INT+ 6 x_0_7", "tree": "(x_0_5 add (6 mod x_0_7))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 8 + 9 + 3 - 2 + 29 - 4 + 9 + 20 - 41 + 26 + 1 - 20 + 103 - 30 + 21 + 64", "x2": "add sub sign sqr abs x_0_2 add x_0_4 x_0_4 add INT+ 6 n", "tree": "((sign((abs(x_0_2))**2) sub (x_0_4 add x_0_4)) add (6 add n))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 5 + 1 + 2 + 6 + 9 - 4 - 9 + 7 + 10 + 8 + 10 + 8 + 10 + 8 + 8 + 8 + 10 + 8 + 10 + 8 + 8", "x2": "add sign mul mul relu mul n mod idiv n INT+ 5 n mul sub x_0_6 INT+ 9 x_0_8 x_0_7 INT+ 9", "tree": "(sign(((relu((n mul ((n idiv 5) mod n))) mul ((x_0_6 sub 9) mul x_0_8)) mul x_0_7)) add 9)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 3 + 3 - 6 + 6 + 9 + 3 + 2 + 8 + 9 + 12 + 9 + 12 + 18 + 15 + 15 + 16 + 18 + 18 + 27 + 24 + 27", "x2": "add n mod abs mul n mod INT+ 8 n x_0_8", "tree": "(n add (abs((n mul (8 mod n))) mod x_0_8))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 9 + 10 + 3 + 52 + 250 + 432 + 686 + 1024 + 1458 + 2000 + 2662 + 3456 + 4394 + 5488 + 6750 + 8192", "x2": "add sqr n mul sub add n n sign mod INT+ 5 x_0_3 mul n mod n x_0_1", "tree": "((n)**2 add (((n add n) sub sign((5 mod x_0_3))) mul (n mul (n mod x_0_1))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 2 + 10 + 10 + 0 + 5 + 108 - 630 - 720 + 0 - 450 - 1 692 + 6 8040 + 8 4240 + 0 + 6 750 + 153 9648 - 1041 120 - 1364 6880", "x2": "mul mul sub INT- 8 sign abs INT- 8 x_0_5 abs n", "tree": "(((-8 sub sign(abs(-8))) mul x_0_5) mul abs(n))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 0 + 2 + 8 + 0 + 0 + 4 + 36 + 0 + 0 + 25 + 2209 + 0 + 0 + 1849 + 1683 4609 + 0", "x2": "mul sqr idiv mul x_0_4 add add INT- 3 x_0_2 n INT- 7 sign INT+ 5", "tree": "((((x_0_4 mul ((-3 add x_0_2) add n)) idiv -7))**2 mul sign(5))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 + 8 + 10 - 7 - 1 - 2 - 21 + 56 + 70 - 49 - 7 - 14 - 147 + 392 + 490 - 343 - 49 - 98 - 1029", "x2": "mul x_0_6 sub INT+ 9 add mod sqr sign n sqr n abs idiv n n", "tree": "(x_0_6 mul (9 sub (((sign(n))**2 mod (n)**2) add abs((n idiv n)))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 9 - 5 + 4 + 6 - 8 + 0 + 0 + 20 + 90 + 0 + 0 + 0 + 300 + 3240 + 0 + 0 + 0 + 6000", "x2": "mul relu x_0_5 add add sign n n x_0_6", "tree": "(relu(x_0_5) mul ((sign(n) add n) add x_0_6))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 8 + 9 - 2 + 1 + 8 + 8 + 8 - 2 + 0 + 8 + 8 + 8 - 2 + 0 + 8 + 8 + 8", "x2": "sub x_0_5 sub sub n n mod mul abs add x_0_2 x_0_5 abs abs x_0_5 INT- 2", "tree": "(x_0_5 sub ((n sub n) sub ((abs((x_0_2 add x_0_5)) mul abs(abs(x_0_5))) mod -2)))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 1 - 2 + 6 + 5 + 5 - 1 - 2 - 2 + 0 + 0 - 2 - 10 - 7 - 8 + 0 + 0 - 5 + 0 - 8", "x2": "mod sqr mul relu INT+ 1 0 n sub mul abs x_0_6 sign n n", "tree": "(((relu(10) mul n))**2 mod ((abs(x_0_6) mul sign(n)) sub n))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 1 + 5 + 11 + 26 + 30 + 33 + 35 + 36 + 36 + 35 + 33 + 30 + 26 + 21 + 15", "x2": "abs sub sub mul n sign sign x_0_3 relu abs INT+ 1 0 relu x_0_1", "tree": "abs((((n mul sign(sign(x_0_3))) sub relu(abs(10))) sub relu(x_0_1)))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 3 + 10 - 7 - 3 - 10 + 7 + 3 - 10 - 7 - 3 + 10 + 7 - 3 + 10 - 7", "x2": "mul x_0_3 sign sub x_0_2 INT+ 6", "tree": "(x_0_3 mul sign((x_0_2 sub 6)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 1 + 1 + 6 - 1 + 5 - 4 + 10 + 0 + 5 + 194 - 2 + 47 + 167 + 14 + 79 + 1 + 97 + 22 + 46 + 3 9997 + 22 + 2913", "x2": "add sqr add x_0_10 mod x_0_9 INT+ 8 add INT- 1 idiv n mul INT- 8 relu INT+ 2", "tree": "(((x_0_10 add (x_0_9 mod 8)))**2 add (-1 add (n idiv (-8 mul relu(2)))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 6 - 6 + 3 + 4 + 14 + 9 + 14 + 11 + 9 + 17 + 17 + 18 + 20 + 23 + 4", "x2": "add mul relu sign x_0_2 sub INT+ 9 abs mod mul INT+ 4 INT+ 5 x_0_1 n", "tree": "((relu(sign(x_0_2)) mul (9 sub abs(((4 mul 5) mod x_0_1)))) add n)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 + 6 - 1 - 10 + 4 - 6 - 4 + 5 + 4 + 3 + 5 + 5 + 3 + 2 + 5 + 5 + 3 + 2 + 5 + 5", "x2": "add idiv add mod n abs n x_0_7 abs INT+ 7 mod x_0_4 n", "tree": "((((n mod abs(n)) add x_0_7) idiv abs(7)) add (x_0_4 mod n))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 14 + 21 + 30 + 41 + 54 + 69 + 86 + 105 + 126 + 149 + 174 + 201 + 230", "x2": "add INT+ 9 mul n add INT+ 3 add abs n idiv sub add n mul INT- 8 sign n n INT- 5", "tree": "(9 add (n mul (3 add (abs(n) add (((n add (-8 mul sign(n))) sub n) idiv -5)))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 1 + 1 - 7 + 9 + 2 - 7 - 8 - 2 + 2 - 4 + 1 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "abs mod sub x_0_11 add x_0_1 x_0_10 INT- 2", "tree": "abs(((x_0_11 sub (x_0_1 add x_0_10)) mod -2))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 8 + 9 + 4 + 6 - 5 - 2 + 16 + 28 + 43 + 48 + 57 + 85 + 126 + 183 + 246 + 319 + 421 + 565", "x2": "add x_0_5 add n relu x_0_1", "tree": "(x_0_5 add (n add relu(x_0_1)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 7 - 7 - 5 - 4 + 0 - 4 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1", "x2": "idiv idiv x_0_5 add sub sign INT+ 1 abs x_0_6 add n n n", "tree": "((x_0_5 idiv ((sign(1) sub abs(x_0_6)) add (n add n))) idiv n)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 9 + 1 + 6 + 7 + 5 - 283 - 40 - 184 - 2866 - 625 - 1 5475 - 2 3062 - 8374 - 10 1479 - 15 25 - 147 4834 - 158 6038 - 37 3477", "x2": "sub INT- 4 mul sub INT+ 1 INT- 8 abs sub idiv mul n mul n x_0_5 sub n INT- 7 x_0_3", "tree": "(-4 sub ((1 sub -8) mul abs((((n mul (n mul x_0_5)) idiv (n sub -7)) sub x_0_3))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 8 + 6 + 0 + 30 + 180 + 1470 + 1 3200 + 13 2030 + 145 2300 + 1742 7630 + 2 2655 9160 + 31 7182 8270 + 475 7742 4020 + 7612 3878 4350", "x2": "relu mul abs n add x_0_2 x_0_1", "tree": "relu((abs(n) mul (x_0_2 add x_0_1)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 4 + 0 - 9 - 8 + 10 + 3 + 8 + 0 + 2 + 21 + 15 + 21 + 14 + 17 + 37 + 32 + 39", "x2": "relu add x_0_5 n", "tree": "relu((x_0_5 add n))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 6 + 4 + 7 - 9 - 1 - 2 - 2 - 3 + 3 + 0 + 0 + 0 + 1 - 1 + 0 + 0 + 0", "x2": "idiv x_0_5 INT- 3", "tree": "(x_0_5 idiv -3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 7 + 10 - 3 + 0 - 4 - 6 + 9 + 6 + 4 - 5 + 6 - 12 + 13 - 14 - 15 - 16 - 17 + 18 + 19 + 20 - 21 + 22 - 23 + 24", "x2": "sub add idiv mul n INT+ 1 sign sub add INT+ 2 sqr relu x_0_11 INT+ 8 n n", "tree": "((((n mul 1) idiv sign(((2 add (relu(x_0_11))**2) sub 8))) add n) sub n)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 1 + 0 + 1 + 4 + 3 + 2 + 1 + 0 + 9 + 9 + 9 + 9", "x2": "mod relu INT+ 9 n", "tree": "(relu(9) mod n)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 73 + 609 + 4897 + 3 9201 + 31 3633 + 250 9089 + 2007 2737 + 1 6058 1921 + 12 8465 5393 + 102 7724 3169 + 822 1794 5377 + 6577 4356 3041 + 5 2619 4850 4353", "x2": "add sqr INT+ 1 sub mul INT+ 8 x_0_1 mul INT- 6 INT+ 4", "tree": "((1)**2 add ((8 mul x_0_1) sub (-6 mul 4)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 9 - 9 + 1 + 11 + 12 + 2 - 7 - 8 + 3 + 12 + 14 + 3 - 5 - 7 + 5", "x2": "add idiv mul add mul INT+ 4 x_0_3 add n n INT+ 2 add mul INT- 6 INT+ 3 INT+ 1 0 n", "tree": "(((((4 mul x_0_3) add (n add n)) mul 2) idiv ((-6 mul 3) add 10)) add n)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 1 - 2 - 3 - 4 - 6 - 7 - 8 - 9 - 10 - 11 - 13 - 14", "x2": "add sub mul n sign INT- 7 abs idiv n INT+ 6 sign abs INT- 5", "tree": "(((n mul sign(-7)) sub abs((n idiv 6))) add sign(abs(-5)))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 3 + 1 - 9 - 7 + 6 - 10 - 62 - 6 + 7 - 17 - 69 - 2 + 15 - 34 - 61 - 1 + 128 - 41 - 35", "x2": "idiv add add sub mul n x_0_4 n n idiv add abs idiv n x_0_6 INT+ 5 INT+ 5 abs x_0_5", "tree": "(((((n mul x_0_4) sub n) add n) add ((abs((n idiv x_0_6)) add 5) idiv 5)) idiv abs(x_0_5))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 10 - 16 - 26 - 36 - 46 - 62 - 78 - 94 - 116 - 138 - 160 - 188 - 216", "x2": "sub sub sign idiv mod n INT+ 3 add x_0_1 n add INT+ 6 n add sqr n INT- 1", "tree": "((sign(((n mod 3) idiv (x_0_1 add n))) sub (6 add n)) sub ((n)**2 add -1))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 9 + 18 + 54 + 216 + 1080 + 6480 + 4 5360 + 36 2880 + 326 5920 + 3265 9200 + 3 5925 1200 + 43 1101 4400 + 560 4318 7200", "x2": "abs mul x_0_1 abs add INT- 1 relu n", "tree": "abs((x_0_1 mul abs((-1 add relu(n)))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 + 6 + 9 + 1 - 5 - 7 + 2 + 9 + 12 + 4 - 2 - 4 + 5 + 12 + 15 + 7", "x2": "sub relu abs add INT- 4 n x_0_3", "tree": "(relu(abs((-4 add n))) sub x_0_3)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 + 2 + 10 + 9 + 0 + 44 + 230 + 216 + 0 + 1144 + 6210 + 6048 + 0 + 3 4320 + 19 2510 + 19 3536 + 0", "x2": "mul add n sqr INT- 4 relu x_0_4", "tree": "((n add (-4)**2) mul relu(x_0_4))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 10 - 2 - 6 + 6 + 10 - 2 - 6 - 8 - 8 - 2 - 8 - 8 - 6 - 6 - 6 - 6 - 6 - 8", "x2": "mod add INT+ 8 mul idiv sqr x_0_5 sign x_0_6 sign sign mul x_0_1 INT- 7 INT- 1 0", "tree": "((8 add (((x_0_5)**2 idiv sign(x_0_6)) mul sign(sign((x_0_1 mul -7))))) mod -10)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 6 + 4 + 1523 + 9 + 38 3804 + 7 + 2 2107 1122 + 9 + 1547 4978 5417 + 11 + 127 6263 6848 2114 + 13 + 12 1225 4152 3208 8000 + 15 + 1 3034 1566 4575 4101 7629", "x2": "abs add idiv mul n sub x_0_3 mul mul n INT- 7 sub mul INT+ 1 0 x_0_2 x_0_2 x_0_1 n", "tree": "abs((((n mul (x_0_3 sub ((n mul -7) mul ((10 mul x_0_2) sub x_0_2)))) idiv x_0_1) add n))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 7 - 6 - 10 - 1 + 2 - 14 - 13 - 19 - 10 - 5 - 21 - 20 - 26 - 17 - 12 - 28 - 27 - 33", "x2": "sub x_0_5 add INT+ 8 sign mul n mod x_0_3 x_0_4", "tree": "(x_0_5 sub (8 add sign((n mul (x_0_3 mod x_0_4)))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 10 - 10 - 1 + 9 - 10 - 8 + 39 + 54 + 80 + 9 + 111 + 136 + 39 + 54 + 80 + 9 + 111 + 136 + 39", "x2": "mod x_0_6 sqr n", "tree": "(x_0_6 mod (n)**2)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 3 - 8 + 1 + 4 - 7 + 2 + 5 - 6 + 3 + 6 - 5 + 4 + 7 - 4 + 5", "x2": "add relu INT+ 1 x_0_3", "tree": "(relu(1) add x_0_3)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 9 + 4 - 9 + 2 - 3 + 10 - 3 + 10 - 1 + 4 - 9 + 4 - 9 + 2 - 3 + 10 - 3 + 10", "x2": "sub sign abs sign INT+ 4 x_0_5", "tree": "(sign(abs(sign(4))) sub x_0_5)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 - 1 + 6 + 10 + 10 + 10 - 4 + 4 - 7 + 6 + 0 + 18 - 10 + 160 + 100 + 0 - 56 + 0 + 558 + 0 - 1008 + 0 + 8 7680", "x2": "mul relu x_0_9 add x_0_4 x_0_10", "tree": "(relu(x_0_9) mul (x_0_4 add x_0_10))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 7 + 7 + 9 + 45 - 5 - 6 - 7 + 28 + 27 + 39 - 11 - 12 - 13 + 67 + 66 + 84", "x2": "sub sqr idiv add x_0_3 INT- 7 mod INT- 2 x_0_3 n", "tree": "((((x_0_3 add -7) idiv (-2 mod x_0_3)))**2 sub n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 + 8 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0", "x2": "idiv sign x_0_2 INT- 2", "tree": "(sign(x_0_2) idiv -2)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 3 + 0 - 6 + 1 + 1 + 3 + 0 + 4 + 1 + 1 + 3 + 0 + 4 + 1 + 1 + 3", "x2": "mod x_0_5 relu n", "tree": "(x_0_5 mod relu(n))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 1 - 3 - 1 + 8 - 1 - 5 - 3 + 6 - 3 - 7 - 5 + 4 - 5 - 9 - 7 + 2", "x2": "add x_0_4 INT- 2", "tree": "(x_0_4 add -2)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 - 8 - 9 + 0 + 25 + 72 + 147 + 256 + 405 + 600 + 847 + 1152 + 1521", "x2": "mul n mul sub n INT+ 4 n", "tree": "(n mul ((n sub 4) mul n))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 1 + 9 - 10 - 2 + 3 + 6 + 4 - 10 + 7 - 6 + 4 + 52 - 56 + 60 - 64 - 68 + 72 + 76 + 80 - 84 + 88 - 92 + 96 + 100", "x2": "idiv mul n abs mod INT+ 4 n sign x_0_12", "tree": "((n mul abs((4 mod n))) idiv sign(x_0_12))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 2 - 10 - 2 + 10 + 3 + 2 + 5 + 2 + 3 + 2 + 5 + 2 + 3 + 2 + 5 + 2 + 3", "x2": "mod x_0_4 n", "tree": "(x_0_4 mod n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 8 - 4 + 10 + 3 + 8 - 4 + 3 + 3 + 2 - 2 + 2 + 2 + 2 - 3 + 2 + 1 + 1 - 3 + 1 + 1", "x2": "add relu mul INT- 5 sign mul x_0_8 INT- 7 idiv add x_0_4 n INT- 6", "tree": "(relu((-5 mul sign((x_0_8 mul -7)))) add ((x_0_4 add n) idiv -6))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 7 - 10 + 9 - 4 + 6 + 0 + 0 + 0 + 0 + 55 + 0 + 0 + 0 + 0 + 256 + 0 + 0", "x2": "relu mul mod n x_0_5 n", "tree": "relu(((n mod x_0_5) mul n))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 8 - 24 - 48 - 80 - 120 - 168 - 224 - 288 - 360 - 440 - 528 - 624 - 728", "x2": "mul INT- 4 add n sqr n", "tree": "(-4 mul (n add (n)**2))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 + 6 + 3 - 1 - 4 - 2 - 5 - 3 - 6 - 4 - 7 - 5 - 8 - 6", "x2": "sub abs x_0_1 n", "tree": "(abs(x_0_1) sub n)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 8 + 4 - 10 - 10 + 3 - 10 + 42 - 192 + 162 + 60 - 198 + 180 - 1794 + 7854 - 7515 - 3072 + 9843 - 9936 + 10 1973", "x2": "mul mul add idiv n x_0_5 add INT+ 5 x_0_6 INT- 3 n", "tree": "((((n idiv x_0_5) add (5 add x_0_6)) mul -3) mul n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 8 - 2 - 3 + 2 + 9 + 1 + 6 - 9 + 60 + 74 + 70 + 75 + 86 + 99 + 97 + 108 + 99 + 174 + 194 + 196 + 207", "x2": "relu add x_0_9 mul abs relu add INT+ 5 sign n n", "tree": "relu((x_0_9 add (abs(relu((5 add sign(n)))) mul n)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25", "x2": "abs sqr sub INT+ 8 n", "tree": "abs(((8 sub n))**2)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 8 - 1 - 6 - 7 + 9 - 6 + 1 + 3 + 696 - 1141 + 288 - 834 + 168 - 576 + 11 1360 + 9128 - 1 7280 + 1565 6682 + 537 624 + 479 8656 + 27 8867 7120", "x2": "mul x_0_6 add mul sub INT- 8 n x_0_9 n", "tree": "(x_0_6 mul (((-8 sub n) mul x_0_9) add n))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 7 + 10 - 4 + 6 - 9 + 9 - 2450 + 5056 - 2997 + 5900 - 1 2100 + 1 5408 - 538 2819 + 1387 3468 - 1011 5100 + 2416 6144 - 5944 7589 + 8985 9132 - 369 2075 5882", "x2": "mul sub mul sqr n x_0_6 n n", "tree": "((((n)**2 mul x_0_6) sub n) mul n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 - 18 - 72 - 360 - 2160 - 1 5120 - 12 960 - 108 8640 - 1088 6400 - 1 1975 400 - 14 3700 4800 - 186 8106 2400 - 2615 3487 3600 - 3 9230 2310 4000", "x2": "add mul n x_0_1 x_0_1", "tree": "((n mul x_0_1) add x_0_1)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 7 + 6 + 5 - 4 - 4 + 8 - 232 - 96 - 62 - 34 - 93 - 92 - 16 1455 - 2 8794 - 1 2269 - 3868 - 2 7054 - 2 6486 - 782 508 8524", "x2": "add n add mul relu sqr add add x_0_6 sign x_0_7 sign x_0_1 INT- 3 INT+ 3", "tree": "(n add ((relu((((x_0_6 add sign(x_0_7)) add sign(x_0_1)))**2) mul -3) add 3))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 9 + 1 + 9 - 7 + 12 - 7 + 3 + 11 - 5 + 14 - 5 + 5 + 13 - 3 + 16 - 3 + 7", "x2": "add INT- 3 add x_0_5 INT+ 5", "tree": "(-3 add (x_0_5 add 5))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 4 + 3 + 10 + 10 + 1 + 10 + 18 + 18 + 11 + 21 + 30 + 30 + 25 + 37 + 47 + 47 + 44", "x2": "add add idiv x_0_3 n x_0_4 n", "tree": "(((x_0_3 idiv n) add x_0_4) add n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 625 - 144 - 64 - 36 - 25 - 16 - 9 - 9 - 4 - 4 - 4 - 4 - 1", "x2": "mul sqr idiv sqr INT+ 5 n INT- 1", "tree": "((((5)**2 idiv n))**2 mul -1)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 0 - 8 + 5 + 10 + 96 + 672 + 5440 + 4 9005 + 49 150 + 539 2706 + 6472 536 + 8 4143 7688 + 117 8081 3702 + 1767 1955 7780 + 2 8275 9920 7776 + 48 702 8678 1304 + 865 2803 794 1856", "x2": "add mul n x_0_1 mul abs abs x_0_5 relu n", "tree": "((n mul x_0_1) add (abs(abs(x_0_5)) mul relu(n)))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 10 - 7 + 1 + 0 + 1 + 0 + 4 + 1 + 0 + 4 + 0 + 0 + 1 + 0 + 0", "x2": "sqr mod sub x_0_2 mod n add sub sub mul sqr x_0_3 abs INT+ 4 INT+ 9 n n INT+ 3", "tree": "(((x_0_2 sub (n mod (((((x_0_3)**2 mul abs(4)) sub 9) sub n) add n))) mod 3))**2", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 2 + 7 - 2 - 5 - 2 + 13 + 1 - 5 - 2 + 1 + 1 + 13 + 1 - 17 - 2 + 19 + 4 - 5", "x2": "add sub x_0_6 x_0_2 sign add relu n n", "tree": "((x_0_6 sub x_0_2) add sign((relu(n) add n)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 7 + 10 - 2 - 12 - 20 - 24 - 58 - 92 - 172 - 488 - 1048 - 3250 - 1 9106 - 7 9720 - 69 8368", "x2": "mul INT- 2 abs sub idiv sqr x_0_3 add n n x_0_2", "tree": "(-2 mul abs((((x_0_3)**2 idiv (n add n)) sub x_0_2)))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 - 9 - 1 - 10 + 9 + 8 + 4 - 4 - 16 - 20 - 13 - 23 - 5 - 7 - 12 - 21 - 34 - 39 - 33 - 44", "x2": "sub x_0_8 relu abs n", "tree": "(x_0_8 sub relu(abs(n)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 7 - 6 + 2 - 3 + 3 - 10 - 3 + 18 + 20 + 22 + 4 - 13 + 3 + 19 + 27 + 21 + 36 + 37 + 26 - 71", "x2": "sub n sub idiv relu add x_0_8 add INT- 1 0 sqr sub x_0_3 x_0_8 n n", "tree": "(n sub ((relu((x_0_8 add (-10 add ((x_0_3 sub x_0_8))**2))) idiv n) sub n))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 8 + 8 + 0 + 8 + 6 - 3 - 5 - 1 - 14 - 21 - 35 - 45 - 61 - 72 - 90 - 103 - 119 - 133 - 155 - 172 - 196", "x2": "add sub abs idiv n add x_0_8 n add n sub n relu x_0_1 x_0_2", "tree": "((abs((n idiv (x_0_8 add n))) sub (n add (n sub relu(x_0_1)))) add x_0_2)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 4 - 9 - 2 - 4 - 5 + 9 + 5 + 10 - 6 + 16 + 81 + 4 + 16 + 25 + 81 + 25 + 100 + 36 + 256 + 6561 + 16 + 256", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 7 - 3 - 3 - 1 - 8 + 2 - 10 - 4 - 15 - 170 - 669 - 6 4212 + 25 6861 - 1798 256 - 1 4384 2033 - 86 3052 1964 - 2 9343 7746 7743 - 1963 985 2592 49 - 1 2605 4482 5463 7818 6369 + 32 3784 8044 1345 2473 2892 7729 + 21", "x2": "add mul mul mod idiv n x_0_8 x_0_1 x_0_7 x_0_1 n", "tree": "(((((n idiv x_0_8) mod x_0_1) mul x_0_7) mul x_0_1) add n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 7 - 10 - 5 - 2 + 7 - 7 - 5 - 2 - 5 - 12 - 5 - 2 - 6 - 4 + 3 - 6 - 7 - 5", "x2": "add INT- 8 sub sqr abs sign add n INT- 4 mod n add idiv x_0_6 n x_0_5", "tree": "(-8 add ((abs(sign((n add -4))))**2 sub (n mod ((x_0_6 idiv n) add x_0_5))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 8 - 10 + 3 - 5 + 5 + 1 - 13 - 280 - 149 - 88 - 6822 - 3546 - 400 - 44 2969 - 495 4593 - 29 2777 - 1 9490 3271 - 1690 92 8450 - 51 9081 2089", "x2": "sub mod INT- 9 n abs mul abs add sub mod INT+ 4 x_0_3 INT- 2 idiv n n mul x_0_7 INT+ 5", "tree": "((-9 mod n) sub abs((abs((((4 mod x_0_3) sub -2) add (n idiv n))) mul (x_0_7 mul 5))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 - 2 - 4 - 24 - 49 - 79 - 114 - 154 - 199 - 249 - 304 - 364 - 429 - 499 - 574 - 654", "x2": "add mul n add INT- 5 relu x_0_3 add x_0_1 idiv mod abs INT- 3 INT- 5 INT- 4", "tree": "((n mul (-5 add relu(x_0_3))) add (x_0_1 add ((abs(-3) mod -5) idiv -4)))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 10 + 0 + 6 + 1 - 10 - 3 - 390 - 1950 - 7 7760 - 272 1565 - 8164 7250 - 24 4941 7590 - 734 8253 9400 - 2 5718 8894 7250 + 0 - 1 3607 8250 - 65 3176 5000 - 2694 3547 7700 + 0", "x2": "mul mul mod x_0_4 n add x_0_6 x_0_1 INT+ 5", "tree": "(((x_0_4 mod n) mul (x_0_6 add x_0_1)) mul 5)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 3 - 10 + 3 + 5 + 7 + 9 + 4 - 8 + 0 + 36 + 64 + 121 + 196 + 289 + 169 + 4 + 121 + 2304 + 5929 + 1 8225 + 4 4521", "x2": "sqr add x_0_8 mod INT- 6 n", "tree": "((x_0_8 add (-6 mod n)))**2", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 7 + 0 + 0 + 0 + 256 + 16 + 256 + 1 + 0 + 1 + 256 + 6561 + 16 + 1 0 + 256", "x2": "sqr sqr mod mul sqr INT- 1 0 sign sign mod relu x_0_3 INT+ 9 n", "tree": "(((((-10)**2 mul sign(sign((relu(x_0_3) mod 9)))) mod n))**2)**2", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 4 - 5 + 7 - 9 - 1 - 9 + 1 - 4 - 4 - 1 - 7 - 3 - 10 - 3 - 1 - 9 - 10 - 17 - 6 - 15", "x2": "mod abs n sub relu x_0_6 add x_0_8 relu n", "tree": "(abs(n) mod (relu(x_0_6) sub (x_0_8 add relu(n))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 5 - 9 + 5 + 10 + 10 - 1 + 7 + 7 + 5 - 15 - 5 - 13 - 23 + 5 - 1 - 9 - 8 - 63 + 15 + 11 + 20", "x2": "sub abs n sqr sub mod relu n x_0_8 INT- 3", "tree": "(abs(n) sub (((relu(n) mod x_0_8) sub -3))**2)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 1 + 5 + 1 + 10 - 9 - 92 - 101 - 95 - 99 - 90 - 109 - 192 - 201 - 195 - 199 - 190 - 209 - 292", "x2": "add idiv n sqr sqr abs sqr n sub x_0_6 sqr INT+ 1 0", "tree": "((n idiv ((abs((n)**2))**2)**2) add (x_0_6 sub (10)**2))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 4 + 4 - 3 + 6 - 9 + 16 + 16 + 9 + 36 + 81 + 256 + 256 + 81 + 1296 + 6561 + 6 5536 + 6 5536 + 6561", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 5 + 8 + 3 + 3 + 4 + 10 - 70 + 128 + 54 + 60 + 88 + 240 - 1820 + 3584 + 1620 + 1920 + 2992 + 8640 - 6 9160", "x2": "mul x_0_6 add n relu n", "tree": "(x_0_6 mul (n add relu(n)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 2 - 1 - 10 + 2 - 2 + 3 + 77 - 8 - 9 - 20 - 836 + 108 + 130 + 294 + 1 2555 + 1744 + 2227 - 5274 - 23 8526", "x2": "sub n mul n mul sign add x_0_6 add n idiv INT- 7 n x_0_4", "tree": "(n sub (n mul (sign((x_0_6 add (n add (-7 idiv n)))) mul x_0_4)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 1 - 15 - 68 - 280 - 1290 - 7091 - 4 6432 - 35 4096 - 307 6670 - 2994 8347 - 3 2246 160 - 38 265 3608 - 487 2270 8314 - 6738 82 635", "x2": "sub sub sub mul n sub INT+ 9 abs add INT- 1 0 x_0_1 mul n x_0_2 n idiv n idiv n n", "tree": "((((n mul (9 sub abs((-10 add x_0_1)))) sub (n mul x_0_2)) sub n) sub (n idiv (n idiv n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 5 + 1 + 3 - 3 + 2 + 1 + 4 + 1 + 0 + 4 - 2 + 1 + 2 + 5 + 0 + 1 + 5 - 1 + 2 + 3 + 6", "x2": "add sign mul x_0_4 x_0_8 x_0_7", "tree": "(sign((x_0_4 mul x_0_8)) add x_0_7)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 1 + 9 - 4 + 8 + 8 - 5 + 2 + 1 + 2 + 1 + 1 + 2 + 1 + 2 + 1 + 2 + 2 + 1 + 2", "x2": "idiv add n sub n mod sign x_0_5 x_0_6 n", "tree": "((n add (n sub (sign(x_0_5) mod x_0_6))) idiv n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 - 1 - 9 - 3 - 245 - 246 - 777 - 696 - 2 565 - 2 5590 - 9 5337 - 10 1940 - 347 7669 - 501 8370 - 2145 4185 - 2610 720 - 10 505 1237", "x2": "mul sign INT+ 1 mod n mul mul sub x_0_4 n abs n n", "tree": "(sign(1) mul (n mod (((x_0_4 sub n) mul abs(n)) mul n)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 6 + 9 + 8 + 1 + 16 + 16 + 10 + 26 + 27 + 22 + 39 + 41 + 37 + 55 + 58", "x2": "add relu add n add sub n n x_0_3 sign n", "tree": "(relu((n add ((n sub n) add x_0_3))) add sign(n))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 + 0 + 6 - 9 - 2 + 6 + 10 - 4 + 8 + 5 - 2 + 3 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1", "x2": "sign x_0_12", "tree": "sign(x_0_12)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 5 + 7 + 2 + 0 + 9 + 5 + 10 - 10 - 2 - 3 + 8 + 5 - 5 - 1 - 6 + 6 + 6 + 6 - 3 + 0 + 6 + 5 + 6 - 1", "x2": "sub abs INT- 6 relu add idiv x_0_11 n add x_0_8 INT+ 2", "tree": "(abs(-6) sub relu(((x_0_11 idiv n) add (x_0_8 add 2))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 1 - 2 + 96 - 4620 - 7224 + 331 - 21 - 33 + 750 - 1 3650 - 1 3225 + 825 - 77 - 124 + 2156", "x2": "sub idiv mul add mul x_0_1 mul mul n sign relu n INT+ 6 n n x_0_2 abs n", "tree": "(((((x_0_1 mul ((n mul sign(relu(n))) mul 6)) add n) mul n) idiv x_0_2) sub abs(n))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 5 + 10 + 9 + 3 + 8 - 2 - 3 + 9 + 9 + 20 + 20 + 15 + 21 + 14 + 15 + 25 + 26 + 38 + 39 + 35 + 42", "x2": "add relu n relu x_0_8", "tree": "(relu(n) add relu(x_0_8))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 9 + 5 + 16 + 0 + 15 + 27 + 12 + 28 + 41 + 27 + 44 + 58 + 45 + 63 + 78", "x2": "add add n INT+ 4 x_0_3", "tree": "((n add 4) add x_0_3)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 8 + 10 - 10 - 6 + 3 - 3 + 12 - 22 - 14 - 4 + 56 + 22 + 14 - 136 + 0 + 0 + 280 - 112 - 44", "x2": "mul mod INT+ 7 INT- 9 add x_0_3 x_0_7", "tree": "((7 mod -9) mul (x_0_3 add x_0_7))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 2 + 5 + 8 + 1 + 8 + 11 + 4 + 11 + 14 + 7 + 14 + 17 + 10 + 17 + 20 + 13", "x2": "abs add mod INT- 5 relu INT+ 4 x_0_3", "tree": "abs(((-5 mod relu(4)) add x_0_3))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 8 + 3 + 67 - 15 - 192 + 486 + 820 - 2735 - 633 + 1 5311 - 1 812 - 6 4012 + 12 272 + 20 2535 - 80 517", "x2": "sub add mod sign INT- 1 0 mul sqr n relu n sub INT+ 4 x_0_1 mul x_0_2 INT+ 5", "tree": "(((sign(-10) mod ((n)**2 mul relu(n))) add (4 sub x_0_1)) sub (x_0_2 mul 5))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 6 - 4 + 5 + 7 - 2 - 48 - 22 - 12 - 40 - 144 - 85 - 88 - 49 - 138 - 88 - 37 - 131 - 268", "x2": "sub idiv sub add INT+ 1 0 abs x_0_4 x_0_3 INT- 4 relu add x_0_6 mod mul x_0_4 INT- 1 0 sqr n", "tree": "((((10 add abs(x_0_4)) sub x_0_3) idiv -4) sub relu((x_0_6 add ((x_0_4 mul -10) mod (n)**2))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 625 + 312 + 208 + 156 + 125 + 104 + 89 + 78 + 69 + 62 + 56 + 52 + 48", "x2": "idiv sqr sqr INT- 5 n", "tree": "(((-5)**2)**2 idiv n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 3 + 1 + 7 - 7 + 1 + 4 + 7 + 4 - 6 + 8 - 3 + 8 + 8 + 1 + 12 - 9 + 16 + 5 + 9 + 20 - 8 + 28 - 4 + 25 + 25 + 1 + 48 - 12 + 53", "x2": "add x_0_5 x_0_7", "tree": "(x_0_5 add x_0_7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5", "x2": "idiv n INT+ 4", "tree": "(n idiv 4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 0 + 7 + 3 + 6 + 9 + 7 + 8 + 10 + 9 + 9 + 10 + 9 + 9 + 9 + 9 + 9 + 9 + 8 + 8 + 8 + 8 + 8 + 8 + 7 + 7", "x2": "add idiv mul x_0_3 x_0_1 add n x_0_1 INT+ 6", "tree": "(((x_0_3 mul x_0_1) idiv (n add x_0_1)) add 6)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 2 - 9 + 6 - 5 + 3 + 8 + 20 + 18 + 20 + 22 + 24 + 25 + 27 + 29 + 31 + 33 + 35 + 37 + 39 + 41 + 43 + 45 + 47 + 49 + 52 + 53 + 55 + 57", "x2": "add add n n idiv mod x_0_3 sub n x_0_5 add x_0_2 relu x_0_6", "tree": "((n add n) add ((x_0_3 mod (n sub x_0_5)) idiv (x_0_2 add relu(x_0_6))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 10 - 6 + 5 - 4 - 7 + 10 + 1 + 6 + 8 + 5 + 8 + 4 + 12 + 2 + 9 + 14 + 9 + 13 + 5 + 15 + 4 + 15 + 24 + 14 + 19 + 6 + 20 + 8 + 25", "x2": "add sign x_0_5 relu mod add x_0_7 mod relu abs abs mod x_0_6 x_0_7 x_0_7 n", "tree": "(sign(x_0_5) add relu(((x_0_7 add (relu(abs(abs((x_0_6 mod x_0_7)))) mod x_0_7)) mod n)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 1 - 4 - 1 + 5 - 10 - 1 - 9 - 1 - 10 - 9 - 9 - 11 - 18 - 11 - 14 - 12 - 16 - 13 - 13 - 17 - 19 - 4 - 21 - 17 - 16 - 15 - 17 - 26 - 12 - 11 - 28 - 28", "x2": "sub sub sub mod mod add mul x_0_1 add INT+ 7 x_0_5 abs INT+ 1 n x_0_9 mod INT- 8 INT+ 8 n x_0_9", "tree": "(((((((x_0_1 mul (7 add x_0_5)) add abs(1)) mod n) mod x_0_9) sub (-8 mod 8)) sub n) sub x_0_9)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 9 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign add mod sub x_0_2 add mul add x_0_1 n x_0_2 x_0_2 INT- 6 idiv x_0_1 sign INT- 7", "tree": "sign((((x_0_2 sub (((x_0_1 add n) mul x_0_2) add x_0_2)) mod -6) add (x_0_1 idiv sign(-7))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 3 + 4 + 3 + 3 + 4 + 3 + 3 + 4 + 3 + 3 + 4 + 3 + 3 + 4 + 3 + 3 + 4 + 3 + 3 + 4 + 3 + 3", "x2": "abs add INT+ 4 idiv mod add n sub n n INT+ 3 INT- 1 0", "tree": "abs((4 add (((n add (n sub n)) mod 3) idiv -10)))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 3 + 6 + 8 + 10 + 6 + 8 + 9 + 2 + 12 + 11 + 0 + 0 + 16 + 15 - 1 + 8 + 14 + 8 + 14 + 21 + 0 - 5 + 33 + 25 - 13 + 2 + 22 + 14 + 16 + 30", "x2": "sub n sub add x_0_8 relu x_0_2 INT+ 8", "tree": "(n sub ((x_0_8 add relu(x_0_2)) sub 8))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 9 + 27 - 81 + 243 - 729 + 2187 - 6561 + 1 9683 - 5 9049 + 17 7147 - 53 1441 + 159 4323 - 478 2969 + 1434 8907 - 4304 6721 + 1 2914 163 - 3 8742 489 + 11 6226 1467 - 34 8678 4401 + 104 6035 3203 - 313 8105 9609 + 941 4317 8827 - 2824 2953 6481", "x2": "mul mul idiv n abs n INT- 3 x_0_1", "tree": "(((n idiv abs(n)) mul -3) mul x_0_1)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 3 + 4 + 4 + 0 + 4 + 11 + 5 + 14 + 10 + 21 + 7 + 5 + 3 + 1 + 31 + 16 + 30 + 15 + 29 + 14 + 6 + 12 + 4", "x2": "mod sub mod relu sqr INT+ 8 n x_0_1 add n n", "tree": "(((relu((8)**2) mod n) sub x_0_1) mod (n add n))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 5 - 1 - 9 + 6 - 2 + 1 + 2 + 232 + 259 + 942 + 2479 + 523 + 2 4833 + 34 + 99 + 91 5463 + 120 8563 + 1687 8763 + 1 2296 3365 + 575 6668 + 135 6755 9223 + 2 7547 + 23 8201 + 20 9518 1281 4416 + 37 9762 3824 6173 + 7692 1018 9871 38 + 42 3359 7003 7205 8177 + 961 377 9767 1223 + 55 2235 9898 6582 839 9243 + 235 2516 5554", "x2": "sub add add mul INT+ 2 mul sub n sqr INT- 3 mod x_0_8 x_0_2 mul n sqr x_0_8 INT+ 1 INT- 6", "tree": "((((2 mul ((n sub (-3)**2) mul (x_0_8 mod x_0_2))) add (n mul (x_0_8)**2)) add 1) sub -6)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 3 + 8 + 10 + 4 + 0 + 10 - 8 - 8 + 2 + 4 + 4 + 9 + 8 + 10 + 4 + 0 + 10 + 10 + 11 + 2 + 4 + 4 + 9 + 8 + 10 + 4 + 0 + 10 + 10 + 11 + 2 + 4 + 4 + 9", "x2": "mod x_0_11 n", "tree": "(x_0_11 mod n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 1 - 9 + 1 - 7 + 3 - 5 + 5 - 3 + 7 - 1 + 9 + 1 + 11 + 3 + 13 + 5 + 15 + 7 + 17 + 9 + 19 + 11 + 21 + 13 + 23", "x2": "add x_0_2 relu sub sub n n INT- 2", "tree": "(x_0_2 add relu(((n sub n) sub -2)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 5 + 9 + 9 + 0 + 6 - 10 - 10 + 1 - 7 + 9 + 9 - 2 + 6 - 10 - 10 + 1 - 7 + 9 + 9 - 2 + 6 - 10 - 10 + 1 - 7 + 9 + 9 - 2", "x2": "sub sign idiv add INT+ 1 n idiv x_0_6 n x_0_4", "tree": "(sign(((1 add n) idiv (x_0_6 idiv n))) sub x_0_4)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 3 - 7 + 2 + 8 + 0 + 20 + 6 - 14 + 0 + 16 + 0 + 80 + 0 - 56 + 0 + 32 + 0 + 320 + 0 - 112 + 0 + 64 + 0 + 640 + 0 - 448 + 0 + 256", "x2": "mul mod x_0_4 INT+ 6 x_0_6", "tree": "((x_0_4 mod 6) mul x_0_6)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 5 - 7 - 3 - 10 - 7 + 2 + 9 + 7 + 3 + 0 + 112 + 57 + 160 + 168 - 44 - 126 - 56 - 33 + 0 - 2240 + 5187 + 5600 + 2 3016 - 6336 + 8694 + 8512 + 2739 + 0 + 6 4960 - 1177 4490 + 2887 3600 + 1 2815 3088 - 1 4562 288", "x2": "mul x_0_9 sub x_0_10 n", "tree": "(x_0_9 mul (x_0_10 sub n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 2 + 2 + 3 + 2 + 4 + 2 + 5 + 2 + 6 + 2 + 7 + 2 + 8 + 2 + 9 + 2 + 10 + 2 + 11 + 2 + 12 + 2 + 13", "x2": "idiv add x_0_1 n x_0_1", "tree": "((x_0_1 add n) idiv x_0_1)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 6 + 6 + 7 - 9 - 1 + 3 + 2 + 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1", "x2": "sign mod n sqr add x_0_4 x_0_9", "tree": "sign((n mod ((x_0_4 add x_0_9))**2))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 9 - 6 + 9 - 3 - 4 + 2 - 7 + 1 - 2 + 5 + 3 + 7 + 9 + 12 + 12 + 2 + 11 + 1 + 18 + 5 + 3 + 7 + 9 + 12 + 12 + 2 + 11 + 1 + 18 + 5 + 3 + 7", "x2": "mod x_0_10 n", "tree": "(x_0_10 mod n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 15 + 13 + 9 + 13 + 15 + 15 + 13 + 19 + 23 + 15 + 25 + 23 + 19 + 23 + 25 + 25 + 23 + 29 + 33 + 25 + 35 + 33 + 29", "x2": "sub add abs relu mod INT- 2 INT+ 7 n mod mul n n INT- 1 0", "tree": "((abs(relu((-2 mod 7))) add n) sub ((n mul n) mod -10))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 10 + 19 + 32 + 49 + 70 + 95 + 124 + 157 + 195 + 236 + 281 + 330 + 383 + 440 + 501 + 566 + 635 + 708 + 786 + 867 + 952 + 1041", "x2": "add sqr n add idiv mul INT+ 9 n INT- 1 0 add INT+ 4 mul n n", "tree": "((n)**2 add (((9 mul n) idiv -10) add (4 add (n mul n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 3 + 2 + 2 + 4 + 2 + 3 + 2 + 3 + 3 + 3 + 2 + 3 + 4 + 3 + 3 + 3 + 2 + 3 + 4 + 3 + 3 + 5 + 2 + 3 + 3", "x2": "add relu INT+ 2 mod n abs x_0_3", "tree": "(relu(2) add (n mod abs(x_0_3)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 - 5 + 9 + 9 + 4 - 576 - 1921 + 1820 + 2916 + 1 0 - 102 - 44 + 62 + 52 + 20 - 2571 - 7593 + 6772 + 1 24 + 3 2000 - 303 - 124 + 165 + 132 + 48 - 6033 - 1 7144 + 1 4900", "x2": "idiv sqr abs mul mul n n INT- 2 x_0_5", "tree": "((abs(((n mul n) mul -2)))**2 idiv x_0_5)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 6 + 5 + 3 + 7 + 10 - 3 + 57 + 87 + 95 + 118 + 137 + 159 + 199 + 168 + 169 + 194 + 206 + 224 + 241 + 242 + 316 + 360 + 382 + 419 + 452 + 488 + 542 + 525 + 540", "x2": "sub mul x_0_6 sub n n sub x_0_7 sqr n", "tree": "((x_0_6 mul (n sub n)) sub (x_0_7 sub (n)**2))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 2 - 10 + 0 - 6 - 1 - 8 - 10 - 1 - 3 - 2 - 4 - 10 - 3 - 5 - 5 - 16 - 11 - 6 - 7 - 17 - 12 - 16 - 10 - 21 - 15 - 32 - 20 - 27 - 20 - 49 - 30 - 43", "x2": "sub x_0_10 sub abs x_0_4 idiv x_0_5 x_0_6", "tree": "(x_0_10 sub (abs(x_0_4) sub (x_0_5 idiv x_0_6)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 10 - 7 - 4 - 10 + 1 + 1 + 3 + 3 + 7 + 2 + 2 + 2 + 4 + 4 + 8 + 3 + 3 + 3 + 5 + 5 + 9 + 4 + 4 + 4 + 6 + 6 + 10 + 5", "x2": "mod add sign add mod add abs sub n mul idiv x_0_4 n x_0_2 n INT+ 7 INT+ 1 x_0_6 n", "tree": "((sign((((abs((n sub ((x_0_4 idiv n) mul x_0_2))) add n) mod 7) add 1)) add x_0_6) mod n)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 2 - 9 - 10 - 4 - 108 - 63 - 1062 - 603 - 1 530 - 5994 - 10 4328 - 5 9373 - 103 3722 - 58 8303 - 1024 2450 - 582 9084 - 1 148 5548 - 5775 6483 - 10 555 1982 - 5 7227 103 - 99 6333 7770 - 56 7023 9274 - 987 2000 7768 - 561 8258 4393 - 9781 5010 9842 - 5566 7541 3003 - 9 6918 3105 8490", "x2": "mul INT- 9 sub add n mul abs n idiv relu n x_0_2 add x_0_2 x_0_4", "tree": "(-9 mul ((n add (abs(n) mul (relu(n) idiv x_0_2))) sub (x_0_2 add x_0_4)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 3 - 4 - 2 - 5 + 1 - 3 + 0 - 1 - 1 + 1 - 8 - 5 - 17 - 11 - 32 - 42 - 1 - 52 - 20 - 63 - 23 + 29 - 416 - 340 - 417 + 292 - 2 2684 - 1 4309 - 447 + 1 5153 - 75 6772 - 90 1500 - 1 315 - 43 9472", "x2": "sub mul x_0_12 sub relu x_0_1 x_0_4 n", "tree": "((x_0_12 mul (relu(x_0_1) sub x_0_4)) sub n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506", "x2": "sub sqr n n", "tree": "((n)**2 sub n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 7 - 5 - 4 - 24 - 33 - 65 - 80 - 127 - 159 - 225 - 266 - 354 - 419 - 533 - 610 - 753 - 861 - 1037 - 1160 - 1372 - 1533 - 1785 - 1964 - 2259", "x2": "add add sign sub n add INT- 6 x_0_2 mul sub relu idiv n INT+ 4 n n x_0_2", "tree": "((sign((n sub (-6 add x_0_2))) add ((relu((n idiv 4)) sub n) mul n)) add x_0_2)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 1 - 2 - 1 - 9 - 8 + 10 - 9 - 8 + 0 + 3 + 1331 + 1728 + 2197 + 2744 + 3375 + 0 + 4913 + 5832 + 6859 + 400 - 56 7567 - 5 5021 8460 - 5821 3226 6972 - 670 6163 7310 2912 - 83 8270 4663 8071 6250 - 11 3334 1670 5467 2833 4172 - 1 6524 1215 5657 1299 1476 4258 - 2590 9822 6007 379 7063 5488 4144 - 435 8032 1614 3837 8666 889 2084 9008 - 78 4445 7890 5890 8159 8960 575 2851 9500 - 15 770 4806 5712 2148 3320 1230 5692 6898 6570 - 3 877 7944 3857 8615 9783 9612 205 2994 6072 5760 - 6725 1836 2872 2422 5600 9467 4980 6508 2834 2189 9809", "x2": "mul sqr n mod n sub add mod INT+ 2 add add x_0_1 sign x_0_5 x_0_1 abs n x_0_10", "tree": "((n)**2 mul (n mod (((2 mod ((x_0_1 add sign(x_0_5)) add x_0_1)) add abs(n)) sub x_0_10)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 9 + 6 + 8 + 5 + 7 + 4 + 6 + 3 + 5 + 2 + 4 + 1 + 3 + 0 + 2 - 1 + 1 - 2 + 0 - 3 - 1 - 4 - 2 - 5", "x2": "sub x_0_2 idiv relu n n", "tree": "(x_0_2 sub (relu(n) idiv n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 8 + 7 + 6 + 10 - 18 + 3 - 33 + 21 - 67 + 45 - 136 + 119 - 265 + 284 - 539 + 650 - 1109 + 1453 - 2321 + 3190 - 4908 + 6940 - 1 446 + 1 5012 - 2 2323 + 3 2370", "x2": "sub x_0_2 sub abs INT- 2 sub x_0_4 add add n sign x_0_1 x_0_3", "tree": "(x_0_2 sub (abs(-2) sub (x_0_4 sub ((n add sign(x_0_1)) add x_0_3))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 9 - 6 + 8 + 2 - 5 + 0 + 1 + 7 + 2 + 5 + 1 + 5 + 7 + 6 + 2 + 6 + 3 + 0 + 3 + 3 + 0 + 5 + 3 + 1 + 5 + 6 + 4 + 2", "x2": "mod add abs x_0_6 add n mul n relu sign idiv INT- 8 INT+ 3 INT+ 8", "tree": "((abs(x_0_6) add (n add (n mul relu(sign((-8 idiv 3)))))) mod 8)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 4 - 5 - 7 + 1 + 9 + 3 + 256 + 1053 + 300 + 3 1339 + 15 1776 + 5 1376 + 614 3032 + 3414 9825 + 1315 3024 + 17 7533 6248 + 110 6454 4596 + 47 4824 2025 + 7101 3449 9600 + 4 8794 6416 7718 + 2 2981 4914 100 + 375 6611 5029 516 + 2810 5713 6060 7296 + 1436 3432 1256 3125 + 25 3946 9375 9638 8816 + 204 8906 5218 8271 8784 + 112 6093 786 4949 2352 + 2 1356 9374 5185 6299 4256 + 18 4401 5869 6944 4690 6500", "x2": "mul mul n add relu mod x_0_7 mod INT+ 5 n x_0_3 n", "tree": "((n mul (relu((x_0_7 mod (5 mod n))) add x_0_3)) mul n)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 4 + 1 + 3 + 80 + 50 + 3132 + 1176 + 22 2272 + 14 6529 + 2488 8000 + 694 8667 + 40 1075 5824 + 28 8495 6750 + 8830 972 460 + 1721 6538 3225 + 253 5682 5056 4352 + 199 2145 3899 1948 + 9 2369 8457 4654 1404 + 1 632 1338 562 6371 + 4148 6744 7703 4685 2400 + 3546 234 5899 837 6017 + 225 8438 6574 6919 3796 8236 + 8 4321 5873 1942 6264 2549 + 14 6142 5740 5276 5885 7883 848 + 13 5223 5544 8342 7453 960 5625 + 1 1113 5727 4278 2566 2926 5449 6780", "x2": "mul n abs mul n sub x_0_3 relu add abs idiv abs relu x_0_2 INT+ 8 x_0_2", "tree": "(n mul abs((n mul (x_0_3 sub relu((abs((abs(relu(x_0_2)) idiv 8)) add x_0_2))))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 2 + 9 + 0 + 25 + 0 + 49 + 0 + 81 + 0 + 121 + 0 + 169 + 0 + 225 + 0 + 289 + 0 + 361 + 0 + 441 + 0 + 529 + 0 + 625", "x2": "relu mod sqr n sqr x_0_2", "tree": "relu(((n)**2 mod (x_0_2)**2))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 7 + 10 + 3 - 7 - 6 + 1 + 8 + 25 + 49 + 100 + 9 + 49 + 36 + 1 + 64 + 625 + 2401 + 1 0 + 81 + 2401 + 1296 + 1 + 4096 + 39 625 + 576 4801 + 1 0 0 + 6561 + 576 4801 + 167 9616 + 1", "x2": "sqr x_0_8", "tree": "(x_0_8)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 2 - 10 + 6 - 3 - 3 + 3 + 15 - 1 + 8 + 8 + 2 - 10 + 6 - 3 - 3 + 3 + 15 - 1 + 8 + 8 + 2 - 10 + 6 - 3 - 3 + 3 + 15", "x2": "sub INT+ 5 x_0_5", "tree": "(5 sub x_0_5)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 8 - 6 - 7 + 5 - 9 + 7 + 3 + 8 + 6 + 7 + 5 + 9 + 7 + 3 + 8 + 6 + 7 + 5 + 9 + 7 + 3 + 8 + 6 + 7 + 5 + 9 + 7 + 3 + 8", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 8 + 3 + 0 + 5 + 24 + 63 + 128 + 225 + 360 + 539 + 768 + 1053 + 1400 + 1815 + 2304 + 2873 + 3528 + 4275 + 5120 + 6069 + 7128 + 8303", "x2": "mul add n relu relu INT- 5 sqr abs add abs INT+ 8 sub INT- 4 n", "tree": "((n add relu(relu(-5))) mul (abs((abs(8) add (-4 sub n))))**2)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 - 3 + 5 - 4 - 7 - 1 + 5 + 7 + 8 - 10 + 1 - 1 - 1 + 1 - 2 - 2 - 1 + 1 + 1 + 1 - 2 + 0 - 1 - 1 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1 + 0 - 1", "x2": "idiv mul INT+ 4 x_0_11 n", "tree": "((4 mul x_0_11) idiv n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 7 - 3 - 5 - 70 + 30 + 50 + 700 - 300 - 500 - 7000 + 3000 + 5000 + 7 0 - 3 0 - 5 0 - 70 0 + 30 0 + 50 0 + 700 0 - 300 0 - 500 0 - 7000 0 + 3000 0 + 5000 0 + 7 0 0 - 3 0 0", "x2": "mul x_0_3 INT- 1 0", "tree": "(x_0_3 mul -10)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 + 5 - 9 + 9 - 5 + 6 - 9 + 10 - 5 + 7 - 9 + 11 - 5 + 8 - 9 + 12 - 5 + 9 - 9 + 13 - 5 + 10 - 9 + 14 - 5 + 11 - 9", "x2": "sub x_0_4 idiv mod sign INT+ 4 INT- 5 x_0_4", "tree": "(x_0_4 sub ((sign(4) mod -5) idiv x_0_4))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 0 + 1 - 1 - 10 + 1 - 1 + 0 + 0 + 9 + 0 + 0 - 1 - 1 + 8 - 1 - 1 + 0 + 0 + 7 + 0 + 0 - 1 - 1 + 6 - 1 - 1 + 0", "x2": "add abs x_0_5 sign INT- 8", "tree": "(abs(x_0_5) add sign(-8))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 + 3 + 7 - 7 + 3 + 4 - 3 + 261 + 317 + 397 + 305 + 536 + 627 + 215 - 317 + 211 + 375 - 158 + 209 + 705 + 1829 + 889 + 1419 + 2102 + 1191 + 1557 - 1829 + 847 - 491 - 122", "x2": "sub mul mul mod sub idiv x_0_7 sub x_0_1 x_0_6 sqr sign n INT+ 4 n sub n INT- 3 x_0_6", "tree": "((((((x_0_7 idiv (x_0_1 sub x_0_6)) sub (sign(n))**2) mod 4) mul n) mul (n sub -3)) sub x_0_6)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 7 - 2 + 3 + 7 + 2 - 7 - 2 + 3 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign add n add idiv sub x_0_1 x_0_4 idiv x_0_7 sub x_0_9 x_0_6 INT+ 1", "tree": "sign((n add (((x_0_1 sub x_0_4) idiv (x_0_7 idiv (x_0_9 sub x_0_6))) add 1)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 6 + 12 + 24 + 48 + 96 + 192 + 384 + 768 + 1536 + 3072 + 6144 + 1 2288 + 2 4576 + 4 9152 + 9 8304 + 19 6608 + 39 3216 + 78 6432 + 157 2864 + 314 5728 + 629 1456 + 1258 2912 + 2516 5824 + 5033 1648", "x2": "abs mul x_0_1 sub INT+ 8 mul INT+ 6 sign n", "tree": "abs((x_0_1 mul (8 sub (6 mul sign(n)))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 10 + 0 + 0 + 0 + 60 + 0 + 0 + 0 + 360 + 0 + 0 + 0 + 2160 + 0 + 0 + 0 + 1 2960 + 0 + 0 + 0 + 7 7760 + 0 + 0 + 0 + 46 6560 + 0", "x2": "mul INT+ 6 x_0_4", "tree": "(6 mul x_0_4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 2 - 6 - 8 - 5 + 0 + 8 - 5 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign mul x_0_8 abs n", "tree": "sign((x_0_8 mul abs(n)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 7 - 3 - 7 - 3 - 3 + 2 - 7 + 9 + 0 - 3 - 5 + 14 + 6 + 7 + 6 + 6 - 4 + 7 - 18 + 0 + 6 + 10 - 28 - 12 - 14 - 6 - 12 + 8 - 14 + 18 + 0 - 6 - 10 + 28", "x2": "mul idiv sub INT- 5 add abs n x_0_7 mod n sqr n x_0_11", "tree": "(((-5 sub (abs(n) add x_0_7)) idiv (n mod (n)**2)) mul x_0_11)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 10 - 5 - 3 - 4 - 3 - 10 + 121 + 1 + 1 + 1 + 1 + 1 + 1 4884 + 4 + 4 + 4 + 4 + 4 + 2 2156 3225 + 25 + 25 + 25 + 25 + 25 + 4 9090 2631 1552 7076 + 676 + 676 + 676 + 676", "x2": "sub sqr sub INT- 1 relu x_0_6 relu INT- 8", "tree": "(((-1 sub relu(x_0_6)))**2 sub relu(-8))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 4 + 225 - 240 + 1 6875 - 2 1600 + 177 1875 - 259 2000 + 2 3920 3125 - 3 8880 0 + 394 6851 5625 - 699 8400 0 + 7 6963 6054 6875 - 14 6966 4000 0 + 1731 6811 2304 6875 - 3527 1936 0 0 + 44 1578 6863 7695 3125 - 95 2342 2720 0 0 + 1 2584 9925 6174 3164 625 - 2 8570 2681 6000 0 0 + 396 4272 6569 4909 6679 6875 - 942 8188 4928 0 0 0 + 13 6767 4066 6474 3835 4492 1875 - 33 9414 7857 4080 0 0 0 + 5128 7777 4992 7893 8293 4570 3125", "x2": "mul sub abs mul n mul abs INT+ 3 INT+ 5 relu INT- 3 x_0_2", "tree": "((abs((n mul (abs(3) mul 5))) sub relu(-3)) mul x_0_2)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 10 + 0 + 1 + 7 - 7 - 6 + 7 - 12 - 8 + 7 - 15 - 11 + 6 - 17 - 14 + 4 - 19 - 17 + 1 - 22 - 21 - 4 - 28 - 21 - 7", "x2": "sub x_0_3 mod add INT- 9 add n sub abs n add x_0_1 INT+ 5 INT+ 8", "tree": "(x_0_3 sub ((-9 add (n add (abs(n) sub (x_0_1 add 5)))) mod 8))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 4 - 8 + 6 + 1 - 2 + 13 + 9 + 7 + 23 + 20 + 19 + 36 + 34 + 34 + 52 + 51 + 52 + 71 + 71 + 73 + 93 + 94 + 97 + 118 + 120", "x2": "add relu n x_0_3", "tree": "(relu(n) add x_0_3)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 - 10 - 8 - 10 + 7 + 5 + 8 + 7 + 25 + 24 + 28 + 28 + 47 + 47 + 52 + 53 + 73 + 74 + 80 + 82 + 103 + 105 + 112 + 115 + 137 + 140 + 148", "x2": "mul add sub sign n n sub INT- 1 0 x_0_4 sign INT- 3", "tree": "(((sign(n) sub n) add (-10 sub x_0_4)) mul sign(-3))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 + 7 - 10 + 2 + 3 - 2 + 63 + 28 + 10 + 32 + 48 + 128 + 5103 + 448 + 160 + 2048 + 192 + 2 5088 + 41 3343 + 7168 + 2 7040 + 66 3552 + 0 + 642 2528 + 1 1945 6127 + 71 6800 + 976 1440 + 2 6542 800 + 0", "x2": "abs mul x_0_6 sqr sub abs INT- 2 mod sub INT- 6 sub x_0_2 sqr relu n n", "tree": "abs((x_0_6 mul ((abs(-2) sub ((-6 sub (x_0_2 sub (relu(n))**2)) mod n)))**2))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 1 + 8 - 5 + 5 + 6 - 9 + 3 - 8 + 0 - 2 - 11 + 12 - 1 + 14 - 1 + 16 + 1 + 9 + 0 + 1 + 0 + 2 + 0 + 12 + 2 + 13 + 9 + 2 + 1 + 2", "x2": "idiv n add x_0_4 add x_0_7 x_0_5", "tree": "(n idiv (x_0_4 add (x_0_7 add x_0_5)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 0 + 8 + 0 - 6 - 2 + 1 + 6 + 2 + 0 + 3 + 0 + 4 + 7 + 1 + 0 + 2 + 0 + 3 + 0 + 4 + 7 + 1 + 0 + 2 + 0 + 3 + 0 + 4 + 7 + 1", "x2": "mod x_0_8 add INT+ 5 mod x_0_1 n", "tree": "(x_0_8 mod (5 add (x_0_1 mod n)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 4 + 4 - 8 + 24 - 96 + 480 - 2880 + 2 160 - 16 1280 + 145 1520 - 1451 5200 + 1 5966 7200 - 19 1600 6400 + 249 808 3200 - 3487 1316 4800 + 5 2306 9747 2000 - 83 6911 5955 2000 + 1422 7497 1238 4000 - 2 5609 4948 2291 2000 + 48 6580 4016 3532 8000 - 973 1608 327 656 0 + 2 436 3768 6868 3776 0 - 44 9600 2911 1104 3072 0 + 1034 806 6955 5399 656 0", "x2": "mul x_0_1 sub idiv n n n", "tree": "(x_0_1 mul ((n idiv n) sub n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 6 - 8 - 1 + 3 + 3 - 1 - 2 + 2 + 2 - 2 - 3 + 3 + 3 - 3 + 0 + 2 + 2 + 0 + 1 + 3 + 3 + 1 + 0 + 2 + 2 + 0", "x2": "mul mod sub INT+ 5 sub x_0_4 INT+ 4 INT+ 4 sign x_0_4", "tree": "(((5 sub (x_0_4 sub 4)) mod 4) mul sign(x_0_4))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 4 - 7 + 4 + 5 + 6 + 7 + 8 + 18 + 20 + 22 + 12 + 26 + 28 + 30 + 16 + 34 + 36 + 38 + 20 + 42 + 44 + 46 + 24 + 50 + 52 + 54", "x2": "add n relu abs mod abs n mul add n n mod sub x_0_2 n mod n x_0_4", "tree": "(n add relu(abs((abs(n) mod ((n add n) mul ((x_0_2 sub n) mod (n mod x_0_4)))))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 8 - 3 - 1 - 8 - 9 + 1 + 8 + 0 + 0 + 0 + 0 + 1 + 8 + 0 + 0 + 0 + 0 + 1 + 8 + 0 + 0 + 0 + 0 + 1 + 8 + 0 + 0 + 0", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 7 - 10 - 3 - 9 - 8 + 8 + 0 + 6 + 3 + 0 + 6 + 2 + 8 + 2 + 13 + 15 + 0 + 17 + 6 + 5 + 3 + 1 + 4 + 22 + 7 + 8 + 18 + 27 + 20", "x2": "mod add abs relu x_0_1 add x_0_6 x_0_2 n", "tree": "((abs(relu(x_0_1)) add (x_0_6 add x_0_2)) mod n)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 100 + 196 + 400 + 784 + 1444 + 2500 + 4096 + 6400 + 9604 + 1 3924 + 1 9600 + 2 6896 + 3 6100 + 4 7524 + 6 1504 + 7 8400 + 9 8596 + 12 2500 + 15 544 + 18 3184 + 22 900 + 26 4196 + 31 3600", "x2": "sqr add sqr n sub n INT- 8", "tree": "(((n)**2 add (n sub -8)))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 4 + 9 + 16 + 25 + 36 + 0 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr mul idiv mod INT+ 7 n INT- 8 n", "tree": "((((7 mod n) idiv -8) mul n))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 10 - 2 - 6 - 4 + 8 + 10 + 10 + 9 + 9 + 9 + 17 + 20 + 20 + 19 + 19 + 19 + 27 + 30 + 30 + 29 + 29 + 29 + 37 + 40 + 40 + 39 + 39 + 39 + 47", "x2": "add sub sub idiv sign sign abs INT+ 1 0 x_0_7 INT- 4 INT- 6 relu x_0_6", "tree": "((((sign(sign(abs(10))) idiv x_0_7) sub -4) sub -6) add relu(x_0_6))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 10 + 10 + 1 - 2 - 7 + 4 - 1 + 7 - 10 - 7 + 14 - 260 + 1 - 2 - 7 + 4 - 1 - 53 + 658 - 7 + 14 - 260 + 1 - 2 - 7 + 4 - 1 - 53 + 658 - 7 + 14 - 260 + 1", "x2": "mod x_0_10 sub mul add INT- 1 0 INT- 4 mul idiv x_0_9 x_0_9 mul add INT+ 6 x_0_1 idiv n n INT- 1 0", "tree": "(x_0_10 mod (((-10 add -4) mul ((x_0_9 idiv x_0_9) mul ((6 add x_0_1) mul (n idiv n)))) sub -10))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 1 + 4 + 4 + 0 + 7 - 1 + 10 - 3 - 55 + 10 - 46 - 55 - 81 - 171 - 205 - 913 - 613 - 385 - 3934 - 1 7773 - 1 1557 - 8642 - 10 3540 - 41 6197 - 28 2242 - 31 8222 - 310 5559 - 1143 8114 - 816 8087 - 1239 2959 - 1 450 703", "x2": "sub idiv relu x_0_4 INT+ 9 sub mul mod x_0_8 abs x_0_4 n x_0_3", "tree": "((relu(x_0_4) idiv 9) sub (((x_0_8 mod abs(x_0_4)) mul n) sub x_0_3))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 4 - 3 + 7 + 0 + 9 + 0 + 0 + 1 + 0 + 1 + 1 + 4 + 1 + 4 + 4 + 0 + 4 + 4 + 1 + 1 + 9 + 4 + 4 + 4 + 0 + 1", "x2": "sqr mod mod mul relu INT+ 5 add add sign sqr n mul n n x_0_4 n INT+ 4", "tree": "((((relu(5) mul ((sign((n)**2) add (n mul n)) add x_0_4)) mod n) mod 4))**2", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 1 - 18 + 84 - 50 - 30 - 28 - 32 - 30 - 40 - 38 - 48 - 46 - 56 - 54 - 64 - 62 - 72 - 70 - 80 - 78 - 88 - 86 - 96 - 94", "x2": "add mul INT+ 6 idiv x_0_1 x_0_2 add mul INT- 4 n mul INT+ 8 mod x_0_2 INT- 2", "tree": "((6 mul (x_0_1 idiv x_0_2)) add ((-4 mul n) add (8 mul (x_0_2 mod -2))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 6 - 7 - 3 + 1 - 13 - 10 - 7 - 22 - 20 - 18 - 34 - 33 - 32 - 49 - 49 - 49 - 67 - 68 - 69 - 88 - 90 - 92 - 112 - 115 - 118", "x2": "sub x_0_3 n", "tree": "(x_0_3 sub n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 - 10 + 2 - 8 + 1 - 12 - 9 - 10 - 9 - 9 - 14 - 10 - 12 - 9 - 10 - 12 - 9 - 9 - 10 - 14 - 10 - 16 - 18 - 18 - 9 - 12 - 11 - 10", "x2": "sub INT- 9 relu mod INT- 5 mod x_0_5 add mod add n sqr mul n n x_0_5 n", "tree": "(-9 sub relu((-5 mod (x_0_5 mod (((n add ((n mul n))**2) mod x_0_5) add n)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 8 - 4 - 10 + 10 - 21 - 61 + 69 - 179 - 550 + 689 - 2039 - 6601 + 8956 - 2 9236 - 9 9016 + 14 3295 - 50 5969 - 178 2289 + 272 2604 - 1026 2676 - 3742 8070 + 5989 7287 - 2 3876 4153 - 8 9827 3681 + 14 9743 2174 - 62 6776 5266 - 242 5338 9388", "x2": "sub sub mul x_0_3 n sign n abs relu x_0_4", "tree": "(((x_0_3 mul n) sub sign(n)) sub abs(relu(x_0_4)))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 5 + 4 + 3 - 9 + 11 + 11 + 11 + 11 + 0 + 21 + 22 + 23 + 24 + 14 + 36 + 38 + 40 + 42 + 33 + 56 + 59 + 62 + 65 + 57 + 81 + 85 + 89", "x2": "sub add add x_0_5 n sub abs n n sign relu n", "tree": "(((x_0_5 add n) add (abs(n) sub n)) sub sign(relu(n)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 2 + 2 + 7 + 15 + 2 + 6 + 14 + 2 + 6 + 13 + 2 + 6 + 13 + 2 + 6 + 13 + 2 + 6 + 13 + 2 + 6 + 13 + 2 + 6 + 13", "x2": "sub mod x_0_3 add x_0_1 add n INT+ 4 idiv x_0_3 n", "tree": "((x_0_3 mod (x_0_1 add (n add 4))) sub (x_0_3 idiv n))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 3 + 10 - 2 + 4 - 1 - 4 - 7 + 7 - 4 + 3 - 1 - 9 - 11 + 4 - 6 + 2 - 1 - 14 - 15 + 1 - 8 + 1 - 1 - 19 - 19 - 2 - 10 + 0", "x2": "add x_0_6 mod n INT- 6", "tree": "(x_0_6 add (n mod -6))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 4 - 10 - 5 + 68 + 125 + 94 - 481 - 928 - 671 + 3938 + 7523 + 5476 - 3 1387 - 6 58 - 4 3673 + 25 1240 + 48 617 + 34 9546 - 200 9749 - 384 4756 - 279 6179 + 1607 8190 + 3075 8255 + 2236 9648 - 1 2862 5295 - 2 4606 5806", "x2": "add n mul mul sub x_0_3 n INT+ 8 idiv n sub INT- 7 n", "tree": "(n add (((x_0_3 sub n) mul 8) mul (n idiv (-7 sub n))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 - 3 - 5 - 7 - 9 - 11 - 14 - 17 - 20 - 23 - 27 - 31 - 35 - 39 - 43 - 47 - 52 - 57 - 62 - 67 - 73 - 79 - 85", "x2": "add idiv abs mod sub mod sign n INT+ 8 INT+ 1 0 sqr add n INT+ 7 INT- 1 0 INT+ 5", "tree": "((abs((((sign(n) mod 8) sub 10) mod ((n add 7))**2)) idiv -10) add 5)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 9 + 1 - 4 + 7 + 1 + 9 + 19 + 21 + 18 + 26 + 28 + 38 + 58 + 80 + 99 + 126 + 155 + 194 + 253 + 334 + 434 + 561 + 717 + 912 + 1166 + 1501 + 1936 + 2498", "x2": "abs abs add add x_0_1 sqr INT+ 1 x_0_6", "tree": "abs(abs(((x_0_1 add (1)**2) add x_0_6)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 + 1 + 6 - 6 - 7 + 10 + 8 + 8 - 3 - 8 + 10 + 10 + 31 + 37 + 12 + 12 + 1 - 4 + 22 + 16 + 27 + 41 + 16 + 23 + 13 + 0 + 26 + 20 + 25 + 45 + 20 + 27 + 23 + 4", "x2": "add mod INT+ 9 add INT+ 1 0 x_0_11 sub sub n x_0_4 INT- 6", "tree": "((9 mod (10 add x_0_11)) add ((n sub x_0_4) sub -6))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 10 + 75 + 250 + 619 + 1290 + 2395 + 4090 + 6555 + 9994 + 1 4635 + 2 730 + 2 8555 + 3 8410 + 5 619 + 6 5530 + 8 3515 + 10 4970 + 13 315 + 15 9994 + 19 4475 + 23 4250 + 27 9835", "x2": "mod INT- 6 abs sqr sqr n", "tree": "(-6 mod abs(((n)**2)**2))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 7 - 6 + 6 + 2 - 2 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656", "x2": "relu sqr sqr mod n mul add idiv INT+ 4 sign abs x_0_5 INT+ 1 n", "tree": "relu((((n mod (((4 idiv sign(abs(x_0_5))) add 1) mul n)))**2)**2)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 9 - 8 - 7 - 10 - 9 - 8 - 7 - 10 - 9 - 8 - 7 - 10 - 9 - 8 - 7 - 10 - 9 - 8 - 7 - 10 - 9 - 8 - 7", "x2": "sub mod n INT+ 4 INT+ 1 0", "tree": "((n mod 4) sub 10)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 4 - 8 - 2 - 13 - 6 - 16 - 8 - 17 - 8 - 16 - 6 - 13 - 2 - 8 + 4 - 1 + 12 + 8 + 22 + 19 + 34 + 32 + 48 + 47", "x2": "add sub relu abs n n add add INT- 1 0 n x_0_2", "tree": "((relu(abs(n)) sub n) add ((-10 add n) add x_0_2))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 + 9 + 5 - 5 - 5 + 5 + 5 - 5 - 5 + 5 + 5 - 5 - 5 + 5 + 5 - 5 - 5 + 5 + 5 - 5 - 5 + 5 + 5 - 5 - 5", "x2": "mul sign x_0_2 INT- 5", "tree": "(sign(x_0_2) mul -5)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 - 3 + 4 - 4 - 4 + 3 - 5 - 5 + 2 - 6 - 6 + 1 - 7 - 7 + 0 - 8 - 8 - 1 - 9 - 9 - 2 - 10 - 10 - 3 - 11 - 11", "x2": "sub x_0_3 relu sign add n n", "tree": "(x_0_3 sub relu(sign((n add n))))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign sub abs mul INT+ 1 add n idiv n mod relu relu n INT- 3 INT+ 7", "tree": "sign((abs((1 mul (n add (n idiv (relu(relu(n)) mod -3))))) sub 7))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 9 + 6 + 4 - 81 + 0 - 81 - 81 + 648 + 0 + 648 + 648 - 5265 + 0 - 5265 - 5265 + 4 2606 + 0 + 4 2606 + 4 2606 - 34 5141 + 0 - 34 5141 - 34 5141 + 279 5634 + 0 + 279 5634", "x2": "mul sqr sqr INT- 3 idiv x_0_4 INT- 1 0", "tree": "(((-3)**2)**2 mul (x_0_4 idiv -10))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 + 10 + 4 + 0 + 2 + 3 + 4 + 0 + 2 + 3 + 4 + 0 + 2 + 3 + 4 + 0 + 2 + 3 + 4 + 0 + 2 + 3 + 4 + 0 + 2 + 3", "x2": "mod idiv x_0_4 abs sqr sign add idiv n sub relu x_0_3 n INT+ 1 0 n", "tree": "((x_0_4 idiv abs((sign(((n idiv (relu(x_0_3) sub n)) add 10)))**2)) mod n)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 5 + 10 + 10 - 9 + 6 - 34 + 37 - 34 + 56 - 49 + 34 - 39 + 20 - 3 + 4 + 8 - 13 + 5 - 8 + 5 + 1 + 0 + 1 - 3 + 0 - 1", "x2": "idiv add mul INT- 9 add x_0_1 add x_0_4 x_0_3 INT+ 2 n", "tree": "(((-9 mul (x_0_1 add (x_0_4 add x_0_3))) add 2) idiv n)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 + 0 + 1 + 3 + 2 + 5 + 1 + 2 + 4 + 6 + 7 + 9 + 10 + 11 + 13 + 14 + 15 + 16 + 17 + 18 + 20 + 21", "x2": "mul mod idiv sub n sqr INT- 8 n n sign add sub INT+ 6 n n", "tree": "((((n sub (-8)**2) idiv n) mod n) mul sign(((6 sub n) add n)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 2 - 18 - 219 - 3508 - 7 165 - 168 3966 - 4715 1055 - 15 883 3768 - 543 1801 5657 - 2 1727 2062 6290 - 95 5997 755 6771 - 4588 7859 6272 5020 - 23 8616 8700 6170 1053 - 1336 2544 7234 5525 8982 - 8 175 2683 4073 1553 8935 - 513 1217 1738 681 9449 1856 - 3 4892 2767 8188 6372 2544 6225 - 251 2243 9282 9581 8802 3212 8218 - 1 9093 538 5504 8222 8976 4174 4587 - 152 7444 3084 385 7831 8113 3956 6980 - 1 2830 5321 9059 2405 7872 1525 2362 6341 - 112 9086 8327 7213 1709 2749 4220 7911 8030 - 1 387 5988 6150 3611 7253 2946 8312 7885 8783 - 99 7209 4907 434 6725 6316 2895 8027 7044 3192", "x2": "mul add INT- 1 mul abs sub idiv relu x_0_1 relu n x_0_1 INT- 4 abs n", "tree": "((-1 add (abs(((relu(x_0_1) idiv relu(n)) sub x_0_1)) mul -4)) mul abs(n))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 66 + 50 + 40 + 33 + 28 + 25 + 22 + 20 + 18 + 16 + 15 + 14 + 13 + 12 + 11 + 11 + 10 + 10 + 9 + 9 + 8", "x2": "idiv mul sqr INT- 1 0 mod sub INT+ 2 sub n n n n", "tree": "(((-10)**2 mul ((2 sub (n sub n)) mod n)) idiv n)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 5 - 1 + 6 + 5 - 8 - 5 + 7 + 6 + 7 + 7 + 7 + 5 + 6 + 8 + 8 + 8 + 7 + 7 + 7 + 7 + 8 + 8 + 8 + 7 + 7", "x2": "add abs INT+ 7 idiv x_0_7 x_0_3", "tree": "(abs(7) add (x_0_7 idiv x_0_3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 7 - 3 + 7 - 5 + 0 - 3 + 4 + 11 + 7 - 3 + 9 + 4 + 7 + 0 - 7 - 3 + 7 - 5 + 0 - 3 + 4 + 11 + 7 - 3 + 9 + 4", "x2": "sub INT+ 4 x_0_7", "tree": "(4 sub x_0_7)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 4 - 9 - 8 + 8 - 6 - 10 + 8 + 9 + 10 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign mul mod x_0_7 abs add sub n x_0_9 x_0_1 x_0_7", "tree": "sign(((x_0_7 mod abs(((n sub x_0_9) add x_0_1))) mul x_0_7))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 18 + 186 + 2202 + 2 6394 + 31 6698 + 380 346 + 4560 4122 + 5 4724 9434 + 65 6699 3178 + 788 391 8106 + 9456 4701 7242 + 11 3477 6420 6874 + 136 1731 7048 2458 + 1634 780 4578 9466 + 1 9608 9365 4947 3562 + 23 5307 2385 9368 2714 + 282 3686 8631 2419 2538 + 3388 4242 3574 9031 426 + 4 661 908 2898 8372 5082", "x2": "mul add add x_0_1 INT- 5 x_0_1 INT+ 6", "tree": "(((x_0_1 add -5) add x_0_1) mul 6)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 0 - 1", "x2": "idiv sub sub relu n mod n sqr INT+ 3 n n", "tree": "(((relu(n) sub (n mod (3)**2)) sub n) idiv n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 8 - 6 + 1 - 2 + 4 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0", "x2": "mod idiv add INT- 6 sub mod add x_0_5 x_0_4 INT+ 4 mod idiv INT+ 6 sub INT- 8 INT- 1 0 INT- 7 INT+ 3 INT- 2", "tree": "(((-6 add (((x_0_5 add x_0_4) mod 4) sub ((6 idiv (-8 sub -10)) mod -7))) idiv 3) mod -2)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 6 + 5 - 8 + 9 + 1 + 6 - 5 - 2 + 4 + 7 + 4 + 7 + 7 + 6 + 5 + 6 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 4 + 5 + 4 + 4 + 4", "x2": "add sub idiv sub sub sign INT- 1 0 mod x_0_9 add sign n INT+ 2 INT- 5 INT+ 3 idiv x_0_5 x_0_2 INT+ 5", "tree": "(((((sign(-10) sub (x_0_9 mod (sign(n) add 2))) sub -5) idiv 3) sub (x_0_5 idiv x_0_2)) add 5)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 4 + 8 - 4 - 4 + 9 + 3 + 8 + 24 + 16 + 240 + 176 + 1440 + 2288 + 1 80 - 2288 + 0 - 2288 + 0 - 6864 + 0 - 3 4320 + 0 - 78 9360 + 0 - 1973 4000 + 0", "x2": "mul idiv x_0_2 INT- 1 sub mod sqr INT- 4 sub relu x_0_7 INT- 1 n", "tree": "((x_0_2 idiv -1) mul (((-4)**2 mod (relu(x_0_7) sub -1)) sub n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 6 + 4 - 5 + 5 - 4 + 6 - 3 + 7 - 2 + 8 - 1 + 9 + 0 + 10 + 1 + 11 + 2 + 12 + 3 + 13 + 4", "x2": "add x_0_2 abs abs sign mul mod x_0_1 add n n mul relu n sign x_0_1", "tree": "(x_0_2 add abs(abs(sign(((x_0_1 mod (n add n)) mul (relu(n) mul sign(x_0_1)))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 - 8 + 12 + 13 + 32 + 39 + 4 + 53 + 24 + 27 + 52 + 81 + 88 + 39 + 12 + 109 + 48 + 51 + 92 + 137 + 144", "x2": "abs relu add mul mod sub x_0_2 n abs INT- 8 n INT- 3", "tree": "abs(relu(((((x_0_2 sub n) mod abs(-8)) mul n) add -3)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 8 - 6 - 3 + 4 + 5 + 10 - 1764 + 31 7232 - 5710 1976 + 102 7835 5572 - 1 8501 400 2816 + 333 187 2050 7060 - 5 9943 3696 9127 440 + 1078 9806 5444 2861 5696 - 19 4216 5177 9971 3940 4928 + 3495 8973 2039 4830 3721 5904 - 62 9261 5176 7106 5766 7806 2128 + 1 1326 7073 1807 9117 1983 708 1664 - 203 8807 3172 5422 9107 213 3644 5360 + 3 6698 5317 1057 5908 1302 5316 7442 8960 - 660 5735 7079 362 4620 1420 1019 6704 7744 + 11 8903 2427 4226 4543 9830 9210 4570 5001 6512 - 2140 2583 6936 749 2064 6530 4460 8796 6319 9616 + 38 5246 5064 8493 2591 8222 9118 7121 5789 6569 4272 - 6934 4371 1672 8745 8766 5489 6283 3665 747 7002 9056", "x2": "mul sqr INT+ 6 sub x_0_7 mul x_0_1 INT+ 5", "tree": "((6)**2 mul (x_0_7 sub (x_0_1 mul 5)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 4 - 9 - 9 - 12 - 12 - 9 - 14 - 11 - 16 - 13 - 18 - 15 - 20 - 17 - 22 - 19 - 24 - 21 - 26 - 23", "x2": "sub INT- 9 mod x_0_1 relu n", "tree": "(-9 sub (x_0_1 mod relu(n)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 8 + 0 - 2 + 1 - 9 + 0 - 2 + 1 - 9 + 0 - 2 + 1 - 9 + 0 - 2 + 1 - 9 + 0 - 2 + 1", "x2": "idiv INT- 9 mul add mul abs x_0_1 INT- 6 INT+ 7 add INT+ 5 INT- 4", "tree": "(-9 idiv (((abs(x_0_1) mul -6) add 7) mul (5 add -4)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 10 + 5 - 4 + 0 + 15 + 0 + 4 + 15 + 0 + 4 + 11 + 0 + 4 + 7 + 0 + 4 + 3 + 0 + 4 + 0 + 0 + 4", "x2": "relu sub x_0_3 x_0_4", "tree": "relu((x_0_3 sub x_0_4))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 8 - 7 + 5 + 7 - 1 - 3 - 35 + 35 - 7 + 3 + 105 - 1225 - 245 - 21 + 315 - 12 8625 + 30 125 + 5145 - 6615 - 4051 6875 - 386 357 8125 + 15 4414 3125 - 3403 4175 + 2680 1912 8125 + 156 4096 3494 4335 9375", "x2": "mul x_0_5 add x_0_4 sqr mul idiv INT- 1 0 mul n INT- 4 x_0_7", "tree": "(x_0_5 mul (x_0_4 add (((-10 idiv (n mul -4)) mul x_0_7))**2))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 3 - 6 + 9 - 8 + 1 - 7 + 0 - 5 - 10 - 1 + 1 + 15 + 0 + 1 + 16 + 2 + 8 + 3 + 8 + 3 + 6 + 3 + 7 + 2 + 12 + 1 + 28 + 0", "x2": "sub relu idiv add n sign relu mul x_0_2 INT- 2 x_0_1 sign sign x_0_10", "tree": "(relu(((n add sign(relu((x_0_2 mul -2)))) idiv x_0_1)) sub sign(sign(x_0_10)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 10 - 10 + 3 + 2 - 1 + 0 - 3 - 2 - 3 + 0 - 5 + 0 - 1 - 2 - 3 - 4 - 5 + 0 - 1 - 2 - 3 - 4 - 5 + 0", "x2": "mod mul add idiv n sign abs mod idiv INT+ 3 INT- 7 n x_0_5 n INT- 6", "tree": "((((n idiv sign(abs(((3 idiv -7) mod n)))) add x_0_5) mul n) mod -6)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 3 - 10 - 4 + 1 + 2 - 3 - 4 + 5 + 6 - 7 - 8 + 9 + 10 - 11 - 12 + 13 + 14 - 15 - 16 + 17 + 18 - 19", "x2": "idiv sub n INT+ 4 sign x_0_4", "tree": "((n sub 4) idiv sign(x_0_4))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "relu mul n n", "tree": "relu((n mul n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 7 + 2 + 5 - 3 - 22 - 7 - 14 - 13 - 23 - 44 - 31 - 40 - 41 - 53 - 76 - 65 - 76 - 79 - 93 - 118 - 109 - 122 - 127", "x2": "sub sub x_0_5 n n", "tree": "((x_0_5 sub n) sub n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 9 - 3 + 1 - 8 - 1 + 2 - 1 - 9 - 1 + 23 - 1 + 15 - 1 - 13 - 1 + 26 - 1 - 346 - 1 - 196 - 1 + 2209 - 1 - 4 8439 - 1 + 6 7815", "x2": "sub sub mul abs mod x_0_6 x_0_2 mul x_0_8 INT- 1 mul n relu INT- 9 sign n", "tree": "(((abs((x_0_6 mod x_0_2)) mul (x_0_8 mul -1)) sub (n mul relu(-9))) sub sign(n))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 3 - 1 + 10 + 1 - 5 + 2 + 5 - 6 + 9 + 10 + 33 - 12 + 0 + 84 + 0 + 0 + 68 - 72 + 0 - 460 + 126 + 44 - 1518 + 48 + 50 - 1560 + 1350 + 0", "x2": "mul abs relu n mod add x_0_5 relu mod INT+ 6 n sub INT+ 4 x_0_9", "tree": "(abs(relu(n)) mul ((x_0_5 add relu((6 mod n))) mod (4 sub x_0_9)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 8 - 3 + 2 + 9 + 2 - 5 - 14 - 9 - 4 + 3 - 4 - 11 - 20 - 15 - 10 - 3 - 10 - 17 - 26 - 21 - 16 - 9", "x2": "sub sub INT+ 9 n add n x_0_3", "tree": "((9 sub n) sub (n add x_0_3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 0 + 6 - 7 + 41 + 44 + 57 + 61 + 106 + 116 + 136 + 147 + 199 + 216 + 243 + 261 + 320 + 344 + 378 + 403 + 469 + 500 + 541", "x2": "add mul sub INT+ 5 INT- 2 abs n abs add x_0_4 INT+ 2", "tree": "(((5 sub -2) mul abs(n)) add abs((x_0_4 add 2)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 5 + 0 + 5 + 0 + 3 + 0 + 1 + 0 + 7 + 0 + 5 + 0 + 3 + 0 + 1 + 0 + 7 + 0 + 5 + 0", "x2": "mod sub mul n relu sqr x_0_1 n INT+ 8", "tree": "(((n mul relu((x_0_1)**2)) sub n) mod 8)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380", "x2": "add sqr n relu idiv n abs sign sign INT- 8", "tree": "((n)**2 add relu((n idiv abs(sign(sign(-8))))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 12 + 21 + 38 + 71 + 136 + 265 + 522 + 1035 + 2060 + 4109 + 8206 + 1 6399 + 3 2784 + 6 5553 + 13 1090 + 26 2163 + 52 4308 + 104 8597 + 209 7174", "x2": "sub abs add x_0_1 x_0_1 n", "tree": "(abs((x_0_1 add x_0_1)) sub n)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 1 - 5 - 2 + 8 + 7 + 6 + 7 + 8 - 63 - 53 - 43 - 51 - 59 + 14 + 15 + 16 + 17 + 18 - 107 - 115 - 123 - 131 - 139 + 24", "x2": "mod n add sub sub mul INT- 9 x_0_5 n mod INT+ 2 sign sign mod INT+ 3 INT+ 4 n", "tree": "(n mod ((((-9 mul x_0_5) sub n) sub (2 mod sign(sign((3 mod 4))))) add n))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 - 10 + 2 + 9 + 444 + 3101 + 22 7408 + 226 647 + 2 2740 8090 + 30 892 6041 + 3929 6121 6732 + 6 6106 1346 8381 + 1078 2856 1036 1666 + 2 2310 8238 6690 7225 + 441 6657 9081 8420 592 + 1 961 3084 3384 5588 869 + 257 5794 9039 5213 28 3402 + 7518 3616 5964 8954 8375 2125 + 206 635 9276 2386 8796 536 500 + 6962 7548 2575 713 1468 9664 2057 + 219 4165 1381 4538 3349 4839 798 3118 + 8471 5838 5573 4175 4767 2813 5042 5765 + 303 3213 8887 7658 4740 6423 355 6867 4232", "x2": "add abs mul x_0_5 abs n mul x_0_2 mul mul n abs n n", "tree": "(abs((x_0_5 mul abs(n))) add (x_0_2 mul ((n mul abs(n)) mul n)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 6 - 8 + 2 - 4 - 7 - 1 + 7 + 9 - 1 + 5 + 8 + 2 - 6 - 8 + 2 - 4 - 7 - 1 + 7 + 9 - 1 + 5 + 8 + 2 - 6", "x2": "sub sqr mod relu mod INT- 9 INT+ 1 0 INT+ 6 x_0_6", "tree": "(((relu((-9 mod 10)) mod 6))**2 sub x_0_6)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 9 + 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign mul sqr INT+ 9 mul n mul sign idiv x_0_3 x_0_4 n", "tree": "sign(((9)**2 mul (n mul (sign((x_0_3 idiv x_0_4)) mul n))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 49 - 98 - 147 - 196 - 245 - 294 - 343 - 392 - 882 - 980 - 1078 - 1176 - 1274 - 1372 - 1470 - 1568 - 2499 - 2646 - 2793", "x2": "mul idiv n INT- 8 mul sqr INT- 7 n", "tree": "((n idiv -8) mul ((-7)**2 mul n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 6 - 7 + 3 - 4 + 0 - 8 - 158 - 189 - 211 - 244 - 273 - 307 - 343 - 381 - 421 - 463 - 507 - 553 - 601 - 651 - 703 - 757 - 813 - 871 - 931", "x2": "sub sub mul add n INT+ 4 sub sub INT+ 1 n INT+ 6 sign INT+ 1 relu x_0_7", "tree": "((((n add 4) mul ((1 sub n) sub 6)) sub sign(1)) sub relu(x_0_7))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 121 + 576 + 1521 + 3136 + 5625 + 9216 + 1 4161 + 2 736 + 2 9241 + 4 0 + 5 3361 + 6 9696 + 8 9401 + 11 2896 + 14 625 + 17 3056 + 21 681 + 25 4016 + 30 3601", "x2": "sqr mul add INT+ 1 0 n n", "tree": "(((10 add n) mul n))**2", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 4 + 5 + 50 + 491 + 5960 + 8 9501 + 161 1158 + 3383 4503 + 8 1202 8308 + 219 2476 4609 + 6577 4293 8626 + 21 7055 1697 5083 + 781 3986 1110 3488 + 3 474 5458 3303 6613 + 127 9930 9249 8753 8414 + 5759 6891 6244 3922 9391 + 27 6465 797 9730 8301 1628 + 1409 9719 696 6272 3359 3993 + 7 6138 4829 7617 8706 1407 6698", "x2": "sub INT- 4 mul mul add sub sub x_0_1 INT+ 2 x_0_1 n add relu x_0_1 abs n INT- 3", "tree": "(-4 sub (((((x_0_1 sub 2) sub x_0_1) add n) mul (relu(x_0_1) add abs(n))) mul -3))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 2 + 7 - 4 - 2 - 8 + 0 - 12 - 9 - 18 - 11 - 24 - 22 - 32 - 26 - 40 - 39 - 50 - 45 - 60 - 60 - 72 - 68 - 84", "x2": "add sign x_0_2 sub x_0_4 n", "tree": "(sign(x_0_2) add (x_0_4 sub n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 2 - 9 + 8 - 4 - 3 - 10 - 1 - 4 + 4 + 81 + 64 + 16 + 9 + 100 + 1 + 16 + 16 + 6561 + 4096 + 256 + 81 + 1 0 + 1 + 256 + 256 + 4304 6721 + 1677 7216", "x2": "mul x_0_8 x_0_8", "tree": "(x_0_8 mul x_0_8)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 6 - 9 + 4 - 5 - 6 + 7 - 8 - 9 + 10 - 11 - 12 + 13 - 14 - 15 + 16 - 17 - 18 + 19 - 20 - 21 + 22", "x2": "mul n sign x_0_3", "tree": "(n mul sign(x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 6 + 10 - 4 + 3 + 4 - 3 + 7 - 9 + 10 + 11 + 8 + 10 + 11 + 12 + 14 + 15 + 18 + 18 + 19 + 20 + 19 + 19 + 24 + 21 + 22 + 24 + 28", "x2": "add n mod mod n x_0_9 mod add sqr mul n sqr n sub sign n INT+ 7 INT- 9", "tree": "(n add ((n mod x_0_9) mod ((((n mul (n)**2))**2 add (sign(n) sub 7)) mod -9)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 7 + 4 + 8 + 10 - 9 - 42 + 8 + 272 + 10 - 90 - 42 + 624 + 7888 + 140 - 1350 - 672 + 83 1792 + 515 8752 + 2660 - 2 7000 - 1 4112 + 224 4008 4576 + 726 8165 6928 + 6 3840", "x2": "mul abs mod relu n x_0_2 x_0_5", "tree": "(abs((relu(n) mod x_0_2)) mul x_0_5)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 + 1 - 3 + 8 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1", "x2": "mod abs x_0_4 INT+ 2", "tree": "(abs(x_0_4) mod 2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 5 - 10 + 10 + 0 + 0 + 100 + 0 + 0 + 1000 + 0 + 0 + 1 0 + 0 + 0 + 10 0 + 0 + 0 + 100 0 + 0 + 0 + 1000 0", "x2": "relu mul x_0_3 INT+ 1 0", "tree": "relu((x_0_3 mul 10))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 + 2 + 0 - 11 - 5 - 7 - 18 - 12 - 14 - 25 - 19 - 21 - 32 - 26 - 28 - 39 - 33 - 35 - 46 - 40 - 42 - 53", "x2": "sub x_0_3 relu INT+ 7", "tree": "(x_0_3 sub relu(7))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 5 - 7 - 2 - 5 - 7 - 2 + 1 - 8 - 40 - 48 - 50 - 53 - 57 - 66 - 64 - 68 - 78 - 97 - 108 - 113 - 119 - 126 - 138 - 139 - 146 - 159 - 181", "x2": "sub mod n x_0_9 mul n INT+ 4", "tree": "((n mod x_0_9) sub (n mul 4))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 10 - 8 + 8 - 5 - 7 + 4 - 10 + 5 + 2 + 20 + 6 + 1 + 14 + 2 + 12 + 6 + 28 + 8 + 13 + 16 + 16 + 15 + 12 + 34 + 13 + 15", "x2": "relu add mod sub x_0_3 INT- 6 sqr sqr INT+ 2 x_0_7", "tree": "relu((((x_0_3 sub -6) mod ((2)**2)**2) add x_0_7))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 10 - 7 + 7 + 9 - 7 + 1 + 6 - 12 - 9 + 5 + 7 - 9 - 1 + 4 - 14 - 11 + 3 + 5 - 11 - 3 + 2 - 16 - 13 + 1 + 3", "x2": "sub sub x_0_7 INT+ 2 mul mul mod n sub n add n mod sign n relu n n n", "tree": "((x_0_7 sub 2) sub (((n mod (n sub (n add (sign(n) mod relu(n))))) mul n) mul n))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 7 - 3 + 7 - 10 + 2 + 4 + 10 + 7 + 4 + 6 - 7 + 227 + 203 + 173 + 220 + 158 + 2436 + 2200 + 1913 + 2396 + 1784 + 2 4587 + 2 2003 + 1 9167 + 2 4037 + 1 7880 + 24 5982 + 21 7874 + 18 9760 + 23 8757", "x2": "sub sub abs abs mod x_0_10 sign x_0_4 x_0_11 mul add relu x_0_5 abs n INT- 1 0", "tree": "((abs(abs((x_0_10 mod sign(x_0_4)))) sub x_0_11) sub ((relu(x_0_5) add abs(n)) mul -10))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 10 - 10 - 2 - 4 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0", "x2": "relu sqr idiv sqr sign idiv n relu n idiv x_0_4 INT- 8", "tree": "relu((((sign((n idiv relu(n))))**2 idiv (x_0_4 idiv -8)))**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 + 4 + 6 + 1 + 7 - 8 - 2 - 1 - 6 - 2 - 16 - 12 - 12 - 17 - 15 - 28 - 26 - 27 - 32 - 32 - 45 - 44 - 46 - 52", "x2": "idiv sub sub sub INT+ 6 sign INT+ 1 0 relu mul sub INT+ 2 n sub x_0_5 n INT+ 1 n", "tree": "((((6 sub sign(10)) sub relu(((2 sub n) mul (x_0_5 sub n)))) sub 1) idiv n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 - 8 + 4 - 4 + 2 + 4 + 5 + 8 + 6 + 11 + 11 + 10 + 11 + 10 + 10 + 10 + 10 + 10 + 11 + 11 + 11 + 11", "x2": "sub n abs add sub n idiv abs n mod x_0_4 relu n INT- 9", "tree": "(n sub abs(((n sub (abs(n) idiv (x_0_4 mod relu(n)))) add -9)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 - 6 + 6 - 6 - 4 + 4 + 4 - 2 - 2 - 2 - 2 - 3 - 2 - 2 - 2 - 2 - 2 - 3 - 2 - 3 - 2 - 2 - 2 - 3 - 2 - 2", "x2": "sub idiv mod add x_0_6 mod sub n sqr INT+ 5 INT+ 1 x_0_8 INT+ 6 INT+ 2", "tree": "((((x_0_6 add ((n sub (5)**2) mod 1)) mod x_0_8) idiv 6) sub 2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 1 - 2 - 3 + 8 - 8 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign add x_0_3 x_0_6", "tree": "sign((x_0_3 add x_0_6))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 6 - 10 - 7 - 1 + 235 - 488 - 459 - 83 + 2 3740 - 5 9295 - 6 7037 - 1 4563 + 467 6703 - 1337 6924 - 1728 7798 - 429 301 + 15 1991 3918 - 48 3776 9779 - 69 4578 3916 - 19 1360 834 + 7371 5395 9935 - 2 5624 9806 8946 - 4 125 5508 9305", "x2": "add sub x_0_5 sub INT- 6 mul sqr n x_0_4 x_0_4", "tree": "((x_0_5 sub (-6 sub ((n)**2 mul x_0_4))) add x_0_4)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 1 + 10 - 9 - 7 + 2 - 5 - 4 + 3 - 5 + 9 - 1 - 16 - 1 - 1 - 13 - 1 - 19 + 3 - 1 - 1 - 1 - 1 - 1 - 1 - 48 - 1", "x2": "mod sign x_0_7 sub x_0_8 abs mul idiv sub x_0_8 n INT- 7 INT+ 5", "tree": "(sign(x_0_7) mod (x_0_8 sub abs((((x_0_8 sub n) idiv -7) mul 5))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 4 - 1 - 1 + 4 + 6 + 1 + 8 + 16 + 12 + 15 + 22 + 24 + 21 + 21 + 28 + 23 + 17 + 23 + 22 + 17 + 17 + 22 + 24 + 19", "x2": "add n sub x_0_3 x_0_6", "tree": "(n add (x_0_3 sub x_0_6))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 6 - 8 - 2 - 6 - 6 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign x_0_6", "tree": "sign(x_0_6)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 4 + 5 + 6 + 0 - 4 + 9 - 10 - 6 + 0 + 3 + 0 + 6 + 6 + 1 + 0 + 8 + 2 + 1 + 0 + 0 + 6 + 3 + 0 + 4 + 2 + 3 + 0", "x2": "mod n mod sub INT+ 8 sqr x_0_6 mod INT+ 1 0 mul add INT- 5 n add n idiv sub x_0_9 INT- 4 n", "tree": "(n mod ((8 sub (x_0_6)**2) mod (10 mod ((-5 add n) mul (n add ((x_0_9 sub -4) idiv n))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 1 + 0 - 3 + 0 - 5 + 0 - 7 + 0 - 9 + 0 - 11 + 0 - 13 + 0 - 15 + 0 - 17 + 0 - 19", "x2": "mod sqr n mul INT- 2 n", "tree": "((n)**2 mod (-2 mul n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 5 + 5 + 6 + 15 + 15 + 18 + 45 + 45 + 54 + 135 + 135 + 162 + 405 + 405 + 486 + 1215 + 1215 + 1458 + 3645 + 3645 + 4374", "x2": "mul x_0_3 idiv INT+ 1 0 INT+ 3", "tree": "(x_0_3 mul (10 idiv 3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 - 10 - 7 + 6 - 2 - 4 + 5 - 3 + 18 + 100 + 220 - 12 + 65 + 224 - 15 + 448 + 1513 + 2286 - 4275 + 1680 + 3486 - 5104 + 1 810 + 2 5728 + 1 9500 - 17 404 + 16 974", "x2": "sub mul n x_0_7 mul sub x_0_8 INT+ 7 n", "tree": "((n mul x_0_7) sub ((x_0_8 sub 7) mul n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 6 + 10 + 0 + 4 - 6 - 2 + 0 - 4 - 6 - 2 + 0 - 4 - 6 - 2 + 0 - 4 - 6 - 2 + 0 - 4 - 6", "x2": "add abs x_0_2 INT- 6", "tree": "(abs(x_0_2) add -6)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 70 + 490 + 3430 + 2 4010 + 16 8070 + 117 6490 + 823 5430 + 5764 8010 + 4 353 6070 + 28 2475 2490 + 197 7326 7430 + 1384 1287 2010 + 9688 9010 4070 + 6 7822 3072 8490 + 47 4756 1509 9430 + 332 3293 569 6010 + 2326 3051 3987 2070 + 1 6284 1359 7910 4490 + 11 3988 9518 5373 1430", "x2": "sub mul abs INT- 8 x_0_1 x_0_1", "tree": "((abs(-8) mul x_0_1) sub x_0_1)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 + 9 - 1 + 80 + 0 + 20 + 245 + 320 + 0 + 405 + 125 + 320 + 0 + 0 + 845 + 980 + 0 + 0 + 125 + 980 + 0 + 0", "x2": "mul sqr mod x_0_4 n INT+ 5", "tree": "(((x_0_4 mod n))**2 mul 5)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 5 - 4 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2", "x2": "relu mod abs INT- 5 add INT+ 3 x_0_2", "tree": "relu((abs(-5) mod (3 add x_0_2)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 1 + 4 + 5 - 8 - 3 + 4 + 2 + 62 + 134 + 170 + 28 + 114 + 242 + 242 + 1294 + 2684 + 3536 + 902 + 2774 + 5744 + 6028 + 3 1562 + 6 7652 + 9 2536 + 2 5004 + 7 8374", "x2": "add mul relu add abs n x_0_7 sub n idiv relu n mul INT- 3 n x_0_7", "tree": "((relu((abs(n) add x_0_7)) mul (n sub (relu(n) idiv (-3 mul n)))) add x_0_7)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 3 + 3 - 4 + 0 + 10 + 3 + 0 + 90 + 30 + 0 + 1080 + 390 + 0 + 1 6200 + 6240 + 0 + 29 1600 + 11 8560 + 0 + 612 3600 + 260 8320 + 0 + 1 4696 6400 + 6520 8000 + 0", "x2": "mul sub n mod abs relu idiv mod x_0_7 INT+ 1 INT+ 7 mul n INT- 2 x_0_3", "tree": "((n sub (abs(relu(((x_0_7 mod 1) idiv 7))) mod (n mul -2))) mul x_0_3)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 + 6 + 7 + 10 - 8 + 9 - 1 - 8 - 1 + 1 + 2 - 4 - 4 - 5 + 3 - 4 + 3 - 4 - 3 + 0 + 0 - 1 - 2 + 0 - 2 + 0 + 1", "x2": "sub mod x_0_8 INT+ 9 INT+ 5", "tree": "((x_0_8 mod 9) sub 5)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 2 - 5 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 1 - 1 + 0 + 0 + 1 + 1 - 1 + 0 + 1 + 2 + 0 + 1", "x2": "sub mod x_0_2 INT- 3 idiv sub n INT+ 9 INT- 7", "tree": "((x_0_2 mod -3) sub ((n sub 9) idiv -7))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 7 - 10 + 10 + 25 + 270 - 175 + 2720 - 450 + 4 6100 - 1 4575 + 78 1680 - 21 8725 + 1546 1320 - 437 4000 + 3 3492 9280 - 9294 9625 + 79 7685 3360 - 21 8157 2875 + 2064 2716 6400 - 555 7274 1000 + 5 7698 3307 8240 - 1 5290 5392 3625", "x2": "sub mul x_0_2 n mul n mul x_0_4 add sign x_0_1 INT- 6", "tree": "((x_0_2 mul n) sub (n mul (x_0_4 mul (sign(x_0_1) add -6))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 0 + 11 + 7 + 18 + 14 + 25 + 21 + 32 + 28 + 39 + 35 + 46 + 42 + 53 + 49 + 60 + 56 + 67 + 63 + 74", "x2": "sub x_0_2 INT- 7", "tree": "(x_0_2 sub -7)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 3 + 7 + 6 - 1 + 6 + 88 + 78 + 88 + 87 + 80 + 87 + 169 + 159 + 169 + 168 + 161 + 168 + 250 + 240 + 250 + 249 + 242 + 249 + 331", "x2": "add x_0_6 sqr sqr INT- 3", "tree": "(x_0_6 add ((-3)**2)**2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 5 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 20 + 21 + 22 + 23", "x2": "sub abs mul add idiv INT- 1 sub add sqr relu x_0_2 x_0_2 INT+ 6 n INT+ 1 idiv x_0_2 INT- 8", "tree": "(abs((((-1 idiv (((relu(x_0_2))**2 add x_0_2) sub 6)) add n) mul 1)) sub (x_0_2 idiv -8))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 + 7 + 0 + 1 + 0 + 5 + 8 + 1 - 62 + 1 - 10 + 1 - 64 - 111 - 14 + 1 - 16 + 1 - 18 + 1 + 1 + 1 - 22 + 1 - 24 + 1", "x2": "sub abs relu mod sign INT+ 6 INT+ 4 relu mul mul n x_0_7 INT+ 1", "tree": "(abs(relu((sign(6) mod 4))) sub relu(((n mul x_0_7) mul 1)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 2 + 7 - 7 - 3 - 1 + 1 + 4 + 2 - 4 + 21 - 43 + 253 - 558 + 3543 - 8369 + 5 6689 - 14 2272 + 102 403 - 270 3167 + 2040 8061 - 5676 6508 + 4 4897 7343 - 13 562 9685 + 107 7545 6233 - 326 4074 2126 + 2801 6186 2059 - 8813 3 7403 + 7 8445 3213 7653", "x2": "add mul x_0_2 n sign add idiv sub n x_0_9 INT+ 9 INT+ 5", "tree": "((x_0_2 mul n) add sign((((n sub x_0_9) idiv 9) add 5)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 8 + 9 + 0 - 6 + 9 + 0 - 1 + 63 + 28 + 40 + 144 + 223 + 115 + 225 + 265 - 278 + 72 + 1 - 896 - 1566 - 551 - 1496 - 1809 + 3127 + 28 + 720", "x2": "idiv add sqr n mul x_0_8 INT- 9 sign add n add n INT+ 3", "tree": "(((n)**2 add (x_0_8 mul -9)) idiv sign((n add (n add 3))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 10 + 1 + 4 + 4 + 0 - 54 + 14 + 40 + 27 - 10 - 583 + 180 + 533 + 364 - 165 - 9312 + 3077 + 9612 + 6897 - 3320 - 19 5531 + 6 7716 + 22 1099 + 16 5504", "x2": "mul abs n add x_0_5 sign mod INT- 1 x_0_4", "tree": "(abs(n) mul (x_0_5 add sign((-1 mod x_0_4))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 2 - 3 + 2 - 3 + 3 - 3 + 7 - 7 + 11 - 7 + 11 + 26 + 11 + 98 - 61 + 170 + 494 - 385 + 9977 - 6268 + 3 5156 + 20 8868 - 6 655", "x2": "add sub mod INT- 1 0 abs sub sqr x_0_5 INT+ 2 x_0_1 idiv INT+ 2 relu INT+ 6", "tree": "(((-10 mod abs(((x_0_5)**2 sub 2))) sub x_0_1) add (2 idiv relu(6)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "mul n relu n", "tree": "(n mul relu(n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 1 + 8 + 3 + 1 + 8 + 3 + 1 + 8 + 3 + 1 + 8 + 3 + 1 + 8 + 3 + 1 + 8 + 3 + 1 + 8 + 3", "x2": "mod relu sub x_0_3 relu INT- 4 INT+ 9", "tree": "(relu((x_0_3 sub relu(-4))) mod 9)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 8 + 4 + 9 - 10 + 2 + 4 + 2 + 6 + 2 + 4 + 2 + 6 + 2 + 4 + 2 + 6 + 2 + 4 + 2 + 6 + 2 + 4 + 2", "x2": "mod x_0_4 relu n", "tree": "(x_0_4 mod relu(n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 3 + 9 + 5 - 9 - 3 + 13 + 9 - 5 - 9 + 6 + 11 - 3 - 7 + 8 + 13 - 1 - 5 + 10 + 15 + 1", "x2": "sub mod INT- 1 0 n x_0_2", "tree": "((-10 mod n) sub x_0_2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 4 - 10 + 11 + 1 - 4 + 18 + 9 + 5 + 28 + 20 + 17 + 41 + 34 + 32 + 57 + 51 + 50 + 76 + 71 + 71 + 98", "x2": "add x_0_3 n", "tree": "(x_0_3 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 + 7 + 5 - 5 - 5 - 1 - 2 + 14 + 2 + 5 + 16 + 17 + 14 + 16 + 1 + 14 + 12 + 2 + 2 + 6 + 5 + 21 + 9 + 12 + 23 + 24", "x2": "abs sub x_0_7 mul sign INT+ 6 n", "tree": "abs((x_0_7 sub (sign(6) mul n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 1 - 6 - 6 - 5 + 5 + 2 - 4 - 1 - 3 - 1 - 1 - 2 + 2 + 0 + 1 + 0 + 1 + 2 - 2 + 0 - 1 + 0 - 1 - 2 + 2 + 0", "x2": "idiv x_0_6 idiv n sub sqr INT- 4 relu add n add x_0_7 n", "tree": "(x_0_6 idiv (n idiv ((-4)**2 sub relu((n add (x_0_7 add n))))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 5 + 3 - 10 - 7 + 9 + 113 + 40 + 74 + 1025 + 44 + 233 + 2005 + 19 + 1050 + 1950 + 17 + 1 5987 + 618 + 21 + 37 6183 + 37 + 37 + 947 6250", "x2": "sub abs add idiv mul x_0_3 mul n n x_0_4 n INT+ 1", "tree": "(abs((((x_0_3 mul (n mul n)) idiv x_0_4) add n)) sub 1)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 8 + 10 + 5 - 1 - 1 + 6 + 15 + 18 + 13 + 6 + 5 + 12 + 21 + 24 + 19 + 12 + 11 + 18 + 27 + 30 + 25", "x2": "add add sub idiv INT- 8 n x_0_2 add sqr sign x_0_3 n x_0_1", "tree": "((((-8 idiv n) sub x_0_2) add ((sign(x_0_3))**2 add n)) add x_0_1)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 + 9 + 10 - 40 + 45 - 45 - 50 + 200 - 225 + 225 + 250 - 1000 + 1125 - 1125 - 1250 + 5000 - 5625 + 5625 + 6250 - 2 5000 + 2 8125 - 2 8125", "x2": "mul x_0_4 sub INT- 4 idiv sign n sign sqr x_0_4", "tree": "(x_0_4 mul (-4 sub (sign(n) idiv sign((x_0_4)**2))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 1 - 9 + 4 - 2 + 3 + 6 - 7 + 13 + 18 - 1 + 21 - 18 + 22 + 26 - 21 + 21 - 16 + 7 + 45 - 51 + 18 + 6 - 7 + 62 - 78 + 1", "x2": "add idiv n abs n add mod n add sub INT+ 9 add x_0_1 INT- 8 idiv n x_0_8 sub x_0_5 x_0_7", "tree": "((n idiv abs(n)) add ((n mod ((9 sub (x_0_1 add -8)) add (n idiv x_0_8))) add (x_0_5 sub x_0_7)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4", "x2": "idiv mod x_0_1 n INT- 5", "tree": "((x_0_1 mod n) idiv -5)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 3 + 0 + 1 + 5 + 5 + 2 + 3 + 7 + 7 + 4 + 5 + 9 + 9 + 6 + 7 + 11 + 11 + 8 + 9 + 13", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "mul sign INT+ 1 0 mul abs add n mul idiv sub n n mul n INT+ 1 0 INT+ 5 n", "tree": "(sign(10) mul (abs((n add (((n sub n) idiv (n mul 10)) mul 5))) mul n))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 9 - 3 + 1 + 9 + 3 + 1 + 9 + 3 + 1 + 9 + 3 + 1 + 9 + 3 + 1 + 9 + 3 + 1 + 9 + 3 + 1", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 - 7 - 1 + 19 + 21 + 16 + 35 + 38 + 34 + 54 + 58 + 55 + 76 + 81 + 79 + 101 + 107 + 106 + 129 + 136 + 136 + 160", "x2": "add add sub abs x_0_3 INT- 3 n abs abs INT+ 6", "tree": "(((abs(x_0_3) sub -3) add n) add abs(abs(6)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 - 9 - 4 - 2 - 28 - 9 + 7 - 202 - 61 + 9 - 2208 - 710 + 15 + 7 - 1 632 + 14 + 9 - 19 1359 + 16 + 16 - 401 8520 + 13", "x2": "sub mod mod abs x_0_2 INT+ 1 0 add mul n x_0_3 INT+ 6 INT- 7", "tree": "(((abs(x_0_2) mod 10) mod ((n mul x_0_3) add 6)) sub -7)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 10 - 6 - 1 - 2 - 10 - 6 - 2 - 3 - 9 - 7 - 3 - 4 - 9 - 7 - 4 - 5 - 9 - 8 - 5 - 5 - 9", "x2": "idiv mul INT+ 2 relu n x_0_2", "tree": "((2 mul relu(n)) idiv x_0_2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 + 3 + 7 + 3 - 4 + 6 - 9 - 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0", "x2": "mod sign n add idiv add n mod idiv relu idiv n x_0_8 INT- 9 n n mod n INT+ 9", "tree": "(sign(n) mod (((n add ((relu((n idiv x_0_8)) idiv -9) mod n)) idiv n) add (n mod 9)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 8 - 5 + 7 + 15 + 2 + 14 + 22 + 9 + 21 + 29 + 16 + 28 + 36 + 23 + 35 + 43 + 30 + 42 + 50 + 37 + 49", "x2": "sub add INT+ 4 x_0_3 INT- 3", "tree": "((4 add x_0_3) sub -3)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 1 - 4 + 3 + 6 + 9 + 1 - 5 + 1 + 1 + 0 + 0 + 0 + 6 + 3 + 0 + 1 + 0 + 3 + 4 + 5 + 2 + 9 + 0 + 9 + 2 + 7", "x2": "relu mod n mod add INT+ 8 mul x_0_8 mod INT+ 8 mod add n idiv INT- 9 INT+ 7 n add INT- 5 n", "tree": "relu((n mod ((8 add (x_0_8 mul (8 mod ((n add (-9 idiv 7)) mod n)))) mod (-5 add n))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 4 - 8 - 9 - 4 + 1 - 2 - 2 + 4 + 10 + 8 + 9 + 16 + 23 + 22 + 24 + 32 + 40 + 40 + 43 + 52 + 61 + 62 + 66", "x2": "add sub n relu mul INT- 4 abs INT- 4 x_0_4", "tree": "((n sub relu((-4 mul abs(-4)))) add x_0_4)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign sub INT+ 8 abs mul abs relu sub n INT+ 5 sign sign mod INT+ 9 INT- 1 0", "tree": "sign((8 sub abs((abs(relu((n sub 5))) mul sign(sign((9 mod -10)))))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 80 + 62 + 46 + 32 + 20 + 10 + 2 - 4 - 8 - 10 + 70 + 52 + 36 + 22", "x2": "sub relu sqr mod relu n INT- 1 0 n", "tree": "(relu(((relu(n) mod -10))**2) sub n)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 5 + 2 - 8 + 2 - 34 - 33 - 2 - 98 - 37 - 1158 - 1187 - 41 - 1 762 - 2556 - 134 1005 - 141 9731 - 4237 - 1 1716 1649", "x2": "sub x_0_3 abs sqr x_0_5", "tree": "(x_0_3 sub abs((x_0_5)**2))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182", "x2": "sub n sqr relu n", "tree": "(n sub (relu(n))**2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 3 - 8 - 2 - 1 + 31 + 10 + 9 + 53 - 1 - 1 + 139 + 14 + 15 + 1024 - 1 - 1", "x2": "idiv sub sqr sub n x_0_3 INT+ 7 n", "tree": "((((n sub x_0_3))**2 sub 7) idiv n)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 4 + 10 + 12 + 0 + 0 + 14 + 16 + 4 + 4 + 18 + 20 + 8 + 8 + 22 + 24", "x2": "sub sub n mul sign add INT- 9 add INT- 2 INT- 1 0 n x_0_2", "tree": "((n sub (sign((-9 add (-2 add -10))) mul n)) sub x_0_2)", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 - 3 - 10 + 3 + 3 + 124 + 213 + 800 + 3 + 3 + 124 + 213 + 800 + 3 + 3 + 124 + 213 + 800 + 3", "x2": "add sub x_0_5 mod n mul mul INT+ 9 x_0_5 add sqr sign INT+ 4 n relu n", "tree": "((x_0_5 sub (n mod ((9 mul x_0_5) mul ((sign(4))**2 add n)))) add relu(n))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 8 - 9 - 2 + 3 - 5 - 6 - 1 + 4 + 2 + 100 + 121 + 144 + 256 + 196 + 225 + 256 + 441 + 400 + 1 4161 + 1 9881 + 2 7225 + 7 7284 + 4 7961", "x2": "sqr add relu x_0_9 n", "tree": "((relu(x_0_9) add n))**2", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 6 - 2 - 5 - 4 - 2 - 9 - 3 - 10 - 9 - 5 - 187 - 180 - 91 - 56 - 75 - 112 + 0 - 108 + 19 + 0 - 84 + 3916 + 3933 + 1968", "x2": "sub sub n mul add n idiv n mul n sign INT- 1 add x_0_11 INT+ 9 n", "tree": "((n sub ((n add (n idiv (n mul sign(-1)))) mul (x_0_11 add 9))) sub n)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 5 + 0 - 9 - 3 + 5 + 0 - 9 - 3 + 5 + 0 - 9 - 3 + 5 + 0 - 9 - 3 + 5 + 0", "x2": "add x_0_4 relu mod sub INT- 4 INT- 9 sub add n sign x_0_5 n", "tree": "(x_0_4 add relu(((-4 sub -9) mod ((n add sign(x_0_5)) sub n))))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 4 + 0 - 7 + 9 - 1 + 1394 + 2142 + 2537 + 4048 + 4545 + 6 9782 + 10 7536 + 12 9984 + 20 8054 + 23 8600 + 357 2040 + 560 7004 + 690 6430 + 1125 4518", "x2": "mul add n relu mul INT+ 7 INT+ 5 add add x_0_5 INT+ 2 abs mul n n", "tree": "((n add relu((7 mul 5))) mul ((x_0_5 add 2) add abs((n mul n))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 + 2 - 8 + 2 - 8 - 8 + 0 + 0 + 0 - 11 - 11 - 4 - 5 - 7 - 19 - 20 - 14 - 16 - 19", "x2": "mod mod add n add idiv sign x_0_4 n add mod add INT- 4 INT+ 6 INT+ 8 INT+ 6 n sub x_0_5 n", "tree": "(((n add ((sign(x_0_4) idiv n) add (((-4 add 6) mod 8) add 6))) mod n) mod (x_0_5 sub n))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 7 - 6 - 7 + 117 + 117 + 990 + 2106 + 9963 + 2 7864 + 10 8621 + 34 443 + 122 8365 + 404 1576 + 1411 9272 + 4742 9469 + 1 6344 7632 + 5 5393 8669", "x2": "abs mul add x_0_3 x_0_2 INT+ 9", "tree": "abs(((x_0_3 add x_0_2) mul 9))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182", "x2": "sub sqr n n", "tree": "((n)**2 sub n)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 2 + 0 + 4 + 6 - 10 + 6 + 3 + 4 + 19 + 4 + 8 + 8 - 6 + 10 + 7 + 8 + 23 + 8 + 12", "x2": "sub abs sub sign mod n abs mul INT- 1 0 mul n x_0_6 n x_0_4", "tree": "(abs((sign((n mod abs((-10 mul (n mul x_0_6))))) sub n)) sub x_0_4)", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 100 + 169 + 324 + 625 + 1156 + 2025 + 3364 + 5329 + 8100 + 1 1881 + 1 6900 + 2 3409 + 3 1684 + 4 2025", "x2": "add sqr add INT+ 9 mul n n sub n n", "tree": "(((9 add (n mul n)))**2 add (n sub n))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 + 9 + 7 + 12 + 12 + 18 + 19 + 26 + 28 + 36 + 39 + 48 + 52 + 62 + 67 + 78 + 84", "x2": "add idiv n x_0_3 add n x_0_2", "tree": "((n idiv x_0_3) add (n add x_0_2))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2", "x2": "mod n INT+ 6", "tree": "(n mod 6)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "mul abs abs n relu n", "tree": "(abs(abs(n)) mul relu(n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "sub sub n relu n mul sub add INT- 9 INT+ 9 n n", "tree": "((n sub relu(n)) sub (((-9 add 9) sub n) mul n))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 9 + 4 + 4 + 8 + 12 + 20 + 32 + 52 + 84 + 136 + 220 + 356 + 576 + 932 + 1508 + 2440", "x2": "add x_0_1 relu x_0_2", "tree": "(x_0_1 add relu(x_0_2))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 3 - 1 - 8 - 9 - 10 + 4 + 4 + 2 + 3 + 4 - 2 - 7 - 2 + 0 - 12 - 13 + 0 + 0 - 1 - 3 - 2 - 4 + 0 - 2", "x2": "mod n add add INT- 9 idiv mod INT- 9 INT- 5 add idiv x_0_9 mul INT+ 3 n INT- 1 x_0_11", "tree": "(n mod ((-9 add ((-9 mod -5) idiv ((x_0_9 idiv (3 mul n)) add -1))) add x_0_11))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 1 + 7 - 9 - 1 + 1 - 1 - 17 - 27 - 1 - 1 - 1 - 97 - 243 - 1 - 1 - 1 - 3137 - 1 9683 - 1", "x2": "idiv sqr x_0_5 INT- 3", "tree": "((x_0_5)**2 idiv -3)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 6 + 0 + 1 + 4 + 4 + 4 + 3 + 4 + 6 + 6 + 5 + 6 + 10 + 8 + 5", "x2": "mod sub sign mod n INT- 7 x_0_2 n", "tree": "((sign((n mod -7)) sub x_0_2) mod n)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 4 + 1 + 9 - 5 + 10 - 9 + 6 + 5 + 4 - 1 + 6 + 4 + 2 + 3 - 2 + 3 + 4 - 2", "x2": "sub INT+ 5 sub mod add INT- 2 mul INT+ 2 sqr n x_0_4 mod n mul INT- 2 x_0_1", "tree": "(5 sub (((-2 add (2 mul (n)**2)) mod x_0_4) sub (n mod (-2 mul x_0_1))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 3 + 8 + 10 - 6 + 3 - 9 - 4 - 7 + 4 + 19 + 4 + 9 - 4 - 19 - 4 - 5 + 23 + 22 + 12 + 5 - 23 - 22", "x2": "sub relu add x_0_7 mod idiv x_0_9 mul n INT- 1 0 INT- 3 x_0_4", "tree": "(relu((x_0_7 add ((x_0_9 idiv (n mul -10)) mod -3))) sub x_0_4)", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 3 + 0 + 7 + 16 + 27 + 40 + 55 + 72 + 91 + 112 + 135 + 160 + 187", "x2": "mod INT- 9 sqr n", "tree": "(-9 mod (n)**2)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 9 - 8 + 10 + 3 - 3 - 9 - 20 + 18 - 16 + 20 + 6 - 6 - 18 - 40 + 36 - 32 + 40 + 12 - 12 - 36", "x2": "mul INT+ 2 x_0_7", "tree": "(2 mul x_0_7)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 9 - 90 - 1350 - 2 7000 - 67 5000 - 2025 0 - 7 875 0 - 283 5000 0 - 1 2757 5000 0 - 63 7875 0 0 - 3508 3125 0 0 - 21 498 7500 0 0 - 1368 2418 7500 0 0 - 9 5776 9312 5000 0 0 - 718 3269 8437 5000 0 0", "x2": "mul x_0_1 idiv mul INT+ 5 n sign add mod x_0_1 sub mod add x_0_1 n idiv n x_0_1 INT+ 2 INT+ 9", "tree": "(x_0_1 mul ((5 mul n) idiv sign(((x_0_1 mod (((x_0_1 add n) mod (n idiv x_0_1)) sub 2)) add 9))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 2 + 4 + 7 + 3 + 5 - 4 + 0 - 1 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 - 1", "x2": "idiv relu sign x_0_6 INT- 5", "tree": "(relu(sign(x_0_6)) idiv -5)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 3 - 8 - 4 - 2 - 9 - 9 + 3 + 3 - 6 - 5 - 4 + 8 - 36 + 5 + 14 - 48 - 47 + 2 + 3 - 5 + 5 + 13 - 58 - 1201 - 11", "x2": "sub n sqr add x_0_11 INT+ 1", "tree": "(n sub ((x_0_11 add 1))**2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 7 - 10 - 8 - 6 + 6 - 1 - 1 - 1 - 2 + 1 - 11 - 12 - 13 - 7 + 15 - 2 - 2 - 2 - 3", "x2": "idiv mul sqr sign sub x_0_1 x_0_3 relu mul sign abs n n x_0_5", "tree": "(((sign((x_0_1 sub x_0_3)))**2 mul relu((sign(abs(n)) mul n))) idiv x_0_5)", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 10 - 8 - 3 - 4 + 3 - 8 - 8 - 8 + 0 - 24 - 72 - 72 - 24 - 56 - 64 - 72 + 0 - 32 - 64 - 16 + 0", "x2": "mul mod mod x_0_8 n INT+ 1 0 INT- 8", "tree": "(((x_0_8 mod n) mod 10) mul -8)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 0 + 1 + 4 + 9 + 16 + 0 + 1 + 4 + 9 + 16", "x2": "sqr mod n INT+ 5", "tree": "((n mod 5))**2", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 2 + 9 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7 + 8 + 8", "x2": "relu add sqr sign idiv n INT+ 4 mod x_0_3 n", "tree": "relu(((sign((n idiv 4)))**2 add (x_0_3 mod n)))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 10 - 7 - 15 - 6 - 29 - 17 - 35 - 16 - 106 - 95 - 193 - 190 - 296 - 301 - 415 - 428", "x2": "sub x_0_2 add mul mul mod INT+ 8 n abs idiv sub sub add INT- 1 INT+ 4 x_0_1 INT+ 4 x_0_1 n INT- 1", "tree": "(x_0_2 sub ((((8 mod n) mul abs(((((-1 add 4) sub x_0_1) sub 4) idiv x_0_1))) mul n) add -1))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 1 - 6 + 4 + 1 + 1 - 6 + 4 + 1 + 1 - 6 + 4 + 1 + 1 - 6 + 4 + 1 + 1", "x2": "mul sign n mul x_0_4 idiv n n", "tree": "(sign(n) mul (x_0_4 mul (n idiv n)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 7 - 2 + 4 + 4 + 10 + 0 + 10 - 5 + 72 - 343 - 128 + 324 + 400 + 1210 + 0 + 1690 - 980 + 1 6200 - 8 7808 - 3 6992 + 10 4976 + 14 4400", "x2": "mul x_0_9 sqr add n INT- 4", "tree": "(x_0_9 mul ((n add -4))**2)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 4 + 6 - 13 + 3 - 19 + 0 - 22 - 3 - 25 - 6 - 28 - 9 - 31 - 12 - 34", "x2": "add mod n n add INT- 3 sub x_0_2 relu x_0_1", "tree": "((n mod n) add (-3 add (x_0_2 sub relu(x_0_1))))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 6 - 7 - 3 - 6 + 2 + 4 + 6 + 3 + 4 + 4 + 6 + 4 + 10 + 7 + 14 + 13 + 20 + 18", "x2": "add relu mod add x_0_4 sign n x_0_2 mod INT- 8 n", "tree": "(relu(((x_0_4 add sign(n)) mod x_0_2)) add (-8 mod n))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 - 5 - 2 - 3 + 12 + 36 + 18 + 24 + 78 + 222 + 114 + 150 + 474 + 1338 + 690 + 906 + 2850 + 8034", "x2": "sub abs mul x_0_4 INT+ 6 INT- 6", "tree": "(abs((x_0_4 mul 6)) sub -6)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 3 - 5 - 3 + 5 + 3 - 5 - 3 + 5 + 3 - 5 - 3 + 5 + 3 - 5 - 3", "x2": "sub mul mod x_0_1 sign abs sqr abs INT- 4 INT+ 9 x_0_2", "tree": "(((x_0_1 mod sign(abs((abs(-4))**2))) mul 9) sub x_0_2)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 6 - 10 - 8 + 7 + 8 - 9 - 52 - 18 + 0 - 192 - 147 - 756 - 1625 - 512 - 135 - 832 - 164 + 0 - 10 5216 - 2 6068", "x2": "mul sqr mod n INT- 9 sub x_0_6 n", "tree": "(((n mod -9))**2 mul (x_0_6 sub n))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 10 + 1 - 2 - 3 + 6 + 8 + 6 - 5 + 2 - 3 - 5 + 13 + 13 + 15 + 16 + 16 + 17 + 18 + 20 + 20 + 22 + 23 + 23 + 24 + 25", "x2": "abs sub idiv x_0_11 n n", "tree": "abs(((x_0_11 idiv n) sub n))", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 4 - 9 + 3 + 1 - 1 - 8 + 3 - 4 + 5 + 3 - 4 + 5 + 3 - 4 + 5 + 3 - 4 + 5 + 3 - 4 + 5 + 3 - 4", "x2": "add abs idiv relu INT- 9 x_0_9 x_0_3", "tree": "(abs((relu(-9) idiv x_0_9)) add x_0_3)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 0 - 2 + 2 + 2 - 4 + 7 + 1 + 4 - 2 - 10 + 10 + 0 + 1 + 4 + 4 + 4 + 17 + 50 + 1 + 16 + 4 + 100 + 100 + 0 + 1", "x2": "sub abs add sqr x_0_12 idiv relu sign x_0_10 relu n idiv x_0_8 n", "tree": "(abs(((x_0_12)**2 add (relu(sign(x_0_10)) idiv relu(n)))) sub (x_0_8 idiv n))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 1 - 2 - 4 - 8 - 12 - 16 - 22 - 29 - 36 - 45 - 54 - 64 - 76 - 88", "x2": "idiv sqr mul INT- 2 n INT- 9", "tree": "(((-2 mul n))**2 idiv -9)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 7 - 66 - 60 - 156 - 138 - 222 - 198 - 246 - 222 - 246 - 228 - 234 - 228 - 228 - 228", "x2": "mul add sub idiv x_0_2 n n INT- 7 mul INT+ 3 INT+ 2", "tree": "((((x_0_2 idiv n) sub n) add -7) mul (3 mul 2))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 2 + 5 - 8 + 9 - 10 + 6 + 7 + 6 - 598 - 2002 - 772 - 6916 - 1243 - 4804 - 6330 - 6555 - 136 - 52 - 165 - 24 - 154 - 49", "x2": "idiv sub INT- 1 0 sqr sqr n sub n x_0_8", "tree": "((-10 sub ((n)**2)**2) idiv (n sub x_0_8))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 3 - 1 + 0 + 0 + 1 + 2 - 12 - 7 - 1 - 3 + 0 + 0 + 2 + 0 - 3 - 3 - 1", "x2": "idiv sub sub INT- 4 abs x_0_4 n add add n mul add add n add INT- 9 n x_0_3 x_0_4 INT- 7", "tree": "(((-4 sub abs(x_0_4)) sub n) idiv ((n add (((n add (-9 add n)) add x_0_3) mul x_0_4)) add -7))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 2 - 9 - 17 - 26 - 36 - 47 - 59 - 72 - 86 - 101 - 117 - 134 - 152 - 171 - 191", "x2": "sub x_0_1 add n idiv INT+ 5 sign INT+ 7", "tree": "(x_0_1 sub (n add (5 idiv sign(7))))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 4 + 8 + 10 - 4 + 10 - 2 + 70 + 66 + 66 + 70 + 73 + 72 + 66 + 70 + 65 + 64 + 62 + 56 + 64 + 64", "x2": "mod INT- 7 sub add sqr INT- 9 abs mod x_0_6 n n", "tree": "(-7 mod (((-9)**2 add abs((x_0_6 mod n))) sub n))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 2 - 7 - 7 - 5 - 4 - 3 - 2 - 2 - 2 - 1 - 1 - 10 - 10 + 5 + 6", "x2": "sub n sub idiv mod n relu sqr add n n sqr x_0_2 INT- 1 0", "tree": "(n sub (((n mod relu(((n add n))**2)) idiv (x_0_2)**2) sub -10))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 2 - 1 - 1 + 9 - 6 - 2 - 10 + 7 - 4 + 14 - 16 - 1 - 12 + 126 - 24 - 14 - 120 + 35 + 0 + 196 + 0 - 12 + 0", "x2": "mul x_0_10 mod x_0_2 n", "tree": "(x_0_10 mul (x_0_2 mod n))", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 3 + 2 - 10 + 0 - 6 - 9 + 1 + 8 + 4 - 9 + 7071 + 1538 + 803 + 2 2521 + 23 + 1 429 + 2 6271 + 390 + 2 5631 + 7089 + 3 9239 + 264 4949 2726 + 13 6249 5783 + 4 300 5666", "x2": "add idiv n sign INT+ 6 add abs mod INT- 9 n sqr mul n x_0_11", "tree": "((n idiv sign(6)) add (abs((-9 mod n)) add ((n mul x_0_11))**2))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 9 + 5 + 7 - 5 + 10 - 7 + 22 + 6 + 27 + 15 + 33 + 19 + 45 + 29 + 54 + 33 + 59 + 34 + 63 + 38", "x2": "add sub abs mod add sub x_0_5 sqr n x_0_6 INT+ 1 0 INT- 7 sub x_0_2 idiv n mod INT+ 3 INT+ 9", "tree": "((abs((((x_0_5 sub (n)**2) add x_0_6) mod 10)) sub -7) add (x_0_2 sub (n idiv (3 mod 9))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 1 + 9 - 2 + 7 + 0 + 8 + 10 + 10 + 4 - 5 - 3 + 21 - 6 + 143 - 24 + 127 + 8 + 160 + 208 + 218 + 96 - 107 - 64 + 533 - 148", "x2": "add mul n x_0_12 INT+ 8", "tree": "((n mul x_0_12) add 8)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "+ 7 + 9 + 12 + 16 + 21 + 27 + 34 + 42 + 51 + 61 + 72 + 84 + 97 + 111 + 126", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 - 8 - 5 + 4 - 10 + 8 - 4 + 0 + 6 + 7 + 11 + 48 + 350 + 2 + 3 + 38 + 70 - 800 - 7215 - 12 9734 - 2 - 30 + 3200", "x2": "idiv mul sub INT+ 1 sqr idiv add x_0_9 mul x_0_7 INT- 8 INT+ 1 0 INT- 1 0 sub abs abs INT+ 5 x_0_9", "tree": "(((1 sub (((x_0_9 add (x_0_7 mul -8)) idiv 10))**2) mul -10) idiv (abs(abs(5)) sub x_0_9))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 4 - 9 - 10 + 10 + 2 + 9 + 10 + 2 - 9 - 10 + 2 - 9 - 10 + 2 - 9 + 10 - 2 - 9 - 10 + 2", "x2": "idiv x_0_3 sign mul sign x_0_7 INT+ 9", "tree": "(x_0_3 idiv sign((sign(x_0_7) mul 9)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 10 + 6 + 4 + 1 + 100 + 36 + 16 + 1 + 1 0 + 1296 + 256 + 1 + 1 0 0 + 167 9616 + 6 5536 + 1 + 1 0 0 0 0", "x2": "sqr x_0_4", "tree": "(x_0_4)**2", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 4 + 5 + 10 - 4 - 5 - 9 - 1 + 9 + 841 + 1089 + 625 + 225 + 66 7489 + 113 4225 + 36 1201 + 4 401 + 4455 952 6225 + 1 2864 1190 8401 + 1304 4882 5329 + 16 3030 2129 + 1984 7873 7935 8395 549 2401 + 1 6548 5559 8014 1550 4277 4129", "x2": "sqr sub sqr INT+ 5 add x_0_4 sign add n add x_0_9 INT+ 1", "tree": "(((5)**2 sub (x_0_4 add sign((n add (x_0_9 add 1))))))**2", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 7 + 8 - 3 + 4 + 6 - 9 + 10 + 7 + 5 + 994 + 1 + 1725 + 2193 + 4 + 3370 + 4092 + 4910 + 5445 + 6858 + 7396 + 8530 + 1 646", "x2": "idiv mod mul INT- 7 x_0_8 sqr sqr n n", "tree": "(((-7 mul x_0_8) mod ((n)**2)**2) idiv n)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 5 + 8 + 3 + 10 + 1 + 10 - 4 - 10 - 1 + 10 + 0 + 14 + 2 + 11 + 0 + 0 + 1 + 11 + 0 + 0 + 3 + 12 + 1", "x2": "relu add idiv INT- 8 mod mod x_0_9 add n sub x_0_4 sub n INT+ 5 INT- 7 x_0_8", "tree": "relu(((-8 idiv ((x_0_9 mod (n add (x_0_4 sub (n sub 5)))) mod -7)) add x_0_8))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr add INT+ 6 n", "tree": "((6 add n))**2", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 + 10 - 5 + 5 + 8 + 9 + 4 + 3 + 3 + 4 + 6 + 7 + 8 + 9 + 13 + 15 + 18 + 20 + 22 + 24", "x2": "add add n INT- 5 mod x_0_6 add x_0_1 INT- 5", "tree": "((n add -5) add (x_0_6 mod (x_0_1 add -5)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 5 - 3 - 9 + 7 - 3 + 2 + 2 + 2 + 3 + 0 + 2 + 1 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3", "x2": "idiv abs add sub add idiv n n n x_0_6 idiv INT+ 7 n INT+ 6", "tree": "(abs(((((n idiv n) add n) sub x_0_6) add (7 idiv n))) idiv 6)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 6 - 1 + 6 + 10 + 13 + 24 + 23 + 19 + 36 + 20 + 31 + 49 + 51 + 55 + 58 + 32", "x2": "add add mod sub sqr relu n mul INT- 8 x_0_2 x_0_1 n n", "tree": "(((((relu(n))**2 sub (-8 mul x_0_2)) mod x_0_1) add n) add n)", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 6 + 2 - 5 - 9 - 5 - 3 + 2 + 0 - 7 + 7 - 210 - 22 - 161 - 312 - 150 - 104 - 27 - 28 - 203 - 30 - 6 7611 - 992 - 3 9072 - 14 1474", "x2": "mul idiv sqr add INT+ 6 add INT- 1 0 x_0_10 sub n add n n sub n INT- 1 0", "tree": "((((6 add (-10 add x_0_10)))**2 idiv (n sub (n add n))) mul (n sub -10))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 8 - 4 - 5 + 6 + 3 - 27 + 27 + 27 + 27 + 27 - 27 + 27 + 27 + 27 + 27 - 27 + 27 + 27 + 27", "x2": "idiv mul INT- 9 INT- 3 sign add n x_0_5", "tree": "((-9 mul -3) idiv sign((n add x_0_5)))", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 1 - 6 + 0 - 5 - 4 - 49 + 212 - 4 + 176 + 68 - 4 - 1 1452 + 428 - 1 9012 - 2452 + 248 + 123 6812 - 6 9340", "x2": "sub mul x_0_5 mul INT- 9 mod mul sub INT+ 1 0 x_0_4 INT+ 6 n mod sign INT- 6 INT+ 5", "tree": "((x_0_5 mul (-9 mul (((10 sub x_0_4) mul 6) mod n))) sub (sign(-6) mod 5))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 7 + 7 - 10 - 5 + 10 + 9 - 1 + 21 + 37 + 28 + 42 + 82 + 91 + 98 + 154 + 205 + 223 + 288", "x2": "add add add n x_0_4 x_0_3 n", "tree": "(((n add x_0_4) add x_0_3) add n)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 6 + 8 - 10 + 10 - 5 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign mul x_0_3 mul sign sub idiv x_0_1 relu INT- 4 idiv n sqr x_0_5 INT- 6", "tree": "sign((x_0_3 mul (sign(((x_0_1 idiv relu(-4)) sub (n idiv (x_0_5)**2))) mul -6)))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 7 - 6 + 2 - 5 - 10 - 6 - 2 + 1 + 15 + 16 + 6 + 12 + 19 + 20 + 17 + 16 + 17 + 6 + 19 + 20 + 21", "x2": "sub sub add n mod x_0_8 x_0_7 x_0_8 sign INT+ 4", "tree": "(((n add (x_0_8 mod x_0_7)) sub x_0_8) sub sign(4))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 9 + 2 - 1 + 7 + 5 + 2 - 8 + 0 - 1 - 1 - 1 + 0 - 7 + 2 + 2 + 17 + 18 + 0 - 10 - 21 - 1", "x2": "idiv relu n sub add mul INT- 9 x_0_5 x_0_3 sign sub relu n x_0_8", "tree": "(relu(n) idiv (((-9 mul x_0_5) add x_0_3) sub sign((relu(n) sub x_0_8))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 0", "x2": "relu sqr mod n abs INT+ 7", "tree": "relu(((n mod abs(7)))**2)", "n_input_points": "14", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 + 1 + 9 - 2 - 9 - 10 - 10 - 2 + 61 - 3 - 93 + 21 + 50 + 136 + 235 + 2 - 1097 - 93 + 1520 - 435 + 33 - 2914", "x2": "sub INT+ 7 add abs abs abs n add x_0_4 mul x_0_8 n", "tree": "(7 sub (abs(abs(abs(n))) add (x_0_4 add (x_0_8 mul n))))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0", "x2": "mod n INT+ 7", "tree": "(n mod 7)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 3 - 10 - 10 + 10 - 6 + 10 - 6 + 3 - 4 - 10 + 10 - 2 + 10 - 2 + 3 - 2 - 10 + 10 - 1 + 10 - 1", "x2": "idiv x_0_7 abs sub INT- 2 sign mul sub sub x_0_4 n n sub sub n x_0_8 n", "tree": "(x_0_7 idiv abs((-2 sub sign((((x_0_4 sub n) sub n) mul ((n sub x_0_8) sub n))))))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 3 + 3 - 7 + 0 - 4 + 5 - 6 + 1 + 3 + 3 + 0 + 8 + 5 + 8 + 1 + 3 + 3 + 0 + 8 + 5 + 8 + 1", "x2": "add mod abs add sub x_0_8 x_0_8 n relu n mod x_0_7 n", "tree": "((abs(((x_0_8 sub x_0_8) add n)) mod relu(n)) add (x_0_7 mod n))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 9 - 4 - 4 - 1 + 0 + 6 + 10 + 6 - 4 + 12 - 18 + 18 - 17 + 22 - 15 + 29 - 10 + 26 - 19 + 43 - 48 + 80 - 82", "x2": "sub INT- 9 sub add sub mod add idiv x_0_5 x_0_3 n INT- 1 x_0_10 x_0_1 n", "tree": "(-9 sub ((((((x_0_5 idiv x_0_3) add n) mod -1) sub x_0_10) add x_0_1) sub n))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 8 - 3 + 3 + 8 - 8 + 2 + 10 - 7 + 0 + 90 + 33 + 0 + 0 + 84 + 0 + 0 + 153 + 0 + 1 792 - 240 + 0 + 0 - 1035", "x2": "mul mul sub x_0_2 mod INT- 8 abs n idiv x_0_9 n n", "tree": "(((x_0_2 sub (-8 mod abs(n))) mul (x_0_9 idiv n)) mul n)", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 10 - 4 - 9 - 9 + 6 + 6 + 8 + 9 + 10 + 1 + 0 + 13 + 0 + 15 + 16 + 17 + 18 + 2 + 20 + 6", "x2": "mod n abs abs sub add sub n mul x_0_7 INT- 5 mul mul x_0_3 INT- 1 x_0_7 sqr INT- 6", "tree": "(n mod abs(abs((((n sub (x_0_7 mul -5)) add ((x_0_3 mul -1) mul x_0_7)) sub (-6)**2))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 3 + 8 + 4 - 7 + 8 - 3 - 3 - 4 - 2 - 1 - 4 - 3 - 3 - 4 - 2 - 1 - 4 - 3 - 3 - 4", "x2": "add mod mul x_0_2 n sign sub sign x_0_5 relu sub INT- 7 x_0_6 mod x_0_6 INT- 6", "tree": "(((x_0_2 mul n) mod sign((sign(x_0_5) sub relu((-7 sub x_0_6))))) add (x_0_6 mod -6))", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 1 - 4 + 5 + 0 + 6 - 6 - 9 + 7 + 7 + 12 + 13 + 13 + 10 + 4 + 3 + 12 + 13 + 18 + 18 + 13 + 14 + 19", "x2": "add sub idiv x_0_9 n mod add INT- 8 x_0_6 x_0_4 n", "tree": "(((x_0_9 idiv n) sub ((-8 add x_0_6) mod x_0_4)) add n)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 5 + 7 + 5 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "sqr idiv sign sub mod add x_0_4 x_0_4 x_0_4 mod INT+ 8 idiv x_0_3 idiv INT- 3 x_0_3 n", "tree": "((sign((((x_0_4 add x_0_4) mod x_0_4) sub (8 mod (x_0_3 idiv (-3 idiv x_0_3))))) idiv n))**2", "n_input_points": "14", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 4 - 4 + 2 - 5 + 4 - 38 - 78 - 106 - 137 - 302 + 2788 + 8052 + 1 4275 + 4 1080 - 84 2306 + 2244 8592 + 1 1494 1875 + 5 8641 6514 - 346 193 1012", "x2": "sub mul x_0_4 x_0_5 mul n add n idiv n abs relu sub sub INT+ 7 INT+ 4 sign n", "tree": "((x_0_4 mul x_0_5) sub (n mul (n add (n idiv abs(relu(((7 sub 4) sub sign(n))))))))", "n_input_points": "14", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 3 + 8 + 5 + 2 + 5 + 5 + 4 - 4 - 4 - 4 + 0 - 4 - 8 - 6 - 7 - 9 - 18 - 19 - 20 - 17 - 22 - 27", "x2": "sub n sub abs sub x_0_9 add n n INT+ 4", "tree": "(n sub (abs((x_0_9 sub (n add n))) sub 4))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 6 - 8 + 4 + 6 + 8 - 4 - 6 - 8 + 4 + 6 + 8 - 4 - 6 - 8 + 4 + 6 + 8", "x2": "sub sub n relu mod n sqr INT+ 7 x_0_3", "tree": "((n sub relu((n mod (7)**2))) sub x_0_3)", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 7 - 2 - 10 + 5 - 8 + 8 - 5 - 6 + 7 - 2 + 5 + 4 + 9 + 11 + 4 + 0 + 8 + 0 + 11 + 4 + 4 + 16 + 12 + 1", "x2": "mod sub sqr x_0_10 n n", "tree": "(((x_0_10)**2 sub n) mod n)", "n_input_points": "14", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 1 - 2 + 2 - 1 + 2 - 2 + 3 - 2 + 4 - 3 + 6 - 4 + 9 - 6 + 14", "x2": "add mul sign n sub INT+ 4 x_0_1 add abs x_0_2 idiv INT- 5 abs INT- 1", "tree": "((sign(n) mul (4 sub x_0_1)) add (abs(x_0_2) add (-5 idiv abs(-1))))", "n_input_points": "14", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 2 + 10 + 5 - 1 - 5 + 5 - 4 - 20 + 5 - 1 - 2 + 5 - 16 - 200 + 5 - 1 - 1 + 5 - 256 - 4 0", "x2": "idiv sqr x_0_6 x_0_3", "tree": "((x_0_6)**2 idiv x_0_3)", "n_input_points": "14", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 8 + 3 - 7 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign mul mul x_0_4 idiv relu sign x_0_2 abs x_0_2 n", "tree": "sign(((x_0_4 mul (relu(sign(x_0_2)) idiv abs(x_0_2))) mul n))", "n_input_points": "14", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 2 - 10 - 6 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 - 6 + 2 + 3 + 1 - 1 - 2 - 5 + 9 + 10 + 18 + 19 + 17 + 15 + 14 + 11 + 25 + 26 + 34 + 35 + 33 + 31", "x2": "abs add mul INT+ 8 idiv relu INT+ 7 INT+ 3 x_0_8", "tree": "abs(((8 mul (relu(7) idiv 3)) add x_0_8))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "14", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 10 + 8 - 2 - 7 + 2 - 2 - 5 + 3 + 370 + 695 + 572 - 63 - 378 + 203 - 48 - 235 + 282 + 2 3775 + 4 4580 + 3 6713 - 3922 - 2 4077", "x2": "sub mul relu sqr INT- 8 x_0_9 mul n INT- 5", "tree": "((relu((-8)**2) mul x_0_9) sub (n mul -5))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 5 - 6 + 1 - 10 + 7 - 5 + 14 + 15 + 11 + 13 + 13 + 21 + 15 + 30 + 32 + 29 + 32 + 33 + 42 + 37", "x2": "add relu x_0_7 add sign relu relu n n", "tree": "(relu(x_0_7) add (sign(relu(relu(n))) add n))", "n_input_points": "14", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 3 + 8 + 2 - 8 + 10 + 0 + 8 + 0 + 0 + 10 + 0 + 8 + 0 + 0 + 10 + 0 + 8 + 0", "x2": "relu mul sign x_0_4 mul x_0_5 sign x_0_2", "tree": "relu((sign(x_0_4) mul (x_0_5 mul sign(x_0_2))))", "n_input_points": "14", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 40 - 320 - 1080 - 2560 - 5000 - 8640 - 1 3720 - 2 480 - 2 9160 - 4 0 - 5 3240 - 6 9120 - 8 7880 - 10 9760 - 13 5000 - 16 3840", "x2": "mul INT+ 4 mul INT- 1 0 mul n sqr n", "tree": "(4 mul (-10 mul (n mul (n)**2)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 8 - 4 + 6 - 10 - 8 + 5 - 9 - 5 + 5 - 11 - 9 + 4 - 10 - 6 + 4 - 12 - 10 + 3 - 11 - 7 + 3", "x2": "add idiv sign abs n INT- 9 x_0_6", "tree": "((sign(abs(n)) idiv -9) add x_0_6)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 3 - 9 + 12 + 46 + 59 + 49 + 39 + 54 + 96 + 142 + 167 + 169 + 171 + 198 + 252 + 310 + 347 + 361", "x2": "sub sqr mod n x_0_2 sub x_0_2 abs x_0_1", "tree": "(((n mod x_0_2))**2 sub (x_0_2 sub abs(x_0_1)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 6 - 10 + 6 - 9 + 3 - 1095 - 657 + 1094 - 730 + 2190 - 7 - 11 + 6 - 10 + 3 - 940 - 598 + 1096 - 658 + 2193 - 8", "x2": "idiv add sqr sqr INT+ 9 relu n x_0_5", "tree": "((((9)**2)**2 add relu(n)) idiv x_0_5)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 10 + 9 - 10 + 10 - 6 - 4 - 4 - 2 + 4 + 40 + 2 - 4 - 40 - 2 + 4 + 40 + 2 - 4 - 40 - 2 + 4 + 40 + 2 - 4", "x2": "sub sqr relu sub x_0_9 sqr add x_0_9 sub n mod x_0_2 sub n x_0_7 x_0_3", "tree": "((relu((x_0_9 sub ((x_0_9 add (n sub (x_0_2 mod (n sub x_0_7)))))**2)))**2 sub x_0_3)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000", "x2": "abs mul x_0_1 n", "tree": "abs((x_0_1 mul n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 7 + 1 + 8 + 7 + 1 + 8 + 14 + 2 + 16 + 28 + 6 + 48 + 84 + 18 + 192 + 336 + 72 + 768", "x2": "mul x_0_3 idiv n INT+ 4", "tree": "(x_0_3 mul (n idiv 4))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "idiv n INT- 5", "tree": "(n idiv -5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 5 + 8 - 3 + 5 + 3 - 3 - 2 + 0 + 5 + 0 + 7 + 3 - 8 - 2 - 7 + 2 + 8 + 9 + 10 - 10 - 10 - 16", "x2": "sub x_0_7 x_0_4", "tree": "(x_0_7 sub x_0_4)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 8 - 6 - 4 - 2 + 0 - 8 - 6 - 4 - 2 + 0 - 8 - 6 - 4 - 2 + 0 - 8", "x2": "mod add n n INT- 1 0", "tree": "((n add n) mod -10)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536", "x2": "relu relu sqr sqr n", "tree": "relu(relu(((n)**2)**2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 6 - 2 + 6 + 9 + 30 + 26 + 54 + 50 + 78 + 74 + 102 + 98 + 126 + 122 + 150 + 146 + 174 + 170 + 198 + 194", "x2": "add mod mod INT- 1 sub mod x_0_5 INT+ 2 x_0_4 x_0_2 sqr relu INT+ 5", "tree": "(((-1 mod ((x_0_5 mod 2) sub x_0_4)) mod x_0_2) add (relu(5))**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 3 - 2 - 7 + 4 + 0 - 2 + 5 + 24 + 18 + 70 - 44 + 0 + 26 - 70 - 360 - 288 - 1190 + 792 + 0 - 520 + 1470 + 7920 + 6624", "x2": "mul x_0_7 sub abs n add n n", "tree": "(x_0_7 mul (abs(n) sub (n add n)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 1 + 7 + 1 + 9 + 1 + 11 + 1 + 13 + 1 + 15 + 1 + 17 + 1 + 19 + 1 + 21", "x2": "idiv add n sqr abs INT+ 2 x_0_1", "tree": "((n add (abs(2))**2) idiv x_0_1)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 9 + 1 - 9 - 8 - 6 + 6 + 1 - 4 - 4 - 3 - 5 - 10 - 4 - 2 + 9 + 6 + 6 + 0 - 1 - 14 - 16 - 10 - 2 + 10 + 20", "x2": "sub x_0_9 x_0_5", "tree": "(x_0_9 sub x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 4 + 2 + 6 + 8 - 6 - 8 - 8 - 8 - 323 + 201 + 727 + 1153 - 1 6691 - 8 2991 - 14 159 - 2047 - 9 3346 + 6 5125 + 26 2448 + 46 1201 - 228 3438 9605 - 4792 1825 939 - 1 4868 2797 6167 - 117 9071", "x2": "add mul mul n add n relu x_0_3 x_0_8 sign abs INT+ 3", "tree": "(((n mul (n add relu(x_0_3))) mul x_0_8) add sign(abs(3)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 8 + 5 + 9 - 4 - 3 + 8 + 5 + 9 - 2 - 3 - 10 + 10 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 7 + 7 + 7 + 7", "x2": "relu sub INT+ 7 abs sqr mul mul x_0_12 n INT+ 9", "tree": "relu((7 sub abs((((x_0_12 mul n) mul 9))**2)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 7 + 2 + 0 - 7 - 2 - 6 - 2 - 30 - 39 - 37 - 30 - 35 - 31 - 35 - 7 - 7 + 0 - 7 - 2 - 6 - 2 - 30 - 30", "x2": "mod add add sub INT+ 1 0 idiv abs n sign sqr INT- 5 INT+ 1 n sub mul INT+ 8 INT- 6 x_0_7", "tree": "((((10 sub (abs(n) idiv sign((-5)**2))) add 1) add n) mod ((8 mul -6) sub x_0_7))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 4 - 7 + 7 + 10 - 10 + 6 + 2 - 1 + 7 + 263 + 3 6488 + 1376 + 7 + 7 + 7 + 791 + 10 8907 + 4103 + 7 + 8 + 3 8423 + 1972 2488 + 38 1931 + 7 + 7", "x2": "add INT+ 7 sqr idiv add idiv x_0_6 n mul sub n x_0_10 n x_0_3", "tree": "(7 add ((((x_0_6 idiv n) add ((n sub x_0_10) mul n)) idiv x_0_3))**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 9 + 6 - 9 + 9 + 4 + 9 + 6 - 9 + 9 + 4 + 9 + 6 - 9 + 9 + 4 + 9 + 6 - 9 + 9 + 4", "x2": "mul sign mod x_0_5 n x_0_5", "tree": "(sign((x_0_5 mod n)) mul x_0_5)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 9 + 9 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv x_0_3 mul n INT+ 7", "tree": "(x_0_3 idiv (n mul 7))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 7 + 0 - 6 + 0 - 5 + 1 - 4 + 2 - 2 + 3 + 0 + 4 + 2 + 5 + 4 + 6 + 6", "x2": "add idiv mul idiv sub n x_0_2 INT+ 7 n n x_0_2", "tree": "(((((n sub x_0_2) idiv 7) mul n) idiv n) add x_0_2)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 25 + 222 - 2443 + 2 1984 - 24 1823 + 217 6408 - 2394 485 + 2 1546 4361 - 23 7010 7966 + 213 3097 1694 - 2346 4068 8627 + 2 1117 6619 7644 - 23 2294 2817 4075 + 209 648 5356 6680 - 2299 7133 8923 3469 + 2 697 4205 310 1232", "x2": "sub sub INT- 5 x_0_1 sub mul INT+ 8 x_0_1 mod x_0_1 mod n mul INT- 3 x_0_1", "tree": "((-5 sub x_0_1) sub ((8 mul x_0_1) sub (x_0_1 mod (n mod (-3 mul x_0_1)))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 5 + 6 + 3 - 7 + 10 - 87 - 102 - 112 - 132 - 139 - 133 - 241 - 266 - 288 - 323 - 325 - 328 - 446 - 478 - 513 - 561", "x2": "sub x_0_6 relu idiv add mul mul add INT+ 8 INT+ 8 relu relu relu n INT+ 5 x_0_4 INT+ 6", "tree": "(x_0_6 sub relu((((((8 add 8) mul relu(relu(relu(n)))) mul 5) add x_0_4) idiv 6)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 8 - 4 - 8 + 0 - 2 + 4 + 8 + 0 + 10 - 4 - 8 + 0 + 0 + 4 + 8 + 0 + 11 + 7 - 8 + 0 + 1", "x2": "sub idiv sub abs INT+ 5 idiv n INT- 3 abs sub mul sqr INT- 6 x_0_5 sign n x_0_4", "tree": "(((abs(5) sub (n idiv -3)) idiv abs((((-6)**2 mul x_0_5) sub sign(n)))) sub x_0_4)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 5 - 7 - 4 + 2 + 10 + 10 + 10 + 2 + 10 + 10 + 10 + 2 + 10 + 10 + 10 + 2 + 10 + 10 + 10", "x2": "mod mul INT+ 5 INT+ 2 sqr x_0_4", "tree": "((5 mul 2) mod (x_0_4)**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 6 + 4 - 8 - 4 + 12 + 8 - 20 - 12 + 24 + 16 - 44 - 28 + 48 + 32 - 92 - 60 + 96", "x2": "sub sub INT+ 4 x_0_2 relu x_0_2", "tree": "((4 sub x_0_2) sub relu(x_0_2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 6 + 7 + 3 - 4 - 6 + 1 - 1 - 2 + 7 - 6 - 3 + 1 + 2 - 7 - 3 + 16 + 17 - 18 + 2 - 4 - 21 + 7 + 11 - 4 - 25 + 1", "x2": "idiv n sub x_0_10 mod mul x_0_5 sign mul sub idiv n n x_0_3 n INT- 3", "tree": "(n idiv (x_0_10 sub ((x_0_5 mul sign((((n idiv n) sub x_0_3) mul n))) mod -3)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 4 - 6 + 10 - 2 - 3 - 14 + 1 - 12 - 14 - 26 - 12 - 26 - 29 - 42 - 29 - 44 - 48 - 62 - 50", "x2": "sub x_0_4 add sign relu n n", "tree": "(x_0_4 sub (sign(relu(n)) add n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 10 + 3 + 2 + 2 + 4 + 5 + 8 + 8 + 10 + 11 + 10 + 10 + 12 + 13 + 16 + 16 + 18", "x2": "relu relu sub n mod x_0_2 sqr INT- 2", "tree": "relu(relu((n sub (x_0_2 mod (-2)**2))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 1 - 5 - 7 + 25 + 16 + 9 + 0 + 25 + 4 + 25 + 16 + 25 + 36 + 25 + 0 + 25 + 4 + 25 + 16", "x2": "sqr abs mod mul sqr sign n mul add add x_0_4 INT- 5 n n INT+ 8", "tree": "(abs((((sign(n))**2 mul (((x_0_4 add -5) add n) mul n)) mod 8)))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 4 + 3 - 6 + 10 - 48 + 42 - 96 + 180 - 960 + 924 - 2304 + 4680 - 2 6880 + 2 7720 - 7 3728 + 15 9120 - 96 7680 + 105 3360 - 294 9120", "x2": "mul x_0_4 add abs relu n mod n sqr INT+ 1 0", "tree": "(x_0_4 mul (abs(relu(n)) add (n mod (10)**2)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 8 - 1 + 10 + 8 - 9 - 3 + 24 - 72 - 10 + 110 + 96 - 117 - 42 + 360 - 1152 - 170 + 1980 + 1824 - 2340 - 882 + 7920 - 2 6496", "x2": "mul x_0_7 n", "tree": "(x_0_7 mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 4 + 6 + 3 + 8 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign idiv mul n idiv INT- 1 INT- 3 idiv x_0_5 n", "tree": "sign(((n mul (-1 idiv -3)) idiv (x_0_5 idiv n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154", "x2": "abs add n x_0_1", "tree": "abs((n add x_0_1))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 - 9 - 6 + 1 + 0 - 4 + 2 + 22 + 17 + 20 + 26 + 22 + 4 + 11 + 10 + 6 + 12 + 32 + 27 + 30 + 36 + 32 + 14", "x2": "sub abs abs add abs n n add sub x_0_7 x_0_7 x_0_5", "tree": "(abs(abs((abs(n) add n))) sub ((x_0_7 sub x_0_7) add x_0_5))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 - 5 - 5 - 4 - 8 + 5 + 6 + 8 + 2 + 17 + 20 + 17 + 33 + 36 + 35 + 50 + 50 + 52 + 69 + 69 + 67 + 85 + 86 + 83 + 84", "x2": "sub add x_0_3 n mod sub mod n sub abs sqr x_0_3 sqr n x_0_6 x_0_10", "tree": "((x_0_3 add n) sub (((n mod (abs((x_0_3)**2) sub (n)**2)) sub x_0_6) mod x_0_10))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 2 - 10 + 6 - 2 + 6 - 5 + 63 + 126 + 21 + 84 + 35 + 119 + 0 + 0 + 0 + 0 + 0 + 0 + 133 + 140 + 147 + 154", "x2": "mul add INT+ 3 INT+ 4 relu sub n x_0_6", "tree": "((3 add 4) mul relu((n sub x_0_6)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 5 + 10 + 3 - 6 - 1 + 7 + 4 + 4 + 0 + 6 + 1 + 1 + 3 + 2 + 0 + 4 + 1 + 1 + 9 + 4 + 0 + 16", "x2": "mod abs mod sqr x_0_6 n mul n n", "tree": "(abs(((x_0_6)**2 mod n)) mod (n mul n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 1 - 7 + 3 + 1 - 1 + 9 - 6 + 9 - 2 + 2 + 3 + 19 - 4 + 13 + 3 + 2 + 11 + 20 + 1 + 17 + 6 - 1 + 17 + 20 + 4", "x2": "add add idiv sub mod INT- 4 x_0_6 mul INT+ 9 x_0_10 n INT+ 5 x_0_6", "tree": "(((((-4 mod x_0_6) sub (9 mul x_0_10)) idiv n) add 5) add x_0_6)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 16 + 288 + 9216 + 46 800 + 3317 7600 + 32 5140 4800 + 4161 7981 4400 + 67 4211 2993 2800 + 1 3484 2259 8656 0 + 326 3182 6887 4752 0 + 9 3979 6614 3592 8576 0 + 3176 5125 5653 4385 8688 0 + 124 5192 9221 6147 9260 5696 0 + 5 6033 6814 9726 6566 7256 3200 0 + 2868 9244 9266 48 2163 5235 8400 0 + 165 8238 3567 5750 7869 516 6315 5200 0", "x2": "mul mul x_0_1 n add n n", "tree": "((x_0_1 mul n) mul (n add n))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 - 9 - 8 - 10 + 9 + 4 + 3 + 6 + 0 - 197 - 239 - 256 - 282 - 293 - 321 - 156 - 144 - 168 - 376 - 446 - 476 - 710 - 778 - 829 - 505", "x2": "sub sub x_0_9 relu add x_0_6 sqr n mul sqr INT- 1 0 sign n", "tree": "((x_0_9 sub relu((x_0_6 add (n)**2))) sub ((-10)**2 mul sign(n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 7 - 8 + 8 - 4 - 2 + 7 - 9 + 4 + 0 + 5 + 0 + 0 + 8 + 0 + 0 + 7 + 0 + 4 + 0 + 5 + 0 + 0 + 8 + 0 + 0", "x2": "mul relu sign x_0_10 x_0_10", "tree": "(relu(sign(x_0_10)) mul x_0_10)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 2 - 3 + 1 + 3 + 6 + 2 + 15 + 7 + 9 + 12 + 9 + 10 + 12 + 12 + 14 + 15 + 15 + 16 + 17", "x2": "add add n idiv add add abs idiv relu n x_0_1 mod n x_0_2 INT+ 4 x_0_4 INT- 3", "tree": "((n add (((abs((relu(n) idiv x_0_1)) add (n mod x_0_2)) add 4) idiv x_0_4)) add -3)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 7 - 7 - 4 - 8 - 9 + 6 - 3 - 9 + 7 - 3 - 9 + 10 - 3 - 9 + 14 - 3 - 9 + 19 - 3 - 9 + 26 - 3 - 9", "x2": "sub x_0_3 idiv relu x_0_3 sub x_0_5 add INT+ 9 x_0_7", "tree": "(x_0_3 sub (relu(x_0_3) idiv (x_0_5 sub (9 add x_0_7))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 + 5 + 8 - 3 + 8 - 10 + 825 + 1443 + 1440 + 1785 + 1767 + 5 3613 + 15 9183 + 21 9375 + 26 4870 + 31 3200 + 515 5083 + 2107 2150 + 3975 4575 + 5375 7855 + 6764 1561 + 6 7260 6927", "x2": "mul relu add INT- 9 mul abs n INT+ 6 add add add add n x_0_5 relu n n x_0_6", "tree": "(relu((-9 add (abs(n) mul 6))) mul ((((n add x_0_5) add relu(n)) add n) add x_0_6))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 10 + 15 + 22 + 31 + 42 + 55 + 70 + 87 + 106 + 127 + 150 + 175 + 202 + 231 + 262", "x2": "add mul n n relu INT+ 6", "tree": "((n mul n) add relu(6))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 10 - 6 - 9 + 2 - 5 - 5 - 5 - 10 - 6 + 99 - 132 - 91 - 140 + 15 - 96 - 102 - 108 - 209 - 140 + 2058 - 2926 - 2116 - 3384 + 350 - 2522", "x2": "sub mul n x_0_10 n", "tree": "((n mul x_0_10) sub n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 4 - 8 - 9 + 4 + 4 + 4 + 0 + 0 + 0 + 4 + 4 + 4 + 0 + 0 + 0 + 4 + 4 + 4 + 0", "x2": "sub INT+ 4 relu mul x_0_3 sign relu INT- 9", "tree": "(4 sub relu((x_0_3 mul sign(relu(-9)))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 3 - 3 - 3 - 3 + 0 + 0 + 0 + 0 + 5 + 5 + 5 + 5 + 12 + 12 + 12 + 12", "x2": "sub relu sqr idiv n INT- 4 abs sub mod n n INT+ 4", "tree": "(relu(((n idiv -4))**2) sub abs(((n mod n) sub 4)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 6 - 3 + 17 + 26 + 36 + 49 + 64 + 81 + 100 + 120 + 143 + 168 + 195 + 224 + 255 + 287 + 322 + 359", "x2": "sub sqr n idiv idiv x_0_2 INT+ 6 abs add n sign add n mul x_0_3 sign n", "tree": "((n)**2 sub ((x_0_2 idiv 6) idiv abs((n add sign((n add (x_0_3 mul sign(n))))))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 3 - 3 + 0 + 25 + 0 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249", "x2": "sqr mod mul relu n n mul idiv n abs sign x_0_3 sub n INT+ 3", "tree": "(((relu(n) mul n) mod ((n idiv abs(sign(x_0_3))) mul (n sub 3))))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 9 + 4 - 6 + 1 + 0 - 396 + 236 - 456 + 76 + 0 - 4 5936 + 3 2804 - 7 4784 + 1 4516 + 0 - 1152 9936 + 931 6336 - 2385 6096 + 463 604 + 0", "x2": "mul x_0_5 add INT- 5 sqr sub n idiv n INT+ 1 0", "tree": "(x_0_5 mul (-5 add ((n sub (n idiv 10)))**2))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 5 - 7 - 4 + 6 + 6 + 7 + 16 + 212 + 437 + 726 + 1455 + 5 1631 + 25 4131 + 80 1731 + 296 2631 + 26 7037 5240 + 672 6158 1144 + 7100 6304 145 + 9 4873 5806 2645 + 713 913 5165 7813 245", "x2": "add sub add n sqr add n x_0_4 n x_0_1", "tree": "(((n add ((n add x_0_4))**2) sub n) add x_0_1)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 10 - 1 + 0 + 10 - 5 + 0 + 10 - 5 + 0 + 10 - 5 + 0 + 10 - 5 + 0 + 10 - 5 + 0", "x2": "add mod sub sqr x_0_3 INT- 5 INT- 5 x_0_3", "tree": "((((x_0_3)**2 sub -5) mod -5) add x_0_3)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 5 + 16 + 44 + 79 + 121 + 170 + 226 + 289 + 359 + 436 + 520 + 611 + 709 + 814 + 926 + 1045 + 1171", "x2": "add x_0_1 add add sub mul n INT+ 6 INT+ 1 n abs INT+ 8", "tree": "(x_0_1 add ((((n mul 6) sub 1) add n) add abs(8)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 - 2 - 2 - 3 - 3 - 6 - 6 - 3 - 5 - 4 - 12 - 5 - 9 - 11 - 11 - 17", "x2": "sub mod mod sub x_0_1 sqr n add n INT+ 8 n n", "tree": "((((x_0_1 sub (n)**2) mod (n add 8)) mod n) sub n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 + 2 + 5 - 10 - 3 + 24 + 13 - 13 + 13 + 24 + 61 + 2 - 26 + 24 + 100 + 386 - 90 - 295 + 164 + 1394 + 1 6230", "x2": "add sub sqr idiv x_0_5 relu INT+ 3 x_0_2 INT+ 1 0", "tree": "((((x_0_5 idiv relu(3)))**2 sub x_0_2) add 10)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 1 - 2 + 1 + 2 + 5 + 8 + 8 + 10 + 8 + 8 + 6 + 4 + 5 + 4 + 7 + 8 + 11 + 14 + 14 + 16 + 14 + 14", "x2": "abs sub n x_0_6", "tree": "abs((n sub x_0_6))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 1 - 6 + 4 + 0 - 5 - 30 + 20 + 0 - 25 - 150 + 100 + 0 - 125 - 750 + 500 + 0 - 625 - 3750 + 2500", "x2": "mul INT+ 5 x_0_4", "tree": "(5 mul x_0_4)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 - 5 - 8 - 6 - 8 - 5 - 7 - 5 - 8 - 6 - 8 - 5 - 7 - 5 - 8 - 6 - 8 - 5", "x2": "add INT- 4 sub abs x_0_3 INT+ 9", "tree": "(-4 add (abs(x_0_3) sub 9))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 - 9 - 2 + 3 + 8 - 7 - 1 - 2 + 791 + 910 + 1101 - 5834 - 6685 - 8146 + 5 4524 + 6 2463 + 7 5116 - 48 8718 - 56 27 - 66 6618 + 440 9108 + 505 2737 + 594 9791 - 3973 9259", "x2": "sub mul INT+ 9 sub sqr mod n sqr INT+ 5 x_0_3 add INT+ 8 x_0_8", "tree": "((9 mul (((n mod (5)**2))**2 sub x_0_3)) sub (8 add x_0_8))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 4 - 6 + 7 - 8 + 7 + 3 + 2 + 6 - 4 - 6 + 7 - 8 + 7 + 3 + 2 + 6 - 4 - 6 + 7 - 8 + 7 + 3 + 2 + 6", "x2": "mul sign n x_0_8", "tree": "(sign(n) mul x_0_8)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 - 8 - 5 - 1 + 4 + 10 + 17 + 25 + 34 + 44 + 55 + 67 + 80 + 94 + 109 + 125 + 142", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 - 10 + 2 + 8 + 2 + 10 + 1 - 4 - 9 - 2 + 3 + 19 + 19 + 33 + 18 + 9 - 11 - 3 - 11 + 21 + 31 + 66 + 44 + 44", "x2": "sub relu n sub x_0_5 x_0_8", "tree": "(relu(n) sub (x_0_5 sub x_0_8))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 6 - 5 - 4 - 2 - 27 - 38 - 29 - 32 - 36 - 19 - 20 - 21 - 22 - 23 - 31 - 32 - 33 - 34 - 35 - 29", "x2": "sub sub sqr sign mul x_0_4 n relu add x_0_5 sub n INT- 1 0 sub n mod INT- 9 x_0_1", "tree": "(((sign((x_0_4 mul n)))**2 sub relu((x_0_5 add (n sub -10)))) sub (n sub (-9 mod x_0_1)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 5 - 3 - 9 - 4 + 3 - 1 - 1 - 2 - 1 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1", "x2": "idiv sub x_0_5 sign x_0_4 INT+ 6", "tree": "((x_0_5 sub sign(x_0_4)) idiv 6)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 9 + 396 + 641 + 821 + 946 + 1026 + 1071 + 1091 + 1096 + 1096 + 1101 + 1121 + 1166 + 1246 + 1371 + 1551 + 1796", "x2": "add mul INT+ 5 sqr add add n INT- 7 sub mod sqr relu mod INT+ 1 x_0_1 x_0_1 INT+ 4 x_0_1", "tree": "((5 mul (((n add -7) add (((relu((1 mod x_0_1)))**2 mod x_0_1) sub 4)))**2) add x_0_1)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 9 + 6 - 6 + 6 + 2 - 9 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15 - 16 + 17 + 18 - 19 - 20 - 21 - 22", "x2": "mul n sign mod mul idiv x_0_6 mod sqr INT- 4 x_0_3 sign n INT- 9", "tree": "(n mul sign((((x_0_6 idiv ((-4)**2 mod x_0_3)) mul sign(n)) mod -9)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 7 + 0 + 3 - 5 + 5 - 3 - 10 - 10 + 7 - 18 - 105 + 0 - 39 + 105 - 140 + 84 + 110 + 360 - 861 + 324 + 5985 + 0 + 6162 + 6930 - 1 2880", "x2": "mul sub sub x_0_8 add INT+ 8 sign mul n n sub relu INT- 8 INT- 9 sub x_0_10 relu INT- 1", "tree": "(((x_0_8 sub (8 add sign((n mul n)))) sub (relu(-8) sub -9)) mul (x_0_10 sub relu(-1)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 20 + 33 + 48 + 65 + 84 + 105 + 128 + 153 + 180 + 209 + 240 + 273 + 308 + 345 + 384", "x2": "mul n sub n INT- 8", "tree": "(n mul (n sub -8))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 - 7 - 2 + 0 + 8 - 10 - 5 + 6 - 2 + 6 + 4 + 10 + 0 + 8 + 5 + 11 + 6 + 16 + 6 + 4 + 10 + 0 + 8 + 5 + 11", "x2": "mod x_0_9 n", "tree": "(x_0_9 mod n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 4 - 7 - 10 + 10 - 9 - 1 + 2 + 7 + 8 + 11 + 13 + 3 + 14 + 14 + 15 + 16 + 17 + 14 + 19 + 19 + 21 + 22 + 23", "x2": "add sub idiv sign mod INT- 1 n x_0_3 idiv x_0_7 x_0_6 n", "tree": "(((sign((-1 mod n)) idiv x_0_3) sub (x_0_7 idiv x_0_6)) add n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 1 - 3 + 3 + 11 + 21 + 33 + 47 + 63 + 81 + 101 + 123 + 147 + 173 + 201 + 231", "x2": "add INT- 3 abs add sub INT- 6 abs n abs mul n n", "tree": "(-3 add abs(((-6 sub abs(n)) add abs((n mul n)))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 9 - 1 + 8 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399", "x2": "abs sub sign idiv INT+ 2 abs x_0_4 sqr n", "tree": "abs((sign((2 idiv abs(x_0_4))) sub (n)**2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 - 3 - 3 - 3 - 6 - 6 - 6 - 9 - 9 - 9 - 12 - 12 - 12 - 15 - 15", "x2": "sub mod n mod INT+ 8 INT+ 5 n", "tree": "((n mod (8 mod 5)) sub n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024", "x2": "sqr add n n", "tree": "((n add n))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 7 + 5 - 4 + 6 - 5 + 5 - 4 + 8 - 1 + 9 - 2 + 8 - 1 + 11 + 2 + 12 + 1 + 11 + 2", "x2": "sub idiv add n INT- 5 sign relu idiv n x_0_2 x_0_3", "tree": "(((n add -5) idiv sign(relu((n idiv x_0_2)))) sub x_0_3)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 - 5 - 8 - 7 + 10 + 0 - 22 - 21 - 20 - 19 - 20 - 18 - 17 - 15 - 14 - 13 - 12 - 11 - 10 - 9 - 8 - 8", "x2": "add add n INT+ 6 sub sub sign INT+ 1 0 sqr INT+ 6 idiv abs add n x_0_6 INT+ 8", "tree": "((n add 6) add ((sign(10) sub (6)**2) sub (abs((n add x_0_6)) idiv 8)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 1 + 0 + 4 + 16 + 36 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64", "x2": "sqr mod INT- 8 idiv n INT+ 1", "tree": "((-8 mod (n idiv 1)))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 + 5 - 5 + 9 + 0 + 15 + 7 + 23 + 16 + 33 + 27 + 45 + 40 + 59 + 55 + 75 + 72 + 93", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 1 + 6 + 7 - 2 + 370 + 55 + 426 + 553 - 940 + 6 5120 + 3 1350 + 30 7572 - 41 1432 - 6142 4300 + 20 5818 2720 + 96 5144 2350 - 1264 4530 9776 + 25 2717 7407 648 - 12 6422 4574 1781 6000 + 1986 4432 7755 477 1520", "x2": "mul x_0_5 add x_0_4 sqr n", "tree": "(x_0_5 mul (x_0_4 add (n)**2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 3 - 9 - 8 - 6 + 4 + 0 + 9 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0", "x2": "relu sqr sub mod INT- 1 0 mod INT+ 1 INT+ 6 mod mod relu x_0_6 INT+ 4 n", "tree": "relu((((-10 mod (1 mod 6)) sub ((relu(x_0_6) mod 4) mod n)))**2)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 9 + 20 + 90 + 200 + 900 + 2000 + 9000 + 2 0 + 9 0 + 20 0 + 90 0 + 200 0 + 900 0 + 2000 0 + 9000 0 + 2 0 0 + 9 0 0", "x2": "mul abs INT- 1 0 x_0_2", "tree": "(abs(-10) mul x_0_2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 - 9 - 8 - 6 - 10 + 10 + 8 + 9 + 8 + 6 + 10 + 10 + 8 + 9 + 8 + 6 + 10 + 10 + 8 + 9 + 8", "x2": "abs idiv x_0_6 sign INT- 1 0", "tree": "abs((x_0_6 idiv sign(-10)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240", "x2": "sub sqr relu n n", "tree": "((relu(n))**2 sub n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 + 5 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "idiv x_0_1 mul x_0_2 sign sign INT+ 1 0", "tree": "(x_0_1 idiv (x_0_2 mul sign(sign(10))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 4 + 4 - 2 + 8 + 5 + 4 - 3 + 2 - 7 - 5 - 3 + 3 - 1 + 7 + 6 + 3 - 2 + 1 - 6 - 6 - 2", "x2": "sub mod add n mul sub add mul INT- 3 INT+ 4 n n n INT+ 2 x_0_5", "tree": "(((n add ((((-3 mul 4) add n) sub n) mul n)) mod 2) sub x_0_5)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 5 + 7 + 0 + 9 - 8 + 2 + 21 + 112 + 18 + 90 + 319 + 1440 + 351 + 1400 + 4965 + 2 3232 + 6188 + 2 5452 + 9 4620 + 46 4960 + 13 305 + 56 340", "x2": "mul abs sub mod add n x_0_6 relu INT+ 2 sub sub INT+ 4 abs n x_0_4 n", "tree": "(abs((((n add x_0_6) mod relu(2)) sub ((4 sub abs(n)) sub x_0_4))) mul n)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 6 + 0 - 6 - 36 - 102 - 179 - 267 - 366 - 476 - 597 - 729 - 872 - 1026 - 1191 - 1367 - 1554 - 1752 - 1961 - 2181", "x2": "add x_0_1 sub idiv mul INT+ 1 0 relu n idiv INT- 7 sub INT+ 8 x_0_4 n", "tree": "(x_0_1 add (((10 mul relu(n)) idiv (-7 idiv (8 sub x_0_4))) sub n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 10 + 28 + 49 + 140 + 246 + 702 + 1233 + 3514 + 6170 + 1 7576 + 3 857 + 8 7888 + 15 4294 + 43 9450 + 77 1481 + 219 7262 + 385 7418", "x2": "sub n mul sub sign relu INT- 3 x_0_2 INT+ 5", "tree": "(n sub ((sign(relu(-3)) sub x_0_2) mul 5))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 9 - 6 - 1 + 17 + 0 + 5 + 18 + 0 + 5 + 13 + 0 + 5 + 8 + 0 + 5 + 3 + 0 + 5 + 0", "x2": "relu sub x_0_3 x_0_4", "tree": "relu((x_0_3 sub x_0_4))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 9 - 8 - 4 + 7 - 7 + 16 - 8 + 12 - 5 + 12 + 4 + 4 + 8 - 3 + 15 - 11 + 15 - 7 + 10 + 5 + 6", "x2": "sub add idiv idiv abs INT- 3 n sign x_0_3 abs x_0_5 x_0_1", "tree": "((((abs(-3) idiv n) idiv sign(x_0_3)) add abs(x_0_5)) sub x_0_1)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 6 - 11 - 18 - 27 - 38 - 51 - 66 - 83 - 102 - 123 - 146 - 171 - 198 - 227 - 258 - 291 - 326", "x2": "sub sub x_0_1 n abs sub add sign n n idiv sign INT+ 2 INT+ 7", "tree": "((x_0_1 sub n) sub abs(((sign(n) add n) sub (sign(2) idiv 7))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255", "x2": "abs add INT- 9 abs add INT+ 8 sqr n", "tree": "abs((-9 add abs((8 add (n)**2))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 5 - 4 + 7 - 5 + 3 + 0 + 35 - 4 + 14 - 40 + 15 + 0 + 175 + 0 + 0 - 280 + 60 + 0 + 2625 + 0 + 0", "x2": "mul mod idiv add x_0_3 mul relu n abs n INT+ 8 n x_0_6", "tree": "((((x_0_3 add (relu(n) mul abs(n))) idiv 8) mod n) mul x_0_6)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 5 + 0 - 6 + 6 + 9 + 7 - 10 - 11 + 6 + 3 + 13 - 1 - 4 - 4 - 8 + 19 + 2 + 9 - 5 - 12 + 15 - 6 + 28", "x2": "add idiv x_0_5 sign relu INT- 1 x_0_7", "tree": "((x_0_5 idiv sign(relu(-1))) add x_0_7)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 8 + 9 + 3 - 7 + 66 + 28 + 624 + 306 + 6240 + 4125 + 7 5252 + 6 1776 + 105 7854 + 102 285 + 1699 1712 + 1862 4180 + 3 696 2838 + 3 7395 8703 + 61 5966 2520 + 82 995 8778", "x2": "mul add x_0_2 relu sub x_0_5 INT- 3 n", "tree": "((x_0_2 add relu((x_0_5 sub -3))) mul n)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 9 - 7 - 10 + 6 - 8 - 6 - 9 + 7 - 7 - 5 - 8 + 8 - 6 - 4 - 7 + 9 - 5 - 3 - 6 + 10 - 4 - 2 - 5 + 11 - 3 - 1 - 4 + 12 - 2 + 0", "x2": "sub x_0_4 sign INT- 7", "tree": "(x_0_4 sub sign(-7))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 + 5 + 9 - 2 + 4 - 14 - 20 + 4 - 38 + 4 - 26 - 20 - 14 - 20 - 56 - 20 - 50 - 20 - 2 + 4 - 2 - 20 - 92 - 20 + 4 - 80 - 128 - 92 - 116 - 20", "x2": "add add mul relu INT+ 6 sub n add mod sqr x_0_3 n n INT- 1 INT+ 5", "tree": "(((relu(6) mul (n sub (((x_0_3)**2 mod n) add n))) add -1) add 5)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 - 10 + 1 - 9 + 85 + 84 + 175 + 120 + 981 + 1080 + 2189 + 1728 + 1 3065 + 1 5456 + 3 3195 + 2 8032 + 22 2513 + 27 8640 + 63 1161 + 56 1120 + 467 3277 + 613 608 + 1451 7255 + 1346 7456 + 1 1683 2525 + 1 5939 6432 + 3 9196 6533 + 3 7708 9440 + 33 8814 3921 + 47 8189 3680 + 121 5096 3267", "x2": "mul add x_0_4 mul INT+ 6 sqr INT- 2 abs n", "tree": "((x_0_4 add (6 mul (-2)**2)) mul abs(n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 - 5 + 30 + 46 + 64 + 84 + 101 + 127 + 152 + 176 + 208 + 239 + 273 + 306 + 342 + 381 + 423 + 468 + 511 + 557 + 606 + 658 + 713 + 766 + 822 + 881 + 943 + 1008 + 1071", "x2": "add mul add n INT+ 8 n mod mod add mod INT+ 1 0 INT- 9 sub x_0_2 INT+ 8 n INT- 5", "tree": "(((n add 8) mul n) add ((((10 mod -9) add (x_0_2 sub 8)) mod n) mod -5))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 - 2 + 4 + 7 + 3 - 5 - 4 + 10 + 86 + 64 + 168 + 1431 + 1064 + 2798 + 2 3852 + 1 7736 + 4 6631 + 39 7531 + 29 5598 + 77 7181 + 662 5514 + 492 6631 + 1295 3014 + 1 1042 5231 + 8211 514 + 2 1588 3564 + 18 4042 514 + 13 6850 8564 + 35 9805 9398 + 306 7367 5231 + 228 847 6064 + 599 6765 6631 + 5112 2792 514 + 3801 4126 7731 + 9994 6094 3848", "x2": "abs sub idiv n mul idiv n INT+ 2 sign x_0_9 idiv mul mul x_0_3 INT- 1 0 INT- 5 INT+ 3", "tree": "abs(((n idiv ((n idiv 2) mul sign(x_0_9))) sub (((x_0_3 mul -10) mul -5) idiv 3)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 4 + 10 + 3 + 168 + 40 + 1044 + 329 + 8416 + 3042 + 8 4260 + 3 3583 + 101 1264 + 43 6748 + 1415 7892 + 655 1445 + 2 2652 6528 + 1 1137 4854 + 40 7747 7828 + 21 1612 2587 + 815 4955 6960 + 444 3857 4768 + 1 7940 9025 3604 + 1 220 8722 193 + 43 581 6608 7072 + 25 5521 8050 5450 + 1119 5123 1826 4548 + 689 9088 7364 7879 + 3 1346 3449 1140 8128 + 2 7 3573 3578 9332", "x2": "abs mul mul add x_0_2 n idiv INT- 7 x_0_1 n", "tree": "abs((((x_0_2 add n) mul (-7 idiv x_0_1)) mul n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 4 + 9 - 5 + 3 + 17 + 5 + 18 + 4 + 12 + 26 + 14 + 27 + 13 + 21 + 35 + 23 + 36 + 22 + 30 + 44 + 32 + 45 + 31 + 39 + 53 + 41 + 54 + 40 + 48 + 62 + 50", "x2": "sub x_0_5 INT- 9", "tree": "(x_0_5 sub -9)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 3 - 10 + 6 - 4 + 5 + 1 + 3 + 0 - 1 + 0 - 4 - 4 - 5 - 9 - 1 + 0 - 9 + 0 - 4 - 4 - 5 - 9 - 9 + 0 - 9 + 0 - 4 - 4 - 5 - 9 - 9 + 0 - 9 + 0", "x2": "mod abs sqr x_0_8 INT- 1 0", "tree": "(abs((x_0_8)**2) mod -10)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 2 + 1 + 3 - 4 - 10 - 9 + 7 - 6 + 9 - 13 + 3 - 12 + 19 - 25 + 34 - 47 + 50 - 62 + 81 - 106 + 140 - 187 + 237 - 299 + 380 - 486 + 626 - 813 + 1050 - 1349 + 1729 - 2215 + 2841", "x2": "sub x_0_6 x_0_1", "tree": "(x_0_6 sub x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 - 2 - 2 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11 - 2 - 12 - 2 - 13 - 2 - 14 - 2", "x2": "idiv idiv n sign INT+ 9 add relu x_0_1 x_0_1", "tree": "((n idiv sign(9)) idiv (relu(x_0_1) add x_0_1))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 9 + 3 + 4 + 0 + 9 + 7 - 7 + 9 + 7 + 17 + 5 + 4 + 6 - 1 + 1 + 15 - 1 + 1 - 9 + 1 + 4 + 2 + 7 + 7 - 9 + 9 + 7 + 17 + 7 + 4 + 4 + 1 + 1 + 17 - 1", "x2": "sub add INT+ 7 sub sign sign x_0_6 x_0_9 mod n n", "tree": "((7 add (sign(sign(x_0_6)) sub x_0_9)) sub (n mod n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 6 + 4 + 6 - 7 + 4 - 1 - 34 + 15 + 25 - 21 + 27 - 4 - 231 + 127 + 232 - 203 + 304 - 41 - 2996 + 1785 + 3487 - 3241 + 5175 - 731 - 5 6917 + 3 5707 + 7 3234 - 7 1295 + 11 9032 - 1 7537 - 142 2918 + 92 8389 + 197 7325", "x2": "mod mul x_0_6 INT- 6 add mul abs n x_0_6 INT+ 7", "tree": "((x_0_6 mul -6) mod ((abs(n) mul x_0_6) add 7))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 9 - 1 - 10 + 4 + 4 + 1 + 8 + 3 - 9 + 1 + 10 - 2 + 4 + 4 - 1 + 8 + 3 - 9 + 1 + 10 - 19 + 4 + 4 - 23 + 8 + 3 - 18 + 1 + 10 - 11 + 4 + 4 - 10 + 8 + 3 - 18", "x2": "idiv mod x_0_9 n sign x_0_3", "tree": "((x_0_9 mod n) idiv sign(x_0_3))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 6 - 3 + 3 + 4 + 2 + 9 - 4 - 7 - 8 + 4225 + 1225 + 1600 + 25 + 2025 + 1225 + 3025 + 9025 + 1 5625 + 4 4563 2100 + 3708 8100 + 6312 3025 + 2500 + 1 60 900 + 3612 100 + 2 2846 3225 + 20 3401 0 + 60 9726 7225 + 496 4698 9686 6259 8025 + 3 4388 1530 7858 4900 + 9 9612 8534 7420 1600 + 1 5376 0 + 25 3013 4113 2922 8225 + 3 2616 4936 4413 6900 + 130 4885 7981 6336 400 + 1 342 9913 7480 8402 5600 + 9 2941 6679 6562 6240 2500", "x2": "sqr mul mul sub mod sub INT- 9 sqr INT+ 8 n x_0_9 sign INT+ 4 INT+ 5", "tree": "((((((-9 sub (8)**2) mod n) sub x_0_9) mul sign(4)) mul 5))**2", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729", "x2": "mod n idiv add sqr n n INT- 1", "tree": "(n mod (((n)**2 add n) idiv -1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 5 - 8 - 4 - 5 - 6 + 25 - 8 - 9 - 10 - 11 + 42 + 37 - 14 - 15 - 16 - 17 - 18 + 13 - 20 + 87 - 22 - 23 - 24 + 151 - 26 - 27 - 28 - 29 + 132", "x2": "sub relu mul mod mul n sqr mod abs INT+ 4 add x_0_3 INT- 2 INT- 9 x_0_3 n", "tree": "(relu((((n mul ((abs(4) mod (x_0_3 add -2)))**2) mod -9) mul x_0_3)) sub n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 + 10 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign idiv add INT- 5 abs INT- 1 mul n x_0_2", "tree": "sign(((-5 add abs(-1)) idiv (n mul x_0_2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 5 + 7 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1", "x2": "mod mod mul n sub n x_0_2 INT- 9 relu INT+ 2", "tree": "(((n mul (n sub x_0_2)) mod -9) mod relu(2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 4 - 4 + 7 + 7 - 4 + 8 - 1 + 10 + 10 + 10 + 4 + 5 + 7 + 11 + 6 + 11 + 10 + 16 + 19 + 14 + 16 + 19 + 20 + 22 + 19 + 22 + 24 + 24 + 23 + 31 + 37 + 28 + 30 + 47 + 43 + 38", "x2": "add add INT- 8 mod idiv x_0_6 sign mul sub x_0_4 x_0_2 INT- 9 x_0_10 n", "tree": "((-8 add ((x_0_6 idiv sign(((x_0_4 sub x_0_2) mul -9))) mod x_0_10)) add n)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 7 + 0 - 6 - 8 - 1 + 1 - 5 + 1 + 0 + 0 - 4 + 0 + 1 + 1 - 3 + 1 + 0 + 0 - 2 + 0 + 1 + 1 - 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1", "x2": "sub idiv n n mod idiv x_0_4 sign x_0_4 n", "tree": "((n idiv n) sub ((x_0_4 idiv sign(x_0_4)) mod n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 + 5 + 6 + 6 + 1 + 3 + 3 + 4 + 8 + 9 + 10 + 10 + 6 + 5 + 5 + 6 + 13 + 15 + 16 + 16 + 4 - 1 - 3 - 2 + 23 + 25 + 26 + 27 - 24 - 33 - 37", "x2": "add idiv sqr x_0_4 INT- 1 0 n", "tree": "(((x_0_4)**2 idiv -10) add n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 + 9 - 6 + 2 + 4 - 5 - 66 + 155 + 661 - 1492 - 7104 + 1 8713 + 9 1037 - 26 8551 - 135 1071 + 436 9604 + 2278 8470 - 7958 1631 - 4 3038 6096 + 16 541 2281 + 89 9576 3488 - 355 5132 4002 - 2061 2953 1855 + 8576 1521 9215 + 5 1376 1456 286 - 22 3895 5874 6075 - 138 3690 7565 461 + 629 44 9153 3436 + 4004 3331 7120 3915 - 1 8922 3685 682 4255 - 12 3915 5703 3441 9940 + 60 6921 8725 3362 7869 + 408 3062 1451 9617 5210", "x2": "sub mul sub n x_0_2 n sub x_0_6 mul x_0_5 INT- 1 0", "tree": "(((n sub x_0_2) mul n) sub (x_0_6 sub (x_0_5 mul -10)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 + 2 - 6 - 6 + 0 + 9 - 5 + 8 + 8 + 4 + 9 + 17 + 10 + 11 + 18 + 28 + 15 + 29 + 30 + 27 + 33 + 42 + 36 + 38 + 46 + 57 + 45 + 60 + 62 + 60 + 67 + 77 + 72 + 75 + 84 + 96 + 85", "x2": "abs add x_0_10 sub n sub INT- 3 idiv INT+ 2 INT+ 8", "tree": "abs((x_0_10 add (n sub (-3 sub (2 idiv 8)))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 10 - 10 + 5 + 5 - 16 - 2 - 3 - 25 - 12 - 14 - 37 - 25 - 28 - 52 - 41 - 45 - 70 - 60 - 65 - 91 - 82 - 88 - 115 - 107 - 114 - 142 - 135 - 143 - 172", "x2": "sub x_0_3 mod n sqr mul n INT- 6", "tree": "(x_0_3 sub (n mod ((n mul -6))**2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7 + 8 + 8 + 8 + 9", "x2": "abs idiv n INT+ 3", "tree": "abs((n idiv 3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 11 + 14 + 18 + 23 + 29 + 36 + 44 + 53 + 63 + 74 + 86 + 99 + 113 + 128 + 144 + 161 + 179 + 198 + 218 + 239 + 261 + 284 + 308 + 333 + 359 + 386 + 414", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 6 - 4 + 0 + 5 - 10 + 3 - 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign sub add relu INT- 7 sign sub INT- 7 mul INT+ 5 x_0_7 x_0_7", "tree": "sign(((relu(-7) add sign((-7 sub (5 mul x_0_7)))) sub x_0_7))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 10 - 8 + 12 + 5 + 5 + 15 + 8 + 8 + 18 + 11 + 11 + 21 + 14 + 14 + 24 + 17 + 17 + 27 + 20 + 20 + 30 + 23 + 23 + 33 + 26 + 26 + 36 + 29 + 29", "x2": "add INT+ 7 mod add mod INT+ 4 INT- 4 INT- 2 sub x_0_3 INT+ 2", "tree": "(7 add (((4 mod -4) add -2) mod (x_0_3 sub 2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 3 + 4 + 5 - 2 + 7 + 9 + 9 + 7 + 3 - 3 - 11 - 21 - 33 - 47 - 63 - 81 - 101 - 123 - 147 - 173 - 201 - 231 - 263 - 297 - 333 - 371", "x2": "sub sub INT+ 7 sub relu relu abs INT+ 5 n sqr sub mod INT- 6 n sign INT+ 1", "tree": "((7 sub (relu(relu(abs(5))) sub n)) sub (((-6 mod n) sub sign(1)))**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 10 + 6 - 3 + 4 - 4 + 4 + 18 + 8 + 26 + 19 + 28 + 22 + 32 + 48 + 40 + 60 + 55 + 66 + 62 + 74 + 92 + 86 + 108 + 105 + 118 + 116 + 130 + 150 + 146 + 170 + 169 + 184 + 184", "x2": "add relu INT- 3 add n add x_0_7 n", "tree": "(relu(-3) add (n add (x_0_7 add n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 2 - 9 + 8 - 4 + 0 - 6 - 11 + 3 - 10 - 16 - 12 - 15 - 19 - 33 - 37 - 39 - 59 - 80 - 99 - 124 - 166 - 225 - 289 - 374 - 499 - 663 - 870 - 1143 - 1516 - 2011 - 2654 - 3506", "x2": "sub x_0_5 abs add add add x_0_3 x_0_4 INT- 9 abs n", "tree": "(x_0_5 sub abs((((x_0_3 add x_0_4) add -9) add abs(n))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 6 + 3 + 61 + 3 + 62 + 2 + 63 + 1 + 64 + 0 + 65 - 1 + 66 - 2 + 67 - 3 + 68 - 4 + 69 - 5 + 70 - 6 + 71 - 7 + 72 - 8 + 74 - 10 + 76", "x2": "add sub sqr INT+ 8 x_0_1 relu idiv x_0_2 mul abs relu INT+ 1 mul INT+ 6 INT+ 6", "tree": "(((8)**2 sub x_0_1) add relu((x_0_2 idiv (abs(relu(1)) mul (6 mul 6)))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 4 - 8 - 1 + 5 - 8 - 2 + 7 + 4 + 1 + 9 + 16 + 4 + 11 + 21 + 19 + 17 + 26 + 34 + 23 + 31 + 42 + 41 + 40 + 50 + 59 + 49 + 58 + 70 + 70 + 70 + 81 + 91 + 82 + 92", "x2": "relu add n x_0_7", "tree": "relu((n add x_0_7))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 3 + 1 - 4 + 0 - 5 - 1 - 6 - 2 - 7 - 3 - 8 - 4 - 9 - 5 - 10 - 6 - 11 - 7 - 12 - 8 - 13 - 9 - 14 - 10 - 15 - 11 - 16 - 12", "x2": "sub sub abs n mul n idiv n n add x_0_1 n", "tree": "((abs(n) sub (n mul (n idiv n))) sub (x_0_1 add n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 - 6 - 2 + 9 + 24 + 10 - 54 - 168 - 80 + 486 + 1680 + 880 - 5832 - 2 1840 - 1 2320 + 8 7480 + 34 9440 + 20 9440 - 157 4640 - 663 9360 - 418 8800 + 3306 7440 + 1 4606 5920 + 9634 2400 - 7 9361 8560 - 36 5164 8000 - 25 490 2400 + 214 2770 1120 + 1022 4614 4000 + 726 4216 9600", "x2": "sub x_0_3 mul x_0_3 n", "tree": "(x_0_3 sub (x_0_3 mul n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783", "x2": "relu add n add n sqr n", "tree": "relu((n add (n add (n)**2)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 + 8 + 3 + 7 + 19 + 63 + 259 + 1303 + 7827 + 5 4799 + 43 8403 + 394 5639 + 3945 6403 + 4 3402 447 + 52 824 5379 + 677 718 9943 + 9479 65 9219 + 14 2185 988 8303 + 227 4961 5821 2867 + 3867 4346 8961 8759 + 6 9613 8244 1313 7683 + 132 2662 6638 4961 5999 + 2645 3253 2769 9232 3 + 5 5551 8318 8168 3872 87 + 122 2140 3013 9704 5184 1939 + 2810 9226 9321 3203 9236 4623 + 6 7462 1446 3711 6894 1675 979 + 168 6553 6159 2792 2354 1877 4503", "x2": "relu add mul x_0_1 add INT- 3 n n", "tree": "relu(((x_0_1 mul (-3 add n)) add n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 6 + 6 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_3 add mul INT+ 5 INT+ 5 sub n sub mul relu relu INT- 8 sqr INT- 2 x_0_3", "tree": "(x_0_3 idiv ((5 mul 5) add (n sub ((relu(relu(-8)) mul (-2)**2) sub x_0_3))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 81 + 1296 + 6561 + 2 736 + 5 625 + 10 4976 + 19 4481 + 33 1776 + 53 1441 + 81 0 + 118 5921 + 167 9616 + 231 3441 + 311 1696 + 410 625 + 530 8416 + 676 5201 + 850 3056 + 1055 6001 + 1296 0 + 1575 2961 + 1897 4736 + 2266 7121 + 2687 3856 + 3164 625 + 3701 5056 + 4304 6721", "x2": "sqr relu mul INT+ 9 sqr n", "tree": "(relu((9 mul (n)**2)))**2", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 7 - 10 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54 + 8 + 57 + 54", "x2": "mod x_0_3 mul INT- 8 INT- 8", "tree": "(x_0_3 mod (-8 mul -8))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 6 + 18 + 72 + 360 + 2160 + 1 5120 + 12 960 + 108 8640 + 1088 6400 + 1 1975 400 + 14 3700 4800 + 186 8106 2400 + 2615 3487 3600 + 3 9230 2310 4000 + 62 7683 6966 4000 + 1067 622 8428 8000 + 1 9207 1211 1718 4000 + 36 4935 3012 2649 6000 + 729 8706 245 2992 0 + 1 5327 2826 5151 2832 0 + 33 7200 2183 3328 2304 0 + 775 5605 216 6549 2992 0 + 1 8613 4520 5199 7183 1808 0 + 46 5336 3012 9992 9579 5200 0 + 1209 8743 8337 9816 9067 5200 0 + 3 2666 6083 5125 5056 4823 400 0 + 91 4665 338 3514 1581 5045 1200 0", "x2": "mul sign n mul x_0_1 n", "tree": "(sign(n) mul (x_0_1 mul n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 32 + 192 + 1536 + 1 5360 + 18 4320 + 258 480 + 4128 7680 + 7 4317 8240 + 148 6356 4800 + 3269 9842 5600 + 7 8479 6221 4400 + 204 470 1757 4400 + 5713 3164 9208 3200 + 17 1399 4947 6249 6000 + 548 4783 8323 9987 2000 + 1 8648 2650 3015 9564 8000 + 67 1337 5410 8574 4332 8000 + 2551 826 5612 5828 4646 4000 + 10 2043 3062 4503 3138 5856 0 + 428 5818 8622 9139 1820 5952 0 + 1 8857 6029 9408 2124 106 1888 0 + 86 7449 7377 2777 7704 4884 6848 0 + 4163 7587 4109 3332 9815 4464 8704 0 + 20 8187 9370 5466 6649 772 3243 5200 0 + 1082 5772 7268 4266 5752 160 8663 400 0 + 5 8459 1727 2495 395 608 8686 7804 1600 0 + 327 3713 6725 9722 2123 4096 6459 7032 9600 0", "x2": "mul add n n x_0_1", "tree": "((n add n) mul x_0_1)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 0", "x2": "abs idiv mod relu n INT+ 9 INT+ 1", "tree": "abs(((relu(n) mod 9) idiv 1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 18 + 84 + 260 + 630 + 1302 + 2408 + 4104 + 6570 + 1 10 + 1 4652 + 2 748 + 2 8574 + 3 8430 + 5 640 + 6 5552 + 8 3538 + 10 4994 + 13 340 + 16 20 + 19 4502 + 23 4278 + 27 9864 + 33 1800 + 39 650 + 45 7002 + 53 1468", "x2": "add n sqr sqr n", "tree": "(n add ((n)**2)**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 - 9 + 0 + 8 - 6 + 5 + 7 + 4 + 8 + 2 + 9 + 3 + 0 + 1 + 1 + 0 + 1 + 0 + 2 + 2 + 0 + 0 + 1 + 1 + 1 + 2 + 2 + 1 + 2 + 1 + 0 + 0 + 1 + 1 + 2 + 2 + 2 + 0 + 0", "x2": "mod add x_0_12 mod sub INT+ 5 sub INT- 1 INT+ 7 n INT+ 3", "tree": "((x_0_12 add ((5 sub (-1 sub 7)) mod n)) mod 3)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 6 - 1 - 1 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5 + 2 + 4 + 5", "x2": "mod x_0_3 abs n", "tree": "(x_0_3 mod abs(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600 - 650 - 702", "x2": "mul sub sign n n n", "tree": "((sign(n) sub n) mul n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 3 + 1 + 1 - 5 - 6 + 1 + 1 - 9 - 10 + 1 + 1 - 13 - 14 + 1 + 1 - 17 - 18 + 1 + 1 - 21 - 22 + 1 + 1 - 25 - 26 + 1 + 1 - 29", "x2": "idiv sub sub n n n x_0_2", "tree": "(((n sub n) sub n) idiv x_0_2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 + 7 + 9 - 10 + 10 + 4 + 2 + 3 + 0 + 4 + 0 + 4 + 4 + 3 + 0 + 2 + 0 + 4 + 2 + 3 + 0 + 4 + 0 + 4 + 4 + 3 + 0 + 2 + 0 + 4 + 2 + 3", "x2": "abs mod mul x_0_6 n INT+ 6", "tree": "abs(((x_0_6 mul n) mod 6))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 2 + 6 - 3 - 8 + 6 + 12 + 42 - 24 - 88 + 66 + 132 + 504 - 312 - 1320 + 1056 + 2112 + 8568 - 5616 - 2 6400 + 2 2176 + 4 4352 + 18 8496 - 12 9168 - 66 0 + 57 6576 + 115 3152 + 508 9392 - 361 6704 - 1980 0 + 1787 3856 + 3574 7712 + 1 6286 544", "x2": "mul add idiv INT- 2 add x_0_6 sign sub mod n INT+ 9 INT+ 1 n x_0_5", "tree": "(((-2 idiv (x_0_6 add sign(((n mod 9) sub 1)))) add n) mul x_0_5)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 1 + 7 + 6 + 4 - 1 + 0 - 3 - 4 + 17 + 10 + 19 + 19 + 18 + 14 + 16 + 14 + 14 + 36 + 30 + 40 + 41 + 41 + 38 + 41 + 40 + 41 + 64 + 59 + 70 + 72 + 73 + 71 + 75 + 75 + 77", "x2": "add add x_0_9 mod n n n", "tree": "((x_0_9 add (n mod n)) add n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 2 - 6 + 10 - 7 + 9 + 5 - 4 + 2 + 19 96 + 4 + 16 + 25 + 9 + 16 + 25 + 1 + 4 + 1 + 16 + 1 + 25 + 16 + 1 + 25 + 1 + 16 + 1 + 1 + 1 + 25 + 1 + 1 + 25 + 1 + 1", "x2": "sqr mod sub mod x_0_9 INT- 5 INT- 5 mul add sqr n mod x_0_6 sqr INT- 8 x_0_2", "tree": "((((x_0_9 mod -5) sub -5) mod (((n)**2 add (x_0_6 mod (-8)**2)) mul x_0_2)))**2", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 10 + 9 + 0 + 25 + 60 + 371 + 2704 + 2 3715 + 23 3340 + 253 6875 + 3015 7776 + 3 8901 7499 + 54 1072 8540 + 807 856 1235 + 1 2851 1269 9520 + 21 7549 3350 6371 + 390 1360 4901 2124 + 7388 1677 8993 9115 + 14 7328 2571 2865 4480 + 308 5700 5426 7248 9035 + 6772 2872 2474 1609 7756 + 15 5423 7511 7766 1119 4819 + 372 2764 3469 6145 2893 8240 + 9289 9801 4934 1778 2101 1475 + 24 1135 3821 2982 4314 5523 2380 + 650 603 8537 6846 570 994 1051 + 1 8175 6788 4613 3532 6172 9002 7344 + 52 6395 3939 2969 5955 3892 905 3115 + 1577 2360 63 2957 3279 9659 7336 1020", "x2": "mul sub relu x_0_1 add x_0_3 n mod n sqr n", "tree": "((relu(x_0_1) sub (x_0_3 add n)) mul (n mod (n)**2))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 - 2 - 7 + 1 - 2 + 7 + 5 + 14 + 14 + 24 + 25 + 36 + 38 + 50 + 53 + 66 + 70 + 84 + 89 + 104 + 110 + 126 + 133 + 150 + 158 + 176 + 185 + 204 + 214 + 234", "x2": "add add x_0_2 idiv x_0_1 sub mul n add INT+ 7 add INT- 2 mul x_0_2 x_0_3 n n", "tree": "((x_0_2 add (x_0_1 idiv ((n mul (7 add (-2 add (x_0_2 mul x_0_3)))) sub n))) add n)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 3 + 6 + 6 - 8 + 5 + 3 + 4 - 5 - 2 + 6 + 4 + 11 + 10 + 3 + 9 + 6 + 7 + 3 + 5 + 9 + 7 + 15 + 13 + 9 + 12 + 8 + 9 + 8 + 7 + 11 + 9 + 18 + 15 + 10 + 14 + 9 + 10", "x2": "add abs INT+ 6 idiv mod n mul x_0_10 INT- 7 INT- 6", "tree": "(abs(6) add ((n mod (x_0_10 mul -7)) idiv -6))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 2 + 81 + 18 + 729 + 162 + 6561 + 1458 + 5 9049 + 1 3122 + 53 1441 + 11 8098 + 478 2969 + 106 2882 + 4304 6721 + 956 5938 + 3 8742 489 + 8609 3442 + 34 8678 4401 + 7 7484 978 + 313 8105 9609 + 69 7356 8802 + 2824 2953 6481 + 627 6211 9218 + 2 5418 6582 8329 + 5648 5907 2962 + 22 8767 9245 4961 + 5 837 3165 6658 + 205 8911 3209 4649", "x2": "mul sqr INT- 3 x_0_2", "tree": "((-3)**2 mul x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 - 10 - 4 - 7 + 4 - 5 - 1 - 5 - 1 + 9 + 33 + 48 + 65 + 84 + 105 + 128 + 153 + 180 + 209 + 240 + 273 + 286 + 322 + 360 + 400 + 442 + 459 + 504 + 551 + 570 + 620 + 672 + 693 + 748 + 770 + 828 + 888", "x2": "sub sqr n mul n add INT+ 9 idiv sub x_0_10 add n n sqr sqr abs INT- 3", "tree": "((n)**2 sub (n mul (9 add ((x_0_10 sub (n add n)) idiv ((abs(-3))**2)**2))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 3 + 10 + 9 - 7 + 3 - 10 + 5 + 19 + 17 + 27 - 1 + 25 + 27 + 41 + 66 + 37 + 74 + 49 + 90 + 118 + 104 + 167 + 114 + 193 + 197 + 225 + 317 + 251 + 394 + 346 + 454 + 551 + 514 + 750", "x2": "add add add sub n mul mod idiv n INT- 7 n mod n n add INT+ 5 x_0_7 x_0_5 relu INT- 8", "tree": "((((n sub (((n idiv -7) mod n) mul (n mod n))) add (5 add x_0_7)) add x_0_5) add relu(-8))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 5 - 6 - 9 - 20 - 75 - 414 - 2849 - 2 2728 - 20 4471 - 204 4610 - 2249 589 - 2 6988 6924 - 35 852 9843 - 491 1941 7606 - 7367 9126 3865 - 11 7886 6022 1584 - 200 4072 2376 6639 - 3607 3300 2779 9178 - 6 8539 2705 2818 4021 - 137 785 4105 6368 20 - 2878 6493 6218 3727 9979 - 6 3330 2859 6804 2015 9054 - 145 6596 5772 6496 6365 7713 - 3495 8317 8543 5919 2778 4536 - 8 7395 7946 3589 7981 9461 2775 - 227 2290 6605 3334 7530 5993 1474 - 6135 1847 8344 38 3326 1814 9069 - 17 1785 1739 3632 1073 3133 817 3148", "x2": "mul mod n x_0_1 n", "tree": "((n mod x_0_1) mul n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1", "x2": "mod n mul INT- 1 INT+ 4", "tree": "(n mod (-1 mul 4))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 5 + 4 - 10 + 2 + 8 + 4 - 8 + 8 + 0 - 21 - 8 + 0 - 22 - 17 - 12 - 23 - 26 + 0 - 7 - 2 + 0 - 6 - 35 - 4 - 3 - 26 + 0 - 33 - 38 + 0 - 8 - 35 - 30 - 38 - 44", "x2": "mod sqr x_0_9 sub INT- 3 abs sub mod mod INT+ 3 INT- 2 n INT- 1 0", "tree": "((x_0_9)**2 mod (-3 sub abs((((3 mod -2) mod n) sub -10))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 7 - 6 - 2 - 4 - 3 - 7 + 5 - 5 - 2 - 5 - 6 - 10 - 8 - 3 - 5 - 8 - 14 - 13 - 11 - 6 - 8 - 11 - 17 - 16 - 14 - 9 - 11 - 14 - 20 - 19 - 17 - 12 - 14 - 17", "x2": "add sub abs x_0_3 n relu x_0_7", "tree": "((abs(x_0_3) sub n) add relu(x_0_7))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 10 - 6 - 8 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1", "x2": "idiv x_0_4 sub sub abs x_0_2 x_0_3 x_0_4", "tree": "(x_0_4 idiv ((abs(x_0_2) sub x_0_3) sub x_0_4))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 9 + 10 - 30 + 70 - 125 + 380 - 590 + 1940 - 2905 + 9750 - 1 4470 + 4 8810 - 7 2285 + 24 4120 - 36 1350 + 122 680 - 180 6665 + 610 3490 - 903 3230 + 3051 7550 - 4516 6045 + 1 5258 7860 - 2 2583 110 + 7 6293 9420 - 11 2915 425 + 38 1469 7230 - 56 4575 1990 + 190 7348 6290 - 282 2875 9805", "x2": "mul add n x_0_2 INT+ 5", "tree": "((n add x_0_2) mul 5)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 1 - 8 + 0 + 0 + 1 + 4 + 6 + 3 + 5 + 6 + 0 + 6 + 13 + 0 + 14 + 9 + 5 + 11 + 0 + 12 + 11 + 16 + 6 + 15 + 7 + 2 + 4 + 18 + 5 + 9", "x2": "mod mul sub INT- 5 sub mod INT- 5 sub n x_0_4 INT+ 6 sub INT+ 5 relu n n", "tree": "(((-5 sub ((-5 mod (n sub x_0_4)) sub 6)) mul (5 sub relu(n))) mod n)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3", "x2": "mod idiv n relu sign idiv add mul idiv n n INT+ 1 n sqr abs n INT+ 4", "tree": "((n idiv relu(sign(((((n idiv n) mul 1) add n) idiv (abs(n))**2)))) mod 4)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 2 + 1 + 3 + 0 + 1 + 1 + 0 + 2 - 1 + 0 + 0 - 1 + 1 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 2 - 1 + 0", "x2": "sub sub x_0_5 mod n n sign add abs x_0_3 x_0_5", "tree": "((x_0_5 sub (n mod n)) sub sign((abs(x_0_3) add x_0_5)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 7 + 3 - 28 - 49 - 21 + 196 + 343 + 147 - 1372 - 2401 - 1029 + 9604 + 1 6807 + 7203 - 6 7228 - 11 7649 - 5 421 + 47 596 + 82 3543 + 35 2947 - 329 4172 - 576 4801 - 247 629 + 2305 9204 + 4035 3607 + 1729 4403 - 1 6141 4428 - 2 8247 5249 - 1 2106 821", "x2": "mul INT- 7 x_0_3", "tree": "(-7 mul x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 5 - 1 + 0 + 5 + 0 + 0 + 12 + 0 + 0 + 10 + 0 + 0 + 19 + 0 + 0 + 15 + 0 + 0 + 26 + 0 + 0 + 20 + 0 + 0 + 33 + 0 + 0 + 25 + 0", "x2": "add relu sub x_0_3 add sqr INT- 2 n relu add x_0_1 idiv abs sqr n x_0_3", "tree": "(relu((x_0_3 sub ((-2)**2 add n))) add relu((x_0_1 add (abs((n)**2) idiv x_0_3))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 3 - 9 + 12 + 20 + 21 + 31 + 43 + 57 + 73 + 91 + 111 + 133 + 157 + 183 + 211 + 241 + 273 + 307 + 343 + 381 + 421 + 463 + 507 + 553 + 601 + 651 + 703 + 757 + 813", "x2": "add n sqr add idiv n x_0_2 add sign mul INT- 1 relu x_0_2 mul n sign n", "tree": "(n add (((n idiv x_0_2) add (sign((-1 mul relu(x_0_2))) add (n mul sign(n)))))**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 9 + 9 - 3 + 3 - 5 + 1 - 7 - 2 + 4 - 97 - 109 - 91 - 103 - 97 - 105 - 99 - 107 - 102 - 96 - 197 - 209 - 191 - 203 - 197 - 205 - 199 - 207 - 202 - 196 - 297 - 309 - 291 - 303 - 297 - 305 - 299", "x2": "sub x_0_10 sqr INT+ 1 0", "tree": "(x_0_10 sub (10)**2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul abs mul n n relu INT+ 1", "tree": "(abs((n mul n)) mul relu(1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 1 - 4 - 2 - 4 + 8 + 8 + 6 + 9 + 8 + 21 + 22 + 21 + 25 + 25 + 39 + 41 + 41 + 46 + 47 + 62 + 65 + 66 + 72 + 74 + 90 + 94 + 96 + 103 + 106 + 123 + 128", "x2": "add x_0_5 add n INT+ 2", "tree": "(x_0_5 add (n add 2))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 + 9 - 6 - 2 - 6 + 9 + 27 + 18 + 6 + 18 + 27 + 81 + 54 + 18 + 54 + 81 + 243 + 162 + 54 + 162 + 243 + 729 + 486 + 162 + 486 + 729 + 2187 + 1458 + 486 + 1458 + 2187 + 6561", "x2": "mul INT+ 3 abs x_0_5", "tree": "(3 mul abs(x_0_5))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 6 + 5 + 10 + 11 + 16 + 18 + 24 + 27 + 34 + 38 + 46 + 51 + 60 + 66 + 76 + 83 + 94 + 102 + 114 + 123 + 136 + 146 + 160 + 171 + 186 + 198 + 214 + 227 + 244", "x2": "add n add mod mod idiv x_0_3 x_0_2 sub relu add n x_0_2 INT- 9 sub x_0_1 mod n n x_0_2", "tree": "(n add ((((x_0_3 idiv x_0_2) mod (relu((n add x_0_2)) sub -9)) mod (x_0_1 sub (n mod n))) add x_0_2))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 + 9 + 9 + 5 - 7 + 4 - 8 + 0 + 63 + 70 + 33 + 0 + 26 + 0 + 0 + 976 + 1156 + 558 + 0 + 480 + 0 + 0 + 2 2402 + 2 7696 + 1 3900 + 0 + 1 2906 + 0 + 0 + 67 2000 + 85 8514 + 44 4736 + 0 + 43 8736", "x2": "relu mul add INT- 2 x_0_7 n", "tree": "relu(((-2 add x_0_7) mul n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 1 + 1 + 4 + 8 + 13 + 19 + 26 + 34 + 43 + 53 + 64 + 76 + 89 + 103 + 118 + 134 + 151 + 169 + 188 + 208 + 229 + 251 + 274 + 298 + 323 + 349 + 376 + 404", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 7 - 417 + 4 - 1 6875 + 6 - 101 2913 + 8 - 8103 3751 + 10 - 81 337 6189 + 12 - 9724 514 4227 + 14 - 136 1367 2019 3865 + 16 - 2 1781 8752 3102 1103 + 18 - 392 737 5415 8380 1941 + 20 - 7 8414 7508 3167 6039 2379 + 22 - 1725 1245 1829 6872 8632 8417 + 24 - 41 4029 8843 9124 9487 1882 6055 + 26 - 1 764 7769 9417 2486 6668 9478 1293 + 28 - 301 4137 5583 6829 6266 7305 3877 131", "x2": "mod abs n mul INT+ 1 0 mul sub x_0_2 abs n x_0_1", "tree": "(abs(n) mod (10 mul ((x_0_2 sub abs(n)) mul x_0_1)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 7 - 10 + 5 + 8 - 6 + 2750 + 0 + 0 + 0 + 4501 2008 + 0 + 2750 + 0 + 0 + 0 + 4501 2008 + 0 + 2750 + 0 + 0 + 0 + 4501 2008 + 0 + 2750 + 0 + 0 + 0 + 4501 2008 + 0 + 2750 + 0 + 0", "x2": "relu sub x_0_6 mul x_0_5 relu mul n sub mul n sqr idiv sub x_0_4 n n n", "tree": "relu((x_0_6 sub (x_0_5 mul relu((n mul ((n mul (((x_0_4 sub n) idiv n))**2) sub n))))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 10 - 3 - 4 + 25 + 36 + 56 + 128 + 567 + 1440 + 6611 + 1 8528 + 9 2976 + 27 9160 + 149 3355 + 476 2496 + 2696 7049 + 9074 9160 + 5 4074 6954 + 19 1023 2320 + 119 2199 3181 + 440 2159 1592 + 2866 4302 2047 + 1 1023 6377 2736 + 7 4641 2537 9450 + 29 8060 1947 1176 + 209 2707 4683 8961 + 865 4347 3082 7968 + 6285 3112 9433 2237 + 2 6857 2225 897 2520 + 20 1332 432 7630 5216", "x2": "abs mul abs abs add n sub abs n add x_0_4 x_0_2 n", "tree": "abs((abs(abs((n add (abs(n) sub (x_0_4 add x_0_2))))) mul n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 - 6 - 6 - 50 - 60 - 60 - 500 - 600 - 600 - 5000 - 6000 - 6000 - 5 0 - 6 0 - 6 0 - 50 0 - 60 0 - 60 0 - 500 0 - 600 0 - 600 0 - 5000 0 - 6000 0 - 6000 0 - 5 0 0 - 6 0 0 - 6 0 0 - 50 0 0 - 60 0 0 - 60 0 0", "x2": "sub relu x_0_3 abs mul add sub mod abs abs INT- 7 mul x_0_3 INT- 4 INT+ 7 x_0_3 INT+ 1 0", "tree": "(relu(x_0_3) sub abs(((((abs(abs(-7)) mod (x_0_3 mul -4)) sub 7) add x_0_3) mul 10)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 5 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11 - 2 - 12 - 2 - 13 - 2 - 14 - 2", "x2": "idiv sub relu mul INT+ 4 x_0_1 idiv n x_0_1 INT- 1", "tree": "((relu((4 mul x_0_1)) sub (n idiv x_0_1)) idiv -1)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 + 6 + 4 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900", "x2": "sqr add n sign x_0_2", "tree": "((n add sign(x_0_2)))**2", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 - 4 - 4 + 7 - 6 + 3 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1", "x2": "idiv x_0_6 n", "tree": "(x_0_6 idiv n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 5 + 7 + 8 - 1 + 9 - 9 + 1 - 7 - 10 + 4 + 5 + 7 + 8 + 1 + 9 + 9 + 1 + 7 + 10 + 4 + 5 + 7 + 8 + 1 + 9 + 9 + 1 + 7 + 10 + 4 + 5 + 7 + 8 + 1 + 9 + 9 + 1", "x2": "abs x_0_10", "tree": "abs(x_0_10)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 8 + 9 + 7 + 26 + 30 + 47 + 56 + 30 + 60 + 65 + 84 + 94 + 140 + 108 + 136 + 92 + 246 + 90 + 200 + 36 + 374 + 398 + 348 + 93 + 362 + 300 + 210 + 452 + 342 + 581", "x2": "add n sub INT+ 9 mod sub mul mod x_0_3 x_0_2 abs INT+ 6 INT+ 4 sub sign x_0_2 sqr n", "tree": "(n add (9 sub ((((x_0_3 mod x_0_2) mul abs(6)) sub 4) mod (sign(x_0_2) sub (n)**2))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 7 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784", "x2": "mul sub mod idiv n abs n sign x_0_1 n n", "tree": "((((n idiv abs(n)) mod sign(x_0_1)) sub n) mul n)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 4 - 2 + 8 + 50 + 24 - 14 + 64 + 450 + 240 - 154 + 768 + 5850 + 3360 - 2310 + 1 2288 + 9 9450 + 6 480 - 4 3890 + 24 5760 + 208 8450 + 133 560 - 100 9470 + 589 8240 + 5221 1250 + 3459 4560 - 2725 5690 + 1 6515 720 + 15 1412 6250 + 10 3783 6800 - 8 4492 6390", "x2": "mul n x_0_4", "tree": "(n mul x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 4 - 6 + 5 + 5 + 1 - 5 - 5 + 6 + 6 + 2 - 4 - 4 + 7 + 7 + 3 - 3 - 3 + 8 + 8 + 4 - 2 - 2 + 9 + 9 + 5 - 1 - 1 + 10 + 10 + 6 + 0 + 0", "x2": "add sign add INT- 7 n x_0_5", "tree": "(sign((-7 add n)) add x_0_5)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 3 + 6 - 3 + 7 - 7 - 18 + 42 - 24 + 63 - 70 - 198 + 504 - 312 + 882 - 1050 - 3168 + 8568 - 5616 + 1 6758 - 2 1000 - 6 6528 + 18 8496 - 12 9168 + 40 2192 - 52 5000 - 172 9728 + 508 9392 - 361 6704 + 1166 3568 - 1575 0 - 5362 1568 + 1 6286 544", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 2 - 4 + 0 + 0 + 2 + 2 + 3 + 15 + 9 + 10 + 13 + 8 + 4 + 11 + 22 + 12 + 13 + 15 + 19 + 4 + 8 + 13 + 13 + 31 + 3 + 8 + 11 + 12 + 36", "x2": "mod sub INT- 8 sqr add x_0_3 relu x_0_1 add INT+ 7 n", "tree": "((-8 sub ((x_0_3 add relu(x_0_1)))**2) mod (7 add n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 5 - 6 + 10 + 2 + 0 - 441 - 245 + 294 - 490 - 98 + 0 + 2 1609 + 1 2005 - 1 4406 + 2 4010 + 4802 + 0 - 105 8841 - 58 8245 + 70 5894 - 117 6490 - 23 5298 + 0 + 5188 3209 + 2882 4005 - 3458 8806 + 5764 8010 + 1152 9602 + 0 - 25 4227 7241 - 14 1237 6245 + 16 9485 1494", "x2": "sub sub abs INT+ 1 mul x_0_6 sqr INT- 7 sub sub INT+ 4 INT+ 4 INT- 1", "tree": "((abs(1) sub (x_0_6 mul (-7)**2)) sub ((4 sub 4) sub -1))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 10 + 10 + 1 + 12 - 8 + 1 - 10 + 10 + 1 + 12 - 8 + 1 - 10 + 10 + 1 + 12 - 8 + 1 - 10 + 10 + 1 + 12 - 8 + 1 - 10 + 10 + 1 + 12 - 8", "x2": "sub sub abs n sub n mod sign INT- 1 INT+ 3 x_0_3", "tree": "((abs(n) sub (n sub (sign(-1) mod 3))) sub x_0_3)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7 + 6 + 2 + 7", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576 + 209 7152 + 419 4304 + 838 8608 + 1677 7216 + 3355 4432 + 6710 8864 + 1 3421 7728 + 2 6843 5456 + 5 3687 912", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n abs n", "tree": "(n mul abs(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 6 - 2 - 7 + 6 - 1 + 8 + 4900 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281 + 81 0 + 92 3521 + 104 8576 + 118 5921 + 133 6336", "x2": "sqr add mod idiv mul idiv n sqr x_0_2 x_0_1 sub x_0_7 sqr n n sqr n", "tree": "((((((n idiv (x_0_2)**2) mul x_0_1) idiv (x_0_7 sub (n)**2)) mod n) add (n)**2))**2", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 3 - 2 + 0 - 7 + 8 - 3 - 3 + 7 - 80 + 13 + 20 + 26 - 21 - 34 + 23 + 25 - 13 - 6362 - 129 - 358 - 632 - 395 - 1108 - 479 - 573 - 115 - 4047 4988 - 1 6583 - 12 8104 - 39 9362 - 15 5961 - 122 7598 - 22 9373 - 32 8259 - 1 3153", "x2": "add mul sqr x_0_9 INT- 1 add n n", "tree": "(((x_0_9)**2 mul -1) add (n add n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 6 - 6 + 3 - 91 - 91 - 28 - 686 - 686 - 245 - 4851 - 4851 - 1764 - 3 4006 - 3 4006 - 1 2397 - 23 8091 - 23 8091 - 8 6828 - 166 6686 - 166 6686 - 60 7845 - 1166 6851 - 1166 6851 - 425 4964", "x2": "mul INT+ 7 add x_0_3 INT- 7", "tree": "(7 mul (x_0_3 add -7))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 96 + 1920 + 5 3760 + 193 5360 + 8515 5840 + 44 2810 3680 + 2656 8622 800 + 18 666 6301 4400 + 1373 663 8909 4400 + 11 5337 5766 8392 9600 + 1061 1057 549 2152 3200 + 10 6110 5705 4921 5232 0 + 1145 9941 6193 1524 5056 0 + 13 2935 3227 8405 6842 6496 0 + 1648 3980 252 2304 8488 5504 0 + 21 7588 5363 3294 4240 488 6528 0 + 3046 2395 866 1219 3606 8411 3920 0 + 45 843 4472 8186 465 3812 4886 160 0 + 7033 1577 7759 7023 2599 4748 2218 4960 0 + 115 3437 8755 2591 1814 6313 8708 3833 3440 0 + 1 9839 1314 5904 5683 2116 5985 7841 9335 1680 0", "x2": "mul sub n sub mul mod n add sign INT+ 5 n INT- 7 INT- 4 x_0_1", "tree": "((n sub (((n mod (sign(5) add n)) mul -7) sub -4)) mul x_0_1)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 9 + 5 + 7 - 1 + 62 + 7 + 6 + 78 + 59 - 3 - 14 + 270 + 236 - 11 - 139 + 2038 + 1977 - 226 - 1574 + 2 4222 + 2 5434 - 3218 - 2 2352 + 38 7174 + 43 1959", "x2": "add INT+ 6 mul sub abs n x_0_4 mul sub INT+ 8 add n idiv n x_0_4 sign n", "tree": "(6 add ((abs(n) sub x_0_4) mul ((8 sub (n add (n idiv x_0_4))) mul sign(n))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 5 + 2 - 27 - 9 + 4 + 81 - 7 - 1 - 81 - 12 + 1 + 20 - 9 - 3 + 81 - 17 - 1 + 9 - 12 - 5 + 20 - 27 - 3", "x2": "idiv mul sqr INT- 9 INT+ 1 mul add x_0_2 INT+ 8 sign INT- 9", "tree": "(((-9)**2 mul 1) idiv ((x_0_2 add 8) mul sign(-9)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 82 - 82 - 82 - 82 - 83 - 83 - 83 - 83 - 84 - 84 - 84 - 84 - 85 - 85 - 85 - 85 - 86 - 86 - 86 - 86 - 87", "x2": "mod n sub sub idiv n INT- 4 sqr INT- 9 relu n", "tree": "(n mod (((n idiv -4) sub (-9)**2) sub relu(n)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 5 - 10 + 10 + 7 + 9 - 5 - 1 + 4 + 3 + 0 + 0 + 10 + 7 + 7 + 0 + 0 + 4 + 3 + 0 + 0 + 10 + 7 + 7 + 0 + 0 + 4 + 3 + 0 + 0 + 10", "x2": "relu relu add add sign INT- 6 x_0_9 sign x_0_8", "tree": "relu(relu(((sign(-6) add x_0_9) add sign(x_0_8))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254", "x2": "add x_0_1 relu n", "tree": "(x_0_1 add relu(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 2 - 10 + 1 - 6 + 6 + 0 + 13 + 8 + 22 + 18 + 33 + 30 + 46 + 44 + 61 + 60 + 78 + 78 + 97 + 98 + 118 + 120 + 141", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 5 - 3 - 8 - 6 - 11 - 9 - 14 - 12 - 17 - 15 - 20 - 18 - 23 - 21 - 26 - 24 - 29 - 27 - 32 - 30 - 35 - 33", "x2": "add INT- 3 add x_0_2 relu x_0_1", "tree": "(-3 add (x_0_2 add relu(x_0_1)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 7 + 8 - 10 + 3 + 5 - 9 + 6 + 49 + 64 + 100 + 9 + 25 + 81 + 36 + 2401 + 4096 + 1 0 + 81 + 625 + 6561 + 1296 + 576 4801 + 1677 7216 + 1 0 0 + 6561 + 39 625 + 4304 6721 + 167 9616", "x2": "sqr mul x_0_7 INT- 1", "tree": "((x_0_7 mul -1))**2", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 8 + 72 + 56 + 288 + 112 + 2304 + 336 + 2 5344 + 2352 + 30 4128 + 1 4112 + 212 8896 + 4 2336 + 1703 1168 + 46 5696 + 1 7031 1680 + 279 4176 + 13 6249 3440 + 2514 7584 + 95 3745 4080 + 2 7662 3424 + 1144 4944 8960", "x2": "mul abs x_0_2 mod x_0_1 add abs INT+ 7 INT+ 6", "tree": "(abs(x_0_2) mul (x_0_1 mod (abs(7) add 6)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764", "x2": "sqr add n abs n", "tree": "((n add abs(n)))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 3 - 2 + 2 - 10 + 7 - 7 - 1 - 8 - 61 + 29 + 19 - 21 + 99 - 71 + 69 + 9 + 79 + 609 - 291 - 191 + 209 - 991 + 709 - 691 - 91 - 791 - 6091 + 2909 + 1909", "x2": "sub idiv INT- 8 INT+ 1 0 mul INT+ 1 0 x_0_9", "tree": "((-8 idiv 10) sub (10 mul x_0_9))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 2 - 2 - 1 - 1 + 0 + 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8", "x2": "sub INT- 3 idiv n INT- 2", "tree": "(-3 sub (n idiv -2))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 5 + 7 + 10 + 45 + 162 + 189 + 288 + 486 + 630 + 792 + 972 + 1170 + 1386 + 1620 + 1872 + 2142 + 2430 + 2736 + 3060 + 3402 + 3762 + 4140 + 4536 + 4950", "x2": "mul sub INT+ 3 add n idiv sub mul n mod INT- 4 add x_0_4 INT- 8 n mul x_0_4 x_0_2 mul n INT- 9", "tree": "((3 sub (n add (((n mul (-4 mod (x_0_4 add -8))) sub n) idiv (x_0_4 mul x_0_2)))) mul (n mul -9))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 9 + 10 + 10 - 6 - 5 - 23 - 41 - 43 - 46 - 31 + 2 + 37 + 75 + 98 + 88 + 43 - 40 - 146 - 242 - 293 - 261 - 123 + 111 + 396", "x2": "add sub idiv mul INT+ 2 INT+ 8 INT- 2 x_0_4 x_0_1", "tree": "((((2 mul 8) idiv -2) sub x_0_4) add x_0_1)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3", "x2": "idiv n INT+ 7", "tree": "(n idiv 7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 14 + 45 - 176 + 885 - 5304 + 3 7135 - 29 7072 + 267 3657 - 2673 6560 + 2 9410 2171 - 35 2922 6040 + 458 7993 8533 - 6423 1913 9448 + 9 6347 8709 1735 - 154 1565 9346 7744 + 2620 6620 8895 1665 - 4 7171 9176 112 9952 + 89 6266 4344 2146 9107 - 1792 5328 6884 2938 2120 + 3 7643 1902 4570 1702 4541 - 82 8150 1854 543 7453 9880", "x2": "add n mul n idiv x_0_1 idiv sign mul INT- 8 INT+ 5 sub mul x_0_1 x_0_1 n", "tree": "(n add (n mul (x_0_1 idiv (sign((-8 mul 5)) idiv ((x_0_1 mul x_0_1) sub n)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 4 - 5 + 0 - 5 + 1 + 4 - 1 - 4 + 4 - 6 - 3 + 8 - 7 - 7 + 12 - 13 - 10 + 20 - 20 - 17 + 32 - 33 - 27 + 52 - 53 - 44", "x2": "add x_0_3 x_0_6", "tree": "(x_0_3 add x_0_6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 4 + 8 + 10 - 4 + 7 + 9 + 9 + 10 + 12 + 14 + 14 + 15 + 16 + 18 + 19 + 21 + 21 + 24 + 24 + 25 + 26 + 27 + 29 + 30 + 32", "x2": "add n idiv sub mod sub mul x_0_5 abs relu x_0_5 INT+ 1 0 INT- 9 n INT- 5", "tree": "(n add (((((x_0_5 mul abs(relu(x_0_5))) sub 10) mod -9) sub n) idiv -5))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3", "x2": "mod add mod mul n sign sign sqr INT+ 7 idiv n n n INT- 6", "tree": "((((n mul sign(sign((7)**2))) mod (n idiv n)) add n) mod -6)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 100 + 400 + 900 + 1600 + 2500 + 3600 + 4900 + 6400 + 8100 + 1 0 + 1 2100 + 1 4400 + 1 6900 + 1 9600 + 2 2500 + 2 5600 + 2 8900 + 3 2400 + 3 6100 + 4 0 + 4 4100", "x2": "mul n mul n sqr INT- 1 0", "tree": "(n mul (n mul (-10)**2))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 4 + 7 + 5 - 3 + 7 + 2 - 7 + 6 + 14 + 2 + 7 + 12 + 0 - 6 + 14 + 48 + 0 - 12 + 56 + 0 + 0 - 48 + 896 + 0 + 0 - 864 + 0 + 0", "x2": "mul idiv x_0_7 add INT+ 3 mul mul x_0_2 x_0_6 mod n n x_0_4", "tree": "((x_0_7 idiv (3 add ((x_0_2 mul x_0_6) mul (n mod n)))) mul x_0_4)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 8 - 2 - 4 - 1 - 1 - 2 - 2 - 2 - 1 - 1 - 1 - 2 - 2 - 2 - 1 - 1 - 1 - 2 - 2 - 2 - 1 - 1 - 1 - 2", "x2": "mod mul sub INT- 5 INT+ 5 x_0_3 INT- 3", "tree": "(((-5 sub 5) mul x_0_3) mod -3)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 1 - 7 + 7 - 2 + 8 + 0 - 10 - 6 + 0 + 1 + 16 + 4 + 64 + 1681 + 0 + 49 + 36 + 0 + 1 + 256 + 5 2900 + 27 8921 2969 + 777 9699 4752 2447 7696 + 0 + 529 + 21 7156 + 0 + 1 + 576", "x2": "sqr mod x_0_9 sub n abs x_0_1", "tree": "((x_0_9 mod (n sub abs(x_0_1))))**2", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 5 - 10 - 7 - 4 - 7 + 1 - 8 + 9 - 1 - 9 - 10 + 1 + 0 + 7 + 3 - 3 - 2 + 4 + 3 + 7 + 4 + 0 + 0 + 6 + 0 + 5 + 6 + 1 + 3 + 0 + 3 + 6", "x2": "mod add x_0_11 n sub mul INT+ 1 add abs mul x_0_4 mod n n x_0_6 INT- 5", "tree": "((x_0_11 add n) mod ((1 mul (abs((x_0_4 mul (n mod n))) add x_0_6)) sub -5))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 3 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "mul n mod n mul INT+ 1 0 sqr x_0_1", "tree": "(n mul (n mod (10 mul (x_0_1)**2)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 - 2 + 10 + 3 + 0 + 0 + 10 + 3 + 0 + 0 + 10 + 3 + 0 + 0 + 10 + 3 + 0 + 0 + 10 + 3 + 0 + 0 + 10 + 3 + 0", "x2": "abs relu x_0_4", "tree": "abs(relu(x_0_4))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 + 7 - 8 - 5 + 8 - 10 - 6 - 1 + 3 + 9 + 7 - 49 + 56 + 38 - 55 + 70 + 42 + 7 - 21 - 63 - 49 + 343 - 392 - 266 + 385 - 490 - 294 - 49 + 147 + 441 + 343", "x2": "sub idiv INT+ 3 abs x_0_6 mul INT+ 7 x_0_10", "tree": "((3 idiv abs(x_0_6)) sub (7 mul x_0_10))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 9 - 22 - 36 - 52 - 70 - 90 - 112 - 136 - 162 - 190 - 220 - 252 - 286 - 322 - 360 - 400 - 442 - 486 - 532 - 580 - 630", "x2": "mul sub INT- 9 relu mod n mul n n n", "tree": "((-9 sub relu((n mod (n mul n)))) mul n)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 9 - 8 - 2 + 7 - 4 + 1 - 8 + 8 + 80 - 1 + 120 + 143 - 1 + 195 - 1 + 255 - 1 + 15 + 360 + 24 + 35 + 483 + 63 + 575 + 80 + 675 - 1 + 143 - 1", "x2": "sub sqr mod idiv x_0_9 n n sign relu x_0_9", "tree": "((((x_0_9 idiv n) mod n))**2 sub sign(relu(x_0_9)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 18 + 84 + 260 + 630 + 1302 + 2408 + 4104 + 6570 + 1 10 + 1 4652 + 2 748 + 2 8574 + 3 8430 + 5 640 + 6 5552 + 8 3538 + 10 4994 + 13 340 + 16 20 + 19 4502", "x2": "add n sqr sqr n", "tree": "(n add ((n)**2)**2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 5 + 5 + 8 - 7 - 4 - 8 + 10 + 15 + 18 + 5 + 6 + 6 + 20 + 25 + 28 + 15 + 16 + 16 + 30 + 35 + 38 + 25 + 26 + 26 + 40 + 45 + 48 + 35", "x2": "sub abs sub mul INT- 6 abs sign x_0_8 x_0_6 INT- 4", "tree": "(abs(((-6 mul abs(sign(x_0_8))) sub x_0_6)) sub -4)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 8 + 7 - 7 + 6 + 6 - 2 + 0 - 1 - 7 - 2 - 2 - 2 + 0 - 1 - 7 - 2 - 2 - 2 + 0 - 1 - 7 - 2 - 2 - 2 + 0 - 1", "x2": "mod x_0_6 mul INT- 4 INT+ 2", "tree": "(x_0_6 mod (-4 mul 2))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 3 + 4 + 7 + 8 + 0 + 5 + 6 - 5 - 1 - 10 + 0 - 7 - 1500 - 1608 - 1710 - 1824 - 1962 - 2052 - 2166 - 2292 - 2418 - 2532 - 2622 - 2754 - 2862 - 2970 - 3102 - 3216 - 3324 - 3444 - 3558 - 3654 - 3780", "x2": "mul add mod relu sub sub n INT- 2 x_0_12 INT+ 5 mul add INT- 6 sqr INT+ 5 n INT- 6", "tree": "(((relu(((n sub -2) sub x_0_12)) mod 5) add ((-6 add (5)**2) mul n)) mul -6)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 7 + 9 - 5 + 7 + 9 - 5 + 7 + 9 - 5 + 7 + 9 - 5 + 7 + 9 - 5 + 7 + 9 - 5 + 7 + 9 - 5 + 7 + 9 - 5", "x2": "mul x_0_3 sign mul n abs sqr n", "tree": "(x_0_3 mul sign((n mul abs((n)**2))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 3 - 7 + 8 - 1 - 7 - 4 - 63 - 79 - 111 - 58 - 74 - 73 - 150 - 222 - 270 - 258 - 168 - 173 - 223 - 431 - 541 - 584 - 411 - 260 - 273 - 549 - 963", "x2": "sub sub INT- 8 x_0_3 sub mul n n x_0_7", "tree": "((-8 sub x_0_3) sub ((n mul n) sub x_0_7))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 4 - 1 + 4 + 11 + 20 + 31 + 44 + 59 + 76 + 95 + 116 + 139 + 164 + 191 + 220 + 251 + 284 + 319 + 356 + 395 + 436", "x2": "sub abs mul relu n n INT+ 5", "tree": "(abs((relu(n) mul n)) sub 5)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 3 + 8 + 2 + 3 + 5 + 10 + 7 - 9 - 3 + 0 + 61 - 13 + 1 + 12 - 15 - 5 + 66 + 7 - 14 - 14 + 155 - 13 + 131 + 214 + 3 + 187 - 25 + 163 + 171", "x2": "add sub idiv abs x_0_7 n n mod x_0_2 add n mul sqr x_0_9 sign n", "tree": "(((abs(x_0_7) idiv n) sub n) add (x_0_2 mod (n add ((x_0_9)**2 mul sign(n)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 4 + 10 - 3 + 4 + 3 + 1 - 3 + 11 - 2 + 5 + 4 + 2 - 2 + 12 - 1 + 6 + 5 + 3 - 1 + 13 + 0 + 7 + 6 + 4 + 0 + 14", "x2": "add idiv add mod INT- 5 INT- 1 n n x_0_6", "tree": "((((-5 mod -1) add n) idiv n) add x_0_6)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 1 - 2 - 10 + 1 - 6 - 17 - 7 - 22 - 22 - 19 - 45 - 35 - 47 - 73 - 60 - 98 - 114 - 113 - 177 - 180 - 217 - 297 - 299 - 400 - 483", "x2": "add x_0_5 mul sign INT+ 6 sub x_0_3 INT+ 6", "tree": "(x_0_5 add (sign(6) mul (x_0_3 sub 6)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 + 0 + 31 + 4 - 119 - 10 + 483 + 48 - 1923 - 182 + 7703 + 740 - 3 799 - 2946 + 12 3211 + 1 1800 - 49 2827 - 4 7182 + 197 1327 + 18 8748 - 788 5287 - 75 4970 + 3154 1171", "x2": "add n mul INT+ 4 sub sqr relu INT- 1 x_0_2", "tree": "(n add (4 mul ((relu(-1))**2 sub x_0_2)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 6 - 8 - 3 + 6 + 10 - 11 - 12 + 2 - 3 - 12 - 16 + 5 + 6 - 8 - 3 + 6 + 10 - 11 - 12 + 2 - 3 - 12 - 16 + 5 + 6 - 8", "x2": "sub INT- 6 x_0_6", "tree": "(-6 sub x_0_6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 2 + 27 + 8 + 135 + 48 + 945 + 384 + 8505 + 3840 + 9 3555 + 4 6080 + 121 6215 + 64 5120 + 1824 3225 + 1032 1920 + 3 1013 4825 + 1 8579 4560 + 58 9256 1675 + 37 1589 1200 + 1237 4379 5175 + 817 4960 6400 + 2 8461 728 9025", "x2": "mul relu mul n sign INT+ 2 x_0_2", "tree": "(relu((n mul sign(2))) mul x_0_2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 1 + 2 + 7 + 0 + 10 + 42 + 0 + 80 + 378 + 0 + 880 + 4536 + 0 + 1 2320 + 6 8040 + 0 + 20 9440 + 122 4720 + 0 + 418 8800 + 2571 9120 + 0 + 9634 2400 + 6 1725 8880", "x2": "relu mul n x_0_3", "tree": "relu((n mul x_0_3))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 7 + 7 - 5 + 9 - 3 + 11 - 1 + 13 + 1 + 15 + 3 + 17 + 5 + 19 + 7 + 21 + 9 + 23 + 11 + 25 + 13 + 27", "x2": "sub x_0_2 INT- 2", "tree": "(x_0_2 sub -2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 6 + 18 + 39 + 56 + 55 + 60 + 63 + 112 + 117 + 120 + 99 + 168 + 169 + 196 + 165 + 160 + 153 + 252 + 247 + 240 + 189 + 308", "x2": "mul n sub mod mod x_0_1 INT- 1 0 abs INT+ 6 INT- 9", "tree": "(n mul (((x_0_1 mod -10) mod abs(6)) sub -9))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 4 + 9 + 16 + 25 + 36 + 49 + 0 + 9 + 20 + 33 + 48 + 65 + 84 + 105 + 0 + 17 + 36 + 57 + 80 + 105 + 132", "x2": "mul relu mul n sign x_0_1 mod n abs INT- 8", "tree": "(relu((n mul sign(x_0_1))) mul (n mod abs(-8)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 4 - 6 + 4 + 9 + 0 + 0 - 7 + 4 + 6 - 4 - 9 + 0 + 0 + 7 - 4 - 6 + 4 + 9 + 0 + 0 - 7 + 4 + 6 - 4 - 9 + 0 + 0", "x2": "sub relu INT- 1 0 x_0_7", "tree": "(relu(-10) sub x_0_7)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 5 + 2 - 6 + 22 - 107 + 624 - 4265 + 3 3411 - 29 5129 + 290 2103 - 3143 9448 + 3 7203 3469 - 47 7442 9517 + 660 4627 4987 - 9796 8641 2306 + 15 5117 152 8180 - 261 1136 4239 1029 + 4656 5266 2264 19 - 8 7697 9180 5972 356 + 173 9342 415 1778 7062 - 3623 6292 5316 2056 3790 + 7 9115 9053 6070 4897 6083", "x2": "sub n mod idiv x_0_1 INT- 6 sub add mul x_0_1 n n sign sub n INT+ 8", "tree": "(n sub ((x_0_1 idiv -6) mod (((x_0_1 mul n) add n) sub sign((n sub 8)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 1 + 2 + 7 + 14 + 23 + 34 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359 + 398 + 439", "x2": "add abs add sqr n INT- 1 idiv sign n INT- 1 0", "tree": "(abs(((n)**2 add -1)) add (sign(n) idiv -10))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 5 - 3 - 5 + 7 + 0 + 13 + 30 + 51 - 5 + 5 + 17 + 31 + 47 + 65 + 85 + 107 + 131 + 157 + 185 + 215 + 247", "x2": "add INT- 5 mul n abs mod add relu n INT- 9 n", "tree": "(-5 add (n mul abs(((relu(n) add -9) mod n))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 6 - 3 + 0 + 28 + 16 + 4 + 108 + 60 + 12 + 428 + 236 + 44 + 1708 + 940 + 172 + 6828 + 3756 + 684 + 2 7308 + 1 5020 + 2732 + 10 9228 + 6 76 + 1 924", "x2": "mul INT+ 4 abs add x_0_3 idiv INT+ 1 0 mul INT- 9 add n n", "tree": "(4 mul abs((x_0_3 add (10 idiv (-9 mul (n add n))))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 9 - 3 - 8 - 7 + 10 + 6 + 4 - 2 + 0 + 7 + 3 + 5 + 3 + 8 + 11 + 14 + 17 + 11 + 16 + 15 + 18 + 14 + 12 + 10 + 8 + 15 + 11 + 13", "x2": "add idiv abs x_0_8 INT- 1 abs sub sign abs idiv INT- 8 n n", "tree": "((abs(x_0_8) idiv -1) add abs((sign(abs((-8 idiv n))) sub n)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 3 + 7 - 7 + 9 + 6 + 10 + 0 + 9 + 49 + 49 + 81 + 36 + 100 + 0 + 81 + 2401 + 2401 + 6561 + 1296 + 1 0 + 0 + 6561 + 576 4801 + 576 4801 + 4304 6721 + 167 9616 + 1 0 0", "x2": "sqr x_0_7", "tree": "(x_0_7)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 7 - 2 + 4 - 7 - 5 - 2 - 9 - 10 + 8 - 25 + 5 - 4 + 31 + 25 - 8 + 112 - 25 - 16 - 388 + 62 + 16 + 1736 - 313 + 64 - 2 1728 - 775 - 128 - 33 6784 - 9703", "x2": "idiv mul x_0_9 x_0_6 INT+ 2", "tree": "((x_0_9 mul x_0_6) idiv 2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 6 + 9 - 9 - 9 + 30 + 42 + 72 - 81 - 90 + 330 + 504 + 936 - 1134 - 1350 + 5280 + 8568 + 1 6848 - 2 1546 - 2 7000 + 11 880 + 18 8496 + 38 7504 - 51 7104 - 67 5000 + 288 2880", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 8 + 1 + 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2", "x2": "mod sub add x_0_1 abs INT+ 2 INT+ 9 idiv INT- 9 idiv INT- 6 add x_0_1 n", "tree": "(((x_0_1 add abs(2)) sub 9) mod (-9 idiv (-6 idiv (x_0_1 add n))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 8 + 0 - 5 + 2 + 9 + 0 + 3 - 4 + 10 + 1 + 1 + 2 + 9 + 0 + 3 - 4 + 10 + 1 + 1 + 2 + 9 + 0 + 3 - 4 + 10 + 1 + 1 + 2 + 9 + 0 + 3 - 4", "x2": "idiv x_0_8 relu sign abs sub add relu idiv x_0_12 x_0_9 INT+ 1 0 INT+ 3", "tree": "(x_0_8 idiv relu(sign(abs(((relu((x_0_12 idiv x_0_9)) add 10) sub 3)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 1 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483", "x2": "sub mul n n sign mul sqr idiv INT+ 8 n mod x_0_1 abs idiv x_0_1 n", "tree": "((n mul n) sub sign((((8 idiv n))**2 mul (x_0_1 mod abs((x_0_1 idiv n))))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 2 + 10 + 0 + 1 + 10 + 2 + 7 + 1 + 0 + 1 + 1 + 2 + 7 + 1 + 0 + 1 + 1 + 2 + 7 + 1 + 0 + 1 + 1 + 2 + 7 + 1", "x2": "mod x_0_6 idiv INT- 9 INT- 1", "tree": "(x_0_6 mod (-9 idiv -1))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 5 - 6 + 10 - 2 - 4 - 7 + 9 - 3 - 3 - 8 + 8 - 4 - 2 - 9 + 7 - 5 - 1 - 10 + 6 - 6 + 0 - 11 + 5 - 7 + 1", "x2": "add idiv x_0_4 sign idiv mul INT+ 1 0 n n sign mod add x_0_1 x_0_1 relu relu x_0_2", "tree": "((x_0_4 idiv sign(((10 mul n) idiv n))) add sign(((x_0_1 add x_0_1) mod relu(relu(x_0_2)))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 7 - 7 + 7 + 10 + 8 - 9 + 2 + 14 + 0 + 14 + 17 + 15 - 2 + 9 + 21 + 7 + 21 + 24 + 22 + 5 + 16 + 28 + 14 + 28 + 31 + 29 + 12 + 23", "x2": "add INT+ 7 mul x_0_7 sqr sign sqr x_0_8", "tree": "(7 add (x_0_7 mul (sign((x_0_8)**2))**2))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 5 + 5 + 8 - 9 - 8 - 4 - 2 + 512 + 810 + 1100 + 1331 + 1728 + 2197 + 2744 + 3600 + 4352 + 5202 + 6156 + 7220 + 8400 + 9702 + 1 1132 + 1 2696 + 1 4400 + 1 6250 + 1 8252 + 2 412 + 2 2736", "x2": "abs relu mul sub n idiv sign x_0_7 INT- 7 relu sqr n", "tree": "abs(relu(((n sub (sign(x_0_7) idiv -7)) mul relu((n)**2))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 6 + 3 + 18 - 1 + 16 + 38 - 3 + 22 + 53 - 10 + 23 + 62 + 107 + 18 + 65 + 117 + 6 + 61 + 122 - 11 + 52", "x2": "add INT- 9 add mul n mod mul n INT- 7 INT+ 1 0 add INT+ 1 idiv sub n INT- 5 INT- 1 0", "tree": "(-9 add ((n mul ((n mul -7) mod 10)) add (1 add ((n sub -5) idiv -10))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 7 - 2 + 2 + 3 - 3 + 6 + 6 + 17 + 17 + 130 + 14 + 16 + 207 + 21 + 22 + 34 + 35 + 149 + 34 + 37 + 229 + 44 + 46 + 59 + 61 + 176 + 62 + 66", "x2": "add n mod x_0_8 sqr n", "tree": "(n add (x_0_8 mod (n)**2))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 8 - 2 + 1 - 4 - 1 + 0 + 2 - 7 - 33 - 30 - 39 - 35 - 39 - 35 - 33 - 30 - 38 - 63 - 59 - 67 - 62 - 65 - 60 - 57 - 53 - 60 - 84 - 79 - 86", "x2": "sub n sub sqr INT- 7 x_0_9", "tree": "(n sub ((-7)**2 sub x_0_9))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 9 + 36 + 324 + 5184 + 12 9600 + 466 5600 + 2 2861 4400 + 146 3132 1600 + 1 1851 3704 9600 + 118 5137 496 0 + 1 4340 1583 16 0 + 206 4982 7952 2304 0 + 3 4898 2092 3926 9376 0 + 684 49 108 9679 7696 0 + 15 3901 1027 4517 7948 1600 0 + 3939 8682 3027 6555 4728 9600 0 + 113 8621 9185 4992 4531 6669 4400 0 + 3 6891 3501 6101 7554 8260 898 5600 0 + 1331 7777 4081 2733 7292 1892 4380 1600 0 + 53 2711 963 2509 3491 6875 6975 2064 0 0 + 2 3492 5593 4793 6622 9834 2182 6066 224 0 0 + 1137 398 7244 132 5523 9761 6381 5954 8416 0 0", "x2": "mul sqr n abs x_0_1", "tree": "((n)**2 mul abs(x_0_1))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 16 + 54 + 128 + 250 + 432 + 686 + 1024 + 1458 + 2000 + 2662 + 3456 + 4394 + 5488 + 6750 + 8192 + 9826 + 1 1664 + 1 3718 + 1 6000 + 1 8522", "x2": "mul add sqr n sqr n n", "tree": "(((n)**2 add (n)**2) mul n)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 - 30 - 180 - 1080 - 6480 - 3 8880 - 23 3280 - 139 9680 - 839 8080 - 5038 8480 - 3 233 880 - 18 1398 5280 - 108 8391 1680 - 653 347 80 - 3918 2082 480 - 2 3509 2492 2880 - 14 1055 4953 7280 - 84 6332 9722 3680 - 507 7997 8334 2080 - 3046 7987 5 2480 - 1 8280 7922 31 4880 - 10 9684 7532 188 9280", "x2": "mul INT+ 6 x_0_1", "tree": "(6 mul x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 - 1 + 12 + 4 - 60 - 24 + 240 + 144 - 2160 - 1440 + 2 1600 + 1 80 - 28 800 - 14 1120 + 168 4800 + 141 1200 - 2864 1600 - 2540 1600 + 2 8641 6000 + 3 5562 2400 - 60 1473 6000 - 78 2369 2800 + 1082 6524 8000", "x2": "mul x_0_2 sub mod sqr sqr INT+ 9 mod sign x_0_2 n n", "tree": "(x_0_2 mul ((((9)**2)**2 mod (sign(x_0_2) mod n)) sub n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 2 - 9 + 5 + 2 - 1 + 0 + 0 - 18 - 90 + 55 + 24 - 13 + 0 + 0 - 288 - 1530 + 990 + 456 - 260 + 0 + 0 - 6624 - 3 6720 + 2 4750 + 1 1856 - 7020 + 0", "x2": "mul n x_0_7", "tree": "(n mul x_0_7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 7 - 5 + 8 - 6 + 9 + 121 + 81 + 64 + 144 + 361 + 121 + 441 + 625 + 324 + 256 + 625 + 1089 + 961 + 400 + 1296 + 1369 + 1089 + 1681 + 1600 + 2116 + 1849", "x2": "sqr add mod x_0_5 n n", "tree": "(((x_0_5 mod n) add n))**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 - 4 - 10 - 2 - 7 + 0 + 3 + 4 + 10 + 2 + 7 + 0 + 3 + 4 + 10 + 2 + 7 + 0 + 3 + 4 + 10 + 2 + 7 + 0 + 3 + 4", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 9 + 10 + 6 + 6 + 0 + 2 - 6 - 6 - 16 - 27 - 39 - 52 - 66 - 81 - 97 - 114 - 132 - 151 - 171 - 192 - 214 - 237 - 261 - 286 - 312 - 339 - 367", "x2": "sub x_0_1 mod n mul sqr sub x_0_7 x_0_1 sign abs add INT- 9 mod INT+ 3 n", "tree": "(x_0_1 sub (n mod (((x_0_7 sub x_0_1))**2 mul sign(abs((-9 add (3 mod n)))))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 3 - 2 + 18 + 12 - 108 - 72 + 648 + 432 - 3888 - 2592 + 2 3328 + 1 5552 - 13 9968 - 9 3312 + 83 9808 + 55 9872 - 503 8848 - 335 9232 + 3023 3088 + 2015 5392 - 1 8139 8528 - 1 2093 2352 + 10 8839 1168", "x2": "mul INT- 6 sub x_0_2 relu mul INT- 6 mul mod INT- 1 0 mod sub x_0_1 idiv INT+ 4 n x_0_3 x_0_1", "tree": "(-6 mul (x_0_2 sub relu((-6 mul ((-10 mod ((x_0_1 sub (4 idiv n)) mod x_0_3)) mul x_0_1)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 + 9 + 1 + 3 + 22 + 15 + 45 + 43 + 114 + 47 + 371 + 369 + 1310 + 459 + 5337 + 5645 + 2 1978 + 7935 + 10 1039 + 11 2497 + 46 1094 + 17 4083 + 232 3365 + 269 9349 + 1152 6722", "x2": "abs sub mul n n sub mul n abs x_0_4 abs INT+ 3", "tree": "abs(((n mul n) sub ((n mul abs(x_0_4)) sub abs(3))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 0 + 7 + 7 + 0 + 4 + 1 + 0 + 1 + 4 + 0 + 7 + 7 + 0 + 4 + 1 + 0 + 1 + 4 + 0", "x2": "mod mul n relu n abs INT- 9", "tree": "((n mul relu(n)) mod abs(-9))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 + 6 + 19 + 76 + 380 + 2280 + 1 5960 + 12 7680 + 114 9120 + 1149 1200 + 1 2640 3200 + 15 1683 8400 + 197 1889 9200 + 2760 6458 8800 + 4 1409 6883 2000 + 66 2555 131 2000 + 1126 3435 2230 4000 + 2 274 1834 147 2000 + 38 5209 4846 2796 8000 + 770 4189 6925 5936 0 + 1 6178 7983 5437 4656 0 + 35 5933 5637 9624 2432 0", "x2": "idiv mul add sqr x_0_1 n sub n sqr idiv relu n x_0_1 x_0_1", "tree": "((((x_0_1)**2 add n) mul (n sub ((relu(n) idiv x_0_1))**2)) idiv x_0_1)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 36 + 144 + 400 + 900 + 1764 + 3136 + 5184 + 8100 + 1 2100 + 1 7424 + 2 4336 + 3 3124 + 4 4100 + 5 7600 + 7 3984 + 9 3636 + 11 6964 + 14 4400 + 17 6400 + 21 3444", "x2": "relu sqr add sqr n n", "tree": "relu((((n)**2 add n))**2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 5 + 0 - 1 - 2 + 1 + 2 + 2 + 1 - 4 - 1 - 2 - 2 + 1 + 1 + 2 + 1 - 4 - 1 - 2 - 2 + 1 + 1 + 2 + 1", "x2": "idiv INT- 4 sub add x_0_4 sign x_0_2 x_0_1", "tree": "(-4 idiv ((x_0_4 add sign(x_0_2)) sub x_0_1))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 1 + 2 + 3 + 10 + 0 + 3 + 4 + 11 + 1 + 4 + 5 + 12 + 2 + 5 + 6 + 13 + 3 + 6 + 7 + 14 + 4 + 7 + 8 + 15", "x2": "add x_0_4 sign add x_0_1 sub x_0_2 idiv x_0_1 INT+ 9", "tree": "(x_0_4 add sign((x_0_1 add (x_0_2 sub (x_0_1 idiv 9)))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 - 6 + 7 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_3 add abs INT- 1 0 sqr abs n", "tree": "(x_0_3 idiv (abs(-10) add (abs(n))**2))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 - 3 - 16 - 23 - 41 - 53 - 76 - 93 - 121 - 143 - 176 - 203 - 241 - 273 - 316 - 353 - 401 - 443 - 496 - 543 - 601 - 653 - 716", "x2": "add mul n INT- 5 x_0_2", "tree": "((n mul -5) add x_0_2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 9 + 1 + 14 + 16 + 19 + 21 + 34 + 72 + 86 + 88 + 94 + 112 + 126 + 128 + 201 + 237 + 234 + 258 + 261 + 297 + 294 + 424", "x2": "mul add abs mod abs x_0_1 INT+ 1 0 add n mul INT- 6 n idiv n INT- 7", "tree": "((abs((abs(x_0_1) mod 10)) add (n add (-6 mul n))) mul (n idiv -7))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 1 - 3 + 60 + 80 + 130 + 160 + 205 + 240 + 283 + 320 + 362 + 400 + 441 + 480 + 521 + 560 + 601 + 640 + 681 + 720 + 761 + 800 + 841", "x2": "abs add idiv relu x_0_2 INT- 2 mul sub sub sub x_0_2 n n x_0_2 INT+ 1 0", "tree": "abs(((relu(x_0_2) idiv -2) add ((((x_0_2 sub n) sub n) sub x_0_2) mul 10)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 + 10 - 10 + 10 - 9 + 4 + 17 + 1 + 13 + 27 + 12 + 25 + 40 + 26 + 40 + 56 + 43 + 58 + 75 + 63 + 79 + 97 + 86 + 103 + 122 + 112", "x2": "abs add add x_0_3 n relu mul idiv idiv sign sign INT- 1 n INT+ 3 mod x_0_5 n", "tree": "abs(((x_0_3 add n) add relu((((sign(sign(-1)) idiv n) idiv 3) mul (x_0_5 mod n)))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 21 + 463 + 1 1113 + 28 8939 + 809 293 + 2 4270 8791 + 77 6668 1313 + 2640 6716 4643 + 9 5064 1792 7149 + 361 2438 8123 1663 + 1 4449 7552 4926 6521 + 60 6889 7204 6919 3883 + 2670 3147 7006 4453 853 + 12 2834 4794 2296 4841 9239 + 589 6055 123 231 2412 3473 + 2 9480 2750 6151 1562 617 3651 + 153 2974 3031 9860 1227 2102 9853 + 8278 612 3727 2446 6269 3561 2063 + 46 3571 4292 8725 7011 1083 9427 5529 + 2688 7142 8986 6090 6644 2868 6798 683 + 16 1322 8573 9196 5439 8657 2120 7884 981", "x2": "add INT+ 1 mul mul x_0_1 sub add INT- 8 sub n n n INT- 2", "tree": "(1 add ((x_0_1 mul ((-8 add (n sub n)) sub n)) mul -2))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 + 0 + 4 + 9 + 15 + 22 + 30 + 39 + 49 + 60 + 72 + 85 + 99 + 114 + 130 + 147 + 165 + 184 + 204 + 225 + 247 + 270", "x2": "add add x_0_1 n INT+ 1", "tree": "((x_0_1 add n) add 1)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 - 3 + 2 - 7 - 5 - 1 + 2 + 5 + 2 + 3 + 6 + 11 + 2 + 5 + 2 + 3 + 6 + 11 + 2 + 5 + 2 + 3 + 6 + 11 + 2 + 5 + 2", "x2": "mod x_0_6 n", "tree": "(x_0_6 mod n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 5 + 11 + 19 + 29 + 41 + 55 + 71 + 89 + 109 + 131 + 155 + 181 + 209 + 239 + 271 + 305 + 341 + 379 + 419 + 461", "x2": "add add INT- 1 mul n n n", "tree": "((-1 add (n mul n)) add n)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 1 - 1 + 2 + 2 + 2 + 3 + 2 + 4 + 2 + 5 + 2 + 6 + 2 + 7 + 2 + 8 + 2 + 9 + 2 + 10 + 2 + 11 + 2 + 12", "x2": "idiv sub n sign abs x_0_4 x_0_1", "tree": "((n sub sign(abs(x_0_4))) idiv x_0_1)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 5 + 7 + 8 + 7 + 10 + 6 + 9 + 5 + 8 + 4 + 7 + 2 + 6 - 1 + 4 - 9 + 1 + 10 - 4 + 13 - 26 + 11 - 20 + 10", "x2": "sub x_0_2 idiv n x_0_4", "tree": "(x_0_2 sub (n idiv x_0_4))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 2 + 10 - 1 - 6 - 9 - 2 - 7 + 1 - 4 + 2 + 10 + 2 + 11 + 2 + 2 + 0 + 0 + 3 + 12 + 2 + 10 + 20 + 10 + 21 + 10 + 10 + 14 + 14 + 8 + 26 + 10", "x2": "mod relu mul INT+ 2 n add mod add mul x_0_5 sqr sqr n INT- 7 n x_0_11", "tree": "(relu((2 mul n)) mod ((((x_0_5 mul ((n)**2)**2) add -7) mod n) add x_0_11))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 7 - 9 - 9 - 6 - 11 - 72 - 73 - 56 - 87 - 454 - 461 - 360 - 547 - 2750 - 2793 - 2188 - 3311 - 1 6530 - 1 6789 - 1 3160 - 1 9899 - 9 9214 - 10 769 - 7 8996 - 11 9431", "x2": "sub mul idiv add abs x_0_4 INT+ 2 sub sign INT- 4 idiv relu mul x_0_4 INT+ 6 n INT+ 6 n", "tree": "((((abs(x_0_4) add 2) idiv (sign(-4) sub (relu((x_0_4 mul 6)) idiv n))) mul 6) sub n)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 6 + 5 + 0 - 4 + 2 + 8 - 2 - 7 + 72 + 5760 - 1078 - 3168 + 3978 + 2 2260 - 8 400 + 0 + 2462 2562 + 59 2026 3792 + 15 3785 5326 + 281 4503 8240 + 1412 9442 3480 + 391 8992 + 1047 1457 6581 9802 - 23 8705 360 8000 - 2366 6218 428 5829 4950 - 1126 3921 484 586 3259 1568 - 1584 468 8967 4671 9058 2432 - 8647 5334 6035 8605 9488 - 12 4430 8759 7951 2437 4087 4348 2750", "x2": "mul n mul sub mul n x_0_6 abs INT+ 8 sub mod INT+ 9 INT- 8 x_0_8", "tree": "(n mul (((n mul x_0_6) sub abs(8)) mul ((9 mod -8) sub x_0_8)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 7 - 3 + 3 - 7 - 3 + 3 - 7 - 3 + 3 - 7 - 3 + 3 - 7 - 3 + 3 - 7 - 3 + 3 - 7 - 3 + 3 - 7 - 3 + 3", "x2": "sub add x_0_3 n idiv n sign n", "tree": "((x_0_3 add n) sub (n idiv sign(n)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 + 4 - 1 + 4 + 10 + 4 + 1 + 8 + 12 + 6 + 3 + 10 + 14 + 8 + 5 + 12 + 16 + 10 + 7 + 14 + 18 + 12 + 9", "x2": "add add mod add relu INT+ 2 sub x_0_2 x_0_2 n sub sign x_0_3 x_0_2 n", "tree": "((((relu(2) add (x_0_2 sub x_0_2)) mod n) add (sign(x_0_3) sub x_0_2)) add n)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 0 + 0 - 1 - 1 - 2 + 1 + 0 + 0 - 1 - 1 - 2 + 1 + 0 + 0 - 1 - 1 - 2 + 1 + 0 + 0", "x2": "sub INT- 2 idiv mod idiv n sign abs INT- 4 INT- 6 relu add INT- 4 INT+ 6", "tree": "(-2 sub (((n idiv sign(abs(-4))) mod -6) idiv relu((-4 add 6))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 10 - 2 + 4 + 3 + 14 + 13 + 50 + 22 + 160 + 11 + 1292 + 35 + 1 1642 + 155 + 3 4942 + 1412 + 45 4264 + 7079", "x2": "add mul x_0_2 relu add INT- 3 mod sub INT+ 9 x_0_3 n abs n", "tree": "((x_0_2 mul relu((-3 add ((9 sub x_0_3) mod n)))) add abs(n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 + 7 + 4 - 10 - 3 - 8 + 4 - 1 - 5 - 3 + 6 + 368 - 328 - 16 - 480 - 132 + 368 - 24 + 25 + 75 + 66 - 60 + 5520 - 8200 - 400 + 1 2000 - 3432", "x2": "mul mul mod x_0_7 relu sqr INT- 7 sign x_0_4 add x_0_11 idiv n abs sub n x_0_2", "tree": "(((x_0_7 mod relu((-7)**2)) mul sign(x_0_4)) mul (x_0_11 add (n idiv abs((n sub x_0_2)))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 6 - 8 - 5 + 1 + 0 + 0 + 0 + 0 + 0 + 12 + 0 + 42 + 0 + 20 + 476 + 0 + 532 + 0 + 4550", "x2": "relu mul abs sub add INT+ 1 n x_0_4 relu add x_0_3 add sub n relu x_0_1 INT- 1 0", "tree": "relu((abs(((1 add n) sub x_0_4)) mul relu((x_0_3 add ((n sub relu(x_0_1)) add -10)))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 7 - 8 - 2 - 28 - 40 - 12 - 196 - 320 - 108 - 1960 - 3520 - 1296 - 2 5480 - 4 9280 - 1 9440 - 40 7680 - 83 7760 - 34 9920 - 774 5920", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 2 + 6 + 4 + 15 + 30 + 0 + 8 + 18 + 30 + 44 + 60 + 78 + 98 + 120 + 144", "x2": "mul mod INT- 7 n n", "tree": "((-7 mod n) mul n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 5 - 10 - 41 + 95 + 457 - 1038 - 4105 + 9351 + 4 5165 - 10 2850 - 40 6473 + 92 5663 + 447 1217 - 1018 2278 - 4024 937 + 9164 519 + 4 4265 325 - 10 804 5690", "x2": "add n mul add INT- 1 0 sign idiv INT+ 6 x_0_3 x_0_2", "tree": "(n add ((-10 add sign((6 idiv x_0_3))) mul x_0_2))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 - 2 + 1 + 5 - 7 + 448 + 648 + 36 + 10 + 275 + 588 + 260 9152 + 587 8656 + 1 9440 + 1600 + 128 5625 + 622 3392 + 129 3458 902 2976 + 691 1719 2732 6720 + 79 3618 5600 + 5632 0", "x2": "abs mul n sqr x_0_6", "tree": "abs((n mul (x_0_6)**2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 8 - 6 - 8 - 3 + 60 + 56 + 48 + 72 + 30 + 660 + 672 + 624 + 1008 + 450 + 1 560 + 1 1424 + 1 1232 + 1 9152 + 9000 + 22 1760", "x2": "abs mul abs x_0_5 n", "tree": "abs((abs(x_0_5) mul n))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 2 + 4 + 6 - 1 - 2 - 7 - 7 - 6 - 19 - 40 - 6 - 10 - 56 - 57 - 45 - 371 - 1611 - 48 - 113 - 3150 - 3264 - 2041 - 13 7658", "x2": "sub sub idiv n INT- 1 INT- 6 sqr abs x_0_7", "tree": "(((n idiv -1) sub -6) sub (abs(x_0_7))**2)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 3 + 7 + 2 + 7 - 2 + 4 + 0 + 10 + 5 + 10 + 1 + 7 + 3 + 13 + 8 + 13 + 4 + 10 + 6", "x2": "add idiv n n sub mod x_0_2 idiv n n add x_0_3 sub sign sign n n", "tree": "((n idiv n) add ((x_0_2 mod (n idiv n)) sub (x_0_3 add (sign(sign(n)) sub n))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 9 - 6 + 2 + 10 - 7 + 1 - 9 + 8 + 2 - 6 + 0 - 2 - 10 - 1 + 0 - 9 - 2 - 11 + 0 - 3 - 2 - 1 + 0 - 7 - 2 - 3", "x2": "mod n sub x_0_11 INT+ 6", "tree": "(n mod (x_0_11 sub 6))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 5 + 8 + 2 - 10 + 16 + 4 - 20 + 32 + 8 - 40 + 64 + 16 - 80 + 128 + 32 - 160 + 256 + 64", "x2": "add x_0_3 x_0_3", "tree": "(x_0_3 add x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 137 - 50 - 196 - 117 - 271 - 200 - 362 - 299 - 469 - 414 - 592 - 545 - 731 - 692 - 886 - 855", "x2": "sub n sub add x_0_1 sqr sub INT- 6 add abs INT- 2 add n n INT+ 6", "tree": "(n sub ((x_0_1 add ((-6 sub (abs(-2) add (n add n))))**2) sub 6))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 9 - 2 + 4 - 8 + 3 + 12 + 5 - 1 + 11 + 0 - 9 - 2 + 4 - 8 + 3 + 12 + 5 - 1 + 11 + 0 - 9", "x2": "sub INT+ 3 x_0_5", "tree": "(3 sub x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 7 - 12 - 15 - 16 - 15 - 12 - 7 + 0 + 9 + 20 + 33 + 48 + 65 + 84 + 105 + 128", "x2": "mul add n INT- 8 n", "tree": "((n add -8) mul n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 + 1 - 7 - 10 - 10 - 12 - 10 - 13 - 12 - 14 - 14 - 15 - 15 - 16 - 16 - 17 - 17 - 18 - 18 - 19 - 19", "x2": "add x_0_2 idiv x_0_5 n", "tree": "(x_0_2 add (x_0_5 idiv n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 - 7 + 5 + 0 - 5 + 3 + 1 + 1 + 196 + 100 + 36 + 225 + 196 + 225 + 4 4521 + 1 3456 + 2809 + 5 9049 + 4 6225 + 6 25 + 19 8398 9764 + 1 8165 6484", "x2": "sqr add n x_0_6", "tree": "((n add x_0_6))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 4 - 19 - 78 - 313 - 1252 - 5007 - 2 26 - 8 101 - 32 400 - 128 1595 - 512 6374 - 2050 5489 - 8202 1948 - 3 2808 7783 - 13 1235 1122 - 52 4940 4477", "x2": "add mul x_0_1 sqr mod add INT- 4 sign x_0_1 INT- 3 add INT- 6 n", "tree": "((x_0_1 mul (((-4 add sign(x_0_1)) mod -3))**2) add (-6 add n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 7 - 7 - 1 - 8 + 9 - 2 - 2 - 5 + 0 + 15 + 100 + 119 + 29 + 47 + 73 + 14 + 192 + 1218 + 1462 + 468 + 704 + 927 + 238 + 2401 + 2255", "x2": "add mod add abs abs mul x_0_7 mul INT- 2 INT+ 6 n mul sqr INT+ 1 0 add n INT+ 6 x_0_9", "tree": "(((abs(abs((x_0_7 mul (-2 mul 6)))) add n) mod ((10)**2 mul (n add 6))) add x_0_9)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 6 - 1 - 9 - 5 + 1 - 6 + 5 + 6 + 1 + 9 + 5 - 1 + 6 - 5 - 6 - 1 - 9 - 5 + 1 - 6 + 5 + 6 + 1", "x2": "mul mul sign INT- 4 x_0_7 relu relu relu mod sign INT+ 7 n", "tree": "((sign(-4) mul x_0_7) mul relu(relu(relu((sign(7) mod n)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 7 + 1 + 6 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "idiv sign mul INT- 2 x_0_4 INT- 1", "tree": "(sign((-2 mul x_0_4)) idiv -1)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 6 + 9 - 6 - 9 + 6 - 9 - 6 + 9 - 6 - 9 + 6 - 9 - 6 + 9 - 6 - 9 + 6 - 9", "x2": "idiv x_0_2 sign x_0_1", "tree": "(x_0_2 idiv sign(x_0_1))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 7 - 6 - 7 - 2 - 7 + 1 + 2 - 45 - 70 - 66 - 84 - 26 - 98 - 15 - 32 - 765 - 1260 - 1254 - 1680 - 546 - 2156 - 345 - 768", "x2": "mul sub sub x_0_2 relu mul sign relu n abs x_0_8 x_0_2 n", "tree": "(((x_0_2 sub relu((sign(relu(n)) mul abs(x_0_8)))) sub x_0_2) mul n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 9 - 6 - 10 + 10 - 4 + 0 + 9 + 6 + 10 + 10 + 4 + 0 + 9 + 6 + 10 + 10 + 4 + 0 + 9 + 6 + 10", "x2": "abs add x_0_6 abs sqr relu INT- 5", "tree": "abs((x_0_6 add abs((relu(-5))**2)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 7 - 2 + 9 + 28 + 57 + 98 + 153 + 224 + 313 + 422 + 553 + 708 + 889 + 1098 + 1337 + 1608 + 1913", "x2": "sub x_0_1 sub abs sign relu INT+ 3 add mul abs n n n", "tree": "(x_0_1 sub (abs(sign(relu(3))) sub ((abs(n) mul n) add n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 9 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr mul n sign idiv mul INT+ 1 0 INT- 6 sub sign abs mod mod INT- 6 INT+ 9 n x_0_1", "tree": "((n mul sign(((10 mul -6) idiv (sign(abs(((-6 mod 9) mod n))) sub x_0_1)))))**2", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 1 - 5 + 16 - 29 - 54 + 46 - 184 - 314 + 181 - 974 - 1629 + 841 - 4939 - 8219 + 4126 - 2 4779 - 4 1184 + 2 536", "x2": "sub sqr idiv INT- 4 relu n mul INT- 5 sub x_0_3 n", "tree": "(((-4 idiv relu(n)))**2 sub (-5 mul (x_0_3 sub n)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 4 + 2 - 6 + 1 + 4 + 1 + 6 + 9 + 8 + 16 + 24 + 25 + 49 + 77 + 91 + 188 + 324 + 426 + 960", "x2": "idiv mul mul add INT+ 6 idiv add mul n add x_0_3 sign x_0_1 INT+ 3 INT+ 8 INT+ 1 n INT+ 9", "tree": "((((6 add (((n mul (x_0_3 add sign(x_0_1))) add 3) idiv 8)) mul 1) mul n) idiv 9)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 5 + 2 + 1 + 1 + 3 + 4 + 3 + 1 + 2 + 3 + 3 + 2 + 2 + 2 + 3 + 2 + 2 + 2", "x2": "abs add add INT+ 1 idiv relu x_0_1 x_0_2 mod n INT+ 2", "tree": "abs(((1 add (relu(x_0_1) idiv x_0_2)) add (n mod 2)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 11 + 40 + 87 + 152 + 235 + 336 + 448 + 584 + 738 + 910 + 1100 + 1308 + 1521 + 1764 + 2025 + 2304", "x2": "mul relu add add abs mul n INT- 9 INT+ 3 idiv n INT- 6 n", "tree": "(relu(((abs((n mul -9)) add 3) add (n idiv -6))) mul n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 1 + 2 + 10 - 1 - 2 - 10 - 71 + 2 + 10 + 71 + 773 - 10 - 71 - 773 - 1 1595 + 71 + 773 + 1 1595 + 22 220", "x2": "idiv mod x_0_3 sub sub add mul x_0_4 n n x_0_4 INT+ 6 INT- 1", "tree": "((x_0_3 mod ((((x_0_4 mul n) add n) sub x_0_4) sub 6)) idiv -1)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "idiv relu n INT- 5", "tree": "(relu(n) idiv -5)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 1 + 2 + 3 + 2 + 1 + 0 + 7 + 5 + 1 + 4 + 11 + 0 + 5 + 1 + 9 + 9", "x2": "mod add sub abs x_0_1 add INT+ 9 sub x_0_1 add n x_0_1 x_0_1 n", "tree": "(((abs(x_0_1) sub (9 add (x_0_1 sub (n add x_0_1)))) add x_0_1) mod n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 2 + 7 + 120 + 250 + 60 + 7910 + 1 9360 + 4590 + 79 0 + 212 8390 + 54 9360 + 1 269 8310 + 2 9797 2640 + 8240 1750 + 164 3172 7040 + 506 5534 5910 + 148 3231 1760 + 3 1220 2813 3990", "x2": "abs mul abs sub n relu x_0_3 mul INT- 1 0 n", "tree": "abs((abs((n sub relu(x_0_3))) mul (-10 mul n)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 3 - 6 - 1 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0", "x2": "idiv add sign n relu n add abs add idiv n n x_0_4 n", "tree": "((sign(n) add relu(n)) idiv (abs(((n idiv n) add x_0_4)) add n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 8 + 5 - 7 + 2 + 15 + 3 + 12 + 25 + 13 + 22 + 35 + 23 + 32 + 45 + 33 + 42 + 55 + 43 + 52", "x2": "add add x_0_3 idiv INT+ 5 INT+ 5 INT+ 9", "tree": "((x_0_3 add (5 idiv 5)) add 9)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 - 8 + 0 + 0 + 6 + 0 + 2 + 6 + 0 + 1 - 2 + 8 - 4 + 0 - 4 + 9 - 4 + 0 + 6 + 4 + 16 + 11 - 4 - 3 + 0 + 12", "x2": "add INT- 4 mod mul mod INT+ 5 INT- 7 add x_0_11 x_0_3 n", "tree": "(-4 add (((5 mod -7) mul (x_0_11 add x_0_3)) mod n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 7 - 6 + 1 + 7 + 6 + 7 - 13 - 14 + 3 + 4 + 5 + 6 - 19 - 20 + 9 + 10 + 11 + 12 - 25 - 26 + 15 + 16", "x2": "sub mul n sign x_0_6 INT+ 6", "tree": "((n mul sign(x_0_6)) sub 6)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 1 + 2 + 7 + 14 + 23 + 34 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287", "x2": "add n add sub mod sqr INT- 1 INT- 2 x_0_1 add n add x_0_1 x_0_1", "tree": "(n add ((((-1)**2 mod -2) sub x_0_1) add (n add (x_0_1 add x_0_1))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 4 + 3 - 8 + 8 - 4 - 4 + 0 + 37 + 40 + 22 + 25 + 55 + 58 + 104 - 1262 - 1447 + 827 + 871 - 2149 - 2444 - 8618 - 159 151 - 208 5142", "x2": "sub add sqr INT- 7 relu abs idiv x_0_2 sign add n x_0_7 sqr x_0_7", "tree": "(((-7)**2 add relu(abs((x_0_2 idiv sign((n add x_0_7)))))) sub (x_0_7)**2)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 7 + 2 + 0 + 21 + 18 + 0 + 0 + 27 + 30 + 0 + 0 + 39 + 42 + 0 + 0 + 51 + 54 + 0 + 0", "x2": "relu mul mod sub INT- 9 x_0_2 add mod n x_0_4 sqr INT- 3 mod INT+ 3 INT+ 9", "tree": "relu((((-9 sub x_0_2) mod ((n mod x_0_4) add (-3)**2)) mul (3 mod 9)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 3 + 4 - 5 - 2 + 0 + 3 - 8 + 9 + 10 + 6 + 9 + 7 + 7 - 5 + 25 + 18 + 18 + 21 + 24 + 22 + 11 + 43 + 26 + 44", "x2": "add mod sub mod n mod sub INT+ 6 sqr x_0_5 INT- 7 x_0_9 n add INT+ 3 x_0_7", "tree": "((((n mod ((6 sub (x_0_5)**2) mod -7)) sub x_0_9) mod n) add (3 add x_0_7))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 1 - 2 + 1 - 18 - 10 - 13 - 10 - 333 - 109 - 178 - 109 - 11 898 - 1 1890 - 3 1693 - 1 1890 - 122 9836 6413 - 1 4137 2109 - 10 444 6258 - 1 4137 2109", "x2": "sub INT- 9 sqr x_0_4", "tree": "(-9 sub (x_0_4)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 8 + 3 + 16 + 17 + 32 + 53 + 55 + 78 + 109 + 110 + 143 + 182 + 184 + 225 + 274 + 275 + 326", "x2": "add n add sqr n add mod sub INT- 7 x_0_1 add add abs n n n INT- 4", "tree": "(n add ((n)**2 add (((-7 sub x_0_1) mod ((abs(n) add n) add n)) add -4)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 1 + 6 + 7 - 4 + 6 + 6 - 6 + 9 - 9 + 10 + 11 - 12 + 13 + 14 - 15 + 16 - 17 + 18 + 19 - 20 + 21 + 22 - 23 + 24", "x2": "sub mul n sign idiv INT+ 5 x_0_8 mul n mod add INT+ 5 INT+ 4 idiv INT- 2 INT+ 5", "tree": "((n mul sign((5 idiv x_0_8))) sub (n mul ((5 add 4) mod (-2 idiv 5))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 97 + 4 - 35 + 6 - 53 + 8 - 71 + 10 - 89 + 12 - 107 + 14 - 125 + 16 - 143 + 18", "x2": "add n sub sign relu mod idiv INT- 9 n sign INT+ 9 mul INT+ 1 0 relu x_0_1", "tree": "(n add (sign(relu(((-9 idiv n) mod sign(9)))) sub (10 mul relu(x_0_1))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 5 + 2 + 6 + 2 - 9 - 10 - 8 + 5 + 2 + 25 + 4 + 36 + 4 + 81 + 100 + 64 + 25 + 4 + 625 + 16 + 1296 + 16 + 6561 + 1 0 + 4096", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 9 + 9 - 8 + 2 + 10 + 5 + 5 - 8 - 2 + 1 + 10 + 10 - 7 + 3 + 11 + 6 + 6 - 7 - 1 + 2 + 11 + 11 - 6 + 4 + 12", "x2": "add sign sign n x_0_10", "tree": "(sign(sign(n)) add x_0_10)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 10 - 6 - 8 + 6 + 1 - 3 + 82 + 10 - 820 + 300 + 6 - 2 9999 + 4 9200 + 82 - 295 1990 + 2459 9180 + 300 - 201 7132 7594 + 88 5597 0 + 4 9200 - 26 5679 999 9918 + 9924 2931 7624 8000", "x2": "sub relu x_0_7 add sqr mul relu mul INT+ 8 INT- 2 INT- 9 mul relu mul INT+ 1 0 x_0_2 x_0_4", "tree": "(relu(x_0_7) sub (((relu((8 mul -2)) mul -9))**2 add (relu((10 mul x_0_2)) mul x_0_4)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 0 + 1 + 1 + 1 + 2 + 1 + 1 + 2 + 2 + 2 + 2", "x2": "abs sub idiv n INT- 3 idiv n INT- 5", "tree": "abs(((n idiv -3) sub (n idiv -5)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 0 + 48 + 52 + 10 + 7 + 50 + 54 + 12 + 9 + 52 + 56 + 14 + 11 + 54 + 58 + 16 + 13", "x2": "add sub sqr INT- 7 abs sign n sub n relu abs mod INT- 5 x_0_2", "tree": "(((-7)**2 sub abs(sign(n))) add (n sub relu(abs((-5 mod x_0_2)))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 1 + 114 + 76 + 2945 + 2874 + 14 4494 + 18 4184 + 1170 4329 + 1841 8790 + 14 1622 4282 + 26 5230 6324 + 2393 4190 4321 + 5198 5204 274 + 53 8519 2847 3110 + 133 821 2231 1152 + 1 5563 2073 2872 9929 + 4 3118 6076 2881 4526", "x2": "abs mod n mul sqr n sub sub abs n sub x_0_2 INT- 4 n", "tree": "abs((n mod ((n)**2 mul ((abs(n) sub (x_0_2 sub -4)) sub n))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 6 - 9 - 7 + 6 + 1 + 3 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0", "x2": "sqr idiv sub x_0_1 x_0_7 n", "tree": "(((x_0_1 sub x_0_7) idiv n))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 0 - 2 - 6 + 4 + 2 + 2 - 7 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign mod x_0_8 add relu relu mod x_0_7 sign n idiv sub INT- 7 n x_0_5", "tree": "sign((x_0_8 mod (relu(relu((x_0_7 mod sign(n)))) add ((-7 sub n) idiv x_0_5))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 8 - 8 - 8 - 8 - 8 - 7 - 7 - 7 - 7 - 7 - 6 - 6 - 6 - 6 - 6 - 5", "x2": "sub INT- 9 add idiv n INT- 5 relu add INT+ 7 INT- 7", "tree": "(-9 sub ((n idiv -5) add relu((7 add -7))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 4 - 4 + 1 + 1 - 1 + 361 - 1 + 629 + 1 - 1 + 1171 + 629 + 1619 + 145 + 305 + 2429 + 1709 + 1079", "x2": "sub mul INT+ 9 mul mod sub x_0_1 n mod x_0_1 n n sign x_0_4", "tree": "((9 mul (((x_0_1 sub n) mod (x_0_1 mod n)) mul n)) sub sign(x_0_4))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240", "x2": "sub sqr n n", "tree": "((n)**2 sub n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 10 - 10 - 7 + 1 + 7 - 6 - 6 - 80 - 18 - 16 - 40 - 96 + 40 - 24 - 24 - 1106 - 136 - 112 - 312 - 760 + 320 - 184 - 184", "x2": "mul add mul idiv INT- 8 x_0_3 INT- 6 INT+ 8 sub x_0_8 idiv mul n n mul x_0_8 n", "tree": "((((-8 idiv x_0_3) mul -6) add 8) mul (x_0_8 sub ((n mul n) idiv (x_0_8 mul n))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 2 + 10 - 10 - 9 - 10 - 9 - 17 + 3 + 2 + 3 + 2 + 10 - 10 - 9 - 10 - 9 - 17 + 3 + 2 + 3", "x2": "sub sub INT- 8 sign mul idiv INT+ 7 sub n n mul add INT- 7 add INT+ 7 INT- 1 0 INT- 1 x_0_5", "tree": "((-8 sub sign(((7 idiv (n sub n)) mul ((-7 add (7 add -10)) mul -1)))) sub x_0_5)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 5 + 8 - 6 - 2 - 6 + 10 + 3 + 36 + 39 + 38 + 36 + 36 + 36 + 37 + 36 + 45 + 47 + 48 + 48 + 46 + 47 + 48 + 48", "x2": "add sqr INT- 6 relu idiv mul mod INT- 7 relu n add idiv INT- 3 mul INT+ 8 n x_0_8 x_0_4", "tree": "((-6)**2 add relu((((-7 mod relu(n)) mul ((-3 idiv (8 mul n)) add x_0_8)) idiv x_0_4)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 7 - 10 - 5 - 9 + 0 + 0 + 7 + 8 + 5 + 2 + 0 + 0 + 7 + 8 + 5 + 2 + 0 + 0 + 7 + 8 + 5", "x2": "mod x_0_6 n", "tree": "(x_0_6 mod n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 + 6 + 8 + 3 + 6 - 1 + 9 - 6 - 5 - 3 - 8 - 6 + 80 + 18 - 80 - 108 + 240 + 1080 + 0 - 1 6200 + 0 + 19 4400 + 0 - 291 6000 + 0 - 2624 4000 + 0 + 30 7054 8000", "x2": "mul x_0_2 add INT- 9 x_0_12", "tree": "(x_0_2 mul (-9 add x_0_12))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 4 + 6 - 5 - 2 - 5 - 8 + 0 - 2 + 0 + 0 - 2 + 5 + 11 + 20 + 30 + 39 + 56 + 80 + 114 + 159 + 214", "x2": "sub add x_0_5 add x_0_1 n INT+ 5", "tree": "((x_0_5 add (x_0_1 add n)) sub 5)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 6 - 1 - 7 - 2 + 2 - 5 + 1 + 36 + 81 + 16 + 100 + 4 + 81 + 1 + 16 + 169 + 256 + 25 + 16 + 324 + 1 + 256", "x2": "sqr mod x_0_7 n", "tree": "((x_0_7 mod n))**2", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 3 + 10 - 24 - 1932 - 2879 - 864 - 3702 - 8188 - 8097 - 7836 - 10 - 4 3200 - 1299 - 8 9596 - 14 7012 - 24 6012 - 29 6207 - 6 4800", "x2": "sub mod sqr n sub sign INT+ 7 INT- 5 mul sqr mod x_0_2 sub mul INT- 7 n n n", "tree": "(((n)**2 mod (sign(7) sub -5)) sub (((x_0_2 mod ((-7 mul n) sub n)))**2 mul n))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 6 + 2 - 2 + 1 + 1 - 3 + 1 - 7 - 3 - 6 - 6 - 2 - 6 + 2 - 2 + 1 + 1 - 3 + 1 - 7 - 3 - 6", "x2": "sub INT- 5 x_0_6", "tree": "(-5 sub x_0_6)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 7 + 1 - 3 - 35 + 5 - 15 - 175 + 25 - 75 - 875 + 125 - 375 - 4375 + 625 - 1875 - 2 1875 + 3125 - 9375 - 10 9375", "x2": "mul INT+ 5 x_0_3", "tree": "(5 mul x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 - 1 - 8 + 6 + 1 - 1 - 4 - 10 - 10 + 6 - 44 - 12 - 104 + 84 + 15 + 0 - 68 - 180 - 190 + 120 - 924 - 264 - 2392 + 2016 + 375 + 26", "x2": "mul add x_0_10 mod x_0_1 INT+ 2 mul n sign n", "tree": "((x_0_10 add (x_0_1 mod 2)) mul (n mul sign(n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 4 - 9 - 7 + 4 - 10 + 3 + 6 + 0 + 0 - 16 - 36 - 28 - 16 - 40 - 12 - 24 + 0 + 0 - 64 - 60 - 24 - 64 - 64 - 48", "x2": "mul mod abs x_0_9 relu n INT- 4", "tree": "((abs(x_0_9) mod relu(n)) mul -4)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 9 - 9 + 7 + 0 - 9 + 3 - 6 + 49 + 56 + 56 + 47 + 50 + 44 + 93 + 149 + 205 + 252 + 302 + 346 + 439 + 588 + 309", "x2": "add x_0_6 mod x_0_1 sqr add n idiv mod x_0_4 n add sub add x_0_3 x_0_6 relu INT+ 7 INT+ 8", "tree": "(x_0_6 add (x_0_1 mod ((n add ((x_0_4 mod n) idiv (((x_0_3 add x_0_6) sub relu(7)) add 8))))**2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 4 - 7 + 5 - 10 - 9 - 4 - 3 - 7 - 10 + 2 - 15 - 12 - 7 - 6 - 10 - 13 - 1 - 18 - 15 - 10 - 9 - 13 - 16", "x2": "add x_0_7 sub INT- 8 sub abs relu x_0_1 INT+ 5", "tree": "(x_0_7 add (-8 sub (abs(relu(x_0_1)) sub 5)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 7 - 2 - 5 - 8 - 9 + 0 - 15 - 8 - 11 - 6 - 15 - 14 - 13 - 14 - 17 - 12 - 21", "x2": "sub sub mod x_0_1 INT+ 8 mod x_0_2 INT+ 8 n", "tree": "(((x_0_1 mod 8) sub (x_0_2 mod 8)) sub n)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 4 - 6 - 5 - 7 - 4 - 4 + 7 - 8 + 63 + 87 + 548 + 778 + 4857 + 6906 + 4 3167 + 6 1374 + 38 3700 + 54 5609 + 341 767 + 485 432 + 3031 8837 + 4312 41 + 2 6950 8838 + 3 8333 4477", "x2": "sub add add abs add abs sign n sub INT+ 1 0 mul x_0_2 INT+ 9 x_0_9 x_0_8 add x_0_4 INT- 1 0", "tree": "(((abs((abs(sign(n)) add (10 sub (x_0_2 mul 9)))) add x_0_9) add x_0_8) sub (x_0_4 add -10))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 1 + 1 + 3 + 4 + 7 + 12 + 12 + 13 + 15 + 18 + 22 + 27 + 33 + 40 + 48 + 57 + 67", "x2": "add relu x_0_1 mod mod INT- 7 INT- 9 n", "tree": "(relu(x_0_1) add ((-7 mod -9) mod n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 4 + 8 + 3 + 10 + 12 + 21 + 32 + 52 + 83 + 134 + 216 + 349 + 564 + 912 + 1475 + 2386 + 3860 + 6245", "x2": "add x_0_2 mod INT- 2 add sign n x_0_1", "tree": "(x_0_2 add (-2 mod (sign(n) add x_0_1)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 4 - 6 - 55 - 496 - 4465 - 4 186 - 36 1675 - 325 5076 - 2929 5685 - 2 6366 1166 - 23 7295 495 - 213 5655 4456 - 1922 899 105 - 1 7298 8091 946 - 15 5689 2819 8515 - 140 1203 5378 6636 - 1261 831 8407 9725 - 1 1349 7486 5671 7526", "x2": "sub mul x_0_1 INT+ 9 sign sqr idiv idiv relu INT- 1 x_0_2 INT+ 1", "tree": "((x_0_1 mul 9) sub sign((((relu(-1) idiv x_0_2) idiv 1))**2))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 100 + 361 + 784 + 1369 + 2116 + 3025 + 4096 + 5329 + 6724 + 8281 + 1 0 + 1 1881 + 1 3924 + 1 6129 + 1 8496", "x2": "sqr sub add sub INT+ 1 sub mul n INT- 9 INT- 1 0 idiv INT- 3 INT+ 2 INT- 3", "tree": "((((1 sub ((n mul -9) sub -10)) add (-3 idiv 2)) sub -3))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 8 - 9 + 7 - 16 - 17 - 1 - 24 - 25 - 9 - 32 - 33 - 17 - 40 - 41 - 25 - 48 - 49 - 33 - 56", "x2": "add x_0_3 INT- 8", "tree": "(x_0_3 add -8)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 10 - 7 + 0 - 2 - 8 + 8 + 8 + 0 - 14 - 4 + 3 - 11 + 5 - 5 - 11 - 5 - 3 + 9 - 13 + 2 + 1 - 14 + 11 - 8", "x2": "sub INT- 8 add x_0_9 x_0_1", "tree": "(-8 sub (x_0_9 add x_0_1))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 10 - 5 - 8 - 3 + 5 + 10 + 5 + 9 + 3 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign x_0_10", "tree": "sign(x_0_10)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 2 + 320 + 284 + 7 2000 + 9 1448 + 3139 2000 + 5267 4048 + 228 8476 8000 + 469 8525 816 + 24 7842 374 4000 + 60 8928 8505 7536 + 3 7399 3634 4969 6000 + 10 7415 492 4149 3504 + 7573 3710 9856 3440 0 + 2 4748 4273 4524 103 3216 + 1967 5618 1140 6781 7120 0 + 7216 6414 1387 2014 1285 7856", "x2": "mul x_0_2 sub relu sqr mul INT+ 3 n mod sub x_0_2 n n", "tree": "(x_0_2 mul (relu(((3 mul n))**2) sub ((x_0_2 sub n) mod n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 10 + 10 + 10 + 14 - 5 - 4 - 7 + 13 + 13 + 17 - 2 - 1 - 4 + 16 + 16 + 20 + 1 + 2 - 1", "x2": "idiv mul sub n x_0_3 n n", "tree": "(((n sub x_0_3) mul n) idiv n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 2 - 4 - 7 - 11 - 16 - 22 - 29 - 37 - 46 - 56 - 67 - 79 - 92 - 106 - 121 - 137 - 154", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 + 2 + 4 - 2 - 3 + 0 + 6 - 80 + 180 + 400 - 220 - 360 + 0 + 840 - 1 2000 + 2 8800 + 6 8000 - 3 9600 - 6 8400 + 0 + 17 6400 - 264 0 + 662 4000", "x2": "mul mul INT+ 1 0 x_0_7 n", "tree": "((10 mul x_0_7) mul n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 10 + 5 + 3 + 10 + 7 + 7 + 11 + 15 + 10 + 15 + 17 + 15 + 14 + 20 + 17 + 17 + 21 + 24 + 20 + 25", "x2": "add relu abs relu sub n x_0_5 abs abs n", "tree": "(relu(abs(relu((n sub x_0_5)))) add abs(abs(n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 4 + 9 + 6 - 2304 + 1320 + 1872 - 2109 + 1527 + 2077 - 1914 + 1733 + 2281 - 1720 + 1938 + 2485 - 1526 + 2143 + 2689 - 1333", "x2": "idiv relu sqr add x_0_3 relu sqr INT+ 1 0 x_0_3", "tree": "(relu(((x_0_3 add relu((10)**2)))**2) idiv x_0_3)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272", "x2": "add sqr n n", "tree": "((n)**2 add n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 3 + 0 + 1 + 2 - 10 - 10 + 5 + 0 + 0 + 0 + 3 + 5 + 5 + 0 + 0 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 0", "x2": "mod mod sub x_0_8 x_0_2 add sign mod relu x_0_1 n x_0_6 sub n sign x_0_8", "tree": "(((x_0_8 sub x_0_2) mod (sign((relu(x_0_1) mod n)) add x_0_6)) mod (n sub sign(x_0_8)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 6 - 2 + 2 + 0 - 2 + 10 + 8 + 10 + 1 + 5 - 1 + 0 + 0 - 1 + 1 + 0 - 1 + 0 - 5 + 0 + 0 + 0 + 0 - 1", "x2": "idiv add x_0_9 x_0_1 sub sub INT+ 4 mul x_0_6 sub idiv n INT+ 2 n add INT+ 8 INT- 3", "tree": "((x_0_9 add x_0_1) idiv ((4 sub (x_0_6 mul ((n idiv 2) sub n))) sub (8 add -3)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 3 - 4 - 2 + 4 + 6 + 5 - 9 + 9 + 900 + 361 + 100 + 1 + 64 + 9 + 81 + 841 + 100 + 361 + 100 + 1 + 100 + 9 + 676 + 1225", "x2": "sqr sub mod n x_0_9 mul add mod mod abs n INT- 7 INT- 5 idiv relu n INT+ 9 INT+ 1 0", "tree": "(((n mod x_0_9) sub ((((abs(n) mod -7) mod -5) add (relu(n) idiv 9)) mul 10)))**2", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 9 - 4 + 3 + 2 + 0 + 4 + 2 + 2 + 8 + 6 + 4 + 9 + 3 + 14 + 5 + 2 + 6 + 1", "x2": "mod sub sub x_0_1 idiv sign sqr abs n n x_0_3 n", "tree": "(((x_0_1 sub (sign((abs(n))**2) idiv n)) sub x_0_3) mod n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 - 4 + 4 + 7 + 8 + 8 - 9 - 10 - 2 + 1 + 2 + 2 - 15 - 16 - 8 - 5 - 4 - 4 - 21 - 22 - 14 - 11", "x2": "add x_0_6 INT- 6", "tree": "(x_0_6 add -6)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 - 6 + 1 - 7 - 7 - 6 - 7 - 7 - 6 - 6 - 7 - 6 - 5 - 6 - 6 - 5 - 5 - 6 - 5 - 4 - 5 - 5", "x2": "add idiv mod x_0_4 x_0_6 add x_0_1 mod mod abs INT+ 5 n sign n x_0_3", "tree": "(((x_0_4 mod x_0_6) idiv (x_0_1 add ((abs(5) mod n) mod sign(n)))) add x_0_3)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 6 + 22 + 53 + 87 + 124 + 164 + 207 + 253 + 302 + 354 + 409 + 467 + 528 + 592 + 659 + 729 + 802", "x2": "sub x_0_1 add add sub n mul INT+ 4 sub n INT- 6 abs relu INT- 8 INT+ 2", "tree": "(x_0_1 sub (((n sub (4 mul (n sub -6))) add abs(relu(-8))) add 2))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 2 + 1 + 2 + 5 + 5 + 2 + 5 + 6 + 4 + 5 + 13 + 2 + 5 + 10 + 16 + 5", "x2": "add mod mul x_0_1 x_0_1 add sqr mod abs sign n n n sign abs x_0_1", "tree": "(((x_0_1 mul x_0_1) mod (((abs(sign(n)) mod n))**2 add n)) add sign(abs(x_0_1)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 5 - 3 + 9 + 4 - 7 - 6 + 2 - 5 + 5 + 7 + 19 + 14 + 3 + 4 + 12 + 5 + 15 + 17 + 29 + 24 + 13 + 14 + 22 + 15", "x2": "add x_0_8 INT+ 1 0", "tree": "(x_0_8 add 10)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 4 + 3 - 10 + 8 - 4 + 2 + 5 - 8 - 2 - 8 + 16 + 4 + 25 + 64 + 4 + 64 + 256 + 16 + 625 + 4096 + 16 + 4096 + 6 5536 + 256 + 39 625 + 1677 7216", "x2": "sqr sub x_0_6 idiv sign n sub sqr n sign mul abs x_0_11 mod x_0_2 n", "tree": "((x_0_6 sub (sign(n) idiv ((n)**2 sub sign((abs(x_0_11) mul (x_0_2 mod n)))))))**2", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 1 - 8 + 6 + 1 - 9 - 3 + 3 + 2 + 3 + 3 + 5 + 7 + 19 + 21 + 34 + 40 + 48 + 59 + 75 + 92 + 100 + 115", "x2": "relu sub abs add x_0_1 mod mul INT- 9 x_0_7 n sign relu n", "tree": "relu((abs((x_0_1 add ((-9 mul x_0_7) mod n))) sub sign(relu(n))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 9 + 0 + 4 + 0 + 25 + 60 + 49 + 264 + 621 + 590 + 3025 + 7596 + 7839 + 4 2546 + 11 4165 + 12 5680 + 72 3571 + 205 5294 + 238 8281 + 1447 1820 + 4316 1615 + 5254 2666 + 3 3285 2389 + 10 3587 9336", "x2": "idiv relu mul add x_0_3 relu n n sign INT+ 1 0", "tree": "(relu(((x_0_3 add relu(n)) mul n)) idiv sign(10))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 0 + 4 + 2 + 0 + 4 + 2 + 0 + 4 + 2 + 0 + 4 + 2 + 0 + 4 + 2 + 0 + 4 + 2 + 0 + 4 + 2 + 0 + 4", "x2": "relu mod x_0_3 n", "tree": "relu((x_0_3 mod n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 6 + 7 - 6 + 8 - 2 + 6 + 85 + 75 + 85 + 25 + 100 + 55 + 100 + 500 + 455 + 510 + 215 + 595 + 375 + 605 + 2610 + 2390 + 2670 + 1200 + 3105 + 2010 + 3165", "x2": "mul INT+ 5 add x_0_7 relu n", "tree": "(5 mul (x_0_7 add relu(n)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 4 - 4 + 6 + 3 - 6 + 4 + 0 + 7 + 0 + 8 + 0 + 7 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 5 + 0 + 0", "x2": "mod mul add x_0_4 x_0_6 x_0_4 INT+ 1 0", "tree": "(((x_0_4 add x_0_6) mul x_0_4) mod 10)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 6 - 3 + 1 + 1 - 10 - 29 - 2 + 6 + 6 - 93 - 834 + 3 - 29 - 29 - 8642 - 69 5549 - 2 - 834 - 834 - 7468 4157 - 4837 8841 1394 + 3 - 69 5549 - 69 5549 - 5577 7233 680 642 - 2340 5122 6999 1301 8902 3229", "x2": "sub INT+ 7 sqr x_0_5", "tree": "(7 sub (x_0_5)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 3 - 1 - 47 - 64 - 85 - 106 - 129 - 154 - 181 - 210 - 241 - 274 - 309 - 346 - 385 - 426 - 469 - 514 - 561 - 610 - 661 - 714 - 769", "x2": "sub add mul n INT- 8 sign x_0_3 sqr n", "tree": "(((n mul -8) add sign(x_0_3)) sub (n)**2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 - 4 - 3 + 0 + 2 + 6 + 9 + 14 + 18 + 24 + 29 + 36 + 42 + 50 + 57 + 66 + 74 + 84 + 93 + 104 + 114 + 126 + 137", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 8 + 10 + 3 + 6 + 1 - 7 - 1 - 9 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0", "x2": "relu idiv sub n abs abs sub idiv n sqr add n n mod x_0_8 INT- 5 n", "tree": "relu(((n sub abs(abs(((n idiv ((n add n))**2) sub (x_0_8 mod -5))))) idiv n))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 2 + 6 + 6 + 208 + 7286 + 25 5016 + 892 5768 + 3 1240 9166 + 109 3457 5826 + 3827 1907 9678 + 13 3954 8019 7896 + 468 8527 4150 2186 + 1 6410 2286 7165 6188 + 57 4371 3989 8816 4476 + 2010 3467 8173 2725 8846 + 7 363 7783 8351 2571 5798 + 246 2789 6805 6283 8821 7406 + 8619 9649 1664 8109 1486 8056 + 30 1705 8084 6052 2171 4609 7758 + 1055 9949 5750 8633 2285 163 8936 + 3 6960 6855 929 3827 8084 7223 816 + 129 3654 1634 613 25 5136 7417 6318 + 4527 8951 7141 7205 9526 2070 9781 66 + 15 8480 270 6815 3137 7245 568 9558 3126", "x2": "add idiv mul mul abs x_0_1 INT- 7 sub INT- 7 INT+ 8 abs INT+ 3 x_0_3", "tree": "((((abs(x_0_1) mul -7) mul (-7 sub 8)) idiv abs(3)) add x_0_3)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 5 - 2 - 1 + 2 - 3 - 2 - 1 - 6 - 3 - 10 - 9 - 6 - 11 - 10 - 9 - 14 - 11 - 18 - 17 - 14 - 19 - 18", "x2": "sub mod add mul x_0_2 abs relu INT+ 3 n INT+ 8 mod n sub abs mul INT- 5 INT+ 1 0 n", "tree": "((((x_0_2 mul abs(relu(3))) add n) mod 8) sub (n mod (abs((-5 mul 10)) sub n)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 4 + 2 + 7 + 36 + 216 + 1512 + 1 2096 + 10 8864 + 108 8640 + 1197 5040 + 1 4370 480 + 18 6810 6240 + 261 5348 7360 + 3923 231 400 + 6 2768 3696 6400 + 106 7062 2842 8800 + 1920 7121 1171 8400 + 3 6493 5301 2264 9600 + 72 9870 6024 5299 2000 + 1532 7282 6515 1283 2000 + 3 3720 218 3332 8230 4000 + 77 5560 5021 6654 9299 2000 + 1861 3452 519 9718 3180 8000", "x2": "sub mul n x_0_1 idiv x_0_3 x_0_1", "tree": "((n mul x_0_1) sub (x_0_3 idiv x_0_1))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7", "x2": "idiv n INT- 3", "tree": "(n idiv -3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 7 - 8 - 9 - 3 + 1 + 10 + 5 - 120 + 112 - 136 - 162 - 57 + 20 + 210 + 110 - 2760 + 2688 - 3400 - 4212 - 1539 + 560 + 6090 + 3300 - 8 5560 + 8 6016 - 11 2200 - 14 3208 - 5 3865", "x2": "mul add INT+ 6 n x_0_8", "tree": "((6 add n) mul x_0_8)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 + 9 + 11 - 8 - 10 + 9 + 11 - 8 - 10 + 9 + 11 - 8 - 10 + 9 + 11 - 8 - 10 + 9 + 11 - 8 - 10 + 9 + 11", "x2": "sub sqr idiv INT- 3 n x_0_2", "tree": "(((-3 idiv n))**2 sub x_0_2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 9 - 10 + 9 + 0 - 7 - 7 - 6 - 1 - 7 - 34 - 16 - 25 - 28 - 35 - 62 - 40 - 56 - 87 - 77 - 114 - 96 - 120 - 179 - 148 - 202 - 216 - 231 - 328", "x2": "sub add sub x_0_8 n x_0_5 INT+ 6", "tree": "(((x_0_8 sub n) add x_0_5) sub 6)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 6 + 20 - 5 + 3 - 7 + 63 - 7 + 0 - 4 - 11 - 6 - 3 - 6 - 10 - 7 - 5 - 9 - 4 - 3 - 6 - 7 - 6", "x2": "add sub idiv INT- 2 INT- 1 0 sub sign x_0_2 sub n n idiv sqr INT- 8 add x_0_2 mod n INT- 9", "tree": "(((-2 idiv -10) sub (sign(x_0_2) sub (n sub n))) add ((-8)**2 idiv (x_0_2 add (n mod -9))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 10 + 10 + 10 + 40 + 66 + 77 + 88 + 369 + 670 + 858 + 1068 + 4810 + 9394 + 1 2885 + 1 7104 + 8 1787 + 16 9110 + 24 4834 + 34 2100 + 171 7548 + 372 442 + 563 1205 + 821 424 + 4293 8725", "x2": "add mul n x_0_4 n", "tree": "((n mul x_0_4) add n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 6 - 6 - 3 - 2 + 2 + 4 + 9 + 12 + 18 + 22 + 29 + 34 + 42 + 48 + 57 + 64 + 74 + 82 + 93 + 102 + 114 + 124 + 137", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 + 1 + 9 - 7 - 7 - 3 - 19 - 15 - 3 - 7 + 13 + 45 + 65 + 113 + 177 + 233 + 321 + 429 + 533 + 673 + 837 + 1001 + 1205 + 1437", "x2": "add x_0_3 mul add idiv add n n INT+ 1 INT- 8 add abs n INT- 9", "tree": "(x_0_3 add ((((n add n) idiv 1) add -8) mul (abs(n) add -9)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 0 - 5 + 2 + 14 + 9 + 14 + 11 + 23 + 18 + 23 + 20 + 32 + 27 + 32 + 29 + 41 + 36 + 41 + 38 + 50 + 45 + 50 + 47 + 59", "x2": "add abs INT- 9 abs x_0_4", "tree": "(abs(-9) add abs(x_0_4))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "relu sqr abs abs n", "tree": "relu((abs(abs(n)))**2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 13 + 68 + 229 + 580 + 1229 + 2308 + 3973 + 6404 + 9805 + 1 4404 + 2 453 + 2 8228 + 3 8029 + 5 180 + 6 5029 + 8 2948 + 10 4333 + 12 9604 + 15 9205 + 19 3604", "x2": "add relu sqr sub sqr n sign INT+ 5 INT+ 4", "tree": "(relu((((n)**2 sub sign(5)))**2) add 4)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 2 + 7 + 0 + 8 + 6 + 2 - 10 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8 - 8 - 8 - 9 - 9 - 9 - 10", "x2": "idiv mod n sqr add idiv relu sign x_0_7 x_0_1 abs abs n add INT- 5 INT+ 2", "tree": "((n mod (((relu(sign(x_0_7)) idiv x_0_1) add abs(abs(n))))**2) idiv (-5 add 2))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 8 + 0 + 10 - 7 - 10 + 6 - 9 + 7 + 27 + 12 + 22 + 34 + 19 + 18 + 36 + 23 + 41 + 63 + 50 + 62 + 76 + 63 + 64 + 84 + 73 + 93 + 117 + 106 + 120", "x2": "sub abs relu add x_0_9 relu abs add n n INT+ 2", "tree": "(abs(relu((x_0_9 add relu(abs((n add n)))))) sub 2)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 6 - 7 + 294 + 343 - 1 4406 - 1 6807 + 70 5894 + 82 3543 - 3458 8806 - 4035 3607 + 16 9485 1494 + 19 7732 6743 - 830 4772 3206 - 968 8901 407 + 4 693 3843 7094 + 4 7475 6150 9943 - 199 3975 8341 7606 - 232 6305 1398 7207 + 9770 4815 8746 2694 + 1 1398 8951 8537 3143 - 47 8753 5977 8567 2006 - 55 8545 8640 8328 4007 + 2345 8926 2914 9792 8294", "x2": "mul x_0_2 mul sign sub abs n abs x_0_1 sqr INT+ 7", "tree": "(x_0_2 mul (sign((abs(n) sub abs(x_0_1))) mul (7)**2))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr mod add INT- 2 relu idiv n n n", "tree": "(((-2 add relu((n idiv n))) mod n))**2", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 46 + 82 + 128 + 184 + 250 + 326 + 412 + 508 + 614 + 730 + 856 + 992 + 1138 + 1294 + 1460 + 1636 + 1822 + 2018 + 2224 + 2440 + 2666", "x2": "add n mul sqr abs sub n sub n sub INT- 2 n INT+ 5", "tree": "(n add ((abs((n sub (n sub (-2 sub n)))))**2 mul 5))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 5 + 8 + 8 - 2 + 3 - 7 - 7 + 3 - 6 - 3 - 2 - 1 918 - 1 3648 - 2 6878 - 3 2638 + 9794 - 1 7440 + 4 7882 + 5 5862 - 2 7718 + 6 3758 + 3 6434 + 2 7602 + 1 7032 802 + 2 3952 2402 + 5 2831 3970 + 7 1555 5514 - 2 3858 1838 + 4 7035 6802 - 14 2496 8318 - 18 2869 8430 + 9 9518 7074", "x2": "sub mul mul n x_0_12 sub sign n sqr n INT- 2", "tree": "(((n mul x_0_12) mul (sign(n) sub (n)**2)) sub -2)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 2 - 6 + 4 + 7 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7", "x2": "mod mul sign mul n sqr x_0_4 n INT- 8", "tree": "((sign((n mul (x_0_4)**2)) mul n) mod -8)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 1 - 10 + 53 + 1 + 21 - 7 + 111 + 83 + 15 - 67 + 3 + 151 + 135 + 205 - 77 - 31 - 159 + 153 + 61 + 319 + 3 + 201 - 301", "x2": "sub sub sign x_0_2 mod x_0_3 mul INT- 2 mul INT+ 7 n x_0_3", "tree": "((sign(x_0_2) sub (x_0_3 mod (-2 mul (7 mul n)))) sub x_0_3)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 5 - 7 - 8 - 52 - 70 - 90 - 112 - 136 - 162 - 190 - 220 - 252 - 286 - 322 - 360 - 400 - 442 - 486 - 532 - 580 - 630 - 682 - 736 - 792", "x2": "mul relu n mul mul sign sign sqr x_0_3 sub INT- 9 n relu sign n", "tree": "(relu(n) mul ((sign(sign((x_0_3)**2)) mul (-9 sub n)) mul relu(sign(n))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 8 - 4 - 4 - 5 - 9 - 6 + 7 - 7 - 1 + 8 + 424 + 95 + 103 + 9 + 566 + 602 - 245 + 666 + 8 - 17 - 6 4431 - 1 4387 - 1 6455 - 134 - 10 1500 - 11 2588 + 1646 - 13 4175 - 613 + 6 5516", "x2": "add abs x_0_9 mul n mul INT- 7 mod INT- 5 x_0_10", "tree": "(abs(x_0_9) add (n mul (-7 mul (-5 mod x_0_10))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 - 4 - 4 - 8 - 8 - 12 - 12 - 16 - 16 - 20 - 20 - 24 - 24 - 28 - 28 - 32 - 32 - 36 - 36 - 40", "x2": "mul add sub mod mul INT+ 3 add INT+ 1 n INT- 2 sign n n mul relu relu INT+ 2 INT- 1", "tree": "(((((3 mul (1 add n)) mod -2) sub sign(n)) add n) mul (relu(relu(2)) mul -1))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 + 0 + 1 + 2 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0", "x2": "mod add relu x_0_1 x_0_3 abs add sign x_0_3 x_0_3", "tree": "((relu(x_0_1) add x_0_3) mod abs((sign(x_0_3) add x_0_3)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 10 + 6 + 3 - 10 + 9 - 8 - 5 - 10 + 144 + 0 + 33 + 192 + 39 + 196 + 165 + 256 + 2346 + 108 + 513 + 3720 + 693 + 4180 + 3657 + 6000 + 5 8500 + 2652 + 1 3689 + 10 3992 + 1 9923", "x2": "mul abs sub x_0_8 INT+ 6 abs n", "tree": "(abs((x_0_8 sub 6)) mul abs(n))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 10 - 10 + 8 - 9 + 5 - 3 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign idiv x_0_7 sub mod n add x_0_4 x_0_2 INT+ 1 0", "tree": "sign((x_0_7 idiv ((n mod (x_0_4 add x_0_2)) sub 10)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 4 + 5 - 6 + 8 - 8 - 1 + 1 - 2 + 2 - 4 - 37 + 50 - 32 + 40 - 25 - 4 + 2 - 6 + 4 - 9 - 64 + 144 - 54 + 90 - 45 - 7", "x2": "idiv add sqr sub INT+ 5 n idiv add INT+ 4 INT+ 8 abs n x_0_5", "tree": "((((5 sub n))**2 add ((4 add 8) idiv abs(n))) idiv x_0_5)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 4 - 12 - 28 - 60 - 124 - 252 - 508 - 1020 - 2044 - 4092 - 8188 - 1 6380 - 3 2764 - 6 5532 - 13 1068 - 26 2140 - 52 4284 - 104 8572 - 209 7148 - 419 4300 - 838 8604", "x2": "sub sub x_0_1 INT+ 4 relu abs x_0_1", "tree": "((x_0_1 sub 4) sub relu(abs(x_0_1)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 - 5 - 1 + 9 + 45 + 36 + 14 + 0 + 0 + 0 + 0 + 12 + 13 + 14 + 15 + 0 + 0 + 0 + 0 + 20 + 21 + 22 + 23 + 0 + 0", "x2": "relu sub n mul n x_0_4", "tree": "relu((n sub (n mul x_0_4)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 19 - 18 - 17 - 16 - 15 - 14 - 13 - 12 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 19", "x2": "mod idiv sqr n n mul INT+ 1 0 INT- 2", "tree": "(((n)**2 idiv n) mod (10 mul -2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 - 7 + 1 + 9 - 7 + 2 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign mul x_0_6 n", "tree": "sign((x_0_6 mul n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 1 - 4 + 3 - 5 + 5 - 7 + 7 - 4 - 12 - 15 - 25 - 35 - 49 - 28 + 48 + 180 + 375 + 875 + 1715 + 1372 - 1344 + 8640 + 6 7500 + 32 8125 + 150 625 + 235 2980 - 184 3968", "x2": "mul x_0_6 add x_0_7 mod sub n relu n sign add INT+ 1 0 add INT- 5 n", "tree": "(x_0_6 mul (x_0_7 add ((n sub relu(n)) mod sign((10 add (-5 add n))))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 + 3 + 5 - 40 + 18 + 35 - 320 + 162 + 350 - 3520 + 1944 + 4550 - 4 9280 + 2 9160 + 7 2800 - 83 7760 + 52 4880 + 138 3200 - 1675 5200 + 1102 2480 + 3043 400 - 3 8536 9600 + 2 6453 9520 + 7 6076 0", "x2": "sub mul add n idiv n n x_0_3 mod n n", "tree": "(((n add (n idiv n)) mul x_0_3) sub (n mod n))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 1 + 5 - 6 - 11 + 1 - 11 - 10 - 15 + 1 - 15 - 46 - 136 + 1 - 136 - 830 - 5320 + 1 - 5320 - 58 7586 - 2763 856 + 1 - 2763 856 - 3451 8268 8070 - 763 4606 9417 8120", "x2": "sub x_0_4 sqr mod add mul n relu sqr mod n INT- 1 sqr INT- 8 x_0_4", "tree": "(x_0_4 sub ((((n mul relu(((n mod -1))**2)) add (-8)**2) mod x_0_4))**2)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 2 + 7 + 6 + 5 - 9 + 4 - 8 + 7 - 4 - 1 + 2 - 6 - 4 - 2 + 9 - 3 + 10 - 4 + 4 + 2 + 0 + 9 + 4 + 3 - 7 + 6 - 10 + 5 - 2 + 1", "x2": "sub relu mod n INT+ 4 x_0_10", "tree": "(relu((n mod 4)) sub x_0_10)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 3 - 1 - 6 + 6 + 8 + 5 - 5 - 66 - 81 - 105 - 114 - 135 - 163 - 200 - 290 - 336 - 393 - 437 - 495 - 562 - 640 - 773 - 864 - 968 - 1061 - 1170 - 1290 - 1423", "x2": "sub INT+ 1 sub sqr n x_0_7", "tree": "(1 sub ((n)**2 sub x_0_7))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 9 + 16 + 121 + 196 + 1764 + 3136 + 5184 + 8100 + 1 2100 + 1 7424 + 2 4336 + 3 3124 + 4 4100 + 5 7600 + 7 3984 + 9 3636 + 11 6964 + 14 4400 + 17 6400 + 21 3444 + 25 6036 + 30 4704", "x2": "sqr abs add n mod sqr n x_0_2", "tree": "(abs((n add ((n)**2 mod x_0_2))))**2", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323 - 360 - 399 - 440", "x2": "sub sign mul mod relu INT- 7 n n sqr relu n", "tree": "(sign(((relu(-7) mod n) mul n)) sub (relu(n))**2)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 2 + 6 - 6 + 2 - 3 - 9 + 0 + 14 + 3 + 21 + 20 + 17 + 10 + 13 + 18 + 5 + 19 + 10 + 9 + 6 + 5 + 13 + 10 + 2 + 11 + 14 + 10", "x2": "abs sub add x_0_5 sub x_0_7 sign add n x_0_3 n", "tree": "abs(((x_0_5 add (x_0_7 sub sign((n add x_0_3)))) sub n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 6 - 2 + 2 + 5 + 7 + 10 - 14 - 11 + 14 + 52 - 96 - 107 - 191 - 561 - 1338 - 5557 + 1 8344 + 6 36 + 25 5568 + 311 7488 - 2454 1967 - 3 3361 2535 + 46 8817 1352 + 1871 6189 9269 - 6 2721 4142 2240 - 1040 330 7451 2063 - 11 5056 9460 2510 7947", "x2": "add add add relu idiv x_0_4 INT+ 8 mul x_0_4 x_0_6 INT- 9 n", "tree": "(((relu((x_0_4 idiv 8)) add (x_0_4 mul x_0_6)) add -9) add n)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 5 + 3 + 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12 + 15", "x2": "sub n sub x_0_1 INT+ 5", "tree": "(n sub (x_0_1 sub 5))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 4 + 1 + 1 - 2 + 7 + 7 - 4 + 1 + 1 - 2 + 7 + 7 - 4 + 1 + 1 - 2 + 7 + 7 - 4 + 1 + 1 - 2 + 7", "x2": "idiv INT+ 7 x_0_3", "tree": "(7 idiv x_0_3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 0 - 4 + 12 + 21 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437 + 480", "x2": "add INT- 4 mod sqr abs relu n add sign sub n INT+ 2 sqr x_0_1", "tree": "(-4 add ((abs(relu(n)))**2 mod (sign((n sub 2)) add (x_0_1)**2)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 7 + 2 + 3 - 5 + 1 - 8 + 6 - 9 + 14 - 15 + 23 - 29 + 38 - 52 + 67 - 90 + 119 - 157 + 209 - 276 + 366 - 485 + 642", "x2": "sub x_0_2 x_0_3", "tree": "(x_0_2 sub x_0_3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 8 + 11 - 7 + 12 - 6 + 13 - 5 + 14 - 4 + 15 - 3 + 16 - 2 + 17 - 1 + 18 + 0 + 19 + 1 + 20 + 2", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 4 - 5 + 8 - 10 - 2 + 7 - 2 - 2 + 4 + 8 - 10 - 2 + 7 - 2 - 2 + 4 + 8 - 10 - 2 + 7 - 2 - 2 + 4 + 8 - 10 - 2 + 7 - 2 - 2 + 4", "x2": "add relu idiv x_0_9 mul INT+ 2 add x_0_7 mul INT- 2 relu mod n x_0_1 x_0_7", "tree": "(relu((x_0_9 idiv (2 mul (x_0_7 add (-2 mul relu((n mod x_0_1))))))) add x_0_7)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 2 - 10 + 0 - 8 - 3 - 5 - 2 - 9 + 5 + 8 + 1 4161 + 484 + 1 3689 + 2304 + 7569 + 1849 + 2 8224 + 1 3689 + 2 7556 + 802 2036 5824 + 1614 4324 + 904 1808 4416 + 15 4653 4276 + 321 7574 9376 + 14 9621 9761 + 5358 2546 4001 + 1165 5805 6836 + 5744 2302 649 + 5 4120 9313 7082 3938 991 4161 + 63 5783 5458 3625 5366 5956 + 7 8564 9771 6495 7098 1759 5609", "x2": "sqr add n abs sub x_0_10 mul abs n x_0_9", "tree": "((n add abs((x_0_10 sub (abs(n) mul x_0_9)))))**2", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 0 - 3 + 7 + 10 + 0 - 3 + 7 + 10 + 0 - 3 + 7 + 10 + 0 - 3 + 7 + 10 + 0 - 3 + 7 + 10 + 0 - 3", "x2": "sub INT+ 7 x_0_2", "tree": "(7 sub x_0_2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 6 + 2 + 2 + 1 + 2 + 2 + 4 + 5 + 8 + 0 + 9 + 0 + 12 + 0 + 12 + 0 + 14 + 0 + 18 + 0 + 19 + 0 + 22", "x2": "mod mod x_0_2 INT- 5 n", "tree": "((x_0_2 mod -5) mod n)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 0 + 7 + 0 + 9 + 0 + 11 + 0 + 13 + 0 + 15 + 0 + 17 + 0 + 19 + 0 + 21 + 0 + 23 + 0 + 25 + 0 + 27", "x2": "relu add idiv sign mul sign INT- 8 INT- 5 abs x_0_2 add n INT+ 4", "tree": "relu(((sign((sign(-8) mul -5)) idiv abs(x_0_2)) add (n add 4)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 10 + 8 + 1 + 8 - 9 - 7 + 0 + 10 + 10 + 5 + 1 + 11 + 7 + 0 + 7 + 10 + 8 + 1 + 9 + 9 + 4 + 0 + 10 + 6 + 1 + 6 + 9 + 7 + 0 + 8 + 8", "x2": "abs add x_0_11 add sign n INT- 2", "tree": "abs((x_0_11 add (sign(n) add -2)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 8 - 8 + 13 - 30 + 54 - 114 + 220 - 448 + 886 - 1782 + 3552 - 7116 + 1 4218 - 2 8450 + 5 6884 - 11 3784 + 22 7550 - 45 5118 + 91 216 - 182 452 + 364 882 - 728 1786 + 1456 3548", "x2": "sub sub sqr idiv n x_0_2 add n x_0_1 add INT+ 1 x_0_1", "tree": "((((n idiv x_0_2))**2 sub (n add x_0_1)) sub (1 add x_0_1))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 + 30 - 150 + 750 - 3750 + 1 8750 - 9 3750 + 46 8750 - 234 3750 + 1171 8750 - 5859 3750 + 2 9296 8750 - 14 6484 3750 + 73 2421 8750 - 366 2109 3750 + 1831 546 8750 - 9155 2734 3750 + 4 5776 3671 8750 - 22 8881 8359 3750 + 114 4409 1796 8750 - 572 2045 8984 3750 + 2861 229 4921 8750", "x2": "mul x_0_1 INT- 5", "tree": "(x_0_1 mul -5)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 + 3 + 2 - 9 + 3 - 3 + 1 + 0 - 11 + 1 - 5 - 1 - 2 - 13 - 1 - 7 - 3 - 4 - 15 - 3 - 9 - 5 - 6 - 17 - 5 - 11", "x2": "add x_0_5 sub sign sign INT- 8 sign add add sqr INT- 1 0 x_0_2 relu relu INT+ 9", "tree": "(x_0_5 add (sign(sign(-8)) sub sign((((-10)**2 add x_0_2) add relu(relu(9))))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 8 - 6 + 10 - 8 - 5 - 3 + 10 - 2 - 5 - 8 - 8 - 8 - 13 - 8 + 7 + 8 - 7 - 13 - 16 - 16 + 5 - 5 - 15 - 1 + 15 + 6 - 29 - 32 - 21 + 10 + 10 - 14 - 16", "x2": "add x_0_9 mul sign sub x_0_12 sub n sqr INT- 5 x_0_8", "tree": "(x_0_9 add (sign((x_0_12 sub (n sub (-5)**2))) mul x_0_8))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 9 - 3 - 7 + 10 + 8 + 2 + 1 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 0 + 0 + 1 + 0 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2", "x2": "mod n sub relu idiv x_0_4 x_0_5 INT- 4", "tree": "(n mod (relu((x_0_4 idiv x_0_5)) sub -4))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 4 - 10 - 8 + 10 + 5 + 3 - 8 - 9 - 3 - 1 - 2 + 1 + 2 + 4 - 2 - 2 - 6 - 18 - 10 + 20 + 10 + 5 - 12 - 12 - 5 - 2 - 3 + 1 + 2", "x2": "idiv n x_0_8", "tree": "(n idiv x_0_8)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 6 - 8 + 1 + 10 + 3 + 9 + 0 + 0 + 1 + 10 + 3 + 9 + 0 + 0 + 1 + 10 + 3 + 9 + 0 + 0 + 1 + 10 + 3 + 9 + 0 + 0", "x2": "relu relu x_0_6", "tree": "relu(relu(x_0_6))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 7 + 9 + 7 + 15 - 2 + 14 + 12 + 20 + 3 + 19 + 17 + 25 + 8 + 24 + 22 + 30 + 13 + 29 + 27 + 35 + 18 + 34 + 32 + 40", "x2": "add abs INT+ 5 x_0_4", "tree": "(abs(5) add x_0_4)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 + 6 + 9 - 9 + 6 - 6 + 17 + 33 - 32 + 22 - 26 + 45 + 120 - 114 + 82 - 102 + 110 + 438 - 408 + 307 - 377 + 220 + 1596 - 1463 + 1149 - 1330", "x2": "idiv add mul x_0_5 INT- 1 0 x_0_4 INT- 3", "tree": "(((x_0_5 mul -10) add x_0_4) idiv -3)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 10 - 8 + 8 - 2 + 15 + 14 - 1 + 10 - 6 - 4 + 12 + 2 + 19 + 18 + 3 + 14 - 2 + 0 + 16 + 6 + 23 + 22 + 7 + 18 + 2", "x2": "sub n x_0_4", "tree": "(n sub x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 + 10 + 14 + 19 + 25 + 32 + 40 + 49 + 59 + 70 + 82 + 95 + 109 + 124 + 140 + 157 + 175 + 194 + 214 + 235 + 257", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 + 2 + 2 + 3 - 5 - 6 + 2 - 6 + 6 + 194 + 447 + 7050 + 8087 + 9157 + 3975 + 4457 + 5004 + 1 1901 + 1 3232 + 1 4596 + 9708 + 1 484 + 1 1325 + 1 8516 + 2 141 + 2 1799 + 1 7205 + 1 8275 + 1 9410", "x2": "sub sqr mul INT- 7 mod n add sqr sign x_0_8 idiv sqr x_0_2 INT+ 5 x_0_3", "tree": "(((-7 mul (n mod ((sign(x_0_8))**2 add ((x_0_2)**2 idiv 5)))))**2 sub x_0_3)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0", "x2": "idiv mod n INT- 3 sign sqr INT+ 3", "tree": "((n mod -3) idiv sign((3)**2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 10 - 1 - 8 - 10 - 1 - 8 - 10 - 1 - 8 - 10 - 1 - 8 - 10 - 1 - 8 - 10 - 1 - 8 - 10 - 1 - 8 - 10 - 1", "x2": "mul abs x_0_3 idiv idiv sub INT- 1 sub n INT- 9 INT+ 1 0 n", "tree": "(abs(x_0_3) mul (((-1 sub (n sub -9)) idiv 10) idiv n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 4 + 1 + 9 + 7 - 7 - 7 - 7 - 7 + 7 - 7 + 7 - 7 - 7 - 7 - 7 + 7 - 7 + 7 - 7 - 7 - 7 - 7 + 7 - 7 + 7", "x2": "idiv x_0_1 sign mod abs mul mul sign n idiv INT- 8 n n x_0_4", "tree": "(x_0_1 idiv sign((abs(((sign(n) mul (-8 idiv n)) mul n)) mod x_0_4)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3", "x2": "mod n abs INT- 6", "tree": "(n mod abs(-6))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 1 - 9 + 1 - 9 - 7 - 6 - 5 + 6 - 49 + 3 + 15 + 7 + 20 - 3 + 7 - 18 - 11 + 38 - 7 + 13 - 20 - 15 + 11 - 10 + 32 + 2 - 33 + 14 - 24", "x2": "sub idiv mul n INT- 4 x_0_6 x_0_9", "tree": "(((n mul -4) idiv x_0_6) sub x_0_9)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 7 - 10 - 8 + 1 - 9 - 9 + 10 + 14 + 8 - 12 + 6 + 4 - 36 - 46 - 36 + 2 - 36 - 34 + 44 + 62 + 40 - 38 + 36 + 30 - 128 - 166 - 124", "x2": "add INT+ 1 0 mul mod abs INT- 1 0 INT- 6 add n x_0_6", "tree": "(10 add ((abs(-10) mod -6) mul (n add x_0_6)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 - 20 - 45 - 80 - 125 - 180 - 245 - 320 - 405 - 500 - 605 - 720 - 845 - 980 - 1125 - 1280 - 1445 - 1620 - 1805 - 2000 - 2205", "x2": "mul add INT- 6 sqr INT- 1 mul abs sign mul abs INT- 1 0 n sqr n", "tree": "((-6 add (-1)**2) mul (abs(sign((abs(-10) mul n))) mul (n)**2))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 8 - 8 - 5 - 8 + 10 - 4 + 8 - 8 - 8 + 8 + 5 - 8 + 10 + 4 + 8 - 8 - 8 - 8 - 5 + 8 - 10 + 4 - 8 - 8 + 8 + 8 - 5 + 8", "x2": "sub mul x_0_8 sign mod INT+ 9 x_0_2 idiv sign n INT+ 3", "tree": "((x_0_8 mul sign((9 mod x_0_2))) sub (sign(n) idiv 3))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul n relu n", "tree": "(n mul relu(n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 10 + 0 + 5 + 0 + 2 + 0 + 5 + 0 + 2 + 0 + 5 + 0 + 2 + 0 + 5 + 0 + 2 + 0 + 5 + 0 + 2 + 0 + 5 + 0", "x2": "mod x_0_4 n", "tree": "(x_0_4 mod n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 4 + 7 - 6 + 4 + 1 + 4 + 9 + 1 + 1 + 1 + 9 + 1 + 1 + 1 + 9 + 1 + 1 + 1 + 9 + 1 + 1 + 1 + 9 + 1", "x2": "relu sqr abs idiv INT+ 3 idiv INT- 9 x_0_4", "tree": "relu((abs((3 idiv (-9 idiv x_0_4))))**2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 1 + 0 - 4 - 4 - 25 + 36 - 49 - 64 - 81 + 100 - 121 - 144 - 169 + 196 - 225 - 256 - 289 + 324 - 361 - 400 - 441 + 484 - 529 - 576 - 625", "x2": "mul n mul abs n sign x_0_4", "tree": "(n mul (abs(n) mul sign(x_0_4)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 10 - 6 - 7 - 2 - 7 + 9 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign mul x_0_7 n", "tree": "sign((x_0_7 mul n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 1 - 1 + 9 + 0 - 1 + 2 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_7 add relu n mul idiv mul idiv INT+ 4 n INT+ 1 INT- 2 relu INT+ 4", "tree": "(x_0_7 idiv (relu(n) add ((((4 idiv n) mul 1) idiv -2) mul relu(4))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 8 + 8 + 3 + 10 + 4 + 2 - 10 + 169 + 36 + 625 + 256 + 289 + 324 + 361 + 203 625 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089", "x2": "sqr add idiv add INT+ 4 mod INT+ 4 mul x_0_8 x_0_3 relu sub INT+ 3 sign INT+ 8 n", "tree": "((((4 add (4 mod (x_0_8 mul x_0_3))) idiv relu((3 sub sign(8)))) add n))**2", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 4 + 7 + 1 - 10 + 3 - 10 + 7 + 10 + 9 + 6 + 16 + 6 + 16 + 8 + 8 + 7 + 4 + 8 + 6 + 16 + 7 + 8 + 7 + 6 + 8 + 5 + 16", "x2": "sub abs add sub sub x_0_7 INT- 5 mod add sqr sign n INT+ 9 x_0_5 INT- 7 INT- 4", "tree": "(abs((((x_0_7 sub -5) sub (((sign(n))**2 add 9) mod x_0_5)) add -7)) sub -4)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 9 - 7 - 2 + 10 - 4 - 5 + 0 - 3 - 8 - 2 + 19 + 19 + 12 + 7 + 19 + 19 + 10 + 19 + 19 + 19 + 7 + 9 + 10 + 10 + 9 + 10 + 10 + 10 + 11 + 10 + 19", "x2": "sub mod sqr INT+ 3 sub mod INT- 8 n x_0_10 INT- 1 0", "tree": "(((3)**2 mod ((-8 mod n) sub x_0_10)) sub -10)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 6 - 8 - 4 + 4 + 16 + 18 + 32 + 36 + 52 + 58 + 76 + 84 + 104 + 114 + 136 + 148 + 172 + 186 + 212 + 228 + 256 + 274 + 304 + 324 + 356", "x2": "idiv add n add n abs x_0_2 sign mod INT- 7 add n sign idiv INT- 7 x_0_5", "tree": "((n add (n add abs(x_0_2))) idiv sign((-7 mod (n add sign((-7 idiv x_0_5))))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 8 - 7 + 2 + 351 + 1 819 + 2 936 + 52 6084 + 1111 3256 + 3 9172 5364 + 83 7346 6376 + 6944 1146 8044 + 79 5804 819 3488 + 4969 8177 9370 2972 + 3 9121 8990 8407 5872 + 467 8835 1367 8108 7300 + 4 3613 3044 3435 1907 4232 + 168 2671 4159 627 8149 348 + 1966 8697 3376 6311 4899 3392 + 23 221 1317 9848 7510 4038 9632 + 1460 8272 7721 4215 6730 4935 9360 + 8 3392 6995 1399 3281 4765 2024 4224 + 1736 9556 9141 9716 1950 3358 2759 1168 + 10 3716 9852 8809 9012 131 5584 4081 6640", "x2": "mul mod sub relu x_0_2 idiv x_0_1 INT- 3 mul n INT- 1 0 sub x_0_2 x_0_1", "tree": "(((relu(x_0_2) sub (x_0_1 idiv -3)) mod (n mul -10)) mul (x_0_2 sub x_0_1))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 - 8 - 2 + 5 + 7 - 3 - 3 - 5 + 1 - 3 + 3 + 10 + 12 + 2 + 2 + 0 + 6 + 2 + 8 + 15 + 17 + 7 + 7 + 5 + 11 + 7 + 13 + 20 + 22", "x2": "add x_0_8 mod sub sub sub relu sign INT- 8 n INT- 5 sqr n n", "tree": "(x_0_8 add ((((relu(sign(-8)) sub n) sub -5) sub (n)**2) mod n))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 8 + 11 + 15 + 20 + 26 + 33 + 41 + 50 + 60 + 71 + 83 + 96 + 110 + 125 + 141 + 158 + 176 + 195 + 215 + 236 + 258", "x2": "relu add x_0_1 n", "tree": "relu((x_0_1 add n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 + 9 + 5 - 10 - 6 + 1 - 2 - 8 + 3 + 7 + 7 + 2 - 3 + 3 + 2 - 3 + 4 + 6 + 8 + 9 + 7 + 8 + 9 + 7 + 10 + 11 + 14 + 18 + 20", "x2": "add abs x_0_1 mod INT- 5 x_0_8", "tree": "(abs(x_0_1) add (-5 mod x_0_8))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 6 + 6 - 5 - 6 + 1 - 9 + 1 - 6 - 6 - 6 - 16 - 4 - 11 - 10 - 9 - 18 - 5 - 11 - 18 - 16 - 24 - 10 - 15 - 21 - 18 - 25", "x2": "add x_0_5 mod add relu x_0_5 abs n INT- 9", "tree": "(x_0_5 add ((relu(x_0_5) add abs(n)) mod -9))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224", "x2": "sub sqr n abs sign sub n add INT+ 5 INT- 6", "tree": "((n)**2 sub abs(sign((n sub (5 add -6)))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 3 + 8 + 5 + 6 + 32 + 12 + 45 + 10 + 20 + 48 + 94 + 158 + 15", "x2": "add sqr mod sub mul INT- 3 INT+ 1 0 n n n", "tree": "(((((-3 mul 10) sub n) mod n))**2 add n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 1 + 5 + 2 - 20 + 8 - 55 - 8 + 125 - 88 + 730 + 8 - 895 + 1240 - 1 1845 + 1112 + 3370 - 2 1208 + 22 8425", "x2": "sub x_0_2 mul x_0_4 n", "tree": "(x_0_2 sub (x_0_4 mul n))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 4 + 3 + 4 - 6 + 0 + 7 + 0 - 1 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv idiv x_0_7 idiv n n n", "tree": "((x_0_7 idiv (n idiv n)) idiv n)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 2 + 10 + 1 + 5 - 10 + 0 + 0 + 1 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv x_0_6 n", "tree": "(x_0_6 idiv n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 5 + 3 + 4 + 3 + 13 + 3 + 4 + 3 + 13 + 3 + 4 + 3 + 13 + 3 + 4 + 3 + 13 + 3", "x2": "mod x_0_4 abs add mul idiv INT+ 9 n n mul n INT+ 2", "tree": "(x_0_4 mod abs((((9 idiv n) mul n) add (n mul 2))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 72 + 288 + 792 + 1728 + 3240 + 5472 + 8568 + 1 2672 + 1 7928 + 2 4480 + 3 2472 + 4 2048 + 5 3352 + 6 6528 + 8 1720", "x2": "mul INT+ 4 mul add n n sub mul n add relu add n n n INT- 6", "tree": "(4 mul ((n add n) mul ((n mul (relu((n add n)) add n)) sub -6)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 9 + 9 + 6 + 8 + 3 + 5 + 0 + 2 + 3 + 1 + 0 + 2 + 3 + 1 + 0 + 2 + 3 + 1", "x2": "abs add sign mod INT+ 2 x_0_3 sub INT+ 2 x_0_2", "tree": "abs((sign((2 mod x_0_3)) add (2 sub x_0_2)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 8 - 10 + 3 - 7 - 10 + 6 - 3 + 19 + 2 + 0 + 13 + 3 + 0 + 16 + 7 + 29 + 12 + 10 + 23 + 13 + 10 + 26", "x2": "add x_0_8 mul mod add INT+ 2 mod mul relu n idiv sub INT- 2 x_0_8 INT+ 7 n add INT+ 7 n INT+ 5", "tree": "(x_0_8 add (((2 add ((relu(n) mul ((-2 sub x_0_8) idiv 7)) mod n)) mod (7 add n)) mul 5))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 7 - 5 + 7 + 7 - 5 + 7 + 7 - 5 + 7 + 7 - 5 + 7 + 7 - 5 + 7 + 7 - 5 + 7", "x2": "sub x_0_3 mul n mul sqr x_0_4 abs relu mod INT- 5 INT+ 5", "tree": "(x_0_3 sub (n mul ((x_0_4)**2 mul abs(relu((-5 mod 5))))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 8 - 7 + 5 - 1 + 9 - 9 + 56 + 56 + 45 + 10 + 99 + 108 + 728 + 784 + 675 + 160 + 1683 + 1944 + 1 3832 + 1 5680 + 1 4175", "x2": "abs mul n x_0_6", "tree": "abs((n mul x_0_6))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 729 + 2916 + 6561 + 1 1664 + 1 8225 + 2 6244 + 3 5721 + 4 6656 + 5 9049 + 7 2900 + 8 8209 + 10 4976 + 12 3201 + 14 2884 + 16 4025", "x2": "sqr mul INT+ 3 mul n INT- 9", "tree": "((3 mul (n mul -9)))**2", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 6 + 48 - 80 + 344 - 688 + 2696 - 5568 + 2 1496 - 4 4624 + 17 1880 - 35 7088 + 137 4936 - 285 6816 + 1099 9368 - 2285 4656 + 8799 4808", "x2": "mul INT- 8 sub n x_0_2", "tree": "(-8 mul (n sub x_0_2))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 9 + 1 + 7 - 7 - 5 + 5 + 0 + 111 + 390 - 11 + 228 + 227 + 106 + 105 - 21 + 6 1583 + 76 477 + 581 + 25 9895 + 25 7619 + 5 6153 + 5 5097", "x2": "sub INT+ 4 add sqr INT- 3 sub n mul INT+ 5 sqr x_0_8", "tree": "(4 sub ((-3)**2 add (n sub (5 mul (x_0_8)**2))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 6 - 8 + 7 + 9 - 6 - 8 + 7 + 9 - 6 - 8 + 7 + 9 - 6 - 8 + 7 + 9 - 6", "x2": "sub INT+ 1 x_0_2", "tree": "(1 sub x_0_2)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 3 - 4 - 17 - 24 - 93 - 152 - 659 - 1224 - 5939 - 1 2248 - 6 5337 - 14 6984 - 84 9389 - 205 7784 - 1274 843 - 3292 4552 - 2 1659 4339", "x2": "sub sqr sign mul n abs sign INT- 7 add INT+ 9 mul abs x_0_2 mul n INT+ 1", "tree": "((sign((n mul abs(sign(-7)))))**2 sub (9 add (abs(x_0_2) mul (n mul 1))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 + 1 - 3 - 3 + 36 - 35 + 56 - 81 + 30 + 330 - 492 + 806 - 1218 + 540 + 5184 - 8466 + 1 4616 - 2 3256 + 1 920", "x2": "mul add x_0_5 mul INT- 6 sign sign x_0_1 n", "tree": "((x_0_5 add (-6 mul sign(sign(x_0_1)))) mul n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 6 + 9 + 18 + 41 + 90 + 282 + 666 + 2484 + 6606 + 2 7270 + 7 9218 + 35 4456 + 110 8998 + 531 6786 + 1774 3914 + 9038 5308", "x2": "sub mul n relu x_0_2 mod mul INT+ 9 INT+ 6 mul mul n n INT+ 1", "tree": "((n mul relu(x_0_2)) sub ((9 mul 6) mod ((n mul n) mul 1)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 + 5 + 0 - 7 - 3 + 6 - 5 + 24 + 13 + 20 + 29 + 27 + 20 + 33 + 6 + 19 + 14 + 7 + 11 + 20 + 9 + 38", "x2": "add sub n x_0_7 n", "tree": "((n sub x_0_7) add n)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 4 + 10 + 1 - 8 - 13 - 290 + 67 + 1405 - 47 + 1791 + 45 - 4101 - 62 - 1 6092 + 27 + 6 2321 - 86 + 73 1736 + 1", "x2": "sub x_0_4 add INT+ 6 sub n idiv mul mul n x_0_2 n x_0_3", "tree": "(x_0_4 sub (6 add (n sub (((n mul x_0_2) mul n) idiv x_0_3))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 - 1 - 8 - 10 + 9 + 3 + 1 - 5 + 6 + 8 + 18 + 23 - 38 - 72 - 51 + 23 + 33 + 11 + 2 - 24 - 282 - 485 - 1398 - 5136 - 2551", "x2": "sub mul n INT+ 2 sqr x_0_10", "tree": "((n mul 2) sub (x_0_10)**2)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 2 + 3 + 5 + 8 - 393 - 546 - 720 - 918 - 1141 - 1386 - 1656 - 1950 - 2268 - 2610 - 2976 - 3366 - 3780 - 4218 - 4680", "x2": "sub idiv x_0_5 x_0_4 mul mul INT+ 6 add mul sub add INT- 3 INT+ 4 n mod idiv INT- 1 INT+ 1 INT- 1 0 n n", "tree": "((x_0_5 idiv x_0_4) sub ((6 mul ((((-3 add 4) sub n) mul ((-1 idiv 1) mod -10)) add n)) mul n))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 2 - 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2", "x2": "relu relu add INT- 2 relu relu mod sqr x_0_3 n", "tree": "relu(relu((-2 add relu(relu(((x_0_3)**2 mod n))))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 - 2 - 15 - 2 - 25 - 2 - 43 - 2 - 77 - 2 - 143 - 2 - 273 - 2 - 531 - 2 - 1045", "x2": "idiv add INT+ 1 0 sub add mod relu n x_0_2 x_0_2 INT+ 1 0 INT+ 1", "tree": "((10 add (((relu(n) mod x_0_2) add x_0_2) sub 10)) idiv 1)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 77 + 238 + 1919 + 9602 + 57 6199 + 5243 4212 + 50 3368 4447 + 453 316 30 + 4 5303 1600 3079 + 647 8351 8844 400 + 12 4384 3561 8055 6927 + 2102 956 1945 1412 766 + 5 8858 6773 4463 9538 1463 + 618 161 1211 8715 1505 3670 + 25 7094 7026 4138 5502 6232 6927", "x2": "sub mul mod x_0_1 mul mul n INT- 2 abs INT+ 1 sub INT- 8 mul n x_0_1 sign n", "tree": "(((x_0_1 mod ((n mul -2) mul abs(1))) mul (-8 sub (n mul x_0_1))) sub sign(n))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 5 + 10 - 1 + 2 - 23 - 40 - 45 - 82 - 97 - 145 - 185 - 215 - 279 - 323 - 402 - 475 - 540 - 641 - 724", "x2": "mod INT+ 5 sub x_0_5 sub add sqr n INT+ 4 add mod INT- 1 x_0_5 sign INT- 1 0", "tree": "(5 mod (x_0_5 sub (((n)**2 add 4) sub ((-1 mod x_0_5) add sign(-10)))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 3 - 7 - 4 - 6 - 4 - 5 - 9 - 10 - 14 - 15 - 19 - 20 - 24 - 25 - 29 - 30 - 34 - 35 - 39 - 40", "x2": "add sub x_0_2 INT+ 6 sub mul idiv x_0_6 mul INT- 8 sqr n x_0_2 sign INT- 2", "tree": "((x_0_2 sub 6) add (((x_0_6 idiv (-8 mul (n)**2)) mul x_0_2) sub sign(-2)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 82 - 243 - 508 - 901 - 1446 - 2167 - 3088 - 4233 - 5626 - 7291 - 9252 - 1 1533 - 1 4158 - 1 7151 - 2 536", "x2": "sub sign INT- 2 relu mul sqr add add n n INT+ 7 n", "tree": "(sign(-2) sub relu(((((n add n) add 7))**2 mul n)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 2 + 6 - 6 - 2 - 4 - 9 + 10 + 7 + 11 + 3 + 5 + 1 - 4 + 15 + 11 + 17 + 14 + 12 + 11 + 9 + 19", "x2": "add sub sub x_0_7 idiv mod INT+ 3 x_0_5 mul INT+ 1 x_0_1 INT- 4 mod n x_0_2", "tree": "(((x_0_7 sub ((3 mod x_0_5) idiv (1 mul x_0_1))) sub -4) add (n mod x_0_2))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 2 + 0 + 2 + 3 + 0 + 5 + 6 + 3 + 8 + 3 + 0 + 3 + 2 + 9 + 1 + 5 + 2 + 10", "x2": "mod sub INT- 5 relu mul x_0_3 idiv n INT+ 5 n", "tree": "((-5 sub relu((x_0_3 mul (n idiv 5)))) mod n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 7 - 4 - 6 + 2 + 7 + 14 + 13 + 7 - 6 - 18 - 24 - 17 + 2 + 27 + 45 + 44 + 18", "x2": "sub add x_0_1 sign idiv n INT+ 6 x_0_3", "tree": "((x_0_1 add sign((n idiv 6))) sub x_0_3)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "abs relu mul n n", "tree": "abs(relu((n mul n)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 6 - 9 + 2 + 3 - 9 - 3 + 7 - 3 + 10 - 374 - 984 + 26 + 28 - 1230 - 64 - 578 - 72 - 1558 - 280 4840 - 2035 3872 - 1 4124 - 1 7204 - 3633 8928", "x2": "mul add idiv mod INT- 8 sqr x_0_9 idiv sub INT- 9 mod relu n n n x_0_9 n", "tree": "((((-8 mod (x_0_9)**2) idiv ((-9 sub (relu(n) mod n)) idiv n)) add x_0_9) mul n)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 7 + 1 - 8 + 0 - 9 - 1 - 10 - 2 - 11 - 3 - 12 - 4 - 13 - 5 - 14 - 6", "x2": "sub sub INT- 1 sub x_0_1 INT- 3 abs n", "tree": "((-1 sub (x_0_1 sub -3)) sub abs(n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 6 + 48 + 480 + 5760 + 8 640 + 129 240 + 2322 4320 + 4 6448 6400 + 102 1870 800 + 2452 4881 9200 + 6 3764 6929 9200 + 178 5411 4037 7600 + 5356 2342 1132 8000 + 17 1399 4947 6249 6000 + 582 7582 8219 2486 4000", "x2": "mul add x_0_1 x_0_1 sub mod n sqr relu relu abs n idiv sign x_0_1 INT- 2", "tree": "((x_0_1 add x_0_1) mul ((n mod (relu(relu(abs(n))))**2) sub (sign(x_0_1) idiv -2)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 5 - 1 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr add n idiv mod n n sign abs x_0_3", "tree": "((n add ((n mod n) idiv sign(abs(x_0_3)))))**2", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 0 + 8 + 4 + 2 + 5 - 2 + 5 + 1 + 0 + 2 + 14 + 0 + 65 + 0 + 273 + 0 + 1764 + 0 + 7072 + 0 + 8432 + 0", "x2": "relu idiv sqr add n x_0_2 add sub sqr x_0_8 mod sign INT- 1 n x_0_4", "tree": "relu((((n add x_0_2))**2 idiv (((x_0_8)**2 sub (sign(-1) mod n)) add x_0_4)))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 7 + 7 + 7 + 175 + 210 + 245 + 280 + 7875 + 1 500 + 1 3475 + 1 6800 + 51 1875 + 73 5000 + 101 625 + 134 4000 + 4350 9375 + 6615 0 + 9600 9375", "x2": "mul x_0_4 mul INT+ 1 mul INT+ 5 n", "tree": "(x_0_4 mul (1 mul (5 mul n)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 7 + 21 + 31 + 108 + 189 + 759 + 1515 + 6834 + 1 5153 + 7 5177 + 18 1839 + 97 7304 + 254 5749 + 1465 9563 + 4073 1987", "x2": "add mul relu x_0_2 abs sub sign x_0_2 n INT+ 3", "tree": "((relu(x_0_2) mul abs((sign(x_0_2) sub n))) add 3)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 10 + 2 + 10 + 8 - 1 - 5 + 3 + 5 + 35 + 15 + 65 + 44 + 26 + 10 + 72 + 72 + 380 + 270 + 816 + 94 + 174 + 143", "x2": "abs mul mod x_0_3 mul n sign add sub mul n x_0_7 sqr INT+ 6 n sub INT- 3 x_0_8", "tree": "abs(((x_0_3 mod (n mul sign((((n mul x_0_7) sub (6)**2) add n)))) mul (-3 sub x_0_8)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 8 + 8 + 8 - 5 - 8 - 8 - 8 - 8 + 8 + 8 + 8 + 8 + 8 - 8 - 8 - 8 - 8 - 8 + 8", "x2": "mul INT+ 8 sign mod INT+ 8 sqr idiv sign sqr mul mod INT+ 6 x_0_3 INT- 8 x_0_5", "tree": "(8 mul sign((8 mod ((sign((((6 mod x_0_3) mul -8))**2) idiv x_0_5))**2)))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 256 + 2916 + 1 4400 + 4 8400 + 12 9600 + 29 8116 + 61 4656 + 116 6400 + 207 3600 + 349 6900 + 564 5376 + 878 5296 + 1324 9600 + 1944 8100 + 2787 8400", "x2": "sqr mul add abs n sqr n sub n mod abs INT- 2 INT- 9", "tree": "(((abs(n) add (n)**2) mul (n sub (abs(-2) mod -9))))**2", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6", "x2": "mod abs n INT- 7", "tree": "(abs(n) mod -7)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 - 3 - 7 + 6 - 6 + 7 - 2 + 9 + 9 + 10 + 11 + 18 + 13 + 21 + 15 + 25 + 26 + 28 + 30 + 38 + 34 + 43 + 38", "x2": "add relu x_0_8 n", "tree": "(relu(x_0_8) add n)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 3 - 4 - 2 - 6 + 0 + 7 - 3 - 3 + 4 + 2 + 6 + 0 - 7 + 3 + 3 - 4 - 2 - 6 + 0 + 7 - 3", "x2": "mul x_0_7 sub n relu add relu n sqr sign idiv INT- 4 n", "tree": "(x_0_7 mul (n sub relu((relu(n) add (sign((-4 idiv n)))**2))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 9 - 3 - 7 - 9 - 9 + 0 + 7 + 18 + 27 + 0 - 35 - 108 - 189 + 0 + 315 + 1080 + 2079 + 0 - 4095", "x2": "mul sub INT+ 6 n x_0_4", "tree": "((6 sub n) mul x_0_4)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 + 1 + 9 + 7 - 2 + 0 + 0 + 0 + 0 + 0 + 180 + 0 + 0 + 0 + 0 + 0 - 3960 + 0 + 0 + 0", "x2": "mul idiv x_0_6 abs n sub mul mul INT- 7 n abs mod n INT- 7 n", "tree": "((x_0_6 idiv abs(n)) mul (((-7 mul n) mul abs((n mod -7))) sub n))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 7 - 5 + 5 - 9 + 46 + 49 + 64 + 91 + 100 + 171 + 194 + 239 + 296 + 325 + 436 + 489 + 564 + 661 + 730", "x2": "add x_0_5 sub sqr relu n mod x_0_5 INT- 1 0", "tree": "(x_0_5 add ((relu(n))**2 sub (x_0_5 mod -10)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 2 + 8 + 9 - 10 + 4 - 4 - 4 + 4 - 4 + 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4 + 4", "x2": "mul INT- 4 sign sign add x_0_4 INT- 4", "tree": "(-4 mul sign(sign((x_0_4 add -4))))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 3 - 10 - 10 + 9 - 7 + 5 + 0 + 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1", "x2": "sign idiv n x_0_8", "tree": "sign((n idiv x_0_8))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 8 + 6 - 10 + 3 + 8 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign mul x_0_6 mod add x_0_1 sqr INT+ 4 abs abs INT+ 9", "tree": "sign((x_0_6 mul ((x_0_1 add (4)**2) mod abs(abs(9)))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 7 - 7 - 7 - 7 - 7 - 1 - 1 - 1 - 1 - 1 - 1 + 5 + 5 + 5 + 5", "x2": "add abs n sub add INT- 4 mod mul INT- 1 n INT- 6 INT+ 3", "tree": "(abs(n) add ((-4 add ((-1 mul n) mod -6)) sub 3))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 5 - 9 + 2 - 5 + 8 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2", "x2": "idiv n add idiv x_0_6 add INT+ 4 sqr n INT+ 1 0", "tree": "(n idiv ((x_0_6 idiv (4 add (n)**2)) add 10))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 6 - 1 - 6 + 4 + 8 - 6 - 8 + 0 + 6 + 1 + 6 + 4 + 8 + 6 + 8 + 0 + 6 + 1 + 6 + 4 + 8 + 6", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 4 - 6 + 10 - 1 + 6 - 2 - 28 - 12 + 90 - 4 + 66 - 24 - 364 - 912 + 1350 - 200 + 1122 - 432 - 6916 - 121 2960 + 2 8350", "x2": "mul x_0_6 abs sub add abs relu x_0_5 idiv sub n n INT- 8 n", "tree": "(x_0_6 mul abs(((abs(relu(x_0_5)) add ((n sub n) idiv -8)) sub n)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 14 - 15 - 16 - 17", "x2": "idiv sub idiv add INT+ 7 mod INT+ 4 x_0_1 add INT+ 8 add n mul mul INT+ 4 n relu x_0_1 n INT+ 1", "tree": "((((7 add (4 mod x_0_1)) idiv (8 add (n add ((4 mul n) mul relu(x_0_1))))) sub n) idiv 1)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 4 - 5 - 7 - 7 - 17 - 7 + 0 + 1 - 7 - 27 - 62 - 115 - 20 - 105 + 8 - 119", "x2": "mul sub sub mul n mod x_0_1 n INT- 7 n INT- 1", "tree": "((((n mul (x_0_1 mod n)) sub -7) sub n) mul -1)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 8 + 9 - 3 + 4 + 0 + 0 - 8 + 6 - 5 - 8 + 7 + 48 + 39 + 126 + 15 + 0 + 0 + 180 + 323 + 100 + 21 + 110 + 92 + 216 + 25 + 442", "x2": "mul n mod sqr idiv x_0_11 INT- 1 n", "tree": "(n mul (((x_0_11 idiv -1))**2 mod n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 1 - 3 - 8 - 6 + 4 + 6 - 1 - 10 - 8 + 3 + 0 + 0 + 0 + 0 + 1 3500 + 2 4576 + 0 + 0 + 0 + 2 4000 + 0 + 0 + 0 + 0 + 2 1093 7500", "x2": "relu mul mul mul mul n n x_0_10 idiv n n n", "tree": "relu(((((n mul n) mul x_0_10) mul (n idiv n)) mul n))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 4 + 7 - 8 - 9 + 10 + 0 - 8 + 3 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 225 + 289 + 289 + 361 + 361 + 441 + 441", "x2": "relu relu sqr sub add INT- 2 n mod x_0_9 idiv n INT+ 9", "tree": "relu(relu((((-2 add n) sub (x_0_9 mod (n idiv 9))))**2))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 8 + 17 + 28 + 41 + 56 + 73 + 92 + 113 + 136 + 161 + 188 + 217 + 248 + 281", "x2": "abs add INT- 8 sqr add n add sign sign relu INT+ 9 mod INT- 1 INT+ 2", "tree": "abs((-8 add ((n add (sign(sign(relu(9))) add (-1 mod 2))))**2))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 6 + 4 - 5 + 2 - 10 + 0 + 9 + 64 + 16 + 256 + 100 + 36 + 2500 + 100 + 9 2416 + 9801 + 7 5076 + 666 1561 + 1 3456 + 90 506 1025 + 9759 4641", "x2": "sqr sub abs x_0_7 sub n x_0_5", "tree": "((abs(x_0_7) sub (n sub x_0_5)))**2", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 5 - 3 + 3 + 0 + 6 + 4 + 8 + 3 + 6 + 3 + 9 + 7 + 11 + 6 + 9 + 6 + 12", "x2": "abs sub n relu x_0_3", "tree": "abs((n sub relu(x_0_3)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 8 + 9 - 1 + 0 + 9 - 9 + 72 - 81 + 720 - 891 + 8640 - 1 1583 + 12 960 - 17 3745 + 193 5360 - 295 3665 + 3483 6480 - 5611 9635 + 6 9672 9600 - 11 7851 2335 + 153 2805 1200", "x2": "mul abs mod n abs add x_0_2 x_0_7 x_0_2", "tree": "(abs((n mod abs((x_0_2 add x_0_7)))) mul x_0_2)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 8 + 4 + 0 - 11 + 36 + 0 - 23", "x2": "idiv mul mul n mod add mod n INT- 6 x_0_1 n idiv n sub mul x_0_1 INT+ 2 INT- 1 0 INT- 1 0", "tree": "(((n mul (((n mod -6) add x_0_1) mod n)) mul (n idiv ((x_0_1 mul 2) sub -10))) idiv -10)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 5 - 1 + 2 + 7 - 12 - 49 + 96 + 441 - 959 - 4849 + 1 1508 + 6 3038 - 16 1111 - 94 5570 + 257 7777 + 1607 4692 - 4639 9986 - 3 541 9148", "x2": "sub abs mod sub n abs mul mul n n idiv sqr n x_0_4 INT+ 3 mul x_0_2 n", "tree": "(abs(((n sub abs(((n mul n) mul ((n)**2 idiv x_0_4)))) mod 3)) sub (x_0_2 mul n))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 5 + 9 + 7 - 7 + 10 - 8 + 2 - 5 + 1 - 450 - 891 - 756 - 819 - 1260 - 1080 - 288 - 765 - 162 - 7 6950 - 16 380 - 14 2884 - 16 2162 - 26 820 - 23 3280", "x2": "mul INT- 9 abs abs mul x_0_9 n", "tree": "(-9 mul abs(abs((x_0_9 mul n))))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 10 + 9 + 30 + 27 + 90 + 81 + 270 + 243 + 810 + 729 + 2430 + 2187 + 7290 + 6561 + 2 1870 + 1 9683", "x2": "mul INT+ 3 idiv mul x_0_2 sign n INT+ 1", "tree": "(3 mul ((x_0_2 mul sign(n)) idiv 1))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 + 8 + 13 + 12 + 18 + 18 + 25 + 26 + 34 + 36 + 45 + 48 + 58 + 62 + 73 + 78 + 90", "x2": "add n abs x_0_2", "tree": "(n add abs(x_0_2))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 4 + 5 - 8 + 2 - 11 - 123 - 11 - 291 - 66 - 486 - 1 8227 - 578 - 9 3027 - 6563 - 25 2006 - 3 3284 3538 - 35 5218 - 86 5755 8118 - 4333 5891", "x2": "sub INT- 2 sqr sub x_0_5 n", "tree": "(-2 sub ((x_0_5 sub n))**2)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 8 - 8 - 7 - 2 - 2 + 5 - 3 - 6 + 4 - 1 - 6 + 2 + 2 + 0 + 3 + 6 + 4 + 1 + 6 + 2 + 2 + 0 + 0 + 6 + 4 + 1 + 6", "x2": "relu mul sign add add x_0_1 x_0_12 idiv INT+ 1 0 x_0_8 x_0_8", "tree": "relu((sign(((x_0_1 add x_0_12) add (10 idiv x_0_8))) mul x_0_8))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210", "x2": "sub sqr n relu n", "tree": "((n)**2 sub relu(n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 10 + 4 + 1 - 8 - 1 + 9 - 3 + 135 - 263 + 551 + 12 + 13 + 6590 + 366 + 16 + 17 + 154 338 + 19 + 98 3659 8488 + 21 + 22 + 23", "x2": "add mul x_0_2 relu sub x_0_6 mul x_0_3 x_0_8 n", "tree": "((x_0_2 mul relu((x_0_6 sub (x_0_3 mul x_0_8)))) add n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 0 - 7 + 8 + 9 + 13 + 14 + 8 + 5 + 4 + 14 + 8 + 4 + 23 + 14 + 7 + 9 + 19 + 14", "x2": "mod sub x_0_4 sqr idiv mul mod INT+ 7 add INT- 4 INT- 6 add x_0_3 INT- 9 x_0_1 sub n sub INT- 7 n", "tree": "((x_0_4 sub ((((7 mod (-4 add -6)) mul (x_0_3 add -9)) idiv x_0_1))**2) mod (n sub (-7 sub n)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 2 - 2 - 9 + 47 + 42 + 41 + 47 + 61 + 16 + 36 + 50 + 50 + 31 + 56 + 3 + 14 + 44 + 49", "x2": "mod add mul add sub INT- 4 x_0_4 x_0_1 sign abs x_0_1 INT+ 1 sqr INT+ 8", "tree": "(((((-4 sub x_0_4) add x_0_1) mul sign(abs(x_0_1))) add 1) mod (8)**2)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 2 + 10 + 9 + 10 + 1 - 5 + 9 + 80 + 180 + 190 + 220 + 132 + 130 + 266 + 1350 + 3040 + 3400 + 4140 + 2698 + 2800 + 5796 + 2 9920", "x2": "mul add abs relu x_0_7 INT+ 1 0 n", "tree": "((abs(relu(x_0_7)) add 10) mul n)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 24 + 54 + 96 + 150 + 216 + 294 + 384 + 486 + 600 + 726 + 864 + 1014 + 1176 + 1350", "x2": "mul sqr idiv n sign sign sqr relu n INT+ 6", "tree": "(((n idiv sign(sign((relu(n))**2))))**2 mul 6)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 9 - 2 + 8 - 1 + 3 + 1 + 8 + 1 - 4 - 5 - 4 - 8 + 1 + 1 + 0 + 4 + 1 + 1 + 0 + 4 + 1 + 1 + 4 + 4 + 1 + 1 + 4", "x2": "sqr mod sub x_0_2 sign add INT- 5 x_0_12 INT+ 4", "tree": "(((x_0_2 sub sign((-5 add x_0_12))) mod 4))**2", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 1 + 29 + 95 + 211 + 391 + 649 + 999 + 1455 + 2031 + 2741 + 3599 + 4619 + 5815 + 7201 + 8791 + 1 599", "x2": "add x_0_1 sub n mul INT- 7 sqr add n relu mod x_0_1 x_0_1", "tree": "(x_0_1 add (n sub (-7 mul ((n add relu((x_0_1 mod x_0_1))))**2)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 + 0 - 6 - 9 + 0 - 1 - 8 + 1 - 3 - 13 - 7 - 5 - 13 - 12 - 5 - 14 - 10 + 0 - 6 - 8 + 0 - 1 - 8", "x2": "add sub INT- 6 relu x_0_4 sub INT- 7 x_0_8", "tree": "((-6 sub relu(x_0_4)) add (-7 sub x_0_8))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224", "x2": "sub mul n n idiv n n", "tree": "((n mul n) sub (n idiv n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 5 + 6 - 9 - 4 + 6 - 1 + 5 + 1 - 1 + 7 + 1 + 4 + 2 + 1 + 8 + 2 + 5 + 3 + 2", "x2": "add relu x_0_5 sign x_0_3", "tree": "(relu(x_0_5) add sign(x_0_3))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 4 - 10 + 5 - 8 - 5 + 5 + 2 + 8 + 10 + 5 + 12 - 39 + 154 - 60 + 144 + 102 - 72 - 19 - 140 - 189 - 88 - 253 + 960 - 3825 + 1586", "x2": "sub n mul x_0_11 abs n", "tree": "(n sub (x_0_11 mul abs(n)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 2 + 9 - 6 + 36 - 30 + 216 - 210 + 1728 - 1890 + 1 7280 - 2 790 + 20 7360 - 27 270 + 290 3040 - 405 4050 + 4644 8640 - 6891 8850", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 - 6 + 3 + 0 - 205 - 294 - 389 - 512 - 853 - 1094 - 1357 - 1664 - 2205 - 2662 - 3157 - 3712 - 4517 - 5254 - 6045", "x2": "sub x_0_4 mul INT+ 8 relu sqr abs n", "tree": "(x_0_4 sub (8 mul relu((abs(n))**2)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 5 - 4 - 8 + 3 - 1 + 9 - 19 - 4 - 9 + 11 - 14 - 24 + 16 + 66 - 9 + 16 + 26 + 41 + 91 + 51 + 301", "x2": "add sub sign relu n n add n mul INT+ 5 sub relu abs x_0_7 INT+ 6", "tree": "((sign(relu(n)) sub n) add (n add (5 mul (relu(abs(x_0_7)) sub 6))))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 10 + 5 + 4 + 8 + 7 - 1 - 10 - 7 - 3 - 5 - 1 - 35 + 1 + 390 + 14 - 1164 - 50 + 1164 + 1855 + 1162 + 72 3450 + 1 6212 - 8 4209 5800 - 81 550 - 9801 9951 1200 - 15 357 7670", "x2": "mul sub x_0_2 mod x_0_11 relu sub relu add INT+ 5 n n x_0_7", "tree": "((x_0_2 sub (x_0_11 mod relu((relu((5 add n)) sub n)))) mul x_0_7)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 2 - 10 - 1 - 1 + 2 + 9 + 5 + 1 - 18 - 180 - 99 - 60 + 13 - 1260 - 8100 + 0 + 1 200 - 2 1060 + 112 5180 + 437 4000 + 0 - 1 1579 400 + 15 3548 4600", "x2": "mul n mul idiv mul x_0_8 INT+ 9 n x_0_5", "tree": "(n mul (((x_0_8 mul 9) idiv n) mul x_0_5))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 4 - 4 - 1 + 1 - 8 - 1 + 0 - 7 + 10 - 6 + 20 + 76 - 2400 + 9596 + 0 + 28 + 1160 - 2 7816 - 222 5360 - 6 7650 9744 + 6 4944 9355 2000 + 24 9284 6404 9992 9616 + 0 - 112 - 52 4320", "x2": "mul mul sqr INT- 2 add x_0_1 sign mod mod INT- 1 x_0_11 mod INT+ 1 INT- 5 x_0_8", "tree": "(((-2)**2 mul (x_0_1 add sign(((-1 mod x_0_11) mod (1 mod -5))))) mul x_0_8)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 0 - 2 - 5 - 9 - 14 - 20 - 27 - 35 - 44 - 54 - 65 - 77 - 90 - 104 - 119 - 135", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 6 - 10 + 6 + 8 + 10 + 5 + 6 - 5 + 25 + 36 + 100 + 36 + 64 + 100 + 25 + 36 + 25 + 625 + 1296 + 1 0 + 1296 + 4096 + 1 0", "x2": "sqr add x_0_9 relu sub mod abs n INT- 3 sign INT+ 3", "tree": "((x_0_9 add relu(((abs(n) mod -3) sub sign(3)))))**2", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 + 0 - 3 - 5 + 0 + 8 - 3 + 9 + 7 - 10 + 7 + 169 + 50 - 153 + 120 - 175 - 117 + 297 - 116 - 4168 - 1210 + 3882 - 2781 + 4475 + 2822 - 7255", "x2": "add x_0_11 mul sqr INT- 5 add mod INT+ 9 sqr relu n sub sub INT- 3 x_0_8 relu INT+ 4", "tree": "(x_0_11 add ((-5)**2 mul ((9 mod (relu(n))**2) add ((-3 sub x_0_8) sub relu(4)))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 7 + 12 + 34 + 134 + 668 + 4006 + 2 8040 + 22 4318 + 201 8860 + 2018 8598 + 2 2207 4576 + 26 6489 4910 + 346 4363 3828 + 4850 1087 3590 + 7 2751 6310 3848 + 116 4026 966 1566", "x2": "abs mod INT- 2 abs mul abs x_0_1 add n mod idiv relu idiv INT- 7 n x_0_1 n", "tree": "abs((-2 mod abs((abs(x_0_1) mul (n add ((relu((-7 idiv n)) idiv x_0_1) mod n))))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 8 - 4 + 10 - 1 + 10 + 4 - 3 + 2 - 6 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign sign mod x_0_9 add idiv n x_0_5 x_0_4", "tree": "sign(sign((x_0_9 mod ((n idiv x_0_5) add x_0_4))))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 6 - 8 - 6 - 5 - 10 + 9 - 9 + 5 - 6 + 1 + 9 + 30 + 8 + 18 + 14 + 8 + 17 + 25 + 2 + 17 + 13 + 12 + 13 + 58 + 22 + 37", "x2": "abs sub sub x_0_12 mod idiv INT+ 1 0 INT+ 2 add INT- 3 sub mul n sign idiv INT- 6 INT+ 1 INT+ 7 x_0_5", "tree": "abs(((x_0_12 sub ((10 idiv 2) mod (-3 add ((n mul sign((-6 idiv 1))) sub 7)))) sub x_0_5))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 2 - 9 + 6 + 6 - 7 + 8 - 2 - 1 + 7 + 19 + 5 + 6 + 20 + 6 + 17 + 17 + 10 - 1 + 14 + 14 + 1 + 16 + 6", "x2": "sub n x_0_8", "tree": "(n sub x_0_8)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 5 + 8 + 5 + 1 + 5 - 15 - 4 - 17 - 14 - 10 - 14 + 6 - 5 + 8 + 5 + 1 + 5 - 15 - 4 - 17", "x2": "add sqr mod idiv n n sqr idiv mul x_0_3 x_0_5 INT+ 1 sub INT- 1 0 x_0_6", "tree": "((((n idiv n) mod (((x_0_3 mul x_0_5) idiv 1))**2))**2 add (-10 sub x_0_6))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 2 + 0 - 6 + 8 + 25 + 0 + 105 + 264 + 81 + 1150 + 3025 + 1116 + 1 5119 + 4 2546 + 1 6965 + 24 2160 + 72 3571 + 30 5694", "x2": "abs add mul x_0_3 n sqr n", "tree": "abs(((x_0_3 mul n) add (n)**2))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 3 + 7 + 12 + 100 - 24 - 112 - 3528 + 1764 + 6550 + 19 5316 - 10 4172 - 42 3618 - 1366 9446 + 781 6200 + 3389 3456 + 11 6190 7738 - 7 345 2258", "x2": "mul sub sqr n add INT+ 5 mul x_0_3 mod sub INT+ 5 n n n", "tree": "(((n)**2 sub (5 add (x_0_3 mul ((5 sub n) mod n)))) mul n)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 2 - 6 + 4 - 5 + 4 + 58 - 28 + 22 - 28 + 862 + 468 + 278 + 804 + 56 1154 + 3 6964 + 4 302 + 2 4916 + 1227 8330 962 + 10 9764 5972", "x2": "add mul add mod add mul mul n x_0_1 add INT+ 1 0 INT+ 3 add INT+ 1 INT+ 6 x_0_4 INT- 6 x_0_4 INT- 8", "tree": "(((((((n mul x_0_1) mul (10 add 3)) add (1 add 6)) mod x_0_4) add -6) mul x_0_4) add -8)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 4 + 5 + 4 - 7 + 4 + 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0", "x2": "idiv x_0_6 add add INT+ 1 idiv idiv n sign INT- 3 sqr n abs INT+ 9", "tree": "(x_0_6 idiv ((1 add ((n idiv sign(-3)) idiv (n)**2)) add abs(9)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 4 + 18 + 48 + 100 + 180 + 294 + 448 + 648 + 900 + 1210 + 1584 + 2028 + 2548 + 3150", "x2": "abs mul n sub n sqr n", "tree": "abs((n mul (n sub (n)**2)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 2 - 6 + 2 - 3 + 5 + 7 - 7 + 1 - 2 - 6 + 2 - 3 + 5 + 7 - 7 + 1 - 2 - 6 + 2 - 3 + 5 + 7 - 7", "x2": "add add idiv n n idiv INT- 1 mul add abs n add mod x_0_1 x_0_5 INT+ 1 0 abs x_0_3 x_0_8", "tree": "(((n idiv n) add (-1 idiv ((abs(n) add ((x_0_1 mod x_0_5) add 10)) mul abs(x_0_3)))) add x_0_8)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 7 - 5 + 1 + 51 + 43 - 34 + 9 + 460 + 431 - 373 + 109 + 5981 + 6035 - 5594 + 1745 + 10 1678 + 10 8631 - 10 6285", "x2": "add sign n mul n x_0_4", "tree": "(sign(n) add (n mul x_0_4))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 1 + 2 + 10 + 3 + 0 + 5 - 3 + 7 - 8 + 1 - 18 - 21 + 40 - 2 - 90 + 0 - 320 + 4 - 1170 + 0 - 7360 - 104 + 4 950 + 0 - 69 9200", "x2": "mul abs x_0_4 add x_0_10 INT- 5", "tree": "(abs(x_0_4) mul (x_0_10 add -5))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 10 + 10 + 9 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign sign mod sign INT+ 6 mul mul x_0_2 n x_0_3", "tree": "sign(sign((sign(6) mod ((x_0_2 mul n) mul x_0_3))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 4 + 6 - 3 + 7 - 2 + 8 - 1 + 9 + 0 + 10 + 1 + 11 + 2 + 12 + 3 + 13", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 7 - 4 + 8 + 10 - 6 - 7 - 9 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign x_0_7", "tree": "sign(x_0_7)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 4 + 10 + 28 + 92 + 338 + 1310 + 5184 + 2 664 + 8 2566 + 33 154 + 132 484 + 528 1780 + 2112 6938 + 8450 7542 + 3 3802 9928 + 13 5211 9440", "x2": "sub abs x_0_1 add sub sqr n mul mod INT+ 3 sub x_0_1 abs relu n x_0_1 n", "tree": "(abs(x_0_1) sub (((n)**2 sub ((3 mod (x_0_1 sub abs(relu(n)))) mul x_0_1)) add n))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 + 7 - 6 + 7 - 8 - 1 - 8 - 7 + 10 - 2 + 121 + 1 8225 + 1 + 289 + 1 + 361 + 14 4400 + 208 5713 6400 + 4 3502 139 6842 468 9241 + 1 + 576 + 1 + 1 + 1 + 1", "x2": "sqr mod sign mul x_0_11 n add n add x_0_1 abs INT- 2", "tree": "((sign((x_0_11 mul n)) mod (n add (x_0_1 add abs(-2)))))**2", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 3 + 10 - 6 - 8 + 7 + 0 + 10 + 0 + 0 + 7 + 0 + 10 + 0 + 0 + 7 + 0 + 10 + 0 + 0 + 7", "x2": "relu mul sqr sign sqr x_0_2 x_0_5", "tree": "relu(((sign((x_0_2)**2))**2 mul x_0_5))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 9 - 3 + 27 + 12 - 135 - 72 + 945 + 576 - 8505 - 5760 + 9 3555 + 6 9120 - 121 6215 - 96 7680 + 1824 3225 + 1548 2880 - 3 1013 4825", "x2": "sub mod relu mod relu idiv INT- 1 0 n INT+ 1 0 x_0_1 mul n x_0_2", "tree": "((relu((relu((-10 idiv n)) mod 10)) mod x_0_1) sub (n mul x_0_2))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 + 4 - 8 + 2 - 8 - 1 + 5 - 6 + 0 + 9 + 5 + 2 - 10 + 2 - 8 + 2 - 5 - 11 + 0 - 6 - 15 - 11 - 8 + 4 - 8 + 2", "x2": "sub INT- 6 x_0_11", "tree": "(-6 sub x_0_11)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 8 + 10 - 7 + 2 - 7 - 10 - 2 + 9 + 3 + 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign abs sqr idiv INT+ 4 sqr idiv x_0_9 idiv x_0_10 INT+ 3", "tree": "sign(abs(((4 idiv ((x_0_9 idiv (x_0_10 idiv 3)))**2))**2))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 10 + 4 + 1 + 4 - 1 + 10 - 9 + 90 + 111 + 132 + 156 + 182 + 211 + 240 + 273 + 331 + 378 + 416 + 469 + 526 + 587 + 652", "x2": "add sqr idiv x_0_8 n add mul n n n", "tree": "(((x_0_8 idiv n))**2 add ((n mul n) add n))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 9 + 6 + 5 + 0 + 0 + 4 + 6 - 10 + 10 + 0 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign idiv idiv x_0_10 abs x_0_2 mul add n idiv x_0_11 sign idiv x_0_7 n abs INT+ 2", "tree": "sign(((x_0_10 idiv abs(x_0_2)) idiv ((n add (x_0_11 idiv sign((x_0_7 idiv n)))) mul abs(2))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 9 - 1 - 8 - 4 - 2 - 2 - 9 + 6 + 9 + 1 + 8 + 4 + 2 + 2 + 9 + 6 + 9 + 1 + 8 + 4 + 2 + 2", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 3 - 6 - 8 - 10 - 11 - 12 - 13 - 14 - 15 - 16 - 17 - 18 - 18 - 18 - 18", "x2": "sub x_0_1 idiv add abs INT- 9 INT+ 6 add n INT+ 2", "tree": "(x_0_1 sub ((abs(-9) add 6) idiv (n add 2)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 3 + 12 - 12 + 60 - 72 + 420 - 576 + 3780 - 5760 + 4 1580 - 6 9120 + 54 540 - 96 7680 + 810 8100 - 1548 2880 + 1 3783 7700", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 9 + 9 + 6 - 2 + 18 + 11 + 5 + 33 + 28 + 14 + 54 + 51 + 39 + 81 + 80 + 70 + 114 + 115", "x2": "add sign INT- 2 add add x_0_3 n mod n abs x_0_3", "tree": "(sign(-2) add ((x_0_3 add n) add (n mod abs(x_0_3))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 7 - 6 - 4 + 1 - 7 - 6 - 4 + 1 - 7 - 6 - 4 + 1 - 7 - 6 - 4 + 1 - 7 - 6 - 4", "x2": "add x_0_4 sqr mul sqr relu INT- 3 x_0_4", "tree": "(x_0_4 add (((relu(-3))**2 mul x_0_4))**2)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 - 5 + 1 + 125 + 88 + 154 + 1186 + 638 + 178 + 8029 + 4047 + 4284 + 4 1978 + 1 8366 + 1825 + 17 9718 + 7 6927 + 7 2574", "x2": "abs idiv mul sub abs mul x_0_3 INT- 9 x_0_2 sub sign idiv x_0_3 INT+ 6 INT+ 9 n", "tree": "abs((((abs((x_0_3 mul -9)) sub x_0_2) mul (sign((x_0_3 idiv 6)) sub 9)) idiv n))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 3 + 8 - 10 - 4 + 9 + 64 + 100 + 16 + 81 + 4096 + 1 0 + 256 + 6561 + 1677 7216 + 1 0 0 + 6 5536 + 4304 6721 + 281 4749 7671 656 + 1 0 0 0 0", "x2": "sqr x_0_4", "tree": "(x_0_4)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 3 - 1 - 4 + 2 + 4 + 0 - 3 + 3 + 5 + 1 - 2 + 4 + 6 + 2 - 1 + 5 + 7 + 3", "x2": "add relu INT+ 1 x_0_4", "tree": "(relu(1) add x_0_4)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 2 - 9 - 4 + 2 + 8 - 251 - 27 - 566 - 111 - 27 - 447 - 44 1006 - 5102 - 224 2491 - 8 6246 - 5102 - 139 8662 - 1 3614 404 4251 - 1 8221 2827 - 35 2013 6119 5566", "x2": "add mul sqr INT- 1 mul sqr x_0_6 INT- 7 sign n", "tree": "(((-1)**2 mul ((x_0_6)**2 mul -7)) add sign(n))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 2 + 5 + 4 + 7 + 6 + 9 + 8 + 11 + 10 + 13 + 12 + 15 + 14 + 17 + 16", "x2": "add idiv n n add n sign mul sub n add x_0_1 idiv n n INT+ 8", "tree": "((n idiv n) add (n add sign(((n sub (x_0_1 add (n idiv n))) mul 8))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 8 + 7 + 6 - 4 - 2 - 5 - 2 - 1 + 70 - 88 + 84 + 78 - 56 - 30 - 80 - 34 - 18 + 1330 - 1760 + 1764 + 1716 - 1288 - 720", "x2": "mul x_0_9 n", "tree": "(x_0_9 mul n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 9 - 4 - 8 + 10 - 8 - 1 + 8 - 2 + 3 - 9 + 8 + 7 - 84 - 63 + 126 - 70 + 14 - 7 + 42 + 70 - 651 - 385 + 931 - 1078 - 343 + 833", "x2": "mul add x_0_8 x_0_11 INT+ 7", "tree": "((x_0_8 add x_0_11) mul 7)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240", "x2": "add sqr n n", "tree": "((n)**2 add n)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 8 - 1 - 5 - 7 + 5 - 4 + 0 + 0 - 7 - 7 - 7 - 7 + 0 + 0 + 0 - 7 - 7 - 7 - 7 + 0 + 0", "x2": "mod sqr x_0_7 INT- 8", "tree": "((x_0_7)**2 mod -8)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 9 - 7 - 3 + 10 + 3 - 4 + 42 + 36 + 28 + 18 + 40 + 12 + 16 + 168 + 144 + 112 + 72 + 160 + 48 + 64 + 672", "x2": "abs mul abs add sign idiv x_0_4 n INT- 5 x_0_7", "tree": "abs((abs((sign((x_0_4 idiv n)) add -5)) mul x_0_7))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 8 - 24 - 56 - 120 - 248 - 504 - 1016 - 2040 - 4088 - 8184 - 1 6376 - 3 2760 - 6 5528 - 13 1064 - 26 2136", "x2": "add x_0_1 sub INT- 8 abs x_0_1", "tree": "(x_0_1 add (-8 sub abs(x_0_1)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 0 - 8 + 10 - 6 + 4 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1", "x2": "idiv x_0_5 mul INT+ 7 add mul x_0_6 relu INT+ 9 n", "tree": "(x_0_5 idiv (7 mul ((x_0_6 mul relu(9)) add n)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 7 - 6 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1", "x2": "mod x_0_5 sub n relu abs sub sign x_0_2 INT+ 6", "tree": "(x_0_5 mod (n sub relu(abs((sign(x_0_2) sub 6)))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 - 7 + 10 + 20 + 19 - 14 - 33 - 30 + 37 + 76 + 71 - 62 - 139 - 128 + 139 + 294 + 273 - 260", "x2": "add abs n mul x_0_3 INT- 2", "tree": "(abs(n) add (x_0_3 mul -2))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 + 9 - 144 - 7488 + 5 - 14 9640 - 718 2720 + 8 - 2 2984 6752 - 165 4896 6144 + 11 - 7281 5450 9808 - 69 9028 3294 1568 + 14 - 3914 5586 4472 6968 - 46 9747 373 6723 6160 + 17", "x2": "mod n sub mul INT+ 4 mul add n x_0_2 x_0_1 n", "tree": "(n mod ((4 mul ((n add x_0_2) mul x_0_1)) sub n))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 5 + 7 + 10 - 2 + 10 + 13 + 1 + 13 + 16 + 4 + 16 + 19 + 7 + 19 + 22 + 10 + 22", "x2": "sub x_0_3 INT- 3", "tree": "(x_0_3 sub -3)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 81 + 324 + 729 + 1296 + 2025 + 2916 + 3969 + 5184 + 6561 + 8100 + 9801 + 1 1664 + 1 3689 + 1 5876 + 1 8225", "x2": "relu sqr mul INT+ 9 n", "tree": "relu(((9 mul n))**2)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 + 4 + 9 - 8 - 3 + 0 + 1 - 8 - 7 - 8 - 7 - 8 - 7 - 12 - 11 - 20 - 19 - 10 - 9", "x2": "mod add x_0_2 mul INT- 1 0 INT- 4 sub x_0_4 n", "tree": "((x_0_2 add (-10 mul -4)) mod (x_0_4 sub n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 2 + 7 + 14 + 23 + 34 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223", "x2": "add mod INT- 2 sqr n mul mod mod abs n n n INT- 3", "tree": "((-2 mod (n)**2) add (((abs(n) mod n) mod n) mul -3))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 7 - 1 - 4 - 2 - 8 + 196 + 4 + 85 + 24 + 426 + 28 1717 + 128 + 6 2616 + 5376 + 181 4760 + 8465 5432 6282 + 18 5685 + 470 4916 1472 + 3 6608 4096 + 43 9113 8476 8000", "x2": "idiv mul mul mul n add sign INT- 6 idiv sign abs INT- 3 INT- 9 x_0_5 x_0_5 INT- 3", "tree": "((((n mul (sign(-6) add (sign(abs(-3)) idiv -9))) mul x_0_5) mul x_0_5) idiv -3)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 5 - 15 + 85 - 415 + 2085 - 1 415 + 5 2085 - 26 415 + 130 2085 - 651 415 + 3255 2085 - 1 6276 415 + 8 1380 2085 - 40 6901 415 + 203 4505 2085", "x2": "add INT+ 1 0 mul x_0_1 INT- 5", "tree": "(10 add (x_0_1 mul -5))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 4 + 0 - 10 + 5 + 6 - 3 - 9 + 4 + 7 + 8 + 18 + 5 + 15 + 10 + 8 + 4 + 16 + 5 + 8 + 11 + 23 + 5 + 20 + 12", "x2": "idiv abs idiv sqr add n n add abs n idiv x_0_11 sub x_0_6 INT- 1 abs x_0_5", "tree": "(abs((((n add n))**2 idiv (abs(n) add (x_0_11 idiv (x_0_6 sub -1))))) idiv abs(x_0_5))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 2 + 9 - 10 - 10 - 6 + 9 + 1 - 5 + 0 + 20 + 17 + 18 - 1 + 11 + 14 + 9 + 1 + 0 + 2 + 16 - 1 - 1 - 1", "x2": "add relu add sub INT+ 7 x_0_7 mod x_0_4 add relu n idiv sub x_0_2 n add x_0_5 x_0_8 INT- 1", "tree": "(relu(((7 sub x_0_7) add (x_0_4 mod (relu(n) add ((x_0_2 sub n) idiv (x_0_5 add x_0_8)))))) add -1)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 8 + 7 + 8 + 0 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 3 - 10 + 5 - 7 - 5 - 2 - 12 - 7 - 14 - 19 - 21 - 33 - 40 - 54 - 73 - 94 - 127", "x2": "add x_0_3 x_0_2", "tree": "(x_0_3 add x_0_2)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr add n sign INT+ 1 0", "tree": "((n add sign(10)))**2", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272", "x2": "mul add idiv relu abs sign mul INT- 6 INT+ 1 0 idiv x_0_1 x_0_1 n n", "tree": "(((relu(abs(sign((-6 mul 10)))) idiv (x_0_1 idiv x_0_1)) add n) mul n)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 3 - 3 - 6 - 1 - 10 + 26 + 18 + 20 + 8 + 56 + 42 + 82 + 59 + 113 + 91 + 182 + 147 + 243 + 195 + 341", "x2": "add add add sub n INT- 1 0 sub add x_0_6 abs relu INT- 4 mod x_0_1 abs INT+ 7 x_0_4 n", "tree": "((((n sub -10) add ((x_0_6 add abs(relu(-4))) sub (x_0_1 mod abs(7)))) add x_0_4) add n)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 5 - 8 - 4 - 7 + 5 + 5 + 9 - 10 + 0 + 8 + 8 + 324 + 377 + 600 + 43 + 289 + 363 + 48 + 11 7380 + 15 7781 + 38 6575 + 3728 + 9 7583 + 3 3142 - 26 9658 + 137 8385 9321", "x2": "add sub sub relu add sqr add x_0_7 n n x_0_6 x_0_5 sign idiv x_0_12 sign x_0_2", "tree": "(((relu((((x_0_7 add n))**2 add n)) sub x_0_6) sub x_0_5) add sign((x_0_12 idiv sign(x_0_2))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 3 - 3 + 4 - 2 + 5 - 1 + 6 + 0 + 7 + 1 + 8 + 2 + 9 + 3 + 10 + 4", "x2": "sub n add INT+ 2 x_0_1", "tree": "(n sub (2 add x_0_1))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 6 - 7 - 2 + 2 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_3 mul sub sign x_0_5 add INT+ 7 INT- 2 INT- 5", "tree": "(x_0_3 idiv ((sign(x_0_5) sub (7 add -2)) mul -5))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 2 + 6 + 18 + 31 + 54 + 80 + 118 + 161 + 218 + 282 + 362 + 451 + 558 + 676 + 814 + 965", "x2": "add x_0_2 sqr n", "tree": "(x_0_2 add (n)**2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 5 + 0 - 7 - 3 + 3 - 5 - 4 + 6 + 3 + 8 + 6 + 1 + 12 + 12 + 1 + 5 + 2 + 5 + 10 - 1 + 2 + 12", "x2": "sub add add n mod idiv x_0_4 sqr idiv relu n add n INT- 2 INT+ 5 INT- 9 x_0_7", "tree": "(((n add ((x_0_4 idiv ((relu(n) idiv (n add -2)))**2) mod 5)) add -9) sub x_0_7)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 5 + 13 + 13 + 22 + 23 + 33 + 35 + 46 + 49 + 61 + 65 + 78 + 83 + 97 + 103 + 118", "x2": "add add n INT+ 4 x_0_2", "tree": "((n add 4) add x_0_2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 14 + 168 + 609 + 1520 + 2980 + 5160 + 8204 + 1 2768 + 1 8189 + 2 4960 + 3 3231 + 4 3152 + 5 4873 + 6 8544 + 8 4315", "x2": "abs mul mod INT+ 4 sub mul n mul n idiv INT+ 7 n sqr add mul INT- 6 n n n", "tree": "abs(((4 mod ((n mul (n mul (7 idiv n))) sub (((-6 mul n) add n))**2)) mul n))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 2 + 0 + 5 + 0 - 1 - 9 - 9 + 3 - 2 + 0 + 10 + 0 - 2 - 18 - 18 + 6 - 6 + 0 + 30 + 0 - 6 - 54", "x2": "mul x_0_8 relu relu idiv n INT+ 6", "tree": "(x_0_8 mul relu(relu((n idiv 6))))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 6 + 6 - 6 + 8 + 6 + 10 + 20 + 10 + 36 + 22 + 40 + 48 + 42 + 78 + 54 + 98 + 92 + 104 + 148 + 118", "x2": "add sub x_0_3 mul sign mod x_0_6 mul x_0_3 add abs x_0_4 sqr n x_0_6 x_0_2", "tree": "((x_0_3 sub (sign((x_0_6 mod (x_0_3 mul (abs(x_0_4) add (n)**2)))) mul x_0_6)) add x_0_2)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 1 - 4 + 3 + 24 + 18 - 10 + 16 + 241 + 431 + 321 + 525 + 3671 + 9719 + 1 4549 + 2 2965 + 8 5389 + 26 349 + 53 6799", "x2": "add add x_0_1 mul n x_0_4 relu mod n x_0_4", "tree": "((x_0_1 add (n mul x_0_4)) add relu((n mod x_0_4)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 8 + 8 + 8 + 8 + 8 + 8 - 56 - 137 - 237 - 358 - 502 - 671 - 867 - 1092 - 1348", "x2": "sub x_0_1 sqr mul n idiv n x_0_1", "tree": "(x_0_1 sub ((n mul (n idiv x_0_1)))**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 7 - 4 - 10 - 1 - 2 - 2 - 7 - 8 - 8 - 6 - 17 - 20 - 21 - 25 - 25 - 27 - 26 - 29", "x2": "sub mul sign n mul idiv n INT- 1 0 n mod n x_0_3", "tree": "((sign(n) mul ((n idiv -10) mul n)) sub (n mod x_0_3))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 9 + 9 + 36 + 45 + 54 + 252 + 360 + 486 + 2520 + 3960 + 5832 + 3 2760 + 5 5440 + 8 7480 + 52 4160 + 94 2480 + 157 4640", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 5 + 1 - 15 + 3 + 11 + 17 - 15 - 29 + 3 + 41 + 17 - 45 - 37 + 33 + 57 - 13 - 69", "x2": "add INT- 4 sub mul idiv x_0_3 n INT- 8 x_0_2", "tree": "(-4 add (((x_0_3 idiv n) mul -8) sub x_0_2))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 3 - 3 + 1 - 7 - 4 - 8 - 8 - 8 - 12 - 12 - 17 - 21 - 21 - 33 - 37 - 25 - 42 - 37", "x2": "sub x_0_3 sqr relu mod x_0_2 INT+ 5", "tree": "(x_0_3 sub (relu((x_0_2 mod 5)))**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 + 0 - 180 + 0 - 7200 + 0 - 50 4000 + 0 - 5443 2000 + 0 - 83 8252 8000 + 0 - 1 7435 6582 4000 + 0 - 470 7627 7248 0 + 0 - 16 59 3426 4320 0", "x2": "mul sub abs n INT- 3 mul x_0_2 n", "tree": "((abs(n) sub -3) mul (x_0_2 mul n))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 2 + 2 - 6 - 6 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1", "x2": "mod add idiv sqr n INT+ 1 0 idiv x_0_5 sqr INT- 8 INT- 2", "tree": "((((n)**2 idiv 10) add (x_0_5 idiv (-8)**2)) mod -2)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 + 0 - 6 - 18 + 0 - 12 - 36 + 0 - 24 - 72 + 0 - 48 - 144 + 0 - 96 - 288 + 0 - 192", "x2": "mul mod INT+ 2 add n abs idiv sign sign INT+ 6 sign sign INT+ 3 x_0_3", "tree": "((2 mod (n add abs((sign(sign(6)) idiv sign(sign(3)))))) mul x_0_3)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 - 5 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0", "x2": "mod x_0_3 add sub x_0_1 INT+ 3 n", "tree": "(x_0_3 mod ((x_0_1 sub 3) add n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 + 10 - 3 - 12 - 2 - 1 - 1 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2", "x2": "sub mod idiv n INT- 2 relu n sub relu relu x_0_2 INT- 4", "tree": "(((n idiv -2) mod relu(n)) sub (relu(relu(x_0_2)) sub -4))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 4 + 1 + 9 - 3 - 1 + 3 - 2 + 0 + 1 + 0 + 2 + 4 + 0 + 3 + 2 + 3 + 3 + 1 + 2 + 3 + 3 + 0", "x2": "mod sub x_0_8 n INT+ 5", "tree": "((x_0_8 sub n) mod 5)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 - 5 + 0 + 10 + 5 + 0 - 10 - 5 + 0 + 10 + 5 + 0 - 10 - 5 + 0 + 10 + 5", "x2": "sub relu INT- 6 x_0_3", "tree": "(relu(-6) sub x_0_3)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 1 + 1 + 4 + 8 + 13 + 19 + 26 + 34 + 43 + 53 + 64 + 76 + 89 + 103 + 118 + 134", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 - 7 - 3 - 4 - 8 + 5 + 2 - 6 + 5 - 6 + 3 - 1 + 0 + 16 - 3 - 3 + 2 + 4 - 8 - 1 - 11 + 15 - 9 - 6 - 6 - 7 - 3", "x2": "add sqr relu abs mod mul n abs n INT+ 8 sub INT- 7 x_0_12", "tree": "((relu(abs(((n mul abs(n)) mod 8))))**2 add (-7 sub x_0_12))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 7 + 6 + 8 + 1 + 5 - 13 + 6 - 1 + 1 + 5 - 14 + 6 - 2 + 1 + 5 - 16 + 6 - 5 + 1 + 5", "x2": "sub x_0_5 relu add INT- 1 sub idiv n n idiv mod add n INT- 9 sqr relu x_0_1 INT- 4", "tree": "(x_0_5 sub relu((-1 add ((n idiv n) sub (((n add -9) mod (relu(x_0_1))**2) idiv -4)))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 6 - 6 - 6 - 6 + 6 - 6 + 6 + 6 - 6 - 6 - 6 + 6 - 6 + 6 + 6 - 6 - 6", "x2": "mul x_0_1 sign mod INT+ 7 x_0_3", "tree": "(x_0_1 mul sign((7 mod x_0_3)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 9 + 1 + 8 + 78 - 10 - 74 - 703 + 84 + 659 + 1 2647 - 1519 - 1 1873 - 22 7657 + 2 7335 + 21 3707 + 409 7819 - 49 2046 - 384 6737", "x2": "sub mul mul idiv n sub idiv INT+ 6 n INT+ 9 x_0_3 sqr add INT- 2 INT- 1 mod x_0_3 relu n", "tree": "((((n idiv ((6 idiv n) sub 9)) mul x_0_3) mul ((-2 add -1))**2) sub (x_0_3 mod relu(n)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 7 - 9 + 9 + 6 - 6 + 5 + 9 + 80 + 81 + 38 + 38 + 24 + 84 + 6402 + 6562 + 1445 + 1445 + 577 + 7057 + 4098 5605 + 4305 9845 + 208 8026", "x2": "abs add sqr abs x_0_6 idiv add n x_0_7 x_0_7", "tree": "abs(((abs(x_0_6))**2 add ((n add x_0_7) idiv x_0_7)))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 10 + 140 - 2940 + 8 2320 - 288 1200 + 1 2101 400 - 59 2950 9600 + 3320 5253 7600 - 20 9193 986 8800 + 1464 3516 9081 6000 - 11 2755 801 9283 2000 + 947 1426 7361 9788 8000 - 8 6189 9832 9940 780 8000 + 844 6618 3633 4127 6518 4000 - 8 8689 4928 1508 3403 4432 0 + 993 3223 1952 8934 1185 6384 0", "x2": "mul x_0_1 sub mul relu n mul idiv INT+ 2 INT- 3 INT+ 7 idiv sub n n n", "tree": "(x_0_1 mul ((relu(n) mul ((2 idiv -3) mul 7)) sub ((n sub n) idiv n)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 7 + 1 - 9 - 17 - 26 - 37 - 50 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325", "x2": "sub idiv INT+ 3 sub x_0_3 n sqr n", "tree": "((3 idiv (x_0_3 sub n)) sub (n)**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 + 6 + 9 + 3 + 6 + 0 + 3 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "mod x_0_3 add add sub n n INT- 2 x_0_2", "tree": "(x_0_3 mod (((n sub n) add -2) add x_0_2))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 + 7 + 0 + 35 + 0 + 210 + 0 + 1260 + 0 + 8820 + 0 + 6 1740 + 0 + 43 2180 + 0 + 345 7440 + 0", "x2": "mul relu x_0_2 add INT+ 5 idiv n INT+ 5", "tree": "(relu(x_0_2) mul (5 add (n idiv 5)))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 9 - 9 - 9 - 10 - 4 - 9 + 0 - 1 - 1 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 - 1 - 1 + 0", "x2": "idiv x_0_7 n", "tree": "(x_0_7 idiv n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 1 - 5 - 7 + 6 + 1 + 5 + 1 + 1 + 1 + 599 + 120 + 719 + 168 + 195 + 224 + 15 3343 + 3 4679 + 23 2955 + 6 647 + 7 7999 + 9 8783", "x2": "abs mod INT- 1 mul x_0_6 relu sqr mul n sign x_0_5", "tree": "abs((-1 mod (x_0_6 mul relu(((n mul sign(x_0_5)))**2))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 5 + 7 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0", "x2": "add idiv idiv x_0_6 add n n abs n abs x_0_3", "tree": "(((x_0_6 idiv (n add n)) idiv abs(n)) add abs(x_0_3))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 1 + 0 - 3 + 0 - 15 + 0 - 105 + 0 - 945 + 0 - 1 395 + 0 - 13 5135 + 0 - 202 7025 + 0 - 3445 9425", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 - 5 - 1 - 6 - 6 - 6 - 7 - 7 - 7 - 7 - 7 - 7 - 6 - 6 - 7 - 7 - 6 - 7", "x2": "sub INT- 6 sqr idiv add INT+ 1 mod n x_0_3 INT+ 9", "tree": "(-6 sub (((1 add (n mod x_0_3)) idiv 9))**2)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 6 - 10 + 6 + 8 + 100 + 16 + 64 + 64 + 100 + 1 404 + 324 + 4356 + 4356 + 1 404 + 1 828 4836 + 10 6276 + 1899 2164 + 1899 2164 + 1 828 4836", "x2": "sqr add relu INT+ 2 x_0_5", "tree": "((relu(2) add x_0_5))**2", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 7 + 6 + 3 - 10 + 10 + 3 - 3 + 1 - 9 + 10 + 11 + 13 + 84 + 38 + 41 + 16 + 46 + 18 + 50 + 56 + 54 + 62 + 96 + 104", "x2": "add relu mod add n mod x_0_4 add n mod x_0_9 sqr INT- 8 mul x_0_9 x_0_4 n", "tree": "(relu(((n add (x_0_4 mod (n add (x_0_9 mod (-8)**2)))) mod (x_0_9 mul x_0_4))) add n)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 5 + 0 + 3 - 1 + 5 + 0 + 3 + 9 + 5 + 0 + 3 + 9 + 5 + 0 + 3 + 9 + 5 + 0 + 3", "x2": "mod x_0_4 relu abs INT+ 1 0", "tree": "(x_0_4 mod relu(abs(10)))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 10 + 1 - 5 + 4 + 11 + 4 - 2 + 6 + 12 + 6 + 2 + 8 + 13 + 9 + 5 + 10", "x2": "sub sub n idiv x_0_2 x_0_2 add idiv relu add x_0_2 n INT- 1 0 x_0_2", "tree": "((n sub (x_0_2 idiv x_0_2)) sub ((relu((x_0_2 add n)) idiv -10) add x_0_2))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 3 + 11 + 13 + 19 + 29 + 37 + 47 + 59 + 73 + 99 + 118 + 139 + 162 + 187 + 214 + 243", "x2": "sub sqr mod n sqr x_0_1 add mod INT- 1 0 n sub n INT+ 9", "tree": "(((n mod (x_0_1)**2))**2 sub ((-10 mod n) add (n sub 9)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 - 1 + 9 - 10 + 5 + 35 + 38 + 32 + 43 + 25 + 41 + 72 + 76 + 71 + 83 + 66 + 83 + 115 + 120 + 116", "x2": "add relu sub n add sub sqr INT+ 5 add sqr INT+ 7 x_0_6 n n", "tree": "(relu((n sub (((5)**2 sub ((7)**2 add x_0_6)) add n))) add n)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 9 + 3 + 8 + 2 + 7 + 1 + 6 + 0 + 5 - 1 + 4 - 2 + 3 - 3 + 2 - 4", "x2": "sub x_0_2 relu INT+ 1", "tree": "(x_0_2 sub relu(1))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 - 6 - 5 + 8 + 9 + 8 + 7 + 8 + 10 + 13 + 21 + 25 + 13 + 18 + 28 + 34 + 45 + 52 + 20 + 39 + 41 + 61 + 64 + 85 + 89 + 65 + 50 + 93 + 79 + 123 + 110", "x2": "abs add mod x_0_2 add x_0_7 n n", "tree": "abs(((x_0_2 mod (x_0_7 add n)) add n))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 1 - 4 + 10 - 9 + 10 - 1 - 9 + 25 + 4 + 64 + 25 + 225 + 9 + 81 + 324 + 225 + 49 + 2704 + 144 + 4 4521 + 36 + 4225 + 9 4249 + 4 2849 + 900 + 720 3856 + 1 5129 + 19 8016 1001 + 169 + 1764 8401 + 88 7816 2176", "x2": "relu sqr add n sub add INT+ 2 INT- 9 x_0_8", "tree": "relu(((n add ((2 add -9) sub x_0_8)))**2)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 7 + 7 - 5 + 10 - 58 + 69 + 2 + 98 - 49 + 631 + 29 + 894 - 36 + 5693 + 276 + 8062 - 19 + 5 1255 + 2503 + 7 2578 + 2 + 46 1317 + 2 2550 + 65 3226 + 43 + 415 1879 + 20 2977 + 587 9062", "x2": "sub n mul mod sign idiv mod x_0_3 x_0_4 sqr sub INT+ 1 0 x_0_3 INT- 1 0 x_0_4", "tree": "(n sub ((sign(((x_0_3 mod x_0_4) idiv ((10 sub x_0_3))**2)) mod -10) mul x_0_4))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 11 + 19 + 28 + 38 + 49 + 61 + 74 + 88 + 103 + 119 + 136 + 154 + 173 + 193 + 214 + 236 + 259 + 283 + 308 + 334 + 361 + 389 + 418 + 448", "x2": "abs sub sub idiv INT- 4 INT- 6 add n INT+ 5 abs x_0_1", "tree": "abs((((-4 idiv -6) sub (n add 5)) sub abs(x_0_1)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 7 + 0 - 6 + 8 - 5 + 0 + 1 - 27 - 150 + 66 - 144 - 182 + 1372 + 2025 - 1312 + 2 6231 + 4 2426 - 2 6429 + 48 7000 + 92 2320 - 57 7566 + 1017 8627 + 2280 1464 - 1217 5625 + 2 3956 906 + 6 3194 7393 - 2 8500 2340 + 62 5927 6538 + 193 4101 7520 - 74 2638 9047 + 1793 4488 5792", "x2": "mul n sub sub relu sub n sub add sub x_0_8 x_0_3 n n x_0_5 n", "tree": "(n mul ((relu((n sub (((x_0_8 sub x_0_3) add n) sub n))) sub x_0_5) sub n))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 5 + 1 - 1 - 9 - 7 + 9 - 10 - 8 - 3 - 2 + 3 + 25 + 9 + 0 + 1 + 25 + 16 + 16 + 25 + 16 + 4 + 1 + 1 + 144 + 16 + 0 + 0 + 144 + 64 + 64 + 144 + 64 + 4 + 0 + 0", "x2": "sqr idiv x_0_12 INT+ 2", "tree": "((x_0_12 idiv 2))**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 5 + 4 + 8 - 4 - 5 - 6 + 5 - 120 - 96 - 192 - 96 - 120 - 144 - 120 - 2880 - 2304 - 4608 - 2304 - 2880 - 3456 - 2880 - 6 9120 - 5 5296 - 11 592 - 5 5296 - 6 9120 - 8 2944 - 6 9120 - 165 8880 - 132 7104 - 265 4208", "x2": "mul abs INT- 4 mul INT- 1 relu mul abs abs x_0_7 abs INT+ 6", "tree": "(abs(-4) mul (-1 mul relu((abs(abs(x_0_7)) mul abs(6)))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 3 - 2 - 3 - 1 + 6 - 8 - 9 - 9 - 10 - 11 - 14 - 12 - 13 - 14 - 14 - 15 - 16 - 17 - 18 - 19 - 20 - 20 - 21 - 22 - 23 - 24 - 24 - 25 - 26", "x2": "sub idiv x_0_6 INT- 5 n", "tree": "((x_0_6 idiv -5) sub n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 2 + 7 + 53 + 14 + 22 + 11 + 9 + 90 + 10 + 11 + 13 + 22 + 18 + 79 + 97 + 66 + 54 + 35 + 45 + 46 + 58 + 87 + 73 + 34", "x2": "add abs sqr mod x_0_1 abs abs INT+ 1 0 n", "tree": "(abs(((x_0_1 mod abs(abs(10))))**2) add n)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 2 - 9 + 9 - 30 + 26 - 52 + 63 - 79 + 125 - 96 + 202 - 68 + 249 + 65 + 161 + 378 - 112 + 786 - 169 + 927 + 447 + 450 + 1820 - 508 + 3195 - 97 + 3257", "x2": "sub sub sub sub x_0_2 x_0_1 relu INT+ 6 mul INT- 2 mod INT- 1 x_0_3 n", "tree": "((((x_0_2 sub x_0_1) sub relu(6)) sub (-2 mul (-1 mod x_0_3))) sub n)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 10 + 90 + 1530 + 3 5190 + 102 510 + 3571 7850 + 14 6443 1850 + 688 2829 6950 + 3 6478 9973 8350 + 215 2260 8456 2650 + 1 3989 6954 9657 2250 + 99 3268 3802 5662 9750 + 7648 1665 2797 6049 750 + 63 4797 8218 2201 2073 2250 + 5649 7006 1421 5907 4517 250 + 53 6721 5583 5051 1207 9117 3750 + 5420 8877 3934 163 1999 854 8750 + 58 34 9881 939 7462 3902 1471 6250 + 6554 3953 6563 6191 3250 942 6293 6250 + 77 9973 485 1070 6767 6761 2172 8941 3750 + 9749 6631 638 3834 5959 5152 1611 7671 8750 + 127 7205 8669 3628 2332 696 4933 1141 5015 6250 + 1 7497 7203 7702 7067 9493 5419 5836 6385 7140 6250 + 250 2174 139 1487 716 7576 5000 4639 3157 1109 3750 + 3 7282 3928 733 1573 6796 8898 5069 1258 409 5296 8750", "x2": "mod sub mul x_0_1 mul abs INT- 3 add n n x_0_1 abs sqr x_0_1", "tree": "(((x_0_1 mul (abs(-3) mul (n add n))) sub x_0_1) mod abs((x_0_1)**2))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 4 + 8 - 10 + 4 + 2 - 10 - 3 + 17 - 2 + 30 - 7 + 39 + 8 + 34 + 10 + 56 + 13 + 91 + 11 + 135 + 24 + 174 + 39 + 235 + 57 + 331 + 73 + 471 + 102 + 650 + 146", "x2": "sub add add add mul idiv INT- 3 add INT- 9 INT- 6 n INT+ 6 add INT+ 5 x_0_8 abs add INT+ 3 x_0_2 INT+ 9", "tree": "((((((-3 idiv (-9 add -6)) mul n) add 6) add (5 add x_0_8)) add abs((3 add x_0_2))) sub 9)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 3 + 7 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_3 relu sub sqr n n", "tree": "(x_0_3 idiv relu(((n)**2 sub n)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 7 + 8 + 0 + 1 + 2 - 7 + 7 + 7 + 7 + 7 + 7 - 7 - 7 - 7 - 7 - 7 - 7 + 7 - 7 + 7 - 7 + 7 - 7 - 7 + 7 + 7 - 7 - 7 + 7 - 7", "x2": "mul sign sign x_0_6 x_0_1", "tree": "(sign(sign(x_0_6)) mul x_0_1)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign mul n sign sub x_0_1 add mul x_0_2 n mod x_0_1 x_0_1", "tree": "sign((n mul sign((x_0_1 sub ((x_0_2 mul n) add (x_0_1 mod x_0_1))))))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 - 1 - 10 + 1 + 4 + 2 + 1 + 4 + 2 + 1 + 4 + 2 + 1 + 4 + 2 + 1 + 4 + 2 + 1 + 4 + 2 + 1 + 4 + 2 + 1 + 4 + 2", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 2 - 1 + 2 - 5 + 3 - 2 + 2 - 5 + 5 - 3 + 2 - 5 + 7 - 3 + 2 - 6 + 9 - 4 + 2 - 6 + 11 - 4 + 2 - 7 + 13", "x2": "idiv n x_0_2", "tree": "(n idiv x_0_2)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 6 + 3 + 8 + 20 + 18 + 14 + 8 + 18 + 30 + 33 + 24 + 26 + 28 + 45 + 32 + 34 + 36 + 57 + 40 + 42 + 44 + 69 + 48 + 50 + 52", "x2": "mul add mod n INT+ 2 add abs idiv x_0_1 x_0_2 sign x_0_1 n", "tree": "(((n mod 2) add (abs((x_0_1 idiv x_0_2)) add sign(x_0_1))) mul n)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 + 2 + 9 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437 + 480 + 525 + 572 + 621 + 672 + 725", "x2": "mul abs n add n sub relu mod INT+ 5 x_0_1 sign relu n", "tree": "(abs(n) mul (n add (relu((5 mod x_0_1)) sub sign(relu(n)))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 0 + 4 + 9 - 5 + 0 + 6 - 9 + 0 + 4 - 27 + 40 + 0 + 6 + 45 + 0 + 4 + 81 + 1120 + 0 + 6 - 225 + 0 + 4 - 243 - 8 9600 + 0 + 6 + 1125 + 0 + 4 + 729", "x2": "mul sub mod sign n n x_0_8 x_0_7", "tree": "(((sign(n) mod n) sub x_0_8) mul x_0_7)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3", "x2": "idiv n sub abs add abs INT+ 8 n n", "tree": "(n idiv (abs((abs(8) add n)) sub n))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 4 - 5 - 17 - 32 - 50 - 71 - 95 - 122 - 152 - 185 - 221 - 260 - 302 - 347 - 395 - 446 - 500 - 557 - 617 - 680 - 746 - 815 - 887 - 962", "x2": "sub x_0_1 mul INT+ 3 n", "tree": "(x_0_1 sub (3 mul n))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9 + 0 + 2 - 9", "x2": "add mul n mul sub n n n x_0_3", "tree": "((n mul ((n sub n) mul n)) add x_0_3)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 - 2 - 2 - 2 - 1 - 2 - 2 - 2 - 2 - 1 - 2 - 2 - 2 - 2 - 1 - 2 - 2 - 2 - 2 - 1 - 2 - 2 - 2 - 2", "x2": "idiv sub sign mod n INT- 5 n n", "tree": "((sign((n mod -5)) sub n) idiv n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576", "x2": "mul idiv sign INT- 4 n mul n n", "tree": "((sign(-4) idiv n) mul (n mul n))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 1 - 5 - 4 - 10 - 6 + 56 + 40 + 63 + 20 + 77 - 504 - 325 - 658 - 45 - 944 - 8245 - 5490 - 1 2103 - 460 - 1 9341 - 18 862 - 12 5695 - 28 9848 - 1 825 - 50 2138 - 488 2491 - 351 8620 - 840 4693", "x2": "mul sub add n INT+ 2 abs x_0_5 n", "tree": "(((n add 2) sub abs(x_0_5)) mul n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 1 - 6 - 10 - 13 - 15 - 16 - 16 - 15 - 13 - 10 - 6 - 1 + 5 + 12 + 20 + 29 + 39 + 50 + 62 + 75 + 89 + 104 + 120 + 137", "x2": "add sub x_0_1 mul INT- 1 n INT- 8", "tree": "((x_0_1 sub (-1 mul n)) add -8)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 1 + 3 + 3 + 5 + 33 + 13 + 45 + 51 + 95 + 693 + 299 + 1125 + 1377 + 2755 + 2 1483 + 9867 + 3 9375 + 5 949 + 10 7445 + 88 803 + 42 4281 + 177 1875 + 239 4603 + 526 4805 + 4492 953 + 2248 6893 + 9745 3125 + 1 3649 2371", "x2": "mul x_0_5 sub n sub sign sqr INT+ 6 n", "tree": "(x_0_5 mul (n sub (sign((6)**2) sub n)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 10 - 4 - 1 - 1 + 5 + 9 + 3 - 2 + 10 - 6 - 4 + 0 + 0 + 3 + 1 + 5 + 0 + 2 + 0 + 0 + 0 + 0 + 8 + 25 + 5 + 0 + 14 + 0 + 0 + 0 + 0 + 4 + 1 + 7 + 0", "x2": "relu idiv add relu x_0_12 abs n x_0_9", "tree": "relu(((relu(x_0_12) add abs(n)) idiv x_0_9))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 7 + 42 + 171 + 748 + 3825 + 2 3058 + 16 1539 + 129 2472 + 1163 2437 + 1 1632 4590 + 12 7957 743 + 153 5484 9204 + 1996 1303 9977 + 2 7945 8256 42 + 41 9187 3840 1035 + 670 6998 1441 7008 + 1 1401 8968 4508 9629 + 20 5234 1432 1161 3862 + 389 9448 7210 2066 3967 + 7798 8974 4204 1327 9980 + 16 3776 8462 8286 7888 273 + 360 3090 6182 2309 3536 6754 + 8287 1084 2191 3115 1343 6147 + 19 8890 6021 2591 4763 2246 8392 + 497 2265 531 4786 9080 6171 725", "x2": "mul abs n abs abs add add INT+ 6 x_0_1 add INT+ 6 n", "tree": "(abs(n) mul abs(abs(((6 add x_0_1) add (6 add n)))))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 6 + 6 - 8 - 11 - 13 - 1 + 0 + 0 - 14 - 17 - 19 - 7 - 6 - 6 - 20 - 23 - 25 - 13 - 12 - 12 - 26 - 29 - 31 - 19 - 18 - 18", "x2": "sub sub sign abs INT- 2 abs n add add INT- 4 x_0_3 n", "tree": "((sign(abs(-2)) sub abs(n)) sub ((-4 add x_0_3) add n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 1 + 6 - 8 + 25 - 54 + 168 - 440 + 1503 - 4410 + 1 6522 - 5 2932 + 21 4773 - 74 1062 + 322 1580 - 1185 7008 + 5476 6843 - 2 1342 6162 + 10 4056 9998 - 42 6852 3260 + 218 5196 9937 - 939 751 1742 + 5025 9530 8528 - 2 2537 8028 1832 + 12 5648 8271 3175 - 58 5982 8732 7658", "x2": "sub mul add n sub x_0_1 x_0_1 x_0_2 n", "tree": "(((n add (x_0_1 sub x_0_1)) mul x_0_2) sub n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 - 6 + 8 + 8 - 6 - 9 + 10 - 48 - 54 + 80 + 88 - 72 - 117 + 140 - 720 - 864 + 1360 + 1584 - 1368 - 2340 + 2940 - 1 5840 - 1 9872 + 3 2640 + 3 9600 - 3 5568 - 6 3180 + 8 2320 - 45 9360 - 59 6160 + 101 1840", "x2": "mul x_0_7 n", "tree": "(x_0_7 mul n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 6 + 5 + 277 + 257 + 255 + 1 7434 + 1 8485 + 2 634 + 156 9037 + 182 9990 + 222 8445 + 1 8357 7300 + 2 3057 8709 + 3 84 42 + 264 3513 1165 + 352 7854 2440 + 487 3608 6765 + 4 5204 742 9174 + 6 3501 3763 9157 + 9 2111 2039 8540 + 895 406 7097 6405 + 1314 4784 9130 5450 + 1989 6020 608 4589 + 20 1384 1509 6969 1072 + 30 7587 9669 6547 5245 + 48 3473 2874 7855 5070", "x2": "sub INT- 3 mul sign add INT- 1 x_0_1 add n mod n mul mul x_0_3 INT- 9 n", "tree": "(-3 sub (sign((-1 add x_0_1)) mul (n add (n mod ((x_0_3 mul -9) mul n)))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 15 + 64 + 325 + 1956 + 1 3699 + 10 9600 + 98 6409 + 986 4100 + 1 850 5111 + 13 206 1344 + 169 2679 7485 + 2369 7516 4804 + 3 5546 2747 2075 + 56 8740 3955 3216 + 966 8586 7240 4689 + 1 7403 4561 328 4420 + 33 665 6659 6240 3999 + 661 3313 3192 4808 0 + 1 3887 9579 7042 968 21 + 30 5535 753 4926 1296 484 + 702 7306 7330 3300 9809 1155 + 1 6865 5361 5927 9223 5418 7744 + 42 1638 4039 8198 588 5469 3625", "x2": "add mul relu n x_0_1 n", "tree": "((relu(n) mul x_0_1) add n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 + 10 + 12 + 40 + 60 + 240 + 420 + 1920 + 3780 + 1 9200 + 4 1580 + 23 400 + 54 540 + 322 5600 + 810 8100 + 5160 9600 + 1 3783 7700 + 9 2897 2800 + 26 1891 6300 + 185 7945 6000 + 549 9724 2300 + 4087 4803 2000 + 1 2649 3657 2900 + 9 8099 5276 8000 + 31 6234 1432 2500 + 255 587 7196 8000", "x2": "abs mul n x_0_2", "tree": "abs((n mul x_0_2))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 - 5 - 3 - 2 - 3 - 3 - 1 + 0 - 1 - 1 - 3 - 2 - 1 + 0 - 3 - 1 - 3 + 0 - 1 + 0 - 1 - 1 - 3 - 2 - 1 - 3", "x2": "mod sub sub n INT+ 4 idiv relu INT+ 1 0 sign INT+ 2 add INT- 3 x_0_2", "tree": "(((n sub 4) sub (relu(10) idiv sign(2))) mod (-3 add x_0_2))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 8 - 10 - 5 + 11 + 13 + 8 - 8 - 10 - 5 + 11 + 13 + 8 - 8 - 10 - 5 + 11 + 13 + 8 - 8 - 10 - 5 + 11 + 13 + 8 - 8 - 10", "x2": "sub INT+ 3 x_0_3", "tree": "(3 sub x_0_3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 64 + 256 + 576 + 1024 + 1600 + 2304 + 3136 + 4096 + 5184 + 6400 + 7744 + 9216 + 1 816 + 1 2544 + 1 4400 + 1 6384 + 1 8496 + 2 736 + 2 3104 + 2 5600 + 2 8224 + 3 976 + 3 3856 + 3 6864", "x2": "sqr mul n INT- 8", "tree": "((n mul -8))**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 + 7 + 8 - 5 - 9 - 1 - 8 + 5 + 9 - 8 + 4 - 1 + 6 + 14 + 9 + 0 - 1 - 9 - 4 + 5 - 3 + 1 + 0 + 6 + 20 + 29 + 29 + 28 + 19 + 15 + 20 + 17 + 18 + 18 + 24", "x2": "add x_0_11 x_0_1", "tree": "(x_0_11 add x_0_1)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 6 - 2 + 10 - 7 + 3 + 9 + 8 + 6 + 5 + 7 - 113 - 123 - 142 - 137 - 163 - 162 - 165 - 175 - 186 - 198 - 205 - 334 - 353 - 381 - 385 - 420 - 428 - 440 - 459 - 479 - 500 - 516 - 654 - 682", "x2": "add sub add x_0_11 sign x_0_9 relu add sub n INT- 8 INT+ 5 mul n INT- 8", "tree": "(((x_0_11 add sign(x_0_9)) sub relu(((n sub -8) add 5))) add (n mul -8))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 1 - 6 + 6 - 3 - 1 - 10 + 7 - 9 + 10 + 100 + 100 + 99 + 100 + 100 + 100 + 100 + 100 + 100 + 100 + 1 + 98 + 99 + 2 + 1 + 98 + 99 + 2 + 100 + 100 + 97 + 97 + 100 + 100", "x2": "sub sqr INT+ 1 0 relu mod sub x_0_8 sub mod n relu n relu relu x_0_2 x_0_9", "tree": "((10)**2 sub relu(((x_0_8 sub ((n mod relu(n)) sub relu(relu(x_0_2)))) mod x_0_9)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 5 - 3 + 15 + 32 + 50 + 156 + 301 + 1184 + 2628 + 1 1740 + 2 8787 + 14 736 + 37 4062 + 197 108 + 561 705 + 3152 1472 + 9538 1696 + 5 6738 6172 + 18 1225 1863 + 113 4772 3040 + 380 5728 8682 + 2496 4990 6396 + 8753 1763 9157 + 5 9915 9775 2928 + 21 8829 4097 8300 + 155 7815 4157 5452", "x2": "abs mul n sub mod sub x_0_2 abs x_0_1 x_0_1 n", "tree": "abs((n mul (((x_0_2 sub abs(x_0_1)) mod x_0_1) sub n)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 + 8 + 8 - 8 + 3 - 7 + 4 + 0 + 16 + 16 + 0 + 11 + 1 + 12 + 8 + 24 + 24 + 8 + 19 + 9 + 20 + 16 + 32 + 32 + 16 + 27 + 17 + 28 + 24 + 40 + 40", "x2": "relu add x_0_7 INT+ 8", "tree": "relu((x_0_7 add 8))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 1 - 6 + 1 + 6 - 7 + 2 + 8 - 1 + 2 + 12 + 3 + 8 + 15 + 6 + 11 + 19 + 8 + 17 + 23 + 10 + 23 + 28 + 11 + 24 + 34 + 11 + 28 + 34 + 17 + 30", "x2": "sub x_0_3 mod sub n abs x_0_6 INT- 8", "tree": "(x_0_3 sub ((n sub abs(x_0_6)) mod -8))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 3 - 4 - 36 - 315 - 2817 - 2 5092 - 22 3065 - 198 2313 - 1761 5079 - 1 5652 8225 - 13 9091 3316 - 123 5968 4250 - 1098 2840 4351 - 9759 3741 9450 - 8 6721 9961 6944 - 77 613 4091 3490 - 684 7686 3144 6522 - 6084 8678 8646 6373 - 5 4070 2589 997 6127 - 48 469 4125 676 6634 - 426 9460 9015 8270 2547 - 3793 8515 7840 5453 7987 - 3 3712 2417 3439 2994 2393 - 29 9567 6607 9811 2515 8839 - 266 1964 2829 7736 3558 7902 - 2365 4268 3711 8673 5080 9824", "x2": "mul sub x_0_1 mod abs n x_0_3 add INT+ 6 INT+ 3", "tree": "((x_0_1 sub (abs(n) mod x_0_3)) mul (6 add 3))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824", "x2": "mul sqr n n", "tree": "((n)**2 mul n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 - 4 - 9 + 7 - 10 - 35 - 28 - 63 + 49 - 70 - 245 - 196 - 441 + 343 - 490 - 1715 - 1372 - 3087 + 2401 - 3430 - 1 2005 - 9604 - 2 1609 + 1 6807 - 2 4010 - 8 4035 - 6 7228 - 15 1263 + 11 7649", "x2": "mul x_0_5 INT+ 7", "tree": "(x_0_5 mul 7)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 - 7 - 17 + 7 - 17 - 27 + 17 - 27 - 37 + 27 - 37 - 47 + 37 - 47 - 57 + 47 - 57 - 67 + 57 - 67 - 77 + 67 - 77 - 87 + 77", "x2": "sub mul sign x_0_2 x_0_1 INT+ 1 0", "tree": "((sign(x_0_2) mul x_0_1) sub 10)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 + 6 - 16 - 20 - 20 - 28 - 48 - 44 - 44 - 52 - 84 - 60 - 72 - 68 - 104 - 76 - 72 - 84 - 132 - 92 - 104 - 100 - 136 - 108 - 140 - 116", "x2": "mul add n relu mod mod INT- 5 add abs INT+ 4 abs x_0_2 n INT- 4", "tree": "((n add relu(((-5 mod (abs(4) add abs(x_0_2))) mod n))) mul -4)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 1 - 8 + 32 - 15 + 72 + 147 + 152 + 684 + 1510 + 1716 + 8256 + 1 9682 + 2 4080 + 12 3900 + 31 4976 + 40 9428 + 223 272 + 598 4620 + 818 8640 + 4683 5796 + 1 3166 1728 + 1 8833 8812 + 11 2405 9200 + 32 9154 3300 + 48 9680 9216 + 303 4959 8508", "x2": "mul relu n add mod idiv mul sub x_0_2 INT- 4 n n x_0_2 abs x_0_3", "tree": "(relu(n) mul (((((x_0_2 sub -4) mul n) idiv n) mod x_0_2) add abs(x_0_3)))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 + 24 - 8 + 23 - 9 + 22 - 10 + 21 - 11 + 20 - 12 + 19 - 13 + 18 - 14 + 17 - 15 + 16 - 16 + 15 - 17 + 14 - 18 + 13 - 19", "x2": "sub sqr INT+ 4 add add n INT- 2 sub x_0_1 sign sign idiv INT- 6 mod INT- 8 INT- 3", "tree": "((4)**2 sub ((n add -2) add (x_0_1 sub sign(sign((-6 idiv (-8 mod -3)))))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 6 + 1 - 9 - 3 - 14 - 9 - 21 - 17 - 30 - 27 - 41 - 39 - 54 - 53 - 69 - 69 - 86 - 87 - 105 - 107 - 126 - 129 - 149 - 153 - 174 - 179", "x2": "sub x_0_2 n", "tree": "(x_0_2 sub n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign add x_0_1 mul sub add x_0_2 n n INT- 9", "tree": "sign((x_0_1 add (((x_0_2 add n) sub n) mul -9)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 5 + 5 + 2 - 4 + 8 - 10 - 7 - 8 - 10 + 8 + 0 + 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign add idiv mul sub x_0_11 mod INT+ 5 x_0_4 x_0_2 mod sqr INT- 2 n x_0_10", "tree": "sign(((((x_0_11 sub (5 mod x_0_4)) mul x_0_2) idiv ((-2)**2 mod n)) add x_0_10))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 6 - 7 + 9 + 3 + 6 - 9 - 86 - 87 - 38 + 132 + 891 + 760 + 359 - 1302 - 8913 - 7574 - 3665 + 1 2884 + 8 9084 + 7 5633 + 3 6522 - 12 8839 - 89 800 - 75 6411 - 36 5302 + 128 8497 + 890 7886 + 756 3996 + 365 2925 - 1288 4896", "x2": "sub mul INT- 1 0 sub abs mod x_0_3 n sub mod sub x_0_1 x_0_6 n x_0_4 add idiv n INT- 9 n", "tree": "((-10 mul (abs((x_0_3 mod n)) sub (((x_0_1 sub x_0_6) mod n) sub x_0_4))) sub ((n idiv -9) add n))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 5 - 1 + 14 + 19 + 47 + 145 + 215 + 361 + 485 + 691 + 881 + 1159 + 1427 + 1789 + 2147 + 2605 + 3065 + 3631 + 4205 + 4891 + 5591 + 6409 + 7247 + 8209 + 9197 + 1 315", "x2": "sub abs x_0_2 mul INT- 3 add mod relu sqr n x_0_1 n", "tree": "(abs(x_0_2) sub (-3 mul ((relu((n)**2) mod x_0_1) add n)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 4 + 0 + 24 + 16 + 0 + 96 + 64 + 0 + 384 + 256 + 0 + 1536 + 1024 + 0 + 6144 + 4096 + 0 + 2 4576 + 1 6384 + 0 + 9 8304 + 6 5536 + 0 + 39 3216 + 26 2144 + 0", "x2": "mul INT+ 8 idiv abs x_0_3 INT+ 2", "tree": "(8 mul (abs(x_0_3) idiv 2))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 5 - 6 - 3 + 2 - 8 + 10 + 14 + 14 + 18 + 24 + 15 + 34 + 39 + 40 + 45 + 52 + 44 + 64 + 70 + 72 + 78 + 86 + 79 + 100 + 107 + 110 + 117 + 126 + 120 + 142", "x2": "add add n x_0_6 sub INT+ 9 INT- 3", "tree": "((n add x_0_6) add (9 sub -3))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 7 + 6 - 9 - 244 - 344 - 660 - 844 - 1244 + 0 - 1996 - 836 + 0 - 1843 - 1091 + 0 - 2348 - 1343 + 0 - 2852 - 1593 + 0 - 3355 - 1845 + 0 + 0 + 0 + 0", "x2": "mod mod abs x_0_3 abs INT- 5 add mul mul INT+ 6 sub mul n INT+ 2 INT+ 2 INT- 7 x_0_2", "tree": "((abs(x_0_3) mod abs(-5)) mod (((6 mul ((n mul 2) sub 2)) mul -7) add x_0_2))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "mul sub n idiv n abs mul n n idiv n sign add idiv n INT- 3 x_0_1", "tree": "((n sub (n idiv abs((n mul n)))) mul (n idiv sign(((n idiv -3) add x_0_1))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824", "x2": "mul mul sqr n abs INT+ 1 n", "tree": "(((n)**2 mul abs(1)) mul n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 - 9 - 1 - 4 + 3 + 3 + 4 - 7 + 6 - 1 - 9 - 6 - 5 - 182 - 41 - 69 - 79 - 63 - 32 - 46 - 420 - 31 - 65 - 91 + 22 + 10 + 17 + 19 + 16 + 2 + 11 + 30 - 2 + 17 + 22", "x2": "sub n idiv sqr n abs x_0_11", "tree": "(n sub ((n)**2 idiv abs(x_0_11)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 3 + 6 + 0 - 2 + 8 - 8 - 3 + 0 + 0 - 2 + 0 - 8 - 3 + 0 + 0 - 2 + 0 - 8 - 3 + 0 + 0 - 2 + 0 - 8 - 3 + 0 + 0 - 2 + 0 - 8", "x2": "sub x_0_6 relu mul x_0_6 sign add INT+ 6 sign idiv mul idiv INT+ 9 INT+ 4 x_0_5 n", "tree": "(x_0_6 sub relu((x_0_6 mul sign((6 add sign((((9 idiv 4) mul x_0_5) idiv n)))))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 10 - 5 + 4 - 8 + 3 + 4 + 0 + 0 + 4 + 0 + 3 + 4 + 0 + 0 + 4 + 0 + 3 + 4 + 0 + 0 + 4 + 0 + 3 + 4 + 0 + 0 + 4 + 0 + 3", "x2": "relu relu x_0_6", "tree": "relu(relu(x_0_6))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 4 + 9 + 5 + 3 + 6 + 4 - 10 + 2 - 7 - 8 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign mul sqr sub mul mod sqr n INT- 3 n mul INT- 6 mod INT- 7 n x_0_10", "tree": "sign(((((((n)**2 mod -3) mul n) sub (-6 mul (-7 mod n))))**2 mul x_0_10))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 1 - 10 + 7 - 9 + 4 - 8 - 3 - 9 - 7 - 9 - 9 - 11 - 12 - 14 - 14 - 19 - 21 - 21 - 24 - 20 - 24 - 27 - 25 - 33 - 26 - 28 - 34 - 52 - 41", "x2": "mod sign sqr x_0_5 sub mod x_0_5 sub add x_0_4 INT+ 1 INT- 5 n", "tree": "(sign((x_0_5)**2) mod ((x_0_5 mod ((x_0_4 add 1) sub -5)) sub n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 10 + 4 - 9 - 8 + 10 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1", "x2": "idiv x_0_5 sqr relu INT+ 4", "tree": "(x_0_5 idiv (relu(4))**2)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 9 - 7 + 0 - 9 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "add n sub idiv sign x_0_5 relu n n", "tree": "(n add ((sign(x_0_5) idiv relu(n)) sub n))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 196 + 4878 + 15 6328 + 625 3410 + 3 16 4028 + 168 918 5974 + 1 757 8790 2800 + 77 4567 2900 2122 + 6196 5383 2017 340 + 54 5295 3721 7499 558 + 5234 8355 7287 9909 4264 + 54 4422 8995 7951 580 4210 + 6097 5364 7529 518 5007 2332 + 73 1704 3770 3486 2220 868 710 + 9365 8160 2604 6236 4171 1113 1808 + 127 3750 9795 4228 8152 7271 1392 6874 + 1 8342 141 540 8949 3992 7044 547 900 + 278 7986 1440 2216 308 6891 696 3157 7902 + 4 4607 7783 435 4564 9390 2571 1410 5246 5480 + 749 4106 7551 3156 6909 7563 1951 6968 1420 1858 + 13 1896 2788 9031 5577 6117 1122 3498 6392 9952 8284 + 2426 8915 3158 1806 6280 5548 6512 3749 6311 1320 5590 + 46 5963 1740 6370 6872 5866 5341 375 9929 1737 3547 4672 + 9319 2634 8127 4137 4517 3306 8207 5198 5834 7470 9493 5850", "x2": "mul n abs add mul relu add abs relu relu relu INT+ 7 x_0_1 INT+ 8 INT+ 2", "tree": "(n mul abs(((relu((abs(relu(relu(relu(7)))) add x_0_1)) mul 8) add 2)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 6 + 20 + 20 + 0 + 0 + 24 + 24 + 12 + 12 + 4 + 4 + 8 + 8 + 20 + 20 + 0 + 0 + 24 + 24 + 12 + 12 + 4 + 4 + 8 + 8", "x2": "mul INT+ 4 mod sub INT- 1 x_0_2 INT+ 7", "tree": "(4 mul ((-1 sub x_0_2) mod 7))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 3 - 2 + 2 + 8 + 42 - 245 - 224 - 126 + 70 + 1386 - 1 584 - 1 465 - 6468 + 3360 + 7 7280 - 63 105 - 65 9736 - 43 521 + 23 4780 + 567 9639 - 4851 8624 - 5310 9231 - 3616 4352 + 2054 2725 + 5 1684 6512 - 45 8501 535 - 52 470 5324 - 36 7068 2337", "x2": "mul sub n mul n INT- 6 idiv add x_0_5 INT- 6 INT+ 2", "tree": "((n sub (n mul -6)) mul ((x_0_5 add -6) idiv 2))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 2 + 3 + 9 + 8 + 4 - 194 + 71 - 962 + 435 - 1 1534 - 424 + 12 + 437 + 14 - 422 + 2 - 1671 + 18 - 4994 + 2 - 11 9835 + 20 - 23 9647 + 4 - 575 1503 + 22 - 1150 2979 + 6 - 1 3803 5719", "x2": "add n mul x_0_2 idiv sqr INT- 7 x_0_5", "tree": "(n add (x_0_2 mul ((-7)**2 idiv x_0_5)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 + 10 + 24 + 40 - 40 - 56 - 72 + 232 + 344 + 456 - 136 - 152 - 168 + 904 + 1016 + 1128 - 232 - 248 - 264 + 1576 + 1688 + 1800 - 328 - 344 - 360 + 2248", "x2": "mul INT- 8 add add mul abs sign INT- 9 INT- 7 n mod n x_0_3", "tree": "(-8 mul (((abs(sign(-9)) mul -7) add n) add (n mod x_0_3)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 4 - 7 - 10 + 0 - 9 + 1 + 4 - 3 + 600 + 320 + 784 + 1200 + 0 + 324 + 0 + 448 + 216 + 720 0 + 163 8400 + 737 5872 + 1152 0 + 0 + 0 + 0 + 481 6896 + 93 3120 + 829 4400 0 0 + 32 2122 5472 0 + 435 2279 208 3072 + 530 8416 0 0 + 0 + 0", "x2": "abs mul mul mod mod n idiv sqr n INT+ 3 INT- 8 sqr x_0_9 INT- 4", "tree": "abs(((((n mod ((n)**2 idiv 3)) mod -8) mul (x_0_9)**2) mul -4))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 0 + 3 - 10 - 9 + 10 + 3 - 5 + 1 + 0 + 4 + 6 + 1 + 1 + 8 + 3 + 4 + 0 + 8 + 12 + 8 + 5 + 5 + 13 + 13 + 0 + 4 + 16 + 15 + 6 + 8 + 13", "x2": "mod idiv mul x_0_8 INT+ 4 INT- 6 sub add INT- 4 n x_0_2", "tree": "(((x_0_8 mul 4) idiv -6) mod ((-4 add n) sub x_0_2))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 9 - 4 - 4 - 9 + 1 + 5 + 5 + 10 + 0 - 4 - 4 - 9 + 1 + 5 + 5 + 10 + 0 - 4 - 4 - 9 + 1 + 5 + 5 + 10 + 0 - 4 - 4 - 9 + 1", "x2": "sub relu sign sqr add sub INT+ 1 0 x_0_5 n x_0_4", "tree": "(relu(sign((((10 sub x_0_5) add n))**2)) sub x_0_4)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 144 + 1152 + 3888 + 9216 + 1 8000 + 3 1104 + 4 9392 + 7 3728 + 10 4976 + 14 4000 + 19 1664 + 24 8832 + 31 6368 + 39 5136 + 48 6000 + 58 9824 + 70 7472 + 83 9808 + 98 7696 + 115 2000 + 133 3584 + 153 3312 + 175 2048 + 199 656", "x2": "mul n sqr mul sub add mod INT+ 7 INT+ 7 relu INT- 5 add n relu n INT+ 6", "tree": "(n mul (((((7 mod 7) add relu(-5)) sub (n add relu(n))) mul 6))**2)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 3 + 7 + 263 + 70 + 581 + 2440 + 1372 + 6636 + 7154 + 4154 + 4318 + 1 4935 + 9790 + 6090 + 2 5363 + 5 9521 + 2 8834 + 4 6364 + 13 7309 + 7 1642 + 3 4972 + 10 3666 + 36 7556 + 4 9201 + 28 8540 + 76 9928", "x2": "mod add mul x_0_2 abs INT+ 3 sqr relu x_0_2 add INT+ 6 add sqr sqr n x_0_3", "tree": "(((x_0_2 mul abs(3)) add (relu(x_0_2))**2) mod (6 add (((n)**2)**2 add x_0_3)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 7 + 1 + 1 + 8 + 4 + 4 - 8 + 0 + 7 + 43 + 47 + 55 + 55 + 15 + 11 - 9 - 1 + 46 + 86 + 92 + 108 + 63 - 17 - 27 - 63 - 10 + 83 + 113 + 83 + 152 + 34 - 76 - 56", "x2": "sub sub x_0_5 sub x_0_5 abs add abs mul INT- 9 INT- 6 x_0_9 abs x_0_4", "tree": "((x_0_5 sub (x_0_5 sub abs((abs((-9 mul -6)) add x_0_9)))) sub abs(x_0_4))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 7 + 7 - 4 - 8 + 4 + 7 + 7 - 4 - 8 + 4 + 7 + 7 - 4 - 8 + 4 + 7 + 7 - 4 - 8 + 4 + 7 + 7 - 4 - 8 + 4 + 7 + 7 - 4", "x2": "sub x_0_5 idiv idiv sign abs INT- 1 INT+ 9 INT- 1", "tree": "(x_0_5 sub ((sign(abs(-1)) idiv 9) idiv -1))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 5 - 2 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "idiv x_0_3 abs abs x_0_3", "tree": "(x_0_3 idiv abs(abs(x_0_3)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 0 + 4 - 8 + 10 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign sub idiv n x_0_4 sub INT- 9 sub x_0_5 n", "tree": "sign(((n idiv x_0_4) sub (-9 sub (x_0_5 sub n))))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 2 + 63 + 2280 + 10 2615 + 554 1228 + 3 4909 7385 + 251 3501 1744 + 2 359 3595 1291 + 183 2342 3561 6220 + 1 8140 1893 2600 5813 + 195 9140 4472 862 7840 + 2 2921 9432 3234 945 7319 + 288 8164 8472 7495 9162 2236 + 3 8990 2254 3821 1948 6900 1905 + 561 4592 4631 252 611 3627 4368 + 8 5903 2646 8546 8565 3538 4997 8355 + 1391 6328 8790 4590 7587 3236 9649 3564 + 23 7969 2238 3168 5019 7432 3521 39 9501 + 4283 4460 2897 330 3553 7823 3780 7191 240 + 80 9571 2994 7539 2437 1664 8618 4555 9103 5423 + 1 6029 5117 2961 2770 2558 9642 6454 2070 2501 3820 + 331 8108 9280 2984 3442 9705 6027 6020 8541 7786 809 + 7 1671 1528 4544 4618 3681 6410 1962 504 5024 1793 4816 + 1612 6009 3902 2503 9132 8369 2294 1461 3513 440 3533 3675 + 37 7348 6197 3126 5915 7083 8399 6830 1956 2052 3042 6808 28", "x2": "mul add n abs mul sub add n idiv mul mul abs INT- 3 x_0_2 n x_0_2 n x_0_1 INT+ 3", "tree": "((n add abs((((n add (((abs(-3) mul x_0_2) mul n) idiv x_0_2)) sub n) mul x_0_1))) mul 3)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 6 - 3 + 36 + 25 + 36 + 49 + 100 + 81 + 144 + 169 + 144 + 169 + 256 + 225 + 324 + 361 + 324 + 361 + 484 + 441 + 576 + 625 + 576 + 625 + 784 + 729", "x2": "abs sqr sub relu n mod x_0_3 INT- 3", "tree": "abs(((relu(n) sub (x_0_3 mod -3)))**2)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 2 - 5 - 3 + 4 + 74 + 79 + 95 + 97 + 125 + 218 + 248 + 291 + 322 + 381 + 507 + 572 + 652 + 722 + 822 + 991 + 1101 + 1228 + 1347 + 1498 + 1720 + 1885 + 2069 + 2247", "x2": "add sqr sub n idiv INT- 9 n x_0_5", "tree": "(((n sub (-9 idiv n)))**2 add x_0_5)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 - 1 + 0 + 3 + 10 + 4 + 1 - 12 + 40 + 16 + 4 + 48 + 160 + 64 - 16 - 192 + 640 + 256 + 64 + 768 + 2560 + 1024 - 256 - 3072 + 1 240 + 4096 + 1024 + 1 2288 + 4 960 + 1 6384 - 4096", "x2": "mul INT- 4 idiv x_0_4 mul sqr INT- 1 sign mod n mod abs INT+ 7 abs mod x_0_2 x_0_7", "tree": "(-4 mul (x_0_4 idiv ((-1)**2 mul sign((n mod (abs(7) mod abs((x_0_2 mod x_0_7))))))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 3 + 4 - 6 - 3 + 9 + 10 - 1 + 7 - 7 - 8 - 7 - 1 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0", "x2": "sub idiv add n x_0_11 mul n idiv INT+ 3 INT+ 2 sign relu sign add n n", "tree": "(((n add x_0_11) idiv (n mul (3 idiv 2))) sub sign(relu(sign((n add n)))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 6 + 7 + 14 + 35 + 62 + 113 + 194 + 329 + 548 + 895 + 1463 + 2380 + 3867 + 6273 + 1 168 + 1 6471 + 2 6671 + 4 3176 + 6 9883 + 11 3097 + 18 3020 + 29 6159 + 47 9223 + 77 5428 + 125 4699 + 203 177", "x2": "add add INT- 3 add abs add x_0_2 sub relu relu n sub mod INT+ 9 n INT+ 1 0 n x_0_1", "tree": "((-3 add (abs((x_0_2 add (relu(relu(n)) sub ((9 mod n) sub 10)))) add n)) add x_0_1)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 7 - 9 - 12 - 16 - 21 - 27 - 34 - 42 - 51 - 61 - 72 - 84 - 97 - 111 - 126 - 142 - 159 - 177 - 196 - 216 - 237 - 259 - 282 - 306 - 331", "x2": "sub x_0_1 relu abs n", "tree": "(x_0_1 sub relu(abs(n)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 8 + 5 + 7 - 8 - 5 - 10 - 2 + 0 - 12 - 31 - 20 - 18 - 37 - 36 - 43 - 37 - 37 - 51 - 72 - 63 - 63 - 84 - 85 - 94 - 90 - 92 - 108 - 131 - 124 - 126 - 149 - 152", "x2": "add sub mul INT- 2 n add sign abs mod sqr INT- 9 x_0_4 sub n x_0_9 relu n", "tree": "(((-2 mul n) sub (sign(abs(((-9)**2 mod x_0_4))) add (n sub x_0_9))) add relu(n))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 9 - 5 + 3 + 3 - 2 + 3 + 3 + 12 + 4 + 8 + 10 + 9 + 20 + 2 + 25 + 5 + 25 + 17 + 8 + 41 - 11 + 62 - 18 + 54 + 16 + 3 + 90 - 76 + 163", "x2": "sub sub x_0_5 INT- 7 sub x_0_1 mod INT- 3 n", "tree": "((x_0_5 sub -7) sub (x_0_1 sub (-3 mod n)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 + 4 - 6 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 9 - 2 - 10 + 3 + 4 + 2 + 1 + 4 + 3 + 5 + 6 + 3 + 4 + 2 + 1 + 4 + 3 + 5 + 6 + 3 + 4 + 2 + 1 + 4 + 3 + 5 + 6", "x2": "mod sub idiv mod INT+ 7 n sign mul INT+ 2 INT+ 1 0 x_0_4 n", "tree": "((((7 mod n) idiv sign((2 mul 10))) sub x_0_4) mod n)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 - 5 - 5 + 8 - 3 - 12 - 8 - 2 - 16 - 35 - 44 - 61 - 111 - 189 - 293 - 464 - 763 - 1244 - 2000 - 3226 - 5232 - 8475 - 1 3700 - 2 2157 - 3 5863 - 5 8037 - 9 3893 - 15 1912", "x2": "add INT+ 1 add x_0_3 add mul sign n x_0_4 x_0_1", "tree": "(1 add (x_0_3 add ((sign(n) mul x_0_4) add x_0_1)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 4 + 2 + 9920 + 2 4840 + 80 + 1 2640 + 1 560 + 3200 + 10 5600 + 42 2400 + 12 8000 + 79 6680 + 152 9600 + 107 0 + 40 9920 + 104 8880 + 80 9600 + 75 8280 + 355 5200 + 126 7040 + 222 480 + 788 4320 + 1086 8480 + 1069 4200 + 462 9120 + 958 6400", "x2": "mul mod x_0_3 sqr sqr n mul INT+ 4 INT+ 1 0", "tree": "((x_0_3 mod ((n)**2)**2) mul (4 mul 10))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 - 4 + 3 - 94 - 65 - 136 + 833 + 542 + 1251 - 8440 - 5531 - 1 2622 + 8 4287 + 5 5196 + 12 6105 - 84 2986 - 55 2077 - 126 1168 + 842 9741 + 552 650 + 1261 1559 - 8429 7532 - 5520 6623 - 1 2611 5714 + 8 4297 5195 + 5 5206 6104 + 12 6115 7013 - 84 2975 2078 - 55 2066 1169 - 126 1157 260 + 842 9752 649", "x2": "sub mul INT- 1 0 add INT+ 1 0 add mod x_0_3 sign relu INT+ 6 x_0_3 n", "tree": "((-10 mul (10 add ((x_0_3 mod sign(relu(6))) add x_0_3))) sub n)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 + 8 + 0 + 6 + 1 - 3 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1", "x2": "idiv sign mod sign mul x_0_5 mod x_0_4 INT- 2 x_0_4 add abs INT- 1 0 x_0_7", "tree": "(sign((sign((x_0_5 mul (x_0_4 mod -2))) mod x_0_4)) idiv (abs(-10) add x_0_7))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 9 - 10 - 32 + 7 + 16 + 174 - 56 - 62 - 68 + 542 + 664 + 798 - 92 - 98 - 104 + 1454 + 1648 + 1854 - 128 - 134 - 140 + 2798 + 3064 + 3342 - 164 - 170 - 176 + 4574 + 4912 + 5262", "x2": "add add sub INT- 7 mul mod INT+ 6 x_0_3 n abs relu INT- 6 INT- 1", "tree": "(((-7 sub ((6 mod x_0_3) mul n)) add abs(relu(-6))) add -1)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 5 + 10 - 12 + 28 - 30 + 54 - 56 + 88 - 90 + 130 - 132 + 180 - 182 + 238 - 240 + 304 - 306 + 378 - 380 + 460 - 462 + 550 - 552 + 648 - 650 + 754 - 756 + 868 - 870", "x2": "sub relu n mul mul sign x_0_1 add INT+ 2 abs n n", "tree": "(relu(n) sub ((sign(x_0_1) mul (2 add abs(n))) mul n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 - 4 + 6 + 10 + 5 + 9 - 2 + 4 - 5 + 7 8400 + 5929 + 7056 + 8281 + 9604 + 1 1025 + 11 2896 + 1 4161 + 1 5876 + 1 7689 + 1 9600 + 2 1609 + 2 3716 + 2 5921 + 2 8224 + 3 625 + 3 3124 + 3 5721 + 3 8416 + 4 1209 + 4 4100 + 4 7089 + 5 176 + 5 3361 + 5 6644 + 6 25 + 6 3504 + 6 7081", "x2": "relu sqr abs mul n mul INT- 7 mod abs idiv sub INT+ 6 n sqr x_0_9 INT+ 8", "tree": "relu((abs((n mul (-7 mul (abs(((6 sub n) idiv (x_0_9)**2)) mod 8)))))**2)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 5 - 4 - 6 - 40 - 36 - 240 - 216 - 1440 - 1296 - 8640 - 7776 - 5 1840 - 4 6656 - 31 1040 - 27 9936 - 186 6240 - 167 9616 - 1119 7440 - 1007 7696 - 6718 4640 - 6046 6176 - 4 310 7840 - 3 6279 7056 - 24 1864 7040 - 21 7678 2336 - 145 1188 2240 - 130 6069 4016 - 870 7129 3440 - 783 6416 4096 - 5224 2776 640 - 4701 8498 4576", "x2": "add idiv relu x_0_3 n sub INT- 8 add mul INT- 6 x_0_2 mul sign x_0_4 INT+ 8", "tree": "((relu(x_0_3) idiv n) add (-8 sub ((-6 mul x_0_2) add (sign(x_0_4) mul 8))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 9 + 3 - 7 + 1 + 10 - 1 - 2 - 10 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1", "x2": "sign add idiv mod n relu relu INT+ 5 n idiv abs n x_0_8", "tree": "sign((((n mod relu(relu(5))) idiv n) add (abs(n) idiv x_0_8)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 3 + 7 - 3 - 8 + 8 + 9 - 6 + 1 - 7 + 4 - 3 + 6 + 13 + 7 + 14 + 11 + 6 + 7 + 12 - 11 + 12 + 3 + 16 + 5 + 7 + 5 + 7 + 6 + 4 + 4 + 6 + 11 + 6 - 3 + 6 + 1 + 3 + 1 + 3 + 2", "x2": "add idiv sub INT- 1 sub n sign sub n x_0_4 x_0_12 INT+ 9", "tree": "(((-1 sub (n sub sign((n sub x_0_4)))) idiv x_0_12) add 9)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 3 + 0 - 9 + 10 - 6 + 9 - 6 - 9 + 6 + 3 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1", "x2": "mul sign x_0_10 sign abs n", "tree": "(sign(x_0_10) mul sign(abs(n)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 8 + 3 - 10 - 9 + 6 - 10 + 9 + 2 + 2 - 6 + 2 + 4 - 8 + 3 - 10 - 9 + 6 - 10 + 9 + 2 + 2 - 6 + 2 + 4 - 8 + 3 - 10 - 9 + 6 - 10 + 9 + 2 + 2 - 6 + 2 + 4 - 8 + 3 - 10", "x2": "sub x_0_12 mul idiv relu sign sign INT+ 4 n INT- 8", "tree": "(x_0_12 sub ((relu(sign(sign(4))) idiv n) mul -8))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9 + 0 - 4 - 6 - 9", "x2": "sub x_0_4 relu INT- 1 0", "tree": "(x_0_4 sub relu(-10))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 - 7 + 8 - 7 + 10 - 3 + 10 - 1 + 10 - 1 + 10 + 7 + 10 + 13 + 19 + 17 + 25 + 19 + 33 + 19 + 41 + 27 + 47 + 33 + 52 + 37 + 55 + 39 + 56 + 39 + 65", "x2": "sub x_0_2 mod mod n x_0_3 INT- 1 0", "tree": "(x_0_2 sub ((n mod x_0_3) mod -10))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 5 + 1 + 0 + 2 + 0 + 5 + 2 + 6 + 2 + 9 + 4 + 10 + 4 + 13 + 6 + 14 + 6 + 17 + 8 + 18 + 8 + 21 + 10 + 22 + 10 + 25 + 12 + 26 + 12 + 29", "x2": "mod abs add sub x_0_2 sqr n mod INT+ 5 n n", "tree": "(abs(((x_0_2 sub (n)**2) add (5 mod n))) mod n)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 9 - 8 + 8 + 45 + 48 + 56 + 360 + 432 + 560 + 3960 + 5184 + 7280 + 5 5440 + 7 7760 + 11 6480 + 94 2480 + 139 9680 + 221 3120 + 1884 9600 + 2939 3280 + 4868 8640 + 4 3354 800 + 7 543 8720 + 12 1721 6000 + 112 7206 800 + 190 4684 5440 + 340 8204 8000 + 3268 8976 3200 + 5714 536 3200 + 1 565 4348 8000", "x2": "abs abs mul x_0_3 n", "tree": "abs(abs((x_0_3 mul n)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 4 - 2 - 7 + 2 - 4 - 8 - 10 + 10 + 136 + 160 + 191 + 216 + 248 + 286 + 320 + 348 + 272 + 290 + 303 + 324 + 340 + 352 + 370 + 396 + 528 + 568 + 615 + 656 + 704 + 758 + 808 + 852 + 792 + 826 + 855 + 892", "x2": "add mul n add n abs INT- 6 mod n sub n add x_0_8 n", "tree": "((n mul (n add abs(-6))) add (n mod (n sub (x_0_8 add n))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 10 - 6 - 6 + 9 + 7 + 17 + 2 + 3 + 19 + 18 + 29 + 15 + 17 + 34 + 34 + 46 + 33 + 36 + 54 + 55 + 68 + 56 + 60 + 79 + 81 + 95 + 84 + 89 + 109 + 112 + 127 + 117", "x2": "add x_0_5 mul abs sqr INT+ 1 mul n sign INT+ 3", "tree": "(x_0_5 add (abs((1)**2) mul (n mul sign(3))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 10 + 0 + 7 - 5 + 6 + 14 + 3 + 15 + 24 + 14 + 27 + 37 + 28 + 42 + 53 + 45 + 60 + 72 + 65 + 81 + 94 + 88 + 105 + 119 + 114 + 132 + 147 + 143 + 162 + 178", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 + 7 - 10 + 6 - 11 + 5 - 12 + 4 - 13 + 3 - 14 + 2 - 15 + 1 - 16 + 0 - 17 - 1 - 18 - 2 - 19 - 3 - 20 - 4 - 21 - 5 - 22 - 6 - 23 - 7", "x2": "add x_0_2 idiv INT- 2 sub mul mod INT+ 7 INT+ 8 n INT+ 1", "tree": "(x_0_2 add (-2 idiv (((7 mod 8) mul n) sub 1)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 + 84 + 186 + 454 + 796 + 1364 + 2066 + 3054 + 4236 + 5764 + 7546 + 9734 + 1 2236 + 1 5204 + 1 8546 + 2 2414 + 2 6716 + 3 1604 + 3 6986 + 4 3014 + 4 9596 + 5 6884 + 6 4786 + 7 3454 + 8 2796 + 9 2964 + 10 3866 + 11 5654 + 12 8236", "x2": "relu sub mul n abs mul n mul mul n sign n INT+ 1 0 x_0_1", "tree": "relu(((n mul abs((n mul ((n mul sign(n)) mul 10)))) sub x_0_1))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 - 7 + 4 - 10 + 1 - 28 - 1 + 0 + 4 - 2 - 1 + 52 - 2 + 0 + 4 + 0 + 4 + 0 + 4 - 1 + 3 - 1 + 3 - 1 + 104 - 1 + 112 - 1 + 120 - 1 + 128 - 1", "x2": "idiv mul INT- 4 n sub mul add mod sign n INT+ 3 mul x_0_5 n x_0_1 n", "tree": "((-4 mul n) idiv ((((sign(n) mod 3) add (x_0_5 mul n)) mul x_0_1) sub n))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 1 - 1 + 10 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 4 + 5 + 8 + 10 + 14 + 17 + 22 + 26 + 32 + 37 + 44 + 50 + 58 + 65 + 74 + 82 + 92 + 101 + 112 + 122 + 134 + 145 + 158 + 170 + 184 + 197 + 212 + 226 + 242", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 4 + 0 - 4 + 4 + 8 + 14 + 20 + 14 + 12 + 8 + 4 + 12 + 16 + 22 + 28 + 22 + 20 + 16 + 12 + 20 + 24 + 30 + 36 + 30 + 28 + 24 + 20 + 28 + 32 + 38 + 44", "x2": "sub n sub x_0_4 n", "tree": "(n sub (x_0_4 sub n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 6 - 10 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3 - 2 - 2 - 3", "x2": "mod add x_0_3 sqr add mul INT- 2 n add mul sign n relu INT- 1 INT+ 6 INT- 4", "tree": "((x_0_3 add (((-2 mul n) add ((sign(n) mul relu(-1)) add 6)))**2) mod -4)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 8 + 4 + 10 - 4 + 12 + 22 + 20 + 28 + 20 + 34 + 46 + 46 + 56 + 50 + 66 + 80 + 82 + 94 + 90 + 108 + 124 + 128 + 142 + 140 + 160 + 178 + 184 + 200 + 200 + 222 + 242 + 250", "x2": "add n add n relu x_0_5", "tree": "(n add (n add relu(x_0_5)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 1 + 51 + 21 + 771 + 321 + 1 1571 + 4821 + 17 3571 + 7 2321 + 260 3571 + 108 4821 + 3905 3571 + 1627 2321 + 5 8580 3571 + 2 4408 4821 + 87 8705 3571 + 36 6127 2321 + 1318 580 3571 + 549 1908 4821 + 1 9770 8705 3571 + 8237 8627 2321 + 29 6563 580 3571 + 12 3567 9408 4821 + 444 8445 8705 3571 + 185 3519 1127 2321 + 6672 6688 580 3571 + 2780 2786 6908 4821 + 10 90 320 8705 3571 + 4 1704 1800 3627 2321", "x2": "add sub add INT+ 5 relu idiv n n x_0_2 mul mul INT+ 1 x_0_2 add sub sign INT- 4 INT- 7 INT+ 1 0", "tree": "(((5 add relu((n idiv n))) sub x_0_2) add ((1 mul x_0_2) mul ((sign(-4) sub -7) add 10)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 3 + 1 + 6 + 2 - 3 + 1 + 6 + 2 - 3 + 1 + 6 + 2 - 3 + 1 + 6 + 2 - 3 + 1 + 6 + 2 - 3 + 1 + 6 + 2 - 3 + 1 + 6 + 2 - 3", "x2": "sub sign add INT- 1 INT+ 8 sub x_0_2 INT+ 2", "tree": "(sign((-1 add 8)) sub (x_0_2 sub 2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 5 + 9 + 10 - 10 + 3 + 10 + 8 + 3 + 11 + 33 + 51 + 36 + 21 + 51 + 49 + 46 + 104 + 199 + 274 + 229 + 152 + 299 + 347 + 427 + 792 + 1222 + 1520 + 1442 + 1105 + 1920 + 2525 + 3355 + 5478 + 7550 + 8703 + 9128", "x2": "add abs add sub mul x_0_8 relu INT+ 5 INT- 1 x_0_6 INT- 3", "tree": "(abs((((x_0_8 mul relu(5)) sub -1) add x_0_6)) add -3)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 2 - 10 + 4 - 4 + 36 + 42 + 48 + 81 + 90 + 154 + 180 + 208 + 266 + 315 + 400 + 459 + 522 + 627 + 700 + 840 + 924 + 1035 + 1200 + 1325 + 1508 + 1647 + 1792 + 2030 + 2220 + 2449 + 2656 + 2871", "x2": "mul n add idiv x_0_5 n n", "tree": "(n mul ((x_0_5 idiv n) add n))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 8 + 0 + 5 - 3 + 6 - 6 + 7 - 4 + 4 - 3 + 4 - 3 + 3 - 4 + 3 - 3 + 4 - 3 + 2 - 4 + 1 - 2 + 4 - 1 + 2 - 4 + 1 - 2 + 4 - 1 + 2 - 4 + 1 - 2 + 4 - 1", "x2": "sub mod mul n relu sqr add add idiv x_0_6 sign sub n n x_0_9 INT- 4 x_0_3 x_0_3", "tree": "(((n mul relu(((((x_0_6 idiv sign((n sub n))) add x_0_9) add -4))**2)) mod x_0_3) sub x_0_3)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 0 + 7 + 16 + 27 + 40 + 55 + 0 + 13 + 28 + 45 + 64 + 85 + 0 + 19 + 40 + 63 + 88 + 115 + 0 + 25 + 52 + 81 + 112", "x2": "mul mod n INT+ 6 add sqr mod idiv n n sign INT- 4 n", "tree": "((n mod 6) mul ((((n idiv n) mod sign(-4)))**2 add n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 4 - 1 + 4 + 11 + 20 + 31 + 44 + 59 + 76 + 95 + 116 + 139 + 164 + 191 + 220 - 5 + 12 + 31 + 52 + 75 + 100 + 127 + 156 + 187 + 220 + 255 + 292 + 331", "x2": "add INT- 5 relu mul abs mod n abs sqr INT- 4 n", "tree": "(-5 add relu((abs((n mod abs((-4)**2))) mul n)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 5 - 5 + 16 + 81 + 121 + 169 + 225 + 289 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1225 + 1369 + 1521 + 1681 + 1849 + 2025 + 2209 + 2401 + 2601 + 2704 + 2916 + 3136 + 3364", "x2": "sqr add n relu mod abs add idiv sub mod x_0_3 x_0_3 n INT+ 9 n relu x_0_1", "tree": "((n add relu((abs(((((x_0_3 mod x_0_3) sub n) idiv 9) add n)) mod relu(x_0_1)))))**2", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 9 - 6 - 7 - 2 + 1 + 5 + 6 - 9 - 11 - 7 - 4 - 1 - 1 - 17 - 20 - 17 - 15 - 14 - 15 - 32 - 37 - 35 - 35 - 35 - 38 - 57 - 64 - 64 - 65 - 68 - 73 - 94 - 103", "x2": "add idiv sqr n mul INT+ 6 INT- 5 x_0_6", "tree": "(((n)**2 idiv (6 mul -5)) add x_0_6)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 3 + 7 + 2 + 1 + 4 + 6 + 7 + 9 + 9 + 10 + 11 + 12 + 13 + 14 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 23 + 24 + 25 + 26 + 27 + 28 + 29 + 30 + 31 + 31", "x2": "add idiv sub mod x_0_6 idiv n x_0_2 x_0_7 sub idiv INT- 6 sub INT- 6 x_0_1 INT- 8 n", "tree": "((((x_0_6 mod (n idiv x_0_2)) sub x_0_7) idiv ((-6 idiv (-6 sub x_0_1)) sub -8)) add n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 3 + 6 + 3 - 9 + 9 - 3 - 12 + 18 - 12 - 9 + 30 - 30 + 3 + 39 - 60 + 33 + 36 - 99 + 93 + 3 - 135 + 192 - 90 - 138 + 327 - 282 - 48 + 465 - 609 + 234 + 513 - 1074", "x2": "sub sub x_0_3 idiv sub add INT+ 8 relu x_0_1 sign abs n relu mul n n x_0_4", "tree": "((x_0_3 sub (((8 add relu(x_0_1)) sub sign(abs(n))) idiv relu((n mul n)))) sub x_0_4)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 + 4 - 1 + 2 + 5 + 3 + 2 + 1 + 6 + 9 + 12 + 10 + 9 + 8 + 13 + 16 + 19 + 17 + 26 + 25 + 30 + 33 + 36 + 34 + 43 + 42 + 47 + 50 + 63 + 61 + 70 + 69 + 74", "x2": "abs sub n sub mod n abs INT- 1 0 sub x_0_6 INT+ 3", "tree": "abs((n sub ((n mod abs(-10)) sub (x_0_6 sub 3))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 2 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12 + 14 + 13 + 15 + 14", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 7 + 6 - 1 - 2 + 1 - 6 - 7 + 2 + 1 - 2 + 7 + 6 - 3 + 0 + 3 - 8 - 5 + 4 - 1 - 2 + 9 + 4 - 5 + 2 + 1 - 10 - 3 + 6 - 3 + 0 + 11 + 2 - 7 + 4", "x2": "sub sub sign add x_0_5 mul x_0_6 n n sub x_0_5 n", "tree": "((sign((x_0_5 add (x_0_6 mul n))) sub n) sub (x_0_5 sub n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 8 - 5 + 5 - 3 + 9 + 0 - 10 - 5 - 10 - 6 + 56 + 35 - 35 + 21 - 63 + 0 + 70 + 35 + 70 + 42 - 392 - 245 + 245 - 147 + 441 + 0 - 490 - 245 - 490 - 294 + 2744 + 1715 - 1715 + 1029 - 3087 + 0 + 3430 + 1715", "x2": "mul x_0_10 sub INT+ 9 sub INT+ 9 INT- 7", "tree": "(x_0_10 mul (9 sub (9 sub -7)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 2 - 8 + 8 - 2 + 7 - 3 + 5 + 2 - 7 + 18 + 13 + 73 + 73 + 13 + 58 + 18 + 34 + 13 + 58 + 333 + 178 + 5338 + 5338 + 178 + 3373 + 333 + 1165 + 178 + 3373 + 11 898 + 3 1693 + 2849 4253 + 2849 4253 + 3 1693 + 1137 7138 + 11 898 + 135 7234", "x2": "add sqr x_0_10 INT+ 9", "tree": "((x_0_10)**2 add 9)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 1 + 6 + 1 + 10 + 1 + 14 + 1 + 18 + 1 + 22 + 1 + 26 + 1 + 30 + 1 + 34 + 1 + 38 + 1 + 42 + 1 + 46 + 1 + 50 + 1 + 54 + 1 + 58", "x2": "idiv relu add n n x_0_1", "tree": "(relu((n add n)) idiv x_0_1)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 + 7 + 9 - 2 + 8 - 7 + 2 + 10 - 2 - 54 + 0 - 39 - 51 + 11 - 65 + 6 - 3010 + 17 - 1571 - 2684 - 72 - 4324 - 5 - 906 6084 - 233 - 247 556 - 720 9202 - 4987 - 1870 5060 + 8 - 82 1938 9722 6330 - 5 4723 - 6 1036 5007 7000 - 51 9726 789 5129 - 2438 5998 - 349 8793 557 1845 - 911", "x2": "sub n abs sub sqr add x_0_7 sign sub mod x_0_2 INT+ 6 n idiv x_0_9 INT- 5", "tree": "(n sub abs((((x_0_7 add sign(((x_0_2 mod 6) sub n))))**2 sub (x_0_9 idiv -5))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 1 + 4 + 7 + 9 + 0 + 1 - 5 + 18 + 33 + 41 + 56 + 99 + 121 + 150 + 152 + 193 + 216 + 234 + 226 + 241 + 251 + 290 + 292 + 361 + 392 + 451 + 489 + 534 + 552 + 609 + 601 + 633 + 639 + 668", "x2": "add sign mod n x_0_5 sub sqr abs sub idiv sqr INT+ 7 n n x_0_7", "tree": "(sign((n mod x_0_5)) add ((abs((((7)**2 idiv n) sub n)))**2 sub x_0_7))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 4 - 10 + 2 - 2 - 8 + 4 + 0 - 6 + 6 + 2 - 4 + 8 + 4 - 2 + 10 + 6 + 0 + 12 + 8 + 2 + 14 + 10 + 4 + 16 + 12 + 6 + 18 + 14 + 8 + 20 + 16", "x2": "sub x_0_3 INT- 2", "tree": "(x_0_3 sub -2)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 9 + 7 - 8 - 72 - 648 - 1 368 - 9 3312 - 83 9808 - 755 8272 - 6802 4448 - 6 1222 32 - 55 998 288 - 495 8982 2592 - 4463 840 3328 - 4 167 7562 9952 - 36 1509 8066 9568 - 325 3588 2602 6112 - 2928 2294 3423 5008 - 2 6354 649 811 5072 - 23 7186 5841 7303 5648 - 213 4679 2575 5732 832 - 1921 2113 3180 1588 7488 - 1 7290 9019 8621 4298 7392 - 15 5618 1178 7592 8688 6528 - 140 563 608 8335 8197 8752 - 1260 5067 5479 5022 3780 8768 - 1 1344 5607 9315 5201 4027 8912 - 10 2101 471 3839 6812 6251 208 - 91 8909 4242 4557 1313 6259 1872 - 827 184 8182 1014 1822 6332 6848 - 7443 1663 3638 9127 6403 6994 1632", "x2": "mul x_0_1 relu sqr mod INT- 3 x_0_4", "tree": "(x_0_1 mul relu(((-3 mod x_0_4))**2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 - 8 + 2 + 5 - 4 + 1 + 4 - 3 + 3 + 3 + 7 + 8 + 6 + 2 + 5 + 13 - 4 + 1 + 14 + 14 + 3 + 7 + 19 + 8 + 5 + 17 + 6 + 11 + 22 + 19 + 7 + 4 + 26 + 26 - 7 + 9 + 19 + 20", "x2": "sub sub n relu mod sqr idiv add x_0_8 mod x_0_9 n x_0_10 n x_0_2", "tree": "((n sub relu(((((x_0_8 add (x_0_9 mod n)) idiv x_0_10))**2 mod n))) sub x_0_2)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 2 + 17 + 56 + 344 + 2378 + 1 9031 + 17 1248 + 171 2486 + 1883 7314 + 2 2604 7773 + 29 3862 1016 + 411 4069 4228 + 6171 1041 3386 + 9 8737 6661 4179 + 167 8540 3244 1008 + 3021 3725 8393 8146 + 5 7406 790 9482 4738 + 114 8121 5818 9649 4761 + 2411 553 2198 2638 9944 + 5 3043 2170 8361 8057 8768 + 121 9993 9929 2321 5331 1626 + 2927 9855 8301 5716 7947 9023 + 7 3199 6395 7539 2919 8697 5536 + 190 3190 6289 6021 5916 6136 3934 + 5138 6146 9819 2582 9748 5682 6178 + 14 3881 2115 4939 2323 2959 9113 2981 + 417 2555 1349 3237 7375 5837 4285 6408 + 1 2517 6654 479 7132 1267 5122 8569 2236 + 38 8047 6275 4871 1095 9292 8808 5645 9274", "x2": "sub mod mul INT+ 4 INT- 4 relu relu abs mul n add x_0_2 x_0_1 n", "tree": "(((4 mul -4) mod relu(relu(abs((n mul (x_0_2 add x_0_1)))))) sub n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 3 + 9 - 1 + 2 + 15 + 6 + 10 + 24 + 16 + 21 + 36 + 29 + 35 + 51 + 45 + 52 + 69 + 64 + 72 + 90 + 86 + 95 + 114 + 111 + 121 + 141 + 139 + 150 + 171 + 170", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 - 7 - 9 - 8 + 9 - 9 + 2 + 9 + 7 + 1 - 150 + 210 + 315 + 360 - 360 - 405 - 90 + 90 + 315 + 35 - 750 - 15 7500 + 33 750 + 56 7000 - 64 8000 + 72 9000 + 18 2250 - 4 500 + 14 1750 + 5 5125 - 13 1250 + 5 9062 5000 - 2604 6562 5000 + 9376 7625 0 - 1 8370 8000 0 - 2 3619 6000 0 + 6643 125 0 - 369 562 5000", "x2": "mul mul x_0_10 INT+ 5 x_0_11", "tree": "((x_0_10 mul 5) mul x_0_11)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 5 + 2 - 5 + 6 + 8 + 2 + 3 + 6 - 43 - 49 - 62 - 66 - 81 - 96 - 110 - 130 - 171 - 192 - 217 - 238 - 266 - 295 - 325 - 358 - 403 - 439 - 478 - 516 - 559 - 603 - 648 - 696 - 751 - 803 - 857 - 911", "x2": "idiv sub sub sqr n x_0_8 mod INT- 1 0 x_0_7 INT- 2", "tree": "((((n)**2 sub x_0_8) sub (-10 mod x_0_7)) idiv -2)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250 + 1352 + 1458 + 1568", "x2": "relu add sqr n sqr n", "tree": "relu(((n)**2 add (n)**2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3", "x2": "idiv mul add sign sub INT- 7 INT- 8 n INT+ 1 INT+ 9", "tree": "(((sign((-7 sub -8)) add n) mul 1) idiv 9)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 + 3 - 1 + 8 + 0 + 3 + 0 + 8 + 0 + 3 + 0 + 8 + 0 + 3 + 0 + 8 + 0 + 3 + 0 + 8 + 0 + 3 + 0 + 8 + 0 + 3 + 0 + 8 + 0 + 3 + 0 + 8", "x2": "relu relu x_0_4", "tree": "relu(relu(x_0_4))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 8 + 5 - 5 - 10 - 3 + 2 + 3 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1", "x2": "sign x_0_8", "tree": "sign(x_0_8)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 6 - 6", "x2": "sub relu mod n n abs idiv add abs n n INT+ 9", "tree": "(relu((n mod n)) sub abs(((abs(n) add n) idiv 9)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 8 + 9 + 7 - 5 - 1 - 8 + 5 + 3 + 8 + 9 + 7 + 5 + 1 + 8 + 5 + 3 + 8 + 9 + 7 + 5 + 1 + 8 + 5 + 3 + 8 + 9 + 7 + 5 + 1 + 8 + 5 + 3 + 8 + 9 + 7 + 5", "x2": "abs abs x_0_8", "tree": "abs(abs(x_0_8))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 6 + 6 + 4 - 7 - 10 + 10 - 10 + 0 - 5 - 3 + 34 + 32 + 34 + 34 + 25 + 24 + 46 + 28 + 40 + 37 + 41 + 80 + 80 + 84 + 86 + 79 + 80 + 104 + 88 + 102 + 101 + 107 + 148 + 150 + 156 + 160 + 155 + 158", "x2": "add x_0_11 add sub add n relu n n n", "tree": "(x_0_11 add (((n add relu(n)) sub n) add n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 7 - 6 + 4 + 9 + 2 + 3 + 8 + 7 + 2 + 4 + 14 + 11 + 1 + 4 + 29 + 16 + 12 + 3 + 8 + 23 + 15 + 1 + 9 + 47 + 18 + 21 + 10 + 8 + 21 + 25", "x2": "relu abs sub idiv n x_0_2 sub x_0_2 n", "tree": "relu(abs(((n idiv x_0_2) sub (x_0_2 sub n))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 + 9 - 1 - 2 - 5 - 2 - 2 - 1 - 5 - 1 - 1 - 1 - 5 - 5 - 1 - 5 - 1 - 1 - 1 - 5 - 5 - 1 - 5 - 1 - 1 - 1 - 5 - 5 - 1 - 5", "x2": "sub sub mod sqr idiv x_0_2 x_0_3 INT- 5 sub n relu n sqr sign n", "tree": "(((((x_0_2 idiv x_0_3))**2 mod -5) sub (n sub relu(n))) sub (sign(n))**2)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 3 - 7 + 7 + 3 + 1 - 5 + 6 + 7 - 7 + 13 + 21 - 98 + 161 + 9 + 165 - 115 + 1026 + 49 - 7238 + 754 + 210 - 7 4970 + 3 5742 + 117 + 589 9740 - 1 5180 + 60 5314 9656 + 833 - 43 8126 9734 412 + 64 2408 + 4200 - 481 6290 2130 + 1 5090 2724 + 2691 + 890 2869 7848 5520 - 4122 8880 + 5 3890 4031 7561 621 7087 2176", "x2": "mul x_0_10 add n mod add INT- 6 INT- 6 x_0_2", "tree": "(x_0_10 mul (n add ((-6 add -6) mod x_0_2)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 2 + 0 + 8 - 6 - 7 + 7 + 8 - 6 - 7 + 7 + 8 - 6 - 7 + 7 + 8 - 6 - 7 + 7 + 8 - 6 - 7 + 7 + 8 - 6 - 7 + 7 + 8 - 6 - 7 + 7 + 8 - 6", "x2": "sub sign mod idiv mod sign sub sub x_0_4 x_0_3 n INT- 1 add relu n n n x_0_2", "tree": "(sign((((sign(((x_0_4 sub x_0_3) sub n)) mod -1) idiv (relu(n) add n)) mod n)) sub x_0_2)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 2 - 672 + 192 + 19 7568 - 11 5200 - 2 33 3952 + 4423 6800 + 1202 37 1200 - 382 2059 5200 - 141 3556 3653 1200 + 58 7068 3422 7200 + 27 4795 3574 1665 2800 - 14 896 4021 4528 0 - 7 9800 5717 9379 5973 1200 + 4 8693 7965 8140 8768 0 + 3 2367 1119 1956 3646 6974 7200 - 2 2905 5619 1189 4684 4672 0 - 1 7478 2404 3656 4369 2166 3488 0 + 1 4073 1772 3866 8094 1366 4768 0 + 1 2122 9075 6680 1046 4886 5795 2768 0 - 1 943 3026 2078 8310 6 5723 5968 0 - 1 503 2871 1587 6426 6777 7325 278 1952 0 + 1 505 5705 1595 6777 6006 3094 6529 2800 0 + 1 1116 6790 8344 3609 9957 5520 8094 4417 9968 0 - 1 2203 2707 1133 5392 8608 9290 7488 4116 4800 0 - 1 4113 7357 6434 7 2506 1081 2196 7033 887 3728 0 + 1 6869 8014 3135 47 908 9835 5311 9802 6219 5200 0 + 2 1170 6036 4651 10 8759 1621 8295 549 6331 592 0 0 - 2 7369 5658 4222 2316 4002 7349 1658 1567 7738 5492 4800 0", "x2": "mul mul x_0_2 sqr add relu relu n abs mod INT- 8 idiv n idiv INT- 7 INT- 4 INT- 6", "tree": "((x_0_2 mul ((relu(relu(n)) add abs((-8 mod (n idiv (-7 idiv -4))))))**2) mul -6)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 + 1 + 1 + 3 - 20 - 5 - 5 - 15 - 35 - 25 - 30 - 45 - 20 - 15 + 0 - 15 - 70 - 15 + 0 - 25 - 70 - 35 + 0 - 115 - 25 - 85 + 0 - 125 - 20 - 25 + 0 - 15", "x2": "mul mod n sub INT- 5 n relu relu mod x_0_4 n", "tree": "((n mod (-5 sub n)) mul relu(relu((x_0_4 mod n))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 4 - 9 - 13 - 18 - 22 - 27 - 31 - 36 - 40 - 45 - 49 - 54 - 58 - 63 - 67 - 72 - 76 - 81 - 85 - 90 - 94 - 99 - 103 - 108 - 112 - 117 - 121 - 126 - 130", "x2": "add n sub x_0_2 add n add idiv INT- 9 sqr sqr x_0_1 abs add INT+ 1 0 relu x_0_2", "tree": "(n add (x_0_2 sub (n add ((-9 idiv ((x_0_1)**2)**2) add abs((10 add relu(x_0_2)))))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 - 8 - 10 - 10 - 10 - 12 - 12 - 12 - 14 - 14 - 14 - 16 - 16 - 16 - 18 - 18 - 18 - 20 - 20 - 20 - 22 - 22 - 22 - 24 - 24 - 24 - 26 - 26 - 26 - 28 - 28", "x2": "add add x_0_3 idiv x_0_1 abs mul n x_0_2 sign x_0_3", "tree": "((x_0_3 add (x_0_1 idiv abs((n mul x_0_2)))) add sign(x_0_3))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 12 + 66 + 390 + 2334 + 1 3998 + 8 3982 + 50 3886 + 302 3310 + 1813 9854 + 1 883 9118 + 6 5303 4702 + 39 1820 8206 + 235 924 9230 + 1410 5549 5374 + 8463 3297 2238 + 5 779 9783 3422 + 30 4679 8700 526 + 182 8079 2200 3150 + 1096 8475 3201 8894 + 6581 851 9211 3358 + 3 9486 5111 5268 142 + 23 6919 669 1608 846 + 142 1514 4014 9648 5070 + 852 9086 4089 7891 414 + 5117 4518 4538 7346 2478 + 3 704 7110 7232 4077 4862 + 18 4228 2664 3394 4464 9166 + 110 5369 5986 366 6789 4990", "x2": "mul INT+ 6 mod idiv sign idiv INT- 3 sqr idiv n n x_0_1 x_0_1", "tree": "(6 mul ((sign((-3 idiv ((n idiv n))**2)) idiv x_0_1) mod x_0_1))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 8 + 3 + 7 - 8 + 5 + 17 + 22 + 8 + 22 + 35 + 41 + 28 + 43 + 57 + 64 + 52 + 68 + 83 + 91 + 80 + 97 + 113 + 122 + 112 + 130 + 147 + 157 + 148 + 167 + 185 + 196 + 188", "x2": "add abs add relu n sub x_0_4 INT- 3 INT+ 5", "tree": "(abs((relu(n) add (x_0_4 sub -3))) add 5)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 75 + 136 + 197 + 258 + 336 + 397 + 456 + 513 + 603 + 660 + 715 + 768 + 871 + 924 + 975 + 1024 + 1139 + 1188 + 1235 + 1280 + 1407 + 1452 + 1495 + 1536 + 1675 + 1716 + 1755 + 1792", "x2": "add idiv INT+ 8 n mul sub sqr INT+ 8 mod n INT- 4 n", "tree": "((8 idiv n) add (((8)**2 sub (n mod -4)) mul n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9 - 1 + 1 - 9", "x2": "sub x_0_3 mul n mod mul n sub n n x_0_2", "tree": "(x_0_3 sub (n mul ((n mul (n sub n)) mod x_0_2)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 2 + 7 - 9 + 1 + 4 + 3 - 2 + 0 + 2 + 9 + 14 + 0 + 8 + 0 + 6 + 6 + 0 + 0 + 4 + 0 + 14 + 12 + 0 + 12 + 4 + 7 + 10 + 0 + 0 + 8 + 0 + 15 + 9 + 0 + 16 + 8 + 4 + 14", "x2": "relu sub x_0_11 add relu x_0_7 sub INT- 5 idiv sub sign abs x_0_8 x_0_3 add INT+ 8 INT+ 1 0", "tree": "relu((x_0_11 sub (relu(x_0_7) add (-5 sub ((sign(abs(x_0_8)) sub x_0_3) idiv (8 add 10))))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 3 + 7 + 1 - 9 + 10 + 10 - 10 + 0 + 0 + 24 + 1944 + 0 + 0 + 2400 + 0 + 0 + 1 3824 + 9069 9264 + 0 + 0 + 1 3824 0 + 0 + 0 + 45 8647 1424 + 19 7432 5557 6340 704 + 0 + 0 + 45 8647 1424 0 0 + 0 + 0 + 5 485 7282 9560 4610 6624 + 9355 1073 7806 4398 8500 3633 7968 2469 4784 + 0 + 0 + 5 485 7282 9560 4610 6624 0 0 0 0", "x2": "mul relu mul sub abs INT+ 3 abs x_0_2 sqr x_0_7 INT+ 8", "tree": "(relu(((abs(3) sub abs(x_0_2)) mul (x_0_7)**2)) mul 8)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 5 + 5 - 7 + 4 - 75 - 360 - 49 - 4800 - 2 2680 + 200 - 57 4024 - 257 3568 + 845 - 1 1254 5944 - 4 4989 4925 + 2048 - 325 2601 8264 - 1093 106 5308 + 3971 - 13 104 811 8400 - 33 8577 9573 8907 + 6776 - 6882 5058 9672 4208 - 1 2008 952 6940 512 + 1 625 - 465 2573 9861 9013 312 - 373 6554 6526 8100 8849 + 1 5680 - 39 1281 4722 3859 850 6992 + 1 9800 + 2 2103 - 4 67 2227 5723 1703 2718 7456", "x2": "mul sqr n add INT- 8 mod n sub add sqr INT- 2 x_0_3 x_0_4", "tree": "((n)**2 mul (-8 add (n mod (((-2)**2 add x_0_3) sub x_0_4))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 6 - 5 + 2 - 5 + 9 + 0 + 5 - 4 + 7 + 8 + 7 + 8 + 6 + 0 + 10 + 9 + 12 + 0 + 12 + 0 + 11 + 0 + 7 + 6 + 9 + 0 + 9 + 0 + 8 + 0 + 12 + 11 + 6 + 0 + 6 + 0", "x2": "mod mod x_0_8 INT- 8 add abs sign n mul INT+ 6 abs INT- 2", "tree": "((x_0_8 mod -8) mod (abs(sign(n)) add (6 mul abs(-2))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 4 - 6 + 1 + 2 + 2 + 5 + 16 + 36 + 1 + 4 + 4 + 25 + 256 + 1296 + 1 + 16 + 16 + 625 + 6 5536 + 167 9616 + 1 + 256 + 256 + 39 625 + 42 9496 7296 + 2 8211 990 7456 + 1 + 6 5536 + 6 5536 + 1525 8789 625 + 1844 6744 737 955 1616 + 7 9586 6110 9946 4008 8439 1936 + 1 + 42 9496 7296", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 6 - 9 - 5 + 7 - 2 - 2 + 8 + 8 + 12 + 10 - 5 + 13 + 23 + 3 + 19 + 24 + 22 + 52 + 35 + 34 + 87 + 78 + 87 + 139 + 134 + 194 + 267 + 254 + 365 + 486 + 524 + 717 + 877 + 1021 + 1395 + 1666", "x2": "add add add x_0_5 x_0_9 INT- 2 x_0_3", "tree": "(((x_0_5 add x_0_9) add -2) add x_0_3)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 6 - 10 + 1 + 3 + 1 + 5 + 3 + 9 - 10 + 7 - 7 + 9 + 12 - 5 + 10 - 9 + 8 - 1 + 13 + 22 + 2 + 17 - 17 + 12 + 12 + 8 + 33 - 10 + 25 - 18 + 27 + 35 + 11 + 50 - 29 + 36 - 6 + 36 + 69", "x2": "add add idiv sub x_0_5 relu x_0_4 x_0_3 x_0_7 x_0_12", "tree": "((((x_0_5 sub relu(x_0_4)) idiv x_0_3) add x_0_7) add x_0_12)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 3 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 10 - 11 - 11 - 11 - 12 - 12 - 12 - 13 - 12 - 14 - 12 - 15 - 13 - 15 - 14 - 15", "x2": "idiv mul INT+ 7 n x_0_1", "tree": "((7 mul n) idiv x_0_1)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 10 - 7 - 9 + 2 + 2 - 2 - 2 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1", "x2": "idiv x_0_4 sub n sign mul sign n relu mul abs INT+ 7 INT+ 1", "tree": "(x_0_4 idiv (n sub sign((sign(n) mul relu((abs(7) mul 1))))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 7 - 5 + 4 + 16 + 637 + 588 + 256 - 567 - 6 2700 - 11 5400 - 5 9048 + 16 7040 + 2119 7332 + 5193 6750 + 3024 768 - 9653 9294 - 137 3585 9472 - 336 5500 1688 - 218 3382 56 + 1158 4717 8000 + 18 1725 4211 562 + 53 4104 8771 5357 + 37 7288 4109 8240 - 217 2134 5870 3125 - 3 6853 9154 16 7008 - 10 8316 4690 8668 9240 - 8 2512 9754 8178 9644 + 51 886 548 6981 8208 + 9298 2428 5546 2143 6874 + 4 1636 8507 1692 3355 7724 + 3 3797 3147 5734 1051 2896", "x2": "mul sub x_0_4 n mul sqr add idiv n x_0_2 n idiv n INT- 1 0", "tree": "((x_0_4 sub n) mul ((((n idiv x_0_2) add n))**2 mul (n idiv -10)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 7 - 8 - 3 - 1 + 2 + 2 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 15 + 16 + 17 + 18 + 19 + 20 + 20 + 21 + 22 + 23 + 24 + 25 + 25", "x2": "add add idiv x_0_5 INT- 5 abs n INT- 3", "tree": "(((x_0_5 idiv -5) add abs(n)) add -3)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 4 + 0 - 3 - 7 - 5 + 4 + 10 - 12 - 12 - 19 - 16 - 21 - 21 - 16 - 30 - 30 - 25 - 33 - 38 - 25 - 33 - 44 - 31 - 30 - 28 - 39 - 45 - 41 - 48 - 57 - 56 - 60 - 39 - 56 - 66", "x2": "sub mod mul INT+ 3 mod sub x_0_6 x_0_7 sub abs x_0_1 sign n n mul INT+ 2 n", "tree": "(((3 mul ((x_0_6 sub x_0_7) mod (abs(x_0_1) sub sign(n)))) mod n) sub (2 mul n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 7 - 6 - 5 - 4", "x2": "mod abs n INT- 8", "tree": "(abs(n) mod -8)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 1 - 8 - 9 - 7 - 5 - 4 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 5 + 6 + 6 + 6 + 6 + 6 + 7", "x2": "idiv n sub INT+ 4 sign mod sub INT+ 1 mul x_0_2 x_0_7 sub INT- 6 abs INT+ 8", "tree": "(n idiv (4 sub sign(((1 sub (x_0_2 mul x_0_7)) mod (-6 sub abs(8))))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 5 + 2 - 8 - 8 - 9 - 8 - 8 - 9 - 10 - 11 - 12 - 15 - 15 - 15 - 20 - 20 - 18 - 19 - 20 - 25 - 22 - 25 - 24 - 25 - 30 - 27 - 28 - 29 - 30 - 35 - 32 - 35", "x2": "sub mod mod mul x_0_2 n x_0_5 INT- 5 n", "tree": "((((x_0_2 mul n) mod x_0_5) mod -5) sub n)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116 + 2304 + 2500 + 2704 + 2916 + 3136", "x2": "sqr relu add n n", "tree": "(relu((n add n)))**2", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 10 - 9 + 4 + 9 + 9 + 1 + 4 + 4 + 1 + 4 + 4 + 4 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 16 + 16 + 16 + 9 + 9 + 9 + 16 + 16 + 16 + 16", "x2": "sqr add idiv add add INT- 3 INT- 1 0 n x_0_3 relu mod INT+ 3 sqr n", "tree": "(((((-3 add -10) add n) idiv x_0_3) add relu((3 mod (n)**2))))**2", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 99 + 1596 + 8091 + 2 5584 + 6 2475 + 12 9564 + 24 51 + 40 9536 + 65 6019 + 99 9900 + 146 3979 + 207 3456 + 285 5931 + 384 1404 + 506 2275 + 655 3344 + 835 1811 + 1049 7276 + 1303 1739 + 1599 9600 + 1944 7659 + 2342 5116 + 2798 3571 + 3317 7024 + 3906 1875 + 4569 6924 + 5314 3371 + 6146 4816", "x2": "mul n sub mul sqr mul INT+ 1 0 n n n", "tree": "(n mul ((((10 mul n))**2 mul n) sub n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 1 - 82 - 5 - 126 - 12 - 202 - 22 - 300 - 35 - 420 - 51 - 562 - 70 - 725 - 92 - 909 - 117 - 1115 - 145 - 1343 - 176 - 1592 - 210 - 1862 - 247 - 2153 - 287 - 2466", "x2": "sub mod INT+ 2 idiv sqr sqr n x_0_1 INT+ 3", "tree": "((2 mod (((n)**2)**2 idiv x_0_1)) sub 3)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 3 - 5 + 3 + 0 - 5 - 2 - 2 - 7 - 9 - 11 - 18 - 27 - 38 - 56 - 83 - 121 - 177 - 260 - 381 - 558 - 818 - 1199 - 1757 - 2575 - 3774 - 5531 - 8106 - 1 1880 - 1 7411 - 2 5517", "x2": "idiv add x_0_1 x_0_3 sign sub sqr abs INT+ 7 n", "tree": "((x_0_1 add x_0_3) idiv sign(((abs(7))**2 sub n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8 + 2 + 2 + 8", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 3 + 6 + 8 - 6 + 4 + 3 + 6 + 1 + 0 - 1 + 0 - 1 - 1 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 - 5 + 0 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 0 - 4 + 0 + 0 + 0", "x2": "idiv mul sub sign add x_0_5 INT+ 8 abs n x_0_5 sub add mul x_0_7 sqr INT+ 4 n INT- 2", "tree": "(((sign((x_0_5 add 8)) sub abs(n)) mul x_0_5) idiv (((x_0_7 mul (4)**2) add n) sub -2))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 4 + 6 + 12 + 2 - 4 + 6 + 12 + 2 - 4 + 6 + 12 + 2 - 4 + 6 + 12 + 2 - 4 + 6 + 12 + 2 - 4 + 6 + 12 + 2 - 4 + 6 + 12 + 2 - 4", "x2": "sub relu add idiv INT- 5 INT+ 6 sign n sub mul abs sign x_0_2 x_0_2 INT+ 8", "tree": "(relu(((-5 idiv 6) add sign(n))) sub ((abs(sign(x_0_2)) mul x_0_2) sub 8))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0 + 0", "x2": "mod idiv sign mul n add INT- 1 0 mod sqr add abs sign INT- 9 INT+ 4 n n INT+ 2", "tree": "((sign((n mul (-10 add (((abs(sign(-9)) add 4))**2 mod n)))) idiv n) mod 2)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 3 - 2 - 2 + 4 + 11 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359 + 398 + 439 + 482 + 527 + 574 + 623 + 674 + 727 + 782 + 839 + 898", "x2": "add idiv mul sub add relu mul n n n sign add x_0_1 INT- 1 0 mod n x_0_1 n n", "tree": "(((((relu((n mul n)) add n) sub sign((x_0_1 add -10))) mul (n mod x_0_1)) idiv n) add n)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 7 - 10 - 9 - 4662 - 178 7527 - 10 1353 3486 - 8108 2679 6007 - 882 9903 8592 8548 - 127 1506 1583 1114 8007 - 23 6372 9950 1845 8289 5494 - 5 5594 9284 4741 2035 9441 359 - 1 6261 5165 7345 767 3924 9130 2982 - 5828 1275 4038 462 8406 759 8434 4583 - 2526 4932 8885 7398 3347 4389 5589 8573 3802 - 1309 7341 2097 2495 7076 3837 3873 2154 6733 631 - 803 7838 3005 800 3084 9879 6781 9411 421 3448 2988 - 578 7243 5764 772 4739 4820 7616 2428 3250 4555 5851 1207 - 484 9131 3926 9320 2046 4793 6775 7145 5126 5681 8662 2893 418", "x2": "sub mul mul sqr add INT+ 2 n add x_0_4 x_0_1 n INT+ 7", "tree": "(((((2 add n))**2 mul (x_0_4 add x_0_1)) mul n) sub 7)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 3 - 10 + 11 - 16 - 103 + 20 - 233 - 1828 + 29 - 5094 - 4 3837 + 38 - 14 2591 - 131 5066 + 47 - 484 8044 - 4734 2323", "x2": "sub mul n mod INT+ 3 mul INT+ 2 x_0_3 sqr INT- 1", "tree": "((n mul (3 mod (2 mul x_0_3))) sub (-1)**2)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 5 + 10 + 60 + 45 + 86 + 487 + 368 + 697 + 3906 + 2955 + 5588 + 3 1261 + 2 3654 + 4 4719 + 25 104 + 18 9249 + 35 7770", "x2": "add n mul mod relu x_0_3 mul sqr n abs sub INT+ 3 add INT+ 1 x_0_1 INT+ 8", "tree": "(n add ((relu(x_0_3) mod ((n)**2 mul abs((3 sub (1 add x_0_1))))) mul 8))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 7 - 6 - 5 - 4 - 7 - 6 - 11 - 10 - 9 - 17 - 16 - 15 - 14 - 27 - 26", "x2": "add sub mod n x_0_1 n sign add abs mod mod n idiv x_0_1 n sqr n n", "tree": "(((n mod x_0_1) sub n) add sign((abs(((n mod (x_0_1 idiv n)) mod (n)**2)) add n)))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 1 + 8 + 13 + 9 + 18 + 18 + 25 + 13 + 58 + 18 + 18 + 45 + 34 + 18 + 25 + 13 + 73", "x2": "add sqr mod x_0_2 n INT+ 9", "tree": "(((x_0_2 mod n))**2 add 9)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 2 - 6 - 17 - 34 - 56 - 86 - 123 - 89 - 127 - 96 - 139 - 115 - 167 - 154 - 219 - 221", "x2": "mod INT+ 7 sub x_0_2 mul sign mul relu n sqr n sub sqr mod n INT+ 9 INT- 1 0", "tree": "(7 mod (x_0_2 sub (sign((relu(n) mul (n)**2)) mul (((n mod 9))**2 sub -10))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 10 - 1 + 7 - 1 + 0 - 9 + 3 + 6 + 4 + 10 + 5 + 5 + 6 + 4 + 2 + 4 - 10 + 4 + 4 + 4 + 5 + 5", "x2": "add INT+ 7 idiv n sub add x_0_7 abs INT- 6 n", "tree": "(7 add (n idiv ((x_0_7 add abs(-6)) sub n)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 7 + 10 - 1 - 6 - 2 - 10 - 3 + 6 + 144 + 171 + 196 + 225 + 256 + 289 + 324 + 362 + 409 + 451 + 495 + 541 + 589 + 639 + 691", "x2": "add idiv add x_0_8 n n sqr add relu abs n INT+ 3", "tree": "(((x_0_8 add n) idiv n) add ((relu(abs(n)) add 3))**2)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 8 - 9 + 9 - 1 - 3 - 3 + 16 + 7 + 6 + 7 + 27 + 19 + 19 + 21 + 42 + 35 + 36 + 39 + 61", "x2": "add x_0_4 n", "tree": "(x_0_4 add n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226", "x2": "add sqr abs n sign sign INT+ 1 0", "tree": "((abs(n))**2 add sign(sign(10)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 + 10 + 6 + 0 - 2 - 7 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign x_0_6", "tree": "sign(x_0_6)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 10 + 8 + 6 + 4 + 4 + 1 + 6 + 4 + 4 + 1 + 6 + 4 + 4 + 1 + 6 + 4 + 4 + 1", "x2": "mod x_0_4 relu n", "tree": "(x_0_4 mod relu(n))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 9 + 2 + 3 + 2 - 5 - 3 - 7 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1", "x2": "mul sign sqr x_0_5 sign x_0_8", "tree": "(sign((x_0_5)**2) mul sign(x_0_8))", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 3 - 24 - 81 - 192 - 375 - 648 - 1029 - 1536 - 2187 - 3000 - 3993 - 5184 - 6591 - 8232 - 1 125", "x2": "mul INT- 3 mul sqr n n", "tree": "(-3 mul ((n)**2 mul n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 8 - 9 - 5 + 3 + 6 + 6 + 9 - 9 + 5 + 83 + 128 - 113 + 79 + 1263 + 2070 - 1898 + 1449 + 2 4007 + 4 1425 - 3 9754 + 3 2028 + 55 2071 + 99 4303 - 99 2562", "x2": "add mul n add sign relu INT- 4 x_0_4 x_0_10", "tree": "((n mul (sign(relu(-4)) add x_0_4)) add x_0_10)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 1 - 9 + 11 + 12 + 0 + 14 + 15 + 0 + 17 + 18 + 0 + 20 + 21 + 0 + 23 + 24 + 0", "x2": "mod sub n INT- 8 add n sub sqr sub x_0_1 x_0_2 abs n", "tree": "((n sub -8) mod (n add (((x_0_1 sub x_0_2))**2 sub abs(n))))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 1 - 6 - 12 - 20 - 29 - 41 - 55 - 71 - 89 - 109 - 131 - 155 - 181 - 209 - 239", "x2": "mod n sub abs idiv idiv idiv x_0_1 n INT- 4 x_0_1 sqr n", "tree": "(n mod (abs((((x_0_1 idiv n) idiv -4) idiv x_0_1)) sub (n)**2))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 1 + 7 - 8 + 6 + 4 - 4 + 1 + 0 + 100 + 0 + 144 + 169 + 0 + 0 + 4096 + 0 + 0 + 147 8656 + 0 + 0 + 4042 4164 0 + 0", "x2": "abs sqr mul n sqr idiv x_0_6 add add mul n x_0_8 n INT+ 2", "tree": "abs(((n mul ((x_0_6 idiv (((n mul x_0_8) add n) add 2)))**2))**2)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 7 - 48 - 104 - 336 - 784 - 2640 - 6224 - 2 1072 - 4 9744 - 16 8528 - 39 7904 - 134 8176 - 318 3184 - 1078 5360 - 2546 5424 - 8628 2832", "x2": "mul sub INT- 7 relu relu sign INT+ 1 0 abs add abs relu INT+ 6 x_0_2", "tree": "((-7 sub relu(relu(sign(10)))) mul abs((abs(relu(6)) add x_0_2)))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 3 - 7 - 10 + 3 + 7 + 3 + 6 + 2 + 8 + 3 + 7 + 3 + 6 + 2 + 8 + 3 + 7 + 3 + 6 + 2", "x2": "abs mod x_0_6 INT+ 9", "tree": "abs((x_0_6 mod 9))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 5 + 1 + 0 + 8 - 3 - 7 + 1 - 5 - 1 - 6 - 12 - 14 - 4 + 8 - 11 - 9 - 5 - 6 + 4 + 1 - 15 - 29 + 0 + 10 - 13", "x2": "add sub sub INT- 1 INT+ 6 x_0_8 x_0_10", "tree": "(((-1 sub 6) sub x_0_8) add x_0_10)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 8 - 9 + 10 + 8 + 3 + 20 + 29 + 45 + 17 + 65 + 56 + 110 + 126 + 84 + 166 + 35 + 131 + 17 + 228", "x2": "mod add sub n mul n x_0_1 add x_0_4 INT+ 5 sqr n", "tree": "(((n sub (n mul x_0_1)) add (x_0_4 add 5)) mod (n)**2)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 3 + 2 - 4 - 8 - 14 - 18 - 24 - 28 - 34 - 38 - 44 - 48 - 54 - 58 - 64 - 68 - 74", "x2": "add sub mod idiv sub abs n add idiv n x_0_1 n INT+ 7 sub INT+ 3 INT- 7 add INT+ 9 INT+ 1 x_0_2", "tree": "(((((abs(n) sub ((n idiv x_0_1) add n)) idiv 7) mod (3 sub -7)) sub (9 add 1)) add x_0_2)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 4 - 1 + 7 - 25 + 186 + 19 - 418 + 1305 - 1 94 - 1081 + 2 2512 - 7 535 + 54 5006 + 5 8299 - 121 5728 + 380 8805 - 2943 414 - 314 8241", "x2": "sub mul mul mul INT+ 6 idiv INT- 4 n abs INT+ 9 x_0_4 mul n abs INT+ 5", "tree": "((((6 mul (-4 idiv n)) mul abs(9)) mul x_0_4) sub (n mul abs(5)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 2 + 8 + 8 + 10 + 4 + 7 + 2 + 8 + 8 + 10 + 4 + 7 + 2 + 8 + 8 + 10 + 4 + 7 + 2 + 8", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 4 - 2 - 8 + 8 - 3 - 11 - 10 - 17 - 2 - 14 - 23 - 23 - 31 - 17 - 30 - 40 - 41 - 50 - 37", "x2": "sub x_0_5 n", "tree": "(x_0_5 sub n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 5 - 1 + 10 - 4 - 5 + 5 + 2 - 3 + 0 + 6 + 1 + 6 + 2 + 6 + 3 + 7 + 3 + 8 + 3 + 9 + 3 + 10 + 3", "x2": "mod abs sub idiv sub n idiv n INT- 8 sub INT+ 3 idiv n n x_0_1 sub add INT+ 7 INT+ 1 0 x_0_9", "tree": "(abs((((n sub (n idiv -8)) idiv (3 sub (n idiv n))) sub x_0_1)) mod ((7 add 10) sub x_0_9))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 3 - 7 + 8 - 2 - 4 + 9 - 9 + 8 + 29 + 24 + 29 + 31 + 26 + 29 + 35 + 36 + 36 + 58 + 54 + 60 + 63 + 59 + 63", "x2": "add n abs sub INT- 1 0 abs relu abs x_0_9", "tree": "(n add abs((-10 sub abs(relu(abs(x_0_9))))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 6 - 1 - 8 - 22 - 26 - 44 - 71 - 90 - 125 - 171 - 211 - 269 - 340 - 407 - 494 - 596 - 696 - 818", "x2": "sub x_0_3 sqr n", "tree": "(x_0_3 sub (n)**2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 6 + 2 + 7 + 3 + 8 + 4 + 9 + 5 + 10 + 6 + 11 + 7 + 12 + 8 + 13 + 9", "x2": "add x_0_2 mod mul INT- 2 INT+ 7 INT+ 5", "tree": "(x_0_2 add ((-2 mul 7) mod 5))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 - 8 + 2 + 2 + 2 + 0 + 5 + 2 + 6 + 2 + 5 + 0 + 2 + 10 + 12 + 4 + 5", "x2": "mod mod abs add add INT+ 9 x_0_2 idiv n n mul n n n", "tree": "((abs(((9 add x_0_2) add (n idiv n))) mod (n mul n)) mod n)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 1 - 1 - 10 + 1 + 10 - 8 - 8 - 10 + 8 + 2 + 2 + 2 + 2 - 1183 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 - 1679 3230 + 2", "x2": "mod INT+ 2 mul n add idiv sub INT+ 6 sqr x_0_9 x_0_10 n", "tree": "(2 mod (n mul (((6 sub (x_0_9)**2) idiv x_0_10) add n)))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 5 + 0 - 6 - 2 - 6 + 11 + 3 + 9 + 4 + 9 + 6 + 24 + 17 + 24 + 20 + 26 + 24 + 43 + 37 + 45", "x2": "add x_0_6 n", "tree": "(x_0_6 add n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 + 6 - 6 - 1 + 8 + 0 + 13 + 9 + 1 + 10 - 2 + 3 + 12 + 4 + 17 + 13 + 5 + 14 + 2", "x2": "sub n x_0_4", "tree": "(n sub x_0_4)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 6 - 36 - 54 - 324 - 486 - 2916 - 4374 - 2 6244 - 3 9366 - 23 6196 - 35 4294 - 212 5764 - 318 8646 - 1913 1876 - 2869 7814 - 1 7218 6884", "x2": "sub abs mul abs n idiv INT+ 9 INT+ 1 0 abs mul x_0_2 sqr INT+ 3", "tree": "(abs((abs(n) mul (9 idiv 10))) sub abs((x_0_2 mul (3)**2)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 1 + 2 + 3 + 5 + 6 + 8 + 9 + 11 + 12 + 14 + 15 + 17 + 18 + 20 + 21", "x2": "add sub idiv x_0_1 INT+ 3 sign mul n relu INT+ 6 n", "tree": "(((x_0_1 idiv 3) sub sign((n mul relu(6)))) add n)", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 4 + 4 + 36 + 20 + 24 + 252 + 160 + 216 + 2520 + 1760 + 2592 + 3 2760 + 2 4640 + 3 8880 + 52 4160 + 41 8880 + 69 9840", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 + 5 + 4 + 10 + 9 + 10 - 5 + 15 + 13 + 20 + 4 + 25 + 8 + 35 + 17 + 45 + 12 + 60 + 25 + 80 + 29", "x2": "add x_0_6 x_0_4", "tree": "(x_0_6 add x_0_4)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 4 + 2 - 4 + 8 + 10 + 15 + 44 - 2 + 12 - 64 - 370 + 135 - 220 - 142 + 4524 + 8192 - 8 3990 + 2 115 + 99 3740 + 116 2270", "x2": "mul sub INT+ 7 x_0_4 x_0_6", "tree": "((7 sub x_0_4) mul x_0_6)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 2 - 4 - 6 - 5 - 4 - 6 - 5 - 4 - 6 - 5 - 4 - 6 - 5 - 4 - 6 - 5", "x2": "add INT- 6 mod sub x_0_1 sign mul INT- 8 mul add n INT+ 1 sqr n INT+ 3", "tree": "(-6 add ((x_0_1 sub sign((-8 mul ((n add 1) mul (n)**2)))) mod 3))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 5 + 3 + 4 + 0 + 2 + 3 + 0 + 0 + 2 + 3 + 0 + 0 + 2 + 3 + 0 + 0", "x2": "abs relu mod n sqr add INT- 2 x_0_2", "tree": "abs(relu((n mod ((-2 add x_0_2))**2)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 7 + 2 + 0 - 2 - 4 - 5 - 8 - 13 - 21 - 19 - 31 - 34 - 39 - 46 - 56 - 56 - 70 - 75 - 82 - 91 - 103", "x2": "sub x_0_4 sub n mod sub sub sub x_0_3 mod x_0_6 sign sub x_0_7 x_0_5 INT+ 5 n x_0_1", "tree": "(x_0_4 sub (n sub ((((x_0_3 sub (x_0_6 mod sign((x_0_7 sub x_0_5)))) sub 5) sub n) mod x_0_1)))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14 + 9", "x2": "add n sub abs INT- 7 x_0_1", "tree": "(n add (abs(-7) sub x_0_1))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 9 - 1 - 6 + 3 + 10 - 10 + 16 + 81 + 10 + 66 + 36 + 130 + 140 + 240 + 1296 + 170 + 1188 + 684 + 2600 + 2940 + 5280", "x2": "add relu relu idiv mod mul x_0_4 abs INT- 9 INT- 7 INT+ 3 mul n relu abs x_0_7", "tree": "(relu(relu((((x_0_4 mul abs(-9)) mod -7) idiv 3))) add (n mul relu(abs(x_0_7))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 2 - 2 + 5 + 1 + 1 + 1 - 34 - 6 - 6 - 6 + 1 + 1 + 1 + 1 - 6 - 6 - 6 - 6 + 1", "x2": "add mul INT+ 7 sub sub idiv n n n sub add INT- 9 sub relu x_0_4 INT- 1 0 n INT+ 1", "tree": "((7 mul (((n idiv n) sub n) sub ((-9 add (relu(x_0_4) sub -10)) sub n))) add 1)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 6 - 2 + 3 - 5 - 10 + 5 + 9 + 3951 + 1700 + 11 - 36 + 156 + 4004 + 1650 + 8816 + 23 8839 1064 + 5 7221 9676 + 2 9526 + 38 8400 + 868 7511 + 67 138 2204 + 13 1496 6971", "x2": "mul sub abs mul x_0_8 mul sub add n n relu sqr mod INT+ 5 INT+ 1 0 x_0_8 n n", "tree": "((abs((x_0_8 mul (((n add n) sub relu(((5 mod 10))**2)) mul x_0_8))) sub n) mul n)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 5 - 9 - 4 + 3 - 5 - 9 - 4 + 3 - 5 - 9 - 4 + 3 - 5 - 9 - 4 + 3 - 5 - 9 - 4", "x2": "mul mul idiv n n sign n x_0_4", "tree": "(((n idiv n) mul sign(n)) mul x_0_4)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225", "x2": "sub relu idiv n INT- 2 sqr n", "tree": "(relu((n idiv -2)) sub (n)**2)", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 225 + 400 + 625 + 900 + 1225 + 1600 + 2025 + 2500 + 3025 + 3600 + 4225 + 4900 + 5625 + 6400 + 7225", "x2": "sqr add INT+ 1 0 add mod mul add n sub INT+ 4 n n sqr mul n INT+ 9 n", "tree": "((10 add ((((n add (4 sub n)) mul n) mod ((n mul 9))**2) add n)))**2", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 2 + 5 - 5 + 8 - 5 + 10 - 6 + 13 - 7 + 16 - 9 + 19 - 10 + 22 - 11 + 25 - 12", "x2": "add idiv n INT- 1 0 sub idiv idiv mul x_0_2 abs n x_0_2 x_0_2 sub x_0_1 abs n", "tree": "((n idiv -10) add ((((x_0_2 mul abs(n)) idiv x_0_2) idiv x_0_2) sub (x_0_1 sub abs(n))))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 1 + 8 + 10 - 7 + 69 - 682 + 6830 - 6 8307 + 68 3139 - 683 2072 + 6832 7550 - 6 8334 3807 + 68 3412 1209 - 683 4804 4162 + 6835 4876 9170 - 6 8361 7103 5507 + 68 3685 4447 6279 - 683 7537 9280 6952 + 6838 2214 7683 8690", "x2": "add x_0_4 mul INT- 1 0 x_0_1", "tree": "(x_0_4 add (-10 mul x_0_1))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 - 5 - 8 + 3 - 9 - 9 + 0 + 3 - 4 - 6 + 9 + 0 + 12 + 9 + 7 + 19 + 8 + 9 + 19 + 23 + 17 + 16 + 32 + 24 + 37 + 35 + 34", "x2": "add mod x_0_8 sign sub sqr n INT- 1 0 abs add x_0_12 n", "tree": "((x_0_8 mod sign(((n)**2 sub -10))) add abs((x_0_12 add n)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 5 + 4 - 5 - 4 - 1 - 3 - 7 - 6 - 5 - 5 - 7 - 12 - 11 - 9 - 5 - 9 - 16 - 14", "x2": "sub n sub n sub abs mod x_0_3 sub relu x_0_3 x_0_2 n", "tree": "(n sub (n sub (abs((x_0_3 mod (relu(x_0_3) sub x_0_2))) sub n)))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 2 + 4 + 5 + 7 + 8 + 10 + 11 + 13 + 14 + 16 + 17 + 19 + 20 + 22 + 23 + 25", "x2": "sub n idiv x_0_2 INT- 3", "tree": "(n sub (x_0_2 idiv -3))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 6 - 9 + 21 + 36 - 45 + 84 + 108 - 135 + 252 + 216 - 270 + 504 + 432 - 540 + 504 + 432 - 540", "x2": "mul idiv idiv mul INT- 1 0 INT- 3 n idiv INT- 1 INT- 1 x_0_3", "tree": "((((-10 mul -3) idiv n) idiv (-1 idiv -1)) mul x_0_3)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 - 7 + 9 - 2 - 3 - 4 - 4 + 3 + 0 - 1 - 8 - 2 + 5 + 1 + 2 - 11 - 1 + 6 + 4 + 4 - 13 - 3 + 6", "x2": "add sub x_0_5 sub n n add idiv x_0_8 idiv INT- 4 INT+ 2 sign idiv x_0_6 x_0_7", "tree": "((x_0_5 sub (n sub n)) add ((x_0_8 idiv (-4 idiv 2)) add sign((x_0_6 idiv x_0_7))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 6 - 4 - 8 + 7 + 1 - 2 - 2 - 2 + 0 + 0 - 2 - 2 - 2 + 0 + 0 - 2 - 2 - 2 + 0 + 0", "x2": "mul idiv add sign x_0_5 sign sub x_0_1 INT+ 8 abs sign INT- 2 INT+ 1", "tree": "(((sign(x_0_5) add sign((x_0_1 sub 8))) idiv abs(sign(-2))) mul 1)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 2 - 7 - 13 - 23 - 47 - 62 - 79 - 98 - 141 - 167 - 194 - 223 - 287 - 322 - 358", "x2": "add idiv mod add n INT- 4 INT+ 6 INT+ 5 sub INT+ 2 sqr sub n idiv n INT- 4", "tree": "((((n add -4) mod 6) idiv 5) add (2 sub ((n sub (n idiv -4)))**2))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 31 + 20 + 11 + 4 - 1 - 4 - 5 - 4 - 1 + 4 + 11 + 20 + 31 + 44 + 59", "x2": "add sqr abs idiv sub sub sub INT- 2 INT- 1 0 INT+ 1 n INT- 1 INT- 5", "tree": "((abs(((((-2 sub -10) sub 1) sub n) idiv -1)))**2 add -5)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 5 + 3 - 5 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign idiv mod INT+ 1 0 n x_0_4", "tree": "sign(((10 mod n) idiv x_0_4))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 7 + 17 + 15 + 25 + 23 + 33 + 31 + 41 + 39 + 49 + 47 + 57 + 55 + 65 + 63 + 73", "x2": "add add add sign n sign n x_0_2 add INT+ 5 mod sqr INT+ 7 INT+ 6", "tree": "(((sign(n) add sign(n)) add x_0_2) add (5 add ((7)**2 mod 6)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 7 - 10 - 8 - 6 - 10 + 5 + 0 + 2 - 1 - 7 - 10 - 8 - 6 - 10 + 5 + 0 + 2 - 1 - 7 - 10 - 8 - 6 - 10 + 5", "x2": "add relu mul n INT- 1 x_0_9", "tree": "(relu((n mul -1)) add x_0_9)", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 1 - 7 + 9 + 8 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign mul abs sub mul x_0_2 mul n mul n relu INT+ 4 add n INT- 6 x_0_5", "tree": "sign((abs(((x_0_2 mul (n mul (n mul relu(4)))) sub (n add -6))) mul x_0_5))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 - 1 - 1 - 10 - 1 + 9 + 0 - 15 + 4 + 3 + 20 + 1 + 0 + 0 + 75 - 16 - 9 - 40 - 1 + 0 + 0", "x2": "mul mod mod n idiv INT- 7 sign INT+ 9 INT- 8 x_0_7", "tree": "(((n mod (-7 idiv sign(9))) mod -8) mul x_0_7)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 10 - 3 - 10 - 5 - 6 - 5 - 10 - 3 - 2 - 1 - 2 - 3 - 8 - 5 - 6 - 5 - 10", "x2": "sub sign idiv INT+ 3 idiv x_0_1 x_0_2 mod sqr n INT+ 1 0", "tree": "(sign((3 idiv (x_0_1 idiv x_0_2))) sub ((n)**2 mod 10))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 9 + 5 - 10 - 10 + 10 + 2 + 10 + 5 + 0 + 0 + 2 + 2 + 2 + 1 + 2 + 1 + 2 + 0 + 0 + 2 + 2 + 2 + 1", "x2": "mod mul mod sqr mul x_0_9 sign relu sub n INT+ 8 INT+ 8 mul x_0_9 INT- 2 INT+ 3", "tree": "(((((x_0_9 mul sign(relu((n sub 8)))))**2 mod 8) mul (x_0_9 mul -2)) mod 3)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 4 + 1 + 0 + 9 + 4 + 1 + 0 + 9 + 4 + 1 + 0 + 9 + 4 + 1", "x2": "sqr mod n INT- 4", "tree": "((n mod -4))**2", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 9 + 10 + 4 - 6 + 10 - 8 + 10 + 2 - 8 - 20 - 34 - 50 - 68 - 88 - 110", "x2": "add sub INT+ 1 0 mul mod INT- 1 n mod add n x_0_1 n relu relu INT- 6", "tree": "((10 sub ((-1 mod n) mul ((n add x_0_1) mod n))) add relu(relu(-6)))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 1 - 9 - 1 + 0 + 5 - 6 + 12 + 6 + 20 + 15 + 58 + 86 - 50 - 110 - 285 - 896 - 5040 + 4384 - 5354 - 3 1025 - 25 4424", "x2": "add add sub sign x_0_5 sign sub INT+ 7 relu x_0_2 sub n mul add x_0_6 INT+ 1 x_0_5 n", "tree": "(((sign(x_0_5) sub sign((7 sub relu(x_0_2)))) add (n sub ((x_0_6 add 1) mul x_0_5))) add n)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 4 + 36 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr sub n idiv sqr add INT- 6 n abs sqr mod x_0_2 x_0_1", "tree": "((n sub (((-6 add n))**2 idiv abs(((x_0_2 mod x_0_1))**2))))**2", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2", "x2": "idiv n mod INT+ 6 INT+ 1 0", "tree": "(n idiv (6 mod 10))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375", "x2": "mul n sqr n", "tree": "(n mul (n)**2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 + 2 + 9 - 5 + 7 + 1 + 14 + 18 + 33 + 35 + 45 + 61 + 76 + 108 + 126 + 169 + 204 + 263 + 331 + 409", "x2": "add add abs n mod x_0_5 add x_0_1 INT- 3 x_0_2", "tree": "((abs(n) add (x_0_5 mod (x_0_1 add -3))) add x_0_2)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 9 - 8 + 4 + 1 + 1 - 2 + 3 + 19 + 21 - 12 + 7 + 1 + 1 - 3 + 4 + 35 + 37 - 13", "x2": "idiv add n sub n sign mul x_0_1 INT- 1 x_0_4", "tree": "((n add (n sub sign((x_0_1 mul -1)))) idiv x_0_4)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 8 + 5 + 1 - 2 - 6 + 8 + 7 + 6 + 4 - 9 + 12 + 14 + 14 + 15 + 17 + 18 + 18 + 19 + 20 + 21 + 23 + 23 + 24 + 25 + 26", "x2": "add abs idiv idiv x_0_11 mod INT- 4 n n n", "tree": "(abs(((x_0_11 idiv (-4 mod n)) idiv n)) add n)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 2 + 0 + 8 + 5 + 4 - 7 + 7 - 3 + 1296 + 2401 + 625 + 2401 + 1 0 + 6561 + 1 0 + 1296 + 4096 + 625 + 1296 + 1296 + 1296 + 6561 + 4096", "x2": "sqr sqr add INT+ 5 mod x_0_9 INT+ 6", "tree": "(((5 add (x_0_9 mod 6)))**2)**2", "n_input_points": "15", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 10 + 1 - 9 + 6 + 8 - 10 + 0 + 100 + 50 - 45 - 270 + 240 - 400 + 0 + 0 + 2 5000 - 1 1250 + 6 750 - 32 4000 - 48 0 + 0 + 0", "x2": "mul mul mod INT+ 5 sqr add mod INT+ 6 INT- 7 INT- 6 x_0_7 idiv x_0_8 sign relu INT+ 9", "tree": "(((5 mod (((6 mod -7) add -6))**2) mul x_0_7) mul (x_0_8 idiv sign(relu(9))))", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 6 + 42 + 63 - 84 + 105 + 126 - 147 + 168 + 189 - 210 + 231 + 252 - 273 + 294 + 315 - 336", "x2": "mul INT- 7 mul mul sign mod x_0_1 mul INT- 7 abs INT- 9 INT+ 3 n", "tree": "(-7 mul ((sign((x_0_1 mod (-7 mul abs(-9)))) mul 3) mul n))", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 4 + 6 + 3 - 1 + 9 - 4 - 10 - 14 - 13 - 11 - 23 - 12 - 8 - 6 - 9 - 13 - 3 - 16 - 22 - 26", "x2": "sub sub INT+ 1 0 n add x_0_6 n", "tree": "((10 sub n) sub (x_0_6 add n))", "n_input_points": "15", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210", "x2": "mul sub sqr n n sqr idiv INT+ 2 sub INT- 2 sign INT+ 3", "tree": "(((n)**2 sub n) mul ((2 idiv (-2 sub sign(3))))**2)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 6 + 1 + 1 - 2 + 8 + 8 - 4 + 1 + 1 - 2 + 8 + 8 - 4 + 1 + 1 - 2 + 8", "x2": "idiv INT+ 8 x_0_3", "tree": "(8 idiv x_0_3)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 1 + 1 - 2 - 2 - 2 - 3 - 2 - 2 - 2 - 3 - 2 - 4 - 2 - 3 - 2 - 3", "x2": "add INT- 2 mod n x_0_2", "tree": "(-2 add (n mod x_0_2))", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 48 - 45 - 40 - 33 - 24 - 13 + 0 + 15 + 32 + 51 + 72 + 95 + 120 + 147 + 176", "x2": "sub sqr relu n sub add sqr INT- 7 n n", "tree": "((relu(n))**2 sub (((-7)**2 add n) sub n))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 7 - 8 + 8 + 4 - 10 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1", "x2": "sign add x_0_6 sub x_0_2 mul x_0_3 sign INT+ 3", "tree": "sign((x_0_6 add (x_0_2 sub (x_0_3 mul sign(3)))))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 8 + 6 + 10 + 9 + 16 + 24 + 24 + 30 + 36 + 64 + 96 + 96 + 120 + 144 + 256 + 384 + 384 + 480 + 576", "x2": "idiv abs mul add idiv n x_0_4 INT- 4 x_0_5 sqr sign mod sqr INT- 1 n", "tree": "(abs((((n idiv x_0_4) add -4) mul x_0_5)) idiv (sign(((-1)**2 mod n)))**2)", "n_input_points": "15", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 5 + 6 + 7 + 1 + 1 - 9 + 16 - 17 + 16 + 17 + 144 + 169 - 22 + 14 - 16 + 18 + 19 + 2 + 2 - 21 + 34", "x2": "idiv sqr n x_0_7", "tree": "((n)**2 idiv x_0_7)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 1 - 12 - 2 + 12 + 0 + 12 + 0 + 36 + 0 + 180 + 0 + 1260 + 0 + 1 1340 + 0 + 12 4740", "x2": "mul add n INT- 6 x_0_2", "tree": "((n add -6) mul x_0_2)", "n_input_points": "15", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 + 6 + 6 + 2 - 27 + 66 + 78 + 30 - 459 + 1254 + 1638 + 690 - 1 1475 + 3 3858 + 4 7502 + 2 1390 - 37 8675 + 118 5030 + 175 7574", "x2": "mul add n add n sign sub INT+ 3 n x_0_4", "tree": "((n add (n add sign((3 sub n)))) mul x_0_4)", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 19 + 26 + 35 + 46 + 59 + 74 + 91 + 110 + 131 + 154 + 179 + 206 + 235 + 266 + 299", "x2": "abs add sqr sub INT- 2 n mul INT+ 1 0 INT+ 1", "tree": "abs((((-2 sub n))**2 add (10 mul 1)))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 7 + 2 + 9 + 0 + 9 - 42 - 14 + 18 + 0 + 0 - 378 + 588 - 252 + 0 + 0 + 0 - 22 2264 - 14 8176 + 0 + 0", "x2": "mul x_0_6 x_0_5", "tree": "(x_0_6 mul x_0_5)", "n_input_points": "15", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 7 + 4 + 9 + 8 - 7 + 8 + 18 + 16 - 14 + 16 + 36 + 32 - 28 + 31 + 72 + 64 - 56 + 61 + 144 + 127", "x2": "add mul idiv x_0_6 n mod abs n INT- 2 mul INT+ 2 x_0_4", "tree": "(((x_0_6 idiv n) mul (abs(n) mod -2)) add (2 mul x_0_4))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 1 - 3 - 4 + 1 - 1 - 5 + 11 + 4 + 1 + 1 + 7 + 6 + 3 + 20 + 14 + 12 + 13 + 20 + 20 + 18 + 36", "x2": "add x_0_7 mod INT- 6 relu mod relu n sqr INT+ 1 0", "tree": "(x_0_7 add (-6 mod relu((relu(n) mod (10)**2))))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 8 - 9 + 7 + 9 - 8 + 8 + 10 - 7 + 9 + 11 - 6 + 10 + 12 - 5 + 11 + 13 - 4", "x2": "add relu sqr sign sub idiv idiv n INT+ 7 INT- 7 abs INT+ 4 x_0_3", "tree": "(relu((sign((((n idiv 7) idiv -7) sub abs(4))))**2) add x_0_3)", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 1 - 2 - 9 - 7 - 10 + 5 - 1 - 10 - 41 - 12 - 136 + 5 - 143 - 1350 - 343 - 3061 - 18 3938 - 1341 - 62 1656 - 2 4831 7636", "x2": "mod mul INT- 5 INT- 1 add mul x_0_6 abs x_0_3 x_0_2", "tree": "((-5 mul -1) mod ((x_0_6 mul abs(x_0_3)) add x_0_2))", "n_input_points": "15", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 6 - 6 + 1 - 9 - 2 + 6 + 1 - 6 + 2 + 3 + 7 + 0 + 2 + 4 + 7 + 0 + 8 + 5 + 7 + 2 + 11 + 12 + 7 + 4 + 15", "x2": "add x_0_4 relu sub x_0_11 idiv mul INT+ 3 relu mul n idiv sign x_0_9 sqr INT- 9 INT+ 6", "tree": "(x_0_4 add relu((x_0_11 sub ((3 mul relu((n mul (sign(x_0_9) idiv (-9)**2)))) idiv 6))))", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 2 + 8 + 18 + 52 + 70 + 90 + 112 + 136 + 162 + 190 + 220 + 252 + 286 + 322 + 360 + 400 + 442", "x2": "relu mul sub relu add n mod INT+ 6 x_0_2 INT- 3 relu relu n", "tree": "relu(((relu((n add (6 mod x_0_2))) sub -3) mul relu(relu(n))))", "n_input_points": "15", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 + 7 - 4 + 7 - 37 - 52 - 64 - 81 - 102 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400", "x2": "sub sub add n idiv n x_0_3 add sign x_0_5 n sqr n", "tree": "(((n add (n idiv x_0_3)) sub (sign(x_0_5) add n)) sub (n)**2)", "n_input_points": "15", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 40 + 0 - 120 - 320 - 600 - 960 - 1400 - 1920 - 2520 - 3200 - 3960 - 4800 - 5720 - 6720", "x2": "mul INT+ 1 0 sub INT+ 4 sqr sub n sub INT+ 4 abs n", "tree": "(10 mul (4 sub ((n sub (4 sub abs(n))))**2))", "n_input_points": "15", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 7 + 1 - 1 - 9 + 6 + 7 + 1 + 6 - 9 - 8 - 10 - 9 + 4 + 1 + 1 + 1 + 1 + 4 + 1 + 1 + 1 + 4 + 0 + 1 + 1 + 1 + 1", "x2": "mod sqr abs mul x_0_12 mul sub mod n n sign INT- 8 sqr sign x_0_4 INT+ 5", "tree": "((abs((x_0_12 mul (((n mod n) sub sign(-8)) mul (sign(x_0_4))**2))))**2 mod 5)", "n_input_points": "15", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "- 9 - 6 - 3 + 7 + 12 + 13 + 13 + 12 + 12 + 11 + 11 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 9", "x2": "sub idiv x_0_1 idiv n add x_0_3 sub relu INT+ 2 x_0_3 INT- 9", "tree": "((x_0_1 idiv (n idiv (x_0_3 add (relu(2) sub x_0_3)))) sub -9)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "abs relu sqr sub n sign sqr n", "tree": "abs(relu(((n sub sign((n)**2)))**2))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 5 + 7 - 2 - 10 - 3 + 6 + 0 - 8 - 1 + 8 + 2 - 6 + 1 + 10 + 4 - 4 + 3 + 12 + 6 - 2 + 5", "x2": "sub relu sub n x_0_2 mul abs INT+ 1 INT+ 1 0", "tree": "(relu((n sub x_0_2)) sub (abs(1) mul 10))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 5 + 3 - 3 + 10 - 8 - 40 + 24 - 24 + 80 - 64 - 320 + 192 - 192 + 640 - 512 - 2560 + 1536 - 1536 + 5120 - 4096 - 2 480 + 1 2288 - 1 2288 + 4 960", "x2": "mul x_0_5 INT+ 8", "tree": "(x_0_5 mul 8)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 + 4 + 3 - 2 + 9 + 9 + 5 + 17 + 18 + 15 + 28 + 30 + 28 + 42 + 45 + 44 + 59 + 63 + 63 + 79 + 84 + 85", "x2": "add x_0_3 n", "tree": "(x_0_3 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 - 10 + 9 + 2 - 10 - 10 + 3 - 16 - 21 - 3 - 11 - 24 - 25 - 13 - 33 - 39 - 22 - 31 - 45 - 47 - 36 - 57 - 64 - 48 - 58 - 73", "x2": "add x_0_7 sub sub sub sign n sqr sign sqr abs INT+ 4 n idiv INT+ 6 INT+ 3", "tree": "(x_0_7 add (((sign(n) sub (sign((abs(4))**2))**2) sub n) sub (6 idiv 3)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 1 - 2 + 1 - 5 + 102 + 432 + 114 - 240 + 126 - 660 + 1 4076 + 6 2208 + 1 7100 - 3 7440 + 2 412 - 11 880 + 244 9224 + 1119 7440 + 318 600 - 718 8480 + 404 1576 - 2261 9520 + 5 1433 7040", "x2": "mul mul x_0_6 INT+ 6 add INT+ 1 0 n", "tree": "((x_0_6 mul 6) mul (10 add n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 1 - 10 - 6 + 8 + 9 - 4 + 22 - 41 - 41 + 22 - 185 + 166 + 49 - 113 + 1219 - 1148 - 392 - 572 - 3902 + 5179 - 1 742 + 4864 + 8671 - 4 3781 + 1 8634", "x2": "sub mul add relu add x_0_6 INT- 8 mod abs x_0_2 x_0_4 INT- 9 INT+ 5", "tree": "(((relu((x_0_6 add -8)) add (abs(x_0_2) mod x_0_4)) mul -9) sub 5)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 - 6 - 7 + 10 - 1 - 8 - 14 - 5 - 7 - 16 - 31 - 37 - 45 - 62 - 94 - 132 - 178 - 241 - 336 - 469 - 648 - 890 - 1227", "x2": "add add x_0_1 sign x_0_3 x_0_4", "tree": "((x_0_1 add sign(x_0_3)) add x_0_4)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 2 - 21 - 56 - 90 - 120 - 126 - 192 - 171 - 220 - 330 - 336 - 481 - 504 - 690 - 512 - 714 - 648 - 836 - 960 - 1365", "x2": "mul n add mod add abs x_0_2 sqr INT+ 4 sub INT- 4 n mul n sub INT- 6 INT- 4", "tree": "(n mul (((abs(x_0_2) add (4)**2) mod (-4 sub n)) add (n mul (-6 sub -4))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 + 2 + 2 + 3 + 4 + 4 + 5 + 6 + 6 + 7 + 8 + 8 + 9 + 10 + 10 + 11 + 12 + 12", "x2": "add n idiv abs n INT- 3", "tree": "(n add (abs(n) idiv -3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 5 + 10 - 8 + 60 - 50 + 100 - 80 + 600 - 500 + 1000 - 800 + 6000 - 5000 + 1 0 - 8000 + 6 0 - 5 0 + 10 0 - 8 0 + 60 0 - 50 0 + 100 0", "x2": "mul x_0_4 INT+ 1 0", "tree": "(x_0_4 mul 10)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 2 + 6 - 8 + 9 + 12 + 6 + 22 + 7 + 6 + 14 + 0 + 17 + 20 + 14 + 30 + 15 + 14 + 22 + 8 + 25 + 28 + 22 + 38", "x2": "add n sub n x_0_4", "tree": "(n add (n sub x_0_4))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 3 - 3 - 5 + 7 - 6 + 15 + 17 + 13 + 30 - 1 + 12 - 3 - 20 + 17 - 11 + 37 + 43 + 23 + 70 - 13 + 11 - 15 - 66 + 39", "x2": "sub add mul add sqr sign INT- 6 x_0_6 INT- 1 n sub x_0_4 n", "tree": "(((((sign(-6))**2 add x_0_6) mul -1) add n) sub (x_0_4 sub n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 6 - 7 + 6 + 6 + 8 - 6 - 119 - 1152 - 1 1598 - 12 7688 - 153 2412 - 1992 1641 - 2 7890 4308 - 41 8357 6312 - 669 3734 7775 - 1 1379 3643 3264 - 20 4828 7559 3013 - 389 1749 1363 9488 - 7783 5024 3644 4831 - 16 3453 6178 2378 5341 - 359 5980 7258 7613 4918 - 8270 7577 1110 8934 8859 - 19 8498 2238 7031 2157 9394 - 496 2456 3730 5976 33 7275 - 1 2902 3882 59 9805 1891 5659", "x2": "sub add sub x_0_5 x_0_7 mod mod add x_0_2 idiv mod INT- 1 n INT- 7 INT- 8 n mul sub n x_0_1 n", "tree": "(((x_0_5 sub x_0_7) add (((x_0_2 add ((-1 mod n) idiv -7)) mod -8) mod n)) sub ((n sub x_0_1) mul n))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 1 - 10 + 3 + 4 - 6 - 7 - 4 + 39 + 28 + 33 - 264 - 78 - 98 + 2060 + 624 + 476 - 1 5918 - 5016 - 1560 + 12 5382 + 5080 + 4224 - 99 2344 - 2 7294 - 5616 + 790 2368", "x2": "mod mul x_0_7 n mul INT- 8 add x_0_3 idiv x_0_8 INT+ 7", "tree": "((x_0_7 mul n) mod (-8 mul (x_0_3 add (x_0_8 idiv 7))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 5 - 8 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 5 - 5 - 3 - 10 - 9 - 17 - 17 - 26 - 27 - 37 - 39 - 50 - 53 - 65 - 69 - 82 - 87 - 101 - 107 - 122 - 129 - 145", "x2": "sub add x_0_2 relu add mod x_0_2 x_0_4 x_0_1 n", "tree": "((x_0_2 add relu(((x_0_2 mod x_0_4) add x_0_1))) sub n)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 4 - 5 + 10 + 8 + 7 - 2 + 2 + 2 - 4 - 1 + 16 + 25 + 100 + 64 + 49 + 4 + 4 + 4 + 16 + 1 + 256 + 625 + 1 0 + 4096 + 2401 + 16 + 16 + 16 + 256", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 4 - 1 - 10 - 6 + 800 + 240 + 2800 + 1920 - 28 8000 - 9 6000 - 123 2000 - 92 1600 + 1 4976 0 + 5376 0 + 7 3920 0 + 5 8982 4000 - 1018 3680 0 - 387 720 0 - 5617 9200 0 - 4718 5920 0 + 85 5429 1200 0 + 34 623 3600 0 + 516 8486 4000 0", "x2": "mul mul INT- 5 add n mul INT+ 7 n x_0_4", "tree": "((-5 mul (n add (7 mul n))) mul x_0_4)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 - 10 - 9 - 4 + 5 + 18 + 35 + 56 + 81 + 110 + 143 + 180 + 221 + 266 + 315 + 368 + 425 + 486 + 551", "x2": "mul add sub n INT+ 9 mul n INT+ 1 n", "tree": "(((n sub 9) add (n mul 1)) mul n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 + 8 - 10 + 6 + 4 - 2 + 3 + 10 + 5 - 4 - 2 - 11 + 88 - 110 + 66 + 44 - 22 + 33 + 110 + 55 - 44 - 22 - 121 + 968 - 1210 + 726 + 484 - 242 + 363 + 1210", "x2": "mul x_0_11 sub sign relu mod abs mod n x_0_4 INT- 8 INT- 1 0", "tree": "(x_0_11 mul (sign(relu((abs((n mod x_0_4)) mod -8))) sub -10))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 3 + 9 + 3 + 5 + 42 + 44 + 52 + 48 + 52 + 91 + 97 + 105 + 103 + 109 + 150 + 158 + 170 + 168 + 176 + 219 + 229 + 243 + 245", "x2": "sub add add sign mod n INT- 6 abs add n sub sqr INT- 5 INT- 1 n sub INT- 2 x_0_5", "tree": "(((sign((n mod -6)) add abs((n add ((-5)**2 sub -1)))) add n) sub (-2 sub x_0_5))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 10 - 19 - 37 - 73 - 145 - 289 - 577 - 1153 - 2305 - 4609 - 9217 - 1 8433 - 3 6865 - 7 3729 - 14 7457 - 29 4913 - 58 9825 - 117 9649 - 235 9297 - 471 8593", "x2": "add mod sign n x_0_1 x_0_1", "tree": "((sign(n) mod x_0_1) add x_0_1)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 6 - 8 + 2 - 10 - 8 + 2 + 4 - 8 - 4 + 8 - 7 - 9 + 1 - 11 - 9 + 1 + 3 - 9 - 5 + 7 - 8 - 10 + 0 - 12 - 10 + 0 + 2 - 10", "x2": "sub x_0_10 sign mul INT+ 1 0 sqr mod INT- 4 n", "tree": "(x_0_10 sub sign((10 mul ((-4 mod n))**2)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 10 + 10 + 0 + 10 + 0 + 0 + 10 + 0 + 0 + 10 + 0 + 0 + 10 + 0 + 0 + 10 + 0 + 0 + 10 + 0 + 0", "x2": "sub x_0_3 relu mul mod sub x_0_2 sign INT- 1 0 x_0_1 relu x_0_3", "tree": "(x_0_3 sub relu((((x_0_2 sub sign(-10)) mod x_0_1) mul relu(x_0_3))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 5 + 1 + 5 - 1 - 5 + 1 + 5 - 1 - 5 + 1 + 5 - 1 - 5 + 1 + 5 - 1 - 5 + 1 + 5 - 1 - 5", "x2": "sub relu n add x_0_2 n", "tree": "(relu(n) sub (x_0_2 add n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 7 + 3 - 10 + 4 - 13 - 3 - 16 - 2 - 19 - 9 - 22 - 8 - 25 - 15 - 28 - 14 - 31 - 21 - 34 - 20 - 37 - 27", "x2": "sub x_0_4 INT+ 6", "tree": "(x_0_4 sub 6)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 4 + 6 + 8 + 5 + 7 + 9 + 11 + 13 + 10 + 12 + 14 + 16 + 18 + 15 + 17 + 19 + 21 + 23 + 20", "x2": "add add idiv sub n n n mod n mul INT- 5 sign add INT- 9 sign x_0_1 n", "tree": "((((n sub n) idiv n) add (n mod (-5 mul sign((-9 add sign(x_0_1)))))) add n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 5 - 1 - 8 - 7 - 9 + 6 + 6 + 7 - 9 - 4 + 33 + 21 + 27 + 22 + 25 + 25 + 42 + 44 + 47 + 33 + 40 + 79 + 69 + 77 + 74 + 79 + 81 + 100 + 104", "x2": "add x_0_11 add n n", "tree": "(x_0_11 add (n add n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 4 + 12 + 21 + 31 + 42 + 54 + 67 + 81 + 96 + 112 + 129 + 147 + 166 + 186 + 207 + 229 + 252 + 276 + 301 + 327", "x2": "add INT+ 6 add x_0_1 abs n", "tree": "(6 add (x_0_1 add abs(n)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 + 6 - 1 - 1 - 14 + 0 + 2 - 5 - 5 - 18 - 4 - 2 - 9 - 9 - 22 - 8 - 6 - 13 - 13 - 26 - 12 - 10 - 17", "x2": "add mul relu sign INT+ 5 INT- 4 x_0_5", "tree": "((relu(sign(5)) mul -4) add x_0_5)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 6 - 3 - 4 - 6 + 5 - 7 + 1 - 8 + 144 + 1 + 100 + 1 + 1 + 1 + 1 + 1 + 1 8496 + 1 + 8464 + 1 + 1 + 1 + 1 + 1 + 3 4180 6144 + 1 + 7150 3936", "x2": "sqr idiv mod sign sub x_0_3 sign n sub sub mod n n x_0_8 INT- 7 INT- 1", "tree": "(((sign((x_0_3 sub sign(n))) mod (((n mod n) sub x_0_8) sub -7)) idiv -1))**2", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 9 - 2 - 2 + 6 - 9 + 1 + 9 + 190 - 5 + 75 + 94 + 355 + 19 + 250 + 619 + 4 2843 + 163 + 8830 + 1 2990 + 14 1370 + 1675 + 7 4523 + 41 3443 + 18 3766 5418 + 3 5715 + 7844 6443", "x2": "sub sqr add relu n x_0_8 INT+ 6", "tree": "(((relu(n) add x_0_8))**2 sub 6)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 8 + 1 + 3 + 10 + 8 - 1 + 1 + 1 + 3 + 3 + 1 + 2 + 2 + 2 + 3 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4", "x2": "idiv mul sign sqr abs n add n x_0_5 INT+ 6", "tree": "((sign((abs(n))**2) mul (n add x_0_5)) idiv 6)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 5 - 5 - 10 - 4 - 7 + 1 + 1 + 0 + 2 + 1 + 12 + 13 + 0 + 8 + 16 + 2 + 2 + 0 + 3 + 2 + 11 + 12 + 0 + 9", "x2": "relu abs idiv add n x_0_5 x_0_5", "tree": "relu(abs(((n add x_0_5) idiv x_0_5)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 3 + 10 + 3 + 10 + 5 + 1 + 17 + 5 + 19 + 20 + 2 + 32 + 8 + 23 + 44 - 2 + 54 + 17 + 13 + 82 - 14 + 77 + 46 - 25", "x2": "sub add abs x_0_5 add mod INT- 4 n n x_0_4", "tree": "((abs(x_0_5) add ((-4 mod n) add n)) sub x_0_4)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 - 8 + 0 - 3 - 3 + 5 + 2 + 2 + 10 + 7 + 7 + 15 + 12 + 12 + 20 + 17 + 17 + 25 + 22 + 22 + 30 + 27", "x2": "add sign n add INT+ 4 x_0_3", "tree": "(sign(n) add (4 add x_0_3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 400 + 900 + 1600 + 2500 + 3600 + 4900 + 6400 + 8100 + 1 0 + 1 2100 + 1 4400 + 1 6900 + 1 9600 + 2 2500 + 2 5600 + 2 8900 + 3 2400 + 3 6100 + 4 0", "x2": "sqr mul add n abs sign n INT- 1 0", "tree": "(((n add abs(sign(n))) mul -10))**2", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 9 - 7 + 13 + 12 - 7 - 5 + 15 + 14 - 5 - 3 + 17 + 16 - 3 - 1 + 19 + 18 - 1 + 1 + 21 + 20", "x2": "sub relu n x_0_2", "tree": "(relu(n) sub x_0_2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 8 - 5 - 9 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 9 + 6 + 8 - 2 + 70 + 0 + 0 + 80 + 0 + 100 + 121 + 0 + 169 + 0 + 0 + 256 + 0 + 324 + 361 + 0 + 441 + 0 + 0", "x2": "mul n relu sub n idiv x_0_4 INT+ 1", "tree": "(n mul relu((n sub (x_0_4 idiv 1))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr add n idiv n INT+ 7", "tree": "((n add (n idiv 7)))**2", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 + 3 - 5 - 2 - 8 + 1 - 8 - 4 + 8 + 10 + 10 + 12 + 9 + 10 + 14 + 8 + 11 + 6 + 9 + 20 + 19 + 18 + 5 + 12 + 23 + 24 + 14", "x2": "sub n mod mul x_0_8 n mod INT- 4 abs n", "tree": "(n sub ((x_0_8 mul n) mod (-4 mod abs(n))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 6 - 5 - 2 - 2 - 7 - 6 + 3 - 6 + 12 + 15 + 20 + 22 + 19 + 22 + 33 + 26 + 46 + 51 + 58 + 62 + 61 + 66 + 79 + 74 + 96 + 103 + 112", "x2": "add n add n x_0_8", "tree": "(n add (n add x_0_8))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 1 - 9 + 5 + 5 + 0 - 7 - 1 - 765 - 945 - 1215 - 1467 - 1728 - 2007 - 2349 - 405 - 237 + 177 + 513 + 852 + 1221 + 1755 - 4593 - 5637 - 7443 - 9039 - 1 668", "x2": "sub mul INT- 2 sub x_0_7 mul sqr n INT- 6 x_0_7", "tree": "((-2 mul (x_0_7 sub ((n)**2 mul -6))) sub x_0_7)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 7 + 9 - 14 + 18 - 28 + 36 - 56 + 72 - 112 + 144 - 224 + 288 - 448 + 576 - 896 + 1152 - 1792 + 2304 - 3584 + 4608 - 7168", "x2": "sub x_0_2 sub abs n add x_0_2 n", "tree": "(x_0_2 sub (abs(n) sub (x_0_2 add n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859", "x2": "mul n sqr n", "tree": "(n mul (n)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 + 6 + 1 - 10 - 2 + 14 + 21 + 3 - 4 + 6 + 32 + 22 + 6 - 9 + 28 + 35 + 35 - 16 + 15 + 23 + 75 - 6 + 18", "x2": "add n sub sub x_0_4 INT- 3 x_0_3", "tree": "(n add ((x_0_4 sub -3) sub x_0_3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 2 - 6 - 2 + 6 - 5 - 8 - 6 - 5 - 1 - 5 - 1 - 2 - 5 - 1 - 2 + 0 - 2 + 0 - 5 - 2 + 0 - 5 - 1 - 5 - 1 - 2", "x2": "mod sub idiv INT- 3 n x_0_7 sub INT- 6 relu x_0_2", "tree": "(((-3 idiv n) sub x_0_7) mod (-6 sub relu(x_0_2)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1 + 0 + 1 + 4 + 1", "x2": "mod mul n relu abs n INT+ 8", "tree": "((n mul relu(abs(n))) mod 8)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 9 + 10 - 5 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 6 + 0 + 0 + 0 + 16 + 0 + 0 + 0", "x2": "mod mul mod mul n INT+ 8 INT+ 7 x_0_4 n", "tree": "((((n mul 8) mod 7) mul x_0_4) mod n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 4 - 1 - 8 - 11 - 8 - 15 - 18 - 15 - 22 - 25 - 22 - 29 - 32 - 29 - 36 - 39 - 36 - 43 - 46 - 43 - 50 - 53", "x2": "sub INT- 7 abs x_0_3", "tree": "(-7 sub abs(x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 10 + 4 + 0 + 10 - 8 + 0 - 40 + 40 + 0 + 280 - 320 + 0 - 2800 + 3520 + 0 + 3 6400 - 4 9280 + 0 - 58 2400 + 83 7760 + 0", "x2": "mul x_0_3 sub relu sqr add INT+ 8 INT- 6 n", "tree": "(x_0_3 mul (relu(((8 add -6))**2) sub n))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 50 + 198 + 444 + 788 + 1230 + 1770 + 2408 + 3144 + 3978 + 4910 + 5940 + 7068 + 8294 + 9618 + 1 1040 + 1 2560 + 1 4178 + 1 5894 + 1 7708", "x2": "add n sqr mul n INT- 7", "tree": "(n add ((n mul -7))**2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 4 + 5 + 243 + 565 + 874 + 1369 + 2201 + 3225 + 4344 + 5757 + 7615 + 9773 + 1 2134 + 1 4897 + 1 8213 + 2 1937 + 2 5972 + 3 517 + 3 5723 + 4 1445 + 4 7586", "x2": "sub sub sub abs INT- 2 n add x_0_2 mul INT- 9 mul n sqr n n", "tree": "(((abs(-2) sub n) sub (x_0_2 add (-9 mul (n mul (n)**2)))) sub n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 6 + 3 + 4 + 2 - 8 - 5 - 7 - 2 - 6 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 400 + 26 + 27 + 28 + 29", "x2": "add n mul mod n relu add relu n idiv sqr idiv n abs INT- 5 n x_0_10", "tree": "(n add ((n mod relu((relu(n) add (((n idiv abs(-5)))**2 idiv n)))) mul x_0_10))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 5 + 5 + 25 + 25 + 125 + 125 + 625 + 625 + 3125 + 3125 + 1 5625 + 1 5625 + 7 8125 + 7 8125 + 39 625 + 39 625 + 195 3125 + 195 3125 + 976 5625 + 976 5625", "x2": "mul x_0_2 relu add sign relu x_0_1 INT+ 4", "tree": "(x_0_2 mul relu((sign(relu(x_0_1)) add 4)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 1 + 6 + 8 - 8 + 3 - 1 - 6 + 0 + 5 + 7 - 9 + 2 - 2 - 7 - 1 + 4 + 6 - 10 + 1 - 3 - 8 - 2 + 3 + 5 - 11", "x2": "sub x_0_7 sign mod x_0_2 sign abs abs INT+ 1", "tree": "(x_0_7 sub sign((x_0_2 mod sign(abs(abs(1))))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 9 + 4 - 1 + 7 - 6 + 7 + 2 + 10 - 3 + 10 + 5 + 13 + 0 + 13 + 8 + 16 + 3 + 16 + 11 + 19 + 6 + 19", "x2": "idiv add INT+ 3 x_0_4 abs sign relu INT+ 3", "tree": "((3 add x_0_4) idiv abs(sign(relu(3))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 2 + 4 - 5 + 1 + 0 - 3 - 9 + 2 + 0 + 8 + 0 + 17 + 0 + 31 + 0 + 64 + 0 + 136 + 0 + 289 + 0 + 609 + 0 + 1282 + 0 + 2700", "x2": "relu add add x_0_2 x_0_2 x_0_8", "tree": "relu(((x_0_2 add x_0_2) add x_0_8))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 5 + 9 - 9 + 48 - 20 + 60 - 126 + 24 - 729 + 50 - 198 + 1620 - 26 + 5292 - 210 + 96 - 4 9878 + 0 + 2 5973 + 2300 + 0 + 942 8188", "x2": "mul n idiv add sign n mul mul INT- 3 n x_0_3 add INT- 4 abs x_0_1", "tree": "(n mul ((sign(n) add ((-3 mul n) mul x_0_3)) idiv (-4 add abs(x_0_1))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 4 - 3 + 19 + 6 - 6 + 55 + 9 - 9 + 10 - 6 + 7 + 162 + 34 - 34 + 34 - 30 + 30 - 29 + 33 - 32", "x2": "sub sqr idiv n mod sub abs add INT- 2 x_0_2 sqr INT- 9 x_0_2 x_0_1", "tree": "(((n idiv ((abs((-2 add x_0_2)) sub (-9)**2) mod x_0_2)))**2 sub x_0_1)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 1 + 5 - 1 - 2 + 2 + 5 - 3 - 4 - 20 - 4 + 40 - 10 + 195 + 36 - 776 - 760 - 3108 - 3 0 - 3 1070 - 585 7215 + 111 9780 + 45 4530 4376 - 8 5008 2800 + 14 1268 213 7364 + 25 5092 4234 0 - 43 8919 7436 9646 5590", "x2": "mul x_0_7 idiv add x_0_2 idiv x_0_5 n sign add mod x_0_8 x_0_1 n", "tree": "(x_0_7 mul ((x_0_2 add (x_0_5 idiv n)) idiv sign(((x_0_8 mod x_0_1) add n))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 1 + 5 + 2 + 27 + 90 + 72 + 306 + 882 + 729 + 2844 + 8037 + 6669 + 2 5713 + 7 2459 + 6 156 + 23 1561 + 65 2284 + 54 1566 + 208 4220 + 587 736 + 487 4283 + 1875 8178", "x2": "mul sub INT+ 8 sign INT- 3 add x_0_3 n", "tree": "((8 sub sign(-3)) mul (x_0_3 add n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 24 + 39 + 56 + 75 + 96 + 119 + 144 + 171 + 200 + 231 + 264 + 299 + 336 + 375 + 416 + 459 + 504 + 551", "x2": "mul mod n sqr n relu abs sub INT- 1 0 n", "tree": "((n mod (n)**2) mul relu(abs((-10 sub n))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 4 + 5 + 8 + 5 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "mul sign sign INT+ 6 sign x_0_4", "tree": "(sign(sign(6)) mul sign(x_0_4))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 + 1 - 10 - 5 + 4 + 7 - 4 + 5 - 8 + 7 - 4 + 11 + 5 - 6 - 8 + 5 - 5 + 9 - 9 + 4 - 11 - 6 + 6 + 9 - 4 + 6 - 8 + 9", "x2": "sub mod relu x_0_9 INT- 3 add x_0_9 idiv x_0_6 mul add mod n INT- 8 INT+ 8 x_0_9", "tree": "((relu(x_0_9) mod -3) sub (x_0_9 add (x_0_6 idiv (((n mod -8) add 8) mul x_0_9))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 3 - 1 + 7 + 6 - 1 + 1 + 9 + 8 + 1 + 3 + 11 + 10 + 3 + 5 + 13 + 12 + 5 + 7 + 15 + 14 + 7", "x2": "add add mul INT- 1 x_0_2 n INT+ 1", "tree": "(((-1 mul x_0_2) add n) add 1)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 6 + 10 - 8 - 6 - 10 + 9 + 6 + 11 - 9 - 6 - 11 + 10 + 6 + 12 - 10 - 6 - 12 + 11 + 6 + 13 - 11", "x2": "sub idiv abs mod x_0_3 add INT+ 1 mod x_0_1 sub INT- 1 0 n INT+ 8 x_0_3", "tree": "((abs((x_0_3 mod (1 add (x_0_1 mod (-10 sub n))))) idiv 8) sub x_0_3)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 10 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "add relu mod mod n INT+ 5 sub n sub x_0_1 INT- 1 0 sqr sqr n", "tree": "(relu(((n mod 5) mod (n sub (x_0_1 sub -10)))) add ((n)**2)**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 5 + 10 + 4 + 0 + 0 + 16 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1", "x2": "sqr mod x_0_3 INT+ 5", "tree": "((x_0_3 mod 5))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 6 + 3 + 7 + 9 - 8 - 9 + 2 + 8 - 7 - 4 + 1 - 9 - 11 - 1 + 7 - 8 - 6 - 1 - 11 - 12 - 3 + 5 - 10 - 8 - 3 - 13 - 13 - 5 + 4 - 12", "x2": "sub sub x_0_7 INT+ 2 idiv idiv x_0_5 add mul x_0_11 sqr x_0_8 INT+ 2 add relu x_0_12 INT- 4", "tree": "((x_0_7 sub 2) sub ((x_0_5 idiv ((x_0_11 mul (x_0_8)**2) add 2)) idiv (relu(x_0_12) add -4)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 5 - 5 + 648 + 1056 + 1320 + 1152 + 2016 + 1536 + 1728 + 3360 + 2376 + 2304 + 5616 + 5376 + 5040 + 3072 + 6528 + 8640 + 8664 + 3840 + 1 80", "x2": "mul sub INT- 8 relu relu mod x_0_2 n mul INT+ 6 mul n INT- 4", "tree": "((-8 sub relu(relu((x_0_2 mod n)))) mul (6 mul (n mul -4)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 3 + 7 + 0 + 6 + 0 - 1 + 6 + 0 - 8 + 28 + 24 + 43 + 25 + 38 + 49 + 8 + 13 + 26 + 34 + 78 + 47 + 122 + 112 + 73 + 83 + 13 + 59 + 43", "x2": "add x_0_10 add n add sub x_0_8 x_0_6 add n INT+ 3", "tree": "(x_0_10 add (n add ((x_0_8 sub x_0_6) add (n add 3))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1 + 2 + 3 + 4 + 5 + 0 + 1", "x2": "abs relu relu mod relu n INT+ 6", "tree": "abs(relu(relu((relu(n) mod 6))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 + 1 - 9 + 3 - 5 + 8 + 2 + 17 + 13 + 30 + 29 + 48 + 50 + 73 + 78 + 105 + 114 + 145 + 158 + 194", "x2": "add x_0_2 idiv sqr n INT+ 9", "tree": "(x_0_2 add ((n)**2 idiv 9))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 8 - 34 - 78 - 140 - 220 - 318 - 434 - 568 - 720 - 890 - 1078 - 1284 - 1508 - 1750 - 2010 - 2288 - 2584 - 2898 - 3230", "x2": "add relu n mul abs relu mul n relu n INT- 9", "tree": "(relu(n) add (abs(relu((n mul relu(n)))) mul -9))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 9 + 6 - 3 - 16 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 0 + 1 + 23", "x2": "mod n mul INT- 7 sub sub x_0_4 sign mul x_0_2 INT- 5 n", "tree": "(n mod (-7 mul ((x_0_4 sub sign((x_0_2 mul -5))) sub n)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 14 + 42 + 84 + 140 + 210 + 294 + 392 + 504 + 630 + 770 + 924 + 1092 + 1274 + 1470 + 1680 + 1904 + 2142 + 2394 + 2660", "x2": "mul add n abs mul n INT+ 6 add n INT+ 1", "tree": "((n add abs((n mul 6))) mul (n add 1))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 4 + 6 - 7 + 10 - 10 + 42 - 32 + 54 - 70 + 110 - 120 + 546 - 448 + 810 - 1120 + 1870 - 2160 + 1 374 - 8960 + 1 7010 - 2 4640 + 4 3010 - 5 1840 + 25 9350", "x2": "mul x_0_6 mod relu n mul abs n n", "tree": "(x_0_6 mul (relu(n) mod (abs(n) mul n)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 + 8 - 10 + 10 + 3 + 0 + 0 + 2 + 3 + 0 + 0 + 2 + 3 + 0 + 0 + 2 + 3 + 0 + 0 + 2 + 3 + 0 + 0", "x2": "relu mod mod x_0_4 sub n idiv INT- 9 sign x_0_4 INT+ 4", "tree": "relu(((x_0_4 mod (n sub (-9 idiv sign(x_0_4)))) mod 4))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 - 6 - 7 - 6 - 5 - 8 - 6 - 8 - 5 - 6 - 2 - 2 + 3 + 4 - 5 - 4 + 4 + 6 - 4 - 2 + 9", "x2": "add mod x_0_2 n INT- 8", "tree": "((x_0_2 mod n) add -8)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 0 + 12 + 5 + 18 + 35 + 56 + 0 + 10 + 22 + 36 + 52 + 70 + 90 + 112 + 136 + 162 + 190", "x2": "mul mod INT- 9 n n", "tree": "((-9 mod n) mul n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2401 + 576 + 256 + 144 + 81 + 64 + 49 + 36 + 25 + 16 + 16 + 16 + 9 + 9 + 9 + 9 + 4 + 4 + 4", "x2": "sqr idiv sqr INT- 7 n", "tree": "(((-7)**2 idiv n))**2", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 + 0 + 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5", "x2": "add idiv abs n INT+ 3 sign INT- 5", "tree": "((abs(n) idiv 3) add sign(-5))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 3 - 7 + 21 + 12 + 160 + 55 + 1176 + 937 + 1 1202 + 2621 + 12 3172 + 11 1545 + 168 7706 + 17 4397 + 2521 8568 + 2572 6245 + 4 5079 5070 + 964 5855 + 85 137 6492 + 92 6413 3507 + 1868 1807 4006", "x2": "sub add INT- 8 mul abs sub x_0_3 x_0_2 abs n idiv n x_0_1", "tree": "((-8 add (abs((x_0_3 sub x_0_2)) mul abs(n))) sub (n idiv x_0_1))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5", "x2": "idiv n INT- 4", "tree": "(n idiv -4)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 10 + 6 + 4 + 6 - 1 + 21 + 34 - 12 + 20 + 22 + 23 + 47 + 79 + 36 + 40 + 39 + 50 + 92 + 198 + 67 + 60 + 53 + 84 + 189", "x2": "add idiv relu mul x_0_6 add x_0_6 sign INT- 7 x_0_3 add n n", "tree": "((relu((x_0_6 mul (x_0_6 add sign(-7)))) idiv x_0_3) add (n add n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 1 - 2 - 3 - 6 - 9 - 12 - 17 - 22 - 27 - 34 - 41 - 48 - 57 - 66 - 75 - 86 - 97 - 108 - 121", "x2": "idiv sqr n INT- 3", "tree": "((n)**2 idiv -3)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 5 - 3 + 91 + 86 + 83 - 12 - 8 - 6 + 88 + 83 + 80 - 15 - 11 - 9 + 85 + 80 + 77 - 18 - 14 - 12 + 82", "x2": "add INT- 5 sub INT+ 6 add sub x_0_3 INT+ 4 sub n sqr INT+ 9", "tree": "(-5 add (6 sub ((x_0_3 sub 4) add (n sub (9)**2))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 6 + 3 + 10 + 10 + 4 - 1 + 15 + 4 + 1 - 2 + 5 + 7 - 4 + 5 + 7 + 12 + 2 + 1 + 12 + 1 + 1 - 4 + 9 + 3", "x2": "sub sub idiv idiv x_0_1 INT- 2 x_0_3 x_0_6 INT- 9", "tree": "((((x_0_1 idiv -2) idiv x_0_3) sub x_0_6) sub -9)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 80 + 880 + 1 560 + 13 7280 + 192 1920 + 2882 8800 + 4 6126 800 + 78 4143 3600 + 1411 4580 4800 + 2 6817 7029 1200 + 53 6354 582 4000 + 1126 3435 2230 4000 + 2 4779 5574 9068 8000 + 56 9929 8222 8582 4000 + 1367 8315 7348 5977 6000 + 3 4195 7893 3714 9440 0 + 88 9090 5227 6588 5440 0 + 2400 5444 1146 7890 6880 0 + 6 7215 2435 2110 939 2640 0", "x2": "mul add INT+ 8 n x_0_1", "tree": "((8 add n) mul x_0_1)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 + 8 - 5 + 9 - 3 - 6 + 3 + 1 - 8 + 7 + 10 + 12 - 7 - 3 - 2 + 13 + 18 - 10 - 4 + 6 + 6 + 8 - 22 + 3 + 9 + 8 - 5 - 40 + 13 + 13", "x2": "sub idiv x_0_5 sign n x_0_11", "tree": "((x_0_5 idiv sign(n)) sub x_0_11)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3", "x2": "mod idiv n INT+ 6 n", "tree": "((n idiv 6) mod n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 0 - 4 + 7 - 4 - 8 + 1 - 4 + 6 + 4 - 5 - 6 - 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1", "x2": "sign idiv add mod sqr mul x_0_12 n add n x_0_10 abs sign n x_0_11", "tree": "sign((((((x_0_12 mul n))**2 mod (n add x_0_10)) add abs(sign(n))) idiv x_0_11))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 4 + 4 - 2 - 2 + 1 - 10 + 4 + 3 + 2 - 9 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul sub n idiv INT+ 1 add idiv n idiv abs add abs n sub x_0_10 x_0_6 INT+ 1 INT+ 1 0 n", "tree": "((n sub (1 idiv ((n idiv (abs((abs(n) add (x_0_10 sub x_0_6))) idiv 1)) add 10))) mul n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 7 + 9 + 7 - 5 + 0 + 8 + 74 + 47 + 34 - 1 - 9 + 5429 + 2183 + 1231 + 57 + 5280 + 2947 1857 + 476 4249 + 152 733 + 152 + 159 2182 + 868 5903 5026 4257 + 22 6980 6701 8548 + 2 3126 5832 8994 + 319 5171", "x2": "sub abs sub x_0_4 add sqr x_0_5 add x_0_7 n n", "tree": "(abs((x_0_4 sub ((x_0_5)**2 add (x_0_7 add n)))) sub n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 6 + 4 + 6 - 10 - 7 + 2 + 10 + 9 + 9 + 9 + 11 + 12 + 20 + 22 + 21 + 18 + 24 + 35 + 29 + 34 + 24", "x2": "relu add n mod sub sign x_0_4 x_0_1 idiv x_0_5 abs INT+ 1", "tree": "relu((n add ((sign(x_0_4) sub x_0_1) mod (x_0_5 idiv abs(1)))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 9 - 2 + 5 - 6 + 3 + 6 + 4 + 2 + 115 - 54 + 51 + 150 + 60 + 50 + 3335 - 1512 + 1377 + 2 1150 - 1620 + 3950 + 59 6965 - 13 6080 + 11 1537 + 7121 2050", "x2": "mul add INT+ 7 add relu n x_0_9 x_0_6", "tree": "((7 add (relu(n) add x_0_9)) mul x_0_6)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 5 - 1 - 10 + 5 + 125 - 36 - 490 + 320 + 1 125 - 3600 - 5 9290 + 4 6080 + 171 1125 - 70 5600 - 1334 250 + 1179 6480 + 4 9451 5125 - 2 2861 4400 - 48 1583 250 + 47 1859 2000", "x2": "mul x_0_4 abs sqr n", "tree": "(x_0_4 mul abs((n)**2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 2 + 4 + 4 + 1 + 2 - 3 - 2 - 4 - 4 - 1 - 2 + 3 + 2 + 4 + 4 + 1 + 2 - 3 - 2", "x2": "sub x_0_2 mul x_0_4 idiv n n", "tree": "(x_0_2 sub (x_0_4 mul (n idiv n)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 - 7 - 4 + 0 + 5 + 11 + 18 + 26 + 35 + 45 + 56 + 68 + 81 + 95 + 110 + 126 + 143", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 + 4 + 7 - 8 + 0 - 9 - 2 + 4 + 9 + 4 + 7 + 0 + 0 + 0 + 0 + 4 + 9 + 4 + 7 + 0 + 0 + 0 + 0", "x2": "relu x_0_8", "tree": "relu(x_0_8)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 4 - 4 + 3 + 3 - 9 - 3 - 7 + 10 + 10 + 6 + 7 + 10 + 10 + 10 + 0 + 0 + 4 - 1 - 9 - 1 - 9 + 10 + 10", "x2": "sub add sqr sub n n INT+ 1 0 relu relu add x_0_7 mod x_0_1 x_0_7", "tree": "((((n sub n))**2 add 10) sub relu(relu((x_0_7 add (x_0_1 mod x_0_7)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 3 - 9 - 3 + 1 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr idiv n sign sub mod sign mul x_0_5 INT- 7 INT+ 9 n", "tree": "((n idiv sign(((sign((x_0_5 mul -7)) mod 9) sub n))))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 + 8 + 4 - 4 + 2 + 9 + 1 + 10 - 6 - 10 + 6 + 4 - 11 + 97 - 388 - 1554 + 3107 - 2 7962 + 2 7964 - 27 9641 - 167 7846 - 1677 8461 + 1 67 765 - 4 268 3060 - 44 2951 3661 + 4296 6282 5117 + 166 7091 7614 5395", "x2": "sub idiv INT+ 9 x_0_7 mul sub x_0_1 relu idiv INT+ 1 mul sub x_0_6 sign x_0_6 sign n x_0_12", "tree": "((9 idiv x_0_7) sub ((x_0_1 sub relu((1 idiv ((x_0_6 sub sign(x_0_6)) mul sign(n))))) mul x_0_12))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 7 + 36 + 121 + 324 + 729 + 1444 + 2601 + 4356 + 6889 + 1 404 + 1 5129 + 2 1316 + 2 9241 + 3 9204 + 5 1529 + 6 6564 + 8 4681", "x2": "sqr sub sqr mod add x_0_1 n x_0_1 INT- 2", "tree": "(((((x_0_1 add n) mod x_0_1))**2 sub -2))**2", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 36 + 144 + 400 + 900 + 1764 + 3136 + 5184 + 8100 + 1 2100 + 1 7424 + 2 4336 + 3 3124 + 4 4100 + 5 7600 + 7 3984", "x2": "sqr add mul n sign relu sign sign idiv INT+ 8 INT+ 4 mul n n", "tree": "(((n mul sign(relu(sign(sign((8 idiv 4)))))) add (n mul n)))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 5 + 3 + 0 - 9 - 2 + 28 + 15 + 18 + 29 + 4 + 25 + 7 + 7 - 2 + 21 + 9 + 29 + 13 + 13 + 8 + 9", "x2": "sub abs sub add x_0_5 mul x_0_2 mod x_0_1 INT+ 3 add add n relu n abs INT- 6 INT+ 4", "tree": "(abs(((x_0_5 add (x_0_2 mul (x_0_1 mod 3))) sub ((n add relu(n)) add abs(-6)))) sub 4)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 8 - 9 + 3 - 9 - 10 + 2 - 10 - 14 - 2 - 14 - 18 - 6 - 18 - 22 - 10 - 27 - 31 - 19", "x2": "sub x_0_3 sqr idiv n INT- 8", "tree": "(x_0_3 sub ((n idiv -8))**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 6 - 1 - 7 + 8 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign idiv sign n x_0_5", "tree": "sign((sign(n) idiv x_0_5))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 1 + 3 + 2 + 2 + 3 + 5 + 8 + 12 + 17 + 23 + 30 + 38 + 47 + 57 + 68 + 80", "x2": "mod INT- 5 relu add x_0_1 n", "tree": "(-5 mod relu((x_0_1 add n)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 - 1 - 7 - 1 - 13 - 1 - 19 - 1 - 25 - 1 - 31 - 1 - 37 - 1 - 43 - 1 - 49", "x2": "sub mul INT- 6 abs idiv relu n mul x_0_1 INT- 2 idiv x_0_1 x_0_1", "tree": "((-6 mul abs((relu(n) idiv (x_0_1 mul -2)))) sub (x_0_1 idiv x_0_1))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 4 - 3 - 2 - 1 + 0 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 8 - 7", "x2": "mod add sqr INT- 7 n INT- 9", "tree": "(((-7)**2 add n) mod -9)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 5 - 1 - 8 + 25 + 42 + 56 + 80 + 90 + 120 + 121 + 168 + 195 + 210 + 240 + 288 + 306 + 324 + 399 + 420", "x2": "mul add mod sub x_0_4 n INT+ 3 n relu n", "tree": "((((x_0_4 sub n) mod 3) add n) mul relu(n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 4 + 5 + 10 - 8 + 6 - 3 + 16 + 25 + 100 + 64 + 36 + 9 + 256 + 625 + 1 0 + 4096 + 1296 + 81 + 6 5536 + 39 625 + 1 0 0 + 1677 7216", "x2": "relu sqr x_0_6", "tree": "relu((x_0_6)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 5 + 8 + 5 + 105 + 735 + 5145 + 4 1160 + 37 440 + 370 4400 + 4074 8400 + 4 8898 800 + 63 5675 400 + 889 9450 5600 + 1 3349 1758 4000 + 21 3586 8134 4000 + 363 975 8284 8000 + 6535 7564 9126 4000 + 12 4179 3733 3401 6000 + 248 3587 4666 8032 0", "x2": "mul add sqr idiv add relu sub INT+ 6 x_0_3 mod INT- 5 INT+ 2 x_0_4 n abs x_0_1", "tree": "(((((relu((6 sub x_0_3)) add (-5 mod 2)) idiv x_0_4))**2 add n) mul abs(x_0_1))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 - 7 + 6 - 4 + 5 + 0 + 1 + 3 + 2 + 7 + 6 + 4 + 5 + 0 + 1 + 3 + 2 + 7 + 6 + 4", "x2": "relu sub INT+ 7 abs x_0_4", "tree": "relu((7 sub abs(x_0_4)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 7 + 4 - 10 - 7 - 4 + 10 + 7 + 4 - 10 - 7 - 4 + 10 + 7 + 4 - 10 - 7 - 4 + 10", "x2": "mul x_0_3 idiv sign INT- 1 0 n", "tree": "(x_0_3 mul (sign(-10) idiv n))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 4 + 5 + 5 - 4 + 5 + 5 - 4 + 5 + 5 - 4 + 5 + 5 - 4 + 5 + 5 - 4 + 5 + 5 - 4", "x2": "sub x_0_3 mod mod mod x_0_1 INT+ 3 sqr sign x_0_2 mul n n", "tree": "(x_0_3 sub (((x_0_1 mod 3) mod (sign(x_0_2))**2) mod (n mul n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 1 + 6 - 7 - 2 + 10 - 9 - 10 - 1 + 7 - 63 - 15 + 7 - 110 - 133 - 8 + 7 - 1064 - 263 + 7 - 2193 - 2786 - 169 + 7", "x2": "mod INT+ 7 mul x_0_7 n", "tree": "(7 mod (x_0_7 mul n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 7 + 4 - 13 + 12 - 23 + 26 - 45 + 52 - 81 + 113 - 153 + 235 - 297 + 479 - 585 + 967 - 1161", "x2": "add x_0_2 add relu mod mod relu add abs mul n INT- 2 INT+ 9 n n x_0_2", "tree": "(x_0_2 add (relu(((relu((abs((n mul -2)) add 9)) mod n) mod n)) add x_0_2))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 4 + 8 - 10 + 25 + 12 + 49 + 0 + 81 + 100 + 121 + 0 + 169 + 196 + 225 + 0 + 289 + 324 + 361 + 0", "x2": "mul relu mod n x_0_4 n", "tree": "(relu((n mod x_0_4)) mul n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 3 + 7 + 13 + 21 + 31 + 43 + 57 + 73 + 91 + 111 + 133 + 157 + 183 + 211 + 241", "x2": "sub sqr n abs add n INT- 1", "tree": "((n)**2 sub abs((n add -1)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "mul add n mod idiv sub mod INT- 6 INT- 5 mod INT+ 1 0 n INT- 1 sign abs n n", "tree": "((n add ((((-6 mod -5) sub (10 mod n)) idiv -1) mod sign(abs(n)))) mul n)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5", "x2": "mod n INT- 7", "tree": "(n mod -7)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 4 + 7 + 6 - 9 + 5 + 8 + 7 - 8 + 6 + 9 + 8 - 7 + 7 + 10 + 9 - 6 + 8 + 11 + 10 - 5", "x2": "sub x_0_4 add mod sign sub n mod sub INT+ 2 add n x_0_4 abs x_0_5 n INT- 2", "tree": "(x_0_4 sub ((sign((n sub ((2 sub (n add x_0_4)) mod abs(x_0_5)))) mod n) add -2))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 2 + 2 - 1 + 2 + 10 + 25 + 100 + 64 + 144 + 441 + 1369 + 1 2769 + 6084 + 2 5281 + 20 8849 + 192 996 + 1 6350 7369 + 3724 6609 + 6 4014 601 + 436 2667 6900 + 3 6903 1015 6324", "x2": "sqr sub sign idiv n mod relu n INT- 5 add x_0_5 n", "tree": "((sign((n idiv (relu(n) mod -5))) sub (x_0_5 add n)))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 6 - 6 + 3 - 8 - 7 + 4 + 12 - 10 - 17 + 16 + 31 - 24 - 46 + 42 + 79 - 64 - 123 + 108 + 204 - 170", "x2": "add add INT+ 2 x_0_4 idiv x_0_2 INT- 1", "tree": "((2 add x_0_4) add (x_0_2 idiv -1))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 13 + 27 + 55 + 111 + 223 + 447 + 895 + 1791 + 3583 + 7167 + 1 4335 + 2 8671 + 5 7343 + 11 4687 + 22 9375 + 45 8751", "x2": "abs add x_0_1 add mod idiv mul add n sqr n n sqr n n x_0_1", "tree": "abs((x_0_1 add (((((n add (n)**2) mul n) idiv (n)**2) mod n) add x_0_1)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 2 - 9 + 3 - 10 - 5 + 64 + 4 + 81 + 9 + 100 + 25 + 4096 + 16 + 6561 + 81 + 1 0 + 625 + 1677 7216 + 256 + 4304 6721 + 6561", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 6 + 6 + 6 + 6 + 6 + 6 + 6 + 6 + 14", "x2": "relu relu add add mod sub sign x_0_1 n INT- 8 n INT- 3", "tree": "relu(relu(((((sign(x_0_1) sub n) mod -8) add n) add -3)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 2 - 9 + 4 + 15 + 90 + 756 + 6712 + 6 6483 + 72 4490 + 862 6992 + 1 1142 132 + 15 5119 4411 + 231 5582 5910 + 3689 3400 3060 + 6 2486 1815 3200 + 112 1047 3761 6239 + 2123 7195 9179 5146 + 4 2361 9385 1390 5876", "x2": "mul abs sub n mod x_0_3 sub n relu add x_0_2 add x_0_1 n n", "tree": "(abs((n sub (x_0_3 mod (n sub relu((x_0_2 add (x_0_1 add n))))))) mul n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 9 - 4 + 1 - 8 - 4 - 14 - 11 - 22 - 20 - 32 - 31 - 44 - 44 - 58 - 59 - 74 - 76 - 92 - 95", "x2": "mul sub sign x_0_3 sub sign idiv n x_0_3 sub x_0_2 n idiv n n", "tree": "((sign(x_0_3) sub (sign((n idiv x_0_3)) sub (x_0_2 sub n))) mul (n idiv n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 8 + 0 - 9 + 8 + 3 + 0 + 9 - 10 - 3 - 3 - 10 + 7 + 2 + 0 + 7 - 8 - 5 - 1 - 8 + 8 + 3", "x2": "sub mod sub mul INT+ 1 0 x_0_5 idiv n INT+ 1 0 INT- 4 x_0_4", "tree": "((((10 mul x_0_5) sub (n idiv 10)) mod -4) sub x_0_4)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 2 - 8 + 8 + 19 - 16 - 15 + 78 + 30 - 156 + 107 + 384 - 214 - 540 + 1211 + 1080 - 2422 + 280 + 7023", "x2": "sub sub add mul mod relu sqr INT+ 5 INT+ 8 relu x_0_3 relu add n x_0_3 x_0_2 x_0_2", "tree": "(((((relu((5)**2) mod 8) mul relu(x_0_3)) add relu((n add x_0_3))) sub x_0_2) sub x_0_2)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 + 5 - 3 + 40 + 40 + 84 + 84 + 112 + 144 + 180 + 220 + 264 + 312 + 364 + 420 + 480 + 544 + 612 + 684", "x2": "mul n mul sub sign x_0_3 n INT- 2", "tree": "(n mul ((sign(x_0_3) sub n) mul -2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 - 2 - 2 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2", "x2": "sub idiv n INT+ 4 INT+ 2", "tree": "((n idiv 4) sub 2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 9 + 8 - 8 - 9 + 1 + 1 - 2 - 1 + 9 + 9 - 5 - 9 + 1 + 1 - 2 - 1 + 9 + 9 - 5", "x2": "add relu sign INT- 9 idiv INT+ 9 x_0_4", "tree": "(relu(sign(-9)) add (9 idiv x_0_4))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 8 - 3 - 3 + 0 - 3 + 3 - 6 - 1 - 3 - 13 - 7 - 8 - 5 - 7 - 2 - 11 - 5 - 8 - 17 - 11 - 13 - 10 - 11 - 7", "x2": "mul idiv sign INT+ 4 sign INT+ 1 add sub x_0_9 mod idiv n x_0_4 INT+ 2 INT- 4", "tree": "((sign(4) idiv sign(1)) mul ((x_0_9 sub ((n idiv x_0_4) mod 2)) add -4))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 9 + 30 + 44 + 60 + 78 + 98 + 120 + 144 + 170 + 198 + 228 + 260 + 294 + 330 + 368 + 408 + 450", "x2": "mul add INT+ 7 mod n add x_0_2 add n mul n n n", "tree": "((7 add (n mod (x_0_2 add (n add (n mul n))))) mul n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr mod relu mul sign n n add INT+ 4 n", "tree": "((relu((sign(n) mul n)) mod (4 add n)))**2", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 10 + 5 - 56 + 4 - 332 + 4 - 1988 + 4 - 1 1924 + 4 - 7 1540 + 4 - 42 9236 + 4 - 257 5412 + 4 - 1545 2468 + 4", "x2": "add mod INT+ 6 add mul INT+ 5 x_0_2 x_0_2 INT- 2", "tree": "((6 mod ((5 mul x_0_2) add x_0_2)) add -2)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 8 + 72 + 1152 + 2 8800 + 103 6800 + 5080 3200 + 32 5140 4800 + 2633 6378 8800 + 26 3363 7888 0 + 3186 7018 4448 0 + 45 8885 656 512 0 + 7755 1576 872 6528 0 + 152 10 8913 1039 9488 0 + 3 4200 2450 5448 3988 4800 0 + 875 5262 7339 4790 1050 8800 0 + 25 3027 930 1109 4340 3704 3200 0", "x2": "relu mul idiv mul n x_0_1 n mul n n", "tree": "relu((((n mul x_0_1) idiv n) mul (n mul n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 8 + 10 + 10 - 7 + 10 + 6 + 2 + 7 + 7 - 5 + 10 + 25 - 11 - 13 + 24 + 22 - 12 - 5 + 32 + 26 + 6 - 13 + 3 + 49", "x2": "add x_0_9 sub abs x_0_7 x_0_2", "tree": "(x_0_9 add (abs(x_0_7) sub x_0_2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 9 - 9 - 10 - 16 - 21 - 28 - 46 - 65 - 88 - 114 - 152 - 196 - 252 - 305 - 382 - 464", "x2": "add add INT- 8 mod sqr sqr INT+ 8 n idiv mul abs sqr n n INT- 9", "tree": "((-8 add (((8)**2)**2 mod n)) add ((abs((n)**2) mul n) idiv -9))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 36 + 81 + 144 + 225 + 324 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304", "x2": "mul n relu abs relu mul n relu INT+ 9", "tree": "(n mul relu(abs(relu((n mul relu(9))))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 4 - 3 - 5 + 9 + 4 - 16 - 19 - 108 - 306 - 1159 - 5 2490 - 3 6163 - 5984 1779 - 53 340 - 3050 4688 8305 - 12 8331 7961 - 269 3504 204 29 - 1782 349 1067 8116 - 152 6672 7264 5011 - 425 1708 5186 7491 2221 7019 - 82 3449 6228 3178 8454", "x2": "add mod abs INT- 2 n sub idiv sqr sub x_0_5 mul INT- 4 idiv add x_0_2 INT- 1 x_0_6 INT- 2 x_0_6", "tree": "((abs(-2) mod n) add ((((x_0_5 sub (-4 mul ((x_0_2 add -1) idiv x_0_6))))**2 idiv -2) sub x_0_6))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 8 - 3 + 3 + 4 - 3 - 11 + 7 + 8 - 47 - 63 + 11 + 12 - 123 - 147 + 15 + 16 - 231 - 263", "x2": "mod n sub sub mul abs mod mul INT+ 3 sqr x_0_1 sign INT- 7 n mul n x_0_2 INT- 7", "tree": "(n mod (((abs(((3 mul (x_0_1)**2) mod sign(-7))) mul n) sub (n mul x_0_2)) sub -7))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 4 + 100 - 2970 + 5 9440 - 178 3150 + 3566 3060 - 10 6989 1730 + 213 9783 4680 - 6419 3504 310 + 12 8387 80 6300 - 385 1610 2418 8890 + 7703 2204 8377 7920 - 23 1096 6145 1333 7470 + 462 1932 2902 6674 9540 - 1 3865 7968 7080 248 6050 + 27 7315 9374 1600 4972 1160 - 831 9478 1224 8014 9163 4630", "x2": "mul INT- 1 0 add x_0_1 add sub relu x_0_1 n x_0_1", "tree": "(-10 mul (x_0_1 add ((relu(x_0_1) sub n) add x_0_1)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 - 8 - 2 + 34 + 89 + 137 + 452 + 1260 + 2610 + 7270 + 2 1295 + 5 2807 + 14 7538 + 44 5920 + 123 8310 + 359 9238 + 1118 235 + 3347 211 + 1 185 6170", "x2": "add add sub x_0_1 mul INT- 1 mul sub n sub n abs add INT+ 3 x_0_3 n sqr n n", "tree": "(((x_0_1 sub (-1 mul ((n sub (n sub abs((3 add x_0_3)))) mul n))) add (n)**2) add n)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 - 10 - 4 + 3 - 7 - 11 - 5 + 2 - 8 - 12 - 6 + 1 - 9 - 13 - 7 + 0 - 10 - 14 - 8 - 1", "x2": "sub x_0_4 abs sign mod x_0_1 x_0_3", "tree": "(x_0_4 sub abs(sign((x_0_1 mod x_0_3))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 10 + 2 - 5 + 1 + 16 + 3 - 7 + 1 + 26 + 5 - 9 + 1 + 40 + 5 - 11 + 1 + 58 + 9 - 13 + 1", "x2": "add x_0_4 mod mod n mul add n INT+ 3 x_0_5 x_0_4", "tree": "(x_0_4 add ((n mod ((n add 3) mul x_0_5)) mod x_0_4))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 6 - 5 + 7 + 0 + 0 + 36 + 0 + 0 + 81 + 0 + 0 + 144 + 0 + 0 + 225 + 0 + 0 + 324 + 0", "x2": "relu mul mod relu n x_0_3 n", "tree": "relu(((relu(n) mod x_0_3) mul n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 12 - 11 - 10 - 9 - 8 - 7 - 12 - 11 - 10 - 9 - 8 - 7 - 12 - 11 - 10 - 9", "x2": "sub add n INT- 7 relu sub n mod n INT- 6", "tree": "((n add -7) sub relu((n sub (n mod -6))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 4 - 4 + 1 - 3 + 5 - 4 + 13 + 21 + 12 + 14 + 30 + 37 + 30 + 199 + 478 + 174 + 395 + 1378 + 1543 + 1295 + 4 979 + 23 27", "x2": "add x_0_3 sqr x_0_7", "tree": "(x_0_3 add (x_0_7)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 5 - 5 + 144 + 225 + 324 + 421 + 548 + 693 + 858 + 1040 + 1239 + 1455 + 1690 + 1943 + 2214 + 2502 + 2809 + 3133", "x2": "sub sqr mul INT+ 3 n idiv relu x_0_3 n", "tree": "(((3 mul n))**2 sub (relu(x_0_3) idiv n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 2 + 10 + 20 - 4 - 2 + 10 + 20 - 4 - 2 + 10 + 20 - 4 - 2 + 10 + 20 - 4 - 2 + 10", "x2": "idiv mul INT- 8 abs INT- 5 x_0_2", "tree": "((-8 mul abs(-5)) idiv x_0_2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 6 + 3 - 4 - 9 + 10 + 10 + 8 + 1 - 4 + 17 + 14 + 13 + 6 + 1 + 22 + 21 + 18 + 11 + 6 + 27", "x2": "add x_0_5 sub INT+ 4 idiv INT- 3 x_0_2", "tree": "(x_0_5 add (4 sub (-3 idiv x_0_2)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 4 + 12 + 3 + 12 + 5 + 12 + 7 + 12 + 8 + 11 + 7 + 10 + 6 + 9 + 5 + 8 + 4", "x2": "sub abs add x_0_2 idiv INT+ 9 n sign sub n x_0_1", "tree": "(abs((x_0_2 add (9 idiv n))) sub sign((n sub x_0_1)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 2 + 5 + 4 - 35 - 40 - 77 - 88 - 131 - 148 - 197 - 220 - 275 - 304 - 365 - 400 - 467 - 508 - 581 - 628", "x2": "sub x_0_4 add sub mul n abs INT+ 7 mod n x_0_2 x_0_4", "tree": "(x_0_4 sub (((n mul abs(7)) sub (n mod x_0_2)) add x_0_4))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "abs sqr abs n", "tree": "abs((abs(n))**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 9 - 471 - 1104 - 9 4135 - 31 7868 - 3690 815 - 1 6274 8288 - 239 1172 7967 - 1301 9863 220 - 23 1465 5267 1847 - 149 9888 2201 3200 - 3 1294 1392 1233 6871 - 23 5182 4729 1669 7292 - 5632 9450 5822 636 7455 - 4 8165 3704 5333 9605 3632 - 1302 3368 9746 611 2155 5535 - 1 2484 4640 2150 5625 7101 3676", "x2": "mod sqr n mul INT+ 8 mod n mul x_0_2 sqr abs n", "tree": "((n)**2 mod (8 mul (n mod (x_0_2 mul (abs(n))**2))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 8 + 1 - 7 + 18 - 10 - 6 - 11 - 14 - 13 - 14 - 15 - 16 - 17 - 18 - 18 - 19 - 20", "x2": "sub idiv sub sub add n INT+ 9 sign add x_0_1 x_0_2 INT- 8 x_0_2 n", "tree": "(((((n add 9) sub sign((x_0_1 add x_0_2))) sub -8) idiv x_0_2) sub n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 3 + 8 + 5 - 7 - 1 + 7 + 4 - 8 - 2 + 6 + 3 - 9 - 3 + 5 + 2 - 10 - 4 + 4 + 1 - 11 - 5", "x2": "add x_0_4 idiv mod relu INT+ 3 INT- 5 add x_0_5 n", "tree": "(x_0_4 add ((relu(3) mod -5) idiv (x_0_5 add n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 2 + 1 + 7 + 1 + 9 + 5 + 11 + 6 + 18 + 7 + 27 + 12 + 38 + 18 + 56 + 25 + 83 + 37 + 121 + 55 + 177", "x2": "add x_0_6 x_0_2", "tree": "(x_0_6 add x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 5 - 7 + 7 + 0 + 0 - 10 - 10 - 20 + 0 + 0 + 0 - 10 - 10 - 20 + 0 + 0 + 0 - 10 - 10", "x2": "mul relu sign x_0_3 sub x_0_2 INT+ 1 0", "tree": "(relu(sign(x_0_3)) mul (x_0_2 sub 10))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 8 - 2 - 3 + 7 + 9 - 41 - 24 - 71 - 82 - 49 - 48 - 255 - 194 - 389 - 440 - 315 - 318 - 1153 - 916 - 1703 - 1914", "x2": "add mul INT- 7 n mul INT+ 4 x_0_6", "tree": "((-7 mul n) add (4 mul x_0_6))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 10 + 1 - 3 - 4 - 7 - 5 - 2 + 4 + 2 - 5 + 6 + 16 + 8 + 5 + 5 + 3 + 6 + 10 + 17 + 16 + 10 + 22 + 33 + 26 + 24 + 25", "x2": "add mod add sign n INT- 8 n x_0_11", "tree": "(((sign(n) add -8) mod n) add x_0_11)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 10 - 10 - 8 - 8 - 7 + 1 + 10 + 100 + 100 + 64 + 64 + 49 + 1 + 100 + 1 0 + 1 0 + 4096 + 4096 + 2401 + 1 + 1 0 + 1 0 0 + 1 0 0", "x2": "relu sqr idiv x_0_7 sign abs add idiv INT+ 5 sign n mul x_0_5 x_0_2", "tree": "relu(((x_0_7 idiv sign(abs(((5 idiv sign(n)) add (x_0_5 mul x_0_2))))))**2)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 10 + 11 - 10 + 11 - 9 + 11 - 9 + 12 - 9 + 12 - 8 + 12 - 8 + 13 - 8 + 13", "x2": "sub idiv n INT+ 3 x_0_1", "tree": "((n idiv 3) sub x_0_1)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 6 - 4 - 1 - 2 + 9 - 3 - 24 - 66 + 356 - 1 - 2 - 3423 + 1 9933 - 24 - 66 - 23 2408 + 143 5175 - 2 - 3423 - 1950 2339 + 1 2629 5376 - 66", "x2": "mod x_0_7 mul INT+ 4 mul n x_0_4", "tree": "(x_0_7 mod (4 mul (n mul x_0_4)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 2 + 7 + 5 + 5 + 7 + 2 + 8 + 7 + 8 + 2 + 7 + 5 + 5 + 7 + 2", "x2": "mod sub mul n n mod INT+ 2 sqr add n n abs INT- 9", "tree": "(((n mul n) sub (2 mod ((n add n))**2)) mod abs(-9))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 4 - 7 + 1 + 1 - 7 - 7 + 1 + 1 - 7 - 7 + 1 + 1 - 7 - 7 + 1 + 1 - 7", "x2": "idiv add INT+ 2 INT- 9 x_0_2", "tree": "((2 add -9) idiv x_0_2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 4 + 2 - 8 + 5 - 6 - 9 + 7 + 4 - 2 + 0 - 1 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 3 + 1 - 3 + 1 - 3 - 4", "x2": "idiv abs n add INT- 8 mul sub x_0_9 n x_0_9", "tree": "(abs(n) idiv (-8 add ((x_0_9 sub n) mul x_0_9)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 6 - 5 - 20 - 33 - 76 - 145 - 300 - 593 - 1196 - 2385 - 4780 - 9553 - 1 9116 - 3 8225 - 7 6460 - 15 2913 - 30 5836", "x2": "add x_0_2 mul relu sign abs sqr sub INT+ 4 INT+ 4 sub x_0_2 sub INT+ 3 x_0_1", "tree": "(x_0_2 add (relu(sign(abs(((4 sub 4))**2))) mul (x_0_2 sub (3 sub x_0_1))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 6 - 3 + 0 - 2 + 2 + 6 + 5 + 10 + 15 + 15 + 21 + 27 + 28 + 35 + 42 + 44 + 52 + 60 + 63", "x2": "add x_0_3 mul mul sign n n sqr idiv n n", "tree": "(x_0_3 add ((sign(n) mul n) mul ((n idiv n))**2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 + 2399 + 78 + 252 + 620 + 1290 + 2394 + 4088 + 6552 + 9990 + 1 4630 + 2 724 + 2 8548 + 3 8402 + 5 610 + 6 5520 + 8 3504", "x2": "sub sqr abs sqr mod n x_0_1 n", "tree": "((abs(((n mod x_0_1))**2))**2 sub n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 3 - 6 + 2 + 5 - 5 + 1 - 10 + 11 - 10 + 11 - 8 + 16 - 8 + 17 - 8 + 28 - 8 + 39 - 8 + 55 - 8 + 72 - 8", "x2": "add abs relu relu x_0_8 x_0_2", "tree": "(abs(relu(relu(x_0_8))) add x_0_2)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 3 + 5 - 5 - 1 + 0 + 2 + 0 + 0 + 0 + 3 + 2 + 3 + 4 + 8 + 8 + 10 + 12 + 17 + 18 + 21", "x2": "relu relu sub x_0_4 sub INT+ 9 abs n", "tree": "relu(relu((x_0_4 sub (9 sub abs(n)))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 10 - 7 + 4 - 2 - 19 - 11 + 15 + 9 - 125 - 19 + 144 + 13 - 77 - 237 + 691 + 209 - 322 - 413 + 5701 + 1101", "x2": "add mul relu abs n mod mul abs sqr n INT- 3 x_0_4 sub n INT- 1", "tree": "((relu(abs(n)) mul ((abs((n)**2) mul -3) mod x_0_4)) add (n sub -1))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 10 + 2 - 4 + 4 + 8 + 16 + 8 + 6 + 12 + 12 + 24 + 14 + 16 + 24 + 16 + 34 + 28 + 32 + 32 + 26", "x2": "sub n sub sub n mod sub n mul abs x_0_2 n x_0_5 n", "tree": "(n sub ((n sub ((n sub (abs(x_0_2) mul n)) mod x_0_5)) sub n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 1 + 2 + 9 + 10 + 7 - 15 - 65 - 73 - 53 + 100 + 449 + 504 + 363 - 709 - 3153 - 3539 - 2553 + 4950 + 2 2057 + 2 4758", "x2": "sub mul x_0_4 mul INT- 1 INT+ 7 add n INT- 5", "tree": "((x_0_4 mul (-1 mul 7)) sub (n add -5))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "relu mul n n", "tree": "relu((n mul n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 3 + 7 + 0 + 9 - 5 + 6 - 9 - 8 + 0 + 0 + 5 + 0 + 3 + 0 + 5 + 0 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 2", "x2": "relu mod sub n INT- 7 mul mul sign x_0_2 x_0_9 sign INT+ 1 0", "tree": "relu(((n sub -7) mod ((sign(x_0_2) mul x_0_9) mul sign(10))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 1 - 6 - 18 - 40 - 75 - 126 - 196 - 288 - 405 - 550 - 726 - 936 - 1183 - 1470 - 1800 - 2176", "x2": "mul idiv add sqr n n INT- 2 n", "tree": "((((n)**2 add n) idiv -2) mul n)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 9 + 0 - 18 + 0 - 72 + 0 - 432 + 0 - 3456 + 0 - 3 4560 + 0 - 41 4720 + 0 - 580 6080 + 0 - 9289 7280", "x2": "mul abs x_0_2 sub sub INT+ 2 n x_0_1", "tree": "(abs(x_0_2) mul ((2 sub n) sub x_0_1))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 8 + 5 - 1 7491 - 9290 - 2296 981 - 3311 9596 - 215 5411 9074 - 487 1632 7744 - 15 7616 6913 2690 - 47 7244 5176 5529 - 9448 8436 4990 9083 - 3 5542 1876 5271 2064 - 480 4300 8943 4913 4646 - 2146 893 2650 2369 5497 - 21 2286 2104 4533 3518 9658 - 109 2316 9648 9421 1432 4397 - 8302 2306 7726 4910 6605 641 - 4 8117 1840 4765 8917 3729 3348", "x2": "add idiv mul x_0_2 sqr sqr INT+ 9 n x_0_1", "tree": "(((x_0_2 mul ((9)**2)**2) idiv n) add x_0_1)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 - 5 - 4 + 8 + 10 + 10 + 0 + 0 + 0 + 10 + 11 + 12 + 3 + 3 + 3 + 13 + 14 + 15 + 6", "x2": "relu sub n x_0_3", "tree": "relu((n sub x_0_3))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 10 + 0 + 1 - 9 - 8 - 18 - 17 - 27 - 26 - 36 - 35 - 45 - 44 - 54 - 53 - 63 - 62", "x2": "add INT- 9 x_0_2", "tree": "(-9 add x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 9 + 4 + 13 + 9 + 19 + 16 + 27 + 25 + 37 + 36 + 49 + 49 + 63 + 64 + 79 + 81 + 97", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 6 - 54 + 486 - 4374 + 3 9366 - 35 4294 + 318 8646 - 2869 7814 + 2 5828 326 - 23 2452 2934 + 209 2070 6406 - 1882 8635 7654 + 1 6945 7721 8886 - 15 2511 9496 9974 + 137 2607 5472 9766 - 1235 3467 9256 7894 + 1 1118 1211 3311 1046", "x2": "mul x_0_1 idiv INT- 9 sign idiv mod n INT+ 7 add n mul sign x_0_2 abs INT+ 1", "tree": "(x_0_1 mul (-9 idiv sign(((n mod 7) idiv (n add (sign(x_0_2) mul abs(1)))))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 5 + 1 + 6 + 0 + 5 + 1 + 4 + 0 + 3 + 1 + 2 + 0 + 1 + 1 + 0 + 0 + 1", "x2": "abs sub x_0_2 sign INT+ 7", "tree": "abs((x_0_2 sub sign(7)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 - 5 - 9 - 3 + 8 + 2 + 5 + 9 + 3 + 8 + 2 + 5 + 9 + 3 + 8 + 2 + 5 + 9 + 3 + 8 + 2", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 9 + 2 + 4 - 100 - 90 - 20 - 40 + 1000 + 900 + 200 + 400 - 1 0 - 9000 - 2000 - 4000 + 10 0 + 9 0 + 2 0 + 4 0 - 100 0 - 90 0 - 20 0 - 40 0 + 1000 0 + 900 0 + 200 0 + 400 0 - 1 0 0", "x2": "mul add INT- 4 INT- 6 x_0_4", "tree": "((-4 add -6) mul x_0_4)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 10 + 3 - 11 + 9 - 17 + 19 - 25 - 3 - 23 + 15 - 35 + 7 - 35 + 13 - 38 + 8 - 40 + 13 - 47 + 13 - 56 + 20 - 60 + 15 - 71 + 29 - 99", "x2": "sub mul sign add INT+ 8 sub x_0_3 mod INT- 7 x_0_3 x_0_2 mod n x_0_1", "tree": "((sign((8 add (x_0_3 sub (-7 mod x_0_3)))) mul x_0_2) sub (n mod x_0_1))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 10 - 2 - 2 - 8 + 4 + 6 + 54 + 79 + 98 + 113 + 4 + 6 + 54 + 79 + 98 + 113 + 4 + 6 + 54 + 79 + 98 + 113 + 4 + 6 + 54 + 79 + 98 + 113 + 4 + 6", "x2": "mod x_0_6 sqr abs abs n", "tree": "(x_0_6 mod (abs(abs(n)))**2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 6 - 8 + 9 - 2 + 15 + 5 + 7 + 14 + 17 + 25 + 29 + 38 + 43 + 53 + 59 + 70 + 77 + 89 + 97 + 110 + 119 + 133 + 143 + 158 + 169 + 185 + 197 + 214 + 227", "x2": "add idiv n sign mod x_0_1 x_0_5 x_0_2", "tree": "((n idiv sign((x_0_1 mod x_0_5))) add x_0_2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 9 - 9 - 9 - 8 - 7 - 7 - 5 - 4 - 7 - 8 - 7 - 4 + 1 - 5 + 3 - 2 - 7 + 5 + 1 - 3 - 7 + 10 + 7 + 4 + 1", "x2": "add mod idiv n n INT- 1 0 relu mod add sqr INT+ 9 n mod INT- 1 n", "tree": "(((n idiv n) mod -10) add relu((((9)**2 add n) mod (-1 mod n))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 5 + 7 - 4 + 8 - 3 + 9 - 2 + 10 - 1 + 11 + 0 + 12 + 1 + 13 + 2 + 14 + 3 + 15 + 4 + 16 + 5 + 17 + 6 + 18 + 7 + 19", "x2": "add x_0_2 sign abs add x_0_2 INT- 3", "tree": "(x_0_2 add sign(abs((x_0_2 add -3))))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 1 - 10 + 0 + 5 + 0 + 0 + 1 + 0 + 0 + 11 + 0 + 0 + 1 + 0 + 0 + 17 + 0 + 0 + 1 + 0 + 0 + 23 + 0 + 0 + 1 + 0 + 0", "x2": "relu abs idiv n relu x_0_3", "tree": "relu(abs((n idiv relu(x_0_3))))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 6 + 10 + 7 + 6 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340 - 245 + 2 406 - 340", "x2": "sub x_0_3 mul x_0_2 mul relu x_0_3 relu x_0_5", "tree": "(x_0_3 sub (x_0_2 mul (relu(x_0_3) mul relu(x_0_5))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 + 3 + 1 - 3 + 9 - 9 + 9 - 186 + 22 - 105 + 15 - 194 - 16 + 329 - 761 + 96 - 493 + 75 - 892 - 54 + 1511 - 3052 + 388 - 2008 + 307 - 3621 - 212 + 6132 - 1 2212 + 1553 - 8047 + 1231", "x2": "sub idiv add n mul n mul mul INT- 4 INT+ 6 n x_0_1 mul x_0_7 INT- 4", "tree": "(((n add (n mul ((-4 mul 6) mul n))) idiv x_0_1) sub (x_0_7 mul -4))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 + 7 - 30 + 28 - 150 + 168 - 1050 + 1344 - 9450 + 1 3440 - 10 3950 + 16 1280 - 135 1350 + 225 7920 - 2027 250 + 3612 6720 - 3 4459 4250 + 6 5028 960 - 65 4729 750 + 130 561 9200 - 1374 9310 5750 + 2861 2362 2400 - 3 1623 4143 2250 + 6 8669 6693 7600 - 79 585 3580 6250 + 178 5411 4037 7600 - 2134 5804 6676 8750", "x2": "mul x_0_2 add n mod add relu INT+ 2 n sign INT+ 6", "tree": "(x_0_2 mul (n add ((relu(2) add n) mod sign(6))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 6 + 15 + 1 + 24 + 12 + 37 + 27 + 54 + 46 + 75 + 69 + 100 + 96 + 129 + 127 + 162 + 162 + 199 + 201 + 240 + 244 + 285 + 291 + 334 + 342", "x2": "mul sub x_0_1 add x_0_1 sub x_0_1 mul n n sign idiv abs n INT+ 3", "tree": "((x_0_1 sub (x_0_1 add (x_0_1 sub (n mul n)))) mul sign((abs(n) idiv 3)))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 - 6 + 10 + 2 - 4 + 6 + 8 + 4 + 10 + 18 + 22 + 32 + 50 + 72 + 104 + 154 + 226 + 330 + 484 + 710 + 1040 + 1524 + 2234 + 3274 + 4798 + 7032 + 1 306 + 1 5104", "x2": "add x_0_1 x_0_3", "tree": "(x_0_1 add x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 - 9 + 5 - 1 + 1 - 4 + 10 + 4 + 7 + 2 + 16 + 10 + 14 + 9 + 23 + 17 + 22 + 17 + 31 + 25 + 31 + 26 + 40 + 34 + 41 + 36 + 50 + 44 + 52", "x2": "sub add INT+ 3 x_0_4 idiv n add sqr abs idiv INT- 2 INT- 6 INT- 4", "tree": "((3 add x_0_4) sub (n idiv ((abs((-2 idiv -6)))**2 add -4)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 10 + 10 + 1 - 1 - 6 - 6 - 2 - 7 + 0 + 10 + 3 - 9 + 11 + 2 + 0 - 6 - 5 - 2 - 5 + 1 + 10 + 3 - 8 + 12 + 3 + 1 - 6 - 4 - 2 - 4 + 2 + 10 + 3 - 7 + 13", "x2": "add abs idiv x_0_7 INT+ 8 x_0_11", "tree": "(abs((x_0_7 idiv 8)) add x_0_11)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 2 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2", "x2": "mod sub n sign mul INT+ 1 relu x_0_2 INT+ 4", "tree": "((n sub sign((1 mul relu(x_0_2)))) mod 4)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 20 + 60 + 240 + 1200 + 7200 + 5 400 + 40 3200 + 362 8800 + 3628 8000 + 3 9916 8000 + 47 9001 6000 + 622 7020 8000 + 8717 8291 2000 + 13 767 4368 0 + 209 2278 9888 0 + 3556 8742 8096 0 + 6 4023 7370 5728 0 + 121 6451 40 8832 0 + 2432 9020 817 6640 0 + 5 1090 9421 7170 9440 0 + 112 4000 7277 7760 7680 0 + 2585 2016 7388 8497 6640 0 + 6 2044 8401 7332 3943 9360 0 + 155 1121 43 3309 8598 4000 0 + 4032 9146 1126 6056 3558 4000 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 + 5 + 993 + 956 + 21 8455 + 23 8994 + 6160 4303 + 7552 2096 + 216 8471 4647 + 294 5361 7430 + 9 3244 2729 8199 + 13 9021 742 6948 + 4811 4044 8587 671 + 7812 9843 7394 4762 + 293 4956 7363 8110 9295 + 515 6569 6868 354 2904 + 20 8968 9196 3033 4981 8023 + 39 4993 2380 915 1386 4446 + 1 7177 2451 9361 3535 5041 4887 + 3 4759 4049 4480 5322 71 2460 + 1614 6610 4819 9672 3373 8999 3759 + 3482 8923 7546 9493 2651 1388 4898 + 172 1228 6773 8085 711 6577 3334 7071 + 394 2634 1690 3146 6376 1089 1770 4512 + 20 6547 4412 8570 2085 3989 2800 1648 5175 + 50 714 5394 6699 6229 7658 3254 8473 214 + 2 7718 6666 2054 1219 8605 3613 7821 2310 4823", "x2": "sub relu mul abs x_0_2 sub sqr add n INT+ 1 0 n n", "tree": "(relu((abs(x_0_2) mul (((n add 10))**2 sub n))) sub n)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 1 + 0 + 2 + 3 - 4 - 2 + 1 + 3 - 10 - 7 - 3 + 0 - 12 - 8 - 3 - 6 - 17 - 12 - 6 - 8 - 18 - 12 - 12 - 13 - 22 - 15 - 14 - 14 - 22", "x2": "sub add mod mod sub n sign INT+ 6 INT- 7 INT- 1 0 add x_0_4 n n", "tree": "(((((n sub sign(6)) mod -7) mod -10) add (x_0_4 add n)) sub n)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 5 + 10 - 10 - 4 + 8 + 6 - 9 + 3 - 14 + 0 - 21 - 16 - 5 - 8 - 24 - 13 - 31 - 18 - 40 - 36 - 26 - 30 - 47 - 37 - 56 - 44 - 67 - 64 - 55 - 60 - 78 - 69 - 89", "x2": "sub x_0_8 n", "tree": "(x_0_8 sub n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 2 + 4 - 8 - 5 + 6 + 1 + 14 + 12 + 2 + 8 - 4 - 1 + 10 + 5 + 18 + 16 + 6 + 12 + 0 + 3 + 14 + 9 + 22 + 20 + 10 + 16 + 4 + 7", "x2": "add abs sub INT- 7 sub sub n sign abs n x_0_4 INT- 8", "tree": "(abs((-7 sub ((n sub sign(abs(n))) sub x_0_4))) add -8)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 1 - 9 + 0 + 9 + 19 + 18 + 9 + 9 + 18 + 37 + 55 + 64 + 73 + 91 + 128 + 183 + 247 + 320 + 411 + 539 + 722 + 969 + 1289 + 1700 + 2239 + 2961 + 3930 + 5219 + 6919", "x2": "abs add abs x_0_1 x_0_5", "tree": "abs((abs(x_0_1) add x_0_5))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 7 - 4 + 10 - 8 + 2 + 6 + 2 - 15 - 13 + 0 - 19 - 10 - 7 - 12 - 30 - 29 - 17 - 37 - 29 - 27 - 33 - 52 - 52 - 41 - 62 - 55 - 54 - 61 - 81 - 82 - 72 - 94", "x2": "sub x_0_7 relu abs n", "tree": "(x_0_7 sub relu(abs(n)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 - 1 - 1 + 30 + 44 + 53 + 93 + 116 + 134 + 183 + 215 + 242 + 300 + 341 + 377 + 444 + 494 + 539 + 615 + 674 + 728 + 813 + 881 + 944 + 1038 + 1115 + 1187 + 1290", "x2": "add mul n INT+ 9 x_0_3", "tree": "((n mul 9) add x_0_3)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 3 - 2 - 10 + 3 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign idiv x_0_4 mod x_0_5 sub mul n sqr INT+ 4 n", "tree": "sign((x_0_4 idiv (x_0_5 mod ((n mul (4)**2) sub n))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 5 - 8 + 2646 + 103 7732 + 4 677 8175 + 1594 5081 8664 + 62 5018 7346 9518 + 2 4499 4587 9350 2192 + 960 3225 3301 9163 4042 + 37 6421 9334 8471 8552 2980 + 1 4754 6834 3781 4646 1703 4131 + 578 3384 2013 315 9636 5110 4020 + 22 6689 4796 261 4698 7112 1133 2552 + 8885 4179 2663 4313 7471 3037 2690 4524 + 348 2743 7930 2124 7066 8270 3927 7658 5540 + 13 6509 3400 1775 270 1176 2453 1087 9105 9696 + 5350 5740 6225 996 9766 952 1021 9688 9344 7046 + 209 7179 3155 9035 8864 3447 2051 6455 8479 9216 7898 + 8 2199 2630 8042 3790 5880 5748 6155 1275 39 5432 2525 + 3221 7916 7688 9494 5192 7898 4513 1777 684 5902 5107 2220 + 126 2769 7188 8821 2961 5971 2700 8444 7353 1584 2953 7953 7600 + 4 9493 4850 3872 8791 2066 6496 4965 1046 3342 5982 8032 5515 732 + 1939 8541 7648 2824 3263 2009 9287 4201 5934 1175 8820 822 8972 2508 + 76 304 528 1717 4186 8185 8292 4752 7862 1062 723 3884 9794 4760 5936 + 2 9799 692 3499 2021 624 7265 402 906 6905 7979 4171 2409 8862 1846 4575 + 1167 9258 3495 7954 7603 6035 5064 2015 1850 2658 317 6318 3665 9320 35 9418 + 45 7746 4698 1658 3787 6043 9050 9010 9096 823 5491 9067 4176 1978 4162 4234 8684", "x2": "mul n abs sub sub x_0_2 idiv mul sqr INT+ 7 add INT+ 1 0 mul x_0_1 INT+ 8 n INT- 5", "tree": "(n mul abs(((x_0_2 sub (((7)**2 mul (10 add (x_0_1 mul 8))) idiv n)) sub -5)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 3 - 8 - 3 + 2 + 8 + 2 + 2 + 3 + 8 + 3 + 2 + 8 + 2 + 2 + 3 + 8 + 3 + 2 + 8 + 2 + 2 + 3 + 8 + 3 + 2 + 8 + 2 + 2 + 3 + 8 + 3", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 7 - 6 + 8 - 7 - 3 + 13 + 13 + 16 + 16 + 13 + 24 + 25 + 29 + 30 + 28 + 40 + 42 + 47 + 49 + 48 + 61 + 64 + 70 + 73 + 73 + 87 + 91 + 98 + 102 + 103", "x2": "add abs x_0_5 n", "tree": "(abs(x_0_5) add n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 1 + 4 + 4 + 9 + 6 + 6 + 1 + 4 + 4 + 9 + 6 + 6 + 1 + 4 + 4 + 9 + 6 + 6 + 1 + 4 + 4 + 9 + 6 + 6 + 1 + 4 + 4", "x2": "relu sub relu INT+ 1 0 x_0_3", "tree": "relu((relu(10) sub x_0_3))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 + 10 - 8 + 3 - 10 + 8 - 3 + 10 - 8 + 3 - 10 + 8 - 3 + 10 - 8 + 3 - 10 + 8 - 3 + 10 - 8 + 3 - 10 + 8 - 3 + 10 - 8 + 3", "x2": "idiv x_0_3 sign mul sub sign mod n mul x_0_1 n INT- 4 INT- 5", "tree": "(x_0_3 idiv sign(((sign((n mod (x_0_1 mul n))) sub -4) mul -5)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 10 + 10 - 6 - 2 - 6 + 63 + 70 + 70 - 42 - 14 - 42 + 441 + 490 + 490 - 294 - 98 - 294 + 3087 + 3430 + 3430 - 2058 - 686 - 2058 + 2 1609 + 2 4010 + 2 4010 - 1 4406 - 4802 - 1 4406 + 15 1263", "x2": "mul mod mod INT- 3 INT- 7 INT+ 1 0 x_0_6", "tree": "(((-3 mod -7) mod 10) mul x_0_6)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 1 - 4 + 10 - 1 + 8 + 11 + 10 + 34 + 49 + 96 + 185 + 335 + 645 + 1209 + 2280 + 4314 + 8133 + 1 5367 + 2 9018 + 5 4793 + 10 3487 + 19 5426 + 36 9068 + 69 6994 + 131 6276 + 248 5820 + 469 4511 + 886 5670 + 1674 2990", "x2": "add add add INT- 6 relu sqr sqr INT- 1 x_0_5 add x_0_1 add relu x_0_3 x_0_2", "tree": "(((-6 add relu(((-1)**2)**2)) add x_0_5) add (x_0_1 add (relu(x_0_3) add x_0_2)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 1 - 4 + 12 + 0 + 24 + 70 + 0 + 0 + 408 + 0 + 0 + 4060 + 0 + 0 + 4 8696 + 0 + 0 + 63 3022 + 0 + 0 + 379 8120 + 0 + 0 + 2658 6826 + 0 + 0 + 4 7856 2832", "x2": "relu mul sub n mod x_0_3 add n add INT- 4 x_0_2 add x_0_3 INT- 2", "tree": "relu(((n sub (x_0_3 mod (n add (-4 add x_0_2)))) mul (x_0_3 add -2)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 4 + 729 + 1089 + 1936 + 2916 + 3844 + 5041 + 5476 + 6724 + 8649 + 1 1449 + 1 3456 + 1 3924 + 1 4884 + 2 449 + 2 1609 + 2 1316 + 2 8224 + 2 7889 + 2 9241 + 3 4596 + 4 804 + 4 2849 + 5 176 + 4 4100 + 5 5696", "x2": "sqr sub mod abs sub add x_0_2 INT- 2 sign x_0_1 n mul n INT+ 9", "tree": "(((abs(((x_0_2 add -2) sub sign(x_0_1))) mod n) sub (n mul 9)))**2", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 + 4 - 11 + 1 - 14 - 2 - 17 - 5 - 20 - 8 - 23 - 11 - 26 - 14 - 29 - 17 - 32 - 20 - 35 - 23 - 38 - 26 - 41 - 29 - 44 - 32", "x2": "sub mul INT- 2 sub add n x_0_1 sign sign sign INT+ 8 sub n x_0_1", "tree": "((-2 mul ((n add x_0_1) sub sign(sign(sign(8))))) sub (n sub x_0_1))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 + 0 + 7 + 4 + 0 + 49 + 16 + 0 + 49 + 2116 + 0 + 2401 + 2209 + 0 + 3 4969 + 575 5201 + 0 + 12 2283 961 + 12 2269 1089 + 0 + 195 6277 7689 + 149 5315 5542 8885 9681 + 0 + 3 8270 2270 9092 3618 721 + 3 8270 2270 8309 8506 9969 + 0 + 61 2323 6333 1392 5889 8009 + 14 6461 281 5908 6401 4812 9349 6588 4740 2735 6961", "x2": "sqr sub mod abs add idiv x_0_4 INT- 1 x_0_3 sub x_0_2 INT- 5 x_0_4", "tree": "(((abs(((x_0_4 idiv -1) add x_0_3)) mod (x_0_2 sub -5)) sub x_0_4))**2", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 2 + 0 + 8 + 10 + 9 + 1294 + 1764 + 2312 + 2926 + 3609 + 5650 + 6948 + 8396 + 9982 + 1 1709 + 1 4866 + 1 7352 + 2 60 + 2 2978 + 2 6109 + 3 742 + 3 4776 + 3 9104 + 4 3714 + 4 8609 + 5 5078 + 6 1020 + 6 7328 + 7 3990 + 8 1009", "x2": "add x_0_5 sqr mul n INT- 6", "tree": "(x_0_5 add ((n mul -6))**2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 4 + 6 + 1 + 6 - 8 - 9 - 7 + 46 + 61 + 85 + 25 + 10 - 6 + 2 - 16 + 233 - 19 + 300 + 45 + 365 + 41 + 16 - 10 + 4 - 24 + 643 - 27 + 750", "x2": "sub mod mod x_0_1 x_0_3 sqr n add abs n abs INT+ 3", "tree": "(((x_0_1 mod x_0_3) mod (n)**2) sub (abs(n) add abs(3)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 5 + 5 + 5 + 6 + 6 + 7 + 11 + 11 + 17 + 20 + 20 + 30 + 38 + 44 + 48 + 50 + 50 + 67 + 83 + 98 + 112 + 125 + 137 + 148 + 158", "x2": "add mod sqr INT+ 6 n x_0_1", "tree": "(((6)**2 mod n) add x_0_1)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 + 5 - 6 - 4 - 3 - 13 - 42 - 66 - 111 - 153 - 218 - 282 - 371 - 461 - 578 - 698 - 847 - 1001 - 1186 - 1378 - 1603 - 1837 - 2106 - 2386 - 2703 - 3033 - 3402", "x2": "sub INT+ 3 mod sub sqr n sub add x_0_2 n relu INT- 1 abs mul x_0_1 n", "tree": "(3 sub (((n)**2 sub ((x_0_2 add n) sub relu(-1))) mod abs((x_0_1 mul n))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 4 + 3 + 6 + 7 + 8 + 7 + 10 + 9 + 15 + 16 + 20 + 13 + 26 + 27 + 30 + 37 + 52 + 31 + 42 + 23 + 28 + 39 + 62 + 47 + 33", "x2": "add mod mul sub x_0_1 INT+ 1 0 relu sqr INT- 2 relu x_0_1 n", "tree": "((((x_0_1 sub 10) mul relu((-2)**2)) mod relu(x_0_1)) add n)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 3 + 2 + 9 + 24 + 95 + 286 + 1045 + 3332 + 1 1691 + 3 8346 + 13 1873 + 43 8640 + 149 3623 + 500 2742 + 1695 1725 + 5697 3660 + 1 9258 7459 + 6 4837 6738 + 21 8907 6409 + 73 7609 312 + 248 8870 1583 + 838 9742 4078 + 2830 703 6741 + 9541 8642 9364 + 3 2182 4272 3291 + 10 8517 3415 8202 + 36 5976 7594 4529 + 123 4115 4921 144", "x2": "add abs sub sign mul x_0_4 n mul x_0_2 INT+ 8 x_0_1", "tree": "(abs((sign((x_0_4 mul n)) sub (x_0_2 mul 8))) add x_0_1)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 5 + 2 - 9 + 6 + 5 - 2 + 9 - 6 - 5 + 2 - 9 + 6 + 5 - 2 + 9 - 6 - 5 + 2 - 9 + 6 + 5 - 2 + 9 - 6 - 5 + 2 - 9 + 6 + 5", "x2": "sub mod n sign INT+ 1 0 x_0_4", "tree": "((n mod sign(10)) sub x_0_4)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 9 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0 + 2 + 3 + 0", "x2": "abs relu mod x_0_3 add abs INT+ 8 x_0_2", "tree": "abs(relu((x_0_3 mod (abs(8) add x_0_2))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 + 10 - 8 + 3 - 2 + 4 - 14 + 28 - 18 + 6 - 4 + 8 - 26 + 45 - 26 + 9 - 6 + 12 - 38 + 63 - 35 + 12 - 8 + 16 - 50 + 81 - 44", "x2": "idiv mul abs n abs x_0_1 x_0_2", "tree": "((abs(n) mul abs(x_0_1)) idiv x_0_2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 34 + 135 + 584 + 2975 + 1 7916 + 12 5489 + 100 4000 + 903 6099 + 9036 1100 + 9 9397 2221 + 119 2766 6784 + 1550 5966 8335 + 2 1708 3535 6844 + 32 5625 3035 2825 + 521 4 8564 5376 + 8857 82 5597 1579 + 15 9426 1486 748 8620 + 302 9096 8235 4228 3989 + 6058 1936 4708 4568 0 + 12 7222 665 8877 5928 231 + 279 8885 4649 5307 416 5324 + 6437 4365 6939 2061 9580 2705 + 15 4498 4776 6540 9486 9926 5184 + 386 2461 9416 3523 7174 8162 9875 + 1 42 4010 4825 1616 6545 2237 7036", "x2": "add add n n mul sub x_0_1 add INT- 2 INT- 7 abs n", "tree": "((n add n) add ((x_0_1 sub (-2 add -7)) mul abs(n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 - 1 - 2 - 1 + 0 - 2 - 1 - 1 + 0 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1", "x2": "mod mod mod INT- 5 INT- 2 relu n idiv n INT- 5", "tree": "(((-5 mod -2) mod relu(n)) mod (n idiv -5))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 3 + 10 + 8 + 0 - 16 + 0 + 32 + 0 - 64 + 0 + 128 + 0 - 256 + 0 + 512 + 0 - 1024 + 0 + 2048 + 0 - 4096 + 0 + 8192 + 0 - 1 6384 + 0 + 3 2768", "x2": "mul INT- 8 idiv x_0_2 add INT+ 4 x_0_1", "tree": "(-8 mul (x_0_2 idiv (4 add x_0_1)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 49 + 343 - 2408 + 1 6842 - 11 7915 + 82 5377 - 577 7674 + 4044 3676 - 2 8310 5781 + 19 8174 411 - 138 7218 2940 + 971 528 510 - 6797 3696 3647 + 4 7581 5874 5445 - 33 3071 1121 8206 + 233 1497 7852 7344 - 1632 484 4969 1513 + 1 1424 3391 4784 479 - 7 9970 3740 3488 3472 + 55 9792 6182 4418 4178 - 391 8548 3277 928 9379 + 2742 9838 2939 6502 5513 - 1 9200 8868 577 5517 8738 + 13 4406 2076 4042 8625 1012 - 94 843 4534 8300 375 7245", "x2": "mul INT- 7 add mod sub n INT+ 3 n x_0_1", "tree": "(-7 mul (((n sub 3) mod n) add x_0_1))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 5 + 4 + 8 - 2 + 4 - 1 + 0 + 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_5 n", "tree": "(x_0_5 idiv n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 10 + 7 - 3 - 100 - 102 - 105 - 103 - 104 - 100 - 103 - 101 - 102 - 104 - 101 - 105 - 100 - 102 - 105 - 103 - 104 - 100 - 103 - 101 - 102 - 104 - 101 - 105 - 100", "x2": "add mod x_0_4 INT- 6 mul sign INT- 3 relu sqr INT- 1 0", "tree": "((x_0_4 mod -6) add (sign(-3) mul relu((-10)**2)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15 - 32 - 34 - 36 - 38 - 40 - 42 - 44 - 46 - 72 - 75", "x2": "mul idiv add INT- 7 n INT- 8 n", "tree": "(((-7 add n) idiv -8) mul n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675", "x2": "sub abs sqr idiv n sign add mul relu INT- 2 x_0_1 n INT+ 1", "tree": "(abs(((n idiv sign(((relu(-2) mul x_0_1) add n))))**2) sub 1)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 1 + 10 - 8 + 5 + 6 + 70 + 64 + 45 + 60 + 770 + 768 + 585 + 840 + 1 1550 + 1 2288 + 9945 + 1 5120 + 21 9450 + 24 5760 + 20 8845 + 33 2640 + 504 7350 + 589 8240 + 522 1125 + 864 8640 + 1 3627 8450 + 1 6515 720 + 1 5141 2625", "x2": "abs mul x_0_4 mul n idiv sign add idiv idiv n n sqr n relu n INT- 1", "tree": "abs((x_0_4 mul (n mul (sign((((n idiv n) idiv (n)**2) add relu(n))) idiv -1))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 7 + 1 - 5 - 7 - 3 + 5 - 4 - 190 - 216 - 290 - 358 - 414 - 464 - 571 - 1215 - 1385 - 1705 - 2013 - 2291 - 2557 - 3000 - 5060 - 5704 - 6804 - 7874 - 8860 - 9816 - 1 1309 - 1 7659 - 1 9767 - 2 3249 - 2 6647", "x2": "mod n mul INT- 3 add sub INT- 5 x_0_7 sqr n", "tree": "(n mod (-3 mul ((-5 sub x_0_7) add (n)**2)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 7 - 8 - 1 - 9 + 9 + 10 + 10 + 10 + 10 - 10 - 10 - 10 - 10 - 10 + 10 + 10 + 10 + 10 + 10 - 10 - 10 - 10 - 10 - 10 + 10 + 10 + 10 + 10 + 10 - 10", "x2": "mul sub sub relu n n sign x_0_5 INT+ 1 0", "tree": "(((relu(n) sub n) sub sign(x_0_5)) mul 10)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 4 + 18 - 4 + 97 + 0 + 686 + 93 + 6192 + 1557 + 6 8261 + 2 4380 + 88 9276 + 40 4847 + 1336 6137 + 731 2943 + 2 2765 4510 + 1 4428 454 + 43 3302 9406 + 31 226 558 + 911 4134 4227 + 723 9252 657 + 2 993 9841 8127 + 1 8248 9542 9864 + 52 5579 5627 377 + 49 4687 4103 3024 + 1420 8969 9489 4002", "x2": "add idiv add x_0_1 add mul mul x_0_2 n n mod sign INT- 1 n n INT+ 7", "tree": "(((x_0_1 add (((x_0_2 mul n) mul n) add (sign(-1) mod n))) idiv n) add 7)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 + 5 - 6 - 4 - 4 - 1 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 0 + 1", "x2": "idiv sub INT+ 9 x_0_6 mul sqr INT- 3 idiv n add n mod n sub sub n INT+ 9 INT- 9", "tree": "((9 sub x_0_6) idiv ((-3)**2 mul (n idiv (n add (n mod ((n sub 9) sub -9))))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 6 + 12 + 24 + 48 + 96 + 192 + 384 + 768 + 1536 + 3072 + 6144 + 1 2288 + 2 4576 + 4 9152 + 9 8304 + 19 6608 + 39 3216 + 78 6432 + 157 2864 + 314 5728 + 629 1456 + 1258 2912 + 2516 5824 + 5033 1648 + 1 66 3296", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 4 + 8 + 12 + 16 + 32 + 48 + 64 + 128 + 192 + 256 + 512 + 768 + 1024 + 2048 + 3072 + 4096 + 8192 + 1 2288 + 1 6384 + 3 2768 + 4 9152 + 6 5536 + 13 1072 + 19 6608 + 26 2144 + 52 4288 + 78 6432", "x2": "mul INT+ 4 abs x_0_3", "tree": "(4 mul abs(x_0_3))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 + 8 + 2 - 9 - 5 + 7 - 8 - 2 + 18 + 10 - 14 + 16 + 6 - 54 - 30 + 42 - 64 - 24 + 216 + 120 - 210 + 320 + 120 - 1080 - 720 + 1260 - 1920 - 720 + 7560 + 5040", "x2": "mul idiv add add abs n sign sign INT+ 2 INT- 5 INT- 4 x_0_5", "tree": "((((abs(n) add sign(sign(2))) add -5) idiv -4) mul x_0_5)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 7 - 10 - 8 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr sub idiv INT+ 3 n add abs mod n mul INT+ 1 0 n sign relu x_0_3", "tree": "(((3 idiv n) sub (abs((n mod (10 mul n))) add sign(relu(x_0_3)))))**2", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 6 + 3 + 4 + 0 + 0 + 7 + 0 + 0 + 10 + 1 + 0 + 0 + 14 + 1 + 0 + 0 + 18 + 1 + 0 + 0 + 22 + 1 + 0 + 0 + 26 + 1", "x2": "mod n sub idiv sign INT+ 8 sign x_0_1 add x_0_1 sub x_0_2 n", "tree": "(n mod ((sign(8) idiv sign(x_0_1)) sub (x_0_1 add (x_0_2 sub n))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 + 14 + 20 + 10 + 10 + 10 + 10 + 10 + 11 + 13 + 15 + 16 + 10 + 10 + 17 + 17 + 11 + 14 + 24 + 16 + 10 + 18 + 25 + 17 + 11 + 22", "x2": "add relu sub sub mod x_0_1 INT+ 8 sub idiv x_0_1 x_0_1 n x_0_2 INT+ 1 0", "tree": "(relu((((x_0_1 mod 8) sub ((x_0_1 idiv x_0_1) sub n)) sub x_0_2)) add 10)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 9 - 6 + 9 - 4 - 2 - 10 - 5 - 3 + 4 - 885 - 664 + 1037 - 513 + 596 - 794 - 1829 + 4 + 66 - 15 8522 - 12 4573 + 20 4636 - 10 5243 + 28 6721 - 5 3506 - 63 3442 + 10 4359 - 27 113 - 4132 699 - 3315 9820 + 5686 4481 - 2983 5267 + 1 2637 1560 + 1707 3671 - 2 5645 2252", "x2": "sub mul mul x_0_9 n INT+ 9 add sub n x_0_10 x_0_4", "tree": "(((x_0_9 mul n) mul 9) sub ((n sub x_0_10) add x_0_4))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 7 + 0 - 9 + 3 - 1 + 8 + 7 + 9 + 0 + 11 + 0 + 26 + 28 + 225 + 128 + 68 + 18 + 114 + 20 + 84 + 22 + 0 + 0 + 0 + 52 + 0 + 28 + 0 + 90 + 186 + 96 + 198", "x2": "mul n idiv n abs sub mod mul sign INT- 5 x_0_4 n add x_0_8 INT- 5", "tree": "(n mul (n idiv abs((((sign(-5) mul x_0_4) mod n) sub (x_0_8 add -5)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 6 + 3 - 5 + 4 - 4 + 5 - 3 + 6 - 2 + 7 - 1 + 8 + 0 + 9 + 1 + 10 + 2 + 11 + 3 + 12 + 4 + 13 + 5 + 14 + 6 + 15", "x2": "add x_0_2 sqr sign x_0_1", "tree": "(x_0_2 add (sign(x_0_1))**2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 10 + 3 - 5 - 3 - 1 + 5 + 10 - 9 + 13 - 10 + 8 - 20 + 35 - 20 + 35 - 28 + 35 - 63 + 35 - 98 + 35 - 133 + 35 - 168 + 35 - 203 + 35 - 238 + 35 - 273 + 35 - 308 + 35", "x2": "add x_0_2 mul mul x_0_5 idiv abs INT- 3 x_0_8 sqr INT+ 1", "tree": "(x_0_2 add ((x_0_5 mul (abs(-3) idiv x_0_8)) mul (1)**2))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 1 - 8 + 9 + 2 + 4 - 6 + 18 - 2 - 16 + 18 + 4 + 8 - 12 + 36 - 4 - 32 + 36 + 8 + 16 - 24 + 72 - 8 - 64 + 72 + 16 + 32 - 48 + 144 - 16 - 128 + 144", "x2": "add x_0_7 x_0_7", "tree": "(x_0_7 add x_0_7)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 1 - 2 - 7 - 10 - 1 + 2 + 7 + 10 + 1 - 2 - 7 - 10 - 1 + 2 + 7 + 10 + 1 - 2 - 7 - 10 - 1 + 2 + 7 + 10 + 1 - 2 - 7 - 10", "x2": "sub relu add mod relu x_0_3 INT- 5 INT- 1 0 x_0_4", "tree": "(relu(((relu(x_0_3) mod -5) add -10)) sub x_0_4)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 6 + 4 + 4 + 7 + 1 + 12 + 2 + 2 - 1 + 5 - 6 + 4 + 4 + 7 + 1 + 12 + 2 + 2 - 1 + 5 - 6 + 4 + 4 + 7 + 1 + 12 + 2 + 2 - 1", "x2": "sub sub INT- 3 INT- 9 x_0_5", "tree": "((-3 sub -9) sub x_0_5)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 2 + 10 + 16 + 10 + 60 + 112 + 80 + 540 + 1120 + 880 + 6480 + 1 4560 + 1 2320 + 9 7200 + 23 2960 + 20 9440 + 174 9600 + 442 6240 + 418 8800 + 3674 1600 + 9737 7280 + 9634 2400 + 8 8179 8400 + 24 3443 2000 + 25 490 2400 + 238 855 6800 + 681 6409 6000", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 3 + 6 - 8 + 8 + 64 + 9 + 36 + 64 + 64 + 224 + 81 + 1296 + 960 + 496 + 1024 + 1937 + 0 + 3216 + 2816 + 4288 + 3873 + 0 + 2304 + 9856 + 1 560 + 225 + 0 + 6752 + 1 2736", "x2": "relu mod sqr x_0_5 sqr mul INT- 4 n", "tree": "relu(((x_0_5)**2 mod ((-4 mul n))**2))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 3 + 2 - 1 + 3 + 2 + 3 + 5 + 9 + 6 + 8 + 8 + 7 + 4 + 8 + 7 + 8 + 10 + 14 + 11 + 13 + 13 + 12 + 9 + 13 + 12 + 13 + 15 + 19 + 16", "x2": "abs sub add abs sign add sub x_0_2 n n add abs n INT- 1 0 add x_0_5 INT- 8", "tree": "abs(((abs(sign(((x_0_2 sub n) add n))) add (abs(n) add -10)) sub (x_0_5 add -8)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 7 - 2 + 9 + 0 - 9 - 6 + 0 + 3 - 1 + 0 + 0 - 1 - 1 + 0 + 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0", "x2": "idiv x_0_7 add INT+ 2 sqr mul add INT+ 4 INT+ 9 x_0_4", "tree": "(x_0_7 idiv (2 add (((4 add 9) mul x_0_4))**2))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 - 2 + 1 + 1 - 2 - 1 + 1 + 0 - 1 - 1 + 0 + 1 - 1 - 2 + 1 + 1 - 2 - 1 + 1 + 0 - 1 - 1 + 0 + 1 - 1 - 2 + 1", "x2": "sub mod sqr x_0_1 INT- 2 x_0_2", "tree": "(((x_0_1)**2 mod -2) sub x_0_2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 + 1 - 4 + 2 + 6 + 0 - 70 - 56 - 117 - 80 - 55 - 144 - 1079 - 980 - 1980 - 1536 - 1224 - 2916 - 2 862 - 2 0 - 4 2021 - 3 4276 - 2 8681 - 7 560 - 52 2175 - 52 676 - 113 5296 - 96 512 - 83 2590 - 211 7700 - 1618 8386", "x2": "mul sub x_0_6 relu n n", "tree": "((x_0_6 sub relu(n)) mul n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 1 - 8 + 4 + 32 - 16 - 128 + 64 + 512 - 256 - 2048 + 1024 + 8192 - 4096 - 3 2768 + 1 6384 + 13 1072 - 6 5536 - 52 4288 + 26 2144 + 209 7152 - 104 8576 - 838 8608 + 419 4304 + 3355 4432 - 1677 7216 - 1 3421 7728 + 6710 8864", "x2": "mul INT- 4 x_0_2", "tree": "(-4 mul x_0_2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 2 + 2 + 2 + 4 + 4 + 4 + 6 + 6 + 6 + 8 + 8 + 8 + 10 + 10 + 10 + 12 + 12 + 12 + 14 + 14 + 14 + 16 + 16", "x2": "mul INT+ 2 idiv n INT+ 3", "tree": "(2 mul (n idiv 3))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 - 2 - 2 - 8 - 36 - 28 - 16 - 18 - 80 - 396 - 336 - 208 - 252 - 1200 - 6336 - 5712 - 3744 - 4788 - 2 4000 - 13 3056 - 12 5664 - 8 6112 - 11 4912 - 60 0 - 345 9456 - 339 2928 - 241 1136 - 333 2448 - 1800 0", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 3 - 9 + 0 + 256 + 500 + 864 + 1372 + 2048 + 2916 + 4000 + 5324 + 6912 + 8788 + 1 976 + 1 3500 + 1 6384 + 1 9652 + 2 3328 + 2 7436 + 3 2000 + 3 7044 + 4 2592 + 4 8668 + 5 5296 + 6 2500 + 7 304 + 7 8732 + 8 7808", "x2": "idiv mul n mul mul n n INT- 4 sign idiv INT- 3 abs x_0_3", "tree": "((n mul ((n mul n) mul -4)) idiv sign((-3 idiv abs(x_0_3))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 10 + 1 - 5 + 9 + 6 - 4 + 2 + 7 + 1 + 5 + 286 - 24 + 52 - 252 - 210 - 1 2352 - 102 - 1224 - 2052 - 1080 - 594 5394 + 1012 + 6 5688 + 1 5120 + 1 4350 + 1280 8990 4332 + 5508 + 4393 8384 + 11 9306 + 16 8360 + 604 2025 7944 4331 4882 - 6 4768 - 1 9673 894 3358 - 102 8228 - 293 4190", "x2": "mul relu add n n sub idiv add sub INT- 2 INT- 1 0 add x_0_8 sqr x_0_5 x_0_1 x_0_10", "tree": "(relu((n add n)) mul ((((-2 sub -10) add (x_0_8 add (x_0_5)**2)) idiv x_0_1) sub x_0_10))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 80 + 240 + 160 + 600 + 1200 + 0 + 320 + 720 + 1200 + 1760 + 2400 + 3120 + 3920 + 4800 + 5760 + 6800 + 7920 + 9120 + 1 400 + 1 1760 + 1 3200 + 1 4720 + 1 6320 + 1 8000", "x2": "mul INT+ 5 relu relu mul mod INT- 7 n mul n INT+ 8", "tree": "(5 mul relu(relu(((-7 mod n) mul (n mul 8)))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 1 - 8 - 9 - 6 + 7 - 8 - 32 + 36 + 24 - 28 + 32 - 128 - 144 - 96 - 112 + 128 + 512 - 576 + 384 + 448 - 512 - 2048 - 2304 + 1536 - 1792 - 2048 - 8192 + 9216 - 6144 + 7168 - 8192", "x2": "mul x_0_5 idiv INT+ 4 sign x_0_7", "tree": "(x_0_5 mul (4 idiv sign(x_0_7)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 8 - 2 + 6 - 1 - 9 - 5 + 4 - 1 - 12 - 7 + 3 - 4 - 15 - 9 + 3 - 5 - 15 - 10 + 0 - 5 - 18 - 10 - 1 - 7 - 20 - 12 - 2 - 7 - 21", "x2": "add x_0_4 mod add relu mul abs mod x_0_2 INT- 4 mod x_0_1 INT+ 4 n INT- 4", "tree": "(x_0_4 add ((relu((abs((x_0_2 mod -4)) mul (x_0_1 mod 4))) add n) mod -4))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 5 - 2 + 4 - 8 + 6 - 9 + 32 - 45 - 20 + 44 - 96 + 78 - 126 + 480 - 720 - 340 + 792 - 1824 + 1560 - 2646 + 1 560 - 1 6560 - 8160 + 1 9800 - 4 7424 + 4 2120 - 7 4088 + 30 6240 - 49 6800 - 25 2960 + 63 3600", "x2": "mul x_0_7 n", "tree": "(x_0_7 mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 6 + 5 + 7 - 7 + 6 + 6 + 8 + 10 + 10 + 10 + 14 + 12 + 14 + 16 + 20 + 16 + 24 + 24 + 22 + 28 + 22 + 24 + 28 + 24 + 32 + 32 + 30 + 36 + 30", "x2": "add n mod n sub abs x_0_4 INT+ 4", "tree": "(n add (n mod (abs(x_0_4) sub 4)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 + 9 - 3 - 200 - 300 + 70 + 7960 + 1 3455 - 3550 - 43 7855 - 80 7360 + 23 685 + 3064 9780 + 6055 1925 - 1845 4880 - 26 523 1385 - 54 4967 3340 + 17 5321 3505 + 2605 2313 8400 + 5722 1570 595 - 1928 5348 5660 - 29 9601 6091 6115 - 68 6658 8407 1520 + 24 1066 8570 7375 + 3894 8209 1909 4820 + 9269 8943 4965 5065 - 3374 9359 9903 2640 - 56 4749 332 6874 9045", "x2": "mul mul INT- 5 add x_0_3 sign mul INT+ 8 idiv INT+ 5 abs x_0_4 n", "tree": "((-5 mul (x_0_3 add sign((8 mul (5 idiv abs(x_0_4)))))) mul n)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 9 + 6 + 9 - 6 + 2 - 4 + 16 + 10 + 16 + 19 + 16 + 12 + 20 + 11 + 20 + 26 + 11 + 26 + 22 + 30 + 21 + 30 + 12 + 21 + 10 + 32 + 12 + 31 + 10 + 22 + 31", "x2": "add sub mod x_0_7 n INT- 3 INT+ 7", "tree": "(((x_0_7 mod n) sub -3) add 7)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 - 7 - 1 + 1 - 31 - 43 - 50 - 63 - 112 - 143 - 171 - 207 - 281 - 339 - 396 - 463 - 570 - 663 - 757 - 863 - 1011 - 1147 - 1286 - 1439 - 1636 - 1823 - 2015 - 2223 - 2477", "x2": "add mod mod INT+ 1 0 INT- 1 sqr INT+ 5 sub x_0_4 sqr n", "tree": "(((10 mod -1) mod (5)**2) add (x_0_4 sub (n)**2))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 10 + 8 - 13 + 5 - 16 + 2 - 19 - 1 - 22 - 4 - 25 - 7 - 28 - 10 - 31 - 13 - 34 - 16 - 37 - 19 - 40 - 22 - 43 - 25 - 46 - 28 - 49", "x2": "add x_0_2 INT- 3", "tree": "(x_0_2 add -3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "idiv sub INT+ 7 INT+ 8 x_0_2", "tree": "((7 sub 8) idiv x_0_2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 10 - 2 - 10 + 4 + 7 - 9 - 9 + 10 - 11 + 12 + 8 + 7 + 11 + 15 - 5 + 38 + 14 + 37 + 38 + 42 + 27 + 75 + 32 + 99 + 77 + 105 + 92 + 145 + 88 + 204 + 140 + 236", "x2": "add mul sqr INT- 1 mod INT- 1 n add x_0_6 x_0_8", "tree": "(((-1)**2 mul (-1 mod n)) add (x_0_6 add x_0_8))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 1 - 2 - 2 - 1 + 1 + 4 + 8 + 13 + 19 + 26 + 34 + 43 + 53 + 64 + 76 + 89 + 103 + 118 + 134 + 151 + 169 + 188 + 208 + 229 + 251 + 274", "x2": "add add mul mod mod INT- 1 INT- 7 sub INT- 8 n abs INT- 3 x_0_1 n", "tree": "(((((-1 mod -7) mod (-8 sub n)) mul abs(-3)) add x_0_1) add n)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 9 - 5 + 1 + 3 - 2 + 10 + 6 + 0 - 2 + 3 - 9 - 5 + 1 + 3 - 2 + 10 + 6 + 0 - 2 + 3 - 9 - 5 + 1 + 3 - 2 + 10 + 6 + 0 - 2 + 3", "x2": "sub sign relu sign mod n mul n INT- 3 x_0_5", "tree": "(sign(relu(sign((n mod (n mul -3))))) sub x_0_5)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 9 - 7 + 12 - 7 - 60 + 65 - 60 - 520 + 525 - 520 - 5775 + 5780 - 5775 - 8 920 + 8 925 - 8 920 - 137 5725 + 137 5730 - 137 5725 - 2751 4600 + 2751 4605 - 2751 4600 - 6 3283 5915 + 6 3283 5920", "x2": "sub sub sub INT+ 5 relu mul n x_0_2 x_0_1 mul INT- 4 mod sqr x_0_1 sign sqr INT- 1", "tree": "(((5 sub relu((n mul x_0_2))) sub x_0_1) sub (-4 mul ((x_0_1)**2 mod sign((-1)**2))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 8 - 9 + 3 - 3 + 6 + 9 + 5 - 4 + 3 + 25 + 24 + 3 + 35 + 25 + 25 + 33 + 35 + 2 + 23 + 29 + 2 + 21 + 26 + 28 + 29 + 15 + 34 + 23 + 1 + 7 + 12", "x2": "relu mod sub add x_0_9 sub x_0_8 sign abs n x_0_4 abs sqr INT- 6", "tree": "relu((((x_0_9 add (x_0_8 sub sign(abs(n)))) sub x_0_4) mod abs((-6)**2)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11 - 12 - 12", "x2": "idiv mod x_0_1 n sub x_0_1 add mul sqr INT+ 1 x_0_1 sign abs x_0_1", "tree": "((x_0_1 mod n) idiv (x_0_1 sub (((1)**2 mul x_0_1) add sign(abs(x_0_1)))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 + 5 - 1 - 2 - 8 + 10 + 10 + 7 - 7 - 5 - 9 - 4 + 4 - 2 - 4 - 11 + 9 + 9 + 6 - 4 - 7 - 3 - 3 + 3 - 4 - 6 - 15 + 8 + 8 + 6 - 2 - 10 - 2 - 2", "x2": "add x_0_11 idiv add sub sign n abs x_0_9 x_0_11 x_0_8", "tree": "(x_0_11 add (((sign(n) sub abs(x_0_9)) add x_0_11) idiv x_0_8))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 1 + 1 - 9 + 10 + 2 - 1 - 4 + 1 + 1 + 9 + 10 + 2 + 1 + 4 + 1 + 1 + 9 + 10 + 2 + 1 + 4 + 1 + 1 + 9 + 10 + 2 + 1 + 4 + 1 + 1", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 9 - 5 - 3 + 13 + 22 - 20 - 104 + 192 + 25 - 17 - 1829 + 195 + 28 - 14 - 4556 + 422 + 31 - 11 - 6241 + 735 + 34 - 8 - 2 3878 + 806 + 37 - 5", "x2": "add x_0_4 sub INT+ 3 mul mod mul idiv INT- 6 x_0_3 add x_0_4 INT- 5 x_0_2 abs x_0_3", "tree": "(x_0_4 add (3 sub ((((-6 idiv x_0_3) mul (x_0_4 add -5)) mod x_0_2) mul abs(x_0_3))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 8 - 2 + 0 + 7 - 7 - 2 - 1 - 7 - 7 + 2 + 3 + 4 + 5 + 6 - 7 - 7 - 7 - 7 - 7 + 12 + 13 + 14 + 15 + 16 - 7 - 7 - 7", "x2": "add mod sign sign mul n x_0_5 n INT- 8", "tree": "((sign(sign((n mul x_0_5))) mod n) add -8)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 49 + 64 + 81 + 100 + 121 + 144 + 196 + 225 + 256 + 289 + 324 + 361 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr idiv mul n INT+ 7 INT+ 6", "tree": "(((n mul 7) idiv 6))**2", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 + 5 - 10 + 5 + 1 - 2 - 2 - 5 + 9 - 4 + 3 - 134 - 158 - 185 - 215 - 246 - 279 - 314 - 351 - 390 - 431 - 474 - 517 - 436 - 86 + 636 - 716 - 674 - 480 - 110 + 458 + 1247 + 2281 + 3442", "x2": "sub sub idiv relu sqr mod mul n n x_0_11 n INT- 1 0 mul n n", "tree": "(((relu((((n mul n) mod x_0_11))**2) idiv n) sub -10) sub (n mul n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 10 - 9 - 12 + 0 - 19 - 22 - 10 - 29 - 32 - 20 - 39 - 42 - 30 - 49 - 52 - 40 - 59 - 62 - 50 - 69 - 72 - 60 - 79 - 82 - 70", "x2": "add x_0_3 INT- 1 0", "tree": "(x_0_3 add -10)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 5 - 1 - 3 - 2 - 2 - 9 + 7 - 7 - 3 - 2 + 98 + 164 + 122 + 199 + 258 + 227 + 333 + 317 + 368 + 228 + 146 + 71 + 320 + 103 - 55 - 137 + 134 + 67 - 148 + 928 + 672 + 215 + 329", "x2": "sub sqr add n mod sub mod x_0_4 x_0_3 INT+ 2 sub add mod INT+ 6 add x_0_8 x_0_1 INT+ 4 n x_0_11", "tree": "(((n add (((x_0_4 mod x_0_3) sub 2) mod (((6 mod (x_0_8 add x_0_1)) add 4) sub n))))**2 sub x_0_11)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 1 - 8 - 2 - 6 - 4 + 9 + 5 + 7 - 10 + 1 - 6 + 4 + 1 + 64 + 16 + 0 + 0 + 81 + 25 + 0 + 0 + 1 + 36 + 16 + 1 + 0 + 256 + 0 + 0 + 6561 + 625 + 0 + 0 + 1 + 0", "x2": "sqr sub relu x_0_12 mul abs mod mul x_0_1 add n INT- 1 0 INT+ 3 x_0_12", "tree": "((relu(x_0_12) sub (abs(((x_0_1 mul (n add -10)) mod 3)) mul x_0_12)))**2", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 9 + 2 + 5 + 7 + 9 + 2 + 3 + 3 + 3 + 2 + 1 + 1 + 3 + 2 + 1 + 1 + 3 + 2 + 1 + 1 + 3 + 2 + 1 + 1 + 3 + 2 + 1 + 1 + 3", "x2": "add mod x_0_3 x_0_4 idiv x_0_6 x_0_6", "tree": "((x_0_3 mod x_0_4) add (x_0_6 idiv x_0_6))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 6 - 5 + 10 + 8 - 6 + 10 - 10 + 11 - 7 + 9 - 9 + 13 - 11 + 16 - 11 + 14 - 11 + 12 - 11 + 15 - 14 + 16 - 15 + 15 - 14 + 17 - 13 + 17", "x2": "sub abs mod x_0_6 abs INT+ 6 x_0_1", "tree": "(abs((x_0_6 mod abs(6))) sub x_0_1)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2", "x2": "mod n add mod INT+ 1 INT+ 5 idiv INT- 6 INT- 3", "tree": "(n mod ((1 mod 5) add (-6 idiv -3)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 4 + 3 - 5 - 5 + 8 - 4 + 3 - 11 - 18 - 25 - 40 - 47 - 49 - 68 - 63 - 96 - 98 - 138 - 155 - 202 - 221 - 287 - 301 - 400 - 416 - 555 - 588 - 774 - 826 - 1078", "x2": "add add INT- 7 sub x_0_2 add x_0_4 mul INT- 1 add x_0_4 x_0_8 INT- 1 0", "tree": "((-7 add (x_0_2 sub (x_0_4 add (-1 mul (x_0_4 add x_0_8))))) add -10)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 1 + 10 + 5 + 4 + 6 + 8 + 18 + 14 + 14 + 17 + 20 + 31 + 28 + 29 + 33 + 37 + 49 + 47 + 49 + 54 + 59 + 72 + 71 + 74 + 80 + 86 + 100", "x2": "sub n idiv relu x_0_5 idiv INT- 3 x_0_2", "tree": "(n sub (relu(x_0_5) idiv (-3 idiv x_0_2)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 2 + 4 - 3 - 9 - 6 + 1 + 3 + 6 + 8 + 4 - 10 - 5 + 11 + 93 + 66 + 316 + 356 + 15 + 104 + 3337 + 4131 + 4990 + 3 5284 + 19 + 1 2569 + 2886 1609 + 1799 1299 + 4 9827 7309 + 44 7174 8034 - 3 1009 + 1 3594 6285 + 321 3904 3845 7952 + 307 243 8517 2530 + 1 2407 1548 383 9601 + 556 7150 3653 7707 2995", "x2": "sub abs mul sqr x_0_12 x_0_6 x_0_7", "tree": "(abs(((x_0_12)**2 mul x_0_6)) sub x_0_7)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "- 2 + 2 - 10 + 16 + 0 + 160 + 0 + 1280 + 0 + 1 2800 + 0 + 15 3600 + 0 + 215 400 + 0 + 3440 6400 + 0 + 6 1931 5200 + 0 + 123 8630 4000 + 0 + 2724 9868 8000 + 0 + 6 5399 6851 2000 + 0 + 170 391 8131 2000", "x2": "relu mul x_0_2 add n mod sqr n sub n x_0_3", "tree": "relu((x_0_2 mul (n add ((n)**2 mod (n sub x_0_3)))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 5 - 2 - 8 - 3 - 10 + 10 - 15 - 60 + 0 - 105 - 540 + 0 + 0 - 1620 + 0 + 0 - 1 9440 + 0 + 0 - 36 9360 + 0 + 0 - 147 7440 + 0 + 0 - 443 2320 + 0 + 0 - 2216 1600", "x2": "mul x_0_3 mod add abs add x_0_6 mod sign x_0_5 sqr INT- 9 n n", "tree": "(x_0_3 mul ((abs((x_0_6 add (sign(x_0_5) mod (-9)**2))) add n) mod n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 9 + 5 - 3 + 1 + 0 + 1 + 2 + 0 + 0 + 0 + 3 + 0 + 1 + 3 + 3 + 3 + 2 + 3 + 0 + 2 + 2 + 2 + 1 + 2 + 3 + 1", "x2": "mod sub n x_0_3 INT+ 4", "tree": "((n sub x_0_3) mod 4)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 1 + 4 + 8 - 7 + 3 + 0 + 5 + 9 - 8 + 4 + 1 + 6 + 10 - 9 + 5 + 0 + 7 + 11 - 10 + 6 + 1 + 8 + 12 - 11 + 7 + 0 + 9", "x2": "add x_0_5 sign mul x_0_2 x_0_5", "tree": "(x_0_5 add sign((x_0_2 mul x_0_5)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 9 + 3 - 8 - 2 - 4 + 10 - 10 + 6 - 10 + 1 + 9 + 3 + 8 + 2 + 4 + 10 + 10 + 6 + 10 + 1 + 9 + 3 + 8 + 2 + 4 + 10 + 10 + 6 + 10 + 1 + 9 + 3", "x2": "abs x_0_10", "tree": "abs(x_0_10)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 4 + 10 - 6 + 5 + 6 - 4 + 9 - 8 + 2 + 2 - 9 + 3 - 15 - 6 - 7 - 19 - 8 - 27 - 19 - 21 - 34 - 24 - 44 - 37 - 40 - 54 - 45", "x2": "add INT+ 7 sub x_0_5 relu n", "tree": "(7 add (x_0_5 sub relu(n)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 + 3 + 8 + 4 + 7 + 2 + 7 + 7 + 6 + 4 + 5 + 6 + 7 + 8 + 1 + 8 + 7 + 4 + 5 + 8 + 3 + 7 + 6 + 8 + 7", "x2": "add sub INT+ 7 mod n x_0_1 abs sign x_0_2", "tree": "((7 sub (n mod x_0_1)) add abs(sign(x_0_2)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 2 + 10 + 5 + 9 - 5 + 4 + 4 + 10 + 5 + 20 + 12 + 15 + 8 + 14 + 0 + 9 + 7 + 15 + 10 + 25 + 17 + 20 + 13 + 19 + 5 + 14 + 12 + 20 + 15", "x2": "sub n add x_0_5 add add sign x_0_7 INT- 6 sign x_0_2", "tree": "(n sub (x_0_5 add ((sign(x_0_7) add -6) add sign(x_0_2))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 4 - 9 + 7 - 5 - 7 + 8 + 14 + 18 + 32 + 37 + 44 + 60 + 72 + 84 + 115 + 133 + 153 + 201 + 232 + 265 + 345 + 395 + 449 + 578 + 660 + 748 + 958 + 1091 + 1234", "x2": "sub abs x_0_6 sub INT- 8 sub n mul idiv sign INT- 1 INT+ 9 x_0_3", "tree": "(abs(x_0_6) sub (-8 sub (n sub ((sign(-1) idiv 9) mul x_0_3))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 1 - 5 + 3 - 7 - 8 + 8 + 49 + 64 + 0 + 100 + 121 + 0 + 1521 + 3136 + 225 + 9216 + 1 4161 + 324 + 225 3001 + 973 4400 + 4 4100 + 8456 6416 + 2 8 1025 + 9 7344 + 5 758 9635 625 + 94 7580 3717 1876 + 19 4401 6281 + 7151 4780 3855 3744 + 4 32 4085 6181 25", "x2": "sqr mul n idiv sub mod INT+ 3 INT- 2 sub relu INT+ 1 x_0_6 n", "tree": "((n mul (((3 mod -2) sub (relu(1) sub x_0_6)) idiv n)))**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 5 - 1 + 4 + 3 + 2 + 5 + 8 + 6 + 6 + 2 + 4 + 2 + 2 + 13 + 16 + 6 + 1 + 2 + 4 + 3 + 2 + 23 + 24 + 6 + 3", "x2": "sub n mod add mod n INT- 8 mod mod n mul x_0_2 x_0_2 x_0_3 n", "tree": "(n sub (((n mod -8) add ((n mod (x_0_2 mul x_0_2)) mod x_0_3)) mod n))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 - 8 + 5 - 9 + 6 - 7 + 2 - 2 + 5 + 6 + 7 + 8 - 5 + 9 - 6 + 7 - 2 + 2 - 5 - 6 - 7 - 8 + 5 - 9 + 6 - 7 + 2 - 2 + 5 + 6 + 7 + 8 - 5", "x2": "sub idiv idiv mul x_0_5 mod INT+ 1 sign x_0_4 sign x_0_3 INT+ 8 x_0_10", "tree": "((((x_0_5 mul (1 mod sign(x_0_4))) idiv sign(x_0_3)) idiv 8) sub x_0_10)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 5 + 10 - 8 + 6 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 2 + 2 + 10 - 9 + 6 + 0 + 9 + 6084 + 1 404 + 1 4161 + 1 7956 + 3 1684 + 3 6100 + 5 625 + 6 1009 + 3358 2025 + 1 160 6400 + 1 9044 0 + 3 821 3136 + 9 7612 5049 + 12 6849 9456 + 25 960 9216 + 36 5214 7489 + 1127 7104 2596 0 + 1 323 7231 4956 4176 + 3 6267 1159 3901 1441 + 9 4994 8539 2537 1904 + 95 2818 4694 4362 7264 + 160 9088 5865 7408 5136 + 629 8133 5935 6414 5025", "x2": "sqr sub x_0_8 abs sqr n", "tree": "((x_0_8 sub abs((n)**2)))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0", "x2": "mod add sub INT+ 8 n mul idiv INT- 5 INT- 9 relu n INT- 3", "tree": "(((8 sub n) add ((-5 idiv -9) mul relu(n))) mod -3)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 9 + 3 + 9 - 2 + 2 + 8 + 8 - 10 + 1 - 5 + 1 + 36 + 208 + 322 + 195 + 288 + 425 + 468 + 171 + 420 + 336 + 506 + 1357 + 5568 + 8675 + 5746 + 8505 + 1 2684 + 1 4413 + 6030 + 1 3981 + 1 1776 + 1 7787 + 4 7294", "x2": "mul add x_0_11 n n", "tree": "((x_0_11 add n) mul n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 6 - 8 + 52 + 55 - 12 + 413 + 504 - 27 + 4230 + 5665 - 180 + 5 5159 + 7 9506 - 2475 + 88 2800 + 135 1891 - 4 4226 + 1677 3561 + 2703 8220 - 92 8305 + 3 6901 8826 + 6 2187 9589 - 2227 8744 + 92 2547 1275 + 161 6886 9990", "x2": "add mul add x_0_3 n n sub x_0_3 x_0_3", "tree": "(((x_0_3 add n) mul n) add (x_0_3 sub x_0_3))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 + 1 + 5 - 7 + 6 - 8 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign mul sub sub add INT- 1 0 n relu INT- 5 x_0_1 x_0_6", "tree": "sign(((((-10 add n) sub relu(-5)) sub x_0_1) mul x_0_6))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 6 + 1 - 5 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr mod n sqr sub x_0_3 INT+ 7", "tree": "((n mod ((x_0_3 sub 7))**2))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 6 + 12 + 0 + 60 + 0 + 420 + 0 + 3780 + 0 + 4 1580 + 0 + 54 540 + 0 + 810 8100 + 0 + 1 3783 7700 + 0 + 26 1891 6300 + 0 + 549 9724 2300 + 0 + 1 2649 3657 2900 + 0 + 31 6234 1432 2500", "x2": "mul relu x_0_2 n", "tree": "(relu(x_0_2) mul n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 + 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483", "x2": "sub sub mul n n n n", "tree": "(((n mul n) sub n) sub n)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 4 - 2 + 7 - 3 + 4 - 2 + 7 - 3 + 4 - 2 + 7 - 3 + 4 - 2 + 7 - 3 + 4 - 2 + 7 - 3 + 4 - 2 + 7 - 3 + 4 - 2 + 7", "x2": "add x_0_4 mul mod n n sign mul relu x_0_5 x_0_1", "tree": "(x_0_4 add ((n mod n) mul sign((relu(x_0_5) mul x_0_1))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 10 - 2 + 3 - 8 - 8 - 5 + 4 + 4 + 2 + 6 - 10 - 2 + 3 - 4 - 4 - 3 + 10 + 4 + 2 + 9 - 10 - 2 + 3 + 6 + 0 - 1 + 19 + 4 + 2 + 12 - 4 - 2 + 3", "x2": "add x_0_10 relu x_0_7", "tree": "(x_0_10 add relu(x_0_7))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 9 - 7 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul x_0_2 mod INT- 4 mul mod mul INT+ 1 0 sign sign n INT- 7 INT+ 2", "tree": "sign((x_0_2 mul (-4 mod (((10 mul sign(sign(n))) mod -7) mul 2))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 6 + 15 + 31 + 56 + 92 + 141 + 205 + 286 + 386 + 507 + 651 + 820 + 1016 + 1241 + 1497 + 1786 + 2110 + 2471 + 2871 + 3312 + 3796 + 4325 + 4901", "x2": "abs sub sqr n sub x_0_1 abs add x_0_1 x_0_1", "tree": "abs(((n)**2 sub (x_0_1 sub abs((x_0_1 add x_0_1)))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 4 + 5 + 6 - 3 - 3 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 5 + 5 + 11 + 15 + 49 + 83 + 335 + 655 + 3005 + 6539 + 3 3043 + 7 8455 + 42 9545 + 109 8355 + 644 3159 + 1757 3663 + 1 953 3685 + 3 1632 5915 + 20 8113 9995 + 63 2651 8279 + 437 393 9873 + 1391 8340 2115 + 1 51 9061 7055 + 3 3404 165 735", "x2": "sub mul mod idiv sign n INT- 7 n x_0_2 n", "tree": "((((sign(n) idiv -7) mod n) mul x_0_2) sub n)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 6 - 8 - 6 + 2 + 8 + 8 + 8 - 4 - 2 - 4 + 10 + 10 + 16 + 4 + 16 - 4 + 10 - 4 + 28 + 6 + 42 - 6 + 36 - 22 + 52 - 32", "x2": "add INT- 4 sub mod n x_0_2 sub x_0_3 n", "tree": "(-4 add ((n mod x_0_2) sub (x_0_3 sub n)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 3 - 5 + 2 + 2 - 4 + 2 + 2 - 7 + 2 + 2 - 10 + 2 + 2 - 13 + 2 + 2 - 16 + 2 + 2 - 19 + 2 + 2 - 22 + 2 + 2", "x2": "sub mul n idiv sign x_0_3 n INT- 2", "tree": "((n mul (sign(x_0_3) idiv n)) sub -2)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 12 + 16 + 20 + 25 + 30 + 36 + 42 + 49 + 56 + 64 + 72 + 81 + 90 + 100 + 110 + 121 + 132 + 144 + 156 + 169 + 182 + 196", "x2": "idiv sqr abs add relu n INT+ 5 INT+ 4", "tree": "((abs((relu(n) add 5)))**2 idiv 4)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 7 + 1 - 10 - 8 + 6 - 8 + 10 + 6 - 10 + 462 + 492 + 663 + 924 + 1020 + 928 + 1292 + 1116 + 1330 + 1800 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3844 + 4096 + 4356", "x2": "relu sub mul mul n mul n sign INT- 3 mod INT+ 6 INT- 1 0 mul x_0_10 n", "tree": "relu((((n mul (n mul sign(-3))) mul (6 mod -10)) sub (x_0_10 mul n)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 7 - 3 + 5 - 10 - 7 + 8 - 10 + 27 + 30 + 24 + 33 + 40 + 0 + 17 - 12 - 22 - 21 + 12 - 10 + 49 + 34 + 65 + 65 + 78 - 2 + 37 - 51 - 34 - 76 + 4", "x2": "sub add n add sub INT+ 9 x_0_7 n relu x_0_5", "tree": "((n add ((9 sub x_0_7) add n)) sub relu(x_0_5))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 2 - 13 - 34 - 61 - 94 - 133 - 178 - 229 - 286 - 349 - 418 - 493 - 574 - 661 - 754 - 853 - 958 - 1069 - 1186 - 1309 - 1438 - 1573", "x2": "mod INT+ 6 sub mul INT- 3 sqr n INT- 8", "tree": "(6 mod ((-3 mul (n)**2) sub -8))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 10 - 7 + 11 - 6 + 12 - 5 + 13 - 4 + 14 - 3 + 15 - 2 + 16 - 1 + 17 + 0 + 18 + 1 + 19 + 2 + 20 + 3 + 21", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 + 4 - 9 + 40 - 195 + 1176 - 8225 + 6 5808 - 59 2263 + 592 2640 - 6514 9029 + 7 8178 8360 - 101 6324 8667 + 1422 8548 1352 - 2 1342 8222 265 + 34 1485 1552 4256 - 580 5247 6391 2335 + 1 449 4457 5042 2048 - 19 8539 4692 5801 8893 + 397 789 3851 6037 7880 - 8338 6577 883 6793 5459 + 18 3450 4695 9440 9458 120 - 421 9360 8006 7141 7534 2737 + 1 126 4659 2161 1402 822 5712", "x2": "sub abs abs n mul x_0_1 n", "tree": "(abs(abs(n)) sub (x_0_1 mul n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 - 4 - 14 - 13 - 21 - 24 - 35 - 39 - 44 - 48 - 64 - 69 - 75 - 80 - 101 - 107 - 114 - 120 - 146 - 153 - 161 - 168 - 199 - 207 - 216", "x2": "add idiv n INT- 2 add mul relu relu n idiv add INT- 1 x_0_2 n INT- 3", "tree": "((n idiv -2) add ((relu(relu(n)) mul ((-1 add x_0_2) idiv n)) add -3))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 - 1 + 1 + 5 + 10 - 3 - 3 + 9 - 2 + 2 + 19 - 5 - 1 + 28 - 7 + 1 + 47 - 12 + 0 + 75 - 19 + 1 + 122 - 31 + 1 + 197 - 50 + 2 + 319", "x2": "add x_0_6 x_0_3", "tree": "(x_0_6 add x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 6 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 74 - 2 - 93 - 114 - 137 - 162 - 189 - 219 - 219 - 75 - 19 - 5 - 283 - 250 - 190", "x2": "mod INT+ 9 sub idiv n INT- 8 sqr mod x_0_1 n", "tree": "(9 mod ((n idiv -8) sub ((x_0_1 mod n))**2))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 2 - 3 - 4 - 10 - 7 - 13 - 20 - 29 - 40 - 15 - 20 - 26 - 33 - 40 - 49 - 58 - 68 - 79 - 90 - 103 - 116 - 130", "x2": "idiv sqr add mul INT- 2 n relu mod INT+ 1 0 n INT- 1 0", "tree": "((((-2 mul n) add relu((10 mod n))))**2 idiv -10)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 4 - 1 + 1 - 3 - 9 - 6 - 5 + 6 + 5 + 10 + 4 - 9 - 14 - 17 - 14 - 9 - 12 - 14 - 26 - 26 - 32 - 27 - 15 - 11 - 9 - 13 - 19 - 17 - 16 - 5 - 6 - 1 - 7 - 20", "x2": "sub add idiv x_0_5 mul INT+ 5 INT- 8 sub sign INT- 6 n x_0_11", "tree": "(((x_0_5 idiv (5 mul -8)) add (sign(-6) sub n)) sub x_0_11)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 9 - 24 - 39 - 56 - 75 - 96 - 119 - 144 - 171 - 200 - 231 - 264 - 299 - 336 - 375 - 416 - 459 - 504 - 551 - 600 - 651 - 704 - 759 - 816", "x2": "mul add n relu x_0_1 sub INT- 1 0 n", "tree": "((n add relu(x_0_1)) mul (-10 sub n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 6 + 7 - 6 - 8 - 7 - 4 + 1 - 8 - 8 + 8 + 15 + 9 + 17 + 19 + 19 + 19 + 17 + 23 + 24 + 17 + 14 + 18 + 15 + 15 + 16 + 17 + 19 + 17 + 18 + 22 + 25 + 24", "x2": "add idiv x_0_10 INT- 2 n", "tree": "((x_0_10 idiv -2) add n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 6 - 5 + 8 - 32 - 160 - 1120 - 7840 - 6 2720 - 56 4480 - 564 4800 - 6209 2800 - 7 4511 3600 - 96 8647 6800 - 1356 1067 5200 - 2 341 6012 8000 - 32 5465 6204 8000 - 553 2915 5481 6000 - 9959 2479 8668 8000 - 18 9225 7117 4707 2000 - 378 4514 2349 4144 0 - 7947 4798 9337 7024 0 - 17 4844 5576 5429 4528 0 - 402 1424 8260 4877 4144 0 - 9651 4195 8251 7057 9456 0 - 24 1285 4895 6292 6448 6400 0 - 627 3422 7286 3608 7664 6400 0", "x2": "mul abs x_0_1 sub idiv INT- 4 x_0_3 n", "tree": "(abs(x_0_1) mul ((-4 idiv x_0_3) sub n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 + 8 + 2 + 4 + 0 + 2 + 1 + 2 + 1 + 8 + 2 + 4 + 0 + 2 + 1 + 2 + 1 + 8 + 2 + 4 + 0 + 2 + 1 + 2 + 1 + 8 + 2 + 4 + 0 + 2 + 1", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 2 + 4 + 4 + 6 + 6 + 8 + 8 + 10 + 10 + 12 + 12 + 14 + 14 + 16 + 16 + 18 + 18 + 20 + 20 + 22 + 22 + 24", "x2": "sub n mod n INT- 2", "tree": "(n sub (n mod -2))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 8 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625", "x2": "mul sqr relu abs sqr n add idiv n n mod x_0_2 x_0_2", "tree": "((relu(abs((n)**2)))**2 mul ((n idiv n) add (x_0_2 mod x_0_2)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 + 3 - 7 + 9 - 10 + 1 - 5 - 1 - 10 + 6 + 8 + 6 + 19 + 8 + 21 - 12 + 25 + 28 + 61 + 45 + 49 + 3 + 2 + 19 - 80 - 2 - 74 + 60 + 27 - 44 - 305 - 224 - 11 + 41 + 42", "x2": "add mod x_0_3 sub n mul INT+ 7 x_0_12 n", "tree": "((x_0_3 mod (n sub (7 mul x_0_12))) add n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "+ 7 - 1 + 4 + 3 + 14 - 1 + 4 + 0 + 26 - 1 + 2 + 0 + 58 - 1 + 0 + 0 + 208 - 1 + 0 + 0 + 2089 - 1 + 0 + 0 + 17 4807 - 1 + 0", "x2": "idiv add sqr add sign x_0_2 x_0_4 x_0_4 n", "tree": "((((sign(x_0_2) add x_0_4))**2 add x_0_4) idiv n)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 2 + 0 - 1 - 9 + 6 + 9 - 9 + 0 + 0 + 0 + 0 + 0 + 146 + 125 + 0 + 0 + 0 + 0 + 0 + 371 + 782 + 0 + 0 + 0 + 0 + 0 + 693 + 1440 + 0 + 0", "x2": "relu sub sub mod idiv INT- 7 mod n x_0_7 mul n n add INT+ 4 relu n sub INT+ 4 x_0_1", "tree": "relu(((((-7 idiv (n mod x_0_7)) mod (n mul n)) sub (4 add relu(n))) sub (4 sub x_0_1)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 9 + 8 + 2 - 2 - 2 - 10 + 0 + 17 + 3 + 23 + 18 + 13 + 14 + 7 + 18 + 36 + 26 + 44 + 40 + 41 + 44 + 39 + 44 + 63 + 54 + 73 + 70 + 72 + 76 + 72", "x2": "add INT+ 2 add n add x_0_8 relu mod n sub n relu x_0_8", "tree": "(2 add (n add (x_0_8 add relu((n mod (n sub relu(x_0_8)))))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 2 + 4 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3", "x2": "mod mod add relu n x_0_3 n INT+ 4", "tree": "(((relu(n) add x_0_3) mod n) mod 4)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 7 - 7 + 4 - 1 + 10 - 7 + 144 + 121 + 169 + 16 + 529 + 100 + 441 + 576 + 625 + 1089 + 256 + 1225 + 400 + 441 + 16 + 729 + 1089 + 36 + 841 + 484 + 2401 + 256 + 81", "x2": "sqr mod x_0_7 mul relu n INT+ 2", "tree": "((x_0_7 mod (relu(n) mul 2)))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 1 + 8 + 1 + 3 - 11 - 4 + 3 - 5 - 7 - 6 - 5 - 7 - 9 - 8 - 7 - 9 - 11 - 10 - 9 - 11 - 13 - 12 - 11 - 13 - 15", "x2": "sub idiv x_0_2 sign x_0_2 abs sub n mul n relu idiv mod INT- 2 x_0_3 relu INT+ 2", "tree": "((x_0_2 idiv sign(x_0_2)) sub abs((n sub (n mul relu(((-2 mod x_0_3) idiv relu(2)))))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 3 + 3 - 5 - 7 - 7 - 3 - 7 - 9 - 7 - 5 + 1 + 9 + 17 + 27 + 37 + 47 + 61 + 79 + 89 + 105 + 123 + 139 + 159 + 181 + 201 + 221", "x2": "add add sub x_0_1 add mod x_0_3 INT+ 6 abs mod n INT- 6 sign x_0_1 n", "tree": "(((x_0_1 sub ((x_0_3 mod 6) add abs((n mod -6)))) add sign(x_0_1)) add n)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 + 1 - 8 - 4 + 1 + 8 - 7 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 1", "x2": "mod relu x_0_7 abs INT+ 4", "tree": "(relu(x_0_7) mod abs(4))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 2 + 9 + 1 + 7 + 1 + 7 - 2 + 4 - 3 + 3 - 6 + 0 - 8 - 1 - 8 - 4 - 10 - 5 - 10 - 8 - 12 - 9 - 12 - 12", "x2": "add x_0_2 mod mod INT- 3 sub n idiv sub n x_0_1 n INT- 4", "tree": "(x_0_2 add ((-3 mod (n sub ((n sub x_0_1) idiv n))) mod -4))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 18 + 47 + 92 + 153 + 230 + 323 + 432 + 557 + 698 + 855 + 1028 + 1217 + 1422 + 1643 + 1880 + 2133 + 2402 + 2687 + 2988 + 3305 + 3638 + 3987 + 4352", "x2": "add mul n sub INT+ 5 mul INT- 8 n sub INT- 3 INT- 8", "tree": "((n mul (5 sub (-8 mul n))) add (-3 sub -8))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 7 + 10 - 2 + 6 + 6 + 9 + 1 - 9 - 2 - 5 + 2 + 117 + 224 + 270 + 592 + 187 + 72 + 228 + 360 + 399 + 594 + 575 + 216 + 600 + 598 + 189 + 308 + 580 + 570 + 558 + 480 + 330 + 782 + 770", "x2": "mul n add add add mod INT+ 6 INT+ 7 idiv n x_0_8 mod x_0_12 n relu mod sqr INT+ 1 INT+ 4", "tree": "(n mul ((((6 mod 7) add (n idiv x_0_8)) add (x_0_12 mod n)) add relu(((1)**2 mod 4))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "- 8 + 9 - 3 + 10 - 2 - 6 - 57 - 73 + 0 - 90 + 7 - 24 - 3236 - 5315 + 15 - 8084 - 32 - 558 - 1047 1677 - 2824 9205 - 204 - 6535 1034 - 1001 - 31 1340 - 109 6560 1919 2304 - 798 175 8313 1999 - 4 1589 - 4270 7576 4486 9128 - 100 1972", "x2": "sub n sqr x_0_6", "tree": "(n sub (x_0_6)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 3 + 6 + 2 + 2 + 7 - 4 - 1 + 3 - 4 + 12 + 10 + 2 + 21 + 3 + 2 + 18 - 16 + 5 + 15 - 19 + 34 + 15 - 10 + 59 - 14 - 4 + 56 - 65 + 28", "x2": "sub sub n x_0_7 add x_0_4 sign n", "tree": "((n sub x_0_7) sub (x_0_4 add sign(n)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 5 + 6 - 9 - 4 - 31 - 38 - 51 - 82 - 95 - 142 - 171 - 208 - 265 - 306 - 383 - 444 - 515 - 608 - 687 - 804 - 907 - 1022 - 1161 - 1288 - 1455 - 1610 - 1779", "x2": "add sub x_0_5 mul n n sub n sign idiv sqr INT+ 7 abs x_0_1", "tree": "((x_0_5 sub (n mul n)) add (n sub sign(((7)**2 idiv abs(x_0_1)))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 2 - 5 - 10 - 17 - 26 - 37 - 50 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401 - 442 - 485 - 530", "x2": "sub idiv abs INT- 6 mul INT+ 7 INT- 1 0 sqr n", "tree": "((abs(-6) idiv (7 mul -10)) sub (n)**2)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 4 + 4 - 5 - 1 - 9 - 8 - 3 + 10 + 1 + 9 + 0 + 4 - 4 - 3 + 2 + 15 + 6 + 14 + 5 + 9 + 1 + 2 + 7 + 20 + 11 + 19 + 10 + 14 + 6 + 7", "x2": "sub x_0_8 INT- 5", "tree": "(x_0_8 sub -5)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 9 - 7 + 3 + 15 + 19 + 4 + 15 + 28 + 33 + 19 + 31 + 45 + 51 + 38 + 51 + 66 + 73 + 61 + 75 + 91 + 99 + 88 + 103 + 120 + 129 + 119", "x2": "sub add x_0_4 n INT- 4", "tree": "((x_0_4 add n) sub -4)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 1 - 3 - 9 + 10 + 1 + 1 + 3 + 9 + 10 + 1 + 1 + 3 + 9 + 10 + 1 + 1 + 3 + 9 + 10 + 1 + 1 + 3 + 9 + 10 + 1 + 1 + 3 + 9", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 + 144 + 400 + 900 + 1764 + 3136 + 5184 + 8100 + 1 2100 + 1 7424 + 2 4336 + 3 3124 + 4 4100 + 5 7600 + 7 3984 + 9 3636 + 11 6964 + 14 4400 + 17 6400 + 21 3444 + 25 6036 + 30 4704 + 36 0 + 42 2500", "x2": "sqr relu mul add sign abs mul INT- 1 0 x_0_2 n n", "tree": "(relu(((sign(abs((-10 mul x_0_2))) add n) mul n)))**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 10 + 4 + 6 + 9 + 5 - 9 - 11 - 11 - 8 - 9 - 10 - 11 - 12 - 13 - 13 - 14 - 15 - 16 - 17 - 17 - 18 - 19 - 20 - 21 - 21 - 22 - 23 - 24", "x2": "sub idiv idiv add idiv x_0_6 abs n x_0_3 INT- 4 sign INT+ 8 relu n", "tree": "(((((x_0_6 idiv abs(n)) add x_0_3) idiv -4) idiv sign(8)) sub relu(n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 8 + 9 + 2 - 4 + 3 + 10 + 8 + 8 + 9 + 2 + 0 + 3 + 10 + 8 + 8 + 9 + 2 + 0 + 3 + 10 + 8 + 8 + 9 + 2 + 0 + 3 + 10 + 8 + 8", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 1 + 8 + 9 + 7 + 48 + 119 + 72 + 81 + 120 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n add n relu add INT+ 9 mul x_0_5 idiv sign n INT- 9", "tree": "(n mul (n add relu((9 add (x_0_5 mul (sign(n) idiv -9))))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 1 + 8 - 5 + 8 - 8 + 4 + 0 - 8 - 1 - 14 - 1 - 17 - 5 - 9 - 17 - 10 - 23 - 10 - 26 - 14 - 18 - 26 - 19 - 32 - 19 - 35 - 23 - 27 - 35", "x2": "add x_0_7 INT- 9", "tree": "(x_0_7 add -9)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 7 + 3 - 5 + 12 + 2 - 1 + 20 - 1 + 7 + 31 - 9 + 20 + 38 - 25 + 36 + 35 - 45 + 55 + 19 - 59 + 77 - 13 - 54 + 102 - 64 - 27", "x2": "sub n sub relu x_0_4 x_0_3", "tree": "(n sub (relu(x_0_4) sub x_0_3))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 8 + 5 + 1 - 3 + 5 + 3 - 2 + 10 + 6 + 8 + 10 + 7 + 10 + 13 + 12 + 14 + 15 + 12 + 15 + 18 + 16 + 20 + 18 + 18 + 21 + 23 + 21 + 25 + 23 + 28 + 27", "x2": "abs add add mod x_0_9 INT+ 6 INT- 7 n", "tree": "abs((((x_0_9 mod 6) add -7) add n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 10 + 9 + 6 - 150 + 360 - 441 - 384 + 1 2150 - 3 6000 + 5 3361 + 5 5296 - 205 3350 + 705 6000 - 1200 6225 - 1415 5776 + 5 9341 8150 - 22 8614 4000 + 43 3424 7225 + 56 6231 400 - 2616 9740 4150 + 1 1064 9369 6000 - 2 2928 1678 2025 - 3 2614 9079 400 + 163 5608 7759 3750 - 747 9897 3849 6000 + 1671 4634 3409 6225", "x2": "sub mod mod n INT- 1 x_0_2 mul x_0_4 mul n n", "tree": "(((n mod -1) mod x_0_2) sub (x_0_4 mul (n mul n)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 4 + 8 - 20 + 60 - 210 + 840 - 3780 + 1 8900 - 10 3950 + 62 3700 - 405 4050 + 2837 8350 - 2 1283 7625 + 17 270 1000 - 144 7295 8500 + 1302 5662 6500 - 1 2374 3795 1750 + 12 3743 7951 7500 - 129 9309 8493 3750 + 1429 2408 3427 1250 - 1 6436 2695 9411 9375 + 19 7235 2351 2943 2500 - 246 5440 4391 1790 6250 + 3205 725 7085 3278 1250", "x2": "sub idiv mul sub mul n INT+ 6 n x_0_1 INT- 1 0 x_0_1", "tree": "(((((n mul 6) sub n) mul x_0_1) idiv -10) sub x_0_1)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 2 + 10 - 10 + 6 - 84 - 595 - 4221 - 2 9554 - 20 6906 - 144 8853 - 1014 6052 - 7105 1820 - 4 9756 9520 - 34 8443 4877 - 244 118 5998 - 1708 7932 4231 - 1 1966 5263 2231 - 8 3800 5141 2124 - 58 6847 5092 8867 - 410 9640 6480 3908 - 2877 9446 889 6819 - 2 153 9888 3070 3189 - 14 1136 5821 7480 7023 - 98 8366 8684 8015 1055 - 692 1444 8278 1468 4559 - 4847 259 4069 6506 9457 - 3 3943 2893 7705 7040 8326", "x2": "mul add abs mod n x_0_5 abs x_0_1 INT- 7", "tree": "((abs((n mod x_0_5)) add abs(x_0_1)) mul -7)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 9 + 4 + 9 + 7 - 4 - 7 + 5 - 16 - 3 + 2 + 0 - 11 - 14 - 2 - 23 - 10 - 5 - 7 - 18 - 21 - 9 - 30 - 17 - 12 - 14 - 25 - 28 - 16 - 37 - 24", "x2": "add x_0_7 INT- 7", "tree": "(x_0_7 add -7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 1 - 2 - 3 - 6 - 9 - 12 - 17 - 22 - 27 - 34 - 41 - 48 - 57 - 66 - 75 - 86 - 97 - 108 - 121 - 134 - 147 - 162 - 177", "x2": "idiv sqr n sub idiv abs INT+ 6 INT+ 4 INT+ 4", "tree": "((n)**2 idiv ((abs(6) idiv 4) sub 4))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 4 + 3 + 5 + 8 + 6 + 9 + 11 + 10 + 12 + 11 + 13 + 16 + 14 + 17 + 19 + 18 + 20 + 19 + 21 + 24 + 22 + 25 + 27", "x2": "sub n mod x_0_1 INT- 4", "tree": "(n sub (x_0_1 mod -4))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 + 8 - 3 + 11 - 7 + 4 - 10 + 8 - 3 + 11 - 7 + 4 - 10 + 8 - 3 + 11 - 7 + 4 - 10 + 8 - 3 + 11 - 7 + 4 - 10 + 8", "x2": "sub sign INT+ 3 x_0_3", "tree": "(sign(3) sub x_0_3)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 - 1 + 2 + 5 + 6 + 7 + 8 + 49 + 10 + 481 + 12 + 5761 + 14 + 8 641 + 196 + 258 497 + 6648 + 4644 8929 + 20 + 18 5795 7141 + 400 + 1226 2517 1285 + 24 + 8 8290 1233 2497 + 26", "x2": "add relu abs mul add mul mod x_0_2 idiv n INT- 7 x_0_2 INT+ 1 n sign x_0_1", "tree": "(relu(abs(((((x_0_2 mod (n idiv -7)) mul x_0_2) add 1) mul n))) add sign(x_0_1))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 + 0 + 1 + 4 + 4 + 2 + 3 + 6 + 6 + 4 + 5 + 8 + 8 + 6 + 7 + 10 + 10 + 8 + 9 + 12 + 12 + 10 + 11 + 14 + 14 + 12 + 13", "x2": "relu sub n mod x_0_2 n", "tree": "relu((n sub (x_0_2 mod n)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 10 - 1 + 7 + 8 + 5 - 7 + 9 + 5 - 7 - 7 + 56 + 0 + 92 + 10 + 0 + 8 + 556 + 0 + 8 + 96 + 0 + 59 + 5563 + 0 + 13 + 963 + 0 + 559 + 5 5633 + 0 + 99 + 9633 + 0 + 5566 + 55 6333", "x2": "relu add INT+ 8 mod add x_0_11 add sub n n INT- 5 mul INT+ 1 0 x_0_6", "tree": "relu((8 add ((x_0_11 add ((n sub n) add -5)) mod (10 mul x_0_6))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 32 + 3888 + 8 2944 + 80 0 + 486 0 + 2178 1872 + 7867 5968 + 2 4186 4704 + 6 5610 0 + 16 1051 0 + 36 4314 9312 + 76 9913 1648 + 153 6079 1264 + 291 7215 0 + 530 8416 0 + 930 5174 8352 + 1578 1860 8928 + 2599 3096 8624 + 4170 2720 0 + 6534 5616 0 + 1 22 8350 4992 + 1 5077 5196 5808 + 2 2282 6866 2784 + 3 2400 0 0", "x2": "mul n sqr sqr mul n sub sign INT+ 4 n", "tree": "(n mul (((n mul (sign(4) sub n)))**2)**2)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 10 + 8 - 2 - 3 - 4 - 1 - 6 - 7 - 1 - 9 - 1 - 11 - 1 - 13 - 1 - 15 - 1 - 17 - 1 - 19 - 1 - 21 - 1 - 23 - 1 - 25 - 1", "x2": "sub mod sign mod mul x_0_2 INT+ 6 mul idiv add INT+ 7 relu n n x_0_1 n n", "tree": "((sign(((x_0_2 mul 6) mod (((7 add relu(n)) idiv n) mul x_0_1))) mod n) sub n)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 1 + 6 - 48 + 25 + 36 + 49 - 448 - 648 - 900 + 121 + 144 + 169 - 2548 - 3150 - 3840 + 289 + 324 + 361 - 7600 - 8820 - 1 164 + 529 + 576 + 625 - 1 6900 - 1 8954 - 2 1168", "x2": "mul n sub relu abs n relu mul abs n mod n x_0_3", "tree": "(n mul (relu(abs(n)) sub relu((abs(n) mul (n mod x_0_3)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 10 + 4 + 10 - 10 - 5 + 8 + 5 - 8 + 45 - 16 - 5 + 32 - 90 + 128 + 25 - 192 + 180 - 1152 - 150 + 384 - 180 + 1152 + 900 - 3456 + 900 - 1 368 - 6300 + 1 7280 - 4500 + 7 2576 + 4 4100 - 15 5520 + 4 500", "x2": "mul add mod x_0_3 INT+ 1 mod add mod INT- 9 x_0_8 x_0_5 INT- 1 0 x_0_4", "tree": "(((x_0_3 mod 1) add (((-9 mod x_0_8) add x_0_5) mod -10)) mul x_0_4)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 2 + 0 - 96 + 0 - 7680 + 0 - 86 160 + 0 - 1 2386 3040 + 0 - 217 9989 5040 + 0 - 4 5343 7816 8320 + 0 - 1088 2507 6039 6800 + 0 - 29 6004 2068 2792 9600 + 0 - 8998 5278 8756 9059 8400 + 0 - 302 3505 3702 2320 4106 2400 + 0 - 11 1264 9976 2421 3911 1096 3200 + 0 - 4450 5999 496 8556 4443 8528 0 + 0 - 192 2659 1589 4641 6383 9744 4096 0", "x2": "mul sub sqr INT- 4 x_0_1 mul x_0_2 n", "tree": "(((-4)**2 sub x_0_1) mul (x_0_2 mul n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 10 + 9 + 5 + 8 - 5 - 1 - 3 - 10 + 26 + 330 + 306 + 150 + 328 - 155 - 35 - 147 - 410 + 1430 + 1 5180 + 1 3158 + 7950 + 1 6728 - 9455 - 2065 - 1 731 - 2 8700 + 9 4380 + 124 4760 + 92 1060 + 54 8550 + 128 8056 - 63 3485 - 14 2485", "x2": "add x_0_9 mul x_0_9 add mod x_0_4 n mul INT+ 2 n", "tree": "(x_0_9 add (x_0_9 mul ((x_0_4 mod n) add (2 mul n))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 2 + 1 - 1 - 5 + 2 + 2 + 1 - 7 - 9 - 12 - 17 - 11 - 12 - 14 - 23 - 26 - 30 - 36 - 31 - 33 - 36 - 46 - 50 - 55 - 62 - 58 - 61 - 65 - 76 - 81 - 87", "x2": "add mul sub n idiv mul idiv idiv n INT+ 4 n INT- 4 INT- 9 mod sign sign INT- 7 INT- 4 x_0_7", "tree": "(((n sub ((((n idiv 4) idiv n) mul -4) idiv -9)) mul (sign(sign(-7)) mod -4)) add x_0_7)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 10 + 8 + 2 - 3 + 40 + 18 + 35 + 16 + 81 + 110 + 143 + 180 + 221 + 266 + 315 + 368 + 425 + 486 + 551 + 620 + 693 + 770 + 851 + 936 + 1025 + 1118 + 1215 + 1316 + 1421", "x2": "abs mul mod mod INT- 9 add abs n relu n add mod n x_0_2 x_0_4 n", "tree": "abs((((-9 mod (abs(n) add relu(n))) mod ((n mod x_0_2) add x_0_4)) mul n))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 10 + 2 + 1 + 10 + 2 + 1 - 553 + 8 + 9 + 10 + 11 + 12 - 5 7499 + 14 + 15 + 16 + 17 + 18 - 873 9829 + 20 + 21 + 22 + 23 + 24 - 17 4796 5775 + 26 + 27 + 28 + 29 + 30 - 4334 9551 2169", "x2": "mod n mul mul n INT+ 8 x_0_6", "tree": "(n mod ((n mul 8) mul x_0_6))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 9 + 2 + 4 + 3 + 5 + 4 + 0 + 4 + 1 + 4 + 2 + 5 + 3 + 0 + 3 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 0 + 4 + 1 + 4", "x2": "mod add x_0_2 idiv idiv sub sub sign x_0_1 x_0_1 n n INT- 2 mod INT+ 6 sqr relu n", "tree": "((x_0_2 add ((((sign(x_0_1) sub x_0_1) sub n) idiv n) idiv -2)) mod (6 mod (relu(n))**2))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116 + 2304 + 2500", "x2": "sqr add relu n n", "tree": "((relu(n) add n))**2", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 10 - 8 - 10 - 15 - 60 - 56 - 80 - 135 - 600 - 616 - 960 - 1755 - 8400 - 9240 - 1 5360 - 2 9835 - 15 1200 - 17 5560 - 30 7200 - 62 6535 - 332 6400 - 403 7880 - 737 2800 - 1566 3375 - 8648 6400 - 1 902 2760 - 2 643 8400 - 4 5423 7875", "x2": "add relu mod INT+ 4 mod x_0_2 mod INT+ 8 mul sqr n INT- 6 mul n x_0_4", "tree": "(relu((4 mod (x_0_2 mod (8 mod ((n)**2 mul -6))))) add (n mul x_0_4))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 10 - 7 - 7 - 12 - 9 - 9 - 14 - 11 - 11 - 16 - 13 - 13 - 18 - 15 - 15 - 20 - 17 - 17 - 22 - 19 - 19 - 24 - 21 - 21 - 26 - 23 - 23 - 28", "x2": "add INT- 4 add idiv x_0_3 INT+ 1 INT+ 2", "tree": "(-4 add ((x_0_3 idiv 1) add 2))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 8 + 10 + 10 - 3 + 5 + 8 + 3 + 8 - 3 + 0 - 8 + 9 + 71 + 62 + 81 + 214 + 210 + 186 + 310 + 246 + 384 + 490 + 351 + 366 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 + 1264", "x2": "mod idiv relu INT+ 6 INT- 2 add mul sub n abs x_0_12 n INT+ 9", "tree": "((relu(6) idiv -2) mod (((n sub abs(x_0_12)) mul n) add 9))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 1 - 5 - 1 + 6 - 8 + 5 + 0 + 7 + 9 + 10 + 11 + 0 + 13 + 0 + 15 + 0 + 0 + 0 + 0 + 20 + 0 + 22 + 0 + 24 + 25 + 26 + 27 + 0 + 29 + 0 + 31 + 0 + 0", "x2": "mul n abs idiv sub x_0_8 INT+ 5 n", "tree": "(n mul abs(((x_0_8 sub 5) idiv n)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 2 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12 + 14", "x2": "sub n mod x_0_1 n", "tree": "(n sub (x_0_1 mod n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 9 + 8 + 17 + 23 + 36 + 33 + 34 + 18 + 37 + 49 + 114 + 74 + 52 - 173 - 8 + 102 + 360 + 399 - 70 - 1407 - 1667 + 575 + 624 + 675 - 3010 - 3429 - 3885", "x2": "add mod n idiv mul x_0_3 n INT- 4 add sqr n n", "tree": "((n mod ((x_0_3 mul n) idiv -4)) add ((n)**2 add n))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 0 - 2 - 10 + 1 + 0 + 8 + 1 + 1 + 0 + 8 + 1 + 1 + 0 + 8 + 1 + 1 + 0 + 8 + 1 + 1 + 0 + 8 + 1 + 1 + 0 + 8 + 1 + 1", "x2": "mod x_0_4 relu add INT+ 3 n", "tree": "(x_0_4 mod relu((3 add n)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 4 + 7 - 1 + 11 + 4 + 17 + 11 + 25 + 20 + 35 + 31 + 47 + 44 + 61 + 59 + 77 + 76 + 95 + 95 + 115 + 116 + 137 + 139 + 161 + 164 + 187 + 191", "x2": "add n x_0_2", "tree": "(n add x_0_2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626", "x2": "sub sqr n INT- 1", "tree": "((n)**2 sub -1)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 2 - 4 - 10 - 10 + 1 - 9 + 4 - 3 + 17 + 19 + 40 + 32 + 62 + 44 + 80 + 45 + 78 + 23 + 65 - 19 + 42 - 77 + 20 - 131 + 22 - 170 + 68 - 182 + 174 - 170 + 336 - 158", "x2": "sub sub x_0_2 sub x_0_7 n sign x_0_8", "tree": "((x_0_2 sub (x_0_7 sub n)) sub sign(x_0_8))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 4 + 4 + 10 + 11 + 13 + 15 + 18 + 21 + 25 + 29 + 34 + 39 + 45 + 52 + 60 + 4 + 13 + 24 + 36 + 40 + 45 + 52 + 61 + 7 + 18 + 30 + 43 + 49", "x2": "mod relu sub x_0_1 idiv add n x_0_4 INT- 7 sqr INT+ 8", "tree": "(relu((x_0_1 sub ((n add x_0_4) idiv -7))) mod (8)**2)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 7 - 4 - 18 - 16 - 31 - 30 - 46 - 46 - 63 - 64 - 82 - 84 - 103 - 106 - 126 - 130 - 151 - 156 - 178 - 184 - 207 - 214 - 238 - 246 - 271 - 280", "x2": "mul sub INT- 8 sub INT- 7 abs relu x_0_1 add n sub abs x_0_2 idiv INT+ 7 sign x_0_2", "tree": "((-8 sub (-7 sub abs(relu(x_0_1)))) mul (n add (abs(x_0_2) sub (7 idiv sign(x_0_2)))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 10 - 9 - 7 + 0 + 10 - 4 + 337 + 416 + 337 + 204 + 0 + 416 + 66 + 47 3204 + 72 1066 + 47 3204 + 17 3400 + 0 + 72 1066 + 1 8150 + 9330 844 66 + 2 1664 73 4816 + 9330 844 66 + 1252 8150 0 + 0 + 2 1664 73 4816 + 13 7259 3750 + 3 6271 312 1809 9613 868 4816 + 19 5553 8393 2547 1031 4397 4400 + 3 6271 312 1809 9613 868 4816 + 653 9772 6009 3750 0 0", "x2": "idiv sqr mul INT+ 5 idiv x_0_7 sign n relu add abs INT- 5 abs sign INT- 1 0", "tree": "(((5 mul (x_0_7 idiv sign(n))))**2 idiv relu((abs(-5) add abs(sign(-10)))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 63 - 47 - 33 - 21 - 11 - 3 + 3 + 7 + 9 + 9 + 7 + 3 - 3 - 11 - 21 - 33 - 47 - 63 - 81 - 101 - 123 - 147 - 173 - 201 - 231", "x2": "sub n sqr add sub INT- 8 sign INT+ 6 n", "tree": "(n sub (((-8 sub sign(6)) add n))**2)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 + 8 + 1 - 7 - 8 + 5 - 2 + 136 - 32 + 24 + 152 + 160 + 168 - 16 - 848 + 512 + 80 - 928 - 1232 - 7808 + 464 + 7136 - 1 1152 - 1 112 - 5 4640 + 1 272 + 6 2896 - 9 2480 - 13 7520 - 34 7424 + 8 1392 + 43 7632", "x2": "mul abs INT+ 8 sub mod n x_0_5 sub x_0_7 abs n", "tree": "(abs(8) mul ((n mod x_0_5) sub (x_0_7 sub abs(n))))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 9 - 10 + 6 - 7 - 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign idiv x_0_3 sign x_0_5", "tree": "sign((x_0_3 idiv sign(x_0_5)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625", "x2": "idiv sqr mul n n n", "tree": "(((n mul n))**2 idiv n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 4 - 9 - 1 - 3 - 5 - 4 - 6 + 10 - 2 + 9 - 9 - 3 - 3 - 10 + 0 - 4 - 6 - 5 - 7 + 11 - 3 + 8 - 10 - 4 - 2 - 11 + 1 - 5 - 7 - 6 - 8 + 12 - 4 + 7 - 11 - 5 - 1", "x2": "add x_0_12 sign x_0_5", "tree": "(x_0_12 add sign(x_0_5))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 7 + 5 + 3 + 4 + 7 + 8 - 5 - 2 + 8 + 54 + 28 + 13 + 23 + 57 + 59 + 23 + 12 + 118 + 2944 + 797 + 192 + 586 + 3308 + 3504 + 541 + 262 + 1 6868 + 866 7933 + 63 5401 + 3 7450 + 34 6704 + 1094 6368 + 1227 8557 + 29 2943", "x2": "add x_0_8 sqr x_0_9", "tree": "(x_0_8 add (x_0_9)**2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 10 + 1 + 10 - 8 + 4 + 105 + 72 + 90 + 110 + 132 + 156 + 13 + 14 + 15 + 528 + 17 + 18 + 380 + 820 + 21 + 22 + 1081 + 24 + 1275 + 702 + 27 + 812 + 870 + 30 + 31", "x2": "add mul mod x_0_6 INT+ 3 sqr n n", "tree": "(((x_0_6 mod 3) mul (n)**2) add n)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 4 + 0 - 3 + 14 + 14 + 14 + 112 + 112 + 112 + 798 + 798 + 798 + 5600 + 5600 + 5600 + 3 9214 + 3 9214 + 3 9214 + 27 4512 + 27 4512 + 27 4512 + 192 1598 + 192 1598 + 192 1598 + 1345 1200 + 1345 1200 + 1345 1200 + 9415 8414", "x2": "sub sub abs relu mul x_0_3 sub INT+ 6 INT- 1 INT+ 6 mul INT- 2 INT+ 1 0", "tree": "((abs(relu((x_0_3 mul (6 sub -1)))) sub 6) sub (-2 mul 10))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 2 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "idiv sub sign x_0_2 sqr sub n n INT- 9", "tree": "((sign(x_0_2) sub ((n sub n))**2) idiv -9)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 2 - 7 - 8 - 1 + 4 + 2 - 7 - 8 - 1 + 4 + 2 - 7 - 8 - 1 + 4 + 2 - 7 - 8 - 1 + 4 + 2 - 7 - 8 - 1 + 4 + 2 - 7 - 8 - 1", "x2": "sub x_0_5 mod n n", "tree": "(x_0_5 sub (n mod n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225", "x2": "sqr add relu n INT+ 1 0", "tree": "((relu(n) add 10))**2", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 30 + 72 + 140 + 240 + 378 + 560 + 792 + 1080 + 1430 + 1848 + 2340 + 2912 + 3570 + 4320 + 5168 + 6120 + 7182 + 8360 + 9660 + 1 1088 + 1 2650 + 1 4352 + 1 6200", "x2": "mul n add mul n n mod INT- 2 n", "tree": "(n mul ((n mul n) add (-2 mod n)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 + 4 - 16 + 64 - 256 + 1024 - 4096 + 1 6384 - 6 5536 + 26 2144 - 104 8576 + 419 4304 - 1677 7216 + 6710 8864 - 2 6843 5456 + 10 7374 1824 - 42 9496 7296 + 171 7986 9184 - 687 1947 6736 + 2748 7790 6944 - 1 995 1162 7776 + 4 3980 4651 1104 - 17 5921 8604 4416 + 70 3687 4417 7664 - 281 4749 7671 656 + 1125 8999 684 2624", "x2": "mul x_0_1 INT- 4", "tree": "(x_0_1 mul -4)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 288 + 2187 + 9216 + 2 8125 + 6 9984 + 15 1263 + 29 4912 + 53 1441 + 90 0 + 144 9459 + 223 9488 + 334 1637 + 484 416 + 683 4375 + 943 7184 + 1277 8713 + 1700 6112 + 2228 4891 + 2880 0 + 3675 6909 + 4638 2688 + 5792 7087 + 7166 3616 + 8789 625", "x2": "mul mul sqr sqr n INT+ 9 n", "tree": "((((n)**2)**2 mul 9) mul n)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 1 - 9 - 2 + 5 + 11 + 19 + 12 + 5 - 1 - 9 - 2 + 5 + 11 + 19 + 12 + 5 - 1 - 9 - 2 + 5 + 11 + 19 + 12 + 5 - 1 - 9 - 2 + 5", "x2": "sub sub sign n INT- 9 x_0_4", "tree": "((sign(n) sub -9) sub x_0_4)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 - 8 - 4 - 4 - 6 + 5 + 6 - 5 - 6 + 1 + 4 + 6 - 4 - 8 - 12 + 10 + 12 - 10 - 12 + 2 + 12 + 18 - 12 - 24 - 36 + 30 + 36 - 40 - 48 + 8 + 48 + 72 - 48 - 96 - 180 + 150 + 180", "x2": "mul x_0_10 idiv n add mul sqr sign mul add x_0_7 add sign n x_0_12 INT- 9 INT+ 6 INT+ 1", "tree": "(x_0_10 mul (n idiv (((sign(((x_0_7 add (sign(n) add x_0_12)) mul -9)))**2 mul 6) add 1)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 7 + 5 - 7 - 2 + 6 - 7 - 8 - 2 + 8 - 9 - 7 - 7 + 7 + 7 - 7 + 7 + 7 + 7 - 7 + 7 + 7 + 7 - 7 - 7 + 7 - 7 - 7 - 7 + 7 - 7 - 7 - 7 + 7 + 7 - 7", "x2": "mul mul sign abs x_0_9 sign add INT+ 5 mul x_0_10 INT- 1 0 INT+ 7", "tree": "((sign(abs(x_0_9)) mul sign((5 add (x_0_10 mul -10)))) mul 7)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 2 - 1 - 3 - 3 - 2 - 6 - 9 - 10 - 10 - 15 - 19 - 21 - 22 - 28 - 33 - 36 - 38 - 45 - 51 - 55 - 58 - 66 - 73 - 78 - 82 - 91 - 99 - 105 - 110", "x2": "add sub x_0_4 abs n abs sign mod sign n INT- 6", "tree": "((x_0_4 sub abs(n)) add abs(sign((sign(n) mod -6))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 24 + 12 + 8 + 6 + 4 + 4 + 3 + 3 + 2 + 2 + 2 + 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0", "x2": "idiv abs sub sqr INT+ 4 INT- 8 n", "tree": "(abs(((4)**2 sub -8)) idiv n)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 3 + 10 - 48 + 18 + 60 - 288 + 108 + 360 - 1728 + 648 + 2160 - 1 368 + 3888 + 1 2960 - 6 2208 + 2 3328 + 7 7760 - 37 3248 + 13 9968 + 46 6560 - 223 9488 + 83 9808 + 279 9360 - 1343 6928 + 503 8848 + 1679 6160 - 8062 1568", "x2": "mul INT+ 6 x_0_3", "tree": "(6 mul x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "mod n add INT- 3 idiv INT+ 9 sqr INT+ 6", "tree": "(n mod (-3 add (9 idiv (6)**2)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 7 + 8 - 7 - 8 + 10 + 5 + 10 - 12 - 5 - 10 + 12 + 2 + 10 - 14 - 2 - 10 + 14 + 0 + 10 - 15 + 0 - 10 + 15 - 2 + 10 - 16 + 2 - 10 + 16 - 3", "x2": "sub mul idiv INT+ 6 sub abs x_0_5 x_0_1 sub INT+ 8 INT+ 7 x_0_3", "tree": "(((6 idiv (abs(x_0_5) sub x_0_1)) mul (8 sub 7)) sub x_0_3)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr add idiv INT+ 6 idiv relu add n INT+ 7 INT- 3 n", "tree": "(((6 idiv (relu((n add 7)) idiv -3)) add n))**2", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 10 + 0 - 4 - 9 - 3 - 6 - 9 + 7 + 2 + 7 + 4 + 4 + 8 + 5 + 6 + 6 + 6 + 7 + 7 + 10 + 9 + 11 + 11 + 11 + 13 + 12 + 13 + 14 + 14 + 15 + 15 + 17 + 17 + 18 + 18", "x2": "idiv add add relu add x_0_5 x_0_12 n add INT- 6 n abs INT+ 5", "tree": "(((relu((x_0_5 add x_0_12)) add n) add (-6 add n)) idiv abs(5))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "- 4 + 5 - 10 - 6 - 4 + 0 + 7 + 0 + 0 + 4 + 0 + 12 + 0 + 0 + 15 + 0 + 17 + 0 + 0 + 20 + 0 + 22 + 0 + 0 + 25 + 0 + 27 + 0 + 0 + 30", "x2": "mod relu n add n x_0_5", "tree": "(relu(n) mod (n add x_0_5))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mod mul n n abs mul abs INT- 6 x_0_1", "tree": "((n mul n) mod abs((abs(-6) mul x_0_1)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 1 - 2 + 2 + 3 + 0 - 1 + 3 + 1 - 2 + 2 + 3 + 0 - 1 + 3 + 1 - 2 + 2 + 3 + 0 - 1 + 3 + 1 - 2 + 2 + 3 + 0 - 1", "x2": "sub abs x_0_3 x_0_2", "tree": "(abs(x_0_3) sub x_0_2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 + 3 - 6 - 4 + 9 + 10 - 8 + 10 - 8 + 4 + 5 + 3 - 3 + 3 + 3 - 3 - 3 + 3 - 3 + 3 - 3 - 3 - 3 + 3 - 3 - 3 + 3 + 3 - 3 + 3 - 3 + 3 + 3 + 3 - 3 + 3", "x2": "sub mul INT- 3 sign x_0_11 mod relu mod INT+ 5 idiv sqr INT+ 5 sqr n abs n", "tree": "((-3 mul sign(x_0_11)) sub (relu((5 mod ((5)**2 idiv (n)**2))) mod abs(n)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 10 - 2 + 6 - 40 - 8 + 24 - 160 - 32 + 192 - 1280 - 256 + 1536 - 1 240 - 2048 + 1 2288 - 8 1920 - 2 4576 + 14 7456 - 98 3040 - 29 4912 + 176 9472 - 1179 6480 - 353 8944 + 2123 3664 - 1 8874 3680 - 5662 3104 + 3 3973 8624 - 30 1989 8880", "x2": "mul mul idiv abs n sub INT- 3 INT+ 5 INT- 4 x_0_3", "tree": "(((abs(n) idiv (-3 sub 5)) mul -4) mul x_0_3)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 3 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul abs idiv INT- 5 x_0_2 sqr n", "tree": "(abs((-5 idiv x_0_2)) mul (n)**2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 - 2 - 8 - 10 - 8 - 9 + 10 + 6 + 5 - 5 + 11 + 3 + 9 + 11 + 9 + 10 - 9 - 5 - 4 + 6 - 10 - 2 - 8 - 10 - 8 - 9 + 10 + 6 + 5 - 5 + 11 + 3 + 9 + 11 + 9", "x2": "sub idiv n n x_0_10", "tree": "((n idiv n) sub x_0_10)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600", "x2": "sub relu n sqr n", "tree": "(relu(n) sub (n)**2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 3 + 4 + 4 - 10 + 7 + 53 + 72 + 88 + 95 + 141 + 165 + 3116 + 5574 + 8205 + 9521 + 2 568 + 2 8015 + 972 2057 + 3109 1916 + 6737 1411 + 9070 6730 + 4 2316 6202 + 7 8500 8492 + 94 5184 5064 3775 + 966 7074 2710 2743 + 4538 9074 2435 9585 + 8227 7114 1153 3485 + 17 9069 6370 5410 2228 + 61 6238 3372 2216 5235 + 8933 7375 1210 486 8595 5140 1058", "x2": "add sqr sub idiv n INT- 1 0 x_0_6 mul INT+ 7 n", "tree": "((((n idiv -10) sub x_0_6))**2 add (7 mul n))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 0 + 6 + 7 + 9 + 10 + 12 + 13 + 15 + 16 + 18 + 19 + 21 + 22 + 24 + 25 + 27 + 28 + 30 + 31 + 33 + 34 + 36 + 37 + 39 + 40 + 42", "x2": "add mod abs relu x_0_2 n abs add INT+ 3 n", "tree": "((abs(relu(x_0_2)) mod n) add abs((3 add n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12 + 14 + 13 + 15 + 14 + 16 + 15 + 17 + 16 + 18 + 17 + 19", "x2": "add sqr abs sign INT+ 1 0 x_0_2", "tree": "((abs(sign(10)))**2 add x_0_2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 8 + 10 + 5 + 6 - 4 + 56 + 448 + 90 + 50 + 66 + 1680 + 728 + 784 + 1350 + 800 + 1122 + 1080 + 114 + 7680 + 567 + 6952 + 1472 + 1 2096 + 2850 + 6344 + 1 5309 + 1 9040 + 1 8299 + 1 1880 + 2 8768", "x2": "mul n mod x_0_6 mul n n", "tree": "(n mul (x_0_6 mod (n mul n)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 12 + 18 - 26 + 42 - 54 + 94 - 110 + 202 - 222 + 422 - 446 + 866 - 894 + 1758 - 1790 + 3546 - 3582 + 7126 - 7166 + 1 4290 - 1 4334 + 2 8622 - 2 8670 + 5 7290 - 5 7342", "x2": "sub sub relu x_0_1 x_0_1 add add relu n n x_0_1", "tree": "((relu(x_0_1) sub x_0_1) sub ((relu(n) add n) add x_0_1))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "idiv mul x_0_2 idiv x_0_1 sign mod abs n mul mod n n x_0_2 abs x_0_2", "tree": "((x_0_2 mul (x_0_1 idiv sign((abs(n) mod ((n mod n) mul x_0_2))))) idiv abs(x_0_2))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 4 - 5 - 3 - 10 - 5 - 6 - 4 - 11 - 6 - 7 - 5 - 12 - 7 - 8 - 6 - 13 - 8 - 9 - 7 - 14 - 9 - 10 - 8 - 15 - 10 - 11 - 9 - 16 - 11", "x2": "add sub x_0_4 mod INT+ 2 n sqr INT- 1", "tree": "((x_0_4 sub (2 mod n)) add (-1)**2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 4 - 10 + 1 + 0 + 1 - 10 - 1 - 2 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 26 + 26 + 28 + 28 + 30 + 30 + 32 + 32 + 35 + 36 + 36", "x2": "add n sub INT+ 5 sub INT+ 3 relu relu mod x_0_8 idiv sub n mul x_0_3 x_0_7 mul INT- 8 n", "tree": "(n add (5 sub (3 sub relu(relu((x_0_8 mod ((n sub (x_0_3 mul x_0_7)) idiv (-8 mul n))))))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 1 + 6 - 7 - 6 - 2 - 7 + 4 - 14 - 2 - 16 - 9 - 12 - 23 - 14 - 39 - 23 - 51 - 46 - 65 - 85 - 88 - 136 - 134 - 201 - 219 - 289 - 355 - 423 - 556", "x2": "add x_0_5 x_0_2", "tree": "(x_0_5 add x_0_2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 8 + 4 + 1 - 50 - 49 - 50 - 50 - 56 - 55 - 55 - 55 - 55 - 54 - 54 - 54 - 54 - 53 - 53 - 53 - 53 - 53 - 53 - 53 - 53 - 53 - 52 - 52 - 52", "x2": "sub idiv x_0_4 n add sqr INT+ 7 sign sub INT+ 7 sign n", "tree": "((x_0_4 idiv n) sub ((7)**2 add sign((7 sub sign(n)))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 5 + 9 - 1 + 0 - 1 + 0 - 40 + 81 - 10 + 0 - 12 + 0 - 560 + 1215 - 160 + 0 - 216 + 0 - 1 1200 + 2 5515 - 3520 + 0 - 5184 + 0 - 29 1200 + 68 8905 - 9 8560 + 0 - 15 5520 + 0", "x2": "mul relu n x_0_6", "tree": "(relu(n) mul x_0_6)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 5 - 3 - 1 + 9 + 9 + 1 + 3 + 13 + 13 + 5 + 7 + 17 + 17 + 9 + 11 + 21 + 21 + 13 + 15 + 25 + 25 + 17 + 19 + 29 + 29 + 21", "x2": "add mod INT- 4 n sub n x_0_2", "tree": "((-4 mod n) add (n sub x_0_2))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 3 - 10 + 5 + 7 - 1134 - 2457 - 2688 - 1296 - 1250 - 3069 - 3072 - 3003 - 2856 - 2625 - 2304 - 1887 - 1368 - 741 + 0 + 861 + 1848 + 2967 + 4224 + 1 0 + 1 1726 + 1 3608 + 1 5652 + 1 7864 + 2 250", "x2": "mul n sub sqr n sqr mul INT+ 5 sub INT+ 3 idiv sign x_0_5 n", "tree": "(n mul ((n)**2 sub ((5 mul (3 sub (sign(x_0_5) idiv n))))**2))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 3 + 1 - 7 - 1 - 3 - 1 + 7 + 1 + 3 + 1 - 7 - 1 - 3 - 1 + 7 + 1 + 3 + 1 - 7 - 1 - 3 - 1 + 7 + 1 + 3 + 1 - 7 - 1", "x2": "mul sign INT- 6 x_0_4", "tree": "(sign(-6) mul x_0_4)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 3 - 2 - 9 - 9 + 1 + 3 - 5 + 5 - 8 - 6 + 4 - 6 - 181 - 209 - 237 - 278 - 288 - 323 - 378 - 397 - 276 - 289 - 296 - 312 - 526 - 570 - 596 - 673 - 861 - 942 - 1051 - 1117 - 847 - 883 - 933 - 943 - 1042", "x2": "add x_0_12 sub add sub INT- 5 x_0_8 INT- 3 sqr n", "tree": "(x_0_12 add (((-5 sub x_0_8) add -3) sub (n)**2))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "- 4 - 5 - 7 - 1 + 1 + 0 + 6 + 8 + 2 + 10 + 5 + 12 + 7 + 10 + 10 + 16 + 16 + 14 + 17 + 20 + 21 + 18 + 22 + 24 + 22 + 22 + 21 + 28 + 27", "x2": "add relu n mod mul sub n mul idiv INT+ 1 0 add INT+ 8 n add INT+ 4 n x_0_4 INT- 8", "tree": "(relu(n) add (((n sub ((10 idiv (8 add n)) mul (4 add n))) mul x_0_4) mod -8))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 5 + 7 + 5 - 14 + 9 + 4 - 35 + 10 - 1 - 80 + 9 - 14 - 173 + 4 - 43 - 362 - 9 - 104 - 743 - 38 - 229 - 1508 - 99 - 482 - 3041 - 224 - 991 - 6110", "x2": "add x_0_3 sub x_0_3 n", "tree": "(x_0_3 add (x_0_3 sub n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 - 3 + 7 - 9 + 0 + 9 + 10 + 9 - 19 - 13 + 11 + 3 - 12 - 13 + 1 + 3 - 21 - 17 + 9 + 13 - 22 - 27 + 20 + 23 - 42 - 41 + 32 + 27 - 55 - 55 + 34 + 31 - 77", "x2": "sub idiv INT+ 4 INT- 4 add abs abs x_0_8 x_0_2", "tree": "((4 idiv -4) sub (abs(abs(x_0_8)) add x_0_2))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 2 + 5 - 2 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "abs mul n relu add n mul mod mul n mod n n x_0_3 x_0_4", "tree": "abs((n mul relu((n add (((n mul (n mod n)) mod x_0_3) mul x_0_4)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 + 4 + 9 + 16 + 25 + 36 + 0 + 64 + 81 + 100 + 121 + 144 + 169 + 169 + 196 + 256 + 289 + 289 + 324 + 400 + 361 + 400 + 441 + 576 + 625 + 529", "x2": "relu sqr add n mod x_0_1 idiv abs mod INT- 7 n INT- 6", "tree": "relu(((n add (x_0_1 mod (abs((-7 mod n)) idiv -6))))**2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 4 + 10 - 5 + 0 + 4 + 3 + 4 + 1 + 15 + 11 + 8 + 10 + 10 + 14 + 1 + 6 + 10 + 9 + 10 + 7 + 21 + 17 + 14 + 16 + 16 + 20 + 7 + 12 + 16 + 15", "x2": "abs abs sub n x_0_6", "tree": "abs(abs((n sub x_0_6)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 3 - 1 - 9 - 8 - 1 + 1 + 6 - 2 - 4 - 7 - 8 - 104 - 113 - 120 - 129 - 231 - 240 - 271 - 283 - 380 - 398 - 439 - 459 - 559 - 589 - 640 - 672 - 790 - 240 - 880 - 923 - 1038 - 502 - 1144 - 1202 - 1301", "x2": "sub mod mod x_0_12 n x_0_4 mul n INT+ 8", "tree": "(((x_0_12 mod n) mod x_0_4) sub (n mul 8))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "+ 7 + 3 + 8 - 6 + 1 + 0 - 3 + 8 + 45 + 0 + 55 + 72 + 91 + 168 + 15 + 256 + 51 + 324 + 361 + 400 + 441 + 44 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024", "x2": "abs mul n mod n add INT- 1 0 x_0_7", "tree": "abs((n mul (n mod (-10 add x_0_7))))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 10 - 8 + 1 - 8 + 4 + 8 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 1", "x2": "relu sign sign mod sqr mul INT+ 1 0 add mul sign INT+ 9 INT+ 8 x_0_6 x_0_7", "tree": "relu(sign(sign((((10 mul ((sign(9) mul 8) add x_0_6)))**2 mod x_0_7))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 4 + 49 + 784 + 4225 + 1 5376 + 4 4944 + 11 1556 + 24 4036 + 49 0 + 91 5849 + 161 5441 + 271 5904 + 438 649 + 682 7769 + 1032 3369 + 1521 0 + 2189 3041 + 3088 249 + 4274 5444 + 5821 6900 + 7812 7921 + 1 340 8561 + 1 3521 384 + 1 7479 4841", "x2": "sqr idiv mul n abs mul add INT- 5 abs sqr n sub n INT- 4 sub INT- 9 n", "tree": "(((n mul abs(((-5 add abs((n)**2)) mul (n sub -4)))) idiv (-9 sub n)))**2", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 1 - 5 + 65 + 62 + 133 + 131 + 203 + 202 + 275 + 275 + 349 + 350 + 425 + 427 + 503 + 506 + 583 + 587 + 665 + 670 + 749 + 755 + 835 + 842 + 923 + 931 + 1013", "x2": "add n sub add x_0_2 sqr INT- 8 sign INT+ 5", "tree": "(n add ((x_0_2 add (-8)**2) sub sign(5)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 3 - 2 + 3 - 9 + 15 + 63 + 210 + 654 + 1989 + 5997 + 1 8024 + 5 4108 + 16 2363 + 48 7131 + 146 1438 + 438 4362 + 1315 3137 + 3945 9465 + 1 1837 8452 + 3 5513 5416 + 10 6540 6311 + 31 9621 8999 + 95 8865 7066 + 287 6597 1270 + 862 9791 3885 + 2588 9374 1733 + 7766 8122 5280 + 2 3300 4367 5924 + 6 9901 3102 7859", "x2": "mul INT+ 3 add sub relu x_0_1 mod sub n relu n sqr x_0_4 n", "tree": "(3 mul ((relu(x_0_1) sub ((n sub relu(n)) mod (x_0_4)**2)) add n))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600", "x2": "mul n sub relu sign n n", "tree": "(n mul (relu(sign(n)) sub n))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 + 8 - 1 - 1 + 3 - 9 - 4 + 8 - 3 - 4 + 15 - 8 + 1 + 16 - 1 + 1 + 29 - 2 + 37 + 34 - 3 + 36 + 48 + 3 + 54 + 53 + 11 + 55 + 75 + 40 + 83", "x2": "add sub n sub INT+ 9 idiv n x_0_6 add x_0_6 mod add sqr mod INT+ 4 n sqr n INT+ 1 0", "tree": "((n sub (9 sub (n idiv x_0_6))) add (x_0_6 add ((((4 mod n))**2 add (n)**2) mod 10)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 8 - 10 - 3 + 9 - 3 + 6 + 1 - 10 - 7 + 7 - 8 - 10 - 1 + 9 - 3 + 6 + 1 - 10 - 7 + 7 - 8 - 10 + 0 + 9 - 3 + 6 + 1 - 10 - 7 + 7 - 8 - 10 + 0 + 9 - 3", "x2": "add x_0_10 relu idiv sub n abs add sub n x_0_2 x_0_5 idiv sqr idiv n x_0_8 n", "tree": "(x_0_10 add relu(((n sub abs(((n sub x_0_2) add x_0_5))) idiv (((n idiv x_0_8))**2 idiv n))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 10 + 0 - 9 + 1 + 10 - 8 + 3 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign mul mul INT+ 3 mul idiv n x_0_3 INT- 5 mod idiv n sub x_0_3 n relu x_0_7", "tree": "sign(((3 mul ((n idiv x_0_3) mul -5)) mul ((n idiv (x_0_3 sub n)) mod relu(x_0_7))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 4 + 4 + 72 + 1228 + 2 880 + 35 4964 + 603 4392 + 1 258 4668 + 17 4393 9360 + 296 4696 9124 + 5039 9847 5112 + 8 5679 7407 6908 + 145 6555 5930 7440 + 2476 1445 822 6484 + 4 2094 4566 3985 232 + 71 5605 7628 7745 3948 + 1216 5297 9689 1671 7120 + 2 681 65 4715 8419 1044 + 35 1577 1113 169 3124 7752 + 597 6810 8921 2878 3121 1788 + 1 160 5785 1661 8931 3060 400 + 17 2729 8347 8252 1832 2020 6804 + 293 6407 1913 287 1147 4351 5672 + 4991 8922 2521 4880 9506 3976 6428 + 8 4862 1678 2865 2976 1608 7602 9280 + 144 2656 8530 8710 594 7348 9249 7764", "x2": "sub abs mul relu x_0_1 sub abs INT- 1 0 INT- 7 INT- 4", "tree": "(abs((relu(x_0_1) mul (abs(-10) sub -7))) sub -4)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 2 + 4 - 1 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14 + 9 + 15 + 10 + 16", "x2": "mul INT+ 1 idiv sub x_0_1 n INT- 1", "tree": "(1 mul ((x_0_1 sub n) idiv -1))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 5 + 1 + 8 - 1 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 1", "x2": "relu sign sub mod x_0_6 mod abs INT+ 3 INT- 2 idiv INT- 6 x_0_4", "tree": "relu(sign(((x_0_6 mod (abs(3) mod -2)) sub (-6 idiv x_0_4))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 2 + 2 + 4 + 1 + 0 + 1 + 4 + 2 + 2 + 4 + 1 + 0 + 1 + 4 + 2 + 2 + 4 + 1 + 0 + 1 + 4 + 2 + 2", "x2": "mod mod sqr n INT+ 7 n", "tree": "(((n)**2 mod 7) mod n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 10 + 2 + 2 - 6 - 6 + 8 + 20 - 8 - 8 + 14 + 30 - 20 - 40 + 22 + 40 - 36 - 80 + 42 + 98 - 76 - 124 + 86 + 216 - 132 - 244 + 210 + 378 - 262 - 544 + 454 + 656", "x2": "sub x_0_4 add mod x_0_5 x_0_6 x_0_6", "tree": "(x_0_4 sub ((x_0_5 mod x_0_6) add x_0_6))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "abs mul n n", "tree": "abs((n mul n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 5 - 4 + 1 + 9 - 2 - 2 - 4 - 8 - 1 - 9 - 10 - 9 - 6 - 14 - 7 - 7 - 9 - 13 - 6 - 14 - 15 - 14 - 11 - 19 - 12 - 12 - 14 - 18 - 11", "x2": "sub abs x_0_5 n", "tree": "(abs(x_0_5) sub n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 10 - 5 - 365 - 545 - 1 3685 - 3 3305 - 52 5965 - 172 4945 - 2065 9685 - 8275 7705 - 8 2650 6365 - 38 578 3745 - 335 6001 2885 - 1705 6822 7705 - 1 3787 2869 1565 - 7 5191 8488 8945 - 57 1534 1778 5285 - 327 8440 7378 7305 - 2385 3671 1405 7565 - 1 4187 7537 7040 545 - 10 60 9698 7647 2885 - 61 820 1056 1089 2505 - 421 3015 211 6391 6365 - 2620 2538 8231 5604 6545 - 1 7787 1079 5850 5703 5685 - 11 2116 2477 2186 7471 1305 - 75 2452 1342 2807 2799 5965", "x2": "add mul x_0_2 sqr INT- 6 x_0_1", "tree": "((x_0_2 mul (-6)**2) add x_0_1)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 + 5 - 14 + 5 - 44 + 23 - 88 + 7 - 106 + 57 - 198 + 33 - 224 + 5 - 254 + 213 - 528 + 177 - 566 + 137 - 608 + 93 - 654 + 45 - 704 - 7 - 758", "x2": "sub sub INT- 9 mul mod sub n sign sign sign INT- 2 abs x_0_2 n x_0_1", "tree": "((-9 sub (((n sub sign(sign(sign(-2)))) mod abs(x_0_2)) mul n)) sub x_0_1)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 2 - 9 - 2 + 8 + 9 - 4 - 1 + 7 + 4 + 8 + 3 + 3 + 15 + 7 + 11 + 18 + 10 + 26 + 25 + 21 + 44 + 35 + 47 + 69 + 56 + 91 + 104 + 103", "x2": "add x_0_5 x_0_3", "tree": "(x_0_5 add x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 - 4 - 21 - 64 - 157 - 324 - 601 - 1024 - 1641 - 2500 - 3661 - 5184 - 7141 - 9604 - 1 2657 - 1 6384 - 2 881 - 2 6244 - 3 2581 - 4 0 - 4 8621 - 5 8564 - 6 9961", "x2": "idiv sqr sqr n INT- 4", "tree": "(((n)**2)**2 idiv -4)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 4 + 7 - 1 + 12 + 10 + 0 + 9 - 3 + 0 + 11 + 3 + 16 + 14 + 4 + 13 + 1 + 4 + 15 + 7 + 20 + 18 + 8 + 17 + 5 + 8 + 19", "x2": "sub relu n x_0_4", "tree": "(relu(n) sub x_0_4)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 7 + 2 + 1 + 3 + 2 + 5 + 2 + 7 + 2 + 9 + 2 + 11 + 2 + 13 + 2 + 15 + 2 + 17 + 2 + 19 + 2 + 21 + 2 + 23", "x2": "add mod x_0_2 relu n mod abs relu x_0_1 idiv n x_0_1", "tree": "((x_0_2 mod relu(n)) add (abs(relu(x_0_1)) mod (n idiv x_0_1)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 10 + 15 + 21 + 26 + 31 + 36 + 42 + 47 + 52 + 57 + 63 + 68 + 73 + 78 + 84 + 89 + 94 + 99 + 105 + 110 + 115 + 120", "x2": "idiv sub n mul mul n idiv INT- 8 INT+ 1 0 mul INT- 2 INT- 1 0 relu abs sqr INT- 2", "tree": "((n sub ((n mul (-8 idiv 10)) mul (-2 mul -10))) idiv relu(abs((-2)**2)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 7 - 5 - 3 - 3 + 5 - 8 + 7 - 5 - 6 - 1 + 1 + 1 + 1 + 4 - 1 + 6 - 1 + 1 - 1 + 2 + 0 + 2 + 3 - 1 + 5 - 1 + 2 - 1 + 3 - 1 + 3 + 2", "x2": "add sign idiv INT- 6 x_0_3 abs relu x_0_9", "tree": "(sign((-6 idiv x_0_3)) add abs(relu(x_0_9)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 4 + 4 + 5 + 13 + 13 + 14 + 22 + 22 + 23 + 31 + 31 + 32 + 40 + 40 + 41 + 49 + 49 + 50 + 58 + 58 + 59 + 67 + 67 + 68 + 76 + 76", "x2": "abs add abs x_0_3 relu mul INT+ 9 sign mod mul add x_0_3 n x_0_2 x_0_3", "tree": "abs((abs(x_0_3) add relu((9 mul sign((((x_0_3 add n) mul x_0_2) mod x_0_3))))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 7 - 4 + 58 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "add mul n n sqr mul x_0_2 idiv sign sign sign x_0_1 n", "tree": "((n mul n) add ((x_0_2 mul (sign(sign(sign(x_0_1))) idiv n)))**2)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 2 + 9 - 5 - 2 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign mul idiv INT+ 1 0 x_0_5 sub add x_0_5 sign idiv INT+ 5 n INT- 3", "tree": "sign(((10 idiv x_0_5) mul ((x_0_5 add sign((5 idiv n))) sub -3)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 9 + 1 + 3 + 1 - 3 + 9 - 1 + 0 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv sub x_0_6 x_0_7 sub sqr n INT- 3", "tree": "((x_0_6 sub x_0_7) idiv ((n)**2 sub -3))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 2 + 1 - 3 - 1 + 5 + 4 - 4 + 10 + 3 + 8 - 7 + 2 736 + 3136 + 2 5600 + 2 8224 + 7744 + 6400 + 3 6864 + 3136 + 5184 + 1 2544 + 5 176 + 273 8098 2784 + 6 791 8336 + 417 5973 9904 + 507 7270 7584 + 37 7880 6784 + 25 7089 5616 + 866 7136 0 + 6 319 3600 + 16 7510 1184 + 99 5844 3264 + 1606 6629 2224 + 479 8196 5706 5804 1242 2400", "x2": "sqr mul INT+ 8 add abs INT+ 6 mul sign n mod n sub n x_0_11", "tree": "((8 mul (abs(6) add (sign(n) mul (n mod (n sub x_0_11))))))**2", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr relu abs sub INT+ 8 n", "tree": "(relu(abs((8 sub n))))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 - 8 - 1 - 6 + 10 - 3 + 9 + 7 + 14 + 17 + 23 + 28 + 33 + 58 + 67 + 71 + 79 + 131 + 168 + 180 + 195 + 282 + 399 + 456 + 490 + 627 + 911 + 1130 + 1240 + 1461 + 2049", "x2": "add x_0_5 sub n sub abs x_0_8 abs sub sub add mod n x_0_6 sign INT+ 9 x_0_4 x_0_4", "tree": "(x_0_5 add (n sub (abs(x_0_8) sub abs(((((n mod x_0_6) add sign(9)) sub x_0_4) sub x_0_4)))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 - 6 - 10 + 9 + 13 - 10 - 4 - 4 - 25 + 51 + 56 + 34 + 20 + 29 - 57 - 70 - 54 - 44 - 55 + 111 + 106 + 74 + 50 + 49 - 127 - 130 - 104", "x2": "sub INT- 6 sub add n x_0_5 sqr mod mul n sign sqr n INT- 1 0", "tree": "(-6 sub ((n add x_0_5) sub (((n mul sign((n)**2)) mod -10))**2))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 4 + 3 + 8 + 8 + 4 + 4 + 3 + 8 + 8 + 4 + 4 + 3 + 8 + 8 + 4 + 4 + 3 + 8 + 8 + 4 + 4 + 3 + 8 + 8 + 4 + 4 + 3", "x2": "sub x_0_5 idiv add idiv relu relu n n relu idiv abs INT- 1 n n", "tree": "(x_0_5 sub (((relu(relu(n)) idiv n) add relu((abs(-1) idiv n))) idiv n))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 3 - 4 - 5 - 6 - 7 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 1 - 2 - 3 - 4", "x2": "add INT- 3 sub x_0_1 add sub mod n INT+ 7 INT+ 2 x_0_1", "tree": "(-3 add (x_0_1 sub (((n mod 7) sub 2) add x_0_1)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 5 + 3 + 9 + 1 + 6 - 4 + 4 + 10 + 2 + 7 - 3 + 5 + 11 + 3 + 8 - 2 + 6 + 12 + 4 + 9 - 1 + 7 + 13 + 5 + 10 + 0 + 8", "x2": "add x_0_5 sign sign add n idiv mul x_0_1 sub n sign INT+ 5 n", "tree": "(x_0_5 add sign(sign((n add ((x_0_1 mul (n sub sign(5))) idiv n)))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 25 + 400 + 2025 + 6400 + 1 5625 + 3 2400 + 6 25 + 10 2400 + 16 4025 + 25 0 + 36 6025 + 51 8400 + 71 4025 + 96 400 + 126 5625 + 163 8400 + 208 8025 + 262 4400 + 325 8025 + 400 0 + 486 2025 + 585 6400 + 699 6025", "x2": "sqr add sqr n sqr abs add n relu n", "tree": "(((n)**2 add (abs((n add relu(n))))**2))**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 4 + 0 + 10 - 1 - 2 + 17 + 9 + 11 + 27 + 20 + 23 + 40 + 34 + 38 + 56 + 51 + 56 + 75 + 71 + 77 + 97 + 94 + 101 + 122 + 120 + 128 + 150 + 149", "x2": "add abs idiv x_0_3 abs idiv INT+ 7 sub INT- 3 add x_0_6 n n", "tree": "(abs((x_0_3 idiv abs((7 idiv (-3 sub (x_0_6 add n)))))) add n)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 4 - 7 - 1 + 9 + 13 + 8 - 1 - 4 + 2 + 12 + 16 + 11 + 2 - 1 + 5 + 15 + 19 + 14 + 5 + 2 + 8 + 18 + 22 + 17 + 8", "x2": "sub n x_0_3", "tree": "(n sub x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 6 - 1 + 8 + 5 - 1 + 0 - 3 + 5 + 0 + 9 - 5 + 5 + 4 + 2 + 5 + 7 + 8 + 3 + 6 + 3 + 0 + 6 + 10 + 1 + 3 + 2 + 4 + 9 + 4 + 5 + 7 + 2 + 0 + 4", "x2": "abs sub x_0_12 add add mod mul INT+ 5 sign n n abs x_0_7 sub INT- 8 INT- 1", "tree": "abs((x_0_12 sub ((((5 mul sign(n)) mod n) add abs(x_0_7)) add (-8 sub -1))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 10 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 5 - 6 - 6 - 6 - 6 - 6 - 7 - 7 - 7", "x2": "idiv add idiv mul add n idiv n x_0_1 sign INT- 7 sub mod x_0_1 n n add n INT+ 7 INT- 5", "tree": "(((((n add (n idiv x_0_1)) mul sign(-7)) idiv ((x_0_1 mod n) sub n)) add (n add 7)) idiv -5)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 - 7 + 7 - 3 + 5 - 5 + 196 + 1 + 625 + 2209 + 2601 + 49 + 25 + 225 + 40 9600 + 495 625 + 1 4161 + 2704 + 1936 + 6 25 + 1677 8936 3641 + 770 1568 5289 + 2 118 5856 + 744 1984 + 384 5521 + 36 612 2601 + 281 5327 560 1123 5841 4224 + 1431 8911 2924 8191 5289 + 4 475 7603 2323 3225", "x2": "sqr mod add x_0_6 mod n sub x_0_5 idiv mod x_0_3 n sign x_0_2 mul x_0_5 n", "tree": "(((x_0_6 add (n mod (x_0_5 sub ((x_0_3 mod n) idiv sign(x_0_2))))) mod (x_0_5 mul n)))**2", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 10 - 5 + 5 - 1 - 1 + 1 - 7 - 8 + 3 - 9 - 1 - 2 - 2 - 15 - 8 - 10 - 9 - 11 - 3 - 12 - 4 - 11 - 2 - 10 - 4 - 15", "x2": "add mod x_0_3 x_0_2 idiv n x_0_3", "tree": "((x_0_3 mod x_0_2) add (n idiv x_0_3))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 4 + 0 + 1 - 7 - 3 + 8 + 2 + 0 + 16 + 0 - 3 + 392 + 18 + 0 + 64 + 0 - 768 + 0 + 162 + 0 + 2 736 + 0 - 314 5728 + 0 + 9555 1488 + 0 + 5 4419 5584 + 0 - 1352 6054 6059 4688 + 0", "x2": "mul x_0_6 sqr x_0_8", "tree": "(x_0_6 mul (x_0_8)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 3 - 3 - 9 + 1 - 9 - 3 - 9 - 9 + 9 + 10 - 6 + 6 + 0 + 4 + 0 + 24 + 10 + 1 + 26 + 22 + 29 + 39 + 42 + 45 + 27 + 81 + 60 + 83 + 105 + 96 + 132 + 121 + 186 + 179", "x2": "relu add add add mul x_0_12 sign abs mul INT+ 1 0 relu mul INT- 6 x_0_5 x_0_10 n x_0_7", "tree": "relu(((((x_0_12 mul sign(abs((10 mul relu((-6 mul x_0_5)))))) add x_0_10) add n) add x_0_7))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 5 - 4 + 6 - 10 + 121 - 29 + 6114 + 58 - 117 + 3 9614 - 62 + 601 + 3 9446 - 258 + 3 4126 + 3 9191 - 547 + 40 3162 + 3 8831 - 948 + 49 2685 + 3 8348 - 1477 + 66 8365 + 3 7724 - 2153", "x2": "sub sub x_0_3 mul mul mod INT+ 1 mul mod add INT+ 3 x_0_2 x_0_1 INT+ 6 n n idiv x_0_2 sqr x_0_3", "tree": "((x_0_3 sub (((1 mod (((3 add x_0_2) mod x_0_1) mul 6)) mul n) mul n)) sub (x_0_2 idiv (x_0_3)**2))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 + 9 + 6 - 2 + 7 - 1 - 4 + 149 + 18 - 143 + 2816 + 201 - 8 2488 + 8 4128 + 205 3816 - 49 9800 - 4792 8661 + 9533 5669 + 15 8886 7480 - 74 4974 4120 - 841 3562 4170 + 3073 1279 5148 + 1 3420 290 1277 - 19 5071 7956 1485 - 7 5877 2744 4763 + 1598 4373 2214 7080 - 381 4224 6773 4240 - 17 7198 971 3829 6922 + 14 4859 7412 9298 5368 + 1995 814 7919 9515 9337", "x2": "idiv mul sub add n x_0_3 x_0_2 mod x_0_7 sqr n INT+ 6", "tree": "((((n add x_0_3) sub x_0_2) mul (x_0_7 mod (n)**2)) idiv 6)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 1 + 1 + 1 + 1 + 1 + 2 + 0 + 7 + 6 + 5 + 4 + 3 + 11 + 6 + 1 + 13 + 9 + 9 + 16 + 4 + 14 + 3", "x2": "mod sqr sqr idiv n INT- 6 n", "tree": "((((n idiv -6))**2)**2 mod n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 3 + 0 + 1 + 0 + 1 + 0 + 7 + 0 + 9 + 0 + 3 + 0 + 7 + 0 + 1 + 0 + 7 + 0 + 9 + 0 + 19 + 0 + 13 + 0", "x2": "mod mul sub n INT- 7 x_0_2 n", "tree": "(((n sub -7) mul x_0_2) mod n)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 10 + 3 + 3 + 3 + 4 + 4 - 4 - 1 + 3 + 46 - 51 + 14 + 14 + 14 + 19 + 21 - 19 - 6 + 14 + 231 - 256 + 69 + 69 + 69 + 94 + 106 - 94 - 31 + 69 + 1156 - 1281 + 344", "x2": "add sign idiv INT- 1 x_0_9 mul INT+ 5 x_0_10", "tree": "(sign((-1 idiv x_0_9)) add (5 mul x_0_10))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 7 - 6 + 2 + 5 - 5 - 1 - 3 + 3 + 3 + 4 + 4 + 4 + 0 + 3 + 3 - 1 - 1 + 3 + 0 + 0 + 4 + 4 + 3 + 3 + 3 - 1 - 1 + 0 + 0 + 0", "x2": "sub INT+ 3 idiv x_0_5 mod sign idiv x_0_6 mul INT+ 5 sign x_0_8 n", "tree": "(3 sub (x_0_5 idiv (sign((x_0_6 idiv (5 mul sign(x_0_8)))) mod n)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 6 + 6 - 9 + 5 - 9 - 5 - 48 + 81 + 40 + 528 - 984 - 533 - 7406 + 1 4775 + 8528 + 12 6004 - 26 6184 - 16 2165 - 252 1920 + 559 3686 + 356 9940 + 5803 9925 - 1 3432 7352 - 8929 8575 - 15 984 7560 + 36 2870 3043 + 25 159 4144 + 438 635 8958 - 1089 1084 2180", "x2": "mul sub idiv mul idiv x_0_6 sqr INT+ 9 x_0_7 x_0_7 x_0_3 n", "tree": "(((((x_0_6 idiv (9)**2) mul x_0_7) idiv x_0_7) sub x_0_3) mul n)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 7 + 5 + 25 + 31 + 19 + 3 + 7 + 14 + 18 + 16 + 11 + 9 + 13 + 20 + 24 + 22 + 17 + 15 + 19 + 26 + 30 + 28 + 23 + 21 + 25", "x2": "abs add sub INT+ 2 mul add n INT+ 1 idiv INT- 7 n sub x_0_1 add sign INT+ 2 x_0_2", "tree": "abs(((2 sub ((n add 1) mul (-7 idiv n))) add (x_0_1 sub (sign(2) add x_0_2))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 20 - 60 - 120 - 200 - 300 - 420 - 560 - 720 - 900 - 1100 - 1320 - 1560 - 1820 - 2100 - 2400 - 2720 - 3060 - 3420 - 3800 - 4200 - 4620 - 5060 - 5520", "x2": "sub mod relu INT- 8 n abs relu mul mul INT+ 1 0 add sign INT+ 3 n n", "tree": "((relu(-8) mod n) sub abs(relu(((10 mul (sign(3) add n)) mul n))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 - 6 + 6 + 6 + 6 + 12 + 18 + 24 + 36 + 54 + 78 + 114 + 168 + 246 + 360 + 528 + 774 + 1134 + 1662 + 2436 + 3570 + 5232 + 7668 + 1 1238 + 1 6470", "x2": "abs abs add x_0_1 relu x_0_3", "tree": "abs(abs((x_0_1 add relu(x_0_3))))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 7 - 2 - 5 + 4 + 3 + 1 + 0 + 0 + 0 + 4 + 3 + 1 + 0 + 0 + 0 + 4 + 3 + 1 + 0 + 0 + 0 + 4 + 3 + 1 + 0 + 0 + 0 + 4", "x2": "mul mod INT- 2 INT+ 3 relu x_0_6", "tree": "((-2 mod 3) mul relu(x_0_6))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 10 - 4 + 8 + 2 + 1 + 11 + 5 - 7 - 1 + 0 - 10 - 4 + 8 + 2 + 1 + 11 + 5 - 7 - 1 + 0 - 10 - 4 + 8 + 2 + 1 + 11 + 5 - 7", "x2": "sub sign relu idiv idiv x_0_5 sign n x_0_5 x_0_5", "tree": "(sign(relu(((x_0_5 idiv sign(n)) idiv x_0_5))) sub x_0_5)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 5 + 2 + 2 - 10 - 4 + 14 + 40 + 18 + 20 + 0 + 0 + 182 + 560 + 270 + 320 + 0 + 0 + 3458 + 1 1200 + 5670 + 7040 + 0 + 0 + 8 6450 + 29 1200 + 15 3090 + 19 7120 + 0", "x2": "relu mul n x_0_6", "tree": "relu((n mul x_0_6))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 10 + 8 + 3 + 8 - 8 + 6 - 70 + 64 + 27 + 80 - 88 + 72 - 910 + 896 + 405 + 1280 - 1496 + 1296 - 1 7290 + 1 7920 + 8505 + 2 8160 - 3 4408 + 3 1104 - 43 2250 + 46 5920 + 22 9635 + 78 8480 - 99 7832", "x2": "mul n x_0_6", "tree": "(n mul x_0_6)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 + 9 + 5 - 3 + 0 - 23 - 117 - 109 - 59 - 105 - 137 - 1265 - 1253 - 635 - 1355 - 1941 - 2 1221 - 2 2235 - 1 1709 - 2 6705 - 4 325 - 46 6383 - 51 881 - 28 445 - 66 7005 - 104 7779 - 1259 1617 - 1430 3889", "x2": "sub INT- 5 mul relu abs idiv add x_0_5 n sign INT- 4 n", "tree": "(-5 sub (relu(abs(((x_0_5 add n) idiv sign(-4)))) mul n))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 2 - 5 - 10 + 5 - 2 - 42 + 16 + 22 + 50 - 28 + 24 + 273 - 112 - 330 - 800 + 476 - 216 - 5187 + 2240 + 3465 + 8800 - 5474 + 5184 + 6 4837 - 2 9120 - 9 3555 - 24 6400 + 15 8746", "x2": "idiv mul x_0_6 n idiv x_0_1 sub n add n sub x_0_1 INT+ 8", "tree": "((x_0_6 mul n) idiv (x_0_1 idiv (n sub (n add (x_0_1 sub 8)))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 0 + 1 + 0 + 8 - 8 + 9 - 3 - 6 - 1 - 13 - 25 - 50 - 32 - 72 - 1 - 61 - 61 - 200 - 1250 - 200 - 1152 - 1152 - 450 - 50 - 2 0 - 70 8050 - 9800 - 45 4105 - 4705 - 3 1501 - 60 6101 - 1 7764 2401", "x2": "idiv sqr sub sub x_0_7 sqr idiv INT+ 1 sign sqr sub INT+ 8 sub INT+ 1 x_0_1 x_0_10 INT- 2", "tree": "((((x_0_7 sub ((1 idiv sign(((8 sub (1 sub x_0_1)))**2)))**2) sub x_0_10))**2 idiv -2)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 8 - 4 - 4 + 1 + 1 + 1 - 8 - 7 - 6 + 1 + 1 + 1 - 4 - 4 - 4 + 1 + 1 + 1 - 3 - 3 - 2 + 1 + 1 + 1 - 2 - 2", "x2": "idiv add n mul INT+ 7 mul relu sub x_0_3 mod x_0_2 sign INT+ 4 INT- 9 n", "tree": "((n add (7 mul (relu((x_0_3 sub (x_0_2 mod sign(4)))) mul -9))) idiv n)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 - 8 - 10 + 10 - 2 + 3 + 54 + 53 + 114 + 77 + 127 + 96 + 198 + 167 + 331 + 264 + 479 + 382 + 700 + 573 + 1056 + 863 + 1562 + 1273 + 2291 + 1876 + 3378 + 2771 + 4973", "x2": "add x_0_2 add mod add abs INT- 6 x_0_6 abs sub mul n INT- 6 x_0_3 mod INT- 2 n", "tree": "(x_0_2 add (((abs(-6) add x_0_6) mod abs(((n mul -6) sub x_0_3))) add (-2 mod n)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 9 - 2 - 4 + 1 + 4 - 1 - 9 - 7 - 8 + 5 + 31 - 22 - 119 + 88 + 468 - 358 - 1879 + 1434 + 7544 - 5761 - 3 293 + 2 3160 + 12 1637 - 9 3001 - 48 8342 + 37 3903 + 196 909 - 150 1376 - 787 2498 + 603 6205 + 3161 1626 - 2423 7824 - 1 2691 1689", "x2": "add x_0_8 add mul INT- 4 x_0_2 sub mod INT- 4 x_0_11 INT- 1", "tree": "(x_0_8 add ((-4 mul x_0_2) add ((-4 mod x_0_11) sub -1)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 1 + 1 - 8 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign idiv x_0_3 x_0_2", "tree": "sign((x_0_3 idiv x_0_2))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 1 - 7 - 3 - 1 - 2 - 6 - 4 - 2 - 3 - 5 - 4 - 3 - 4 - 5 - 4 - 4 - 5 - 5 - 4 - 4 - 6 - 6 - 4 - 4 - 7", "x2": "sub idiv n x_0_2 idiv abs sign x_0_2 n", "tree": "((n idiv x_0_2) sub (abs(sign(x_0_2)) idiv n))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 3 + 7 + 1764 + 1 6384 + 2 6244 + 23 400 + 43 5600 + 74 6496 + 119 2464 + 180 6336 + 262 4400 + 829 4400 + 1132 9956 + 1511 6544 + 1976 6916 + 2540 1600 + 3214 8900 + 7136 8704 + 8805 9456 + 1 749 5424 + 1 2996 0 + 1 5575 400 + 1 8517 7664 + 3 4151 400 + 4 40 100", "x2": "sqr mul sub sqr n sqr INT+ 3 sub mod n sub sign x_0_3 INT+ 7 n", "tree": "((((n)**2 sub (3)**2) mul ((n mod (sign(x_0_3) sub 7)) sub n)))**2", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 9 + 2 - 3 - 1 + 1 - 1 - 4 - 2 - 2 - 2 - 3 - 2 - 3 - 2 - 4 - 2 - 2 - 2 - 3 - 2 - 3 - 2 - 2 - 2 - 3 - 2", "x2": "add mod mod INT- 9 n x_0_4 INT- 2", "tree": "(((-9 mod n) mod x_0_4) add -2)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 7 - 4 + 7 - 10 + 14 + 8 - 14 + 10 - 14 - 8 + 14 - 10 + 14 + 8 - 14 + 10 - 14 - 8 + 14 - 10 + 14 + 8 - 14 + 10 - 14 - 8 + 14", "x2": "mul idiv INT- 8 n x_0_4", "tree": "((-8 idiv n) mul x_0_4)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 6 - 3 + 56 + 32 - 440 - 248 + 3528 + 1992 - 2 8216 - 1 5928 + 22 5736 + 12 7432 - 180 5880 - 101 9448 + 1444 7048 + 815 5592 - 1 1557 6376 - 6524 4728 + 9 2461 1016 + 5 2195 7832 - 73 9688 8120 - 41 7566 2648 + 591 7510 4968 + 334 530 1192 - 4734 83 9736", "x2": "add abs add INT+ 8 mod mod mod n n n n mul INT- 8 x_0_2", "tree": "(abs((8 add (((n mod n) mod n) mod n))) add (-8 mul x_0_2))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 3 + 10 + 3 - 2 - 8 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv add x_0_3 idiv idiv INT+ 6 n sqr sign x_0_6 mul n n", "tree": "((x_0_3 add ((6 idiv n) idiv (sign(x_0_6))**2)) idiv (n mul n))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 9 + 270 - 8100 + 24 3000 - 729 0 + 2 1870 0 - 65 6100 0 + 1968 3000 0 - 5 9049 0 0 + 177 1470 0 0 - 5314 4100 0 0 + 15 9432 3000 0 0 - 478 2969 0 0 0 + 1 4348 9070 0 0 0 - 43 467 2100 0 0 0 + 1291 4016 3000 0 0 0 - 3 8742 489 0 0 0 0 + 116 2261 4670 0 0 0 0 - 3486 7844 100 0 0 0 0 + 10 4603 5320 3000 0 0 0 0 - 313 8105 9609 0 0 0 0 0 + 9414 3178 8270 0 0 0 0 0 - 28 2429 5364 8100 0 0 0 0 0 + 847 2886 944 3000 0 0 0 0 0", "x2": "mul mul INT+ 5 x_0_1 INT- 6", "tree": "((5 mul x_0_1) mul -6)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 1 - 10 + 0 + 6 + 4 - 10 + 6 + 9 + 17 + 9 + 0 + 10 + 16 + 14 + 0 + 16 + 19 + 27 + 19 + 10 + 20 + 26 + 24 + 10 + 26 + 29 + 37 + 29 + 20 + 30 + 36", "x2": "add x_0_9 INT+ 1 0", "tree": "(x_0_9 add 10)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 5 - 6 + 1 + 1 + 8 + 8 + 57 + 57 + 400 + 400 + 2801 + 2801 + 1 9608 + 1 9608 + 13 7257 + 13 7257 + 96 800 + 96 800 + 672 5601 + 672 5601 + 4707 9208 + 4707 9208 + 3 2955 4457 + 3 2955 4457 + 23 688 1200", "x2": "add add mod add sub INT+ 8 INT+ 4 add mod n n INT- 9 mul INT+ 7 x_0_2 INT+ 5 mod sqr INT- 4 INT+ 5", "tree": "(((((8 sub 4) add ((n mod n) add -9)) mod (7 mul x_0_2)) add 5) add ((-4)**2 mod 5))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 9 + 5 + 7 - 5 + 1 - 2 + 0 + 4 + 8 + 0 + 2 + 0 + 1 + 5 + 9 + 1 + 3 + 1 + 2 + 6 + 10 + 2 + 4 + 2 + 3 + 7 + 11 + 3 + 5", "x2": "relu add sign x_0_2 x_0_6", "tree": "relu((sign(x_0_2) add x_0_6))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 10 - 60 - 180 - 400 - 750 - 1260 - 1960 - 2880 - 4050 - 5500 - 7260 - 9360 - 1 1830 - 1 4700 - 1 8000 - 2 1760 - 2 6010 - 3 780 - 3 6100 - 4 2000 - 4 8510 - 5 5660 - 6 3480", "x2": "mul add sqr n n mul INT- 5 n", "tree": "(((n)**2 add n) mul (-5 mul n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 + 2 - 9 - 8 + 5 - 1 - 13 - 2 - 3 - 1 - 10 - 13 - 9 - 8 - 10 - 1 - 13 - 2 - 3 - 1 - 10 - 13 - 9 - 8 - 10 - 1 - 13 - 2", "x2": "mod add INT- 3 sub INT- 8 x_0_5 sub INT- 8 abs INT+ 7", "tree": "((-3 add (-8 sub x_0_5)) mod (-8 sub abs(7)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 1 + 8 - 1 + 10 - 5 - 3 - 1 + 0 + 0 + 9 + 0 + 11 - 4 - 2 + 0 + 1 + 1 + 10 + 1 + 12 - 3 - 1 + 1 + 2 + 2 + 11 + 2 + 13 - 2 + 0 + 2", "x2": "add sign n x_0_8", "tree": "(sign(n) add x_0_8)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 4 + 2 - 4 + 7 + 5 + 6 + 5 + 5 + 10 + 11 + 12 + 13 + 13 + 13 + 13 + 15 + 15 + 16 + 18 + 21 + 19 + 18 + 24 + 18 + 18 + 22 + 28", "x2": "idiv sqr n add relu mod sub idiv INT+ 1 add n n x_0_1 abs sub x_0_5 INT+ 7 n", "tree": "((n)**2 idiv (relu((((1 idiv (n add n)) sub x_0_1) mod abs((x_0_5 sub 7)))) add n))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 1 + 3 - 7 - 3 - 3 - 5 + 83 + 89 + 116 + 171 + 154 + 190 + 224 + 7117 + 8185 + 1 3750 + 2 9579 + 2 4081 + 3 6508 + 5 619 + 5065 2178 + 6699 4777 + 1 8906 3091 + 8 7491 7876 + 5 7989 5245 + 13 3283 4818 + 25 6228 3959 + 2565 6431 3614 4550 + 4488 3001 4528 634", "x2": "add sqr x_0_7 add sign INT+ 3 add mul n n mod add abs INT- 3 x_0_6 n", "tree": "((x_0_7)**2 add (sign(3) add ((n mul n) add ((abs(-3) add x_0_6) mod n))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 9 + 17 + 1 + 31 + 19 + 53 + 45 + 83 + 79 + 121 + 121 + 167 + 171 + 221 + 229 + 283 + 295 + 353 + 369 + 431 + 451 + 517 + 541 + 611", "x2": "sub mul n add n n x_0_1", "tree": "((n mul (n add n)) sub x_0_1)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 + 5 - 2 - 10 + 22 - 20 - 68 + 124 - 128 - 416 + 736 - 776 - 2504 + 4408 - 4664 - 1 5032 + 2 6440 - 2 7992 - 9 200 + 15 8632 - 16 7960 - 54 1208 + 95 1784 - 100 7768 - 324 7256 + 571 696 - 604 6616", "x2": "sub mul sub mod relu n sign abs x_0_4 x_0_3 INT- 6 INT+ 8", "tree": "((((relu(n) mod sign(abs(x_0_4))) sub x_0_3) mul -6) sub 8)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 10 + 10 + 75 - 57 - 492 + 387 + 3011 - 2634 - 2 984 + 1 5917 + 12 6039 - 11 1260 - 88 2088 + 66 7773 + 529 2771 - 467 4136 - 3704 9088 + 2804 5161 + 2 2229 4911 - 1 9631 5704 - 15 5606 3912 + 11 7789 4733 + 93 3638 4027 - 82 4526 2528 - 653 5468 7536", "x2": "sub add x_0_2 add mod sqr n x_0_2 add n INT+ 3 mul x_0_2 INT+ 8", "tree": "((x_0_2 add (((n)**2 mod x_0_2) add (n add 3))) sub (x_0_2 mul 8))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 3 + 3 + 10 - 8 + 4 + 7 - 5 + 14 - 1 - 1 + 21 - 6 + 13 + 20 - 7 + 34 + 14 + 6 + 54 + 7 + 40 + 68 + 13 + 94 + 75 + 53 + 162", "x2": "add x_0_5 x_0_3", "tree": "(x_0_5 add x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 7 - 5 - 6 + 1 - 3 - 7 - 5 - 6 - 8 - 3 - 7 - 5 - 6 - 8 - 3 - 7 - 5 - 6 - 8 - 3 - 7 - 5 - 6 - 8 - 3 - 7 - 5", "x2": "mod x_0_5 INT- 9", "tree": "(x_0_5 mod -9)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 3 + 9 - 6 + 16 - 12 + 24 - 18 + 32 - 25 + 41 - 32 + 51 - 40 + 61 - 49 + 72 - 58 + 84 - 68 + 96 - 79 + 109 - 90", "x2": "sub sub n x_0_1 idiv sqr n x_0_1", "tree": "((n sub x_0_1) sub ((n)**2 idiv x_0_1))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 6 + 39 + 148 + 405 + 906 + 1771 + 3144 + 5193 + 8110 + 1 2111 + 1 7436 + 2 4349 + 3 3138 + 4 4115 + 5 7616 + 7 4001 + 9 3654 + 11 6983 + 14 4420 + 17 6421 + 21 3466 + 25 6059", "x2": "add sqr sub n sqr relu n abs n", "tree": "(((n sub (relu(n))**2))**2 add abs(n))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 64 + 729 + 4096 + 1 5625 + 4 6656 + 11 7649 + 26 2144 + 53 1441 + 100 0 + 177 1561 + 298 5984 + 482 6809 + 752 9536 + 1139 625 + 1677 7216 + 2413 7569 + 3401 2224 + 4704 5881 + 6400 0 + 8576 6121 + 1 1337 9904 + 1 4803 5889", "x2": "sqr mul mul relu n n sub sub INT+ 1 sqr sign idiv add INT+ 2 n INT+ 1 n", "tree": "(((relu(n) mul n) mul ((1 sub (sign(((2 add n) idiv 1)))**2) sub n)))**2", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 4 + 2 + 1 - 3 + 10 + 3 - 1 - 3 + 1 - 2 - 1 + 2 + 1 - 2 + 4 + 2 - 4 - 2 + 4 - 3 - 4 + 3 + 4 - 3 + 1 + 3 - 1 - 3", "x2": "mod sub idiv idiv INT- 7 INT- 5 sub n x_0_2 x_0_2 mul sign x_0_5 INT- 5", "tree": "((((-7 idiv -5) idiv (n sub x_0_2)) sub x_0_2) mod (sign(x_0_5) mul -5))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 8 + 4 - 8 - 10 + 9 - 2 - 6 + 17 + 24 + 47 - 12 - 3 + 35 - 115 - 8 + 33 + 32 + 27 - 16 - 121 + 32 + 18 - 51 + 42 + 48 + 55 - 25 + 22 + 58 + 87", "x2": "add idiv add x_0_1 relu mul n n x_0_8 n", "tree": "(((x_0_1 add relu((n mul n))) idiv x_0_8) add n)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 5 + 9 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr mod n x_0_1", "tree": "((n mod x_0_1))**2", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 + 5 - 1 + 8 - 6 + 87 + 16 + 44 + 18 + 110 + 11 + 16 + 13 + 78 + 16 + 16 + 18 + 459 + 19 + 20 + 22 + 1 2343 + 23 + 28 + 29 + 949 8750 + 27 + 44", "x2": "add n sqr idiv sub abs INT+ 5 add INT- 9 x_0_4 sub sub n x_0_5 relu abs INT- 8", "tree": "(n add (((abs(5) sub (-9 add x_0_4)) idiv ((n sub x_0_5) sub relu(abs(-8)))))**2)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 5 + 70 + 896 + 1 640 + 12 3928 + 143 7128 + 1664 9864 + 1 9285 8568 + 22 3382 3816 + 258 7349 3576 + 2996 8184 3272 + 3 4710 8798 5736 + 40 2041 4018 8744 + 465 6674 9904 1864 + 5393 6290 6130 1320 + 6 2472 1168 8504 6344 + 72 3588 226 7421 1912 + 838 1013 446 5766 9192 + 9707 3717 9903 2943 5208 + 11 2436 3686 6141 9735 5592 + 130 2302 7508 8695 3879 2520 + 1508 4020 1898 9760 1713 8760 + 1 7471 1805 6337 3171 5375 2136 + 20 2361 2713 5551 1116 7264 4680", "x2": "mul sub sub abs x_0_1 x_0_2 add x_0_2 INT- 4 mul relu INT+ 7 INT+ 2", "tree": "(((abs(x_0_1) sub x_0_2) sub (x_0_2 add -4)) mul (relu(7) mul 2))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 8 + 18 + 25 + 34 + 45 + 58 + 73 + 90 + 109 + 130 + 153 + 178 + 205 + 234 + 265 + 298 + 333 + 370 + 409 + 450 + 493 + 538 + 585 + 634", "x2": "add sqr n add add add INT+ 9 sign x_0_2 sign INT- 2 relu INT- 8", "tree": "((n)**2 add (((9 add sign(x_0_2)) add sign(-2)) add relu(-8)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 - 5 - 2 + 6 + 8 + 1296 + 1764 + 2304 + 2916 + 3600 + 4356 + 5184 + 6084 + 7056 + 8100 + 9216 + 1 404 + 1 1664 + 1 2996 + 1 4400 + 1 5876 + 1 7424 + 1 9044 + 2 736 + 2 2500 + 2 4336 + 2 6244 + 2 8224", "x2": "sqr mul add abs sqr abs mod x_0_5 INT- 1 INT- 6 n", "tree": "(((abs((abs((x_0_5 mod -1)))**2) add -6) mul n))**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 6 - 4 + 60 + 11 + 10 + 67 + 19 + 19 + 77 + 30 + 31 + 90 + 44 + 46 + 106 + 61 + 64 + 125 + 81 + 85 + 147 + 104 + 109 + 172 + 130", "x2": "abs abs sub x_0_3 mul sub mul n sub relu x_0_1 x_0_1 sign x_0_3 n", "tree": "abs(abs((x_0_3 sub (((n mul (relu(x_0_1) sub x_0_1)) sub sign(x_0_3)) mul n))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 6 + 9 - 3 - 4 - 6 + 3 + 9 + 10 + 6 + 6 + 7 + 8 + 8 + 7 + 8 + 8 + 15 + 17 + 11 + 11 + 12 + 17 + 16 + 12 + 13 + 13 + 21", "x2": "sub add add sign add INT- 8 add INT+ 9 idiv n x_0_1 n idiv INT- 5 abs INT+ 2 mod x_0_5 x_0_3", "tree": "(((sign((-8 add (9 add (n idiv x_0_1)))) add n) add (-5 idiv abs(2))) sub (x_0_5 mod x_0_3))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 4 + 4 - 4 + 84 + 108 - 204 + 3990 + 5850 - 1 2216 + 26 3292 + 42 3156 - 95 184 + 2211 6480 + 3818 9316 - 9105 9018 + 22 5588 912 + 41 3181 8250 - 103 6866 8304 + 2707 570 9392 + 5212 5363 6864 - 1 3675 3735 6644 + 37 3573 8789 6048 + 75 1282 13 5728 - 205 55 262 3792 + 5827 7525 1178 3440 + 1 2179 700 6374 2572", "x2": "mul INT- 6 sub sub abs add INT+ 5 INT+ 3 mul x_0_3 n relu add idiv x_0_4 n abs INT- 2", "tree": "(-6 mul ((abs((5 add 3)) sub (x_0_3 mul n)) sub relu(((x_0_4 idiv n) add abs(-2)))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 2 - 2 - 3 - 6 + 7 + 8 + 1 + 3 + 2 + 9 + 9 + 16 + 15 + 19 + 15 + 16 + 9 + 11 + 10 + 17 + 17 + 24 + 23 + 27 + 23 + 24 + 17 + 19 + 18 + 25 + 25 + 32", "x2": "sub mod x_0_10 add abs sqr sign INT+ 3 abs x_0_2 INT- 8", "tree": "((x_0_10 mod (abs((sign(3))**2) add abs(x_0_2))) sub -8)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 9 - 9 - 8 - 3 + 7 + 4 + 3 + 4 + 7 + 12 + 19 + 28 + 39 + 52 + 67 + 84 + 103 + 124 + 147 + 172 + 199 + 228 + 259 + 292 + 327 + 364 + 403", "x2": "relu sub sqr add INT- 7 n mod INT- 3 mul mod x_0_4 INT- 5 n", "tree": "relu((((-7 add n))**2 sub (-3 mod ((x_0_4 mod -5) mul n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 + 6 + 2 - 10 - 6 + 4 - 6 - 17 - 12 - 1 - 10 - 20 - 14 - 9 - 17 - 26 - 19 - 13 - 20 - 28 - 27 - 20 - 26 - 33 - 31 - 23 - 28", "x2": "add x_0_4 mod sign mod x_0_2 INT+ 4 add mod abs n INT+ 7 INT- 9", "tree": "(x_0_4 add (sign((x_0_2 mod 4)) mod ((abs(n) mod 7) add -9)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 5 - 5 - 6 - 8 - 11 - 15 - 20 - 26 - 33 - 41 - 50 - 60 - 71 - 83 - 96 - 110 - 125 - 141 - 158 - 176 - 195 - 215 - 236 - 258", "x2": "sub sub x_0_1 INT- 2 n", "tree": "((x_0_1 sub -2) sub n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 - 9 + 3 - 10 + 7 + 2 - 7 + 6 - 1 + 6 + 1 + 9 + 97 + 902 + 149 + 342 + 2041 - 81 + 2643 + 682 + 170 + 364 + 2064 - 57 + 2668 + 2 4160 + 197 + 392 + 2093 - 27 + 2699 + 4 6016 + 230 + 426 + 2128", "x2": "sub add add sub sqr n sqr n n x_0_6 mul n mul x_0_12 idiv n x_0_8", "tree": "(((((n)**2 sub (n)**2) add n) add x_0_6) sub (n mul (x_0_12 mul (n idiv x_0_8))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 2 - 10 - 1 - 7 + 8 - 3 - 3 + 6 - 4 - 7 + 13 - 3 - 4 + 7 - 3 - 8 + 14 - 3 - 5 + 8 - 2 - 9 + 15 - 3 - 6 + 9 - 1 - 10 + 17 - 3 - 7", "x2": "add idiv add INT- 6 INT+ 1 x_0_8 x_0_6", "tree": "(((-6 add 1) idiv x_0_8) add x_0_6)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 4 - 3 + 4 + 5 + 2 - 1 - 4 + 1 + 5 + 2 - 2 - 4 + 1 + 5 + 1 - 3 - 4 + 1 + 5 + 0 - 4 - 4 + 1 + 5 - 1 - 5 - 4 + 1 + 5 - 2 - 6", "x2": "add idiv sign x_0_9 INT+ 9 x_0_5", "tree": "((sign(x_0_9) idiv 9) add x_0_5)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 1 + 100 - 11 + 23 - 8 + 44 - 6 + 74 - 6 + 92 - 6 + 110 - 6 + 129 - 7 + 128 - 5 + 195 - 10 + 119 - 2 + 561 - 50 + 54", "x2": "mul add sub n sub add n idiv mul n sqr INT+ 7 x_0_1 idiv x_0_1 INT- 8 n sign n", "tree": "(((n sub ((n add ((n mul (7)**2) idiv x_0_1)) sub (x_0_1 idiv -8))) add n) mul sign(n))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 9 + 24 - 27 + 106 - 97 + 436 - 375 + 1758 - 1485 + 7048 - 5923 + 2 8210 - 2 3673 + 11 2860 - 9 4671 + 45 1462 - 37 8661 + 180 5872 - 151 4619 + 722 3514 - 605 8449 + 2889 4084 - 2423 3767 + 1 1557 6366", "x2": "add n sub mul x_0_2 sub INT+ 3 INT- 1 INT- 5", "tree": "(n add ((x_0_2 mul (3 sub -1)) sub -5))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 16 + 0 + 1 + 16 + 0 + 1 + 16 + 0 + 1 + 16 + 0 + 1 + 16 + 0 + 1 + 16 + 0 + 1 + 16 + 0 + 1 + 16", "x2": "sqr sqr relu mod n abs INT+ 3", "tree": "((relu((n mod abs(3))))**2)**2", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 9 + 3 - 2 + 2 + 7 + 5 - 9 + 3 - 2 + 2 + 7 - 5 - 9 + 3 - 2 + 2 + 7 + 5 - 9 + 3 - 2 + 2 + 7 - 5 - 9 + 3 - 2 + 2 + 7", "x2": "mul sign idiv mul INT- 4 INT+ 8 sub x_0_7 INT+ 7 x_0_6", "tree": "(sign(((-4 mul 8) idiv (x_0_7 sub 7))) mul x_0_6)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 10 + 10 + 9 - 5 + 9 - 90 + 42 - 71 + 707 - 335 + 470 - 5622 + 2601 - 3061 + 4 4633 - 2 346 + 1 8858 - 35 4471 + 15 9699 - 10 6239 + 281 5414 - 125 8742 + 49 5433 - 2236 3621 + 996 3689 - 114 8058 + 1 7765 218 - 7921 4087", "x2": "add INT- 8 sub x_0_5 mul x_0_3 abs add INT+ 1 INT- 9", "tree": "(-8 add (x_0_5 sub (x_0_3 mul abs((1 add -9)))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 8 - 3 + 9 - 9 - 5 - 2 + 3 + 9 + 0 + 6 - 9 - 10 - 10 - 9 - 10 - 10 - 10 - 9 - 9 - 9 - 9 - 10 - 10 - 10 - 10 - 10 - 10 - 10 - 10 - 11 - 11 - 11 - 11", "x2": "sub idiv n mul mul mod INT+ 3 n INT+ 1 0 sign x_0_11 INT+ 9", "tree": "((n idiv (((3 mod n) mul 10) mul sign(x_0_11))) sub 9)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 7 + 34 + 47 + 203 + 467 + 1541 + 4552 + 1 6967 + 4 9527 + 21 4813 + 78 3231 + 336 3186 + 1327 5023 + 6062 1205 + 2 4138 8683 + 12 4957 8567 + 47 6456 3095 + 277 874 5051 + 1228 8427 8940 + 6129 1943 7793 + 3 2445 3965 6297 + 17 814 761 3296 + 87 591 4334 1345 + 465 2271 9069 6261", "x2": "add n add mul n x_0_2 relu mod sqr x_0_2 x_0_1", "tree": "(n add ((n mul x_0_2) add relu(((x_0_2)**2 mod x_0_1))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 + 6 - 1 - 10 - 60 - 60 - 60 - 40 - 30 - 30 - 30 - 20 - 50 - 50 - 50 - 10 - 60 - 60 - 60 - 40 - 30 - 30 - 30 - 20 - 50 - 50 - 50", "x2": "mul mod add mod INT+ 8 abs INT+ 2 x_0_4 INT+ 7 INT- 1 0", "tree": "((((8 mod abs(2)) add x_0_4) mod 7) mul -10)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 4 - 13 - 1 + 17 - 7 - 43 + 5 + 77 - 19 - 163 + 29 + 317 - 67 - 643 + 125 + 1277 - 259 - 2563 + 509 + 5117 - 1027 - 1 243 + 2045 + 2 477", "x2": "sub mul x_0_2 INT- 2 INT+ 9", "tree": "((x_0_2 mul -2) sub 9)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 - 4 - 7 - 6 - 4 - 4 - 7 - 6 - 4 - 4 - 7 - 6 - 4 - 4 - 7 - 6 - 4 - 4 - 7 - 6 - 4 - 4 - 7 - 6 - 4 - 4 - 7", "x2": "mod x_0_4 mul INT+ 8 x_0_3", "tree": "(x_0_4 mod (8 mul x_0_3))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 5 + 8 + 5 + 6 + 57 + 47 + 57 + 317 + 272 + 327 + 1632 + 1412 + 1692 + 8222 + 7127 + 8532 + 4 1187 + 3 5717 + 4 2747 + 20 6027 + 17 8682 + 21 3837 + 103 242 + 89 3522 + 106 9302 + 515 1332 + 446 7737", "x2": "mod INT- 3 abs mod sub x_0_5 add x_0_5 relu abs INT- 1 0 mul add relu n x_0_3 INT+ 5", "tree": "(-3 mod abs(((x_0_5 sub (x_0_5 add relu(abs(-10)))) mod ((relu(n) add x_0_3) mul 5))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 12 + 18 + 26 + 36 + 48 + 62 + 78 + 96 + 116 + 138 + 162 + 188 + 216 + 246 + 278", "x2": "add add INT+ 6 sqr n n", "tree": "((6 add (n)**2) add n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 2 + 6 - 7 + 4 - 6 - 114 - 162 - 180 - 666 - 210 - 2214 - 864 - 6894 - 2862 - 2 970 - 8892 - 6 3234 - 2 7018 - 19 62 - 8 1432 - 57 582", "x2": "mul INT- 3 abs sub mul INT- 5 n sub n mod x_0_2 add x_0_6 x_0_2", "tree": "(-3 mul abs(((-5 mul n) sub (n sub (x_0_2 mod (x_0_6 add x_0_2))))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 7 - 4 + 1 + 8 + 17 + 28 + 41 + 56 + 73 + 92 + 113 + 136 + 161 + 188 + 217 + 248", "x2": "sub add add mod INT+ 2 INT- 1 0 n sqr n n", "tree": "((((2 mod -10) add n) add (n)**2) sub n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 - 28 - 117 - 591 - 3553 - 2 4879 - 19 9034 - 179 1309 - 1791 3094 - 1 9704 4039 - 23 6452 8474 - 307 3887 169 - 4303 4418 2374 - 6 4551 6273 5612 - 103 2826 376 9795 - 1755 8042 6408 6519 - 3 1604 4767 5355 7347", "x2": "sub INT- 2 relu add n add abs add n mul n x_0_1 sub relu mod n INT+ 7 x_0_1", "tree": "(-2 sub relu((n add (abs((n add (n mul x_0_1))) add (relu((n mod 7)) sub x_0_1)))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 3 + 1 + 1 + 1 + 1 - 10 + 3 - 10 + 30 + 3 - 10 + 30 + 3 + 100 + 90 - 30 + 3000 + 270 + 300 + 9 0 + 810 + 3 0 + 810 0 - 2 4300", "x2": "mul x_0_3 x_0_8", "tree": "(x_0_3 mul x_0_8)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 6 + 7 + 8 - 1 - 4 + 17 - 16 - 27 + 10 + 29 - 114 + 133 + 248 - 95 - 314 + 1373 - 1724 - 3467 + 1430 + 5029", "x2": "sub INT+ 5 mul x_0_5 sub n INT+ 5", "tree": "(5 sub (x_0_5 mul (n sub 5)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "abs sqr relu sub n idiv n abs n", "tree": "abs((relu((n sub (n idiv abs(n)))))**2)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 6 - 13 - 21 - 30 - 40 - 51 - 63 - 76 - 90 - 105 - 121 - 138 - 156 - 175 - 195 - 216", "x2": "sub sub x_0_1 n sub INT+ 4 relu idiv x_0_1 add INT+ 5 INT+ 7", "tree": "((x_0_1 sub n) sub (4 sub relu((x_0_1 idiv (5 add 7)))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 7 + 5 + 0 + 56 + 12 + 68 + 24 + 80 + 36 + 92 + 48 + 104 + 60 + 116 + 72 + 128 + 84 + 140 + 96", "x2": "sub mul add abs n n INT+ 6 add INT- 8 mul x_0_1 abs abs sign x_0_3", "tree": "(((abs(n) add n) mul 6) sub (-8 add (x_0_1 mul abs(abs(sign(x_0_3))))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 20 + 180 + 2880 + 7 2000 + 259 2000 + 1 2700 8000 + 81 2851 2000 + 6584 947 2000 + 65 8409 4720 0 + 7966 7546 1120 0 + 114 7212 6640 1280 0 + 1 9387 8940 2181 6320 0 + 380 27 2282 7599 8720 0 + 8 5500 6126 3620 9971 2000 0 + 2188 8156 8348 6975 2627 2000 0 + 63 2567 7325 2773 5850 9260 8000 0", "x2": "mul n mul relu abs n x_0_1", "tree": "(n mul (relu(abs(n)) mul x_0_1))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 5 - 8 - 1 + 3 + 8 + 9 + 9 + 15 + 25 + 27 + 27 + 39 + 59 + 63 + 63 + 87 + 127 + 135 + 135 + 183", "x2": "add add x_0_4 mod mod INT- 1 x_0_4 add INT+ 6 add INT- 1 x_0_2 relu INT+ 1 0", "tree": "((x_0_4 add ((-1 mod x_0_4) mod (6 add (-1 add x_0_2)))) add relu(10))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 2 + 4 - 1 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6", "x2": "sub relu n x_0_1", "tree": "(relu(n) sub x_0_1)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 0 + 0 + 5 - 5 + 5 - 10 + 15 - 20 + 30 - 45 + 65 - 95 + 140 - 205 + 300 - 440 + 645 - 945 + 1385", "x2": "sub idiv x_0_1 sign mod x_0_4 sqr relu INT- 6 x_0_3", "tree": "((x_0_1 idiv sign((x_0_4 mod (relu(-6))**2))) sub x_0_3)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 9 + 10 + 7 - 2 - 4 - 1 + 2 + 1 - 5 - 3 - 1 - 2 + 13 - 3 - 5 - 16 - 1 + 1 - 7 - 4 - 2", "x2": "idiv n sub x_0_5 mod n add n add sign x_0_4 INT+ 1", "tree": "(n idiv (x_0_5 sub (n mod (n add (sign(x_0_4) add 1)))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 7 + 4 - 6 - 5 + 4 - 13 - 16 - 13 - 18 - 15 - 21 - 17 - 18 - 23 - 20 - 21 - 22 - 23 - 27 - 25 - 26", "x2": "add INT- 5 sub mod mul n mod x_0_5 n INT- 8 sub n idiv idiv INT- 5 INT- 1 0 n", "tree": "(-5 add (((n mul (x_0_5 mod n)) mod -8) sub (n sub ((-5 idiv -10) idiv n))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 3 - 1 + 8 + 5 + 2 + 7 + 13 + 7 + 9 + 20 + 20 + 16 + 29 + 40 + 36 + 45 + 69 + 76 + 81", "x2": "add x_0_4 add x_0_3 mod n n", "tree": "(x_0_4 add (x_0_3 add (n mod n)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 - 9 - 4 + 7 + 6 + 3 + 8 + 20 + 20 + 15 + 4 + 5 + 8 + 3 - 9 - 9 - 4 + 7 + 6 + 3 + 8 + 20 + 20", "x2": "add INT+ 4 sub sub INT- 2 INT- 9 x_0_7", "tree": "(4 add ((-2 sub -9) sub x_0_7))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 2 + 12 - 72 + 432 - 2592 + 1 5552 - 9 3312 + 55 9872 - 335 9232 + 2015 5392 - 1 2093 2352 + 7 2559 4112 - 43 5356 4672 + 261 2138 8032 - 1567 2832 8192 + 9403 6996 9152 - 5 6422 1981 4912", "x2": "mul INT- 6 x_0_1", "tree": "(-6 mul x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 2 - 9 - 2 + 7 - 10 - 9 + 0 + 0 + 0 + 0 + 7 + 0 + 0 + 0 + 0 + 0 + 0 + 7 + 0 + 0 + 0 + 0", "x2": "mul INT+ 1 relu mul x_0_7 sign x_0_2", "tree": "(1 mul relu((x_0_7 mul sign(x_0_2))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 10 + 34 - 2 + 32 - 4 + 30 - 6 + 28 - 8 + 26 - 10 + 24 - 12 + 22 - 14 + 20 - 16", "x2": "sub relu sqr mod sign idiv n mul x_0_1 INT+ 7 mod INT- 3 INT+ 1 0 n", "tree": "(relu(((sign((n idiv (x_0_1 mul 7))) mod (-3 mod 10)))**2) sub n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 9 + 9 - 5 - 9 + 9 - 9 - 9 + 9 - 9 - 9 + 9 - 9 - 9 + 9 - 9 - 9 + 9 - 9 - 9", "x2": "mul sign x_0_3 abs add INT- 1 0 sign sqr sign INT+ 1 0", "tree": "(sign(x_0_3) mul abs((-10 add sign((sign(10))**2))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 6 - 3 - 3 + 5 - 3 + 0 + 4 + 0 + 2 + 2 + 0 + 2 + 0 + 0 + 0 + 2 + 0 + 0 + 4 + 0 + 2", "x2": "mul INT+ 2 mod add x_0_6 n INT+ 3", "tree": "(2 mul ((x_0_6 add n) mod 3))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 9 - 4 - 3 + 4 - 1 + 81 + 16 + 9 + 16 + 1 + 6561 + 256 + 81 + 256 + 1 + 4304 6721 + 6 5536 + 6561 + 6 5536 + 1 + 1853 201 8885 1841", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 9 - 9 + 2 + 5 + 3 + 0 + 6 + 2 + 3 + 2 + 0 + 4 + 1 + 3 + 0 + 16 + 4 + 18 + 2 + 0", "x2": "abs mod add mod n INT- 3 x_0_5 n", "tree": "abs((((n mod -3) add x_0_5) mod n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 9 + 12 + 21 + 33 + 54 + 87 + 141 + 228 + 369 + 597 + 966 + 1563 + 2529 + 4092 + 6621 + 1 713 + 1 7334", "x2": "add x_0_1 x_0_2", "tree": "(x_0_1 add x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 3 + 9 + 3 + 15 + 3 + 27 + 3 + 51 + 3 + 99 + 3 + 195 + 3 + 387 + 3 + 771 + 3", "x2": "abs sub add INT- 3 mul x_0_2 INT+ 3 x_0_2", "tree": "abs(((-3 add (x_0_2 mul 3)) sub x_0_2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 - 7 + 9 + 3 + 1 + 9 + 5 - 5 - 9 - 8 + 15 + 30 + 40 + 40 + 35 + 40 + 30 + 20 + 25 + 20 + 40 + 55 + 65 + 65 + 60 + 65", "x2": "add mod mul x_0_10 INT- 6 add INT+ 5 INT+ 1 0 add x_0_10 sqr add add INT+ 7 INT- 1 0 sub idiv INT- 8 n INT- 9", "tree": "(((x_0_10 mul -6) mod (5 add 10)) add (x_0_10 add (((7 add -10) add ((-8 idiv n) sub -9)))**2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 - 8 + 1 - 4 + 0 + 9 + 8 - 32 + 0 + 324 + 0 - 864 + 0 + 6 2208 + 0 - 111 9744 + 0 + 5374 7712 + 0 - 6269 1331 2768 + 0 + 180 5510 3407 7184 + 0", "x2": "mul x_0_4 mul abs abs x_0_6 mod sqr x_0_8 n", "tree": "(x_0_4 mul (abs(abs(x_0_6)) mul ((x_0_8)**2 mod n)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144", "x2": "abs sqr sub INT+ 1 0 add sub relu n relu INT- 5 INT+ 6", "tree": "abs(((10 sub ((relu(n) sub relu(-5)) add 6)))**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 6 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv x_0_3 mul mod INT+ 5 add add mod INT+ 8 n add n abs n sign INT+ 6 n", "tree": "(x_0_3 idiv ((5 mod (((8 mod n) add (n add abs(n))) add sign(6))) mul n))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 5 + 5 + 6 - 3 - 10 + 5 + 7 - 8 + 0 - 5 - 28 - 26 - 24 - 114 - 68 - 147 - 114 - 68 - 648 - 114 - 248 - 648 - 390 - 248", "x2": "add x_0_3 mul sub x_0_3 n mod x_0_9 INT+ 4", "tree": "(x_0_3 add ((x_0_3 sub n) mul (x_0_9 mod 4)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 8 - 10 + 110 + 160 + 0 + 4840 + 9440 + 0 + 45 9800 + 109 5040 + 0 + 7540 7200 + 2 915 2640 + 0 + 189 2720 7200 + 593 9934 9760 + 0 + 6 7380 8576 3200", "x2": "relu mul x_0_3 relu mod INT- 5 sqr relu n", "tree": "relu((x_0_3 mul relu((-5 mod (relu(n))**2))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5", "x2": "mul sign n idiv relu n INT+ 3", "tree": "(sign(n) mul (relu(n) idiv 3))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 2 - 1 + 1 + 20 + 15 + 132 + 812 + 7155 + 6 9660 + 75 4190 + 894 3087 + 1 1521 5387 + 16 170 2750 + 238 9139 5155 + 3805 3409 1915 + 6 4450 5402 1577 + 115 6526 146 1367 + 2191 6914 1638 7590", "x2": "mod mul add INT- 7 INT- 8 x_0_3 relu mul add INT- 1 add x_0_1 n n", "tree": "(((-7 add -8) mul x_0_3) mod relu(((-1 add (x_0_1 add n)) mul n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 7 + 6 + 7 + 7 - 2 + 3 + 8 - 10 + 5 - 6 + 1 - 7 - 12 - 3 - 7 - 14 - 5 - 8 - 3 - 8 - 11 + 10 - 11 - 10 - 12 - 10", "x2": "sub sub idiv sub n add x_0_6 mod sub n INT+ 6 n x_0_11 idiv INT- 7 x_0_8 INT+ 8", "tree": "((((n sub (x_0_6 add ((n sub 6) mod n))) idiv x_0_11) sub (-7 idiv x_0_8)) sub 8)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 2 - 2 - 4 + 2 + 7 - 4 - 8 - 12 + 21 - 7 + 18 + 7 + 30 - 7 + 7 - 5 + 24 - 1 - 9 - 2 + 19 - 3 - 12", "x2": "sub INT- 3 idiv mul INT+ 6 add sign n x_0_4 x_0_7", "tree": "(-3 sub ((6 mul (sign(n) add x_0_4)) idiv x_0_7))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 5 + 0 + 6 + 13 + 21 + 30 + 40 + 51 + 63 + 76 + 90 + 105 + 121 + 138 + 156 + 175 + 195", "x2": "sub abs add x_0_1 add INT+ 3 n mul mod x_0_1 sign sub x_0_1 x_0_1 n", "tree": "(abs((x_0_1 add (3 add n))) sub ((x_0_1 mod sign((x_0_1 sub x_0_1))) mul n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536", "x2": "abs sqr sqr n", "tree": "abs(((n)**2)**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 2 + 36 + 16 + 252 + 96 + 1260 + 1152 + 1 5120 + 1 3824 + 18 1440 + 16 5888 + 217 7280 + 199 656 + 2612 7360 + 2388 7872 + 3 1352 8320 + 2 8665 4464", "x2": "mul sub mod INT+ 7 n INT- 5 x_0_2", "tree": "(((7 mod n) sub -5) mul x_0_2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 7 + 8 + 1 + 9 + 8 - 2 - 5 + 10 + 9 - 22 + 96 - 91 + 0 - 120 - 112 + 51 + 108 - 171 - 160 + 483 - 2090 + 2116 + 24 + 3025 + 2938", "x2": "sub n mul n x_0_10", "tree": "(n sub (n mul x_0_10))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 1 - 7 - 6 - 1 - 1 - 3 - 1 - 1 - 3 - 1 - 1 - 3 - 1 - 1 - 3 - 1 - 1 - 3 - 1", "x2": "add add INT- 4 sign INT+ 6 mod x_0_3 INT+ 3", "tree": "((-4 add sign(6)) add (x_0_3 mod 3))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 - 5 - 20 - 15 - 31 - 29 - 43 - 39 - 60 - 55 - 75 - 69 - 88 - 81 - 99 - 91 - 125 - 117", "x2": "sub mul sign mul mod INT+ 1 INT+ 5 INT+ 4 sub x_0_2 mod add sqr INT- 4 sub n n n INT+ 1 0", "tree": "((sign(((1 mod 5) mul 4)) mul (x_0_2 sub (((-4)**2 add (n sub n)) mod n))) sub 10)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 3 - 6 - 4 + 2 - 9 + 7 + 10 - 2 - 8 + 66 + 48 - 26 + 126 - 105 - 160 + 34 + 144 - 1254 - 960 + 546 - 2772 + 2415 + 3840 - 850 - 3744", "x2": "sub relu mod relu sub sub INT- 4 x_0_10 abs abs mod INT+ 1 INT+ 6 INT- 3 mul n x_0_8", "tree": "(relu((relu(((-4 sub x_0_10) sub abs(abs((1 mod 6))))) mod -3)) sub (n mul x_0_8))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 8 - 4 - 4 - 2 + 7 + 3606 + 4907 + 6408 + 8109 + 1 10 + 1 2111 + 1 4412 + 1 6913 + 1 9614 + 2 2515 + 2 5616 + 2 8917 + 3 2418 + 3 6119 + 4 20 + 4 4121", "x2": "add n sqr mul mul relu n INT- 1 0 sign mod relu INT+ 3 x_0_5", "tree": "(n add (((relu(n) mul -10) mul sign((relu(3) mod x_0_5))))**2)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 8 - 9 - 8 + 9 + 6 - 4 + 5 - 44 - 51 - 56 - 59 - 64 - 65 - 67 - 72 - 115 - 126 - 135 - 142 - 151 - 156 - 162 - 171", "x2": "add mul add n sign INT- 8 INT- 3 sub sub INT- 6 abs x_0_8 n", "tree": "(((n add sign(-8)) mul -3) add ((-6 sub abs(x_0_8)) sub n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 9 - 8 + 5 - 8 - 2 - 7 + 6 + 3 + 1 + 1 - 2 + 2 - 2 - 8 - 3 + 2 + 6 + 19 + 20 - 11 + 11 - 12 - 3 - 9", "x2": "idiv n x_0_9", "tree": "(n idiv x_0_9)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 4 - 3 + 10 + 10 + 3 + 16 + 16 + 9 + 22 + 22 + 15 + 28 + 28 + 21 + 34 + 34 + 27 + 40", "x2": "add INT+ 8 add n sub sub x_0_3 n abs INT- 2", "tree": "(8 add (n add ((x_0_3 sub n) sub abs(-2))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 - 8 - 1 + 2 + 10 + 10 + 7 + 3 + 0 + 10 - 7 - 5 - 117 - 112 - 15 + 32 + 170 + 180 + 133 + 60 + 0 + 220 - 161 - 120 - 2925 - 2912 - 405 + 896", "x2": "mul n x_0_12", "tree": "(n mul x_0_12)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 5 + 5 + 2 - 8 + 0 - 3 - 6 + 7 - 1 - 9 - 4 - 5 - 3 + 2 - 14 - 14 - 8 - 10 + 1 - 5 - 7 + 3 - 9 - 18 + 1 - 4 - 8", "x2": "sub mod add sub sub INT- 9 x_0_6 INT- 1 mul n mod x_0_2 INT- 3 add x_0_11 sub sign INT- 1 n x_0_7", "tree": "(((((-9 sub x_0_6) sub -1) add (n mul (x_0_2 mod -3))) mod (x_0_11 add (sign(-1) sub n))) sub x_0_7)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 3 + 5 - 2 + 6 - 1 + 7 + 0 + 8 + 1 + 9 + 2 + 10 + 3 + 11 + 4 + 12 + 5", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 2 + 5 + 2 + 0 + 2 + 0 + 3 + 0 + 2 + 0 + 5 + 0 + 2 + 0 + 7 + 0 + 2 + 0", "x2": "relu abs idiv sub x_0_2 n x_0_2", "tree": "relu(abs(((x_0_2 sub n) idiv x_0_2)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 196 + 784 + 1764 + 3136 + 4900 + 7056 + 9604 + 1 2544 + 1 5876 + 1 9600 + 2 3716 + 2 8224 + 3 3124 + 3 8416 + 4 4100 + 5 176", "x2": "sqr mul INT- 7 add n n", "tree": "((-7 mul (n add n)))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 26 - 59 - 91 - 122 - 152 - 181 - 209 - 236 - 262 - 287 - 311 - 334 - 356 - 377 - 397 - 416", "x2": "mod abs n sub x_0_1 sqr add INT- 5 sign INT- 4", "tree": "(abs(n) mod (x_0_1 sub ((-5 add sign(-4)))**2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 7 + 9 + 8 + 6 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "mul mod n sqr add mul sqr x_0_4 sub x_0_2 sign x_0_1 INT+ 5 n", "tree": "((n mod ((((x_0_4)**2 mul (x_0_2 sub sign(x_0_1))) add 5))**2) mul n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225", "x2": "sqr sub n sign sign n", "tree": "((n sub sign(sign(n))))**2", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 10 - 6 + 10 + 6 - 10 - 6 + 10 + 6 - 10 - 6 + 10 + 6 - 10 - 6 + 10 + 6 - 10", "x2": "mul x_0_2 sign INT- 4", "tree": "(x_0_2 mul sign(-4))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 3 + 6 + 5 - 3 + 1 + 10 + 2 + 4 + 13 + 10 + 2 + 11 + 10 + 2 + 6 + 15 + 7 + 9 + 18 + 15", "x2": "sub n x_0_5", "tree": "(n sub x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 7 - 1 - 8 - 1 - 9 + 5 - 17 - 16 - 30 - 32 - 51 - 50 - 87 - 103 - 136 - 159 - 201 - 225 - 289 - 334 - 398 - 454", "x2": "sub x_0_6 add INT+ 6 sqr sub INT+ 5 n", "tree": "(x_0_6 sub (6 add ((5 sub n))**2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 9 - 8 + 7 + 8 - 2 + 4 + 11 + 19 + 28 + 38 + 49 + 61 + 74 + 88 + 103 + 119 + 136 + 154 + 173 + 193 + 214", "x2": "mul mod mod sign add x_0_5 mul n INT+ 2 n n add x_0_1 n", "tree": "(((sign((x_0_5 add (n mul 2))) mod n) mod n) mul (x_0_1 add n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 2 + 4 - 10 - 2 - 3 + 33 + 61 - 3 - 2 + 1222 + 3966 - 2 - 3 + 149 8173 + 1574 5021 - 3 - 2 + 2 2445 2833 622 + 247 9057 4927 526 - 2", "x2": "sub sqr x_0_4 sub mul x_0_4 INT- 4 sign n", "tree": "((x_0_4)**2 sub ((x_0_4 mul -4) sub sign(n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 + 3 - 7 + 4 - 1 + 10 + 4 + 0 - 5 - 9 + 5 + 7 + 7 + 0 + 28 + 2 + 14 + 0 + 11 + 3 + 7 + 20 + 7 + 175 + 0 + 252 + 0", "x2": "idiv sqr add x_0_9 relu x_0_11 INT+ 7", "tree": "(((x_0_9 add relu(x_0_11)))**2 idiv 7)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 5 - 4 + 14 + 19 + 26 + 32 + 37 + 43 + 49 + 54 + 60 + 65 + 71 + 76 + 82 + 87 + 93 + 98", "x2": "sub idiv sub relu mul n idiv x_0_2 mod n relu x_0_2 INT+ 2 INT+ 8 sub n mul INT+ 6 n", "tree": "(((relu((n mul (x_0_2 idiv (n mod relu(x_0_2))))) sub 2) idiv 8) sub (n sub (6 mul n)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 1 - 9 - 5 - 10 + 1 - 6 - 6 + 7 + 6 - 1 - 5 - 8 + 9 - 1 + 2 + 8 + 12 + 4 - 3 - 13 + 11 + 4 + 10 + 11 + 15 + 5", "x2": "sub mod n sub x_0_11 INT- 4 sub x_0_11 x_0_8", "tree": "((n mod (x_0_11 sub -4)) sub (x_0_11 sub x_0_8))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 8 + 6 - 10 - 14 + 0 - 16 - 20 - 6 - 22 - 26 - 12 - 28 - 32 - 18 - 34 - 38 - 24 - 40 - 44", "x2": "sub x_0_3 INT+ 6", "tree": "(x_0_3 sub 6)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 12 + 36 + 144 + 720 + 4319 + 3 232 + 24 1855 + 217 6694 + 2176 6939 + 2 3943 6327 + 28 7323 5922 + 373 5206 6984 + 5229 2893 7774 + 7 8439 3406 6608 + 125 5029 4506 5725 + 2133 5500 6611 7322", "x2": "sub mul n abs x_0_1 idiv mod idiv INT- 3 n n INT+ 5", "tree": "((n mul abs(x_0_1)) sub (((-3 idiv n) mod n) idiv 5))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 5 - 4 + 10 - 3 - 3 + 10 + 5 + 4 + 16 + 10 + 8 + 19 + 12 + 9 + 19 + 20 + 16 + 25 + 25", "x2": "sub x_0_3 mod abs relu add sign n sub n INT- 2 INT- 9", "tree": "(x_0_3 sub (abs(relu((sign(n) add (n sub -2)))) mod -9))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 + 5 + 4 + 9 + 9 + 9 + 27 + 36 + 9 + 162 + 4059 + 9 + 1350 + 546 759 + 9 + 1 2015 + 656 1081 5139 + 9 + 10 7973", "x2": "add INT+ 9 mul x_0_1 relu relu sub x_0_3 n", "tree": "(9 add (x_0_1 mul relu(relu((x_0_3 sub n)))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 10 + 5 + 1 + 11 + 10 + 2 + 12 + 11 + 3 + 13 + 12 + 4 + 14 + 13 + 5 + 15 + 14 + 6", "x2": "add sqr idiv relu INT+ 4 add sqr x_0_2 sign n sub relu x_0_3 sign INT- 7", "tree": "(((relu(4) idiv ((x_0_2)**2 add sign(n))))**2 add (relu(x_0_3) sub sign(-7)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 + 8 + 7 + 5 + 7 + 5 - 1 + 1 - 10 + 1 - 1 - 2 - 2 - 2 - 3 + 12 - 13 + 1 - 15 + 16 + 8 + 9 + 9 + 6 - 2", "x2": "idiv sub sub abs relu relu INT+ 3 n idiv INT- 1 abs x_0_2 x_0_9", "tree": "(((abs(relu(relu(3))) sub n) sub (-1 idiv abs(x_0_2))) idiv x_0_9)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256", "x2": "mul n sub mul n mod n n mul n INT+ 1", "tree": "(n mul ((n mul (n mod n)) sub (n mul 1)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 + 7 - 1 - 10 + 8 + 10 + 7 + 1 + 10 + 8 + 10 + 7 + 1 + 10 + 8 + 10 + 7 + 1 + 10 + 8 + 10", "x2": "mod abs x_0_5 sqr INT- 9", "tree": "(abs(x_0_5) mod (-9)**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 7 - 8 - 8 - 7 - 5 - 2 + 2 + 7 + 13 + 20 + 28 + 37 + 47 + 58 + 70 + 83 + 97", "x2": "sub add sub n n n mul add INT+ 1 0 sub INT- 7 x_0_1 sign mod n INT- 1", "tree": "(((n sub n) add n) sub ((10 add (-7 sub x_0_1)) mul sign((n mod -1))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 7 - 2 + 0 - 2 - 216 - 294 - 384 - 486 - 600 - 726 - 864 - 1014 - 1176 - 1350 - 1536 - 1734 - 1944 - 2166 - 2400 - 2646", "x2": "mul INT- 6 add mul INT- 6 relu sub mod mul n INT- 6 x_0_5 INT+ 1 0 abs mul n n", "tree": "(-6 mul ((-6 mul relu((((n mul -6) mod x_0_5) sub 10))) add abs((n mul n))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 4 - 4 - 9 + 10 - 7 + 9 + 64 + 64 + 54 + 11 + 58 + 9 + 38 + 38 + 18 + 13 + 26 + 9 + 67 + 67 + 27", "x2": "mod add x_0_6 add x_0_6 INT- 9 sqr add sqr INT- 1 INT- 1 0", "tree": "((x_0_6 add (x_0_6 add -9)) mod (((-1)**2 add -10))**2)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 2 + 0 + 2 - 2 + 0 + 2 - 2 + 0 + 2 - 2 + 0 + 2 - 2 + 0 + 2 - 2 + 0 + 2 - 2", "x2": "idiv x_0_3 sign n", "tree": "(x_0_3 idiv sign(n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 5 + 3 + 7 - 8 + 6 + 16 + 25 + 9 + 49 + 64 + 36 + 256 + 625 + 81 + 2401 + 4096 + 1296 + 6 5536 + 39 625 + 6561 + 576 4801", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 5 + 1 - 9 + 11 + 5 + 13 - 3 + 3 - 17 + 3 - 3 + 25 + 1 + 9 - 23 + 7 - 1 + 25 - 3", "x2": "sub mul INT+ 2 add mod relu sub x_0_3 n x_0_2 mod add INT+ 7 x_0_1 INT+ 5 x_0_3", "tree": "((2 mul ((relu((x_0_3 sub n)) mod x_0_2) add ((7 add x_0_1) mod 5))) sub x_0_3)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 5 + 0 + 6 + 0 + 10 + 30 + 35 + 40 + 54 + 0 + 22 + 108 + 156 + 168 + 195 + 48 + 17", "x2": "mul mod idiv add INT+ 6 x_0_1 abs INT- 3 n n", "tree": "((((6 add x_0_1) idiv abs(-3)) mod n) mul n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 + 0 + 8 + 0 + 5 - 7 + 5 + 0 + 10 - 12 + 0 - 2 + 12 + 5 - 5 - 7 - 5 + 15 - 5 + 5 - 17 + 17 + 0 + 12 - 24", "x2": "sub x_0_9 x_0_3", "tree": "(x_0_9 sub x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 10 + 0 + 9 + 9 - 1 - 3 - 14 - 24 - 25 - 16 - 15 - 5 + 4 + 4 - 6 - 8 - 19 - 29 - 30 - 21 - 20", "x2": "sub INT+ 9 add x_0_5 add sqr INT+ 4 n", "tree": "(9 sub (x_0_5 add ((4)**2 add n)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 14 - 78 - 252 - 620 - 1290 - 2394 - 4088 - 6552 - 9990 - 1 4630 - 2 724 - 2 8548 - 3 8402 - 5 610 - 6 5520", "x2": "sub n sqr sqr n", "tree": "(n sub ((n)**2)**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 7 + 9 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign idiv x_0_3 x_0_1", "tree": "sign((x_0_3 idiv x_0_1))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 + 7 - 7 + 6 - 3 + 8 - 6 + 7 - 2 + 9 - 5 + 8 - 1 + 10 - 4 + 9 + 0 + 11 - 3 + 10", "x2": "add idiv add n mul mul abs n n idiv idiv n n n n x_0_4", "tree": "(((n add ((abs(n) mul n) mul ((n idiv n) idiv n))) idiv n) add x_0_4)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 8 - 1 + 0 + 65 + 0 + 56 + 64 + 513 + 40 + 935 + 1152 + 6708 + 3430 + 2 7825 + 7 3184 + 11 9901 + 37 7064 + 141 6070 + 181 500", "x2": "abs mul sub mod x_0_2 add x_0_3 INT+ 4 sub add abs relu sign INT- 8 INT+ 8 x_0_4 n", "tree": "abs((((x_0_2 mod (x_0_3 add 4)) sub ((abs(relu(sign(-8))) add 8) sub x_0_4)) mul n))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272", "x2": "add abs sqr n relu n", "tree": "(abs((n)**2) add relu(n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 3 + 1 - 5 + 8 + 4 + 10 + 11 + 12 + 14 + 14 + 16 + 19 + 20 + 22 + 19 + 24 + 26 + 28 + 29 + 25 + 31", "x2": "add n abs idiv sub INT- 9 mod x_0_6 mod x_0_5 mul abs add n n abs n INT- 3", "tree": "(n add abs(((-9 sub (x_0_6 mod (x_0_5 mod (abs((n add n)) mul abs(n))))) idiv -3)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 10 - 15 - 20 - 23 - 43 - 49 - 97 - 129 - 176 - 251 - 380 - 615 - 1060 - 1923 - 3620 - 6983 - 1 3676", "x2": "add mod add idiv INT+ 7 sub INT+ 3 sign x_0_1 mod sqr n x_0_1 x_0_1 x_0_1", "tree": "((((7 idiv (3 sub sign(x_0_1))) add ((n)**2 mod x_0_1)) mod x_0_1) add x_0_1)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 4 + 0 + 0 + 4 + 4 + 1 + 0 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr mod n relu idiv mul n n add sign x_0_2 abs INT+ 7", "tree": "((n mod relu(((n mul n) idiv (sign(x_0_2) add abs(7))))))**2", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 - 2 - 8 + 1 - 8 + 8 + 15 + 7 + 17 + 2 - 4 + 5 - 4 + 12 + 19 + 11 + 21 + 6 + 0 + 9 + 0", "x2": "sub mod abs x_0_5 sign n sub x_0_4 n", "tree": "((abs(x_0_5) mod sign(n)) sub (x_0_4 sub n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 10 - 3 + 1 - 10 - 9 + 3 - 70 - 24 + 9 - 100 - 99 + 36 - 910 - 336 + 135 - 1600 - 1683 + 648 - 1 7290 - 6720 + 2835 - 3 5200", "x2": "add mod sign INT- 3 add sub mod n INT+ 1 n INT- 9 sub mul n x_0_6 sign INT- 5", "tree": "((sign(-3) mod (((n mod 1) sub n) add -9)) add ((n mul x_0_6) sub sign(-5)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 2 + 2 - 9 - 6 - 6 + 6 + 37 + 4 + 6 + 82 + 24 + 38 + 37 + 1354 + 15 + 35 + 6720 + 557 + 1445 + 1366 + 183 3294 + 202", "x2": "sub sqr x_0_7 mod n add abs relu sub x_0_4 add INT+ 2 n sub INT+ 2 INT+ 5", "tree": "((x_0_7)**2 sub (n mod (abs(relu((x_0_4 sub (2 add n)))) add (2 sub 5))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 7 + 9 + 5 + 1 + 7 + 7 - 3 - 3 - 3 - 4 - 4 - 3 - 5 - 5 - 4 - 6 - 9 - 4 - 7 - 11 - 5", "x2": "idiv abs n sub idiv sub x_0_6 x_0_5 mod sign idiv x_0_6 mod x_0_1 n INT- 8 INT+ 3", "tree": "(abs(n) idiv (((x_0_6 sub x_0_5) idiv (sign((x_0_6 idiv (x_0_1 mod n))) mod -8)) sub 3))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 1 + 10 + 0 - 8 - 5 + 6 + 218 + 57 + 430 + 11 - 372 - 227 + 266 - 9141 + 1384 - 4 6423 + 480 - 6 245 - 2 5858 - 7959 - 2319 9836 - 44 89", "x2": "add n mul INT- 6 mul x_0_7 add sub INT- 1 INT+ 7 idiv add abs mod INT- 3 n x_0_7 n", "tree": "(n add (-6 mul (x_0_7 mul ((-1 sub 7) add ((abs((-3 mod n)) add x_0_7) idiv n)))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 2 - 1 + 9 + 6 + 1 - 4 + 0 - 3 + 13 + 13 + 11 + 22 + 20 + 16 + 12 + 17 + 15 + 32 + 33 + 32 + 44 + 43 + 40 + 37", "x2": "add x_0_9 relu n", "tree": "(x_0_9 add relu(n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 59 - 407 - 2841 - 1 9877 - 13 9127 - 97 3875 - 681 7109 - 4771 9745 - 3 3403 8195 - 23 3826 7343 - 163 6787 1377 - 1145 7509 9613 - 8020 2569 7263 - 5 6141 7988 811 - 39 2992 5916 5645 - 275 948 1415 9481", "x2": "sub n relu add sub x_0_1 n mul x_0_1 idiv INT- 8 sign add n relu idiv INT+ 4 INT- 9", "tree": "(n sub relu(((x_0_1 sub n) add (x_0_1 mul (-8 idiv sign((n add relu((4 idiv -9)))))))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 - 6 - 11 + 1 - 11 - 16 - 4 - 16 - 21 - 9 - 21 - 26 - 14 - 26 - 31 - 19 - 31 - 36", "x2": "sub x_0_3 mul sub INT- 2 INT- 7 sqr mod sign n INT+ 2", "tree": "(x_0_3 sub ((-2 sub -7) mul ((sign(n) mod 2))**2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 4 + 16 + 26 + 90 + 166 + 640 + 1338 + 5770 + 1 3390 + 6 3480 + 16 690 + 82 5250 + 224 9670 + 1237 8760 + 3599 4730 + 2 1043 8930 + 6 4790 5150", "x2": "abs add mul n x_0_2 INT+ 1 0", "tree": "abs(((n mul x_0_2) add 10))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 6 - 6 + 4 - 5 - 8 - 3 - 1 + 3 + 2 + 5 - 6 + 2 - 1 - 1 - 1 - 1 - 3 - 1 - 3 - 1 - 1 - 2 - 1 - 1 - 3 - 3 - 3 - 3 - 1 - 3 - 1 - 3 - 3", "x2": "idiv INT+ 3 mod x_0_12 INT- 7", "tree": "(3 idiv (x_0_12 mod -7))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 10 - 6 - 8 - 256 - 350 - 9504 - 2 9694 - 63 656 - 317 5038 - 6603 5000 - 4 6048 8974 - 99 6624 5472 - 889 8255 1606 - 2 436 3995 1416 - 22 2634 7934 2550 - 545 9513 6077 3632 - 7024 7574 7595 6174 - 18 4101 6081 9764 2968 - 273 3025 8900 5945 9966 - 7645 546 2694 3965 6800 - 12 8645 3226 7313 8239 3894 - 383 2484 8925 1975 7251 4744 - 7209 7609 5917 4348 6481 7126 - 22 8161 1003 9511 780 2737 5488", "x2": "mul mul n n mul sub abs x_0_2 x_0_3 idiv n x_0_3", "tree": "((n mul n) mul ((abs(x_0_2) sub x_0_3) mul (n idiv x_0_3)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 10 - 2 + 1 + 53 + 1 9716 - 1437 2964 + 1 61 748 + 7 427 5236 + 63 3847 7124 + 570 4629 4116 + 5704 6294 1160 + 6 2750 9235 2760 + 75 3011 823 3120 + 978 9144 703 560 + 1 3704 8016 9842 7840 + 20 5572 254 7641 7600 + 328 9152 4076 2268 1600 + 5591 5590 9295 8558 7200 + 10 648 636 7325 4056 9600 + 191 2313 2097 9182 7082 2400 + 3824 6264 1958 3654 1644 8000 + 8 317 1548 1125 6737 4540 8000 + 176 6977 4058 4764 8223 9897 6000 + 4064 480 3344 9590 9151 7644 8000", "x2": "mul add idiv mul INT- 5 mul sqr INT- 7 sub idiv abs n INT+ 5 INT- 2 x_0_3 n x_0_1", "tree": "((((-5 mul ((-7)**2 mul ((abs(n) idiv 5) sub -2))) idiv x_0_3) add n) mul x_0_1)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 6 + 5 + 1 - 9 - 38 + 33 + 5 - 82 - 350 + 365 + 61 - 994 - 4558 + 5481 + 981 - 1 5914 - 7 7494 + 10 4149 + 1 9629 - 31 8290 - 162 7382 + 239 5441 + 47 1109 - 763 8970 - 4068 4558", "x2": "add add mul x_0_4 n mul INT- 3 INT+ 3 add sign x_0_3 relu add n x_0_4", "tree": "(((x_0_4 mul n) add (-3 mul 3)) add (sign(x_0_3) add relu((n add x_0_4))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 5 - 7 + 2 + 5 + 3 - 4 + 14 + 15 + 0 + 16 + 20 + 13 + 12 + 16 + 25 + 9 + 10 + 27 + 13 + 11 + 20 + 23 + 21 + 14 + 32 + 33", "x2": "sub relu sub add n x_0_3 x_0_6 INT+ 4", "tree": "(relu(((n add x_0_3) sub x_0_6)) sub 4)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 5 - 4 - 2 + 3 + 1 + 4 + 3 + 1 + 4 + 3 + 1 + 4 + 3 + 1 + 4 + 3 + 1 + 4 + 3 + 1 + 4 + 3 + 1 + 4", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 9 + 7 + 7 + 5 + 13 + 14 + 13 + 13 + 15 + 15 + 16 + 19 + 20 + 22 + 17 + 19 + 22 + 27 + 21 + 25 + 22 + 26 + 31", "x2": "add relu mod x_0_3 INT+ 9 n", "tree": "(relu((x_0_3 mod 9)) add n)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 + 10 + 1 - 7 - 3 + 10 + 1 - 7 - 3 + 10 + 1 - 7 - 3 + 10 + 1 - 7 - 3 + 10 + 1 - 7 - 3 + 10 + 1 - 7 - 3 + 10", "x2": "sub x_0_4 sub sign n abs sign x_0_5", "tree": "(x_0_4 sub (sign(n) sub abs(sign(x_0_5))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 + 5 + 0 + 6 + 9 - 4 + 5 + 0 + 6 + 9 - 4 + 5 + 0 + 6 + 9 - 4 + 5 + 0 + 6 + 9 - 4 + 5 + 0 + 6 + 9 - 4", "x2": "idiv x_0_5 mod sign abs add mul n n x_0_3 sub n INT- 6", "tree": "(x_0_5 idiv (sign(abs(((n mul n) add x_0_3))) mod (n sub -6)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2", "x2": "mod add INT+ 1 relu abs n INT- 6", "tree": "((1 add relu(abs(n))) mod -6)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 2 + 6 + 9 + 13 + 16 + 20 + 23 + 27 + 30 + 34 + 37 + 41 + 44 + 48 + 51 + 55 + 58 + 62 + 65 + 69 + 72 + 76 + 79", "x2": "add INT+ 7 abs x_0_2", "tree": "(7 add abs(x_0_2))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 4 + 14 + 40 + 36 + 50 + 66 + 84 + 130 + 154 + 180 + 208 + 238 + 270 + 304 + 340 + 378 + 418 + 460 + 504 + 550 + 598 + 648", "x2": "mul add n INT+ 4 sub relu n sign idiv x_0_2 abs idiv INT+ 8 n", "tree": "((n add 4) mul (relu(n) sub sign((x_0_2 idiv abs((8 idiv n))))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 + 3 + 11 + 4 + 12 + 5 + 13 + 6 + 14 + 7 + 15 + 8 + 16 + 9 + 17 + 10 + 18 + 11 + 19 + 12 + 20 + 13", "x2": "add abs idiv abs INT+ 5 INT+ 5 x_0_2", "tree": "(abs((abs(5) idiv 5)) add x_0_2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 5 + 6 + 12 - 3 + 8 + 14 - 1 + 10 + 16 + 1 + 12 + 18 + 3 + 14 + 20 + 5 + 16 + 22 + 7 + 18 + 24 + 9 + 20", "x2": "add abs sign sign add n sqr abs idiv INT- 2 x_0_2 add x_0_3 INT+ 1", "tree": "(abs(sign(sign((n add (abs((-2 idiv x_0_2)))**2)))) add (x_0_3 add 1))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 9 - 4 - 5 - 5 + 1 + 1 + 5 + 12 + 17 + 29 + 42 + 60 + 86 + 118 + 163 + 222 + 300 + 405 + 543 + 727 + 971 + 1294 + 1723", "x2": "add add x_0_3 sign x_0_2 add n relu x_0_2", "tree": "((x_0_3 add sign(x_0_2)) add (n add relu(x_0_2)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 3 - 1 - 5 + 10 + 6 + 3 + 6 + 3 + 1 + 6 + 3 + 6 + 3 + 1 + 6 + 3 + 6 + 3 + 1 + 6 + 3 + 6 + 3 + 1 + 6 + 3", "x2": "relu mod x_0_5 idiv n sign mul sqr x_0_2 x_0_2", "tree": "relu((x_0_5 mod (n idiv sign(((x_0_2)**2 mul x_0_2)))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 10 - 9 - 10 - 4 - 2 + 0 - 48 + 810 - 1 6260 + 29 2644 - 574 6536 + 1 4940 9858 - 41 8347 6108 + 1026 8532 2610 - 3 2859 3032 3616 + 91 4086 718 4162 - 3290 7098 5862 9940 + 10 2311 1610 5922 1688 - 409 2446 4423 6886 7640 + 1 4063 1341 3832 2108 7924 - 61 8777 9020 8617 2786 8788 + 2328 8550 1330 6141 2160 6974 - 11 1785 406 3869 4778 3713 4896 + 457 3024 3897 6478 6387 9188 2000 - 2 3779 7268 2677 6889 2171 7786 4156 + 105 631 5670 7396 741 7771 3108 9030", "x2": "mul add mul idiv mul INT+ 3 x_0_1 abs sub sign mod mul INT+ 8 INT+ 3 x_0_6 INT- 1 0 n n INT- 6", "tree": "(((((3 mul x_0_1) idiv abs((sign(((8 mul 3) mod x_0_6)) sub -10))) mul n) add n) mul -6)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 1 + 0 + 2 + 0 - 4 + 0 + 8 + 0 - 16 + 0 + 32 + 0 - 64 + 0 + 128 + 0 - 256 + 0 + 512 + 0 - 1024 + 0 + 2048", "x2": "mul INT- 2 x_0_2", "tree": "(-2 mul x_0_2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 + 8 + 4 - 9 + 8 - 10 - 4 + 9 - 8 + 10 + 4 - 9 + 8 - 10 - 4 + 9 - 8 + 10 + 4 - 9 + 8 - 10 - 4 + 9 - 8 + 10 + 4", "x2": "mul sign idiv INT+ 7 idiv mod x_0_1 x_0_1 abs idiv add n INT- 5 idiv x_0_6 INT- 7 x_0_4", "tree": "(sign((7 idiv ((x_0_1 mod x_0_1) idiv abs(((n add -5) idiv (x_0_6 idiv -7)))))) mul x_0_4)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 2 + 5 - 9 - 6 + 4 - 8 + 82 + 96 - 58 - 128 + 262 + 144 - 26 + 256 - 1018 - 800 + 310 + 1868 - 6260 - 3320 + 536 - 44 + 1 2520 + 1 3328 - 3116", "x2": "mul INT- 2 add mul sub mod n INT+ 9 INT+ 5 add sub x_0_4 n idiv INT- 1 INT- 1 0 x_0_4", "tree": "(-2 mul ((((n mod 9) sub 5) mul ((x_0_4 sub n) add (-1 idiv -10))) add x_0_4))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 + 8 + 30 + 32 + 20 + 24 + 49 + 56 + 36 + 40 + 66 + 72 + 52 + 56 + 90 + 96 + 68 + 72 + 114 + 120 + 84 + 88 + 138", "x2": "sub mul add INT+ 1 0 idiv sub n add relu x_0_2 idiv relu n x_0_2 n n n", "tree": "(((10 add ((n sub (relu(x_0_2) add (relu(n) idiv x_0_2))) idiv n)) mul n) sub n)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 10 + 4 + 0 + 9 + 6 + 16 + 14 + 25 + 24 + 36 + 36 + 49 + 50 + 64 + 66 + 81 + 84 + 100 + 104 + 121 + 126 + 144 + 150", "x2": "relu add sign add abs INT- 8 add sub add INT+ 1 n INT+ 7 n add x_0_2 n", "tree": "relu((sign((abs(-8) add (((1 add n) sub 7) add n))) add (x_0_2 add n)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 9 + 1 - 1 + 1 - 2 + 2 - 2 + 2 - 3 + 3 - 3 + 3 - 4 + 4 - 4 + 4 - 5 + 5 - 5 + 5 - 6 + 6", "x2": "mul idiv n INT- 4 sign x_0_1", "tree": "((n idiv -4) mul sign(x_0_1))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 + 9 + 2 + 10 - 7 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1", "x2": "sign idiv idiv x_0_1 add x_0_4 sign sign x_0_5 mul x_0_5 INT+ 9", "tree": "sign(((x_0_1 idiv (x_0_4 add sign(sign(x_0_5)))) idiv (x_0_5 mul 9)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 8 + 10 + 28 + 45 + 242 + 494 + 3510 + 8245 + 6 6500 + 17 2914 + 152 9224 + 432 2525 + 4128 8670 + 1 2535 2790 + 12 7994 8274 + 41 3664 1509 + 447 9818 8960 + 1530 5573 5130 + 1 7471 2936 8660 + 6 2752 8513 9469 + 75 1265 6285 1434 + 282 3878 3127 5070", "x2": "mul sub sub INT- 9 n add INT- 1 0 abs relu abs n sub n x_0_2", "tree": "(((-9 sub n) sub (-10 add abs(relu(abs(n))))) mul (n sub x_0_2))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 2 + 9 + 8 + 4 + 12 + 14 + 8 + 18 + 20 + 14 + 24 + 26 + 14 + 30 + 32 + 20 + 36 + 38 + 20 + 42 + 44 + 26 + 48", "x2": "add mod n x_0_3 abs n", "tree": "((n mod x_0_3) add abs(n))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 - 6 + 10 + 6 - 3 - 6 - 29 - 52 - 3 - 6 - 29 - 52 - 3 - 6 - 29 - 52 - 3 - 6 - 29 - 52 - 3 - 6 - 29 - 52 - 3", "x2": "mod mul n n sub x_0_4 sqr n", "tree": "((n mul n) mod (x_0_4 sub (n)**2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 - 4 + 8 - 3 + 0 + 0 - 5 + 0 + 0 - 1 + 0 + 0 - 5 + 0 + 0 - 1 + 0 + 0 - 5 + 0 + 0 - 1 + 0 + 0 - 5", "x2": "mod relu sub mul x_0_4 INT+ 5 x_0_3 INT- 6", "tree": "(relu(((x_0_4 mul 5) sub x_0_3)) mod -6)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 - 1 - 5 - 16 - 53 - 175 - 578 - 1909 - 6305 - 2 824 - 6 8777 - 22 7155 - 75 242 - 247 7881 - 818 3885 - 2702 9536 - 8927 2493 - 2 9484 7015 - 9 7381 3538 - 32 1628 7629 - 106 2267 6425 - 350 8431 6904 - 1158 7562 7137", "x2": "add sub add mul INT+ 3 x_0_1 x_0_2 x_0_2 x_0_2", "tree": "((((3 mul x_0_1) add x_0_2) sub x_0_2) add x_0_2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 1 + 5 + 10 + 14 + 19 + 23 + 28 + 32 + 37 + 41 + 46 + 50 + 55 + 59 + 64 + 68 + 73 + 77 + 82 + 86 + 91 + 95 + 100", "x2": "add INT+ 1 0 mod sign INT- 1 idiv x_0_2 INT+ 1", "tree": "(10 add (sign(-1) mod (x_0_2 idiv 1)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 10 + 1 + 5 + 3 + 6 + 16 + 100 + 1 + 25 + 9 + 36 + 256 + 1 0 + 1 + 625 + 81 + 1296 + 6 5536 + 1 0 0 + 1 + 39 625 + 6561 + 167 9616 + 42 9496 7296 + 1 0 0 0 0 + 1", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 8 + 6 - 9 + 3 - 85 - 24 - 140 - 72 - 882 - 380 - 1705 - 1056 - 1 1687 - 5572 - 2 5860 - 1 7216 - 19 9036 - 10 692 - 49 1777 - 34 4800 - 418 281 - 221 5796 - 1131 1492 - 827 5872 - 1 450 7750", "x2": "mul sub sub x_0_4 abs n relu abs abs INT- 4 n", "tree": "(((x_0_4 sub abs(n)) sub relu(abs(abs(-4)))) mul n)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 5 + 6 - 3 + 6 + 7 + 8 + 19 + 22 + 25 + 28 + 21 + 12 + 1 - 12 + 7 + 12 + 29 + 60 + 73 + 82 + 75 + 38 - 11 - 46", "x2": "add sub abs idiv x_0_1 idiv INT- 7 mul sign relu n sqr INT- 6 x_0_4 n", "tree": "((abs((x_0_1 idiv (-7 idiv (sign(relu(n)) mul (-6)**2)))) sub x_0_4) add n)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 5 - 3 + 0 - 8 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 208 + 224 + 120 + 128 + 0 + 1296 + 1368 + 1440 + 1512 + 528 + 1656 + 1728 + 1800 + 1872", "x2": "mul n mul INT+ 8 idiv mod sqr INT- 6 add n x_0_5 abs INT+ 4", "tree": "(n mul (8 mul (((-6)**2 mod (n add x_0_5)) idiv abs(4))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 6 + 4 - 8 - 1 - 9 - 10 - 2 + 8 - 7 + 4 + 16 + 29 + 43 + 58 - 74 + 57 + 75 + 94 - 114 + 93 - 115 + 92 - 116 + 91 - 117 + 90 - 118 + 89 - 119 + 88", "x2": "mul sign sub INT+ 1 0 sub abs x_0_9 x_0_10 add n x_0_1", "tree": "(sign((10 sub (abs(x_0_9) sub x_0_10))) mul (n add x_0_1))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 9 + 4 - 6 + 0 + 32 + 0 + 0 + 256 + 0 + 0 + 2048 + 0 + 0 + 1 6384 + 0 + 0 + 13 1072 + 0 + 0 + 104 8576 + 0 + 0 + 838 8608 + 0", "x2": "mul relu x_0_3 INT+ 8", "tree": "(relu(x_0_3) mul 8)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 3 - 8 - 9 + 0 + 144 - 810 + 0 + 0 - 214 3260 + 0 + 0 - 1 1573 6040 + 0 + 0 - 62 4974 6160 + 0 + 0 - 3374 8629 2640 + 0 + 0 - 18 2242 5980 2560 + 0 + 0 - 984 1100 2933 8240 + 0", "x2": "mul sub mul add idiv x_0_2 n INT- 9 abs sub x_0_4 INT- 3 x_0_2 sub abs x_0_3 x_0_3", "tree": "(((((x_0_2 idiv n) add -9) mul abs((x_0_4 sub -3))) sub x_0_2) mul (abs(x_0_3) sub x_0_3))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 1 - 3 - 10 - 2 - 7 + 0 - 8 - 1 - 7 + 0 - 6 + 1 - 7 + 2 - 6 + 3 - 7 + 4 - 6 + 5 - 5 + 6 - 4 + 7 - 3 + 8 - 2", "x2": "add sign idiv x_0_5 x_0_7 x_0_2", "tree": "(sign((x_0_5 idiv x_0_7)) add x_0_2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 10 - 40 - 240 - 1920 - 1 9200 - 23 400 - 322 5600 - 5160 9600 - 9 2897 2800 - 185 7945 6000 - 4087 4803 2000 - 9 8099 5276 8000 - 255 587 7196 8000 - 7141 6456 1510 4000 - 21 4249 3684 5312 0 - 685 5979 7904 9984 0 - 2 3310 3312 8769 9456 0 - 83 9171 9263 5718 416 0 - 3188 8533 2015 7285 5808 0 - 12 7554 1328 629 1423 2320 0 - 535 7273 5778 6423 9775 7440 0 - 2 3572 37 4260 2655 132 7360 0", "x2": "mul sub n sub mul idiv INT+ 7 mul n INT+ 9 INT+ 8 n x_0_1", "tree": "((n sub (((7 idiv (n mul 9)) mul 8) sub n)) mul x_0_1)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 605 + 43 6320 + 3 6869 1245 + 3613 1742 4020 + 406 4821 202 3625 + 52 297 905 9024 3840 + 7 5182 9295 9029 235 6025 + 1 2179 6345 9362 7018 1677 1840 + 2198 4240 4414 9676 7792 7318 7445 + 439 6848 882 9935 3558 5463 7489 0 + 96 9505 34 7000 7459 6594 7566 3245 2205 + 23 4620 2108 3974 1805 2375 9311 505 3434 940", "x2": "relu mul sqr n mul INT- 5 sub mod abs sub INT- 2 n sub INT+ 9 n x_0_1", "tree": "relu(((n)**2 mul (-5 mul ((abs((-2 sub n)) mod (9 sub n)) sub x_0_1))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 7 + 0 + 5 + 4 + 5 - 6 - 7 - 6 - 6 + 0 + 30 + 0 + 15 - 12 - 22 - 27 - 37 + 0 + 135 + 0 + 1687 + 0 - 619 - 486 - 2239 + 0 + 2 3101 + 0 + 384 3196 + 0", "x2": "idiv mul sqr mul x_0_10 sign n x_0_8 INT+ 8", "tree": "((((x_0_10 mul sign(n)))**2 mul x_0_8) idiv 8)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 9 + 0 - 8 - 2 - 54 + 0 - 48 - 12 - 324 + 0 - 288 - 72 - 1944 + 0 - 1728 - 432 - 1 1664 + 0 - 1 368 - 2592 - 6 9984 + 0 - 6 2208 - 1 5552 - 41 9904", "x2": "mul sub sub INT+ 6 add abs INT- 9 INT- 5 INT- 4 x_0_4", "tree": "(((6 sub (abs(-9) add -5)) sub -4) mul x_0_4)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 50 + 250 + 1250 + 6250 + 3 1250 + 15 6250 + 78 1250 + 390 6250 + 1953 1250 + 9765 6250 + 4 8828 1250 + 24 4140 6250 + 122 703 1250 + 610 3515 6250 + 3051 7578 1250 + 1 5258 7890 6250 + 7 6293 9453 1250 + 38 1469 7265 6250 + 190 7348 6328 1250 + 953 6743 1640 6250 + 4768 3715 8203 1250", "x2": "add sub relu x_0_1 relu INT- 4 relu mul INT+ 4 relu x_0_1", "tree": "((relu(x_0_1) sub relu(-4)) add relu((4 mul relu(x_0_1))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 5 + 6 - 95 + 162 - 3515 + 7938 - 22 1445 + 62 7102 - 2148 165 + 7337 934 - 29 8574 2935 + 119 5946 2242 - 5643 541 4715 + 2 5952 330 6514 - 139 3834 3743 4605 + 724 617 2251 7406 - 4 3627 159 1703 1365 + 25 2697 5411 5857 4694 - 1688 3655 1598 9113 8255 + 1 790 1850 747 1139 4338 - 79 1843 4269 9889 4384 1595 + 553 5364 9088 3269 4529 5394 - 4 4264 475 6923 8196 745 1605", "x2": "mul add n relu abs add INT+ 7 sqr n x_0_2", "tree": "((n add relu(abs((7 add (n)**2)))) mul x_0_2)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 1 + 2 - 27 - 56 - 125 - 216 - 343 - 512 - 729 - 1000 - 1331 - 1728 - 2197 - 2744 - 3375 - 4096 - 4913 - 5832 - 6859 - 8000 - 9261 - 1 648 - 1 2167", "x2": "mul n add abs relu relu x_0_2 mul n sub sub n n n", "tree": "(n mul (abs(relu(relu(x_0_2))) add (n mul ((n sub n) sub n))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 - 4 - 2 + 7 - 7 - 8 - 6 - 11 - 11 - 12 - 10 - 15 - 15 - 16 - 14 - 19 - 19 - 20 - 18 - 23 - 23 - 24 - 22 - 27 - 27", "x2": "sub INT- 4 abs x_0_4", "tree": "(-4 sub abs(x_0_4))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 9 - 9 - 4 - 1 - 12 - 12 - 7 - 4 - 15 - 15 - 10 - 7 - 18 - 18 - 13 - 10 - 21 - 21 - 16 - 13 - 24 - 24 - 19 - 16", "x2": "add sub INT- 3 idiv relu INT- 1 n x_0_4", "tree": "((-3 sub (relu(-1) idiv n)) add x_0_4)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 - 2 + 1 - 4 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1", "x2": "idiv add sign x_0_4 abs relu idiv n INT- 9 n", "tree": "((sign(x_0_4) add abs(relu((n idiv -9)))) idiv n)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 3 + 8 - 1 - 5 + 9 + 8 + 4 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756 + 812", "x2": "mul n mod mod idiv sub INT- 7 mod x_0_8 INT+ 1 INT+ 9 n sqr INT+ 1 0", "tree": "(n mul ((((-7 sub (x_0_8 mod 1)) idiv 9) mod n) mod (10)**2))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 3 - 7 + 5 + 3 + 0 + 5 + 3 + 0 + 5 + 3 + 0 + 5 + 3 + 0 + 5 + 3 + 0 + 5 + 3 + 0 + 5 + 3 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 7 - 25 - 219 - 3501 - 8 7513 - 315 459 - 1 5437 2482 - 98 7983 8830 - 8002 6694 5230 - 80 266 9452 3000 - 9683 2300 3728 2982 - 139 4385 1253 6874 9390 - 2 3565 1086 1873 1864 6889 - 461 8761 2892 7144 5479 229 - 10 3922 1290 860 7523 2780 1507 - 2660 4065 262 352 5959 1718 5753 - 76 8857 4792 5728 1900 2200 6668 2602 - 2 4910 9823 2793 5933 5671 3016 516 3048 - 899 2864 6203 8487 2017 7339 8794 6386 313 - 35 9714 5848 1539 4880 7093 5951 7855 4412 5179 - 1 5863 4131 9035 8914 2392 8275 4737 4249 5920 3894 - 767 7891 9841 3371 4491 8128 5329 2913 6802 5468 4636", "x2": "sub mul mul x_0_1 n n mul INT- 3 mod x_0_1 n", "tree": "(((x_0_1 mul n) mul n) sub (-3 mul (x_0_1 mod n)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 4 + 0 + 16 - 3 + 8 - 8 + 6 - 17 + 5 - 31 + 4 - 57 + 3 - 113 + 2 - 290 + 0 + 361 - 2 + 147 - 4", "x2": "idiv sub idiv mul INT- 4 x_0_1 n sqr n add sign INT- 7 x_0_1", "tree": "((((-4 mul x_0_1) idiv n) sub (n)**2) idiv (sign(-7) add x_0_1))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 4 + 9 + 6 - 7 + 3 - 9 - 7 - 10 + 8 - 45 + 5 - 100 - 53 + 98 - 39 + 532 - 94 + 1505 - 336 + 1472 + 333 + 1384 + 6932 + 1054 + 2 1592 + 1393 + 2 2982 + 8331 + 2 4042 + 2 9929", "x2": "sub sub x_0_5 sub INT- 2 relu x_0_2 add INT- 4 mul relu sub abs INT+ 2 x_0_6 x_0_10", "tree": "((x_0_5 sub (-2 sub relu(x_0_2))) sub (-4 add (relu((abs(2) sub x_0_6)) mul x_0_10)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 8 + 2 + 2 - 3 - 2 - 10 + 5 + 0 - 10 + 206 + 224 + 209 + 238 + 276 + 302 + 393 + 395 + 399 + 510 + 1925 + 2096 + 2038 + 2290 + 2607 + 2842 + 3534 + 3605 + 3692 + 4530 + 1 4498", "x2": "abs add abs mul idiv INT+ 7 INT- 1 x_0_10 abs mul sub n INT- 2 n", "tree": "abs((abs(((7 idiv -1) mul x_0_10)) add abs(((n sub -2) mul n))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 9 + 9 + 7 + 8 - 6 - 3 - 4 + 4 + 5 + 4 - 7 - 14 - 11 + 10 + 8 + 11 - 7 - 4 - 5 + 4 + 6 + 4 - 8 - 13 - 11 + 13 + 9", "x2": "idiv sub sqr abs INT- 6 sub INT+ 8 n x_0_6", "tree": "(((abs(-6))**2 sub (8 sub n)) idiv x_0_6)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 10 + 10 - 1 + 10 + 3 + 10 - 4 + 4 - 10 - 8 + 21 + 2 + 14 + 4 + 12 + 6 + 21 + 14 + 29 + 28 + 0 + 20 + 9 + 20 + 13 + 20 + 6 + 14 + 0 + 2 + 31", "x2": "sub n x_0_10", "tree": "(n sub x_0_10)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 6 - 8 - 7 - 10 - 4 + 6 + 8 + 7 + 10 + 4 - 6 - 8 - 7 - 10 - 4 + 6 + 8 + 7 + 10 + 4 - 6 - 8 - 7 - 10 - 4", "x2": "idiv x_0_5 sign INT- 4", "tree": "(x_0_5 idiv sign(-4))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 9 - 9 - 8 - 1 - 1 - 4 - 9 - 9 - 8 - 1 - 1 - 4 - 9 - 9 - 8 - 1 - 1 - 4 - 9 - 9 - 8 - 1 - 1 - 4 - 9 - 9", "x2": "mul relu abs x_0_6 sign x_0_2", "tree": "(relu(abs(x_0_6)) mul sign(x_0_2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 5 - 9 + 3 - 7 - 7 + 7 + 4 + 6 - 46 - 91 + 32 - 85 - 92 + 97 + 59 + 95 - 783 - 1639 + 607 - 1701 - 1933 + 2133 + 1356 + 2279 - 1 9576 - 4 2615 + 1 6388 - 4 7629 - 5 6058", "x2": "add mul abs n x_0_8 sign INT- 2", "tree": "((abs(n) mul x_0_8) add sign(-2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 3 + 9 - 4 - 1 - 10 - 7 + 10 + 0 + 1 + 9 + 10 + 11 + 12 + 13 + 1 + 2 + 3 + 4 + 5 + 14 + 16 + 18 + 20 + 22 + 6 + 8 + 10 + 12", "x2": "mod mod INT- 2 sub mul sign x_0_8 add relu add n x_0_5 INT+ 4 INT+ 1 0 n", "tree": "((-2 mod ((sign(x_0_8) mul (relu((n add x_0_5)) add 4)) sub 10)) mod n)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 6 + 2 - 1 - 5 + 0 - 2 + 0 - 1 - 2 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_5 INT+ 4", "tree": "(x_0_5 idiv 4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 3 - 10 + 1 + 6 + 6 + 4 - 6 - 4 + 5 - 2 + 2 + 0 + 2 + 0 + 0 + 0 + 0 + 0 + 2 + 0 + 2 + 2 + 2 + 2 + 2 + 0 + 2 + 0 + 0 + 0 + 0", "x2": "sub sign abs add x_0_11 idiv x_0_10 INT- 8 sign idiv x_0_3 abs x_0_7", "tree": "(sign(abs((x_0_11 add (x_0_10 idiv -8)))) sub sign((x_0_3 idiv abs(x_0_7))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3", "x2": "idiv n INT+ 7", "tree": "(n idiv 7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 + 9 + 10 - 9 + 4 + 9 + 28 + 184 + 1611 + 1 6060 + 17 6649 + 211 9728 + 2755 6399 + 3 8578 9516 + 57 8684 2665 + 925 8948 2560 + 1 5740 2120 3435 + 28 3323 8166 1740 + 538 3152 5157 2965 + 1 766 3050 3145 9200 + 22 6092 4056 6064 3095 + 497 4032 9245 3414 7980 + 1 1440 2757 2642 8540 3425 + 27 4566 6174 3428 4968 2080 + 686 4165 4358 5712 4205 1875 + 1 7846 8301 3322 8522 9334 8620 + 48 1864 4135 9717 119 2041 2605", "x2": "mul sub x_0_1 mod INT+ 5 abs x_0_6 n", "tree": "((x_0_1 sub (5 mod abs(x_0_6))) mul n)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 10 + 3 + 3 - 2 - 4 + 9 - 5 - 2 + 12 + 13 + 51 + 59 - 103 - 59 + 29 - 60 - 167 + 30 + 31 + 8 + 8 - 6 - 10 + 21 - 12 - 5 + 26 + 27 + 113", "x2": "idiv add sqr n abs INT+ 9 x_0_9", "tree": "(((n)**2 add abs(9)) idiv x_0_9)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 5 + 5 + 20 + 42 + 73 + 115 + 170 + 240 + 327 + 433 + 560 + 710 + 885 + 1087 + 1318 + 1580 + 1875 + 2205 + 2572 + 2978 + 3425 + 3915", "x2": "add mul n n add mod INT- 1 0 abs sub add sign INT- 8 sub x_0_1 INT- 9 x_0_1 x_0_1", "tree": "((n mul n) add ((-10 mod abs(((sign(-8) add (x_0_1 sub -9)) sub x_0_1))) add x_0_1))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 9 - 10 - 6 - 16 + 2 - 18 - 15 - 26 - 9 - 30 - 28 - 40 - 24 - 46 - 45 - 58 - 43 - 66 - 66 - 80 - 66 - 90 - 91 - 106", "x2": "sub sub x_0_4 n sign n", "tree": "((x_0_4 sub n) sub sign(n))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 0 - 1 - 1 + 11 + 6 + 6 + 7 + 20 + 16 + 17 + 19 + 33 + 30 + 32 + 35 + 50 + 48 + 51 + 55 + 71 + 70 + 74 + 79 + 96", "x2": "mod sub add n x_0_4 idiv INT+ 8 abs INT- 1 0 mul n n", "tree": "(((n add x_0_4) sub (8 idiv abs(-10))) mod (n mul n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 64 + 8 - 16 + 16 - 8 + 32 - 8 + 40 - 8 + 48 - 8 + 56 - 8 + 64 - 8 + 72 - 8 + 80 - 8 + 88 - 8", "x2": "mul INT- 8 idiv mul n abs INT- 4 x_0_1", "tree": "(-8 mul ((n mul abs(-4)) idiv x_0_1))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3", "x2": "idiv n INT- 9", "tree": "(n idiv -9)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 5 - 7 - 1 - 12 - 8 - 13 - 20 - 21 - 33 - 41 - 54 - 74 - 95 - 128 - 169 - 223 - 297 - 392 - 520 - 689 - 912 - 1209 - 1601", "x2": "add x_0_3 x_0_2", "tree": "(x_0_3 add x_0_2)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 2 + 1 - 7 - 4 - 12 - 9 - 17 - 14 - 22 - 19 - 27 - 24 - 32 - 29 - 37 - 34 - 42 - 39 - 47 - 44 - 52 - 49", "x2": "add sub x_0_2 add INT+ 2 sign n INT- 2", "tree": "((x_0_2 sub (2 add sign(n))) add -2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 32 + 77 + 140 + 221 + 320 + 437 + 572 + 725 + 896 + 1085 + 1292 + 1517 + 1760 + 2021 + 2300 + 2597 + 2912 + 3245 + 3596 + 3965", "x2": "mod INT- 4 sqr mul n abs INT+ 3", "tree": "(-4 mod ((n mul abs(3)))**2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 1 - 6 + 4 + 5 + 8 + 9 + 1 + 40 + 89 + 55 + 465 + 1128 + 762 + 7010 + 1 8097 + 1 3179 + 12 6774 + 34 4275 + 26 7800 + 267 3583 + 758 2657 + 624 4114 + 6440 1685 + 1 8975 5151 + 1 6425 9903 + 17 4436 2502 + 53 1778 1542 + 48 1189 7374", "x2": "abs sub x_0_5 sub mul INT+ 6 x_0_8 mul x_0_3 n", "tree": "abs((x_0_5 sub ((6 mul x_0_8) sub (x_0_3 mul n))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 8 - 8 + 4 - 8 - 8 - 2 + 7 + 8 + 9 + 10 + 11 + 10 + 12 + 14 + 12 + 14 + 16 + 16 + 19 + 18 + 21 + 20 + 23 + 24 + 24 + 24 + 24", "x2": "add mod x_0_6 add abs relu INT- 2 INT- 4 n", "tree": "((x_0_6 mod (abs(relu(-2)) add -4)) add n)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 2 + 6 + 1 + 7 + 0 - 9 + 4 + 36 + 1 + 49 + 0 + 81 + 16 + 1296 + 1 + 2401 + 0 + 6561 + 256 + 167 9616 + 1 + 576 4801 + 0 + 4304 6721 + 6 5536 + 2 8211 990 7456 + 1", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 6 + 3 - 6 + 5 + 4 - 10 + 1 - 13 - 34 - 211 - 25 - 265 - 596 - 57 - 28 - 7962 - 462 - 7195 - 5297 - 6648 - 15 7964 - 3 3997 - 1622 - 22 2963 - 367 8472 - 332 4119 - 3811 1945 - 3521 4487", "x2": "sub sub idiv INT+ 6 x_0_4 n abs mul mod x_0_9 mul n x_0_7 x_0_8", "tree": "(((6 idiv x_0_4) sub n) sub abs(((x_0_9 mod (n mul x_0_7)) mul x_0_8)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 1 + 3 - 5 - 2 + 0 + 4 + 7 + 6 + 7 + 10 + 15 + 22 - 2 + 7 + 3 - 1 + 12 + 9 + 6 + 3 + 21", "x2": "add sub INT- 5 mod mod INT- 5 sqr INT+ 5 sub INT- 7 abs n mod sqr INT- 9 n", "tree": "((-5 sub ((-5 mod (5)**2) mod (-7 sub abs(n)))) add ((-9)**2 mod n))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 4 - 1 + 10 - 7 + 6 - 2 - 7 + 16 + 0 + 99 + 48 + 36 + 3 + 48 + 256 - 1 + 9800 + 2303 + 1296 + 8 + 2303 + 6 5536 + 0 + 9603 9999 + 530 3808 + 167 9615 + 63 + 530 3808", "x2": "add idiv INT+ 7 mul sub abs n sqr x_0_6 abs n sqr x_0_7", "tree": "((7 idiv ((abs(n) sub (x_0_6)**2) mul abs(n))) add (x_0_7)**2)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 5 - 2 - 10 + 7 + 0 - 8 + 9 + 2 - 6 + 11 + 4 - 4 + 13 + 6 - 2 + 15 + 8 + 0 + 17 + 10 + 2 + 19 + 12 + 4", "x2": "add INT+ 2 sub x_0_3 relu add INT- 9 idiv n x_0_4", "tree": "(2 add (x_0_3 sub relu((-9 add (n idiv x_0_4)))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 10 - 6 - 2 + 2 + 6 + 14 + 30 + 62 + 126 + 254 + 510 + 1022 + 2046 + 4094 + 8190 + 1 6382 + 3 2766 + 6 5534 + 13 1070 + 26 2142 + 52 4286 + 104 8574", "x2": "add sub relu add add INT+ 2 sign mul n idiv n n relu x_0_1 sign x_0_1 x_0_1", "tree": "((relu(((2 add sign((n mul (n idiv n)))) add relu(x_0_1))) sub sign(x_0_1)) add x_0_1)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 6 + 0 - 7 - 5 - 6 + 1 - 1 - 8 + 13 + 10 + 10 + 11 + 6 + 9 + 9 + 8 + 7 + 10 + 10 + 3 + 5 + 9 + 9 + 10 + 9 + 10 + 10 + 9 + 10", "x2": "relu sub INT+ 1 0 mod INT- 9 idiv idiv x_0_4 abs sign x_0_9 idiv n n", "tree": "relu((10 sub (-9 mod ((x_0_4 idiv abs(sign(x_0_9))) idiv (n idiv n)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 3 + 10 - 4 + 3 - 9 + 0 + 2 + 5 - 25 - 12 - 25 - 11 - 18 - 6 - 15 - 17 - 20 + 10 - 3 + 10 - 4 + 3 - 9 + 0 + 2 + 5 - 25 - 12 - 25", "x2": "sub INT- 8 add add INT+ 6 relu sign sqr relu x_0_4 x_0_9", "tree": "(-8 sub ((6 add relu(sign((relu(x_0_4))**2))) add x_0_9))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 4 + 5 - 14 + 1211 - 14 - 14 + 3122 - 14 - 14 + 5915 - 14 - 14 - 14 + 1 1011 + 1 2530 + 1 4147 + 1 5862 + 1 7675 + 1 9586 + 2 1595 + 2 3702 + 2 5907 + 2 8210", "x2": "sub sqr mul INT- 7 mul n mod idiv x_0_3 n INT+ 2 add INT+ 4 abs INT+ 1 0", "tree": "(((-7 mul (n mul ((x_0_3 idiv n) mod 2))))**2 sub (4 add abs(10)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 + 0 - 2 - 3 + 5 + 4 + 4 + 13 + 13 + 14 + 24 + 25 + 27 + 38 + 40 + 43 + 55 + 58 + 62 + 75 + 79 + 84 + 98 + 103", "x2": "add abs n x_0_3", "tree": "(abs(n) add x_0_3)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 1 + 5 + 1 - 2 + 5 + 5 + 7 + 5 + 1 + 9 + 5 + 5 + 7 + 5 + 1 + 9 + 5 + 5 + 7 + 5 + 1 + 9 + 5 + 5 + 7 + 5", "x2": "mod x_0_6 n", "tree": "(x_0_6 mod n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 4 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul INT- 1 mul sqr mul sub x_0_2 INT- 6 n x_0_2", "tree": "sign((-1 mul ((((x_0_2 sub -6) mul n))**2 mul x_0_2)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 9", "x2": "mod relu n INT- 1 0", "tree": "(relu(n) mod -10)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 8 + 9 + 16 + 21 + 32 + 49 + 64 + 77 + 96 + 121 + 144 + 165 + 192 + 225 + 256 + 285 + 320 + 361 + 400 + 437 + 480 + 529", "x2": "sub sqr n mod x_0_2 n", "tree": "((n)**2 sub (x_0_2 mod n))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 0 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2", "x2": "sub sign n sign idiv x_0_1 sqr relu mul sub sqr mod n INT+ 5 x_0_1 INT- 6", "tree": "(sign(n) sub sign((x_0_1 idiv (relu(((((n mod 5))**2 sub x_0_1) mul -6)))**2)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 7 - 9 + 5 + 8 + 4 + 2 - 45 - 57 - 73 - 91 - 163 - 200 - 243 - 288 - 389 - 457 - 533 - 613 - 751 - 858 - 975 - 1098 - 1281 - 1435 - 1601 - 1775 - 2011", "x2": "sub x_0_4 abs sub sqr n sub relu x_0_6 INT+ 1", "tree": "(x_0_4 sub abs(((n)**2 sub (relu(x_0_6) sub 1))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 1 + 3 + 1 + 5 + 1 + 7 + 1 + 9 + 1 + 11 + 1 + 13 + 1 + 15 + 1 + 17 + 1 + 19 + 1 + 21 + 1", "x2": "idiv abs n x_0_1", "tree": "(abs(n) idiv x_0_1)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764", "x2": "sqr add n n", "tree": "((n add n))**2", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 8 + 10 - 8 - 6 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign sub sub sub x_0_5 INT- 1 mul x_0_4 INT+ 1 relu x_0_1", "tree": "sign((((x_0_5 sub -1) sub (x_0_4 mul 1)) sub relu(x_0_1)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 2 + 0 + 2 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1", "x2": "mod abs add idiv relu x_0_1 INT- 2 x_0_2 mod sign INT- 2 n", "tree": "(abs(((relu(x_0_1) idiv -2) add x_0_2)) mod (sign(-2) mod n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 - 2 - 10 - 8 + 5 - 10 + 3 - 8 + 0 + 4 - 16 - 130 + 48 - 595 - 600 - 1746 + 4688 + 0 + 1 8816 - 272 - 244 8420 - 1 2144 + 14 5679 8000 + 727 3800 - 2 5435 6934 6412 + 340 9968 2224 + 0 + 641 6196 2119 7184 - 7072 - 15 7095 4312 9316 7535 6620", "x2": "mul add mod INT- 3 n x_0_2 x_0_9", "tree": "(((-3 mod n) add x_0_2) mul x_0_9)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 0 + 1 + 7 - 7 - 7 + 3 + 7 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul n add n sqr idiv mul x_0_3 relu idiv sign x_0_8 x_0_5 INT- 6", "tree": "(n mul (n add (((x_0_3 mul relu((sign(x_0_8) idiv x_0_5))) idiv -6))**2))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 27 + 81 + 243 + 729 + 2187 + 6561 + 1 9683 + 5 9049 + 17 7147 + 53 1441 + 159 4323 + 478 2969 + 1434 8907 + 4304 6721 + 1 2914 163 + 3 8742 489 + 11 6226 1467 + 34 8678 4401 + 104 6035 3203 + 313 8105 9609", "x2": "relu add add x_0_1 x_0_1 x_0_1", "tree": "relu(((x_0_1 add x_0_1) add x_0_1))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 2 - 7 - 9 - 16 - 20 - 29 - 35 - 46 - 54 - 67 - 77 - 92 - 104 - 121 - 135 - 154 - 170 - 191 - 209 - 232", "x2": "mul mod x_0_1 sqr n sign INT- 6", "tree": "((x_0_1 mod (n)**2) mul sign(-6))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 9 - 6 + 4 - 4 + 6 + 9 + 6 - 4 + 4 - 6 - 9 - 6 + 4 - 4 + 6 + 9 + 6 - 4 + 4 - 6 - 9 - 6 + 4 - 4 + 6", "x2": "mul idiv add INT+ 2 INT- 1 0 INT+ 9 x_0_5", "tree": "(((2 add -10) idiv 9) mul x_0_5)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 10 + 7 + 3 + 20 + 23 + 39 + 45 + 64 + 73 + 95 + 107 + 132 + 147 + 175 + 193 + 224 + 245 + 279 + 303 + 340 + 367 + 407 + 437", "x2": "add abs sub add n add n n mul sign x_0_4 mod INT+ 2 relu n x_0_2", "tree": "(abs(((n add (n add n)) sub (sign(x_0_4) mul (2 mod relu(n))))) add x_0_2)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 4 - 7 + 3 + 3 - 1 - 1 + 9 + 9 + 1 + 1 - 7 - 7 + 3 + 3 - 1 - 1 + 9 + 9 + 1 + 1 - 7 - 7", "x2": "sub mul INT- 1 INT- 1 idiv abs INT- 8 x_0_2", "tree": "((-1 mul -1) sub (abs(-8) idiv x_0_2))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 2 + 9 - 6 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign mod add INT+ 9 INT+ 4 sub mul x_0_1 sqr relu x_0_3 x_0_3", "tree": "sign(((9 add 4) mod ((x_0_1 mul (relu(x_0_3))**2) sub x_0_3)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 - 10 - 7 - 1 + 3 - 3 - 7 - 9 + 70 + 77 + 1 + 0 + 0 + 0 + 18 - 630 + 2002 + 55 + 0 + 0 + 0 + 0 - 7560 - 4 40 + 9 7900 + 0 + 0", "x2": "mul mod mul INT- 5 add INT+ 4 x_0_2 add INT- 2 x_0_8 x_0_7", "tree": "(((-5 mul (4 add x_0_2)) mod (-2 add x_0_8)) mul x_0_7)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 9 + 8 - 6 + 3 - 6 - 7 + 9 - 30 - 58 - 43 - 43 + 2 - 43 - 58 - 58 - 955 - 3475 - 1930 - 1930 + 5 - 1930 - 3475 - 3475 - 91 3930 - 1208 2570 - 372 8755 - 372 8755", "x2": "sub abs INT+ 6 sqr abs sub INT+ 1 x_0_8", "tree": "(abs(6) sub (abs((1 sub x_0_8)))**2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 10 + 6 + 7 - 2 + 3 + 15 + 5 + 13 + 26 + 15 + 26 + 40 + 30 + 42 + 57 + 48 + 61 + 77 + 69 + 83 + 100 + 93 + 108 + 126 + 120", "x2": "abs add n add sign mul x_0_6 abs add x_0_4 x_0_1 x_0_3", "tree": "abs((n add (sign((x_0_6 mul abs((x_0_4 add x_0_1)))) add x_0_3)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 7 - 6 + 5 - 6 + 6 + 5 - 5 + 17 - 6 + 7 + 16 - 16 + 29 - 7 - 3 + 38 - 39 + 42 + 2 - 35 + 83 - 75 + 46", "x2": "add sub sub INT+ 1 INT- 4 add sign idiv idiv INT+ 3 INT+ 1 0 mod mod relu INT- 1 0 x_0_2 n x_0_1 x_0_3", "tree": "(((1 sub -4) sub (sign(((3 idiv 10) idiv ((relu(-10) mod x_0_2) mod n))) add x_0_1)) add x_0_3)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 5 - 9 + 2 - 14 - 7 - 12 - 21 - 19 - 33 - 40 - 52 - 73 - 92 - 125 - 165 - 217 - 290 - 382 - 507 - 672 - 889 - 1179", "x2": "add x_0_2 x_0_3", "tree": "(x_0_2 add x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 + 1 5876 + 3 5721 + 6 3504 + 9 9225 + 14 2884 + 19 4481 + 25 4016 + 32 1489 + 39 6900 + 48 249 + 57 1536 + 67 761 + 77 7924 + 89 3025 + 101 6064 + 114 7041 + 128 5956 + 143 2809 + 158 7600 + 175 329", "x2": "sqr mul mul INT+ 9 n mod sign sqr x_0_1 INT- 8", "tree": "(((9 mul n) mul (sign((x_0_1)**2) mod -8)))**2", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 - 4 - 3 - 3 - 2 + 2 + 6 + 9 + 1 + 6 + 4 + 0 + 16 + 9 + 9 + 4 + 4 + 12 + 6 + 1 + 9 + 16 + 0 + 16 + 19 + 17 + 16 + 16 + 4 + 0 + 1", "x2": "relu mod idiv sqr x_0_11 sign n sub n INT- 6", "tree": "relu((((x_0_11)**2 idiv sign(n)) mod (n sub -6)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 2 - 10 - 1 + 0 + 2 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 0 + 0 + 0", "x2": "add INT+ 1 idiv x_0_3 INT- 8", "tree": "(1 add (x_0_3 idiv -8))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 + 4 + 7 + 10 + 15 + 18 + 27 + 26 + 21 + 36 + 35 + 28 + 27 + 35 + 45 + 63 + 71 + 76 + 95 + 60 + 63", "x2": "add add n n mod sqr n x_0_1", "tree": "((n add n) add ((n)**2 mod x_0_1))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 5 + 2 + 6 - 6 - 2 - 4 - 1 - 8 + 5 + 6 - 9 + 64 + 1 + 9 + 81 + 25 + 49 + 16 + 121 + 4 + 9 + 144 + 3721 + 4 + 36 + 6084 + 484 + 2116 + 169 + 1 3924 + 1", "x2": "sqr sub INT+ 3 x_0_11", "tree": "((3 sub x_0_11))**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000", "x2": "mul n sqr n", "tree": "(n mul (n)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 9 - 2 + 8 + 3 + 1 - 1 - 10 + 3 + 1 + 9 + 20 + 16 + 15 + 14 + 6 + 20 + 19 + 28 + 40 + 37 + 37 + 37 + 30 + 45 + 45 + 55 + 68", "x2": "add x_0_8 n", "tree": "(x_0_8 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 6 + 1 - 6 - 6 + 1 - 6 - 6 + 1 - 6 - 6 + 1 - 6 - 6 + 1 - 6 - 6 + 1 - 6 - 6 + 1 - 6 - 6 + 1", "x2": "add mul mod x_0_1 x_0_1 n x_0_3", "tree": "(((x_0_1 mod x_0_1) mul n) add x_0_3)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 10 + 4 - 1 - 2 - 6 - 2 + 40 - 32 + 12 + 32 + 120 + 48 - 1120 + 1024 - 432 - 1280 - 5280 - 2304 + 5 8240 - 5 7344 + 2 5920 + 8 1920 + 35 9040 + 16 5888 - 442 6240 + 458 7520", "x2": "mul x_0_6 mod INT+ 6 sub add mul INT- 3 sub n INT+ 7 INT- 3 n", "tree": "(x_0_6 mul (6 mod (((-3 mul (n sub 7)) add -3) sub n)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 8 - 2 - 4 - 3 - 7 + 3 - 10 - 4 + 18 + 19 + 14 + 17 + 17 + 22 + 19 + 27 + 22 + 37 + 39 + 35 + 39 + 40 + 46 + 44 + 53 + 49 + 65 + 68", "x2": "add mul sign n relu n abs x_0_9", "tree": "((sign(n) mul relu(n)) add abs(x_0_9))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 - 6 - 2 + 3 + 9 + 16 + 24 + 33 + 43 + 54 + 66 + 79 + 93 + 108 + 124 + 141 + 159 + 178 + 198 + 219 + 241", "x2": "add add n sign INT+ 7 x_0_1", "tree": "((n add sign(7)) add x_0_1)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "abs mul n n", "tree": "abs((n mul n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 9 + 5 + 10 + 8 + 9 + 1306 + 8 3592 + 2139 9561 + 21 3995 7406 + 4814 9049 9942 + 123 2615 8938 4713 + 21 3995 7406 + 4814 9049 9942 + 123 2615 8938 4713 + 21 3995 7406 + 4814 9049 9942 + 123 2615 8938 4713 + 21 3995 7406 + 4814 9049 9942 + 123 2615 8938 4713 + 21 3995 7406 + 4814 9049 9942 + 123 2615 8938 4713 + 21 3995 7406 + 4814 9049 9942", "x2": "add x_0_3 relu abs mul sqr idiv abs mul n n x_0_6 x_0_1", "tree": "(x_0_3 add relu(abs((((abs((n mul n)) idiv x_0_6))**2 mul x_0_1))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 4 - 4 - 24 - 24 - 124 - 124 - 624 - 624 - 3124 - 3124 - 1 5624 - 1 5624 - 7 8124 - 7 8124 - 39 624 - 39 624 - 195 3124 - 195 3124 - 976 5624 - 976 5624 - 4882 8124", "x2": "sub mul abs INT+ 5 x_0_2 sqr INT+ 2", "tree": "((abs(5) mul x_0_2) sub (2)**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 - 9 - 7 + 1 - 7 + 2 + 6 + 0 + 3 + 1 + 5 + 2 + 6 + 0 + 3 + 1 + 5 + 2 + 6 + 0 + 3 + 1 + 5 + 2 + 6", "x2": "mod mod x_0_6 sqr n n", "tree": "((x_0_6 mod (n)**2) mod n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 3 + 4 + 1 + 0 + 1 + 4 + 3 + 4 + 1 + 0 + 1 + 4 + 3 + 4 + 1 + 0 + 1 + 4", "x2": "mod sqr n sub idiv sub n n INT- 9 INT- 6", "tree": "((n)**2 mod (((n sub n) idiv -9) sub -6))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 - 8 + 24 + 12 + 16 - 24 + 0 + 16 - 48 + 0 + 64 - 240 + 0 + 448 - 1920 + 0 + 4480 - 2 1120 + 0 + 5 8240 - 29 5680 + 0", "x2": "mul sub relu n INT+ 8 x_0_3", "tree": "((relu(n) sub 8) mul x_0_3)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 2 - 5 - 6 - 20 - 30 - 120 - 210 - 960 - 1890 - 9600 - 2 790 - 11 5200 - 27 270 - 161 2800 - 405 4050 - 2580 4800 - 6891 8850 - 4 6448 6400 - 13 945 8150 - 92 8972 8000 - 274 9862 1150 - 2043 7401 6000", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 2 - 10 + 6 + 1 - 4 + 5 + 1 + 1 + 6 - 1 + 0 - 40 + 40 + 15 - 10 + 35 + 15 + 15 + 40 + 5 + 10 - 190 + 210 + 85 - 40 + 185 + 85 + 85 + 210 + 35", "x2": "mul INT+ 5 add x_0_10 mod INT+ 2 abs INT+ 7", "tree": "(5 mul (x_0_10 add (2 mod abs(7))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 9 + 2 + 3 + 3 + 4 + 6 + 7 + 7 + 8 + 10 + 11 + 11 + 12 + 14 + 15 + 15 + 16 + 18 + 19 + 19 + 20", "x2": "sub n mod sqr idiv mul x_0_1 mul sub x_0_1 INT- 1 0 relu x_0_1 x_0_1 INT+ 8", "tree": "(n sub ((((x_0_1 mul ((x_0_1 sub -10) mul relu(x_0_1))) idiv x_0_1))**2 mod 8))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 1 + 7 - 4 + 3 + 7 + 5 + 2 - 8 + 6 - 11 - 17 - 10 - 17 - 31 - 29 - 35 - 47 - 36 - 57 - 53 - 37 - 66 - 56 - 27 - 59 - 44 - 4 - 48 - 13", "x2": "sub x_0_3 add x_0_10 sub n INT+ 4", "tree": "(x_0_3 sub (x_0_10 add (n sub 4)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 0 + 7 + 4 + 12 + 10 + 19 + 18 + 28 + 28 + 39 + 40 + 52 + 54 + 67 + 70 + 84 + 88 + 103 + 108 + 124 + 130", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 10 + 5 + 1 - 10 + 6 + 9 - 7 + 5 - 10 - 12 - 13 - 15 + 215 - 12 - 10 + 316 - 19 + 391 + 436 + 468 + 515 + 75 + 613 + 662 + 90 + 772 + 92 + 42", "x2": "sub sub mod mod x_0_6 x_0_9 relu mul add INT+ 3 n n idiv n INT+ 6 n", "tree": "((((x_0_6 mod x_0_9) mod relu(((3 add n) mul n))) sub (n idiv 6)) sub n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 4 - 2 - 7 + 4 - 6 + 0 + 6 + 0 + 0 + 0 + 4 + 0 + 0 + 6 + 0 + 0 + 0 + 4 + 0 + 0 + 6 + 0 + 0 + 0 + 4 + 0 + 0", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 8 - 1 - 4 - 7 - 4 - 9 - 1 - 1 - 7 + 0 - 7 + 0 - 7 + 0 - 6 - 3 - 5 - 6 - 4 - 8 + 0 - 10 - 5 - 12 - 12", "x2": "mod sqr n add x_0_2 x_0_5", "tree": "((n)**2 mod (x_0_2 add x_0_5))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 0 + 2 + 0 + 3 - 4 + 0 - 15 - 15 - 16 - 18 - 15 - 13 - 3 + 11 + 11 + 13 + 11 + 5 - 8 - 33 - 48 - 51 - 52 - 45 - 27 + 10", "x2": "sub sub sub sign sign n sub x_0_6 INT- 5 x_0_7 n", "tree": "(((sign(sign(n)) sub (x_0_6 sub -5)) sub x_0_7) sub n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 7 + 6 + 12 - 24 + 192 - 1104 + 6672 - 3 9984 + 23 9952 - 143 9664 + 863 8032 - 5182 8144 + 3 1096 8912 - 18 6581 3424 + 111 9488 592 - 671 6928 3504 + 4030 1570 1072 - 2 4180 9420 6384 + 14 5085 6523 8352 - 87 513 9143 64 + 522 3083 4858 432", "x2": "mul add add INT- 8 sub x_0_2 x_0_2 x_0_1 INT- 6", "tree": "(((-8 add (x_0_2 sub x_0_2)) add x_0_1) mul -6)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 8 - 6 + 42 - 22 + 246 - 112 + 1946 - 762 + 1 9348 - 6436 + 23 1414 - 6 4320 + 323 3360 - 73 3386 + 5166 9440 - 923 4202 + 9 2931 6534 - 1 2378 398 + 185 7709 6478 - 16 7007 1824 + 4085 7234 2118 - 198 3455 5474", "x2": "add x_0_3 mul idiv x_0_2 abs INT+ 1 n", "tree": "(x_0_3 add ((x_0_2 idiv abs(1)) mul n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 + 1 - 8 - 7 + 2 + 6 + 11 + 12 + 11 + 10 + 14 + 9 + 16 + 17 + 18 + 14 + 19 + 20 + 19 + 18 + 22 + 25 + 24 + 25 + 26", "x2": "sub add n INT+ 4 relu mod add n x_0_5 INT+ 8", "tree": "((n add 4) sub relu(((n add x_0_5) mod 8)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 7 + 10 + 14 + 19 + 25 + 32 + 40 + 49 + 59 + 70 + 82 + 95 + 109 + 124 + 140 + 157 + 175 + 194 + 214 + 235", "x2": "abs add abs x_0_1 n", "tree": "abs((abs(x_0_1) add n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 3 + 5 + 0 - 4 - 8 - 10 - 2 + 0 + 30 + 95 + 0 + 52 + 192 + 270 + 60 + 0 + 540 + 2565 + 0 + 1092 + 6912 + 9450 + 2520 + 0 + 1 4040 + 6 9255 + 0", "x2": "abs mul add n add mod x_0_1 n idiv INT+ 4 abs mul INT+ 1 n x_0_8", "tree": "abs(((n add ((x_0_1 mod n) add (4 idiv abs((1 mul n))))) mul x_0_8))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 1 + 1 + 1 + 5 + 0 + 7 + 0 + 11 - 5 + 18 - 12 + 29 - 28 + 52 - 58 + 93 - 115 + 173 - 225 + 324 - 433 + 612 - 831", "x2": "sub add x_0_4 abs INT- 6 x_0_1", "tree": "((x_0_4 add abs(-6)) sub x_0_1)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 4 + 6 + 7 + 22 + 9 + 19 + 20 + 35 + 22 + 32 + 33 + 48 + 35 + 45 + 46 + 61 + 48 + 58 + 59 + 74 + 61 + 71 + 72", "x2": "add sub x_0_4 INT- 7 abs sub add INT+ 4 INT+ 3 sign abs add sqr n INT- 5", "tree": "((x_0_4 sub -7) add abs(((4 add 3) sub sign(abs(((n)**2 add -5))))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 8 + 4 - 9 + 10 + 3 - 5 + 2 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv x_0_3 add mul idiv n n INT- 4 sub n idiv x_0_7 INT- 7", "tree": "(x_0_3 idiv (((n idiv n) mul -4) add (n sub (x_0_7 idiv -7))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 6 - 10 + 6 - 2 - 6 - 8 + 2 - 48 - 90 + 60 - 22 - 72 - 104 + 28 - 720 - 1440 + 1020 - 396 - 1368 - 2080 + 588 + 372 2400 + 3013 9200 + 2 4480 - 9900 + 2457 7488 + 7581 6000", "x2": "mul mod n mul add sqr n x_0_7 n x_0_7", "tree": "((n mod (((n)**2 add x_0_7) mul n)) mul x_0_7)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 7 - 9 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2", "x2": "mod x_0_3 INT+ 3", "tree": "(x_0_3 mod 3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 - 2 + 7 + 16 + 20 + 13 - 12 - 32 - 27 + 4 + 48 + 81 + 80 - 9 - 84 - 156 - 131 + 44 + 232 + 369 + 288 - 169 - 612", "x2": "add sub x_0_1 mod x_0_3 x_0_2 sub INT+ 7 x_0_3", "tree": "((x_0_1 sub (x_0_3 mod x_0_2)) add (7 sub x_0_3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 3 + 9 - 8 - 5 - 3 + 9 + 0 + 0 + 10 + 0 + 0 + 0 + 20 + 0 + 0 + 27 + 0 + 0 + 0 + 21 + 0 + 0 + 20 + 0 + 0 + 0", "x2": "relu idiv add sqr n mul sign INT- 2 n x_0_7", "tree": "relu((((n)**2 add (sign(-2) mul n)) idiv x_0_7))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 7 - 2 + 4 + 5 + 0 + 6 - 5 + 7 + 7 + 1 + 7 - 5 + 13 + 12 + 2 + 11 - 8 + 20 + 14 + 7 + 8", "x2": "add sub sign INT+ 7 x_0_1 mod x_0_2 add sqr sign INT- 2 add n x_0_1", "tree": "((sign(7) sub x_0_1) add (x_0_2 mod ((sign(-2))**2 add (n add x_0_1))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 6 - 3 - 1 + 1 + 2 + 9 - 10 + 7 + 4 + 70 + 40 + 17 - 10 - 26 - 140 + 174 - 122 - 72 - 1396 - 836 - 370 + 234 + 628 + 3504 - 4520 + 3298 + 2020 + 4 488", "x2": "sub sqr INT- 2 mul n x_0_9", "tree": "((-2)**2 sub (n mul x_0_9))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 0 + 3 + 4 + 8 + 10 + 15 + 18 + 24 + 28 + 35 + 40 + 48 + 54 + 63 + 70 + 80 + 88 + 99 + 108 + 120 + 130", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 6 + 7 + 5 + 6 + 10 + 11 + 9 + 10 + 14 + 15 + 13 + 14 + 18 + 19 + 17 + 18 + 22 + 23 + 21 + 22", "x2": "add n mod sqr x_0_1 relu INT+ 8", "tree": "(n add ((x_0_1)**2 mod relu(8)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 10 - 49 + 154 + 1275 - 5436 - 5 9737 + 33 7342 + 483 9183 - 3373 3500 - 5 7586 1825 + 47 9015 8278 + 973 2065 115 - 9388 7102 332 - 21 7025 497 2969 + 238 4732 3916 7630 + 6272 239 3719 2087 - 7 7265 3294 9030 7260 - 225 1656 5934 5195 3489 + 3075 1601 1371 4229 6246 + 9 9298 557 7123 1149 6587 - 148 8377 4950 3768 7137 3868", "x2": "mul add idiv INT+ 1 0 mod INT- 8 x_0_1 sqr n sub sub n x_0_2 INT+ 3", "tree": "(((10 idiv (-8 mod x_0_1)) add (n)**2) mul ((n sub x_0_2) sub 3))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 + 5 + 6 - 7 + 0 + 2 + 5 + 6 + 2 + 0 + 2 + 5 + 6 + 2 + 0 + 2 + 5 + 6 + 2 + 0 + 2 + 5 + 6 + 2 + 0", "x2": "mod x_0_5 relu n", "tree": "(x_0_5 mod relu(n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 10 + 8 - 5 - 3 - 48 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600 - 650", "x2": "mul n sub idiv n sub x_0_5 sqr abs x_0_1 n", "tree": "(n mul ((n idiv (x_0_5 sub (abs(x_0_1))**2)) sub n))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 - 4 + 9 - 10 + 4 + 8 + 11 + 16 + 20 + 27 + 35 + 13 + 22 + 27 + 38 + 49 + 21 + 25 + 21 + 24 + 32 + 32 + 37 + 36", "x2": "add mod add relu add INT- 7 mod x_0_4 x_0_1 x_0_2 x_0_1 n", "tree": "(((relu((-7 add (x_0_4 mod x_0_1))) add x_0_2) mod x_0_1) add n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 - 12 - 22 - 43 - 86 - 166 - 326 - 646 - 1286 - 2566 - 5126 - 1 246 - 2 486 - 4 966 - 8 1926 - 16 3846 - 32 7686 - 65 5366 - 131 726 - 262 1446", "x2": "add abs mod INT+ 6 n add x_0_1 x_0_1", "tree": "(abs((6 mod n)) add (x_0_1 add x_0_1))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 5 + 6 + 5 - 5 + 1 + 25 + 36 + 25 + 25 + 1 + 625 + 1296 + 625 + 625 + 1 + 39 625 + 167 9616 + 39 625 + 39 625 + 1 + 1525 8789 625 + 2 8211 990 7456 + 1525 8789 625 + 1525 8789 625 + 1", "x2": "abs sub mul relu mod n idiv x_0_1 x_0_1 abs x_0_2 sqr x_0_5", "tree": "abs(((relu((n mod (x_0_1 idiv x_0_1))) mul abs(x_0_2)) sub (x_0_5)**2))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "relu abs mul n n", "tree": "relu(abs((n mul n)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 3 - 5 + 8 - 2 + 3 - 3 + 2 - 6 + 3 - 7 + 6 - 8 + 4 - 8 + 3 - 5 + 5 - 4 + 8 - 6 + 7 - 7 + 6 - 11", "x2": "add idiv n x_0_4 mod x_0_5 x_0_2", "tree": "((n idiv x_0_4) add (x_0_5 mod x_0_2))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 3 - 12 - 27 - 48 - 75 - 108 - 147 - 192 - 243 - 300 - 363 - 432 - 507 - 588 - 675 - 768 - 867 - 972 - 1083 - 1200", "x2": "mul relu relu n mul INT- 3 n", "tree": "(relu(relu(n)) mul (-3 mul n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 20 + 66 + 272 + 1370 + 8232 + 5 7624 + 46 992 + 414 8955 + 4148 9600 + 4 5638 5699 + 54 7662 8472 + 711 9617 175 + 9967 4638 2604 + 14 9511 9573 9120 + 239 2191 3182 5920 + 4066 7252 4104 878 + 7 3201 543 3873 5984 + 139 820 324 3598 3924 + 2781 6400 6487 1967 8560 + 5 8414 4413 6231 1324 9865", "x2": "idiv sqr x_0_1 idiv x_0_1 n", "tree": "((x_0_1)**2 idiv (x_0_1 idiv n))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 - 1 + 3 - 1 + 5 - 1 + 7 - 1 + 9 - 1 + 11 - 1 + 13 - 1 + 15 - 1 + 17 - 1 + 19 - 1 + 21", "x2": "idiv n sub INT+ 2 mul x_0_1 add mod INT- 8 INT+ 8 x_0_1", "tree": "(n idiv (2 sub (x_0_1 mul ((-8 mod 8) add x_0_1))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 10 - 9 + 6 + 10 - 8 - 5 - 6 - 5 - 17 - 28 - 9 - 7 - 23 - 35 - 13 - 9 - 27 - 45 - 17 - 10 - 30 - 58 - 21 - 11 - 34 - 72 - 25 - 12", "x2": "idiv relu add abs add sub add n abs x_0_8 x_0_5 sqr n INT+ 9 x_0_2", "tree": "(relu((abs((((n add abs(x_0_8)) sub x_0_5) add (n)**2)) add 9)) idiv x_0_2)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 9 + 10 - 8 + 11 - 7 + 12 - 6 + 13 - 5 + 14 - 4 + 15 - 3 + 16 - 2 + 17 - 1 + 18 + 0 + 19 + 1", "x2": "sub n add x_0_1 sign mod add n sub INT+ 5 mul n abs sqr sqr x_0_1 INT+ 8", "tree": "(n sub (x_0_1 add sign(((n add (5 sub (n mul abs(((x_0_1)**2)**2)))) mod 8))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 5 + 7 + 0 - 6 + 5 - 2 + 9 - 6 + 8 + 1 - 7 + 6 - 3 + 10 - 7 + 9 + 2 - 8 + 7 - 4 + 11 - 8 + 10 + 3 - 9 + 8 - 5", "x2": "add sign mul sign INT+ 7 add mod x_0_3 x_0_2 sub x_0_3 x_0_6 x_0_7", "tree": "(sign((sign(7) mul ((x_0_3 mod x_0_2) add (x_0_3 sub x_0_6)))) add x_0_7)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 5 - 4 - 9 - 20 - 5 + 0 - 9 - 40 - 15 + 0 - 45 - 240 - 105 + 0 - 405 - 2400 - 1155 + 0 - 5265 - 3 3600 - 1 7325 + 0 - 8 9505", "x2": "add relu INT- 3 mul x_0_4 add n idiv mul INT+ 3 add INT+ 5 INT+ 9 INT- 6", "tree": "(relu(-3) add (x_0_4 mul (n add ((3 mul (5 add 9)) idiv -6))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 4 + 2 + 8 + 9 - 3 + 4 + 11 + 5 + 13 + 8 + 9 + 24 + 13 + 22 + 32 + 22 + 46 + 45 + 44 + 78 + 67 + 90 + 123 + 111 + 168", "x2": "add x_0_3 x_0_5", "tree": "(x_0_3 add x_0_5)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 5 + 8 - 34 - 25 - 44 - 8 - 23 - 10 - 52 - 43 - 62 - 26 - 41 - 28 - 70 - 61 - 80 - 44 - 59 - 46 - 88 - 79", "x2": "add mul idiv INT- 1 0 sqr relu n add mul n INT+ 7 x_0_3 n", "tree": "(((-10 idiv (relu(n))**2) mul ((n mul 7) add x_0_3)) add n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 - 2 + 10 - 1 - 4 - 48 - 112 - 342 - 2016 - 5472 - 2 9568 - 7 5045 - 38 4384 - 93 3894 - 461 2608 - 1086 7131 - 5227 6224 - 1 2037 4375 - 5 6757 432 - 12 8399 3334 - 59 5948 9536 - 132 9310 7458 - 609 1922 6368 - 1343 3034 9050 - 6091 9226 3680", "x2": "idiv mul mul x_0_2 sign n mul INT+ 8 n add n mod sub INT+ 4 INT+ 9 add x_0_5 INT- 7", "tree": "(((x_0_2 mul sign(n)) mul (8 mul n)) idiv (n add ((4 sub 9) mod (x_0_5 add -7))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 7 + 0 + 9 - 2 + 5 - 6 - 49 + 0 + 81 - 20 + 55 - 72 - 637 + 0 + 1215 - 320 + 935 - 1296 - 1 2103 + 0 + 2 5515 - 7040 + 2 1505 - 3 1104 - 30 2575 + 0", "x2": "mul x_0_6 abs n", "tree": "(x_0_6 mul abs(n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 1 - 9 + 3 + 10 - 2 - 8 - 8 + 7 + 2 + 6 + 6 + 13 + 13 + 3 + 2 + 2 + 1 + 8 + 8 + 2 + 3 + 3 + 4 + 3 + 3 + 3 + 2 + 2", "x2": "abs add INT- 4 add idiv add relu x_0_9 idiv x_0_8 INT+ 9 sub x_0_4 sqr INT- 9 x_0_6", "tree": "abs((-4 add (((relu(x_0_9) add (x_0_8 idiv 9)) idiv (x_0_4 sub (-9)**2)) add x_0_6)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 4 + 20 - 72 + 368 - 2200 + 1 5408 - 12 3256 + 110 9312 - 1109 3112 + 1 2202 4240 - 14 6429 872 + 190 3578 1344 - 2665 93 8808 + 3 9975 1408 2128 - 63 9602 2531 4040 + 1087 3238 3033 8688 - 1 9571 8289 4609 6376 + 37 1864 7499 7583 1152 - 743 7294 9995 1662 3032 + 1 5618 3194 9898 4908 3680", "x2": "sub INT+ 8 mul n x_0_1", "tree": "(8 sub (n mul x_0_1))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 8 + 5 - 7 + 13 - 7 + 71 - 7 + 561 - 7 + 5603 - 7 + 6 7229 - 7 + 94 1199 - 7 + 1505 9177 - 7 + 2 7106 5179 - 7 + 54 2130 3573 - 7 + 1192 6867 8599", "x2": "mod INT- 7 sub mul x_0_2 relu n sub sub n n mod relu add INT- 8 INT- 6 n", "tree": "(-7 mod ((x_0_2 mul relu(n)) sub ((n sub n) sub (relu((-8 add -6)) mod n))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 - 4 + 2 - 3 - 2 + 16 + 9 + 64 + 4 + 49 + 36 + 144 + 25 + 3600 + 0 + 2025 + 1024 + 1 9600 + 441 + 1293 1216 + 16 + 408 4441 + 104 400 + 3 8400 3216 + 19 969", "x2": "sqr sub INT+ 4 x_0_6", "tree": "((4 sub x_0_6))**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 9 + 4 + 2 - 5 - 1 + 3 + 3 - 10 - 2 + 7 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "sqr mul sign idiv add INT+ 6 x_0_11 sign idiv mul INT- 2 mod n x_0_2 INT- 7 n", "tree": "((sign(((6 add x_0_11) idiv sign(((-2 mul (n mod x_0_2)) idiv -7)))) mul n))**2", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 4 - 6 - 4 + 8 + 0 - 4 - 8 + 10 + 7 + 8 + 3 + 6 + 0 + 8 + 6 + 7 + 2 + 0 + 8 + 4 + 3 + 5 + 7 + 6 + 7 + 7 + 0 + 8 + 5", "x2": "mod add mul mul x_0_3 n add INT- 7 x_0_9 n INT+ 9", "tree": "((((x_0_3 mul n) mul (-7 add x_0_9)) add n) mod 9)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 8 + 10 - 9 - 3 - 4 + 9 - 7 + 0 + 0 + 0 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 - 1", "x2": "idiv x_0_8 sub idiv relu INT+ 5 n mul INT- 8 INT+ 8", "tree": "(x_0_8 idiv ((relu(5) idiv n) sub (-8 mul 8)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 10 + 6 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul add n abs idiv x_0_1 mul sqr add n n sign mod INT+ 4 INT- 2 n", "tree": "((n add abs((x_0_1 idiv (((n add n))**2 mul sign((4 mod -2)))))) mul n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 - 3 - 4 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 7", "x2": "idiv add n mod idiv x_0_2 n mul x_0_1 x_0_2 INT- 8", "tree": "((n add ((x_0_2 idiv n) mod (x_0_1 mul x_0_2))) idiv -8)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 9 + 10 + 10 + 0 + 8 + 3 + 3 + 0 - 6 - 7 + 13 + 11 + 7 + 10 + 3 + 8 + 13 + 13 + 23 + 20 + 9 + 11 + 4 + 7 + 22 + 20 + 26 + 25 + 8 + 12", "x2": "sub add sub n abs x_0_4 idiv relu sub n x_0_10 INT+ 3 sign sign n", "tree": "(((n sub abs(x_0_4)) add (relu((n sub x_0_10)) idiv 3)) sub sign(sign(n)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 79 - 74 - 67 - 58 - 47 - 34 - 19 - 2 + 17 + 38 + 61 + 86 + 113 + 142 + 173 + 206 + 241 + 278 + 317 + 358", "x2": "sub add mod sign INT- 4 n sqr relu mul sign n n sub sqr INT- 9 n", "tree": "(((sign(-4) mod n) add (relu((sign(n) mul n)))**2) sub ((-9)**2 sub n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 45 - 30 - 5 + 30 + 80 + 140 + 210 + 290 + 380 + 480 + 590 + 710 + 840 + 980 + 1130 + 1290 + 1460 + 1640 + 1830 + 2030", "x2": "mul abs INT+ 5 add relu add INT- 4 n add sqr n INT- 1 0", "tree": "(abs(5) mul (relu((-4 add n)) add ((n)**2 add -10)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 3 - 3 - 4 + 4 + 6 + 8 - 5 - 7 + 17 + 11 + 12 + 13 + 14 + 15 + 16 + 21 + 21 + 24 + 29 + 30 + 31 + 32 + 33 + 38 + 26 + 45 + 40 + 29", "x2": "add n abs mod mul n mod x_0_8 x_0_2 x_0_9", "tree": "(n add abs(((n mul (x_0_8 mod x_0_2)) mod x_0_9)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 8 + 0 - 6 - 5 - 15 - 16 - 9 - 4 - 6 + 3 + 3 - 5 - 11 - 10 - 20 - 21 - 14 - 9 - 11 - 2 - 2 - 10 - 16 - 15", "x2": "sub idiv add n mul mod INT- 6 INT+ 3 x_0_5 mul n idiv INT- 3 mod abs INT- 1 n add n x_0_5", "tree": "(((n add ((-6 mod 3) mul x_0_5)) idiv (n mul (-3 idiv (abs(-1) mod n)))) sub (n add x_0_5))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr mul n sqr INT- 1", "tree": "((n mul (-1)**2))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 8 + 0 - 1 - 7 - 8 + 0 - 8 + 0 + 0 + 0 + 0 + 0 - 8 + 0 + 0 - 8 + 0 + 0 - 8 + 0 + 0 - 8 + 0 + 0", "x2": "mod abs relu mod idiv n n add x_0_5 sqr mod n INT+ 3 INT- 9", "tree": "(abs(relu(((n idiv n) mod (x_0_5 add ((n mod 3))**2)))) mod -9)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 1 - 200 - 6 0 - 2400 0 - 120 0 0 - 7 2000 0 0 - 5040 0 0 0 - 403 2000 0 0 0 - 36 2880 0 0 0 0 - 3 6288 0 0 0 0 0 - 3991 6800 0 0 0 0 0 - 479 16 0 0 0 0 0 0 - 62 2702 800 0 0 0 0 0 0 - 8 7178 2912 0 0 0 0 0 0 0 - 1 3076 7436 8000 0 0 0 0 0 0 0 - 2092 2789 8880 0 0 0 0 0 0 0 0 - 355 6874 2809 6000 0 0 0 0 0 0 0 0 - 64 237 3705 7280 0 0 0 0 0 0 0 0 0 - 12 1645 1004 883 2000 0 0 0 0 0 0 0 0 0 - 2 4329 200 8176 6400 0 0 0 0 0 0 0 0 0 0 - 5109 942 1717 944 0 0 0 0 0 0 0 0 0 0 0", "x2": "mul sqr mul INT- 1 0 sign mod mul n mod n add INT+ 3 n relu n mul n x_0_1", "tree": "(((-10 mul sign(((n mul (n mod (3 add n))) mod relu(n)))))**2 mul (n mul x_0_1))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 2 + 8 + 0 + 7 - 3 - 9 - 25 - 33 - 48 - 53 - 52 - 35 - 10 + 30 + 75 + 119 + 146 + 148 + 110 + 27 - 100 - 254 - 410 - 528 - 563", "x2": "sub x_0_1 add INT+ 8 x_0_5", "tree": "(x_0_1 sub (8 add x_0_5))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 6 + 144 + 324 + 576 + 900 + 1296 + 1764 + 2304 + 2916 + 3600 + 4356 + 5184 + 6084 + 7056 + 8100 + 9216 + 1 404 + 1 1664 + 1 2996 + 1 4400 + 1 5876", "x2": "sqr mul sign x_0_1 mul INT+ 6 relu idiv n sign abs add INT+ 3 n", "tree": "((sign(x_0_1) mul (6 mul relu((n idiv sign(abs((3 add n))))))))**2", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 6 - 9 + 4 + 16 + 19 + 6 - 6 - 9 + 4 + 16 + 19 + 6 - 6 - 9 + 4 + 16 + 19 + 6 - 6 - 9 + 4 + 16", "x2": "sub INT+ 1 0 x_0_3", "tree": "(10 sub x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 5 + 4 + 7 + 3 - 5 + 4 + 7 + 3 - 5 + 4 + 7 + 3 - 5 + 4 + 7 + 3 - 5 + 4 + 7 + 3 - 5 + 4 + 7 + 3", "x2": "add x_0_4 sub n n", "tree": "(x_0_4 add (n sub n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 6 - 7 + 7 + 4 + 3 - 31 - 32 - 18 - 21 - 22 - 56 - 57 - 43 - 46 - 47 - 81 - 82 - 68 - 71 - 72 - 106 - 107 - 93 - 96 - 97", "x2": "sub x_0_5 sqr INT- 5", "tree": "(x_0_5 sub (-5)**2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 4 + 6 + 2 + 10 + 8 + 5 - 5 + 5 + 1 + 9 + 7 + 4 - 6 + 4 + 0 + 8 + 6 + 3 - 7 + 3 - 1 + 7 + 5 + 2 - 8 + 2", "x2": "add x_0_6 mul sign INT+ 1 0 INT- 1", "tree": "(x_0_6 add (sign(10) mul -1))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 7 - 4 + 2 - 10 + 1 + 10 + 10 - 3 - 6 - 10 - 14 - 15 - 13 - 26 - 13 - 17 - 4 - 21 - 11 - 32 - 26 - 48 - 40 - 75 - 54 - 93 - 59 - 115 - 71 - 148", "x2": "add x_0_10 sub x_0_2 sign sqr n", "tree": "(x_0_10 add (x_0_2 sub sign((n)**2)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 6 + 3 + 2 - 4 - 9 - 19 - 29 - 44 - 60 - 81 - 104 - 132 - 163 - 199 - 239 - 284 - 334 - 389 - 450 - 516 - 589", "x2": "sub x_0_2 sub relu add n idiv sqr n INT+ 4 INT+ 4", "tree": "(x_0_2 sub (relu((n add ((n)**2 idiv 4))) sub 4))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 7 + 6 + 0 - 2 - 5 + 7 + 5 - 10 - 2 + 56 - 56 + 48 + 0 - 16 - 40 + 56 + 40 - 80 - 16 + 448 - 448 + 384 + 0 - 128 - 320 + 448 + 320 - 640 - 128", "x2": "mul INT- 8 sub relu sub x_0_10 sqr add x_0_2 mod INT+ 1 INT- 1 x_0_10", "tree": "(-8 mul (relu((x_0_10 sub ((x_0_2 add (1 mod -1)))**2)) sub x_0_10))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 67 - 20 - 31 - 28 - 11 - 4 + 5 + 16 + 37 + 52 + 69 + 88 + 109 + 132 + 157 + 184 + 213 + 244 + 277 + 312", "x2": "add mul n n mul INT+ 4 sub sub mul mod INT+ 2 n idiv INT- 9 n sqr idiv INT+ 4 n n", "tree": "((n mul n) add (4 mul ((((2 mod n) mul (-9 idiv n)) sub ((4 idiv n))**2) sub n)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 10 + 8 - 5 + 3 + 0 - 2 + 5 + 3 + 0 - 2 + 5 + 3 + 0 - 2 + 5 + 3 + 0 - 2 + 5 + 3 + 0 - 2 + 5 + 3 + 0 - 2 + 5 + 3 + 0 - 2", "x2": "add x_0_2 idiv INT- 5 sign idiv x_0_2 sqr sub x_0_2 idiv x_0_1 x_0_2", "tree": "(x_0_2 add (-5 idiv sign((x_0_2 idiv ((x_0_2 sub (x_0_1 idiv x_0_2)))**2))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 - 6 - 2 - 1 - 2 + 3 + 5 + 5 + 11 + 14 + 15 + 22 + 26 + 28 + 36 + 41 + 44 + 53 + 59 + 63 + 73 + 80 + 85 + 96 + 104 + 110 + 122 + 131 + 138 + 151 + 161", "x2": "add n sub x_0_3 sqr sign sub INT+ 6 INT- 2", "tree": "(n add (x_0_3 sub (sign((6 sub -2)))**2))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 10 + 7 + 7 - 5 + 0 + 2 + 10 + 0 + 0 + 0 + 0 + 72 + 600 + 0 + 0 + 0 + 0 + 1 1664 + 54 6000 + 0 + 0 + 0 + 0 + 419 9040 + 1021 1510 4000 + 0 + 0 + 0 + 0 + 26 4539 5200 + 943 3348 5811 444 8000 + 0 + 0 + 0 + 0", "x2": "mul relu mul x_0_6 add x_0_7 n sub n mul sub INT+ 5 INT- 4 sign abs n", "tree": "(relu((x_0_6 mul (x_0_7 add n))) mul (n sub ((5 sub -4) mul sign(abs(n)))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 9 + 8 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 9 + 2 + 13 + 42 + 15 + 60 + 177 + 70 + 251 + 720 + 293 + 1018 + 2895 + 1188 + 4089 + 1 1598 + 4771 + 1 6376 + 4 6413 + 1 9106 + 6 5527 + 18 5676 + 7 6449 + 26 2134 + 74 2731 + 30 5824 + 104 8565 + 297 954 + 122 3327 + 419 4292", "x2": "add n sub sign n mul mul add mod n sign idiv n INT+ 3 idiv n n INT- 4 x_0_3", "tree": "(n add (sign(n) sub ((((n mod sign((n idiv 3))) add (n idiv n)) mul -4) mul x_0_3)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 5", "x2": "idiv abs add n sign relu mod INT- 6 n INT- 7", "tree": "(abs((n add sign(relu((-6 mod n))))) idiv -7)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 2 - 10 + 1 - 7 + 3 - 6 - 8 - 1 + 5 + 12 + 20 + 9 + 17 + 7 + 16 + 18 + 11 + 5 - 1 - 1 + 1 - 1 + 3 - 1 - 1 - 1 + 5 + 11 + 11 + 9 + 11 + 7 + 11 + 11 + 11 + 5 - 1", "x2": "sub relu sub abs sub INT- 1 INT+ 1 0 x_0_9 sign mod x_0_10 n", "tree": "(relu((abs((-1 sub 10)) sub x_0_9)) sub sign((x_0_10 mod n)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 10 - 7 - 120 - 134 - 149 - 165 - 182 - 200 - 219 - 239 - 260 - 282 - 305 - 329 - 354 - 380 - 407 - 435 - 464 - 494 - 525 - 557 - 590 - 624 - 659 - 695 - 732 - 770 - 809 - 849", "x2": "sub x_0_1 add sqr relu x_0_2 add abs INT- 1 0 n", "tree": "(x_0_1 sub ((relu(x_0_2))**2 add (abs(-10) add n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 2 + 7 + 4 - 7 + 7 - 39 - 99 - 358 - 1531 - 6135 - 2 5354 - 10 4221 - 42 8017 - 176 372 - 724 3853 - 2983 4430 - 1 2297 4052 - 5 727 2365 - 20 9413 1310 - 86 5162 184 - 357 7011 539 - 1480 297 6639 - 6128 3806 3476 - 2 5394 7564 7168 - 10 5308 4769 69 - 43 7020 2180 8278 - 181 4916 4622 6144 - 754 2697 3643 5420 - 3136 9652 3696 4968 - 1 3055 8088 7247 8124 - 5 4375 9699 2421 2780 - 22 6630 692 5927 8807", "x2": "add mul add INT- 5 INT+ 1 abs x_0_1 sub add n mul x_0_5 n abs x_0_3", "tree": "(((-5 add 1) mul abs(x_0_1)) add ((n add (x_0_5 mul n)) sub abs(x_0_3)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 28 + 63 + 112 + 175 + 252 + 343 + 448 + 567 + 700 + 847 + 1008 + 1183 + 1372 + 1575 + 1792 + 2023 + 2268 + 2527 + 2800 + 3087 + 3388 + 3703 + 4032 + 4375 + 4732 + 5103 + 5488", "x2": "relu mul relu sqr n INT+ 7", "tree": "relu((relu((n)**2) mul 7))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 + 8 + 1 + 7 + 0 - 4 + 8 - 7 + 1 - 7 + 1 + 7 - 5 + 8 + 2 + 8 + 1 - 7 + 8 - 6 + 1 - 7 + 2 + 10 - 4 + 7 + 2 + 9 - 2 - 9 + 6 - 5 + 2 - 6", "x2": "sub mod x_0_5 INT+ 5 x_0_6", "tree": "((x_0_5 mod 5) sub x_0_6)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756 + 812", "x2": "add relu INT- 3 add mul abs n relu n n", "tree": "(relu(-3) add ((abs(n) mul relu(n)) add n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 5 - 3 + 2 + 6 - 4 - 3 - 4 - 1 + 5 + 4 + 0 + 6 + 2 + 0 + 0 + 6 + 12 + 0 + 0 + 4 + 0 + 6 + 2 + 0 + 0 + 6 + 0 + 0 + 0 + 4 + 0 + 0 + 2 + 0 + 0 + 6 + 0", "x2": "abs relu mod x_0_10 mod sqr x_0_10 n", "tree": "abs(relu((x_0_10 mod ((x_0_10)**2 mod n))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 1 - 3 + 10 + 10 + 0 + 12 + 14 - 32 - 27 + 30 - 33 - 48 + 39 + 42 - 120 + 32 + 51 - 144 - 171 + 60 - 105 - 198 + 69 + 72 - 250 + 52 + 81 - 280 - 290 + 90 - 186 - 320 + 99", "x2": "mul add idiv add x_0_2 mul n relu mul x_0_5 INT+ 5 sqr n INT- 2 mul relu n INT- 1", "tree": "((((x_0_2 add (n mul relu((x_0_5 mul 5)))) idiv (n)**2) add -2) mul (relu(n) mul -1))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 4 + 8 + 14 + 22 + 32 + 44 + 58 + 74 + 92 + 112 + 134 + 158 + 184 + 212 + 242 + 274 + 308 + 344 + 382 + 422 + 464 + 508 + 554 + 602 + 652 + 704 + 758", "x2": "sub sub sqr n n INT- 2", "tree": "(((n)**2 sub n) sub -2)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 1 + 5 + 2 + 5 + 1 + 5 + 3 + 8 + 5 + 8 + 4 + 8 + 6 + 11 + 8 + 11 + 7 + 11 + 9 + 14 + 11 + 14 + 10 + 14 + 12 + 17 + 14 + 17 + 13 + 17", "x2": "sub relu n mod relu relu x_0_3 n", "tree": "(relu(n) sub (relu(relu(x_0_3)) mod n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 1 + 6 - 6 + 3 - 7 + 5 - 7 - 9 + 7 - 4 - 5 + 12 + 2 + 3 + 21 + 12 + 14 + 33 + 26 + 29 + 49 + 43 + 47 + 69 + 64 + 69 + 92 + 88 + 95 + 119 + 116 + 124 + 149 + 148 + 157 + 183", "x2": "add INT- 1 0 add x_0_3 add n idiv sub n mul sub idiv idiv n n x_0_9 sub n n INT+ 1 INT+ 5", "tree": "(-10 add (x_0_3 add (n add ((n sub ((((n idiv n) idiv x_0_9) sub (n sub n)) mul 1)) idiv 5))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 4 + 73 + 0 + 318 + 215 + 170 + 71 + 723 + 10 + 170 + 39 + 110 + 121 + 367 + 778 + 269 + 642 + 1213 + 80 + 333 + 78 + 812 + 93 + 1225 + 2096 + 84 + 441 + 248 + 15", "x2": "add sub sign x_0_1 mod add x_0_1 INT+ 8 n mul n sqr mod add x_0_2 abs n INT+ 1 0", "tree": "((sign(x_0_1) sub ((x_0_1 add 8) mod n)) add (n mul (((x_0_2 add abs(n)) mod 10))**2))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 5 + 12 - 16 + 65 - 90 + 462 - 712 + 4167 - 7110 + 4 5848 - 8 5308 + 59 6037 - 119 4298 + 894 570 - 1910 8752 + 1 5198 9707 - 3 4395 7518 + 28 8780 4452 - 68 7915 340 + 606 4389 3513 - 1513 4130 7458 + 1 3948 955 822 - 3 6321 9137 8968 + 34 8702 3877 575 - 94 4369 7585 3142 + 941 4964 4680 5552 - 2644 2353 2388 7948 + 2 7303 3969 5736 1037 - 7 9327 597 1663 8410", "x2": "add mul x_0_2 n n", "tree": "((x_0_2 mul n) add n)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 36 - 37 - 38 - 39 - 40 - 41 - 42 - 43 - 44 - 90 - 92 - 94 - 96 - 98 - 100 - 102 - 104 - 106 - 162 - 165 - 168 - 171 - 174 - 177 - 180 - 183 - 186 - 252", "x2": "mul add sign INT- 1 0 add n sqr INT- 6 idiv n INT- 9", "tree": "((sign(-10) add (n add (-6)**2)) mul (n idiv -9))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 9 - 8 - 2 + 3 - 18 - 10 - 10 - 30 - 21 - 25 - 44 - 39 - 42 - 60 - 59 - 61 - 83 - 81 - 82 - 108 - 105 - 110 - 135 - 131 - 140 - 164 - 164 - 172 - 195 - 199", "x2": "add x_0_3 sub sub mod add relu n n mod INT- 5 sub x_0_2 INT+ 7 sign n n", "tree": "(x_0_3 add ((((relu(n) add n) mod (-5 mod (x_0_2 sub 7))) sub sign(n)) sub n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 1 + 7 + 3 - 1 - 3 + 3 - 3 - 10 + 132 + 186 + 153 + 190 + 132 + 203 + 277 + 267 + 317 + 361 + 400 + 441 + 484 + 529 + 576 + 626 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225 + 1296 + 1369", "x2": "add sub idiv sqr INT+ 8 x_0_9 mod n idiv INT- 3 mod x_0_9 relu n sqr n", "tree": "((((8)**2 idiv x_0_9) sub (n mod (-3 idiv (x_0_9 mod relu(n))))) add (n)**2)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 5 + 4 - 1 + 1 - 3 - 7 - 9 - 4 - 5 + 5 + 237 + 94 + 39 + 19 + 32 + 33 + 22 + 44 + 21 + 121 + 5 3846 + 2 472 + 3049 + 425 + 195 + 28 + 149 + 513 + 559 + 1 31 + 28 8637 5657 + 11 1382 3909 + 3 356 963 + 688 5411 + 5 2936 + 2 7926 + 1 4679 + 13 2535", "x2": "add sqr sub x_0_11 x_0_10 relu n", "tree": "(((x_0_11 sub x_0_10))**2 add relu(n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 10 - 7 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sub n add n sign mul x_0_3 sign INT+ 5", "tree": "(n sub (n add sign((x_0_3 mul sign(5)))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 3 - 10 - 9 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3 + 26 + 0 + 3", "x2": "mod mod x_0_3 sqr sub n mul INT- 4 x_0_4 sqr INT- 6", "tree": "((x_0_3 mod ((n sub (-4 mul x_0_4)))**2) mod (-6)**2)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 7 - 3 - 8 + 4 + 3 - 2 - 66 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21 - 11 - 2 - 21", "x2": "mod x_0_3 sub sub add sub INT- 6 x_0_6 x_0_7 sqr x_0_6 n", "tree": "(x_0_3 mod ((((-6 sub x_0_6) add x_0_7) sub (x_0_6)**2) sub n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 3 + 3 + 5 + 15 + 9 + 14 + 13 + 16 + 17 + 19 + 20 + 22 + 24 + 25 + 27 + 28 + 30 + 32 + 33 + 35 + 37 + 38 + 40 + 41 + 43 + 45 + 46 + 48", "x2": "add idiv mul sub n idiv x_0_1 sub INT+ 4 x_0_1 n relu x_0_1 n", "tree": "((((n sub (x_0_1 idiv (4 sub x_0_1))) mul n) idiv relu(x_0_1)) add n)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 33 615 + 31 3590 + 24 5015 + 10 2390 + 2391 + 51 8390 + 333 615 + 1239 390 + 3582 215 + 8881 1766 + 1 9782 4215 + 4 642 5590 + 7 8316 215 + 14 3186 5590 + 25 490 2391 + 42 1980 1590 + 68 7987 3015 + 108 9935 9990 + 168 3376 5015 + 254 1601 1766 + 375 9914 9015 + 546 634 2390 + 779 8894 215 + 1096 9343 9990 + 1521 3822 2391 + 2083 95 9990 + 2818 1764 8215 + 3770 9424 6390", "x2": "sub sqr sub sqr sqr n mul INT+ 8 mul INT- 8 INT- 9 INT+ 1 0", "tree": "(((((n)**2)**2 sub (8 mul (-8 mul -9))))**2 sub 10)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 5 - 10 - 4 + 10 + 4 + 8 - 8 + 10 + 0 - 1 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv mul x_0_7 sign mod x_0_5 mul sqr sub x_0_2 n x_0_9 sub x_0_4 sqr n", "tree": "((x_0_7 mul sign((x_0_5 mod (((x_0_2 sub n))**2 mul x_0_9)))) idiv (x_0_4 sub (n)**2))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 5 + 14 + 46 + 188 + 944 + 5668 + 3 9680 + 31 7444 + 285 7000 + 2857 4 + 3 1427 48 + 37 7124 580 + 490 2612 7544 + 6863 6578 5620 + 10 2954 8678 4304 + 164 7277 8854 8868 + 2800 3724 533 760 + 5 406 7032 9595 3684 + 95 7727 3626 2312 0 + 1915 4547 2524 6240 4 + 4 224 5492 3017 1040 88 + 88 4940 830 6376 2880 1940 + 2035 3621 9104 6654 6244 4624 + 4 8848 6925 8511 9710 9867 980 + 122 1217 3146 2799 2774 6677 4504 + 3175 1650 1803 2781 2141 3613 7108 + 8 5729 4554 8688 5092 7816 7570 1920 + 240 424 7536 3278 2597 8869 1965 3764 + 6961 2317 8553 5069 5338 7206 6995 9160", "x2": "add mul abs x_0_1 n abs INT+ 4", "tree": "((abs(x_0_1) mul n) add abs(4))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 1 + 7 + 4 - 9 + 5 - 1 + 4 - 7 - 9 - 9 + 0 + 96 + 65 - 112 + 90 + 0 + 85 - 108 - 152 - 160 + 21 + 2134 + 1518 - 2664 + 2275 + 26 + 2322 - 2996 - 4379 - 4770 + 682 + 6 8320 + 5 127 - 9 542 + 7 9660 + 972 + 8 5951 - 11 3810", "x2": "mul n add idiv n abs n x_0_10", "tree": "(n mul ((n idiv abs(n)) add x_0_10))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 9 - 10 - 6 + 0 + 4 + 4 + 3 + 1 + 7 + 3 + 9 + 3 + 9 + 1 + 7 + 13 + 2 + 8 + 14 + 0 + 6 + 12 + 18 + 0 + 6 + 12 + 18 + 24 + 1 + 7 + 13", "x2": "mod add mul INT+ 6 sign sign mul n idiv x_0_3 INT+ 4 x_0_1 n", "tree": "(((6 mul sign(sign((n mul (x_0_3 idiv 4))))) add x_0_1) mod n)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 + 10 + 3 + 10 + 8 + 3 - 4 - 9 - 7 - 1 - 1 - 2 - 1 - 1 - 2 - 1 - 1 - 1 - 4 - 4 - 2 - 4 - 4 - 2 - 4 - 4 - 4 - 1 - 1 - 2 - 1 - 1 - 2 - 1 - 1 - 1 - 4", "x2": "idiv INT- 4 abs x_0_9", "tree": "(-4 idiv abs(x_0_9))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 9 + 1 - 6 + 0 + 0 + 0 + 32 + 9 + 10 - 21 + 0 + 0 + 0 - 45 + 16 + 17 + 63 - 3 + 0 + 0 + 0 + 23 + 24 + 25 + 3 + 0 + 0 + 0 + 0 + 31 + 32", "x2": "mul idiv mul n sign abs abs n add x_0_4 n sub n x_0_3", "tree": "(((n mul sign(abs(abs(n)))) idiv (x_0_4 add n)) mul (n sub x_0_3))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 4 + 4 + 10 + 9 + 6 - 9 - 36 - 48 - 48 - 56 - 26 + 32 + 60 + 110 + 146 + 82 - 22 - 142 - 326 - 456 - 430 - 296 + 70 + 598 + 1094 + 1406 + 1394 + 606 - 722 - 2392 - 4074 - 5044 - 4094 - 1416", "x2": "mul INT- 2 add n add add mod sign x_0_7 n x_0_5 x_0_7", "tree": "(-2 mul (n add (((sign(x_0_7) mod n) add x_0_5) add x_0_7)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 - 6 - 3 + 1 + 6 + 12 + 19 + 27 + 36 + 46 + 57 + 69 + 82 + 96 + 111 + 127 + 144 + 162 + 181 + 201 + 222 + 244 + 267 + 291 + 316 + 342 + 369 + 397 + 426", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 49 + 196 + 441 + 784 + 1225 + 1764 + 2401 + 3136 + 3969 + 4900 + 5929 + 7056 + 8281 + 9604 + 1 1025 + 1 2544 + 1 4161 + 1 5876 + 1 7689 + 1 9600 + 2 1609 + 2 3716 + 2 5921 + 2 8224 + 3 625 + 3 3124 + 3 5721 + 3 8416", "x2": "sqr abs mul abs n INT- 7", "tree": "(abs((abs(n) mul -7)))**2", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 10 + 5 + 9 + 2 - 2 + 1 + 22 + 11 + 22 + 33 + 5 + 36 + 9 + 22 + 43 + 35 + 81 + 53 + 101 + 100 + 87 + 183 + 113 + 243 + 254 + 266 + 476 + 356 + 663 + 671 + 778 + 1224 + 1044 + 1799", "x2": "add abs sub x_0_4 sub x_0_3 sub INT+ 8 x_0_2 mul relu x_0_7 sign idiv n INT+ 2", "tree": "(abs((x_0_4 sub (x_0_3 sub (8 sub x_0_2)))) add (relu(x_0_7) mul sign((n idiv 2))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 1 - 1 + 7 - 10 - 11 - 11 - 15 - 10 - 11 - 15 - 15 - 10 - 11 - 13 - 17 - 20 - 21 - 23 - 27 - 30 - 31 - 33 - 37 - 40 - 41 - 43 - 47 - 50 - 51 - 53 - 57", "x2": "add INT- 1 0 mod x_0_4 add INT+ 5 x_0_1", "tree": "(-10 add (x_0_4 mod (5 add x_0_1)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 7 + 3 - 10 - 8 + 6 + 13 + 63 + 89 + 89 + 89 + 157 + 321 + 1150 + 2406 + 3751 + 5193 + 7898 + 1 3804 + 3 5922 + 8 4459 + 16 3808 + 27 8932 + 46 2120 + 79 7408 + 170 4843 + 391 8978 + 837 2787 + 1623 4230 + 2972 4311 + 5383 5979 + 1 712 1555 + 2 3345 9161 + 5 1156 4936", "x2": "add sub mul n relu x_0_6 relu mod idiv sub x_0_5 idiv INT- 6 n INT- 9 x_0_6 x_0_1", "tree": "(((n mul relu(x_0_6)) sub relu((((x_0_5 sub (-6 idiv n)) idiv -9) mod x_0_6))) add x_0_1)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "idiv add n idiv INT+ 4 INT- 6 INT+ 8", "tree": "((n add (4 idiv -6)) idiv 8)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 - 3 + 5 + 80 + 81 + 80 + 79 + 78 + 78 + 78 + 78 + 77 + 77 + 77 + 77 + 76 + 76 + 76 + 76 + 75 + 75 + 75 + 75 + 74 + 74 + 74 + 74 + 73 + 73 + 73 + 73", "x2": "sub sqr INT- 9 idiv add INT+ 4 mod n x_0_3 sqr INT+ 2", "tree": "((-9)**2 sub ((4 add (n mod x_0_3)) idiv (2)**2))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 6 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0", "x2": "sub n add n mod add relu sub x_0_2 relu INT- 4 INT- 4 INT- 3", "tree": "(n sub (n add ((relu((x_0_2 sub relu(-4))) add -4) mod -3)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 10 - 10 + 1 - 9 - 10 + 8 + 5 + 9 + 9 + 9 - 9 - 9 - 9 + 9 - 9 + 9 - 9 + 9 + 9 - 9 - 9 - 9 + 9 - 9 + 9 + 9 - 9 - 9 + 9 - 9 + 9 + 9 - 9 - 9 + 9 - 9", "x2": "idiv x_0_1 sign idiv add mod x_0_9 mod n INT+ 6 sub x_0_3 relu INT+ 2 relu n", "tree": "(x_0_1 idiv sign((((x_0_9 mod (n mod 6)) add (x_0_3 sub relu(2))) idiv relu(n))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 1 - 2 + 9 - 4 + 7 - 9 + 4 + 8 + 7 - 3 + 0 + 28 + 0 + 0 + 0 + 343 + 0 + 0 + 0 + 0 + 0 + 0 + 28 8463 + 0 + 0 + 0 + 0 + 0 + 0 + 28 8463 + 0 + 0 + 0 + 0 + 0 + 0 + 28 8463 + 0", "x2": "relu mul x_0_7 sqr sub idiv mod INT- 1 idiv sub n x_0_8 INT- 9 mod add INT- 8 x_0_7 INT+ 4 x_0_11", "tree": "relu((x_0_7 mul ((((-1 mod ((n sub x_0_8) idiv -9)) idiv ((-8 add x_0_7) mod 4)) sub x_0_11))**2))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 5 + 5 + 8 - 20 - 15 - 18 - 32 + 90 + 75 + 99 + 192 - 585 - 525 - 743 - 1536 + 4972 + 4725 + 7058 + 1 5360 - 5 2206 - 5 1975 - 8 1167 - 18 4320 + 65 2575 + 67 5675 + 109 5754 + 258 480 - 946 2338 - 1013 5125 - 1698 4187 - 4128 7680", "x2": "idiv mul x_0_4 n INT- 2", "tree": "((x_0_4 mul n) idiv -2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 - 4 + 2 + 0 + 0 + 16 + 0 + 0 + 128 + 0 + 0 + 1024 + 0 + 0 + 8192 + 0 + 0 + 6 5536 + 0 + 0 + 52 4288 + 0 + 0 + 419 4304 + 0 + 0 + 3355 4432 + 0 + 0 + 2 6843 5456 + 0", "x2": "abs mul relu x_0_3 INT- 8", "tree": "abs((relu(x_0_3) mul -8))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 9 - 3 + 4 - 5 + 8 + 1 + 9 - 39 + 81 - 69 + 180 - 633 + 1220 - 1725 + 3920 - 1 3149 + 2 4660 - 4 7439 + 9 9140 - 33 4819 + 61 7000 - 146 4717 + 289 7220 - 1009 2213 + 1832 2220 - 5075 2495 + 9654 7160 - 3 5061 459 + 6 2789 1540 - 19 6010 1909 + 36 2085 3500 - 137 6594 7637 + 243 4127 4320 - 836 9201 5983 + 1510 7114 6820", "x2": "sub x_0_2 mul n sub relu x_0_7 x_0_4", "tree": "(x_0_2 sub (n mul (relu(x_0_7) sub x_0_4)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "idiv sqr n relu sign mul INT+ 6 abs n", "tree": "((n)**2 idiv relu(sign((6 mul abs(n)))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 6 - 54 - 486 - 4374 - 3 9366 - 35 4294 - 318 8646 - 2869 7814 - 2 5828 326 - 23 2452 2934 - 209 2070 6406 - 1882 8635 7654 - 1 6945 7721 8886 - 15 2511 9496 9974 - 137 2607 5472 9766 - 1235 3467 9256 7894 - 1 1118 1211 3311 1046 - 10 63 901 9799 9414 - 90 567 8117 8199 4726 - 810 5110 3060 3795 2534 - 7294 5992 7543 4157 2806 - 6 5651 3934 7890 7415 5254 - 59 862 5413 1016 6739 7286 - 531 7762 8717 9150 657 5574 - 4785 9865 8461 2350 5918 166 - 4 3073 8792 6151 1155 3262 1494 - 38 7664 9133 5360 397 9359 3446 - 348 8984 2201 8240 3581 4234 1014 - 3140 857 9816 4163 2232 8106 9126", "x2": "mul idiv add INT- 3 INT- 6 sign INT- 1 x_0_1", "tree": "(((-3 add -6) idiv sign(-1)) mul x_0_1)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 8 + 8 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730 + 785 + 842 + 901", "x2": "add mul sign add x_0_1 x_0_2 sign sign x_0_1 sqr n", "tree": "((sign((x_0_1 add x_0_2)) mul sign(sign(x_0_1))) add (n)**2)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 + 10 - 5 + 1 + 9 + 6 + 20 - 4 + 40 - 20 + 4 + 36 + 24 + 80 - 16 + 160 - 80 + 16 + 144 + 96 + 320 - 64 + 640 - 320 + 64 + 576 + 384 + 1280 - 256 + 2560 - 1280 + 256 + 2304 + 1536", "x2": "mul x_0_7 sqr INT+ 2", "tree": "(x_0_7 mul (2)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 1 - 1 + 2 + 16 + 52 + 489 + 959 + 1689 + 6199 + 9547 + 1 4061 + 3 5520 + 4 8998 + 6 5933 + 13 5721 + 17 5560 + 22 3500 + 40 4008 + 50 862 + 61 4046 + 101 4420 + 122 102 + 145 5420 + 225 551 + 264 6071 + 309 1357 + 454 4105 + 524 8999", "x2": "idiv sub sqr mul sub INT+ 7 add relu sqr n n idiv n abs INT- 3 n INT+ 1 0", "tree": "(((((7 sub (relu((n)**2) add n)) mul (n idiv abs(-3))))**2 sub n) idiv 10)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683 + 2 1952", "x2": "mul n mul mod n sqr relu add n sub n INT- 1 n", "tree": "(n mul ((n mod (relu((n add (n sub -1))))**2) mul n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 6 - 27 - 72 - 54 + 243 + 648 + 486 - 2187 - 5832 - 4374 + 1 9683 + 5 2488 + 3 9366 - 17 7147 - 47 2392 - 35 4294 + 159 4323 + 425 1528 + 318 8646 - 1434 8907 - 3826 3752 - 2869 7814 + 1 2914 163 + 3 4437 3768 + 2 5828 326 - 11 6226 1467 - 30 9936 3912 - 23 2452 2934 + 104 6035 3203", "x2": "mul x_0_3 INT- 9", "tree": "(x_0_3 mul -9)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 2 + 2 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12 + 14 + 13 + 15 + 14 + 16 + 15 + 17", "x2": "sub n relu mod INT- 3 mod x_0_1 n", "tree": "(n sub relu((-3 mod (x_0_1 mod n))))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 4 + 8 - 1 - 4 - 5 - 6 + 10 + 7 + 4 + 6 + 13 + 11 + 9 + 5 + 5 + 6 + 2 + 9 + 7 + 4 + 4 + 3 + 0 + 1 + 6 + 5 + 5 + 4 + 2 + 4 + 3 + 3 + 4 + 2", "x2": "abs add sign mod add n sub x_0_2 INT+ 7 n sub x_0_7 abs x_0_4", "tree": "abs((sign(((n add (x_0_2 sub 7)) mod n)) add (x_0_7 sub abs(x_0_4))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 + 5 + 15 + 45 + 135 + 405 + 1215 + 3645 + 1 935 + 3 2805 + 9 8415 + 29 5245 + 88 5735 + 265 7205 + 797 1615 + 2391 4845 + 7174 4535 + 2 1523 3605 + 6 4570 815 + 19 3710 2445 + 58 1130 7335 + 174 3392 2005 + 523 176 6015 + 1569 529 8045 + 4707 1589 4135 + 1 4121 4768 2405 + 4 2364 4304 7215 + 12 7093 2914 1645 + 38 1279 8742 4935", "x2": "add x_0_1 add abs x_0_1 abs relu abs x_0_1", "tree": "(x_0_1 add (abs(x_0_1) add abs(relu(abs(x_0_1)))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 22 - 15 - 1 + 6 + 22 - 19 - 1 + 2 + 22 - 23 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10", "x2": "add abs INT+ 1 0 mul abs add x_0_1 n sign mul sub INT+ 1 0 relu x_0_1 sign x_0_1", "tree": "(abs(10) add (abs((x_0_1 add n)) mul sign(((10 sub relu(x_0_1)) mul sign(x_0_1)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 9 - 2 + 8 + 4 3264 + 2 3104 + 1 0 + 1936 + 17 8084 + 13 5424 + 9 8596 + 6 7600 + 4 2436 + 2 3104 + 9604 + 1936 + 17 8084 + 13 5424 + 9 8596 + 6 7600 + 4 2436 + 2 3104 + 9604 + 1936 + 17 8084 + 13 5424 + 9 8596 + 6 7600 + 4 2436 + 2 3104 + 9604 + 1936", "x2": "abs sqr sub mul INT- 9 sub INT- 5 mul INT- 6 mod n INT- 8 sign x_0_4", "tree": "abs((((-9 mul (-5 sub (-6 mul (n mod -8)))) sub sign(x_0_4)))**2)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 5 - 6 + 0 - 10 - 12 + 0 - 20 - 24 + 0 - 40 - 48 + 0 - 80 - 96 + 0 - 160 - 192 + 0 - 320 - 384 + 0 - 640 - 768 + 0 - 1280 - 1536 + 0 - 2560 - 3072 + 0 - 5120", "x2": "sub add x_0_3 x_0_3 relu x_0_3", "tree": "((x_0_3 add x_0_3) sub relu(x_0_3))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 + 34 + 197 + 1175 + 7043 + 4 2251 + 25 3499 + 152 987 + 912 5915 + 5475 5483 + 3 2853 2891 + 19 7119 7339 + 118 2718 4027 + 709 6310 4155 + 4257 7862 4923 + 2 5546 7174 9531 + 15 3280 3049 7179 + 91 9681 8298 3067 + 551 8090 9789 8395 + 3310 8545 8739 363 + 1 9865 1275 2434 2171 + 11 9190 7651 4605 3019 + 71 5144 5908 7631 8107 + 429 867 5452 5790 8635 + 2574 5205 2715 4745 1803 + 1 5447 1231 6292 8471 811 + 9 2682 7389 7757 826 4859 + 55 6096 4338 6542 4958 9147 + 333 6578 6031 9254 9753 4875", "x2": "add abs mul INT- 6 x_0_1 add INT- 8 relu sign idiv x_0_1 n", "tree": "(abs((-6 mul x_0_1)) add (-8 add relu(sign((x_0_1 idiv n)))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 1 - 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv sub mod sub x_0_1 n INT- 3 mod n n sub sqr n relu INT- 7", "tree": "((((x_0_1 sub n) mod -3) sub (n mod n)) idiv ((n)**2 sub relu(-7)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 10 + 3 + 1 + 10 + 3 - 8 + 1 - 6 - 19 - 4 - 10 - 31 - 16 - 13 - 36 - 15 - 9 - 46 - 26 - 3 - 42 - 25 + 3 - 56 - 43 + 16 - 44 - 51 + 15 - 62 - 78 + 39 - 35 - 102 + 23", "x2": "sub x_0_6 add n x_0_8", "tree": "(x_0_6 sub (n add x_0_8))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 5 - 7 - 5 - 60 - 48 + 24 + 12 + 342 + 270 - 162 - 90 - 2070 - 1638 + 954 + 522 + 1 2402 + 9810 - 5742 - 3150 - 7 4430 - 5 8878 + 3 4435 + 1 8883 + 44 6562 + 35 3250 - 20 6628 - 11 3316 - 267 9389 - 211 9517 + 123 9751 + 67 9879", "x2": "sub mul idiv INT+ 6 add sqr n idiv x_0_2 n sign x_0_2 mul INT+ 6 sub x_0_4 INT- 3", "tree": "(((6 idiv ((n)**2 add (x_0_2 idiv n))) mul sign(x_0_2)) sub (6 mul (x_0_4 sub -3)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 8 + 4 - 6 - 1 + 5 - 4 - 9 + 8 + 15 + 9 + 11 + 9 + 9 + 9 + 13 + 13 + 25 + 35 + 25 + 28 + 27 + 29 + 30 + 47 + 55 + 58 + 72 + 59 + 65 + 66 + 83 + 93 + 114 + 134 + 125 + 146", "x2": "add relu INT+ 9 relu add add x_0_9 x_0_7 mod mod sign idiv n INT- 8 n INT- 3", "tree": "(relu(9) add relu(((x_0_9 add x_0_7) add ((sign((n idiv -8)) mod n) mod -3))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 9 + 0 + 8 - 7 + 1 + 9 + 82 + 114 + 270 + 363 + 683 + 902 + 1577 + 2117 + 3530 + 4799 + 7753 + 1 648 + 1 6814 + 2 3320 + 3 6235 + 5 705 + 7 7851 + 10 9794 + 16 7032 + 23 7137 + 35 8174 + 51 1356 + 76 7959 + 110 1530 + 164 6742 + 237 1187 + 353 1783 + 510 1779", "x2": "add add x_0_2 add add INT+ 6 x_0_2 x_0_7 mul n n", "tree": "((x_0_2 add ((6 add x_0_2) add x_0_7)) add (n mul n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 4 - 5 + 1 - 6 + 6 - 1 + 11 + 4 + 18 + 12 + 26 + 23 + 36 + 34 + 49 + 48 + 66 + 63 + 82 + 80 + 103 + 102 + 124 + 125 + 148 + 150 + 173 + 176 + 202 + 203 + 233 + 233 + 264", "x2": "sub add n add x_0_2 sign INT- 9 mod add idiv x_0_5 add abs x_0_6 INT+ 2 x_0_1 INT+ 4", "tree": "((n add (x_0_2 add sign(-9))) sub (((x_0_5 idiv (abs(x_0_6) add 2)) add x_0_1) mod 4))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 1 - 4 - 4 - 8 - 5 + 7 + 4 + 748 + 360 + 216 + 284 + 100 + 356 + 2072 + 1716 + 234 6976 + 57 4516 + 22 2732 + 37 2048 + 5 9484 + 57 4508 + 1757 2808 + 1212 4268 + 22 336 7355 1956 + 1 3203 9863 5336 + 1984 8807 340 + 5537 6517 5652 + 141 6766 4720 + 1 3203 8025 20 + 1235 2188 2266 2332 + 587 9946 9895 4336 + 1941 9310 8078 2654 4929 3184 332 + 6 9738 1022 5158 3960 4923 492 + 1575 9005 6326 3517 1512 5432 + 1 2266 2347 9223 4761 4649 8812", "x2": "mul INT+ 4 add sub idiv n INT- 3 relu INT+ 6 sqr sub add x_0_8 n INT- 1", "tree": "(4 mul (((n idiv -3) sub relu(6)) add (((x_0_8 add n) sub -1))**2))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 84 - 336 - 756 - 1344 - 2100 - 3024 - 4116 - 5376 - 6804 - 8400 - 1 164 - 1 2096 - 1 4196 - 1 6464 - 1 8900 - 2 1504 - 2 4276 - 2 7216 - 3 324 - 3 3600 - 3 7044 - 4 656 - 4 4436 - 4 8384 - 5 2500 - 5 6784 - 6 1236 - 6 5856", "x2": "mul INT- 6 mul sqr n relu mul INT- 2 INT- 7", "tree": "(-6 mul ((n)**2 mul relu((-2 mul -7))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 8 + 3 - 6 + 9 - 1 - 8 - 4 - 11 - 6 - 11 - 6 - 7 - 9 - 8 - 9 - 11 - 9 - 10 - 12 - 11 - 12 - 14 - 12 - 13 - 15 - 14 - 15 - 17 - 15 - 16 - 18 - 17 - 18", "x2": "sub idiv n sub idiv x_0_6 sub mul n INT+ 2 mod n x_0_5 sign n mod mod n x_0_2 INT+ 3", "tree": "((n idiv ((x_0_6 idiv ((n mul 2) sub (n mod x_0_5))) sub sign(n))) sub ((n mod x_0_2) mod 3))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 3 - 10 + 3 + 10 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mul sign sub relu mod n n n idiv INT+ 4 x_0_4", "tree": "sign((sign((relu((n mod n)) sub n)) mul (4 idiv x_0_4)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 10 + 1 - 1 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104 + 120 + 1 + 104", "x2": "mod x_0_3 mul n sub abs mul x_0_1 idiv sqr n sqr x_0_2 idiv x_0_2 INT- 8", "tree": "(x_0_3 mod (n mul (abs((x_0_1 mul ((n)**2 idiv (x_0_2)**2))) sub (x_0_2 idiv -8))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 7 - 10 + 10 - 6 - 7 + 8 + 4 + 9 - 3 + 114 + 953 + 1611 + 1881 + 1303 + 1737 + 2249 + 1265 + 3178 + 1177 + 4 9363 + 45 3629 + 83 9332 + 106 8409 + 80 3952 + 116 317 + 162 1530 + 98 1641 + 264 7275 + 104 9885 + 4704 2940 + 4 6088 7065 + 9 731 7893 + 12 2653 3533 + 9 7840 9585 + 14 9448 8297 + 22 690 2331 + 14 963 6477", "x2": "add sign INT+ 9 add sub abs mul x_0_10 sub INT- 1 add sqr n INT- 9 relu n n", "tree": "(sign(9) add ((abs((x_0_10 mul (-1 sub ((n)**2 add -9)))) sub relu(n)) add n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 4 + 4", "x2": "add idiv mod mul n sign n add abs add INT- 8 INT+ 3 n INT+ 9 sub INT+ 7 INT+ 6", "tree": "((((n mul sign(n)) mod (abs((-8 add 3)) add n)) idiv 9) add (7 sub 6))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 8 + 4 - 7 + 4 + 6 - 6 + 8 + 3 + 1 + 18 + 7 + 19 + 9 + 8 + 21 + 8 + 14 + 17 + 1 + 13 + 2 + 13 + 15 + 3 + 17 + 12 + 10 + 27 + 16 + 28 + 18 + 17 + 30 + 17 + 23 + 26 + 10", "x2": "sub relu idiv INT- 2 sign mod sub n idiv n INT+ 1 0 mul x_0_3 n sub x_0_9 n", "tree": "(relu((-2 idiv sign(((n sub (n idiv 10)) mod (x_0_3 mul n))))) sub (x_0_9 sub n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 2 + 2 - 8 + 9 + 8 + 8 + 7 - 8 - 1 - 6 - 3 + 104 + 56 + 60 - 256 + 306 + 288 + 304 + 280 - 336 - 44 - 276 - 144 + 5200 + 2912 + 3240 - 1 4336 + 1 7748 + 1 7280 + 1 8848 + 1 7920 - 2 2176 - 2992 - 1 9320 - 1 368 + 38 4800 + 22 1312 + 25 2720 - 114 6880", "x2": "mul x_0_12 abs add n n", "tree": "(x_0_12 mul abs((n add n)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 6 - 4 - 10 - 8 - 8 + 7 - 9 + 5 - 5 - 1 + 0 + 12 + 5 + 8 + 9 + 10 + 8 + 14 + 4 + 5 + 9 + 7 + 22 + 1 + 0 + 2 + 1 + 0 + 7 + 21 + 9 + 26 + 8 + 7 + 23 + 7 + 26 + 7", "x2": "abs mod sub x_0_11 add mul abs n sign x_0_11 add sub x_0_1 INT- 7 mul n INT+ 5 n", "tree": "abs(((x_0_11 sub ((abs(n) mul sign(x_0_11)) add ((x_0_1 sub -7) add (n mul 5)))) mod n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 6 - 5 - 7 + 5 + 4 + 10 + 15 + 12 + 30 + 45 + 36 + 90 + 135 + 108 + 9 + 59 + 324 + 27 + 177 + 54 + 81 + 20 + 162 + 243 + 60 + 486 + 729 + 180 + 557 + 801 + 540 + 467", "x2": "mod mul INT+ 3 x_0_3 relu add sqr n x_0_4", "tree": "((3 mul x_0_3) mod relu(((n)**2 add x_0_4)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 - 6 + 8 + 6 - 3 - 9 + 7 + 11 + 1 + 14 + 13 + 4 - 2 + 12 + 18 + 5 + 19 + 19 + 11 + 5 + 16 + 24 + 9 + 23 + 24 + 17 + 9 + 19 + 29 + 12 + 26 + 28 + 22 + 13", "x2": "add x_0_7 mod idiv sub idiv n INT- 4 n n add idiv mod idiv sign INT- 3 x_0_7 x_0_6 INT- 6 INT+ 9", "tree": "(x_0_7 add ((((n idiv -4) sub n) idiv n) mod ((((sign(-3) idiv x_0_7) mod x_0_6) idiv -6) add 9)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 7 - 4 + 3 - 6 - 6 - 4 - 6 - 5 - 2 - 3 - 1 + 3 + 3 + 6 - 4 - 4 - 1 + 7 + 8 + 12 + 0 + 1 + 5 - 7 - 6 - 2 + 13 + 15 + 20 + 6 + 8", "x2": "add mod x_0_3 n INT- 7", "tree": "((x_0_3 mod n) add -7)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 8 + 8 + 14 + 21 + 14 + 49 + 91 + 35 + 273 + 560 + 161 + 1820 + 3822 + 1022 + 1 2628 + 2 6635 + 7028 + 8 8263 + 18 6305 + 4 9049 + 61 7687 + 130 3974 + 34 3175 + 432 3634 + 912 7636 + 240 2036 + 3026 5242 + 6389 3249 + 1681 4042 + 2 1185 6477", "x2": "mul INT- 7 sub n x_0_3", "tree": "(-7 mul (n sub x_0_3))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 3 - 6 + 7 - 4 - 2 + 3 + 10 - 9 + 9 + 3 + 0 + 7 + 0 + 0 + 3 + 10 + 0 + 9 + 3 + 0 + 7 + 0 + 0 + 3 + 10 + 0 + 9 + 3 + 0 + 7 + 0 + 0 + 3 + 10 + 0 + 9", "x2": "relu x_0_9", "tree": "relu(x_0_9)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 6 - 110 - 477 - 2104 - 1 765 - 6 4884 - 45 4531 - 363 6640 - 3273 201 - 3 2730 2500 - 36 32 8039 - 432 393 7056 - 5616 5118 2365 - 7 8631 1655 3796 - 117 9467 4830 7675 - 1887 1479 7292 3584 - 3 2081 5155 3970 1761 - 57 7467 2797 1463 2580 - 1097 1878 3145 7801 9951 - 2 1943 7566 2915 6040 0 - 46 818 8892 1227 6840 1029 - 1013 8015 5626 7009 482 3716 - 2 3317 4357 9414 1208 1094 6595 - 55 9618 4590 5938 8994 6271 9456 - 1399 461 4764 8472 4865 6798 7625 - 3 6375 1998 3886 284 6507 6767 9524 - 98 2130 3956 4922 7685 5707 2734 8471 - 2749 9651 781 7837 5195 9803 6575 8560 - 7 9748 9881 2671 7288 683 4306 699 9661", "x2": "mul sub x_0_1 sqr INT- 7 n", "tree": "((x_0_1 sub (-7)**2) mul n)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 9 + 1 + 7 - 1 + 4 + 3 - 12 + 1 + 6 - 3 + 1 + 3 - 13 - 1 + 3 - 3 + 0 + 1 - 16 - 1 + 2 - 5 - 3 + 1 - 17 - 3 - 1 - 5 - 4 - 1 - 20 - 3 - 2 - 7", "x2": "sub x_0_6 mod abs mod n abs INT- 4 n", "tree": "(x_0_6 sub (abs((n mod abs(-4))) mod n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 8 - 7 + 71 - 1 + 496 - 1 + 495 - 1 + 494 - 1 + 493 - 1 + 492 - 1 + 491 - 1 + 490 - 1 + 489 - 1 + 488 - 1 + 487 - 1 + 486 - 1 + 485 - 1 + 484 - 1", "x2": "sub relu mul x_0_2 abs x_0_3 sign relu n", "tree": "(relu((x_0_2 mul abs(x_0_3))) sub sign(relu(n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 9 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "idiv sign INT- 1 sign x_0_2", "tree": "(sign(-1) idiv sign(x_0_2))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 + 3 - 4 - 2 + 7 + 9 + 5 + 1 + 1 + 3 + 7 + 12 + 10 + 6 + 4 + 8 + 15 + 17 + 18 + 14 + 14 + 19 + 25 + 33 + 31 + 32 + 33 + 39 + 52 + 56 + 65 + 64 + 71 + 85", "x2": "relu abs add x_0_7 x_0_5", "tree": "relu(abs((x_0_7 add x_0_5)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 10 + 6 - 10 - 4 + 5 - 6 - 7 + 8 - 9 - 10 + 11 - 12 - 13 + 14 - 15 - 16 + 17 - 18 - 19 + 20 - 21 - 22 + 23 - 24 - 25 + 26 - 27 - 28 + 29 - 30 - 31", "x2": "mul n sign x_0_3", "tree": "(n mul sign(x_0_3))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 4 + 10 + 8 - 8 - 10 + 8 - 10 + 10 - 275 - 198 - 210 - 293 + 2240 + 3468 - 384 + 4165 - 18 + 46 + 154 + 135 + 14 + 5 - 23 + 11 + 823 + 3856 - 19 + 206 + 1607 - 2976 - 821 + 3 0 - 24 + 68 + 2 2585 + 2291", "x2": "idiv mul add n n mul INT- 5 add n sub n mod x_0_9 sqr n abs x_0_8", "tree": "(((n add n) mul (-5 mul (n add (n sub (x_0_9 mod (n)**2))))) idiv abs(x_0_8))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 2 + 21 + 6 + 63 + 18 + 189 + 54 + 567 + 162 + 1701 + 486 + 5103 + 1458 + 1 5309 + 4374 + 4 5927 + 1 3122 + 13 7781 + 3 9366 + 41 3343 + 11 8098 + 124 29 + 35 4294 + 372 87 + 106 2882 + 1116 261 + 318 8646 + 3348 783 + 956 5938", "x2": "add mul x_0_2 INT+ 2 x_0_2", "tree": "((x_0_2 mul 2) add x_0_2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 - 7 - 6 + 5 - 4 - 9 - 7 - 11 + 16 - 25 - 14 - 21 - 16 + 12 - 9 - 19 - 14 - 21 + 30 - 45 - 24 - 35 - 26 + 19 - 14 - 29 - 21 - 31 + 44 - 65 - 34 - 49 - 36", "x2": "idiv sqr n x_0_5", "tree": "((n)**2 idiv x_0_5)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 10 + 9 + 8 + 55 + 114 + 126 + 136 + 576 + 1230 + 1485 + 1740 + 7605 + 1 7346 + 2 2410 + 2 7984 + 12 9438 + 31 2390 + 42 5961 + 55 9860 + 271 8387 + 687 2778 + 979 7310 + 1343 6856 + 6795 9900 + 1 7869 2462 + 2 6452 7613 + 3 7623 2220 + 19 7083 7361 + 53 6077 4130 + 82 35 6282 + 120 3943 1328", "x2": "abs mul n sub INT+ 9 mul x_0_4 idiv INT- 3 relu INT+ 1 0", "tree": "abs((n mul (9 sub (x_0_4 mul (-3 idiv relu(10))))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 6 - 2 - 7 - 8 + 7 + 3 - 4 + 969 + 837 + 1679 + 2352 - 1 899 - 9182 - 1 9969 + 17 9379 + 38 4569 + 63 6421 + 111 5667 + 53 3206 - 401 571 - 454 9242 + 6226 4123 + 1 9116 1105 + 4 6281 8385 + 8 1100 7309 - 12 5843 7509 - 22 3762 3884 - 93 9228 7091 + 288 4489 1102 + 2097 9809 2779 + 5141 3477 8607 + 1 1310 2463 8569 + 4185 5707 6881 - 4 5464 4190 5269 - 6 4891 6552 1886", "x2": "sub add mul sub abs mul sub n x_0_7 n x_0_4 n INT+ 9 relu INT- 1 0", "tree": "((((abs(((n sub x_0_7) mul n)) sub x_0_4) mul n) add 9) sub relu(-10))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 9 + 9 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr sub idiv sqr sign x_0_1 x_0_1 n", "tree": "((((sign(x_0_1))**2 idiv x_0_1) sub n))**2", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 0 + 20 + 0 + 40 + 0 + 80 + 0 + 160 + 0 + 320 + 0 + 640 + 0 + 1280 + 0 + 2560 + 0 + 5120 + 0 + 1 240 + 0 + 2 480 + 0 + 4 960 + 0 + 8 1920 + 0 + 16 3840", "x2": "add abs x_0_2 x_0_2", "tree": "(abs(x_0_2) add x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 1 + 4 + 18 + 62 + 196 + 600 + 1814 + 5458 + 1 6392 + 4 9196 + 14 7610 + 44 2854 + 132 8588 + 398 5792 + 1195 7406 + 3587 2250 + 1 761 6784 + 3 2285 388 + 9 6855 1202 + 29 565 3646 + 87 1696 980 + 261 5088 2984 + 784 5264 8998 + 2353 5794 7042 + 7060 7384 1176 + 2 1182 2152 3580 + 6 3546 6457 794 + 19 639 9371 2438", "x2": "relu sub mul sub mod add INT+ 1 n INT+ 1 INT- 3 relu x_0_1 mul INT- 2 n", "tree": "relu((((((1 add n) mod 1) sub -3) mul relu(x_0_1)) sub (-2 mul n)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 6 + 0 - 9 - 3 + 3 - 6 - 7 + 8 - 9 - 10 + 11 - 12 - 13 + 14 - 15 - 16 + 17 - 18 - 19 + 20 - 21 - 22 + 23 - 24 - 25 + 26 - 27 - 28 + 29 - 30 - 31 + 32", "x2": "mul sign INT- 4 mul sign x_0_3 sub sqr sign x_0_6 n", "tree": "(sign(-4) mul (sign(x_0_3) mul ((sign(x_0_6))**2 sub n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 7 - 4 - 1 - 1 - 15 - 14 - 16 - 32 - 33 - 38 - 56 - 59 - 66 - 86 - 92 - 101 - 123 - 131 - 142 - 167 - 177 - 190 - 217 - 229 - 245 - 274 - 288 - 306 - 337", "x2": "sub sub sub sub add x_0_3 idiv n INT- 5 relu n INT- 6 add INT+ 3 n relu x_0_1", "tree": "(((((x_0_3 add (n idiv -5)) sub relu(n)) sub -6) sub (3 add n)) sub relu(x_0_1))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 2 + 9 - 12 + 108 - 240 + 3240 - 1 80 + 18 1440 - 72 5760 + 1632 9600 - 7983 3600 + 21 5550 7200 - 124 5404 1600 + 3923 231 400 - 2 6153 4873 6000 + 94 1525 5449 6000 - 711 3748 5619 2000 + 2 8810 6816 7577 6000 - 24 3290 2008 1766 4000 + 1094 8059 367 9488 0 - 1 218 1884 3434 1888 0 + 50 5800 3274 9992 3456 0 - 517 403 3477 7699 5328 0 + 2 7920 1780 7799 5774 7712 0 - 31 224 2008 6661 9719 6800 0 + 1814 8115 7506 9725 3601 2800 0 - 2 1777 7389 83 6704 3215 3600 0 + 137 1997 5507 5271 2372 2567 6800 0 - 1768 3523 9874 7940 3909 872 3200 0", "x2": "mul sub sqr n n x_0_2", "tree": "(((n)**2 sub n) mul x_0_2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 2 - 7 + 4 + 0 + 12 + 0 + 24 + 0 + 48 + 0 + 96 + 0 + 192 + 0 + 384 + 0 + 768 + 0 + 1536 + 0 + 3072 + 0 + 6144 + 0 + 1 2288 + 0 + 2 4576 + 0 + 4 9152", "x2": "idiv mul x_0_2 abs sub mod x_0_3 n INT+ 2 sign sqr x_0_1", "tree": "((x_0_2 mul abs(((x_0_3 mod n) sub 2))) idiv sign((x_0_1)**2))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 5 - 6 + 2 - 6 - 7 - 8 - 3 + 8 + 0 + 0 + 10 - 12 - 91 - 120 + 0 + 80 + 0 + 0 + 0 - 60 - 7735 - 600 + 0 + 0 + 0 + 0 + 0 - 300 - 3 8675 - 3000 + 0 + 0 + 0 + 0", "x2": "mul relu add relu add x_0_3 INT+ 5 x_0_5 x_0_8", "tree": "(relu((relu((x_0_3 add 5)) add x_0_5)) mul x_0_8)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 7 + 10 - 8 - 6 - 12 - 18 - 12 + 12 + 24 + 36 + 24 - 24 + 48 + 72 + 48 - 48 - 96 + 144 + 96 - 96 + 192 - 288 + 192 - 192 - 384 - 576 - 384 - 384 + 768 + 1152 + 768", "x2": "mul INT- 6 idiv mul sign x_0_5 x_0_4 INT- 3", "tree": "(-6 mul ((sign(x_0_5) mul x_0_4) idiv -3))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 - 8 - 8 + 9 + 3 - 8 - 24 + 3 + 14 - 39 - 44 + 29 - 54 - 59 + 1178 - 69 + 4 1156 + 2543 + 185 1936 + 12 7061 - 94 + 762 3561 + 386 9406 - 109 - 114 + 1385 511 - 124 - 129 + 4 7980 7326 - 139 + 503 7976 9086 + 19 2522 2131 + 5 7936 7344 4736", "x2": "sub sign INT- 1 0 add INT- 1 add mod mul INT- 5 sub INT+ 3 n mul add INT+ 9 x_0_6 x_0_2 INT+ 4", "tree": "(sign(-10) sub (-1 add (((-5 mul (3 sub n)) mod ((9 add x_0_6) mul x_0_2)) add 4)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 7 - 8 - 1 + 10 + 1 - 2 - 8 + 110 + 12 - 6 + 24 + 36 + 141 - 1387 + 110 - 1282 - 193 - 1711 - 1975 + 1 6476 - 4777 + 3 3267 - 3535 + 5 5332 + 2 444 - 16 816 + 9 9036 - 59 8049 + 17 8273 - 132 885 - 3 2152 + 79 182 - 148 421 + 866 3870", "x2": "add sub add sub x_0_7 mul x_0_6 sub INT+ 5 INT- 8 INT+ 1 0 INT- 5 x_0_2", "tree": "((((x_0_7 sub (x_0_6 mul (5 sub -8))) add 10) sub -5) add x_0_2)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 9 - 9 + 36 - 45 - 54 + 252 - 360 - 486 + 2520 - 3960 - 5832 + 3 2760 - 5 5440 - 8 7480 + 52 4160 - 94 2480 - 157 4640 + 995 9040 - 1884 9600 - 3306 7440 + 2 1909 8880 - 4 3354 800 - 7 9361 8560 + 54 7747 2000 - 112 7206 800 - 214 2770 1120 + 1533 6921 6000 - 3268 8976 3200 - 6428 3103 3600", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 9 + 7 - 9 - 6 + 1 - 3 - 9 - 170 - 162 - 228 - 220 - 252 - 330 - 322 - 360 - 400 - 442 - 486 - 532 - 580 - 630 - 682 - 736 - 792 - 850 - 910 - 972 - 1036 - 1102 - 1170 - 1240 - 1312 - 1386 - 1462", "x2": "mul sub n sign idiv idiv n x_0_8 INT- 3 sub INT- 8 n", "tree": "((n sub sign(((n idiv x_0_8) idiv -3))) mul (-8 sub n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 19 + 84 + 259 + 628 + 1299 + 2404 + 4099 + 6564 + 1 3 + 1 4644 + 2 739 + 2 8564 + 3 8419 + 5 628 + 6 5539 + 8 3524 + 10 4979 + 13 324 + 16 3 + 19 4484 + 23 4259 + 27 9844 + 33 1779 + 39 628 + 45 6979 + 53 1444 + 61 4659", "x2": "add sqr sqr idiv n sub mod mul x_0_1 INT+ 7 x_0_1 idiv sign x_0_1 sub INT- 1 INT- 2 INT+ 3", "tree": "((((n idiv (((x_0_1 mul 7) mod x_0_1) sub (sign(x_0_1) idiv (-1 sub -2)))))**2)**2 add 3)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 8 - 3 - 2 - 9 + 4 + 8 + 10 + 22 + 30 + 38 + 54 + 58 + 59 + 59 + 48 + 30 + 5 - 5 - 5 - 5 - 5 - 5 - 5 + 10 + 36 + 63 + 91 + 120 + 150 + 181 + 198 + 190 + 156", "x2": "mod sub sqr mod n sub n INT+ 1 INT+ 6 sub x_0_1 sub x_0_7 n", "tree": "((((n mod (n sub 1)))**2 sub 6) mod (x_0_1 sub (x_0_7 sub n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 3 - 7 - 2 + 9 + 5 + 22 + 30 + 44 + 70 + 93 + 134 + 184 + 249 + 341 + 457 + 615 + 824 + 1099 + 1467 + 1952 + 2596 + 3450 + 4580 + 6079 + 8064 + 1 694 + 1 4179 + 1 8795 + 2 4911 + 3 3013", "x2": "sub add x_0_3 idiv n add n relu sub x_0_4 x_0_4 sub INT- 7 add abs n x_0_2", "tree": "((x_0_3 add (n idiv (n add relu((x_0_4 sub x_0_4))))) sub (-7 sub (abs(n) add x_0_2)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 2 - 4 + 9 + 0 + 0 + 441 + 0 + 0 + 0 + 4356 + 0 + 0 + 0 + 8100 + 0 + 0 + 0 + 1 2996 + 0 + 0 + 0 + 1 9044 + 0 + 0 + 0 + 2 6244 + 0 + 0 + 0 + 3 4596", "x2": "relu abs sqr mul n mod INT- 6 mod mod INT+ 6 x_0_4 sub n x_0_4", "tree": "relu(abs(((n mul (-6 mod ((6 mod x_0_4) mod (n sub x_0_4)))))**2))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 3 + 0 + 5 + 12 + 21 + 32 + 45 + 60 + 77 + 96 + 117 + 140 + 165 + 192 + 221 + 252 + 285 + 320 + 357 + 396 + 437 + 480 + 525 + 572 + 621 + 672 + 725", "x2": "add sqr n INT- 4", "tree": "((n)**2 add -4)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 7 - 9 + 8 + 4 - 2 + 14 + 17 + 1 + 6 + 13 - 2 - 4 + 13 + 9 + 3 + 19 + 22 + 6 + 11 + 18 + 3 + 1 + 18 + 14 + 8 + 24 + 27 + 11 + 16 + 23 + 8", "x2": "sub n x_0_5", "tree": "(n sub x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 8 - 9 - 1 - 35 - 32 + 36 - 188 - 151 + 91 - 1205 - 924 + 157 - 8252 - 6257 + 241 - 5 7491 - 4 3492 + 343 - 40 2056 - 30 4023 + 463 - 281 3885 - 212 7608 + 601 - 1969 6544 - 1489 2553 + 757 - 1 3787 4995 - 1 424 7000 + 931", "x2": "sub sqr n sub sub relu relu mul INT- 7 x_0_3 n sign abs n", "tree": "((n)**2 sub ((relu(relu((-7 mul x_0_3))) sub n) sub sign(abs(n))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 7 + 7 + 6 - 2 + 10 - 3 + 3 - 8 + 8 - 20 - 1 + 14 - 7 + 24 - 19 + 1 + 32 + 14 + 58 - 20 + 25 - 15 + 59 + 63 + 1 + 9 + 46 + 93 - 48 + 4 + 0 + 120 + 18 - 29 - 26", "x2": "idiv add add x_0_9 sub sign INT+ 3 n x_0_4 sign add x_0_4 INT+ 4", "tree": "(((x_0_9 add (sign(3) sub n)) add x_0_4) idiv sign((x_0_4 add 4)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 7 - 1 - 10 + 4 + 4 + 5 - 3 + 10 + 1 - 3 + 2 + 0 + 0 + 3 - 2 + 3 + 6 + 4 + 0 + 1 - 2 - 6 - 4 + 3 + 4 - 1 + 0 + 0 - 3 - 3 + 1 + 7 + 11 + 5 - 2 + 0", "x2": "sub abs sub relu x_0_1 x_0_10 abs x_0_5", "tree": "(abs((relu(x_0_1) sub x_0_10)) sub abs(x_0_5))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 8 - 2 + 10 + 2 - 5 + 441 + 512 + 162 + 1000 + 242 + 720 + 7 4529 + 10 352 + 3 6450 + 25 6000 + 6 9938 + 23 3280 + 2690 4969 + 4014 800 + 1607 4450 + 1 2390 4000 + 3699 7202 + 1 3436 9280 + 168 1560 5625 + 271 3518 800 + 117 1827 4050 + 971 4073 6000 + 311 1464 6882 + 1209 3235 2000 + 16 1597 9700 5625 + 27 7864 2513 9200 + 12 7612 44 450", "x2": "abs mul sign n mul n mul x_0_6 n", "tree": "abs((sign(n) mul (n mul (x_0_6 mul n))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 1 - 8 + 1 - 2 - 6 - 10 + 1 - 2 - 6 - 10 + 1 - 2 - 6 - 10 + 1 - 2 - 6 - 10 + 1 - 2 - 6 - 10 + 1 - 2 - 6 - 10 + 1 - 2 - 6 - 10 + 1 - 2", "x2": "sub x_0_4 mul relu idiv x_0_6 add n INT- 3 add idiv idiv x_0_2 x_0_1 x_0_1 x_0_3", "tree": "(x_0_4 sub (relu((x_0_6 idiv (n add -3))) mul (((x_0_2 idiv x_0_1) idiv x_0_1) add x_0_3)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 9 - 1 + 6 + 9 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign sub idiv sub x_0_2 x_0_2 x_0_2 x_0_6", "tree": "sign((((x_0_2 sub x_0_2) idiv x_0_2) sub x_0_6))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 4", "x2": "idiv sqr idiv add n sign n abs INT+ 7 sqr INT+ 2", "tree": "((((n add sign(n)) idiv abs(7)))**2 idiv (2)**2)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 7 + 7 + 5 - 4 + 9 - 1 - 1 - 2 - 1 + 2 - 2 - 2 - 3 - 2 + 15 - 2 - 1 - 2 - 2 + 3 - 4 - 2 - 8 - 4 + 12 - 6 - 1 - 4 - 3 + 2 - 4 - 4", "x2": "idiv relu abs n sub x_0_5 sqr sub add INT- 4 mod x_0_4 x_0_2 INT- 7", "tree": "(relu(abs(n)) idiv (x_0_5 sub (((-4 add (x_0_4 mod x_0_2)) sub -7))**2))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 1 + 3 - 2 + 2 - 3 + 2 - 4 + 2 - 5 + 2 - 6 + 2 - 7 + 2 - 8 + 2 - 9 + 2 - 10 + 2 - 11 + 2 - 12 + 2 - 13 + 2 - 14", "x2": "idiv sub mul relu mul INT- 1 0 n n n x_0_1", "tree": "(((relu((-10 mul n)) mul n) sub n) idiv x_0_1)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 10 - 16 - 28 - 52 - 100 - 196 - 388 - 772 - 1540 - 3076 - 6148 - 1 2292 - 2 4580 - 4 9156 - 9 8308 - 19 6612 - 39 3220 - 78 6436 - 157 2868 - 314 5732 - 629 1460 - 1258 2916 - 2516 5828 - 5033 1652 - 1 66 3300 - 2 132 6596 - 4 265 3188 - 8 530 6372", "x2": "add x_0_1 mod sub INT+ 7 INT+ 3 x_0_1", "tree": "(x_0_1 add ((7 sub 3) mod x_0_1))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 0 + 9 + 0 + 25 + 0 + 49 + 0 + 81 + 0 + 121 + 0 + 169 + 0 + 225 + 0 + 289 + 0 + 361 + 0 + 441 + 0 + 529 + 0 + 625 + 0 + 729 + 0", "x2": "relu mul n add mul x_0_1 INT- 2 n", "tree": "relu((n mul ((x_0_1 mul -2) add n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 10 - 6 + 2 + 51 + 7 + 93 + 94 + 182 + 172 + 587 + 489 + 239 + 1494 + 748 + 1104 + 2911 + 2171 + 3019 + 2942 + 3486 + 4796 + 3531 + 3697 + 5247 + 6964 + 6788 + 7666 + 1 61 + 7371 + 8633", "x2": "add mod INT- 3 INT+ 2 sub x_0_3 mul INT- 6 mod x_0_2 sqr n", "tree": "((-3 mod 2) add (x_0_3 sub (-6 mul (x_0_2 mod (n)**2))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 6 + 2 + 5 - 1 + 5 + 5 + 1 + 1 - 10 - 10 + 8 - 7 + 12 + 15 - 9 + 12 - 7 - 14 + 10 - 22 - 3 + 22 - 17 + 34 + 18 - 31 + 29 - 41 - 32 + 41 - 51 + 38 + 54 - 58 + 85 - 20 - 85", "x2": "sub x_0_11 x_0_4", "tree": "(x_0_11 sub x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "- 8 + 1 + 9 - 9 + 7 + 2 + 9 + 2 - 5 + 6 - 1 + 0 - 1 - 3 - 1 - 3 - 1 - 1 + 6 - 1 + 6 + 2 + 6 + 2 + 6 + 6 - 1 + 6 - 1 - 3 - 1 - 3 - 1 - 1 - 1 - 1 + 6", "x2": "idiv INT- 6 add x_0_8 relu idiv sqr INT+ 5 idiv x_0_10 add mod INT- 7 x_0_4 abs x_0_10", "tree": "(-6 idiv (x_0_8 add relu(((5)**2 idiv (x_0_10 idiv ((-7 mod x_0_4) add abs(x_0_10)))))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 7 + 1 + 8 + 6 - 54 + 280 - 8 + 567 + 510 - 6633 + 4 212 - 1469 + 11 1006 + 11 4615 - 169 8192 + 1162 1115 - 47 6118 + 4007 2995 + 4584 5820 - 7 4890 2861 + 56 2461 9462 - 2 5186 6629 + 230 8204 4904 + 286 5363 7275 - 5062 5833 4270 + 4 1003 4758 7555 - 1974 6343 7388 + 19 4119 9976 4003 + 25 7882 7354 7230 - 486 5142 5923 3749 + 4198 7559 2965 6032", "x2": "add mul n add INT- 1 0 mul n x_0_5 n", "tree": "((n mul (-10 add (n mul x_0_5))) add n)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 5 + 10 + 3 - 5 + 8 - 5 + 10 + 3 + 3 + 10 + 0 + 15 + 8 + 16 + 24 + 8 + 17 + 13 + 29 + 30 + 52 + 33 + 21 + 42 + 82 + 106 + 89 + 79 + 52 + 144 + 170 + 155 + 147", "x2": "abs add mod add add sign sub n sub INT- 4 n INT+ 1 add n n add x_0_6 n x_0_5", "tree": "abs(((((sign((n sub (-4 sub n))) add 1) add (n add n)) mod (x_0_6 add n)) add x_0_5))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 1 - 5 - 8 + 9 - 9 + 4 + 7 + 9 + 14 + 16 + 15 + 18 + 38 + 20 + 37 + 61 + 46 + 69 + 96 + 81 + 108 + 156 + 124 + 169 + 242 + 196 + 265 + 366 + 306 + 403 + 553 + 462 + 605 + 829 + 693", "x2": "add sub x_0_3 idiv n n add x_0_9 n", "tree": "((x_0_3 sub (n idiv n)) add (x_0_9 add n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 4 - 10 + 8 - 3 + 5 - 8 - 1 - 4 - 35 - 343 - 3784 - 4 5408 - 59 312 - 826 4363 - 1 2396 5447 - 19 8344 7151 - 337 1860 1535 - 6069 3482 7290 - 11 5317 6171 4729 - 230 6352 3424 9175 - 4843 3399 1864 2366 - 10 6553 4782 186 7692 - 245 729 9985 1899 1472 - 5881 7519 9624 7234 8180 - 14 7043 7999 280 9010 2968 - 382 3138 7974 1234 784 9881 - 1 322 4747 5289 8002 5023 2061 - 28 9029 2930 7883 7717 7224 8536 - 838 1849 4992 3786 414 7656 5181 - 2 5145 5484 9760 7027 7660 9508 7741 - 77 9512 34 2336 7130 7504 2872 8502 - 2494 4384 1094 8893 664 512 4696 3887 - 8 2316 4675 6116 6427 3914 6630 5970 5306 - 279 8759 8970 7583 5392 5124 4206 2213 526 - 9795 6596 3975 5101 3990 4064 9215 2433 6352", "x2": "sub INT- 3 add sub mod mul idiv mod n INT- 8 x_0_1 mul abs INT+ 7 INT- 4 x_0_1 mul n x_0_1 x_0_8", "tree": "(-3 sub ((((((n mod -8) idiv x_0_1) mul (abs(7) mul -4)) mod x_0_1) sub (n mul x_0_1)) add x_0_8))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683 + 2 1952", "x2": "mul n mod mul n n mul sqr n x_0_1", "tree": "(n mul ((n mul n) mod ((n)**2 mul x_0_1)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 5 - 10 - 10 - 40 - 150 - 1140 - 1 910 - 10 8460 - 108 3790 - 1083 6900 - 1 836 7790 - 10 8367 6460 - 108 3676 2910 - 1083 6762 7140 - 1 836 7626 9150 - 10 8367 6268 8940 - 108 3676 2688 6510 - 1083 6762 6886 1860 - 1 836 7626 8861 4990 - 10 8367 6268 8614 5900 - 108 3676 2688 6145 4590 - 1083 6762 6886 1454 1060 - 1 836 7626 8861 4540 5310 - 10 8367 6268 8614 5404 7340 - 108 3676 2688 6145 4046 7150 - 1083 6762 6886 1454 466 4740 - 1 836 7626 8861 4540 4664 110 - 10 8367 6268 8614 5404 6639 3260", "x2": "mul mod mul n n x_0_1 relu INT+ 1 0", "tree": "(((n mul n) mod x_0_1) mul relu(10))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 3 + 1 + 15 - 5 - 75 + 25 + 375 - 125 - 1875 + 625 + 9375 - 3125 - 4 6875 + 1 5625 + 23 4375 - 7 8125 - 117 1875 + 39 625 + 585 9375 - 195 3125 - 2929 6875 + 976 5625 + 1 4648 4375 - 4882 8125 - 7 3242 1875 + 2 4414 625 + 36 6210 9375 - 12 2070 3125 - 183 1054 6875", "x2": "mul x_0_2 INT- 5", "tree": "(x_0_2 mul -5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 6 - 5 + 10 + 1 + 0 + 15 + 6 + 5 + 20 + 11 + 10 + 25 + 16 + 15 + 30 + 21 + 20 + 35 + 26 + 25 + 40 + 31 + 30 + 45 + 36 + 35 + 50 + 41 + 40", "x2": "abs sub INT- 5 x_0_3", "tree": "abs((-5 sub x_0_3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 - 1 + 6 + 10 + 2 + 1 + 6 + 10 + 2 + 1 + 6 + 10 + 2 + 1 + 6 + 10 + 2 + 1 + 6 + 10 + 2 + 1 + 6 + 10 + 2 + 1 + 6 + 10 + 2 + 1 + 6", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 1 - 8 + 9 - 8 + 5 + 6 + 8 - 2 - 5 - 5 - 3 - 6 - 4 - 4 - 5 - 7 - 7 - 8 - 8 - 8 - 9 - 9 - 9 - 10 - 10 - 10 - 11 - 11 - 11 - 12 - 12 - 12 - 13 - 13", "x2": "add sign x_0_8 idiv n add mul sign INT+ 6 INT- 1 INT- 2", "tree": "(sign(x_0_8) add (n idiv ((sign(6) mul -1) add -2)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 - 9 - 7 + 3 - 9 - 7 + 6 + 5 - 3 + 0 - 1 - 3 - 1 - 1 - 3 - 2 - 3 - 3 + 0 - 1 - 3 - 1 - 1 - 3 - 2 - 3 - 3 + 0 - 1 - 3 - 1 - 1 - 3 - 2 - 3", "x2": "mod x_0_9 INT- 4", "tree": "(x_0_9 mod -4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 1 + 4 + 0 - 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1", "x2": "mod sub x_0_3 relu idiv x_0_5 n INT+ 2", "tree": "((x_0_3 sub relu((x_0_5 idiv n))) mod 2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 4 - 5 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign mul sqr n x_0_3", "tree": "sign(((n)**2 mul x_0_3))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 37 + 82 + 145 + 226 + 325 + 442 + 577 + 730 + 901 + 1090 + 1297 + 1522 + 1765 + 2026 + 2305 + 2602 + 2917 + 3250 + 3601 + 3970 + 4357 + 4762 + 5185 + 5626 + 6085 + 6562 + 7057", "x2": "add sqr relu add n add n n sign mod INT- 2 x_0_1", "tree": "((relu((n add (n add n))))**2 add sign((-2 mod x_0_1)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 12 - 9 - 9 - 9 - 8 - 9 - 9 - 9 - 9 - 8 - 9 - 9 - 9 - 9 - 8 - 9 - 9 - 9 - 9 - 8 - 9 - 9 - 9 - 9 - 8 - 9 - 9", "x2": "add idiv mod relu relu abs mul n n INT- 5 n INT- 8", "tree": "(((relu(relu(abs((n mul n)))) mod -5) idiv n) add -8)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 16 + 54 + 128 + 250 + 432 + 686 + 1024 + 1458 + 2000 + 2662 + 3456 + 4394 + 5488 + 6750 + 8192 + 9826 + 1 1664 + 1 3718 + 1 6000 + 1 8522 + 2 1296 + 2 4334 + 2 7648 + 3 1250 + 3 5152 + 3 9366", "x2": "mul mul n n abs add n n", "tree": "((n mul n) mul abs((n add n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 + 10 - 2 + 10 + 10 + 9 + 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0", "x2": "idiv mod mod x_0_7 abs INT+ 3 INT- 4 abs sub abs sub add INT- 6 n INT- 2 n", "tree": "(((x_0_7 mod abs(3)) mod -4) idiv abs((abs(((-6 add n) sub -2)) sub n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 10 + 0 + 2 + 4 - 6 - 2 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0", "x2": "idiv x_0_5 n", "tree": "(x_0_5 idiv n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 - 5 - 1 + 4 + 5 + 7 + 7 + 10 + 14 + 11 + 21 + 14 + 15 + 15 + 16 + 18 + 19 + 19 + 20 + 22 + 23 + 23 + 24 + 26 + 27 + 27 + 28 + 30 + 31", "x2": "add n mod add sign x_0_2 mul n n x_0_2", "tree": "(n add ((sign(x_0_2) add (n mul n)) mod x_0_2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 5 + 10 - 1 - 3 + 2 + 10 + 4 - 2 + 7 - 4 - 2 + 18 + 13 + 98 + 21 + 94 + 53 + 36 + 31 + 38 + 39 + 112 + 41 + 60 - 383 + 32 - 339 - 14 + 23 + 30 + 25 + 20 - 309 + 16 - 97 + 66 + 61 + 56", "x2": "add mul INT+ 6 mod idiv x_0_6 INT+ 6 sub n x_0_11 n", "tree": "((6 mul ((x_0_6 idiv 6) mod (n sub x_0_11))) add n)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 0 - 4 + 4 + 10 + 1 - 3 + 5 + 11 + 2 - 2 + 6 + 12 + 3 - 1 + 7 + 13 + 4 + 0 + 8 + 14 + 5 + 1 + 9 + 15 + 6 + 2 + 10 + 16 + 7 + 3", "x2": "idiv add sign INT+ 8 x_0_4 sqr sign x_0_1", "tree": "((sign(8) add x_0_4) idiv (sign(x_0_1))**2)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 9 + 1 - 5 + 1 + 10 + 15 + 1 + 4 + 15 + 10 + 18 + 15 + 13 + 32 + 24 + 30 + 46 + 36 + 61 + 69 + 65 + 106 + 104 + 125 + 174 + 168 + 230 + 277 + 292 + 403 + 444", "x2": "abs add add INT- 1 x_0_5 x_0_3", "tree": "abs(((-1 add x_0_5) add x_0_3))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 9 + 0 + 0 + 0 - 9 + 10 + 197 + 257 + 325 + 401 + 485 + 577 + 677 + 785 + 901 + 1025 + 1157 + 1297 + 1445 + 1601 + 1765 + 1937 + 2117 + 2305 + 2501 + 2705 + 2917 + 3137 + 3365 + 3601 + 3845 + 4097 + 4357", "x2": "add sign mul sqr x_0_3 sign INT+ 4 sqr relu sub n sub x_0_6 add x_0_6 n", "tree": "(sign(((x_0_3)**2 mul sign(4))) add (relu((n sub (x_0_6 sub (x_0_6 add n)))))**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 7 + 8 + 9 + 10 + 29 + 33 + 37 + 41 + 45 + 104 + 113 + 122 + 131 + 140 + 261 + 277 + 293 + 309 + 325 + 530 + 555 + 580 + 605 + 630 + 941 + 977", "x2": "add mul n sqr add n sub abs idiv relu n INT- 5 n INT+ 5", "tree": "((n mul ((n add (abs((relu(n) idiv -5)) sub n)))**2) add 5)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 10 - 8 - 3 - 2 - 20 - 16 - 6 - 4 - 40 - 32 - 12 - 8 - 80 - 64 - 24 - 16 - 160 - 128 - 48 - 32 - 320 - 256 - 96 - 64 - 640 - 512 - 192 - 128 - 1280 - 1024 - 384", "x2": "add x_0_4 x_0_4", "tree": "(x_0_4 add x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 - 10 + 7 - 1 - 1 + 1 - 6 + 56 + 80 + 63 + 10 + 11 + 12 + 78 + 784 + 1200 + 1008 + 170 + 198 + 228 + 1560 + 1 6464 + 2 6400 + 2 3184 + 4080 + 4950 + 5928 + 4 2120 + 46 992 + 76 5600 + 69 5520 + 12 6480 + 15 8400 + 19 5624", "x2": "abs mod x_0_7 mul n sub mod mod n n n x_0_7", "tree": "abs((x_0_7 mod (n mul (((n mod n) mod n) sub x_0_7))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 24 + 54 - 144 + 225 - 378 + 432 - 549 + 477 - 504 + 324 - 342 + 135 - 198 + 0 - 135 - 72 - 117 - 99 - 126 - 126 - 135 - 144 - 153 - 153 - 171 - 171 - 180", "x2": "mul sub INT+ 1 add idiv x_0_1 n n abs add idiv abs INT- 5 add n n INT- 9", "tree": "((1 sub ((x_0_1 idiv n) add n)) mul abs(((abs(-5) idiv (n add n)) add -9)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 25 + 100 + 225 + 400 + 625 + 900 + 1225 + 1600 + 2025 + 2500 + 3025 + 3600 + 4225 + 4900 + 5625 + 6400 + 7225 + 8100 + 9025 + 1 0 + 1 1025 + 1 2100 + 1 3225 + 1 4400 + 1 5625 + 1 6900 + 1 8225", "x2": "sqr mul abs INT+ 5 mul INT+ 1 abs n", "tree": "((abs(5) mul (1 mul abs(n))))**2", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 + 0 + 9 - 10 + 1 + 3 + 3 - 1 + 8 + 14 + 19 + 29 + 11 + 23 + 26 + 27 + 24 + 34 + 41 + 47 + 58 + 41 + 54 + 58 + 60 + 58 + 69 + 77 + 84 + 96 + 80 + 94 + 99 + 102 + 101 + 113", "x2": "add add x_0_9 idiv x_0_5 x_0_5 mod INT- 3 sub n INT- 1 0", "tree": "((x_0_9 add (x_0_5 idiv x_0_5)) add (-3 mod (n sub -10)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 6 + 1 - 2 + 4 + 10 + 7 + 17 + 22 + 28 + 29 + 38 + 45 + 51 + 58 + 66 + 75 + 83 + 92 + 102 + 113 + 123 + 134 + 146 + 159 + 172 + 184 + 198 + 213 + 228 + 242 + 258 + 275 + 292", "x2": "sub idiv sub sqr n sub mod sign x_0_7 x_0_3 n INT+ 4 idiv x_0_6 n", "tree": "((((n)**2 sub ((sign(x_0_7) mod x_0_3) sub n)) idiv 4) sub (x_0_6 idiv n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 + 6 - 183 + 208 - 7295 + 1 20 - 40 8471 + 64 1344 - 2940 9831 + 5130 7620 - 25 8806 5007 + 49 2553 1664 - 2691 5876 559 + 5516 5954 6564 - 32 2990 5126 6855 + 70 6124 2196 448 - 4392 6709 7229 1991 + 1 168 1887 6230 4836 - 66 7685 9877 8838 2271 + 162 6910 2019 6877 4160 - 1 1217 1245 9484 4822 1087 + 2 8633 6195 5465 425 2644 - 206 3950 9254 5144 7267 9479 + 549 7654 9544 9288 1650 8224 - 4 1279 185 902 8945 3589 5175 + 11 4351 2230 5345 1938 3371 1268 - 891 6267 9979 5025 2197 5335 7071 + 2561 4673 9639 7323 4187 5132 4816 - 20 6857 4175 5244 5850 9827 7883 9631", "x2": "mul relu n add n mul relu INT+ 8 x_0_2", "tree": "(relu(n) mul (n add (relu(8) mul x_0_2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 6 - 6 - 6 - 6 - 7 - 7 - 7", "x2": "idiv n INT- 4", "tree": "(n idiv -4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 4 + 10 + 8 - 1 - 2 + 7 - 30 - 12 - 30 - 24 + 3 + 6 - 21 + 90 + 36 + 90 + 72 - 9 - 18 + 63 - 270 - 108 - 270 - 216 + 27 + 54 - 189 + 810 + 324 + 810 + 648 - 81 - 162", "x2": "mul x_0_7 INT- 3", "tree": "(x_0_7 mul -3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 7 - 5 - 6 + 0 - 195 - 80 - 3015 - 1440 - 6 990 - 3 400 - 134 4105 - 70 480 - 3231 7185 - 1754 1120 - 8 4153 2250 - 4 7428 1600 - 235 9393 4745 - 137 7103 6160 - 7086 2854 2855 - 4273 5953 2800 - 22 6988 9680 5600 - 14 1161 7820 6720 - 772 4483 3649 9015 - 494 4802 8314 3680 - 2 7830 1531 6566 1525 - 1 8309 4726 861 4400 - 105 8296 2555 7993 9980 - 71 4550 2098 8680 7040 - 4235 8929 9410 7845 8695 - 2931 4387 2998 1685 7600", "x2": "mul add x_0_2 x_0_4 add sign idiv mul n n sqr mul x_0_3 n add INT+ 2 add INT+ 6 n", "tree": "((x_0_2 add x_0_4) mul (sign(((n mul n) idiv ((x_0_3 mul n))**2)) add (2 add (6 add n))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 10 + 5 + 4 + 2 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784 - 841 - 900 - 961", "x2": "sub mod idiv relu idiv relu n x_0_4 relu sqr INT+ 9 n sqr n", "tree": "(((relu((relu(n) idiv x_0_4)) idiv relu((9)**2)) mod n) sub (n)**2)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 10 - 8 - 7 + 3 - 7 + 10 + 3 + 9 - 60 - 42 - 59 - 132 - 137 - 246 - 266 - 219 - 489 - 402 - 601 - 695 - 710 - 784 - 1109 - 1351 - 1003 - 2192 - 2285 - 1749 - 3487 - 3460 - 3397 - 4629 - 5763 - 4785 - 6893", "x2": "add x_0_3 mod n sub x_0_9 mul mod x_0_1 n n", "tree": "(x_0_3 add (n mod (x_0_9 sub ((x_0_1 mod n) mul n))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3", "x2": "mul sign n mod add n INT- 9 INT- 7", "tree": "(sign(n) mul ((n add -9) mod -7))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 1 + 4 - 2 + 0 + 0 + 0 + 4 + 1 + 1 + 1 + 0 + 2 + 2 + 2 + 1 + 3 + 3 + 3 + 2 + 4 + 4 + 4 + 3 + 0 + 0 + 0 + 4 + 1 + 1 + 1", "x2": "mod add sqr sign x_0_4 mod x_0_4 INT- 1 0 INT+ 5", "tree": "(((sign(x_0_4))**2 add (x_0_4 mod -10)) mod 5)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 2 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 3 - 4", "x2": "idiv abs sub sign n relu n sub x_0_1 abs INT- 5", "tree": "(abs((sign(n) sub relu(n))) idiv (x_0_1 sub abs(-5)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 9 - 6 - 3 - 5 - 6 + 6 + 5 + 9 - 10 + 5 + 7 + 208 + 0 + 480 + 64 + 68 + 7272 + 228 + 1 9400 + 3066 + 2552 + 33 4742 + 1 1280 + 98 400 + 15 9432 + 16 3728 + 1874 9136 + 65 8184 + 5926 320 + 989 8920 + 1172 192 + 12 3764 5332 + 4493 48 + 41 7165 4340 + 7 1353 4400 + 9 3984 3808 + 940 7316 2064 + 35 1731 4528", "x2": "abs mul add n abs add n mod n sign idiv INT- 2 n add x_0_5 x_0_12", "tree": "abs(((n add abs((n add (n mod sign((-2 idiv n)))))) mul (x_0_5 add x_0_12)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 2 + 10 + 6 - 9 - 8 - 20 - 16 - 1 - 2 + 10 + 6 - 9 - 8 - 20 - 16 - 1 - 2 + 10 + 6 - 9 - 8 - 20 - 16 - 1 - 2 + 10 + 6 - 9 - 8 - 20 - 16", "x2": "sub sub INT- 9 x_0_4 sign relu INT- 5", "tree": "((-9 sub x_0_4) sub sign(relu(-5)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 4 - 10 - 1 + 5 - 9 - 4 + 8 + 1 + 9 + 10 + 11 + 10 + 13 + 15 + 14 + 11 + 16 + 17 + 18 + 19 + 21 + 21 + 22 + 23 + 24 + 25 + 26 + 27 + 28 + 29 + 31 + 31 + 32 + 33 + 34", "x2": "add idiv mod add add n INT- 9 INT+ 8 INT- 1 0 x_0_8 n", "tree": "(((((n add -9) add 8) mod -10) idiv x_0_8) add n)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 43 + 56 + 71 + 88 + 107 + 128 + 151 + 176 + 203 + 232 + 263 + 296 + 331 + 368 + 407 + 448 + 491 + 536 + 583 + 632 + 683 + 736 + 791 + 848 + 907 + 968 + 1031", "x2": "add abs INT+ 7 sqr abs sub INT+ 9 sub INT+ 4 n", "tree": "(abs(7) add (abs((9 sub (4 sub n))))**2)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 2 + 2 - 10 - 7 + 8 - 12 - 70 - 610 - 84 - 672 - 660 - 7980 - 5 4290 - 9744 - 1 2768 - 14 2560 - 36 7080 - 1650 4160 - 226 608 - 311 5392 - 3948 9120 - 8956 7520 - 56 4442 2720 - 4 4307 9168 - 8 688 6528 - 180 703 8720 - 430 8197 7120 - 225 7769 880 - 3695 2802 6112 - 1484 6712 1152 - 13 7933 9165 9520 - 33 2592 8633 6640", "x2": "sub mul abs INT- 4 x_0_5 abs mul x_0_5 abs mod x_0_4 sqr n", "tree": "((abs(-4) mul x_0_5) sub abs((x_0_5 mul abs((x_0_4 mod (n)**2)))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 + 1 - 9 - 5 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1", "x2": "mul sign add add n mod INT+ 6 relu INT- 9 INT+ 4 sign x_0_4", "tree": "(sign(((n add (6 mod relu(-9))) add 4)) mul sign(x_0_4))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 8 + 2 - 2 - 3 - 4 - 8 + 2 - 2 - 3 - 4 - 8 + 2 - 2 - 3 - 4 - 8 + 2 - 2 - 3 - 4 - 8 + 2 - 2 - 3 - 4 - 8 + 2 - 2", "x2": "idiv sub relu INT+ 1 0 INT+ 2 sub INT- 5 x_0_1", "tree": "((relu(10) sub 2) idiv (-5 sub x_0_1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 7 - 10 - 8 - 7 - 3 + 10 - 4 - 25 - 32 - 29 - 28 - 21 + 4 - 25 - 68 - 83 - 78 - 77 - 64 - 15 - 74 - 161 - 192 - 183 - 182 - 157 - 60 - 179 - 354 - 417 - 400 - 399 - 350", "x2": "sub sub x_0_7 sub n x_0_7 INT+ 2", "tree": "((x_0_7 sub (n sub x_0_7)) sub 2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 3 + 9 - 2 + 11 - 2 + 15 + 1 + 17 + 2 + 17 + 12 + 27 + 22 + 37 + 32 + 47 + 42 + 57 + 52 + 67 + 62 + 77 + 72 + 87 + 82 + 97 + 92 + 107 + 102", "x2": "add mod INT+ 1 0 n x_0_2", "tree": "((10 mod n) add x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 - 14 - 54 - 214 - 854 - 3414 - 1 3654 - 5 4614 - 21 8454 - 87 3814 - 349 5254 - 1398 1014 - 5592 4054 - 2 2369 6214 - 8 9478 4854 - 35 7913 9414 - 143 1655 7654 - 572 6623 614 - 2290 6492 2454 - 9162 5968 9814 - 3 6650 3875 9254 - 14 6601 5503 7014 - 58 6406 2014 8054 - 234 5624 8059 2214 - 938 2499 2236 8854 - 3752 9996 8947 5414 - 1 5011 9987 5790 1654 - 6 47 9950 3160 6614", "x2": "sub INT+ 2 mul INT- 4 x_0_1", "tree": "(2 sub (-4 mul x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 5 + 5 + 2 + 2 - 5 + 5 + 2 + 2 - 5 + 5 + 2 + 2 - 5 + 5 + 2 + 2 - 5 + 5 + 2 + 2 - 5 + 5 + 2 + 2 - 5 + 5 + 2 + 2 - 5 + 5", "x2": "sub x_0_4 relu INT- 4", "tree": "(x_0_4 sub relu(-4))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 6 - 1 - 9 - 9 + 10 + 6 + 1 + 9 + 9 - 10 - 6 - 1 - 9 - 9 + 10 + 6 + 1 + 9 + 9 - 10 - 6 - 1 - 9 - 9 + 10 + 6 + 1 + 9 + 9 - 10 - 6 - 1", "x2": "mul x_0_5 mod sign x_0_3 INT- 2", "tree": "(x_0_5 mul (sign(x_0_3) mod -2))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 + 2 - 5 + 0 + 0 + 0 - 2 + 0 - 2 - 2 + 0 + 0 + 0 - 2 + 0 - 2 - 2 + 0 + 0 + 0 - 2 + 0 - 2 - 2 + 0 + 0 + 0 - 2 + 0 - 2", "x2": "mod INT- 2 sub abs sub x_0_3 x_0_1 INT+ 3", "tree": "(-2 mod (abs((x_0_3 sub x_0_1)) sub 3))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 3 - 2 - 3 - 3 - 2 - 2 - 4 - 5 - 4 - 3 - 3 - 5 - 5 - 4 - 7 - 6 - 7 - 4", "x2": "add mul abs sign INT- 1 0 mod n x_0_1 idiv abs n INT- 8", "tree": "((abs(sign(-10)) mul (n mod x_0_1)) add (abs(n) idiv -8))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12 + 12 + 13 + 13 + 14", "x2": "abs idiv n INT- 2", "tree": "abs((n idiv -2))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 7 - 1 - 138 - 147 - 140 - 4 + 4 - 4 - 141 - 150 - 143 - 7 + 1 - 7 - 144 - 153 - 146 - 10 - 2 - 10 - 147 - 156 - 149 - 13 - 5 - 13 - 150 - 159 - 152", "x2": "sub sub sub sub INT+ 1 relu n x_0_3 sqr INT- 1 0 abs sqr INT+ 6", "tree": "((((1 sub relu(n)) sub x_0_3) sub (-10)**2) sub abs((6)**2))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 8 + 5 + 6 + 6 + 8 - 4 - 8 - 5 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign x_0_8", "tree": "sign(x_0_8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 1 - 1 - 2 - 5 - 7 - 11 - 14 - 19 - 23 - 29 - 34 - 41 - 47 - 55 - 62 - 71 - 79 - 89 - 98 - 109 - 119 - 131 - 142 - 155 - 167 - 181 - 194 - 209", "x2": "sub add sign n x_0_2 n", "tree": "((sign(n) add x_0_2) sub n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 6 - 3 + 4 + 6 + 2 + 4 - 9 + 10 + 12 + 11 + 13 + 15 + 14 + 16 + 19 + 21 + 23 + 23 + 25 + 27 + 28 + 30 + 32 + 34 + 36 + 37 + 39 + 41 + 43 + 45 + 47 + 49 + 51 + 52 + 54", "x2": "add idiv abs x_0_8 mod mul sign n relu INT+ 2 mul INT+ 1 0 sign n n", "tree": "((abs(x_0_8) idiv ((sign(n) mul relu(2)) mod (10 mul sign(n)))) add n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 9 - 4 + 10 + 3 - 7 + 2 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mul mul x_0_6 sqr INT- 6 sqr x_0_2", "tree": "sign(((x_0_6 mul (-6)**2) mul (x_0_2)**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 7 - 1 + 2 + 3 + 9 + 2 + 3 - 9 + 2 + 3 - 9 - 2 + 3 - 9 - 2 - 3 - 9 - 2 - 3 - 9 - 2 - 3 + 9 + 2 - 3 + 9 - 2 - 3 + 9 - 2 + 3 - 9 - 2", "x2": "mul x_0_3 sign idiv relu n mod sub n idiv mod n x_0_6 n INT+ 4", "tree": "(x_0_3 mul sign((relu(n) idiv ((n sub ((n mod x_0_6) idiv n)) mod 4))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 8 - 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783 + 840", "x2": "sub mul n relu n sign mod add sqr sqr x_0_2 sign n sign x_0_2", "tree": "((n mul relu(n)) sub sign(((((x_0_2)**2)**2 add sign(n)) mod sign(x_0_2))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 30 - 210 + 2190 - 2 1810 + 21 8190 - 218 1810 + 2181 8190 - 2 1818 1810 + 21 8181 8190 - 218 1818 1810 + 2181 8181 8190 - 2 1818 1818 1810 + 21 8181 8181 8190 - 218 1818 1818 1810 + 2181 8181 8181 8190 - 2 1818 1818 1818 1810 + 21 8181 8181 8181 8190 - 218 1818 1818 1818 1810 + 2181 8181 8181 8181 8190 - 2 1818 1818 1818 1818 1810 + 21 8181 8181 8181 8181 8190 - 218 1818 1818 1818 1818 1810 + 2181 8181 8181 8181 8181 8190 - 2 1818 1818 1818 1818 1818 1810 + 21 8181 8181 8181 8181 8181 8190 - 218 1818 1818 1818 1818 1818 1810 + 2181 8181 8181 8181 8181 8181 8190", "x2": "mul INT- 1 0 sub x_0_1 abs INT- 9", "tree": "(-10 mul (x_0_1 sub abs(-9)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 - 1 + 2 + 6 + 11 + 17 + 24 + 32 + 41 + 51 + 62 + 74 + 87 + 101 + 116 + 132 + 149 + 167 + 186 + 206 + 227 + 249 + 272 + 296 + 321 + 347 + 374 + 402", "x2": "add mul n sign mod mod n sub n x_0_1 INT+ 1 0 x_0_1", "tree": "((n mul sign(((n mod (n sub x_0_1)) mod 10))) add x_0_1)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3 + 6 - 10 - 3", "x2": "sub x_0_3 sub n relu n", "tree": "(x_0_3 sub (n sub relu(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 4 - 7 - 4 - 4 + 6 + 9 - 5 - 68 - 88 - 104 - 125 - 138 - 160 - 201 - 293 - 344 - 393 - 449 - 499 - 560 - 642 - 777 - 873 - 969 - 1074 - 1175 - 1289 - 1426 - 1618 - 1773 - 1930 - 2098 - 2264 - 2445", "x2": "sub x_0_7 mul n n", "tree": "(x_0_7 sub (n mul n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 2 - 7 + 10 + 7 + 9 - 6 + 1 - 14 - 49 + 70 + 49 + 63 - 42 + 7 - 98 - 343 + 490 + 343 + 441 - 294 + 49 - 686 - 2401 + 3430 + 2401 + 3087 - 2058 + 343 - 4802 - 1 6807 + 2 4010 + 1 6807 + 2 1609 - 1 4406", "x2": "mul INT+ 7 x_0_7", "tree": "(7 mul x_0_7)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 12 - 72 - 240 - 600 - 1260 - 2352 - 4032 - 6480 - 9900 - 1 4520 - 2 592 - 2 8392 - 3 8220 - 5 400 - 6 5280 - 8 3232 - 10 4652 - 12 9960 - 15 9600 - 19 4040 - 23 3772 - 27 9312 - 33 1200 - 39 0 - 45 6300 - 53 712", "x2": "sub sqr n mul sqr n mul n n", "tree": "((n)**2 sub ((n)**2 mul (n mul n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 6 - 4 + 2 + 225 - 180 - 5537 + 192 + 1 8225 - 1 7900 - 68 1351 + 2 7792 + 308 25 - 350 8204 - 1 5332 8725 + 711 5008 + 8 9012 7225 - 11 3665 7772 - 553 5171 4850 + 28 4600 3600 + 3925 4610 6225 - 5501 4236 1164 - 29 2810 5722 8123 + 1 6392 9807 4176 + 245 3413 1639 625 - 371 8962 3614 6188 - 2 1345 8907 1941 288 + 1285 2096 9015 4768", "x2": "mul mul abs sub mod x_0_2 INT- 1 n n sub x_0_4 idiv mod INT- 7 x_0_2 x_0_3", "tree": "((abs(((x_0_2 mod -1) sub n)) mul n) mul (x_0_4 sub ((-7 mod x_0_2) idiv x_0_3)))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 2 + 8 + 9 - 2 - 4 - 5 - 8 - 8 - 12 - 9 - 8 - 16 - 10 - 11 - 16 - 14 - 22 - 14 - 14 - 23 - 17 - 15 - 28 - 17 - 18 - 27 - 22", "x2": "sub sign x_0_3 abs idiv sqr n add sub abs INT+ 1 mod x_0_2 abs n x_0_1", "tree": "(sign(x_0_3) sub abs(((n)**2 idiv ((abs(1) sub (x_0_2 mod abs(n))) add x_0_1))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 9 - 8 - 10 + 4 - 4 - 8 - 11 - 4 - 10 - 12 - 15 - 12 - 17 - 16 - 25 - 24 - 32 - 28 - 42 - 40 - 35 - 29 - 50 - 43 - 51 - 42 - 57 - 43 - 71 - 54", "x2": "add x_0_4 mod mul n abs x_0_6 sub mul idiv INT+ 4 INT- 4 n abs idiv n x_0_1", "tree": "(x_0_4 add ((n mul abs(x_0_6)) mod (((4 idiv -4) mul n) sub abs((n idiv x_0_1)))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 5 - 5 + 10 - 8 - 5 - 9 + 0 - 8 + 4 + 4 - 8 - 17 - 2 - 15 - 3 + 1 + 1 + 4 - 13 - 12 - 10 - 1 + 1 - 7 - 35 - 32 - 25 - 3 - 4 + 8 - 63", "x2": "add mod abs mul INT- 5 sub idiv x_0_3 INT- 3 relu x_0_2 sub x_0_6 add INT+ 2 n mod x_0_8 INT+ 9", "tree": "((abs((-5 mul ((x_0_3 idiv -3) sub relu(x_0_2)))) mod (x_0_6 sub (2 add n))) add (x_0_8 mod 9))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 4 - 4 + 0 - 7 + 10 + 11 + 4 + 9 + 3 + 21 + 23 + 17 + 23 + 18 + 37 + 40 + 35 + 42 + 38 + 58 + 62 + 58 + 66 + 63 + 84 + 89 + 86 + 95", "x2": "add x_0_5 relu n", "tree": "(x_0_5 add relu(n))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "idiv sqr n abs idiv relu relu n n", "tree": "((n)**2 idiv abs((relu(relu(n)) idiv n)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 8 - 4 - 7 + 10 + 0 + 0 - 72 - 63 + 100 + 0 + 0 - 8136 - 882 + 1500 + 0 + 0 - 1235 448 - 1 6758 + 3 0 + 0 + 0 - 3707 9750 304 - 40 2192 + 75 0 + 0 + 0 - 27 8108 5075 5800 8512 - 1166 3568", "x2": "mul x_0_5 add mul sign abs idiv n INT- 1 0 n x_0_3", "tree": "(x_0_5 mul ((sign(abs((n idiv -10))) mul n) add x_0_3))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 5 + 0 + 10 + 10 + 9 + 10 - 1 + 1 - 10 + 0 + 0 + 10 + 10 + 9 + 10 + 0 + 1 + 0 + 0 + 0 + 10 + 10 + 9 + 10 + 0 + 1 + 0 + 0 + 0 + 10 + 10 + 9 + 10", "x2": "relu relu x_0_9", "tree": "relu(relu(x_0_9))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 7 - 2 - 5 - 1 - 1 + 3 - 2 + 7 + 10 + 8 + 12 + 11 + 11 + 11 + 14 + 14 + 14 + 18 + 15 + 17 + 21 + 22 + 20 + 23 + 21 + 22 + 28 + 26 + 25 + 28 + 27 + 30", "x2": "sub add n INT+ 1 abs mod add x_0_8 x_0_6 abs INT- 6", "tree": "((n add 1) sub abs(((x_0_8 add x_0_6) mod abs(-6))))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 6 + 0 - 4 + 5 - 30 + 7 - 24 + 54 - 290 + 88 - 276 + 715 - 4046 + 1335 - 4400 + 1 2172 - 7 2810 + 2 5384 - 8 7980 + 25 5633 - 160 1798 + 58 3855 - 211 1496 + 639 850 - 4164 6722 + 1576 4112 - 5912 1860", "x2": "add n mul x_0_4 n", "tree": "(n add (x_0_4 mul n))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 2 + 3 + 3 + 4 + 6 + 7 + 9 + 11 + 13 + 15 + 18 + 20 + 23 + 27 + 30 + 34 + 38 + 42 + 46 + 51 + 55 + 60 + 66", "x2": "add add relu relu INT+ 2 sub idiv sqr n INT+ 9 n n", "tree": "((relu(relu(2)) add (((n)**2 idiv 9) sub n)) add n)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 20 + 100 + 600 + 4200 + 3 3600 + 30 2400 + 302 4000 + 3326 4000 + 3 9916 8000 + 51 8918 4000 + 726 4857 6000 + 1 897 2864 0 + 17 4356 5824 0 + 296 4061 9008 0 + 5335 3114 2144 0 + 10 1370 9170 736 0 + 202 7418 3401 4720 0 + 4257 5785 1430 9120 0 + 9 3666 7273 1480 640 0 + 215 4334 7282 4041 4720 0 + 5170 4033 4777 6995 3280 0 + 12 9260 836 9442 4883 2000 0 + 336 762 1760 5504 6963 2000 0 + 9074 578 7534 8626 8006 4000 0", "x2": "mul abs x_0_1 sub relu n INT- 2", "tree": "(abs(x_0_1) mul (relu(n) sub -2))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 1 - 9 + 5 + 10 + 0 - 7 + 0 - 9 + 0 + 22 + 0 - 39 + 0 - 90 + 0 + 221 + 0 - 589 + 0 - 1785 + 0 + 5865 + 0 - 2 925 + 0 - 8 730 + 0", "x2": "mul mul idiv x_0_2 INT+ 7 sign add x_0_3 x_0_4 n", "tree": "(((x_0_2 idiv 7) mul sign((x_0_3 add x_0_4))) mul n)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 10 + 2 + 10 + 5 + 7 - 1 + 7 + 2 + 4 - 4 + 4 - 1 + 1 - 7 + 1 - 4 - 2 - 10 - 2 - 7 - 5 - 13 - 5 - 10 - 8 - 16 - 8", "x2": "add sub x_0_4 add n INT+ 3 n", "tree": "((x_0_4 sub (n add 3)) add n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 1 + 5 - 5 + 0 - 2 + 10 + 7 + 7 + 3 + 4 + 2 + 2 - 10 - 10 - 13 - 16 - 23 - 29 - 37 - 45 - 65 - 85 - 108 - 134 - 167 - 206 - 253 - 308 - 383 - 478 - 596 - 740 - 917 - 1133 - 1396 - 1714", "x2": "add mul add x_0_8 x_0_1 sign sub abs add sub x_0_9 INT+ 5 x_0_12 mod INT+ 5 INT- 6 INT- 1 0", "tree": "(((x_0_8 add x_0_1) mul sign((abs(((x_0_9 sub 5) add x_0_12)) sub (5 mod -6)))) add -10)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 5 + 7 + 7 + 7 + 7 + 43 + 301 + 2407 + 2 1661 + 21 6607 + 7 + 67 + 852 + 1 1907 + 7 + 103 + 1741 + 3 1291 + 59 4498 + 1188 9927 + 2 4968 8390 + 7 + 145 + 3415 + 8 5282", "x2": "add mul mod mod relu sub mod sqr x_0_1 n INT- 6 idiv n INT- 5 x_0_1 n INT+ 7", "tree": "((((relu((((x_0_1)**2 mod n) sub -6)) mod (n idiv -5)) mod x_0_1) mul n) add 7)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 2 + 3 + 2 + 0 + 5 + 0 + 2 + 5 + 8 + 4 + 7 + 2 + 2 + 9 + 4 + 8 + 7 + 8 + 4 + 5 + 4 + 6 + 7 + 8 + 6", "x2": "mod add add n add sub x_0_2 sqr relu x_0_1 INT+ 1 n abs INT+ 1 0", "tree": "(((n add ((x_0_2 sub (relu(x_0_1))**2) add 1)) add n) mod abs(10))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 5 + 1 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 12 + 14 + 16 + 19 + 22 + 25 + 29 + 33 + 37 + 42 + 47 + 52 + 58 + 64 + 70 + 77 + 84", "x2": "add n relu sub x_0_3 INT+ 7", "tree": "(n add relu((x_0_3 sub 7)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 6 + 10 - 10 + 1 + 10 + 0 + 5 - 6 + 30 - 66 + 120 - 130 + 14 + 150 + 0 + 85 - 108 + 570 - 1320 + 2520 - 2860 + 322 + 3600 + 0 + 2210 - 2916 + 1 5960 - 3 8280 + 7 5600 - 8 8660 + 1 304 + 11 8800", "x2": "mul x_0_9 n", "tree": "(x_0_9 mul n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 4 - 7 + 2 + 1 + 0 + 1 + 1 + 1 + 3 + 0 + 1 + 0 + 2 + 0 + 0 + 3 + 2 + 3 + 3 + 3 + 1 + 2 + 3 + 2 + 0 + 2", "x2": "relu mod add sqr mul abs INT+ 1 0 sign n relu add x_0_3 n INT+ 4", "tree": "relu(((((abs(10) mul sign(n)))**2 add relu((x_0_3 add n))) mod 4))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 9 - 9 + 72 + 72 + 576 + 576 + 4608 + 4608 + 3 6864 + 3 6864 + 29 4912 + 29 4912 + 235 9296 + 235 9296 + 1887 4368 + 1887 4368 + 1 5099 4944 + 1 5099 4944 + 12 795 9552 + 12 795 9552 + 96 6367 6416 + 96 6367 6416 + 773 941 1328 + 773 941 1328 + 6184 7529 624 + 6184 7529 624", "x2": "mul abs x_0_2 INT+ 8", "tree": "(abs(x_0_2) mul 8)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 14 + 28 + 56 + 112 + 224 + 448 + 896 + 1792 + 3584 + 7168 + 1 4336 + 2 8672 + 5 7344 + 11 4688 + 22 9376 + 45 8752 + 91 7504 + 183 5008 + 367 16 + 734 32 + 1468 64 + 2936 128 + 5872 256 + 1 1744 512", "x2": "add x_0_1 relu x_0_1", "tree": "(x_0_1 add relu(x_0_1))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 8 + 8 - 2 + 9 + 0 - 4 + 1 + 17 + 1 + 11 + 0 + 9 + 13 + 8 + 8 + 8 + 2 + 9 + 0 + 4 + 1 + 1 + 1 + 7 + 0 + 9 + 5 + 8 + 8 + 8", "x2": "abs sub relu INT+ 9 x_0_7", "tree": "abs((relu(9) sub x_0_7))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 3 + 4 + 5 + 6 + 1 + 2 + 3 + 4 + 5 + 6 + 1 + 2 + 3 + 4 + 5 + 6 + 1 + 2 + 3 + 4 + 5 + 6 + 1", "x2": "mul add mod n INT+ 6 INT+ 1 sign mod n sqr n", "tree": "(((n mod 6) add 1) mul sign((n mod (n)**2)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 82 + 41 + 28 + 21 + 17 + 14 + 12 + 11 + 10 + 9 + 8 + 7 + 7 + 6 + 6 + 6 + 5 + 5 + 5 + 5 + 4 + 4 + 4 + 4", "x2": "idiv add n sqr sqr INT+ 3 n", "tree": "((n add ((3)**2)**2) idiv n)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 - 10 - 6 - 7 + 3 + 1 + 9 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1", "x2": "sign sign sign x_0_7", "tree": "sign(sign(sign(x_0_7)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 - 4 + 0 - 2 - 3 - 28 - 5 - 22 - 34 - 288 - 64 - 274 - 453 - 4044 - 973 - 4398 - 7716 - 7 2808 - 1 8504 - 8 7978 - 16 2055 - 160 1796 - 42 5613 - 211 1494 - 405 1398 - 4164 6720 - 1149 1576", "x2": "add mul n sign INT- 9 add mul sub n INT+ 1 x_0_4 INT+ 3", "tree": "((n mul sign(-9)) add (((n sub 1) mul x_0_4) add 3))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 + 3 + 6 - 4 + 6 - 1 + 1 + 11 + 3 + 6 + 16 + 6 + 16 + 1 + 11 + 3 + 6 + 16 + 6 + 16 + 1 + 11 + 3 + 6 + 16 + 6 + 16 + 1 + 11 + 3 + 6", "x2": "mod x_0_7 sub add n x_0_3 INT+ 2", "tree": "(x_0_7 mod ((n add x_0_3) sub 2))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 + 6 + 7 - 8 - 3 - 2 - 6 + 4 + 3 - 8 + 6 + 11 - 13 - 5 - 2 - 7 + 7 + 4 - 10 + 11 + 18 - 22 - 5 - 3 - 10 + 13 + 7 - 13 + 12 + 31 - 37 - 8 - 3", "x2": "add x_0_9 mod x_0_4 x_0_9", "tree": "(x_0_9 add (x_0_4 mod x_0_9))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 7 + 7 - 21 + 28 - 105 + 168 - 735 + 1344 - 6615 + 1 3440 - 7 2765 + 16 1280 - 94 5945 + 225 7920 - 1418 9175 + 3612 6720 - 2 4121 5975 + 6 5028 960 - 45 8310 3525 + 130 561 9200 - 962 4517 4025 + 2861 2362 2400 - 2 2136 3900 2575 + 6 8669 6693 7600 - 55 3409 7506 4375 + 178 5411 4037 7600", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 46 + 191 + 772 + 3097 + 1 2398 + 4 9603 + 19 8424 + 79 3709 + 317 4850 + 1269 9415 + 5079 7676 + 2 319 721 + 8 1276 2902 + 32 5105 1627 + 130 420 6528 + 520 1682 6133 + 2080 6730 4554 + 8322 6921 8239 + 3 3290 7687 2980 + 13 3163 749 1945 + 53 2652 2996 7806 + 213 609 1987 1251 + 852 2436 7948 5032 + 3408 9747 1794 157", "x2": "add INT+ 4 sub n mul x_0_1 mod INT+ 8 INT- 6", "tree": "(4 add (n sub (x_0_1 mul (8 mod -6))))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 + 5 + 9 + 7 + 3 - 10 + 3 - 10 + 17 + 5 + 2 + 5 + 10 + 24 + 12 + 26 + 0 + 13 + 17 + 15 + 11 - 2 + 11 - 2 + 25 + 13 + 10 + 13 + 18 + 32 + 20 + 34", "x2": "sub n x_0_8", "tree": "(n sub x_0_8)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 4 + 0 + 2 - 9 + 5 + 10 - 4 + 4 + 9 + 12 + 2 + 17 + 23 + 10 + 19 + 25 + 29 + 20 + 36 + 43 + 31 + 41 + 48 + 53 + 45 + 62 + 70 + 59 + 70 + 78 + 84", "x2": "relu add n x_0_7", "tree": "relu((n add x_0_7))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 4 - 7 + 2 - 5 + 6 + 14 + 2 + 8 + 8 + 0 + 1 + 33 + 27 + 33 + 45 + 39 + 31 + 109 + 156 + 223 + 307 + 382 + 433 + 669 + 1003 + 1487 + 2153 + 2972 + 3886", "x2": "idiv sqr add x_0_1 sub x_0_6 mod x_0_5 INT+ 5 add x_0_1 INT+ 4", "tree": "(((x_0_1 add (x_0_6 sub (x_0_5 mod 5))))**2 idiv (x_0_1 add 4))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 2 - 7 - 5 + 1 - 10 - 9 + 11 + 57 + 34 + 11 + 111 + 93 + 134 + 3263 + 1171 + 137 + 1 2338 + 8667 + 1 7975 + 1064 7189 + 137 1262 + 1 8791 + 1 5222 6267 + 7511 6913 + 3 2310 650 + 113 3626 3360 1747 + 1 8803 5947 2671 + 3 5310 1709 + 2 3172 8363 6475 5318 + 5642 5506 1864 9599", "x2": "add n sqr x_0_6", "tree": "(n add (x_0_6)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 4 + 16 + 64 + 144 + 324 + 576 + 1024 + 1600 + 2500 + 3600 + 5184 + 7056 + 9604 + 1 2544 + 1 6384 + 2 736 + 2 6244 + 3 2400 + 4 0 + 4 8400 + 5 8564 + 6 9696 + 8 2944", "x2": "sqr idiv mul sqr n n add n n", "tree": "((((n)**2 mul n) idiv (n add n)))**2", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 - 2 + 1 - 4 + 2 + 118 + 95 + 80 + 129 + 90 + 829 + 636 + 507 + 890 + 569 + 6472 + 4919 + 3878 + 6933 + 4356 + 5 1571 + 3 9138 + 3 801 + 5 5232 + 3 4607 + 41 2318 + 31 2845 + 24 6140 + 44 1579", "x2": "abs abs sub mul INT- 9 n mul add x_0_5 idiv sub INT- 9 relu INT- 9 INT+ 5 INT- 8", "tree": "abs(abs(((-9 mul n) sub ((x_0_5 add ((-9 sub relu(-9)) idiv 5)) mul -8))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 7 + 2 - 9 + 8 - 9 + 15 - 11 + 24 - 19 + 33 - 34 + 44 - 58 + 63 - 91 + 97 - 135 + 155 - 198 + 246 - 295 + 381 - 450 + 579 - 696 + 874 - 1077 + 1324", "x2": "add sub sub x_0_2 x_0_5 n n", "tree": "(((x_0_2 sub x_0_5) sub n) add n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 4 + 6 + 1 + 0 - 5 + 2 + 5 - 1 - 7 + 7 + 6 + 7 + 0 - 1 + 5 + 2 + 5 + 9 + 3 + 7 + 5 + 8 + 0 + 10 + 7 + 3 + 7 + 10 + 6 + 7 + 9 + 11 + 1", "x2": "add mod x_0_10 INT+ 1 0 idiv mul x_0_7 sub sub n INT+ 1 0 INT+ 8 n", "tree": "((x_0_10 mod 10) add ((x_0_7 mul ((n sub 10) sub 8)) idiv n))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 7 - 2 + 0 - 2 - 2 + 7 + 4 + 0 + 2 + 2 + 7 + 4 + 0 + 2 + 2 + 7 + 4 + 0 + 2 + 2 + 7 + 4 + 0 + 2 + 2 + 7 + 4 + 0 + 2 + 2 + 7", "x2": "add abs x_0_5 mod relu mod x_0_7 add x_0_7 mod INT+ 1 INT- 1 n", "tree": "(abs(x_0_5) add (relu((x_0_7 mod (x_0_7 add (1 mod -1)))) mod n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 9 - 9 - 7 - 5 - 5 + 7 - 10 - 10 + 0 - 10 + 0 - 10 + 0 + 0 - 10 + 0 + 0 - 10 + 10 - 20 + 20 - 20 + 10 - 10 + 10 - 20 + 20 - 30 + 30 - 40 + 40 - 50", "x2": "sub mul idiv idiv mul x_0_8 sub n x_0_3 sqr relu n INT+ 8 INT+ 1 0 x_0_1", "tree": "(((((x_0_8 mul (n sub x_0_3)) idiv (relu(n))**2) idiv 8) mul 10) sub x_0_1)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 3 + 4 + 9 + 3 + 3 + 9 + 10 + 9 + 4 + 97 + 4 + 9 + 3 + 3 + 9 + 10 + 9 + 4 + 97 + 4 + 9 + 3 + 3 + 9 + 10 + 9 + 4 + 97 + 4 + 9 + 3 + 3 + 9", "x2": "mod x_0_9 sqr abs INT+ 1 0", "tree": "(x_0_9 mod (abs(10))**2)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 2 + 7 + 1 + 5 - 6 - 10 + 27 + 0 + 15 + 3 + 18 + 21 + 33 + 87 + 6 + 51 + 18 + 63 + 72 + 111 + 273 + 30 + 168 + 69 + 204 + 234 + 351 + 837 + 111 + 525", "x2": "mul INT+ 3 add idiv relu add n n INT+ 6 add sign x_0_3 add mod INT+ 2 INT- 6 abs x_0_7", "tree": "(3 mul ((relu((n add n)) idiv 6) add (sign(x_0_3) add ((2 mod -6) add abs(x_0_7)))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3", "x2": "idiv n INT+ 8", "tree": "(n idiv 8)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 0 - 4 - 57 - 50 - 163 - 1866 - 3359 - 8242 - 6 4215 - 16 4978 - 41 2231 - 233 8674 - 728 8007 - 1965 4930 - 8981 5143 - 3 845 5346 - 8 9810 3239 - 35 9255 7522 - 128 4621 7895 - 397 8931 5058 - 1475 6604 711 - 5329 5257 7554 - 1 7266 3202 9287 - 6 1536 1325 610 - 22 1421 9057 7223 - 73 9411 5145 5826", "x2": "sub sub x_0_1 mul INT+ 3 mul x_0_3 INT- 1 0 INT- 7", "tree": "((x_0_1 sub (3 mul (x_0_3 mul -10))) sub -7)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 + 4 - 6 + 4 - 6 + 1 + 9 + 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "mul sign mod INT+ 5 INT- 6 sign idiv relu sub INT- 4 INT- 7 x_0_7", "tree": "(sign((5 mod -6)) mul sign((relu((-4 sub -7)) idiv x_0_7)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 10 - 2 - 3 - 9 + 10 + 0 - 8 + 0 + 0 + 0 + 0 - 12 - 13 + 0 - 15 - 16 - 17 - 18 + 0 + 0 - 21 + 0 + 0 + 0 + 0 - 26 - 27 + 0 - 29 - 30 - 31", "x2": "mul n idiv INT+ 5 mul add n mul sub abs sub n INT+ 2 INT- 5 x_0_7 INT- 5", "tree": "(n mul (5 idiv ((n add ((abs((n sub 2)) sub -5) mul x_0_7)) mul -5)))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 1 + 3 + 5 + 7 + 9 + 12 + 16 + 20 + 24 + 28 + 33 + 39 + 45 + 51 + 57 + 64 + 72 + 80 + 88 + 96 + 105 + 115", "x2": "idiv sqr n sub sign INT+ 6 INT- 4", "tree": "((n)**2 idiv (sign(6) sub -4))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 + 0 - 5 + 153 - 7 + 173 - 7504 + 441 - 1 4020 + 75 393 - 5 3368 + 201 8873 - 1 2681 6424 + 1046 121 - 4 5424 6432 + 324 6500 4537 - 30 2297 4976 + 1471 7584 3961 - 11 7198 6663 7864 + 1 2091 8999 393 - 64 9045 4718 6808 + 5672 4154 5272 6169 - 639 6615 491 7904 + 3 7385 191 7960 1401 - 354 5259 6579 5385 5632 + 43 2411 1773 2450 3097 - 2725 3678 9819 2942 1336", "x2": "sub INT- 7 mul x_0_3 mul n abs n", "tree": "(-7 sub (x_0_3 mul (n mul abs(n))))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 0 - 9 + 9 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign idiv x_0_1 x_0_4", "tree": "sign((x_0_1 idiv x_0_4))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 9 + 1 - 6 + 2 + 0 - 9 + 7 + 2 - 3 + 10 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 6 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3 + 0 + 3 + 3", "x2": "mod mul INT- 3 mul sub mul x_0_11 mod n INT+ 8 idiv n n sqr n INT+ 9", "tree": "((-3 mul (((x_0_11 mul (n mod 8)) sub (n idiv n)) mul (n)**2)) mod 9)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 3 + 3 - 8 + 7 + 7 + 10 + 19 + 5 + 5 + 1 - 15 - 1 + 0 + 8 + 21 + 6 + 3 - 8 - 17 - 1 + 4 + 18 + 23 + 5 - 3 - 18 - 19 + 1", "x2": "mul sub INT+ 5 add x_0_4 add INT- 9 mod add abs INT- 9 idiv x_0_3 INT+ 4 n INT+ 1", "tree": "((5 sub (x_0_4 add (-9 add ((abs(-9) add (x_0_3 idiv 4)) mod n)))) mul 1)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 4 + 3 + 6 - 2 + 10 - 9 + 1 - 7 + 4 + 4 + 4 + 4 + 1 + 9 + 1 + 1 + 36 + 1 + 4 + 4 + 4 + 4 + 36 + 1 + 36 + 36 + 1 + 36 + 4 + 4 + 4 + 4 + 1", "x2": "sqr idiv INT- 6 abs x_0_10", "tree": "((-6 idiv abs(x_0_10)))**2", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 2 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11 - 2 - 12 - 2 - 13", "x2": "idiv relu n x_0_1", "tree": "(relu(n) idiv x_0_1)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 8 - 6 + 3 + 3 + 0 + 0 + 0 + 0 + 0 - 7 - 7 - 7 - 7 - 7 + 0 + 0 + 0 + 0 + 0 - 7 - 7 - 7 - 7 - 7 + 0 + 0 + 0 + 0", "x2": "idiv INT- 7 sub sign relu n sqr x_0_5", "tree": "(-7 idiv (sign(relu(n)) sub (x_0_5)**2))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 9 + 4 - 9 + 2 + 0 + 9 + 4 + 9 + 2 + 0 + 9 + 4 + 9 + 2 + 0 + 9 + 4 + 9 + 2 + 0 + 9 + 4 + 9 + 2 + 0 + 9 + 4 + 9", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 6", "x2": "idiv n relu INT+ 4", "tree": "(n idiv relu(4))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 + 4 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12", "x2": "abs mul sub n abs x_0_1 sign INT- 4", "tree": "abs(((n sub abs(x_0_1)) mul sign(-4)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 2 + 10 + 24 + 28 + 54 + 72 + 102 + 146 + 194 + 268 + 360 + 482 + 648 + 862 + 1150 + 1530 + 2032 + 2700 + 3582 + 4752 + 6302 + 8354 + 1 1074 + 1 4676 + 1 9448 + 2 5770", "x2": "sub add x_0_3 abs x_0_2 mul INT+ 1 0 mod INT+ 8 INT- 1 0", "tree": "((x_0_3 add abs(x_0_2)) sub (10 mul (8 mod -10)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 - 3 - 16 - 10 - 23 - 17 - 30 - 24 - 37 - 31 - 44 - 38 - 51 - 45 - 58 - 52 - 65 - 59 - 72 - 66 - 79 - 73 - 86 - 80 - 93 - 87", "x2": "sub x_0_2 INT+ 7", "tree": "(x_0_2 sub 7)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 - 6 - 10 + 2 + 6 + 6 + 3 + 7 + 348 + 424 + 508 + 577 + 677 + 785 + 901 + 1025 + 1157 + 1297 + 1445 + 1601 + 1765 + 1937 + 2117 + 2305 + 2501 + 2705 + 2917 + 3137 + 3365 + 3601 + 3845 + 4097", "x2": "sub mod sign x_0_8 sqr INT- 5 idiv sqr add n n idiv INT- 9 n", "tree": "((sign(x_0_8) mod (-5)**2) sub (((n add n))**2 idiv (-9 idiv n)))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 5 + 6 - 6 + 1 - 5 - 9 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1", "x2": "sign sign idiv INT- 6 x_0_6", "tree": "sign(sign((-6 idiv x_0_6)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 0 - 2 + 8 + 6 - 9 + 7 - 5 + 9 - 34 - 1 + 25 - 113 - 91 + 143 - 120 + 89 - 172 + 679 + 20 - 551 + 2598 + 2183 - 3576 + 3119 - 2404 + 4815 - 1 9692 - 601 + 1 7080 - 8 3137 - 7 2040 + 12 1583", "x2": "sub n mul add x_0_9 INT+ 1 sub add n idiv INT- 1 n INT- 2", "tree": "(n sub ((x_0_9 add 1) mul ((n add (-1 idiv n)) sub -2)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 1 + 4 - 4 + 10 + 4 + 8 + 16 + 36 - 12 + 28 + 52 - 76 - 76 + 164 - 252 - 348 + 644 - 188 - 1340 + 2308 + 1028 - 5244 + 5380 + 7428 - 1 9708 + 6660 + 3 5844 - 6 924 - 1 6380", "x2": "mul sub x_0_5 sub x_0_3 add add INT+ 4 x_0_5 INT- 1 0 INT- 2", "tree": "((x_0_5 sub (x_0_3 sub ((4 add x_0_5) add -10))) mul -2)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 + 4 + 3 - 8 + 8 - 10 - 2 - 9 + 100 - 41 + 100 - 9 + 68 + 23 + 68 + 23 + 36 + 55 + 4 + 87 - 28 + 87 - 28 + 87 - 28 + 87 - 28 + 87 + 4 + 55 + 36 + 23", "x2": "sub INT+ 1 0 sub x_0_1 sqr add idiv abs sqr INT+ 8 INT- 8 sign sub x_0_8 sign x_0_3", "tree": "(10 sub (x_0_1 sub (((abs((8)**2) idiv -8) add sign((x_0_8 sub sign(x_0_3)))))**2))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 9 - 2 + 4 + 2 + 9 + 0 + 4 + 2 + 9 + 0 + 4 + 2 + 9 + 0 + 4 + 2 + 9 + 0 + 4 + 2 + 9 + 0 + 4 + 2 + 9 + 0 + 4", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 10 - 3 - 9 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 - 4 - 9 + 10 - 9 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign mul sign x_0_5 abs INT+ 9", "tree": "sign((sign(x_0_5) mul abs(9)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 3 + 10 - 10 + 5 + 8 - 3 + 10 - 10 + 5 + 8 - 3 + 10 - 10 + 5 + 8 - 3 + 10 - 10 + 5 + 8 - 3 + 10 - 10 + 5 + 8 - 3 + 10 - 10", "x2": "idiv x_0_5 sign sqr n", "tree": "(x_0_5 idiv sign((n)**2))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 10 - 4 - 8 - 5 + 3 + 11 + 20 + 38 + 97 + 124 + 137 + 151 + 166 + 182 + 199 + 217 + 236 + 256 + 277 + 299 + 322 + 346 + 371 + 397 + 424 + 452 + 481 + 511 + 542", "x2": "add add sqr mod sign INT+ 9 x_0_6 n x_0_1", "tree": "((((sign(9) mod x_0_6))**2 add n) add x_0_1)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 - 3 - 9 - 27 - 81 - 243 - 729 - 2187 - 6561 - 1 9683 - 5 9049 - 17 7147 - 53 1441 - 159 4323 - 478 2969 - 1434 8907 - 4304 6721 - 1 2914 163 - 3 8742 489 - 11 6226 1467 - 34 8678 4401 - 104 6035 3203 - 313 8105 9609 - 941 4317 8827 - 2824 2953 6481", "x2": "mul x_0_1 INT+ 3", "tree": "(x_0_1 mul 3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 - 5 + 1 + 9 - 3 - 8 + 13 + 17 - 12 + 64 - 3 + 0 + 166 + 289 - 22 + 3807 - 13 - 3807 + 2 7543 + 7 9714 - 2 7059 + 1441 3535 - 2 6890 + 7 9714 + 7 5858 9959 + 63 5424 2082 - 2640 478 + 207 7436 3695 4143 + 6 9667 1622", "x2": "sub sqr x_0_6 abs x_0_2", "tree": "((x_0_6)**2 sub abs(x_0_2))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 10 + 9 + 7 - 1 + 0 - 3 + 1 + 6 + 5 - 5 - 4 + 0 + 0 + 1 - 1 - 3 - 3 + 2 + 2 + 0 + 0 - 1 + 0 + 1 + 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1", "x2": "idiv x_0_8 INT- 2", "tree": "(x_0_8 idiv -2)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 4 + 7 + 4 + 4 + 5 + 3 - 3 + 5 - 10 + 13 + 11 + 10 + 13 + 9 + 7 + 11 + 8 + 22 + 18 + 21 + 22 + 19 + 17 + 19 + 20 + 27 + 37 + 42 + 44 + 26 + 37 + 29 + 28", "x2": "add add INT+ 5 abs mod sub x_0_4 idiv sqr INT- 1 0 n abs x_0_9 abs relu x_0_8", "tree": "((5 add abs(((x_0_4 sub ((-10)**2 idiv n)) mod abs(x_0_9)))) add abs(relu(x_0_8)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 7 - 1 - 9 - 10 - 8 + 5 - 40 - 40 - 5 + 10 + 65 - 225 + 0 + 175 + 75 + 275 - 1450 + 1125 + 875 - 500 + 1000 - 8625 + 1 2875 - 1250 - 6875 + 7500 - 4 8125 + 10 7500 - 7 625", "x2": "mul mod INT- 5 sub n abs relu sqr n sub x_0_6 x_0_5", "tree": "((-5 mod (n sub abs(relu((n)**2)))) mul (x_0_6 sub x_0_5))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 - 7 + 8 - 6 - 10 + 4 + 9 - 3 - 981 - 531 - 675 - 432 - 1017 - 270 - 864 - 225 - 866 1402 - 253 7811 - 410 796 - 167 9796 - 930 8790 - 65 6298 - 671 8671 - 45 5841 - 675 1789 6145 661 - 57 9643 6204 5723 - 151 3487 5050 2787 - 25 3954 3141 4796 - 779 8821 4137 7161 - 3 8765 4358 3506 - 406 2648 6005 6448 - 1 8701 1915 5817", "x2": "mul add n sqr x_0_8 INT- 9", "tree": "((n add (x_0_8)**2) mul -9)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 10 - 7 + 6 + 8 + 1 + 9 + 1 + 4 - 8 + 7 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_10 add relu n sqr x_0_2", "tree": "(x_0_10 idiv (relu(n) add (x_0_2)**2))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 10 - 1 + 4 - 4 + 1 - 7 - 2 - 11 - 6 - 15 - 10 - 19 - 13 - 23 - 17 - 26 - 21 - 30 - 25 - 34 - 29 - 38 - 33 - 42 - 37 - 46 - 41", "x2": "add x_0_2 add INT- 4 abs idiv sign n sub mod mod mod sub x_0_2 INT- 5 x_0_3 INT+ 6 x_0_2 x_0_2", "tree": "(x_0_2 add (-4 add abs((sign(n) idiv (((((x_0_2 sub -5) mod x_0_3) mod 6) mod x_0_2) sub x_0_2)))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776", "x2": "sqr sqr abs n", "tree": "((abs(n))**2)**2", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 2 - 6 - 6 + 5 - 10 - 7 + 3 + 5 - 5 - 2 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8 - 8 - 8 - 9 - 9 - 9 - 10 - 10 - 10 - 11 - 11 - 11 - 12 - 12", "x2": "idiv idiv n add INT- 1 INT- 2 sqr sign sign x_0_11", "tree": "((n idiv (-1 add -2)) idiv (sign(sign(x_0_11)))**2)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 8 - 7 + 11 + 11 + 16 + 17 + 23 + 25 + 32 + 35 + 43 + 47 + 56 + 61 + 71 + 77 + 88 + 95 + 107 + 115 + 128 + 137 + 151 + 161 + 176 + 187", "x2": "add abs x_0_2 n", "tree": "(abs(x_0_2) add n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 2 - 10 - 6 + 21 + 12 + 78 + 42 + 183 + 102 + 696 + 372 + 1641 + 912 + 6258 + 3342 + 1 4763 + 8202 + 5 6316 + 3 72 + 13 2861 + 7 3812 + 50 6838 + 27 642 + 119 5743 + 66 4302 + 456 1536 + 243 5772", "x2": "add abs sub INT+ 3 mul mul sign sqr n INT- 9 x_0_4 INT- 9", "tree": "(abs((3 sub ((sign((n)**2) mul -9) mul x_0_4))) add -9)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 49 + 81 + 121 + 169 + 225 + 289 + 361 + 441 + 529 + 625 + 729 + 841 + 961 + 1089 + 1225 + 1369 + 1521 + 1681 + 1849", "x2": "relu abs sqr add relu sub n abs abs INT+ 5 n", "tree": "relu(abs(((relu((n sub abs(abs(5)))) add n))**2))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 9 + 4 - 9 + 9 + 0 + 9 + 9 + 0 - 9 - 9 + 0 + 9 + 9 + 0 - 9 - 9 + 0 + 9 + 9 + 0 - 9 - 9 + 0 + 9 + 9 + 0 - 9", "x2": "mul idiv add INT+ 2 sign sign x_0_3 sub x_0_1 n x_0_3", "tree": "(((2 add sign(sign(x_0_3))) idiv (x_0_1 sub n)) mul x_0_3)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 7 + 7 + 6 - 191 - 43 - 137 - 14 5916 + 9 + 10 + 11 + 12 - 87 - 107 - 129 - 7553 + 17 + 18 + 19 + 20 - 303 - 339 - 377 - 9 1785 + 25 + 26 + 27 + 28", "x2": "sub n sqr mul x_0_3 idiv INT- 9 x_0_4", "tree": "(n sub ((x_0_3 mul (-9 idiv x_0_4)))**2)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 - 8 + 9 + 7 + 5 - 7 - 4 - 6 - 5 - 10 + 118 + 129 + 174 + 197 + 225 + 239 + 403 + 447 + 530 + 587 + 784 + 852 + 1106 + 1220 + 1380 + 1502 + 1916 + 2083 + 2477 + 2707 + 3125 + 3378 + 4111 + 4459", "x2": "add sqr abs n add x_0_6 x_0_10", "tree": "((abs(n))**2 add (x_0_6 add x_0_10))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 10 + 9 + 9 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0", "x2": "mod sub sqr abs x_0_4 INT+ 4 INT- 3", "tree": "(((abs(x_0_4))**2 sub 4) mod -3)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 - 10 + 7 - 5 - 8 - 5 - 8 - 1 - 1 + 0 - 1 - 8 - 1 - 1 - 1 - 1 + 0 - 1 - 8 - 1 - 1 - 1 - 1 + 0 - 1 - 8 - 1 - 1 - 1 - 1 + 0", "x2": "idiv x_0_7 add relu add sqr mod sub x_0_6 INT- 1 0 x_0_2 n abs sign INT+ 8", "tree": "(x_0_7 idiv (relu(((((x_0_6 sub -10) mod x_0_2))**2 add n)) add abs(sign(8))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 4 - 10 + 1 - 7 - 3 - 10 - 17 - 7 - 16 - 13 - 21 - 29 - 20 - 30 - 28 - 37 - 46 - 38 - 49 - 48 - 58 - 68 - 61 - 73 - 73 - 84 - 95 - 89 - 102", "x2": "sub x_0_5 n", "tree": "(x_0_5 sub n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 + 6 + 0 + 2 - 9 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign sqr sqr mod n sqr mul sqr add INT- 9 n sub x_0_5 mod x_0_6 n", "tree": "sign((((n mod ((((-9 add n))**2 mul (x_0_5 sub (x_0_6 mod n))))**2))**2)**2)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12 + 15 + 13 + 16 + 14 + 17 + 15 + 18 + 16", "x2": "relu add x_0_2 idiv INT- 1 0 INT- 6", "tree": "relu((x_0_2 add (-10 idiv -6)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 10 + 1 + 11 + 2 + 12 + 3 + 13 + 4 + 14 + 5 + 15 + 6 + 16 + 7 + 17 + 8 + 18 + 9 + 19 + 10 + 20 + 11 + 21 + 12 + 22", "x2": "add x_0_2 sign INT+ 1", "tree": "(x_0_2 add sign(1))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 + 5 - 6 + 4 + 0 + 12 + 26 + 16 + 27 + 24 + 37 + 52 + 43 + 55 + 53 + 67 + 83 + 75 + 88 + 87 + 102 + 119 + 112 + 126 + 126 + 142 + 160 + 154 + 169", "x2": "sub add n idiv add relu INT+ 8 add sqr INT+ 4 x_0_5 idiv INT- 3 INT- 2 abs abs INT+ 1 0", "tree": "((n add ((relu(8) add ((4)**2 add x_0_5)) idiv (-3 idiv -2))) sub abs(abs(10)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 2 - 3 - 8 + 8 + 7 - 6 + 1 + 3 + 1 + 8 + 0 + 24 + 8 + 7 + 1 + 9 + 5 + 57 + 0 + 240 + 8 + 0 + 1 + 249 + 1 + 57 + 0 + 1 2000 + 8 + 0 + 1 + 37 2249 + 0 + 57", "x2": "relu add mul idiv x_0_4 x_0_11 sub x_0_8 x_0_9 x_0_8", "tree": "relu((((x_0_4 idiv x_0_11) mul (x_0_8 sub x_0_9)) add x_0_8))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 9 - 8 - 9 + 4 + 6 + 2 + 2 - 17 - 1 - 1 - 15 - 18 - 15 - 16 + 2 - 15 - 16 - 3 - 1 - 5 - 5 - 24 - 8 - 8 - 22 - 25 - 22 - 23 - 5 - 22 - 23", "x2": "mul add n x_0_7 sign add INT- 1 0 mod mod x_0_6 n relu x_0_4", "tree": "((n add x_0_7) mul sign((-10 add ((x_0_6 mod n) mod relu(x_0_4)))))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 10 - 10 - 7 + 2 - 10 - 10 - 13 + 2 - 10 - 10 - 17 + 2 - 10 - 10 - 20 + 2 - 10 - 10 - 23 + 2 - 10 - 10 - 25 + 2 - 10 - 10 - 27 + 2", "x2": "add x_0_4 idiv mul x_0_2 abs sqr abs relu x_0_3 n", "tree": "(x_0_4 add ((x_0_2 mul abs((abs(relu(x_0_3)))**2)) idiv n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 7 - 1 - 9 - 7 - 10 - 325 - 10 - 15 - 230 - 305 - 2 670 - 15 - 5 - 15 8705 - 83 7235 - 12 1145 - 5 - 5 - 2266 8549 3235 - 6 3086 6200 7035 - 5 - 5 - 235 - 4624 7681 5588 7570 7688 7035 - 7 6211 2652 9171 5291 3841 3215 - 5 - 5", "x2": "mul abs INT+ 5 idiv add sqr idiv mul INT- 3 abs x_0_5 sqr sign n INT+ 1 0 x_0_2", "tree": "(abs(5) mul (((((-3 mul abs(x_0_5)) idiv (sign(n))**2))**2 add 10) idiv x_0_2))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 1 + 6 + 6 + 8 - 10 + 0 + 54 + 104 + 91 + 90 - 15 + 28 + 183 + 222 + 98 + 0 - 72 + 280 + 1330 + 1374 + 525 + 28 - 195 + 574 + 1337 + 0 + 4788 + 280", "x2": "mul mod sub INT+ 7 n relu mul INT+ 1 INT+ 1 0 add INT+ 7 x_0_6", "tree": "(((7 sub n) mod relu((1 mul 10))) mul (7 add x_0_6))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 7 + 3 - 7 - 7 - 3 - 3 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1", "x2": "idiv x_0_5 sub x_0_2 INT- 1 0", "tree": "(x_0_5 idiv (x_0_2 sub -10))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 4 + 3 - 8 + 4 - 5 + 6 + 7 + 5 + 3 + 60 + 154 + 48 + 221 + 126 + 315 + 368 + 374 + 378 + 1501 + 3480 + 1449 + 5346 + 3427 + 8136 + 9825 + 1 400 + 1 935 + 4 2812 + 10 1761 + 4 4370 + 16 6687 + 11 688", "x2": "mul n add n x_0_9", "tree": "(n mul (n add x_0_9))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 5 + 2 + 6 + 8 + 15 + 18 + 28 + 32 + 45 + 50 + 66 + 72 + 91 + 98 + 120 + 128 + 153 + 162 + 190 + 200 + 231 + 242 + 276 + 288", "x2": "mul mod x_0_1 n n", "tree": "((x_0_1 mod n) mul n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 + 8 + 7 + 1 + 5 - 4 - 100 + 0 + 0 + 0 + 0 - 225 - 256 + 0 + 0 + 0 + 0 - 441 - 484 + 0 + 0 + 0 + 0 - 729 - 784 + 0 + 0 + 0 + 0", "x2": "mul idiv idiv sign x_0_6 n n sqr abs add n INT+ 3", "tree": "(((sign(x_0_6) idiv n) idiv n) mul (abs((n add 3)))**2)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 1 - 2 + 5 - 4 + 2 - 3 + 5 - 4 + 3 - 4 + 5 - 5 + 3 - 4 + 6 - 6 + 4 - 5 + 6 - 6 + 4 - 5 + 7 - 6", "x2": "idiv add n abs x_0_2 x_0_2", "tree": "((n add abs(x_0_2)) idiv x_0_2)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 8 - 14 - 26 - 50 - 98 - 194 - 386 - 770 - 1538 - 3074 - 6146 - 1 2290 - 2 4578 - 4 9154 - 9 8306 - 19 6610 - 39 3218 - 78 6434 - 157 2866 - 314 5730 - 629 1458 - 1258 2914 - 2516 5826 - 5033 1650", "x2": "mul INT+ 2 add abs sqr sign mul INT- 4 add idiv INT+ 1 0 n INT- 2 x_0_1", "tree": "(2 mul (abs((sign((-4 mul ((10 idiv n) add -2))))**2) add x_0_1))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 6 + 9 + 44 + 92 + 129 + 166 + 201 + 237 + 272 + 307 + 344 + 380 + 417 + 454 + 489 + 525 + 560 + 595 + 632 + 668 + 705 + 742 + 777 + 813 + 848", "x2": "add add add mul INT+ 7 INT+ 5 mod mod x_0_2 INT+ 3 x_0_2 x_0_1 relu idiv mul INT- 1 0 INT+ 8 x_0_3", "tree": "((((7 mul 5) add ((x_0_2 mod 3) mod x_0_2)) add x_0_1) add relu(((-10 mul 8) idiv x_0_3)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 2 - 10 - 9 + 10 + 147 + 98 + 245 + 98 + 147 + 392 + 147 + 98 + 196 + 0 + 588 + 98 + 441 + 0 + 882 + 882 + 0 + 0 + 392 + 882 + 0 + 0 + 686", "x2": "mul sqr INT- 7 mod x_0_4 n", "tree": "((-7)**2 mul (x_0_4 mod n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 1 - 4 - 1 - 6 + 90 + 112 + 176 + 126 + 1150 + 451 + 996 - 403 + 1 4602 - 1 200 + 9024 - 2 3460 + 27 432 - 47 877 + 38 4860 - 68 1765 + 646 6042 - 1704 9670 + 2053 8144 - 2666 5150 + 1 8584 3476 - 6 3492 3711 + 10 5245 9324", "x2": "mul n add add sub x_0_4 x_0_5 INT+ 1 0 INT+ 9", "tree": "(n mul (((x_0_4 sub x_0_5) add 10) add 9))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 5 - 10 - 1 - 7 + 2 + 2 - 42 + 312 - 2835 + 2 8260 - 31 376 + 372 792 - 4833 3987 + 6 7628 4546 - 101 3965 5075 + 1621 7540 688 - 2 7561 6541 309 + 49 5988 7123 7990 - 942 1868 1842 1138 + 1 8840 5063 8609 9920 - 39 5592 9675 6723 8406 + 870 1957 6791 7082 4288 - 2 12 3419 7159 970 9557 + 48 251 1091 4014 7634 3048 - 1200 5291 1015 5181 8814 4500 + 3 1211 4992 5356 9804 8892 3432 - 84 2656 5533 3316 2679 5421 1587 + 2359 3041 2267 7111 2781 6339 9156 - 6 8416 3438 2679 5948 8006 6396 2177", "x2": "mul n sub x_0_6 add mul n idiv mod n sign n INT+ 7 add x_0_4 x_0_1", "tree": "(n mul (x_0_6 sub ((n mul ((n mod sign(n)) idiv 7)) add (x_0_4 add x_0_1))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 2 + 6 + 8 + 30 + 48 + 210 + 384 + 1890 + 3840 + 2 790 + 4 6080 + 27 270 + 64 5120 + 405 4050 + 1032 1920 + 6891 8850 + 1 8579 4560 + 13 945 8150 + 37 1589 1200 + 274 9862 1150 + 817 4960 6400 + 6324 6828 6450 + 1 9619 9055 3600 + 15 8117 716 1250", "x2": "mul relu n x_0_2", "tree": "(relu(n) mul x_0_2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 10 - 4 + 1 + 7 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign sub mod relu idiv sqr n n INT+ 9 x_0_4", "tree": "sign(((relu(((n)**2 idiv n)) mod 9) sub x_0_4))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 5 - 2 + 6 + 1 + 2 + 25 + 4 + 36 + 1 + 4 + 625 + 16 + 1296 + 1 + 16 + 39 625 + 256 + 167 9616 + 1 + 256 + 1525 8789 625 + 6 5536 + 2 8211 990 7456 + 1 + 6 5536 + 232 8306 4365 3869 6289 625 + 42 9496 7296 + 7 9586 6110 9946 4008 8439 1936", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 0 + 3 + 0 + 10 + 24 + 42 + 0 + 9 + 20 + 33 + 48 + 65 + 84 + 105 + 128 + 153 + 180 + 209 + 240 + 273 + 308 + 345", "x2": "mul mul sign abs INT+ 4 abs n mod INT- 8 n", "tree": "((sign(abs(4)) mul abs(n)) mul (-8 mod n))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 1 + 4 + 5 + 6 + 7 + 8 + 21 + 24 + 27 + 54 + 61 + 68 + 123 + 138 + 153 + 141 + 157 + 173 + 162 + 179 + 196 + 186 + 204 + 222", "x2": "add n relu abs idiv add relu x_0_3 abs x_0_3 idiv n INT+ 9", "tree": "(n add relu(abs(((relu(x_0_3) add abs(x_0_3)) idiv (n idiv 9)))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 - 9 - 6 + 4 - 1 - 3 - 5 + 2 + 3 + 1 + 11 + 7 + 6 + 5 + 13 + 15 + 14 + 25 + 22 + 22 + 21 + 30 + 33 + 33 + 45 + 43 + 44 + 44 + 54 + 58", "x2": "abs sub mod relu INT+ 2 relu n add idiv n INT- 1 0 abs add n x_0_7", "tree": "abs(((relu(2) mod relu(n)) sub ((n idiv -10) add abs((n add x_0_7)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 6 + 3 + 0 + 8 + 1 - 4 - 7 - 8 + 1 - 7 - 7 - 4 - 4 - 7 - 4 - 4 - 7 - 7 - 4 - 7 - 7 - 4 - 4 - 7 - 4 - 4 - 7", "x2": "sub sqr idiv x_0_5 INT- 3 INT+ 8", "tree": "(((x_0_5 idiv -3))**2 sub 8)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 5 + 1 + 0 + 6 - 491 - 134 + 11 - 1524 - 15 9071 - 5 3586 - 5309 - 87 7808 - 1 753 1979 - 4201 1406 - 477 8081 - 8 9887 5372 - 1243 696 7703 - 544 4678 2154 - 68 9954 8941 - 1 4382 59 5176 - 219 2774 9102 8067 - 105 4089 7025 118 - 14 5994 4555 9129 - 3313 6141 7128 5476 - 54 8193 7275 7016 7471 - 28 5025 8555 5631 9042 - 4 2571 9832 5042 133", "x2": "add sub INT+ 4 abs mul sqr add n n x_0_4 n", "tree": "((4 sub abs((((n add n))**2 mul x_0_4))) add n)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 10 + 18 - 9 + 19 - 8 + 20 - 7 + 21 - 6 + 22 - 5 + 23 - 4 + 24 - 3 + 25 - 2 + 26 - 1 + 27 + 0 + 28 + 1 + 29", "x2": "sub n add x_0_1 INT- 6", "tree": "(n sub (x_0_1 add -6))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 - 10 - 20 - 40 - 80 - 160 - 320 - 640 - 1280 - 2560 - 5120 - 1 240 - 2 480 - 4 960 - 8 1920 - 16 3840 - 32 7680 - 65 5360 - 131 720 - 262 1440 - 524 2880 - 1048 5760 - 2097 1520 - 4194 3040 - 8388 6080", "x2": "mul add sign mod INT+ 5 mod add INT+ 2 idiv relu x_0_2 n n idiv n n x_0_1", "tree": "((sign((5 mod ((2 add (relu(x_0_2) idiv n)) mod n))) add (n idiv n)) mul x_0_1)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 7 - 7 + 6 - 9 + 8 + 0 + 0 + 6 + 0 + 8 + 0 + 0 + 6 + 0 + 8 + 0 + 0 + 6 + 0 + 8 + 0 + 0 + 6 + 0 + 8 + 0 + 0", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 0 + 2 - 5 - 12 - 3 - 2 - 3 + 22 + 15 + 0 + 21 - 90 - 3 - 2 - 171 + 448 + 3 + 34 + 2733 - 6274 - 39 - 342 - 2 1867 + 3 7642 + 153 + 682", "x2": "sub sub mod n INT+ 2 mul x_0_4 mod mul INT+ 8 idiv abs INT+ 7 abs idiv INT+ 1 0 INT+ 6 n INT+ 3", "tree": "(((n mod 2) sub (x_0_4 mul ((8 mul (abs(7) idiv abs((10 idiv 6)))) mod n))) sub 3)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 5 + 18 + 80 + 450 + 2880 + 2 2050 + 18 4320 + 178 6050 + 1843 2000 + 2 1611 2050 + 26 5420 8000 + 365 2293 6450 + 5202 2476 8000 + 8 2176 6070 1250 + 133 1775 4060 8000 + 2374 9039 4266 1250 + 4 3149 5231 5699 2000 + 85 7340 3233 71 1250 + 1725 9809 2627 9680 0 + 3 7808 7082 5756 1366 1250 + 83 5374 7683 1936 5120 0 + 2000 806 6682 4996 2680 1250 + 4 8117 5866 5519 5430 9120 0 + 125 50 4167 6562 2667 5078 1250", "x2": "mul sqr abs n x_0_2", "tree": "((abs(n))**2 mul x_0_2)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529", "x2": "mul sqr relu n idiv INT+ 2 INT- 8", "tree": "((relu(n))**2 mul (2 idiv -8))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 3 + 1 - 8 - 6 - 8 + 9 + 9 + 9 + 9 + 4 + 5 + 5 + 4 + 9 + 9 + 8 + 6 + 3 + 3 + 3 + 8 + 8 + 9 + 8 + 4 + 3 + 9 + 4", "x2": "sub INT+ 9 relu mod add x_0_6 n x_0_4", "tree": "(9 sub relu(((x_0_6 add n) mod x_0_4)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 - 7 - 7 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11 - 12 - 12 - 13 - 13", "x2": "idiv n sub idiv INT- 1 relu sub n x_0_3 sign n", "tree": "(n idiv ((-1 idiv relu((n sub x_0_3))) sub sign(n)))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 12 + 18 + 26 + 36 + 48 + 62 + 78 + 96 + 116 + 138 + 162 + 188 + 216 + 246 + 278 + 312 + 348 + 386 + 426 + 468 + 512 + 558", "x2": "add add INT+ 6 n mul n relu n", "tree": "((6 add n) add (n mul relu(n)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 5 + 3 - 5 - 5 - 5 - 2 - 1 - 1 - 7 - 7 - 1 - 1 - 3 - 3 - 3 - 3 - 1 - 1 - 5 - 5 - 1 - 1 - 3 - 3 - 3 - 3 - 1 - 1", "x2": "idiv abs sub sub x_0_6 add abs add INT+ 2 INT+ 5 INT- 6 abs sign INT- 8 x_0_2", "tree": "(abs(((x_0_6 sub (abs((2 add 5)) add -6)) sub abs(sign(-8)))) idiv x_0_2)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 7 - 5 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv add x_0_3 relu idiv mod INT+ 1 n x_0_2 relu mul sub abs INT- 5 INT- 8 n", "tree": "((x_0_3 add relu(((1 mod n) idiv x_0_2))) idiv relu(((abs(-5) sub -8) mul n)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 4 - 1 + 3 + 2 - 3 + 28 - 16 - 4 + 12 + 8 - 12 + 112 - 64 - 16 + 48 + 32 - 48 + 448 - 256 - 64 + 192 + 128 - 192 + 1792 - 1024 - 256 + 768 + 512", "x2": "mul x_0_6 INT+ 4", "tree": "(x_0_6 mul 4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 10 - 24 + 112 + 290 - 1272 - 3962 + 2 480 + 7 1478 - 40 9400 - 157 2274 + 982 5888 + 4087 9462 - 2 7512 4472 - 12 2638 3410 + 88 398 3616 + 416 9703 6518 - 3169 4340 9528 - 1 5844 8738 6962 + 12 6777 3638 1920 + 66 5484 7025 3286 - 557 8204 80 3512 - 3061 2296 3165 98 + 2 6775 3792 3856 9728 + 15 3061 4815 8250 6150", "x2": "mul add n n sub n x_0_2", "tree": "((n add n) mul (n sub x_0_2))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 1 + 9 + 6 + 6 + 10 + 3 + 2 - 7 - 11 + 6 + 18 + 23 + 41 + 46 + 56 + 65 + 65 + 68 + 60 + 45 + 21 - 22 - 60 - 7 + 56 + 103", "x2": "sub abs sub add INT- 6 n x_0_2 sub x_0_4 add INT- 3 relu x_0_1", "tree": "(abs(((-6 add n) sub x_0_2)) sub (x_0_4 sub (-3 add relu(x_0_1))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 5 + 0 + 7 + 32 + 0 + 60 + 33 + 0 + 130 + 112 + 90 + 64 + 34 + 0 + 323 + 320 + 315 + 308 + 299", "x2": "mul mod sqr INT+ 6 abs n n", "tree": "(((6)**2 mod abs(n)) mul n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 - 8 - 2 + 3 + 8 + 2 + 3 + 8 + 2 + 3 + 8 + 2 + 3 + 8 + 2 + 3 + 8 + 2 + 3 + 8 + 2 + 3 + 8 + 2 + 3 + 8", "x2": "abs abs x_0_3", "tree": "abs(abs(x_0_3))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 9 + 10 - 6 + 0 - 10 - 6 - 1 + 5 + 27 + 54 + 47 + 63 + 79 + 114 + 116 + 142 + 184 + 250 + 249 + 295 + 357 + 462 + 467 + 543 + 651 + 826 + 834 + 960 + 1134 + 1418 + 1435", "x2": "relu add abs add INT- 8 mul INT- 8 INT- 2 abs add add x_0_8 add INT+ 2 x_0_4 mul INT+ 4 n", "tree": "relu((abs((-8 add (-8 mul -2))) add abs(((x_0_8 add (2 add x_0_4)) add (4 mul n)))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 5 + 9 + 7 - 10 - 2 - 35 + 72 + 63 - 100 - 22 - 420 + 936 + 882 - 1500 - 352 - 7140 + 1 6848 + 1 6758 - 3 0 - 7392 - 15 7080 + 38 7504 + 40 2192 - 75 0 - 19 2192 - 424 1160 + 1085 112 + 1166 3568", "x2": "mul x_0_5 add n sign n", "tree": "(x_0_5 mul (n add sign(n)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 2 - 2 - 3 - 3 + 6 + 2 + 7 - 1 - 1 - 2 - 2 + 7 + 3 + 8 + 0 + 0 - 1 - 1 + 8 + 4 + 9 + 1 + 1 + 0 + 0 + 9 + 5 + 10 + 2", "x2": "add add sub sign abs idiv n n n n x_0_7", "tree": "(((sign(abs((n idiv n))) sub n) add n) add x_0_7)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 7 - 8 - 1 + 8 - 7 - 2 + 5 + 7 + 10 + 3 + 10 + 9 + 4 + 7 + 9 + 12 + 5 + 12 + 11 + 6 + 9 + 11 + 14 + 7 + 14 + 13 + 8 + 11 + 13", "x2": "add mod INT+ 2 sub n x_0_4 abs x_0_7", "tree": "((2 mod (n sub x_0_4)) add abs(x_0_7))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 3 - 5 + 8 + 3 + 0 + 8 + 3 + 0 + 8 + 3 + 0 + 8 + 3 + 0 + 8 + 3 + 0 + 8 + 3 + 0 + 8 + 3 + 0 + 8 + 3", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 + 0 + 9 + 0 + 18 + 18 + 27 + 45 + 54 + 81 + 108 + 144 + 198 + 261 + 351 + 468 + 621 + 828 + 1098 + 1458 + 1935 + 2565 + 3402 + 4509 + 5976 + 7920", "x2": "add add x_0_3 x_0_2 INT+ 9", "tree": "((x_0_3 add x_0_2) add 9)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 6 - 8 + 7 + 9 + 6 - 3 - 3 + 3 - 3 - 3 - 3 + 3 + 3 - 3 + 3 + 3 + 3 - 3 - 3 + 3 - 3 - 3 - 3 + 3 + 3 - 3 + 3 + 3", "x2": "mul INT- 3 sign mod mul mul n x_0_1 x_0_3 idiv mul INT- 4 INT- 7 x_0_6", "tree": "(-3 mul sign((((n mul x_0_1) mul x_0_3) mod ((-4 mul -7) idiv x_0_6))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 2 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13", "x2": "abs abs sub n x_0_1", "tree": "abs(abs((n sub x_0_1)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 9 - 2 + 5 + 4 + 2 + 2 + 1 + 5 + 8 + 10 + 1 + 2 + 2 + 6 + 1 + 15 + 12 + 14 + 1 + 5 + 6 + 10 + 1 + 16 + 12 + 18", "x2": "mod abs sub mod mod idiv idiv INT- 9 n n x_0_4 sub x_0_3 n sign n n", "tree": "(abs((((((-9 idiv n) idiv n) mod x_0_4) mod (x_0_3 sub n)) sub sign(n))) mod n)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 9 - 12 - 17 - 22 - 27 - 34 - 41 - 48 - 57 - 66 - 75 - 86 - 97 - 108 - 121 - 134 - 147 - 162 - 177 - 192 - 209 - 226 - 243", "x2": "idiv relu sqr add abs INT- 4 n INT- 3", "tree": "(relu(((abs(-4) add n))**2) idiv -3)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 1 - 36 - 54 - 18 - 540 + 36 + 108 + 108 - 54 + 108 - 180 + 36 - 54 - 2484 + 36 + 108 - 342 - 4500 - 54 - 1692 - 1044 - 5724 - 1044 - 8604", "x2": "mul add INT- 9 INT- 9 sub sqr abs mod x_0_3 n mod INT+ 6 n", "tree": "((-9 add -9) mul ((abs((x_0_3 mod n)))**2 sub (6 mod n)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 9 - 1 + 8 - 2 - 3 + 11 + 3 - 6 + 4 + 5 - 9 - 1 + 8 - 2 - 3 + 11 + 3 - 6 + 4 + 5 - 9 - 1 + 8 - 2 - 3 + 11 + 3", "x2": "mul idiv n n add INT+ 1 sub INT+ 1 x_0_5", "tree": "((n idiv n) mul (1 add (1 sub x_0_5)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 3 - 5 - 6 - 2 - 6 - 2 + 1764 + 3136 + 5184 + 8100 + 1 2100 + 1 7424 + 3 3124 + 4 4100 + 5 7600 + 7 3984 + 9 3636 + 11 6964 + 14 4400 + 17 6400 + 21 3444 + 25 6036 + 30 4704 + 36 0 + 42 2500 + 49 2804 + 57 1536 + 65 9344 + 75 6900", "x2": "sqr add idiv sqr n sign x_0_6 relu n", "tree": "((((n)**2 idiv sign(x_0_6)) add relu(n)))**2", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 1 + 1 + 1 + 16 + 1 + 0 + 1 + 16 + 81 + 25 + 1 + 100 + 49 + 16 + 1 + 225 + 169 + 121 + 81 + 49 + 25 + 9", "x2": "sqr mod relu sqr INT- 7 relu relu n", "tree": "((relu((-7)**2) mod relu(relu(n))))**2", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225 + 1296 + 1369 + 1444 + 1521", "x2": "sqr sub INT- 1 0 sub mod add INT- 2 abs n x_0_1 INT- 7", "tree": "((-10 sub (((-2 add abs(n)) mod x_0_1) sub -7)))**2", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 36 + 576 + 2916 + 9216 + 2 2500 + 4 6656 + 8 6436 + 14 7456 + 23 6196 + 36 0 + 52 7076 + 74 6496 + 102 8196 + 138 2976 + 182 2500 + 235 9296 + 300 6756 + 377 9136 + 469 1556 + 576 0 + 700 1316 + 843 3216 + 1007 4276", "x2": "mul relu n mul sqr mul INT+ 6 n n", "tree": "(relu(n) mul (((6 mul n))**2 mul n))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 - 4 + 2 + 10 + 21 + 34 + 49 + 66 + 85 + 107 + 131 + 157 + 185 + 215 + 248 + 283 + 320 + 359 + 400 + 444 + 490 + 538 + 588 + 640", "x2": "add add add x_0_1 idiv n INT+ 5 n n", "tree": "(((x_0_1 add (n idiv 5)) add n) add n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 + 0 + 6 - 4 - 6 + 9 - 8 - 1 + 19 + 26 + 21 + 28 + 23 + 24 + 34 + 26 + 27 + 47 + 55 + 51 + 59 + 55 + 57 + 68 + 61 + 63 + 84 + 93 + 90 + 99 + 96", "x2": "sub sub add n relu x_0_9 sub sub abs n add n INT- 6 abs INT- 9 INT- 6", "tree": "(((n add relu(x_0_9)) sub ((abs(n) sub (n add -6)) sub abs(-9))) sub -6)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841", "x2": "sqr relu sqr relu n", "tree": "(relu((relu(n))**2))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 - 9 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 4 + 6 + 0 + 2 + 3 + 0 + 6 + 0 + 4 + 1 + 4 + 5 + 0 + 6 + 0 + 4 + 1 + 4 + 5 + 0 + 6 + 0 + 4", "x2": "idiv mod mul n relu add x_0_1 INT+ 8 INT- 7 INT- 1", "tree": "(((n mul relu((x_0_1 add 8))) mod -7) idiv -1)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 2 - 5 + 3 + 2 + 5 - 3 - 2 - 5 + 3 + 2 + 5 - 3 - 2 - 5 + 3 + 2 + 5 - 3 - 2 - 5 + 3 + 2 + 5 - 3 - 2 - 5", "x2": "idiv x_0_3 sign add INT- 9 x_0_1", "tree": "(x_0_3 idiv sign((-9 add x_0_1)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 7 + 6 + 10 + 0 + 6 - 7 + 8 + 9 - 10 + 11 - 12 + 13 - 14 + 15 - 16 + 17 - 18 + 19 - 20 + 21 - 22 + 23 - 24 + 25 - 26 + 27 - 28", "x2": "mul n sub add n sign add x_0_5 sub idiv x_0_1 n x_0_1 n", "tree": "(n mul ((n add sign((x_0_5 add ((x_0_1 idiv n) sub x_0_1)))) sub n))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 2 + 5 - 1 + 0 + 9 + 1 + 4 + 9 + 1 + 4 + 9 + 1 + 4 + 9 + 1 + 4 + 9 + 1 + 4 + 9 + 1 + 4 + 9 + 1 + 4 + 9", "x2": "sqr add mod n INT+ 3 sign x_0_3", "tree": "(((n mod 3) add sign(x_0_3)))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 3 + 8 + 10 + 7 - 43 - 54 - 59 - 67 - 75 - 126 - 145 - 158 - 174 - 190 - 249 - 276 - 297 - 321 - 345 - 412 - 447 - 476 - 508 - 540 - 615 - 658 - 695", "x2": "sub mod INT+ 5 x_0_5 mul mod INT+ 8 INT+ 1 0 n", "tree": "((5 mod x_0_5) sub ((8 mod 10) mul n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 10 + 0 + 640 + 0 - 13 8240 + 0 + 7077 8880 + 0 - 707 7888 0 + 0 + 122 3059 464 0 + 0 - 33 5607 4023 3216 0 + 0 + 13 7464 7919 9525 2736 0 + 0 - 8 169 4666 9163 1395 6352 0 + 0 + 6 4135 5733 5330 5116 5081 6000 0 + 0 - 6 8291 5585 659 9288 578 8876 8000 0 + 0 + 9 4406 2504 7952 2855 8112 2543 2883 2000 0 + 0", "x2": "mul idiv x_0_2 INT- 1 relu mul relu sqr n n", "tree": "((x_0_2 idiv -1) mul relu((relu((n)**2) mul n)))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 9 - 4 + 9 + 8 + 7 - 11 - 10 + 3 - 10 - 9 - 8 + 10 + 9 - 4 + 9 + 8 + 7 - 11 - 10 + 3 - 10 - 9 - 8 + 10 + 9 - 4 + 9 + 8", "x2": "sub idiv INT+ 1 0 INT- 1 0 x_0_6", "tree": "((10 idiv -10) sub x_0_6)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 12 + 230 + 1382 + 5120 + 1 4400 + 3 3868 + 7 246 + 13 2710 + 23 3280 + 38 7200 + 61 3324 + 93 4502 + 137 7958 + 197 5680 + 276 4800 + 378 7980 + 509 3798 + 673 7126 + 877 9520 + 1128 9600 + 1434 3436 + 1802 4934 + 2242 6214", "x2": "idiv mul n mul INT- 4 mul INT- 8 sqr add mul n n n INT+ 1 0", "tree": "((n mul (-4 mul (-8 mul (((n mul n) add n))**2))) idiv 10)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 10 + 5 + 9 + 10 - 6 + 1 + 3 + 43 + 32 + 70 + 60 + 116 + 101 + 157 + 104 + 173 + 84 + 165 + 22 + 120 - 77 + 76 - 188 + 56 - 287 + 102 - 337 + 251 - 339 + 515", "x2": "add sub add n sub add n sqr INT+ 4 relu mod x_0_5 mod x_0_4 INT- 6 x_0_7 x_0_2", "tree": "(((n add ((n add (4)**2) sub relu((x_0_5 mod (x_0_4 mod -6))))) sub x_0_7) add x_0_2)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 2 + 3 + 10 + 3 + 17 + 3 + 17 + 3 + 24 + 3 + 31 + 3 + 31 + 3 + 38 + 3 + 45 + 3 + 45 + 3 + 52 + 3 + 59 + 3 + 59", "x2": "abs add mul idiv mul n abs idiv x_0_3 x_0_3 x_0_1 relu INT+ 7 INT+ 3", "tree": "abs(((((n mul abs((x_0_3 idiv x_0_3))) idiv x_0_1) mul relu(7)) add 3))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 5 + 9 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1", "x2": "idiv sign x_0_3 n", "tree": "(sign(x_0_3) idiv n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 70 + 300 - 1550 + 7700 - 3 8550 + 19 2700 - 96 3550 + 481 7700 - 2408 8550 + 1 2044 2700 - 6 221 3550 + 30 1106 7700 - 150 5533 8550 + 752 7669 2700 - 3763 8346 3550 + 1 8819 1731 7700 - 9 4095 8658 8550 + 47 479 3294 2700 - 235 2396 6471 3550 + 1176 1983 2356 7700 - 5880 9916 1783 8550 + 2 9404 9580 8919 2700 - 14 7024 7904 4596 3550", "x2": "mul sub n add abs INT- 1 0 add x_0_1 n INT+ 5", "tree": "((n sub (abs(-10) add (x_0_1 add n))) mul 5)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 6 + 7 + 5 + 2 + 10 + 1 - 4 - 10 + 11 + 12 + 4 + 12 + 1 + 12 + 8 + 17 + 11 + 9 + 4 + 19 + 6 + 15 + 0 + 10 + 21 + 11 + 0 + 13 + 1 + 36 + 1", "x2": "abs sub x_0_5 sub abs relu x_0_7 add x_0_8 mul n mul x_0_7 idiv INT+ 3 n", "tree": "abs((x_0_5 sub (abs(relu(x_0_7)) sub (x_0_8 add (n mul (x_0_7 mul (3 idiv n)))))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 3 - 8 - 1 + 1 + 0 - 2 - 5 - 3 - 8 - 5 + 12 + 13 - 182 - 210 + 16 + 17 - 306 - 342 - 380 - 420 - 462 + 23 + 24 - 600 - 650 + 27 + 28 - 812 - 870 - 930 - 992 - 1056 + 34", "x2": "add sub x_0_11 mod x_0_11 sqr n n", "tree": "((x_0_11 sub (x_0_11 mod (n)**2)) add n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 9 - 2 + 0 - 8 - 2 - 10 + 9 + 2 + 7 + 0 + 6 - 5 + 98 + 81 - 4 + 47 - 10 + 45 + 27 + 9611 + 6561 + 22 + 2204 + 198 + 2106 + 725 + 9237 1368 + 4304 6711 + 529 + 485 7643 + 4 8815 + 444 1797 + 52 5647 + 8532 4696 2619 3628", "x2": "add abs sqr x_0_7 x_0_11", "tree": "(abs((x_0_7)**2) add x_0_11)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 6 - 2 + 1 + 12 - 3 + 6 + 1 + 56 - 8 + 2 + 49 - 10 + 3 + 51 - 11 + 7 + 24 - 5 + 53 - 13 + 12 + 18 + 6 + 72", "x2": "mul sub n idiv mul n n idiv abs x_0_1 INT+ 1 sign INT- 6", "tree": "((n sub ((n mul n) idiv (abs(x_0_1) idiv 1))) mul sign(-6))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 2 - 10 + 8 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0", "x2": "relu relu mod x_0_3 idiv relu n sign idiv n n", "tree": "relu(relu((x_0_3 mod (relu(n) idiv sign((n idiv n))))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 1 + 8 + 9 - 8 - 9 + 8 + 9 - 8 - 9 + 8 + 9 - 8 - 9 + 8 + 9 - 8 - 9 + 8 + 9 - 8 - 9 + 8 + 9 - 8 - 9 + 8", "x2": "sub relu mul idiv n sub add abs abs x_0_3 x_0_3 sub INT+ 6 INT+ 9 sign INT- 1 x_0_2", "tree": "(relu(((n idiv ((abs(abs(x_0_3)) add x_0_3) sub (6 sub 9))) mul sign(-1))) sub x_0_2)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 + 9 + 10 - 7 + 4 + 2 + 2 + 0 + 0 + 4 + 1 + 2 + 0 + 0 + 4 + 0 + 2 + 0 + 0 + 4 + 0 + 2 + 0 + 0 + 4 + 0 + 2 + 0", "x2": "mod add abs INT- 4 x_0_2 sub mod x_0_5 n sign INT- 9", "tree": "((abs(-4) add x_0_2) mod ((x_0_5 mod n) sub sign(-9)))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 5 - 9 - 9 + 10 + 8 - 7 - 31 - 65 - 103 - 98 - 92 - 131 - 245 - 485 - 869 - 1265 - 1655 - 2239 - 3379 - 5722 - 1 108 - 1 6792 - 2 5928 - 3 8837 - 5 9147 - 9 4953 - 16 687 - 27 4066 - 45 5596", "x2": "add add x_0_1 sub sign x_0_6 relu INT+ 4 sub mul idiv x_0_6 INT+ 4 abs add n INT- 1 n", "tree": "((x_0_1 add (sign(x_0_6) sub relu(4))) add (((x_0_6 idiv 4) mul abs((n add -1))) sub n))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr mod n sqr INT+ 9", "tree": "((n mod (9)**2))**2", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 6 + 6 + 2 + 9 + 18 - 14 - 16 + 18 - 50 - 154 + 216 + 260 - 196 + 810 + 2528 - 3604 - 4608 + 3800 - 1 6120 - 5 3004 + 7 9376 + 10 6076 - 9 1104 + 40 3100 + 137 8208 - 214 3044 - 297 16", "x2": "mul sub INT+ 4 x_0_5 relu n", "tree": "((4 sub x_0_5) mul relu(n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 10 + 6 + 0 - 3 - 5 - 10 - 1 - 5 - 2 - 1 + 117 + 131 + 172 + 185 + 219 + 256 + 133 + 148 + 190 + 204 + 239 + 277 + 155 + 171 + 214 + 229 + 265 + 304 + 183 + 200 + 244 + 260 + 297", "x2": "add mod sub x_0_6 INT+ 1 mod INT- 8 sub sqr n mod x_0_10 n n", "tree": "(((x_0_6 sub 1) mod (-8 mod ((n)**2 sub (x_0_10 mod n)))) add n)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 1 + 2 - 9 + 7 - 10 - 4 + 0 + 2 + 0 + 7 + 0 + 0 + 0 + 2 + 0 + 7 + 0 + 0 + 0 + 2 + 0 + 7 + 0 + 0 + 0 + 2 + 0 + 7 + 0", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 3 + 6 + 10 + 15 + 21 + 28 + 36 + 45 + 55 + 66 + 78 + 91 + 105 + 120 + 136 + 153 + 171 + 190 + 210 + 231 + 253 + 276 + 300", "x2": "mul add x_0_1 n sign x_0_1", "tree": "((x_0_1 add n) mul sign(x_0_1))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 - 39 - 345 - 3099 - 2 7885 - 25 959 - 225 8625 - 2032 7619 - 1 8294 8565 - 16 4653 7079 - 148 1883 3705 - 1333 6950 3339 - 1 2003 2553 45 - 10 8029 2977 399 - 97 2263 6793 3585 - 875 373 1140 2259 - 7875 3358 262 325 - 7 878 222 2358 2919 - 63 7902 2000 1224 6265 - 574 1119 8001 1021 6379 - 5167 78 2009 9194 7405 - 4 6503 703 8089 2752 6639 - 41 8527 6334 2803 4773 9745 - 376 6748 7008 5231 2965 7699", "x2": "add sub INT+ 9 mul sign INT+ 8 INT+ 3 mul sub abs mod n sign n INT- 9 x_0_1", "tree": "((9 sub (sign(8) mul 3)) add ((abs((n mod sign(n))) sub -9) mul x_0_1))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 6 + 9 + 9 + 9 - 9 - 10 + 8 + 16 + 17 + 18 + 12 + 13 + 20 + 29 + 31 + 33 + 28 + 30 + 38 + 48 + 51 + 54 + 50 + 53 + 62 + 73 + 77 + 81 + 78", "x2": "add sign mul x_0_6 INT- 8 add n relu x_0_6", "tree": "(sign((x_0_6 mul -8)) add (n add relu(x_0_6)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 9 + 7 - 7 - 9 - 5 - 10 - 2 + 1 + 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign mul n idiv mod x_0_7 x_0_3 mul idiv n mod n add INT- 2 mul INT+ 3 x_0_8 n", "tree": "sign((n mul ((x_0_7 mod x_0_3) idiv ((n idiv (n mod (-2 add (3 mul x_0_8)))) mul n))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 9 + 1 + 5 - 4 - 1 - 11 - 9 - 20 - 19 - 31 - 31 - 44 - 45 - 59 - 61 - 76 - 79 - 95 - 99 - 116 - 121 - 139 - 145 - 164", "x2": "add x_0_2 idiv n INT- 1", "tree": "(x_0_2 add (n idiv -1))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3599 - 4354 - 5181 - 6080 - 7051 - 8094 - 9209 - 1 396 - 1 1655 - 1 2986 - 1 4389 - 1 5864 - 1 7411 - 1 9030 - 2 721 - 2 2484 - 2 4319 - 2 6226 - 2 8205 - 3 256 - 3 2379 - 3 4574 - 3 6841", "x2": "sub n sqr mul INT- 6 abs add INT+ 9 n", "tree": "(n sub ((-6 mul abs((9 add n))))**2)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 1 - 9 - 2 + 0 - 1 + 10 - 3 + 27 - 6 + 0 - 3 + 30 + 9 + 81 + 18 + 0 - 9 + 90 - 27 - 243 - 54 + 0 - 27 + 270 + 81 - 729 - 162 + 0 - 81", "x2": "mul mul sign sub x_0_7 sign idiv mul mul sub n INT- 6 INT- 2 x_0_7 INT+ 4 x_0_6 INT- 3", "tree": "((sign((x_0_7 sub sign(((((n sub -6) mul -2) mul x_0_7) idiv 4)))) mul x_0_6) mul -3)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 4 + 10 + 0 - 8 + 4 - 2 + 9 + 10 + 1 - 4 + 10 + 0 + 8 + 4 - 2 + 9 + 10 + 1 - 4 + 10 + 0 - 8 + 4 - 2 + 9 + 10 + 1 - 4 + 10 + 0 + 8 + 4", "x2": "mul sign mod idiv INT+ 3 add sqr n x_0_9 x_0_1 x_0_9", "tree": "(sign(((3 idiv ((n)**2 add x_0_9)) mod x_0_1)) mul x_0_9)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 8 - 10 + 0 - 6 + 1 - 7 - 6 + 4 + 2 - 10 + 9 + 15 + 7 + 8 + 16 + 20 + 5 + 15 + 1 + 9 + 13 + 22 + 25 + 9 + 23 + 26 + 9 + 0 + 28 + 17 + 12 + 29 + 35", "x2": "mod add x_0_8 sub INT- 4 x_0_11 sub n INT- 4", "tree": "((x_0_8 add (-4 sub x_0_11)) mod (n sub -4))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 4 + 16 + 96 + 768 + 7680 + 4 6080 + 36 8640 + 368 6400 + 4423 6800 + 6 1931 5200 + 99 904 3200 + 1189 851 8400 + 1 6647 1925 7600 + 26 6355 812 1600 + 479 4391 4618 8800 + 9588 7829 2377 6000 + 21 953 2243 2307 2000 + 379 7158 378 1529 6000 + 7594 3160 7563 592 0 + 16 7074 9536 6387 3024 0 + 400 9798 8879 3295 2576 0 + 1 425 4771 862 5676 6976 0 + 29 1913 3590 4151 8947 5328 0 + 700 5920 6169 9645 4740 7872 0", "x2": "mul x_0_1 add n mod n add INT+ 3 relu INT+ 3", "tree": "(x_0_1 mul (n add (n mod (3 add relu(3)))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 10 + 5 - 2 + 10 - 8 - 2 + 0 + 3 + 1 - 1 + 3 - 3 - 1 + 0 + 1 + 0 - 1 + 1 - 1 - 1 + 0 + 0 + 0 - 1 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_7 INT+ 3", "tree": "(x_0_7 idiv 3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 1 + 10 + 0 + 2 + 2 + 11 + 1 + 3 + 3 + 12 + 2 + 4 + 4 + 13 + 3 + 5 + 5 + 14 + 4 + 6 + 6 + 15 + 5 + 7 + 7 + 16", "x2": "add relu relu x_0_4 idiv n n", "tree": "(relu(relu(x_0_4)) add (n idiv n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 6 - 1 + 0 - 7 - 14 - 13 - 20 - 27 - 26 - 33 - 40 - 39 - 46 - 53 - 52 - 59 - 66 - 65 - 72 - 79 - 78 - 85 - 92 - 91 - 98 - 105", "x2": "sub mod relu x_0_4 INT+ 1 sub INT+ 7 add sub x_0_3 sign mul INT- 8 n INT- 7", "tree": "((relu(x_0_4) mod 1) sub (7 sub ((x_0_3 sub sign((-8 mul n))) add -7)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 1 - 1 - 2 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 6 - 6 - 6 - 7 - 7 - 7 - 8 - 8 - 8", "x2": "idiv n add INT- 8 sub INT+ 5 mul INT- 8 mod abs x_0_1 abs idiv x_0_1 n", "tree": "(n idiv (-8 add (5 sub (-8 mul (abs(x_0_1) mod abs((x_0_1 idiv n)))))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 36 + 324 + 2916 + 2 6244 + 23 6196 + 212 5764 + 1913 1876 + 1 7218 6884 + 15 4968 1956 + 139 4713 7604 + 1255 2423 8436 + 1 1297 1814 5924 + 10 1674 6331 3316 + 91 5071 6981 9844 + 823 5645 2837 8596 + 7412 807 5540 7364 + 6 6708 7267 9866 6276 + 60 378 5411 8799 6484 + 540 3406 8706 9196 8356 + 4863 661 8362 2771 5204 + 4 3767 5956 5260 4943 6836 + 39 3908 3608 7344 4493 1524 + 354 5175 2478 6100 438 3716", "x2": "mul INT+ 9 x_0_1", "tree": "(9 mul x_0_1)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 4 + 8 + 16 + 24 + 36 + 48 + 64 + 80 + 100 + 120 + 144 + 168 + 196 + 224 + 256 + 288 + 324 + 360 + 400 + 440 + 484 + 528", "x2": "add sqr n mod n INT- 2", "tree": "((n)**2 add (n mod -2))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr abs relu n", "tree": "(abs(relu(n)))**2", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 8 + 4 - 5 - 2 - 6 - 6 + 6 + 10 + 7 + 4 - 134 - 155 - 186 - 224 - 252 - 289 - 324 - 349 - 384 - 428 - 474 - 657 - 725 - 805 - 894 - 975 - 1067 - 1159 - 1243 - 1339 - 1446 - 1557 - 1807", "x2": "sub sub idiv x_0_11 INT+ 1 sqr n INT- 6", "tree": "(((x_0_11 idiv 1) sub (n)**2) sub -6)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 1 - 2 + 7 + 15 + 13 + 12 + 3 - 12 - 9 - 7 + 4 + 19 + 17 + 16 + 7 - 16 - 13 - 11 - 1 + 23 + 21 + 20 + 35 - 20 - 17 - 15", "x2": "add abs INT- 1 0 add idiv n sqr x_0_4 sub mod n INT- 8 x_0_4", "tree": "(abs(-10) add ((n idiv (x_0_4)**2) add ((n mod -8) sub x_0_4)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000 + 5 1218 9896 4582 4000 + 97 3160 8032 7065 6000 + 1946 3216 654 1312 0 + 4 872 7537 3736 7552 0 + 89 9200 5822 2208 6144 0 + 2068 1613 3911 798 1312 0 + 4 9635 8721 3865 9155 1488 0", "x2": "mul relu abs n x_0_1", "tree": "(relu(abs(n)) mul x_0_1)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr sub sign n n", "tree": "((sign(n) sub n))**2", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 + 8 + 6 + 8 + 8 + 6 + 8 + 8 + 6 + 8 + 8 + 6 + 8 + 8 + 6 + 8 + 8 + 6 + 8 + 8 + 6 + 8 + 8 + 6 + 8", "x2": "abs relu abs mul idiv sub sign mod x_0_3 n INT+ 7 x_0_3 x_0_3", "tree": "abs(relu(abs((((sign((x_0_3 mod n)) sub 7) idiv x_0_3) mul x_0_3))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 3 + 10 + 2 + 8 + 5 - 4 + 4 - 9 + 6 + 9 + 3 + 3 + 7 + 9 + 11 + 2 + 9 + 18 + 14 + 0 + 6 + 17 + 0 + 8 + 11 + 0 + 0 + 10 + 0 + 0 + 6 + 0 + 0", "x2": "mod abs mul add x_0_3 mul idiv x_0_11 INT- 7 n INT+ 7 n", "tree": "(abs(((x_0_3 add ((x_0_11 idiv -7) mul n)) mul 7)) mod n)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 3 + 4 + 8 - 2 + 1 - 9 + 2 + 5 + 10 + 3 + 4 + 8 + 2 + 1 + 9 + 2 + 5 + 10 + 3 + 4 + 8 + 2 + 1 + 9 + 2 + 5 + 10 + 3 + 4 + 8 + 2 + 1", "x2": "abs idiv x_0_9 sign abs mod n sign idiv idiv x_0_8 idiv n INT- 2 INT- 5", "tree": "abs((x_0_9 idiv sign(abs((n mod sign(((x_0_8 idiv (n idiv -2)) idiv -5)))))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 7 + 10 - 3 + 9 + 10 - 6 - 7 - 6 + 10 + 5 - 7 + 10 - 3 + 9 + 10 - 6 - 7 - 6 + 10 + 5 - 7 + 10 - 3 + 9 + 10 - 6 - 7 - 6 + 10 + 5 - 7 + 10 - 3", "x2": "sub x_0_10 sub add INT+ 8 idiv abs INT- 8 add idiv x_0_2 sub INT- 4 sub n sqr n INT- 5 INT+ 6", "tree": "(x_0_10 sub ((8 add (abs(-8) idiv ((x_0_2 idiv (-4 sub (n sub (n)**2))) add -5))) sub 6))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 7 + 9 - 6 + 9 - 1 + 4 + 9 + 81 + 36 + 81 + 169 + 16 + 81 + 169 + 0 + 25 + 81 + 256 + 225 + 64 + 0 + 0 + 9 + 169 + 1 + 36 + 0 + 0 + 81", "x2": "sqr relu mod x_0_6 add n INT+ 3", "tree": "(relu((x_0_6 mod (n add 3))))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 2 - 7 - 1 - 6 + 9 - 7 - 1 + 1 + 10 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 52 - 2349 - 6608 - 1 1513 - 1 7100 - 2 3405 - 3 464 - 3 8313", "x2": "mul n mod n mul sub INT+ 7 sign sign x_0_9 sub mul INT+ 1 0 n abs x_0_10", "tree": "(n mul (n mod ((7 sub sign(sign(x_0_9))) mul ((10 mul n) sub abs(x_0_10)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 8 - 9 - 10 + 0 + 10 - 1 - 17 - 9 - 11 - 7 - 20 - 29 - 33 - 40 - 47 - 60 - 89 - 109 - 133 - 176 - 216 - 282 - 374 - 458 - 591 - 766 - 956 - 1247 - 1598", "x2": "sub x_0_3 sub abs x_0_6 x_0_5", "tree": "(x_0_3 sub (abs(x_0_6) sub x_0_5))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 8 - 3 + 0 + 10 + 1 + 0 + 10 + 1 + 1 + 10 + 1 + 2 + 10 + 1 + 2 + 10 + 1 + 2 + 10 + 1 + 2 + 10 + 1 + 2 + 10 + 1 + 2 + 10", "x2": "add x_0_3 relu sign mul x_0_5 idiv idiv x_0_6 idiv x_0_5 INT- 1 0 n", "tree": "(x_0_3 add relu(sign((x_0_5 mul ((x_0_6 idiv (x_0_5 idiv -10)) idiv n)))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 7 - 1 - 7 - 3 + 1 - 6 + 0 - 6 - 2 + 2 - 5 + 1 - 5 - 1 + 3 - 4 + 2 - 4 + 0 + 4 - 3 + 3 - 3 + 1 + 5 - 2 + 4 - 2", "x2": "sub x_0_5 idiv n mul sqr n INT- 5", "tree": "(x_0_5 sub (n idiv ((n)**2 mul -5)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 5 - 6 + 4 + 120 - 120 - 4248 + 9828 + 20 3616 - 53 1036 - 1162 7640 + 4848 6636 + 8 3718 9648 - 37 8195 8076 - 662 5105 3512 + 4157 2329 4620 + 6 3601 113 6576 - 42 4037 7605 1852 - 641 9928 693 1896 + 5559 819 9948 108 + 7 7039 1368 3182 6800 - 70 444 3319 3449 4364 - 943 5367 2378 6976 4136 + 1 729 2718 6897 5231 9804 + 13 5869 2882 2532 4603 4720 - 160 9390 7803 4628 4797 1500 - 1952 1842 5515 9050 1952 7832", "x2": "mul mul mod n sqr x_0_2 sub x_0_2 mod INT- 6 sub INT+ 1 sub idiv n n x_0_3 INT- 6", "tree": "(((n mod (x_0_2)**2) mul (x_0_2 sub (-6 mod (1 sub ((n idiv n) sub x_0_3))))) mul -6)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 1 - 7 + 9 + 6 + 1 + 3 + 4 + 7 + 1 + 7 + 9 + 6 + 1 + 3 + 4 + 7 + 1 + 7 + 9 + 6 + 1 + 3 + 4 + 7 + 1 + 7 + 9 + 6 + 1 + 3", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 6 - 5 - 8 + 5 + 0 + 4 + 9 + 10 - 3 - 8 + 5 + 1 - 4 - 5 + 8 + 13 + 0 + 4 + 9 + 10 - 3 - 8 + 5 + 1 - 4 - 5 + 8 + 13 + 0 + 4 + 9 + 10 - 3", "x2": "idiv add INT+ 5 idiv x_0_6 sign INT- 5 sign abs add sign INT- 5 add INT+ 7 x_0_10", "tree": "((5 add (x_0_6 idiv sign(-5))) idiv sign(abs((sign(-5) add (7 add x_0_10)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 6 + 8 + 4 - 9 + 4 + 5 + 0 - 10 - 6 + 8 + 4 - 9 + 4 + 5 + 0 - 10 - 6 + 8 + 4 - 9 + 4 + 5 + 0 - 10 - 6 + 8 + 4 - 9 + 4 + 5 + 0", "x2": "mul x_0_8 sign abs idiv add n x_0_6 sqr sqr idiv n mod INT+ 7 INT+ 4", "tree": "(x_0_8 mul sign(abs(((n add x_0_6) idiv (((n idiv (7 mod 4)))**2)**2))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 6 - 1 - 5 + 7 + 8 - 4 - 26 - 26 - 30 + 71 + 735 - 103 - 37 - 45 - 48 + 4584 + 1450 - 140 - 55 - 63 - 66 + 8751 + 3175 - 210 - 72 - 81 - 84", "x2": "mod add n add sub mul INT- 4 n idiv x_0_1 n INT- 6 mul x_0_4 x_0_2", "tree": "((n add (((-4 mul n) sub (x_0_1 idiv n)) add -6)) mod (x_0_4 mul x_0_2))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 7 - 9 + 4 - 2 - 10 + 6 + 7 + 2 - 5 - 8 - 4 - 3 - 5 - 6 - 11 - 13 - 21 - 33 - 60 - 117 - 239 - 499 - 1047 - 2207 - 4660 - 9852 - 2 840 - 4 4097 - 9 3323 - 19 7514", "x2": "mod relu abs n add mod sign n add x_0_7 x_0_4 idiv mul x_0_1 add n n n", "tree": "(relu(abs(n)) mod ((sign(n) mod (x_0_7 add x_0_4)) add ((x_0_1 mul (n add n)) idiv n)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 2 - 1 + 4 + 4 - 6 - 2 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1", "x2": "idiv x_0_6 add sign sqr x_0_7 n", "tree": "(x_0_6 idiv (sign((x_0_7)**2) add n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 5 - 7 + 5 + 7 - 5 - 7 + 5 + 7 - 5 - 7 + 5 + 7 - 5 - 7 + 5 + 7 - 5 - 7 + 5 + 7 - 5 - 7 + 5 + 7 - 5", "x2": "sub relu sub x_0_2 sqr n x_0_2", "tree": "(relu((x_0_2 sub (n)**2)) sub x_0_2)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 2 - 5 + 0 - 3 - 10 + 2 + 7 - 7 - 2 + 103 + 29 - 94 + 14 + 125 - 1496 - 606 + 1575 + 1262 - 3745 + 2 7745 + 1 3417 - 3 1235 - 5 9669 + 11 2343 - 64 7265 - 33 149 + 69 6901 + 242 2829 - 373 2432 + 1831 8509 + 878 44 - 1665 9024", "x2": "sub sub idiv INT+ 1 0 mul mod sign INT- 1 0 n n x_0_3 add n mul n add x_0_9 x_0_5", "tree": "(((10 idiv ((sign(-10) mod n) mul n)) sub x_0_3) sub (n add (n mul (x_0_9 add x_0_5))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 1 + 8 + 2 - 3 + 2 + 8 - 10 + 3 - 4 + 3 + 852 + 1452 + 852 + 48 - 60 + 18 - 24 + 18 + 5112 + 9342 + 18 4242 + 30 5208 + 16 710 + 108 - 144 + 108 + 3 672 + 5 9832 + 217 9182 + 379 3068 + 3965 5080 + 6397 7988 + 3057 306", "x2": "mul add relu mul mul INT- 5 INT+ 7 sub idiv x_0_4 relu abs x_0_8 x_0_10 x_0_8 INT+ 6", "tree": "((relu(((-5 mul 7) mul ((x_0_4 idiv relu(abs(x_0_8))) sub x_0_10))) add x_0_8) mul 6)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 8 + 0 + 12 + 28 + 48 + 72 + 100 + 132 + 168 + 208 + 252 + 300 + 352 + 408 + 468 + 532 + 600 + 672 + 748 + 828 + 912 + 1000 + 1092 + 1188", "x2": "add mul INT+ 4 n x_0_1", "tree": "((4 mul n) add x_0_1)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 6 + 2 - 9 + 5 - 4 - 7 - 4 + 1 - 11 - 11 - 3 - 10 - 22 - 14 - 13 - 32 - 36 - 27 - 45 - 68 - 63 - 72 - 113 - 131 - 135 - 185 - 244", "x2": "add x_0_4 x_0_3", "tree": "(x_0_4 add x_0_3)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 4 - 6 - 6 + 9 - 7 - 4 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1", "x2": "idiv idiv x_0_4 add abs mul add INT+ 9 mod x_0_4 INT- 6 mod abs INT+ 1 0 add n x_0_6 x_0_4 INT+ 8", "tree": "((x_0_4 idiv (abs(((9 add (x_0_4 mod -6)) mul (abs(10) mod (n add x_0_6)))) add x_0_4)) idiv 8)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr abs abs sub INT- 1 n", "tree": "(abs(abs((-1 sub n))))**2", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 6 + 144 + 2304 + 2 736 + 18 6624 + 167 9616 + 1511 6544 + 1 3604 8896 + 12 2444 64 + 110 1996 576 + 991 7964 5184 + 8926 1680 6656 + 8 335 5125 9904 + 72 3019 6133 9136 + 650 7176 5205 2224 + 5856 4588 6847 16 + 5 2708 1298 1623 144 + 47 4373 1683 4607 1296 + 426 9358 5151 1464 1664 + 3842 4226 6360 3177 4976 + 3 4581 8039 7242 8597 4784 + 31 1236 2357 5185 7377 3056 + 280 1126 1217 6671 6395 7504 + 2521 135 959 44 7561 7536", "x2": "mul abs x_0_1 idiv mul add INT+ 5 x_0_2 INT+ 9 x_0_2", "tree": "(abs(x_0_1) mul (((5 add x_0_2) mul 9) idiv x_0_2))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 10 + 23 + 17 + 45 + 68 + 120 + 196 + 325 + 531 + 867 + 1410 + 2290 + 3714 + 6019 + 9749 + 1 5785 + 2 5552 + 4 1356 + 6 6928 + 10 8305 + 17 5255 + 28 3583 + 45 8862 + 74 2470", "x2": "add n add x_0_2 abs idiv mul x_0_1 n n", "tree": "(n add (x_0_2 add abs(((x_0_1 mul n) idiv n))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 2 + 8 - 2 + 7 - 5 + 2 - 8 + 2 - 7 + 5 - 2 + 8 - 2 + 7 - 5 + 2 - 8 + 2 - 7 + 5 - 2 + 8 - 2 + 7 - 5 + 2 - 8", "x2": "sub idiv relu mul INT+ 1 0 INT- 4 n x_0_5", "tree": "((relu((10 mul -4)) idiv n) sub x_0_5)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 2 + 12 + 2 + 17 + 8 + 24 + 16 + 33 + 26 + 44 + 38 + 57 + 52 + 72 + 68 + 89 + 86 + 108 + 106 + 129 + 128 + 152 + 152 + 177", "x2": "abs relu relu add n x_0_2", "tree": "abs(relu(relu((n add x_0_2))))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 23 + 71 + 151 + 263 + 407 + 583 + 791 + 1031 + 1303 + 1607 + 1943 + 2311 + 2711 + 3143 + 3607 + 4103 + 4631 + 5191 + 5783 + 6407 + 7063 + 7751 + 8471", "x2": "add mul sqr abs add n abs n sub INT+ 6 INT+ 2 relu INT+ 7", "tree": "(((abs((n add abs(n))))**2 mul (6 sub 2)) add relu(7))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 7 + 6 + 1 - 2 - 11 + 5 + 1 - 3 - 15 + 5 + 1 - 4 - 19 + 4 + 1 - 6 - 23 + 3 + 1 - 9 - 27 + 3 + 1 - 10 - 31", "x2": "idiv sub INT- 5 add n relu sign x_0_2 x_0_2", "tree": "((-5 sub (n add relu(sign(x_0_2)))) idiv x_0_2)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 1 + 0 + 1 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 21 + 22 + 23 + 24", "x2": "add n sub INT- 3 idiv add n INT+ 5 INT- 8", "tree": "(n add (-3 sub ((n add 5) idiv -8)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 10 + 8 - 10 + 4 + 10 - 2 - 1 + 8 + 7 + 2 - 2 + 1 - 2 + 3 + 1 - 9 - 18 + 2 + 2 + 10 - 11 + 23 - 12 + 8 + 26 - 3 - 2 + 14 + 15 + 3 - 3 + 1", "x2": "idiv abs n x_0_10", "tree": "(abs(n) idiv x_0_10)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 3 - 2 + 3 - 3 + 4 - 4 + 5 - 5 + 6 - 6 + 7 - 7 + 8 - 8 + 9 - 9 + 10 - 10 + 11 - 11 + 12 - 12 + 13", "x2": "mul sub mul idiv x_0_1 n sign x_0_1 x_0_1 INT+ 1", "tree": "((((x_0_1 idiv n) mul sign(x_0_1)) sub x_0_1) mul 1)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 10 + 1 - 5 + 6 + 0 + 59 + 5 - 1 + 58 + 4 + 259 + 57 + 3 + 258 + 56 + 2 + 257 + 55 + 1 + 256 + 54 + 0 + 255 + 53 - 1 + 254 + 52", "x2": "sub mod x_0_3 abs abs mul add sqr n add x_0_5 x_0_2 INT- 1 sign INT+ 1 0", "tree": "((x_0_3 mod abs(abs((((n)**2 add (x_0_5 add x_0_2)) mul -1)))) sub sign(10))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 6 + 2 - 4 - 7 - 6 - 9 - 11 - 11 - 9 - 18 - 20 - 22 - 27 - 29 - 27 - 34 - 45 - 49 - 56 - 63 - 63 - 68 - 86 - 101 - 112 - 126 - 133 - 138 - 161", "x2": "add x_0_7 add add INT- 8 abs sign abs mod n sqr mod sub x_0_3 n INT- 4 x_0_6", "tree": "(x_0_7 add ((-8 add abs(sign(abs((n mod (((x_0_3 sub n) mod -4))**2))))) add x_0_6))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 7 - 8 - 10 + 14 + 13 + 28 + 46 + 41 + 38 + 21 + 13 + 15 + 9 + 3 + 6 + 8 + 17 + 33 + 47 + 60 + 65 + 55 + 32 + 3 + 36 + 8", "x2": "abs sub add x_0_1 n x_0_4", "tree": "abs(((x_0_1 add n) sub x_0_4))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 10 - 8 - 5 + 8 - 9 - 1 + 7 + 1 + 1 - 2 - 2 + 1 - 2 - 15 + 2 + 17 + 18 - 7 - 10 + 21 - 11 - 2 + 12 + 1 + 1 - 4 - 3 + 1 - 3 - 11", "x2": "idiv n add x_0_8 idiv mod abs n x_0_8 n", "tree": "(n idiv (x_0_8 add ((abs(n) mod x_0_8) idiv n)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 4 - 5 + 10 - 7 + 5 - 6 + 4 - 10 - 4 + 6 - 6 - 1 + 6 + 1 + 6 - 1 + 17 + 2 + 21 + 8 + 16 + 13 + 27 + 7 + 20 + 12 + 33 - 5 + 23 - 4 + 30 - 16 + 15 - 26", "x2": "add x_0_4 sub INT- 5 add x_0_11 INT- 1 0", "tree": "(x_0_4 add (-5 sub (x_0_11 add -10)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 10 - 10 - 4 + 0 + 7 + 0 + 18 + 17 + 23 + 34 + 53 + 66 + 98 + 130 + 169 + 220 + 291 + 376 + 494 + 645 + 836 + 1079 + 1394 + 1795 + 2315 + 2987 + 3851 + 4959 + 6383", "x2": "add x_0_6 sub add x_0_1 n INT- 1", "tree": "(x_0_6 add ((x_0_1 add n) sub -1))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 9 + 12 + 16 + 21 + 27 + 34 + 42 + 51 + 61 + 72 + 84 + 97 + 111 + 126 + 142 + 159 + 177 + 196 + 216 + 237 + 259 + 282 + 306", "x2": "add x_0_1 mod n add sqr add abs n add x_0_1 x_0_1 INT+ 2", "tree": "(x_0_1 add (n mod (((abs(n) add (x_0_1 add x_0_1)))**2 add 2)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 3 + 1 + 0 + 0 + 1 + 3 + 1 + 0 + 0 + 1 + 3 + 1 + 0 + 0 + 1 + 3 + 1 + 0 + 0 + 1 + 3 + 1 + 0", "x2": "mod add x_0_1 n INT+ 5", "tree": "((x_0_1 add n) mod 5)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 - 6 - 7 + 4 - 7 + 500 + 600 + 700 + 400 + 700 + 5 0 + 6 0 + 7 0 + 4 0 + 7 0 + 500 0 + 600 0 + 700 0 + 400 0 + 700 0 + 5 0 0 + 6 0 0 + 7 0 0 + 4 0 0 + 7 0 0 + 500 0 0 + 600 0 0 + 700 0 0", "x2": "abs mul x_0_5 sqr INT+ 1 0", "tree": "abs((x_0_5 mul (10)**2))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 6 - 9 - 11 - 16 - 19 - 28 - 33 - 50 - 59 - 92 - 109 - 174 - 207 - 336 - 401 - 658 - 787 - 1300 - 1557 - 2582 - 3095 - 5144 - 6169 - 1 266 - 1 2315", "x2": "sub x_0_2 sub sub relu n add add sub x_0_2 idiv n n n INT- 1 n", "tree": "(x_0_2 sub ((relu(n) sub (((x_0_2 sub (n idiv n)) add n) add -1)) sub n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 5 - 2 + 3 + 17 + 9 - 4 + 5 + 33 + 17 - 8 + 9 + 65 + 33 - 16 + 17 + 129 + 65 - 32 + 33 + 257 + 129 - 64 + 65 + 513 + 257 - 128", "x2": "add x_0_4 add x_0_4 idiv INT- 1 x_0_4", "tree": "(x_0_4 add (x_0_4 add (-1 idiv x_0_4)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 5 + 2 - 8 + 0 - 2 - 3 + 7 + 3 - 288 - 968 - 512 - 32 - 288 - 128 - 72 - 1352 - 648 - 63 6192 - 740 3552 - 204 8288 - 5408 - 63 6192 - 11 9072 - 3 4848 - 1449 3728 - 329 7312 - 3 2378 6101 2768 - 438 4999 4699 2928 - 33 5636 7321 2192 - 2 3345 2832 - 3 2378 6101 2768", "x2": "mul sqr sub x_0_9 INT- 6 INT- 8", "tree": "(((x_0_9 sub -6))**2 mul -8)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 2 + 4 + 10 - 4 - 6 - 9 - 2 - 2 + 0 - 1 - 6 - 2 - 4 - 10 + 4 + 6 + 9 + 2 + 2 + 0 + 1 + 6 + 2 + 4 + 10 - 4 - 6 - 9 - 2 - 2 + 0 - 1 - 6", "x2": "add sub sub relu INT- 9 n x_0_11 n", "tree": "(((relu(-9) sub n) sub x_0_11) add n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 0 + 0 + 2 + 1 + 0 + 6 + 6 + 6 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 4 + 4 + 4 + 4", "x2": "mod sub INT+ 6 idiv sub n idiv n INT+ 3 INT+ 7 abs n", "tree": "((6 sub ((n sub (n idiv 3)) idiv 7)) mod abs(n))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 2 - 3 - 7 - 6 - 1 + 6 + 5 + 1 + 2 + 7 + 6 + 5 + 1 + 2 + 7 + 6 + 5 + 1 + 2 + 7 + 6 + 5 + 1 + 2 + 7 + 6 + 5 + 1", "x2": "mod x_0_5 INT+ 8", "tree": "(x_0_5 mod 8)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 - 9 + 2 - 5 - 8 + 3 - 4 - 7 + 4 - 3 - 6 + 5 - 2 - 5 + 6 - 1 - 4 + 7 + 0 - 3 + 8 + 1 - 2 + 9 + 2 - 1", "x2": "add x_0_3 INT+ 1", "tree": "(x_0_3 add 1)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 8 - 1 + 6 - 5 + 8 - 5 + 7 - 4 + 4 + 5 + 3 + 3 + 1 + 8 + 2 + 13 - 11 + 26 - 12 + 13 + 2 - 1 + 24 - 3 + 5 + 2", "x2": "sub mod mul sign n mul x_0_3 INT- 2 n add x_0_1 sub relu sign x_0_4 idiv n n", "tree": "(((sign(n) mul (x_0_3 mul -2)) mod n) sub (x_0_1 add (relu(sign(x_0_4)) sub (n idiv n))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 555 + 813 + 1152 + 1586 + 2134 + 2812 + 3640 + 4640 + 5832 + 7240 + 8888 + 1 804 + 1 3014 + 1 5546 + 1 8432 + 2 1701 + 2 5387 + 2 9524 + 3 4147 + 3 9293 + 4 5000 + 5 1306 + 5 8254", "x2": "idiv sqr sqr sub n INT- 9 mul INT+ 2 INT+ 9", "tree": "((((n sub -9))**2)**2 idiv (2 mul 9))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 + 6 - 7 + 7 + 0 + 0 + 42 + 0 + 63 + 0 + 0 + 504 + 0 + 882 + 0 + 0 + 8568 + 0 + 1 6758 + 0 + 0 + 18 8496 + 0 + 40 2192 + 0 + 0 + 508 9392 + 0", "x2": "mul n relu x_0_5", "tree": "(n mul relu(x_0_5))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 10 + 7 + 10 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign sqr mul add sqr sub sub mod sign INT- 1 0 sub x_0_3 x_0_1 n n x_0_4 INT- 3", "tree": "sign((((((((sign(-10) mod (x_0_3 sub x_0_1)) sub n) sub n))**2 add x_0_4) mul -3))**2)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 7 + 9 - 10 + 7 + 4 + 0 + 0 + 0 + 0 + 28 + 32 + 0 + 0 + 0 + 0 + 784 + 1024 + 0 + 0 + 0 + 0 + 4 768 + 5 7344 + 0 + 0 + 0 + 0 + 309 8368", "x2": "mul relu mul add abs n INT- 1 0 x_0_6 INT+ 4", "tree": "(relu(((abs(n) add -10) mul x_0_6)) mul 4)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "abs mul n abs n", "tree": "abs((n mul abs(n)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 - 10 - 5 - 7 + 5 - 15 - 18 - 14 - 17 - 6 - 27 - 31 - 28 - 32 - 22 - 44 - 49 - 47 - 52 - 43 - 66 - 72 - 71 - 77 - 69 - 93 - 100 - 100", "x2": "add mod INT+ 3 sub INT- 4 n x_0_5", "tree": "((3 mod (-4 sub n)) add x_0_5)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 8 - 7 + 7 + 6 + 0 - 5 - 2 + 40 - 28 + 21 - 24 + 0 + 0 - 4 + 40 + 560 + 294 + 264 + 0 + 0 + 0 + 80 - 1 1200 - 8 2320 - 3 8808 + 0 + 0 + 0 + 0 + 44 8000", "x2": "mul idiv x_0_8 INT- 2 idiv x_0_7 INT+ 1", "tree": "((x_0_8 idiv -2) mul (x_0_7 idiv 1))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 3 + 9 - 8 - 10 - 12 - 7 - 8 + 0 + 0 - 11 - 12 - 26 - 28 - 15 - 16 + 0 + 0 - 19 - 20 - 42 - 44 - 23 - 24 + 0 + 0 - 27", "x2": "mul n add abs relu abs idiv x_0_4 n mul INT+ 2 sign sign idiv INT- 9 n", "tree": "(n mul (abs(relu(abs((x_0_4 idiv n)))) add (2 mul sign(sign((-9 idiv n))))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 2 + 5 - 9 + 10 - 2 + 6 + 2 - 4 + 5 + 267 + 281 + 328 + 77 + 400 + 127 + 481 + 264 - 83 + 299 + 601 + 331 + 659 + 362 + 638 + 1046 + 727 + 490 + 247 + 568 + 936 + 733 + 400", "x2": "sub sub sqr add n mul sign x_0_10 INT+ 5 x_0_7 INT- 2", "tree": "((((n add (sign(x_0_10) mul 5)))**2 sub x_0_7) sub -2)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 10 + 1 - 1 - 9 - 10 - 16 - 6 - 9 - 18 - 20 - 27 - 18 - 22 - 32 - 35 - 43 - 35 - 40 - 51 - 55 - 64 - 57 - 63 - 75 - 80 - 90 - 84 - 91", "x2": "sub x_0_5 n", "tree": "(x_0_5 sub n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 7 - 1 + 1 + 15 + 0 - 147 + 0 + 1998 + 0 - 3 2967 + 0 + 64 2876 + 0 - 1446 4710 + 0 + 3 6885 105 + 0 - 105 1222 7964 + 0 + 3311 3518 866 + 0 - 11 4241 6373 9877 + 0 + 428 4061 4024 5425 + 0 - 1 7350 4486 7993 9672", "x2": "mul mul idiv x_0_2 INT+ 2 sub INT+ 3 mul x_0_1 x_0_4 sub mod mul n x_0_3 n n", "tree": "(((x_0_2 idiv 2) mul (3 sub (x_0_1 mul x_0_4))) mul (((n mul x_0_3) mod n) sub n))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 10 - 9 + 0 - 9 - 3 - 1 + 99 + 0 + 9 + 30 + 4 - 198 + 0 + 9 + 240 + 116 - 990 + 0 - 9 + 1920 + 2 7724 - 11 5830 + 0 + 9 - 1 9200 + 5320 2356 - 32 1138 6750 + 0 - 9", "x2": "mul add sign sign sub x_0_7 mod INT- 7 add abs add INT+ 7 INT- 7 n x_0_6 x_0_5", "tree": "((sign(sign((x_0_7 sub (-7 mod (abs((7 add -7)) add n))))) add x_0_6) mul x_0_5)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 3 + 2 + 3 + 5 - 1 + 86 + 87 + 79 + 166 + 172 + 160 + 246 + 251 + 240 + 326 + 330 + 320 + 406 + 409 + 400 + 486 + 488 + 480 + 566 + 567 + 560 + 646 + 646", "x2": "sub idiv add sub sqr INT+ 9 idiv mul sign n x_0_6 x_0_5 x_0_3 INT+ 1 sign relu n", "tree": "(((((9)**2 sub ((sign(n) mul x_0_6) idiv x_0_5)) add x_0_3) idiv 1) sub sign(relu(n)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 4 + 4 + 7 + 4 - 3 + 8 + 10 + 7 + 4 + 16 + 19 + 15 + 16 + 29 + 33 + 30 + 32 + 46 + 51 + 49 + 52 + 67 + 73 + 72 + 76 + 92 + 99", "x2": "add relu add x_0_4 n idiv INT+ 1 0 sub relu sign sub n idiv INT+ 3 INT- 9 abs x_0_3", "tree": "(relu((x_0_4 add n)) add (10 idiv (relu(sign((n sub (3 idiv -9)))) sub abs(x_0_3))))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 10 - 1 - 7 + 13 + 2 + 12 - 33 - 2 - 22 + 29 + 11 + 55 - 134 + 4 - 83 - 376 - 65 + 207 + 4248 + 2645 - 2008 + 7 3915 + 111 4603 - 52 4088 - 1510 8226 + 82 3446 4043", "x2": "idiv mul sub n add INT- 1 0 x_0_4 x_0_3 sub INT- 9 idiv sub n sub n n n", "tree": "(((n sub (-10 add x_0_4)) mul x_0_3) idiv (-9 sub ((n sub (n sub n)) idiv n)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 2 - 9 + 10 + 9 - 5 + 8 + 10 - 2 - 9 + 10 + 9 - 5 + 8 + 10 - 2 - 9 + 10 + 9 - 5 + 8 + 10 - 2 - 9 + 10 + 9 - 5 + 8 + 10 - 2 - 9", "x2": "add sub sqr sign n relu INT+ 1 x_0_7", "tree": "(((sign(n))**2 sub relu(1)) add x_0_7)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 7 - 10 - 2 - 7 - 8 + 8 + 8 + 8 + 8 + 8 - 8 - 8 - 8 - 8 - 8 + 8 + 8 + 8 + 8 + 8 - 8 - 8 - 8 - 8 - 8 + 8 + 8", "x2": "mul INT- 8 sign x_0_5", "tree": "(-8 mul sign(x_0_5))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 6 + 9 + 2 + 10 + 600 + 2 9400 + 188 1600 + 1 5240 9600 + 152 4096 0 + 1 8441 5616 0 + 265 5584 8704 0 + 4 4879 3843 976 0 + 879 6359 3247 1296 0 + 19 7918 848 604 1600 0 + 5066 7029 7103 4664 9600 0 + 146 4277 1586 2901 8173 4400 0 + 4 7442 5799 3958 188 8194 5600 0 + 1712 6771 3581 8844 8163 8236 1600 0 + 68 5070 8543 2753 7926 5529 4464 0 0 + 3 211 6246 7584 4422 5609 8485 8624 0 0 + 1462 2426 3431 870 519 5166 7157 4016 0 0 + 77 3526 3535 5045 257 4824 3192 6265 4464 0 0 + 4 4555 1179 6450 5934 8309 8807 8952 8897 1264 0 0 + 2784 6948 7278 1620 9269 3675 4934 5556 704 0 0 0 + 188 2453 7340 37 5746 6092 4633 5759 5903 5904 0 0 0 + 13 7230 8772 862 7391 9278 1405 7876 8741 3717 4016 0 0 0 + 1 758 9007 7315 6387 5271 4062 2137 5469 3235 4442 8544 0 0 0", "x2": "mul mul x_0_1 sub n mul x_0_5 idiv sign add mod sqr x_0_2 INT- 3 INT+ 4 x_0_4 n", "tree": "((x_0_1 mul (n sub (x_0_5 mul (sign((((x_0_2)**2 mod -3) add 4)) idiv x_0_4)))) mul n)", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 19 - 5 - 27 - 13 - 35 - 21 - 43 - 29 - 51 - 37 - 59 - 45 - 67 - 53 - 75 - 61 - 83 - 69 - 91 - 77 - 99 - 85 - 107", "x2": "sub n sub x_0_1 mul INT- 9 n", "tree": "(n sub (x_0_1 sub (-9 mul n)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 8 - 10 - 5 + 7 + 0 + 10 - 2 - 3 + 3 + 16 + 10 + 21 + 10 + 10 + 17 + 31 + 26 + 38 + 28 + 29 + 37 + 52 + 48 + 61 + 52 + 54 + 63 + 79 + 76", "x2": "add sub n idiv n n x_0_6", "tree": "((n sub (n idiv n)) add x_0_6)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 5 - 3 + 7 + 4 + 3 + 3 - 3 + 1520 - 2187 + 152 30 - 291 864 + 26 2661 1840 - 63 9516 8195 + 7 2074 2288 8946 - 21 5836 9265 7900 + 2 9521 6041 5308 8080 - 10 6040 6820 2826 2411 + 1 7216 9995 4207 5728 7332 - 7 2733 3038 318 5187 6688 + 1 3773 5996 3365 9303 9529 2500 - 6 7358 3126 5212 9802 3000 7127 + 1 4666 1288 8991 9952 78 3606 6684 - 8 1954 8590 384 6330 4584 9671 3680 + 2 274 4565 7742 5087 1579 9571 754 2328 - 12 8054 4671 9350 9891 3414 111 5124 9375 + 3 5634 3848 8048 2144 823 337 2940 1516 3716 - 25 2049 6077 7698 5519 1272 7981 4900 4144 7396 + 7 8224 6016 8963 4214 861 9693 8314 7744 3369 4860 - 61 4723 7884 728 9982 5995 2274 560 6208 6054 203 + 21 1206 4245 6201 2132 1681 5472 1910 8995 9548 5981 500", "x2": "mul n add mod n x_0_7 mul x_0_2 mul relu n n", "tree": "(n mul ((n mod x_0_7) add (x_0_2 mul (relu(n) mul n))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 10 + 8 - 10 - 3 - 2 + 54 + 63 + 72 + 18 + 10 + 605 + 768 + 949 + 266 + 165 + 9696 + 1 3073 + 1 7100 + 5073 + 3320 + 20 3637 + 28 7628 + 39 3323 + 12 1776 + 8 3025 + 529 4588 + 776 5983 + 1101 3072", "x2": "abs add mul n x_0_5 n", "tree": "abs(((n mul x_0_5) add n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 52 + 62 + 73 + 85 + 98 + 112 + 127 + 143 + 160 + 178 + 197 + 217 + 238 + 260 + 283 + 307", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 2 - 3 + 3 + 3 + 6 - 8 + 3 + 9 + 0 + 0 - 5 - 3 - 17 - 19 - 17 - 8 - 39 - 16 + 0 + 0 - 5 - 3 - 1 - 1 + 0 + 5 - 9 - 16 + 0 + 0 - 5 - 3", "x2": "mod x_0_10 sub add sub sub sign INT+ 2 n x_0_9 INT+ 1 0 sub INT+ 9 x_0_2", "tree": "(x_0_10 mod ((((sign(2) sub n) sub x_0_9) add 10) sub (9 sub x_0_2)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 40 + 312 - 2416 + 1 8800 - 14 6632 + 114 6400 - 898 128 + 7045 9472 - 5 5361 136 + 43 5506 6408 - 342 9614 7960 + 2703 3434 2752 - 2 1326 3759 2816 + 16 8366 1257 4864 - 133 92 3934 1424 + 1051 4063 6812 7448 - 8315 6685 4791 7088 + 6 5802 2467 7047 4352 - 52 934 4535 9958 8616 + 412 5800 8725 874 1840 - 3268 9037 6821 8464 6880 + 2 5909 891 2587 9683 832 - 20 5422 637 8376 344 4448", "x2": "mul mod idiv idiv sub INT- 5 x_0_1 add INT+ 2 add n INT+ 2 sqr INT- 2 x_0_1 INT- 8", "tree": "(((((-5 sub x_0_1) idiv (2 add (n add 2))) idiv (-2)**2) mod x_0_1) mul -8)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 8 + 8 + 8 + 1 - 5 - 1 - 5 + 96 + 108 + 114 + 120 + 84 + 54 + 84 + 66 + 678 + 756 + 798 + 840 + 630 + 456 + 642 + 540 + 4218 + 4692 + 4950 + 5208 + 3954 + 2916 + 4038", "x2": "mul add n x_0_8 INT+ 6", "tree": "((n add x_0_8) mul 6)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 10 + 6 + 2 + 7 - 4 - 1 - 3 + 6 - 97 - 33 - 1 - 46 - 13 + 2 - 6 - 33 - 9406 - 1086 + 2 - 2113 - 166 - 1 - 33 - 1086 - 8847 2833 - 117 9393 - 1 - 446 4766 - 2 7553 + 2 - 1086", "x2": "sub INT+ 4 add sqr x_0_8 INT+ 1", "tree": "(4 sub ((x_0_8)**2 add 1))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 8 + 9 - 4 - 3 + 2 + 6 + 6 + 4 + 6 + 10 + 10 + 8 + 4 + 10 + 14 + 10 + 8 + 14 + 18 + 12 + 12 + 18 + 22 + 24 + 16", "x2": "sub relu add idiv x_0_1 mul x_0_1 INT+ 1 0 relu n abs mod mul n n x_0_2", "tree": "(relu(((x_0_1 idiv (x_0_1 mul 10)) add relu(n))) sub abs(((n mul n) mod x_0_2)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 4 + 5 + 2 - 2 - 3 - 9 + 0 + 5 + 2 + 0 + 0 + 0 + 0 + 5 + 2 + 0 + 0 + 0 + 0 + 5 + 2 + 0 + 0 + 0 + 0 + 5 + 2 + 0 + 0", "x2": "relu relu x_0_6", "tree": "relu(relu(x_0_6))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 3 - 6 - 12 - 21 - 38 - 71 - 140 - 298 - 691 - 1750 - 4838 - 1 4541 - 4 7288 - 16 5540 - 62 809 - 248 3272 - 1055 3945 - 4749 2793 - 2 2559 810 - 11 2795 4095 - 59 2175 9046 - 325 6967 4803 - 1872 7563 169 - 1 1236 5378 1068", "x2": "idiv mul n add x_0_1 INT- 9 INT+ 4", "tree": "((n mul (x_0_1 add -9)) idiv 4)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 + 10 + 1 + 6 - 1 + 0 + 5 + 8 + 14 + 0 + 10 + 6 + 14 + 14 + 10 + 8 + 3 + 18 + 9 + 14 + 7 + 8 + 13 + 16 + 22 + 8 + 18 + 14 + 22 + 22 + 18", "x2": "sub abs n x_0_8", "tree": "(abs(n) sub x_0_8)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 6 - 8 + 1 - 7 - 7 - 10 - 4 - 11 - 12 - 16 - 11 - 19 - 21 - 26 - 22 - 31 - 34 - 40 - 37 - 47 - 51 - 58 - 56 - 67 - 72 - 80 - 79", "x2": "add sub INT- 4 add n idiv abs INT- 7 INT- 5 sub mod add x_0_4 sign n x_0_4 INT- 5", "tree": "((-4 sub (n add (abs(-7) idiv -5))) add (((x_0_4 add sign(n)) mod x_0_4) sub -5))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 2 + 9 - 2 + 8 - 7 + 4 - 2 - 7 + 0 - 13 - 12 - 11 - 10 - 18 - 8 - 13 - 12 - 15 - 12 - 19 - 14 - 18 - 16 - 20 - 16 - 22 - 18 - 23 - 20 - 25 - 21 - 26", "x2": "idiv abs add x_0_10 relu sqr n add x_0_1 add x_0_5 INT- 3", "tree": "(abs((x_0_10 add relu((n)**2))) idiv (x_0_1 add (x_0_5 add -3)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 55 + 545 - 5455 + 5 4545 - 54 5455 + 545 4545 - 5454 5455 + 5 4545 4545 - 54 5454 5455 + 545 4545 4545 - 5454 5454 5455 + 5 4545 4545 4545 - 54 5454 5454 5455 + 545 4545 4545 4545 - 5454 5454 5454 5455 + 5 4545 4545 4545 4545 - 54 5454 5454 5454 5455 + 545 4545 4545 4545 4545 - 5454 5454 5454 5454 5455 + 5 4545 4545 4545 4545 4545 - 54 5454 5454 5454 5454 5455 + 545 4545 4545 4545 4545 4545 - 5454 5454 5454 5454 5454 5455", "x2": "add idiv INT- 5 abs sign relu INT+ 8 mul x_0_1 INT- 1 0", "tree": "((-5 idiv abs(sign(relu(8)))) add (x_0_1 mul -10))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 10 + 2 - 4 + 1 + 6 - 9 + 7 + 32 + 36 + 40 + 77 + 132 + 156 + 84 + 105 + 96 + 204 + 288 + 190 + 360 + 399 + 0 + 46 + 528 + 450 + 468 + 675 + 56 + 638", "x2": "mod abs mul add idiv INT+ 4 INT- 3 mul abs x_0_1 x_0_6 n abs sqr n", "tree": "(abs((((4 idiv -3) add (abs(x_0_1) mul x_0_6)) mul n)) mod abs((n)**2))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 1 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5 + 9 - 4 - 5", "x2": "add sqr mul mod mul mod x_0_5 n INT- 7 INT+ 7 INT- 1 x_0_3", "tree": "((((((x_0_5 mod n) mul -7) mod 7) mul -1))**2 add x_0_3)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 5 - 2 - 10 + 3 + 5 - 1 - 35 - 16 - 90 + 30 + 55 - 12 - 455 - 224 - 1350 + 480 + 935 - 216 - 8645 - 4480 - 2 8350 + 1 560 + 2 1505 - 5184 - 21 6125 - 11 6480 - 76 5450 + 29 5680 + 62 3645", "x2": "idiv mul n x_0_6 relu sign n", "tree": "((n mul x_0_6) idiv relu(sign(n)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 5 - 10 - 10 - 15 - 15 - 20 - 20 - 25 - 30 - 30 - 35 - 35 - 40 - 40 - 45 - 50 - 50 - 55 - 55 - 60 - 60 - 65 - 70", "x2": "mul idiv mul n INT+ 4 INT- 7 relu INT+ 5", "tree": "(((n mul 4) idiv -7) mul relu(5))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 4 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13", "x2": "abs sub x_0_1 n", "tree": "abs((x_0_1 sub n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 - 6 - 1 - 4 - 5 - 4 - 1 - 6 - 9 + 0 - 9 - 6 - 1 - 4 - 5 - 4 - 1 - 6 - 9 + 0 - 9 - 6 - 1", "x2": "mod sqr n INT- 1 0", "tree": "((n)**2 mod -10)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 3 + 8 + 7 - 8 + 3 + 0 + 4 + 10 - 5 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv mul sign x_0_10 sign mod idiv INT+ 8 n n INT+ 2", "tree": "((sign(x_0_10) mul sign(((8 idiv n) mod n))) idiv 2)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5", "x2": "idiv n sqr INT- 2", "tree": "(n idiv (-2)**2)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 + 10 + 1 + 102 + 144 + 197 + 260 + 324 + 408 + 484 + 581 + 676 + 787 + 907 + 1025 + 1159 + 1302 + 1461 + 1600 + 1766 + 1948 + 2132 + 2322 + 2504 + 2711 + 2924", "x2": "add mod x_0_3 n sqr add relu sub n INT- 2 n", "tree": "((x_0_3 mod n) add ((relu((n sub -2)) add n))**2)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 5 + 9 - 1 + 0 + 0 + 2 + 4 + 5 + 4 + 4 + 0 + 1 + 1 + 0 + 5 + 1 + 0 + 2 + 0 + 3 + 6 + 2 + 4 + 3 + 0 + 3", "x2": "abs mod n mod n add sub INT- 7 n abs x_0_4", "tree": "abs((n mod (n mod ((-7 sub n) add abs(x_0_4)))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 + 6 + 3 + 6 + 4 + 7 + 48 + 64 + 72 + 80 + 88 + 96 + 80 + 80 + 88 + 88 + 96 + 104 + 120 + 128 + 136 + 144 + 152 + 160 + 168 + 176 + 176 + 184 + 192", "x2": "mul INT+ 8 sub relu relu n abs idiv x_0_6 n", "tree": "(8 mul (relu(relu(n)) sub abs((x_0_6 idiv n))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 10 - 6 - 8 + 8 - 8 - 7 + 0 + 0 + 2856 + 0 + 0 + 0 + 0 + 59 9760 + 0 + 0 + 0 + 0 + 2 2790 8800 + 0 + 0 + 0 + 0 + 1367 4528 0 + 0 + 0 + 0 + 0 + 118 9683 9360 0", "x2": "mul relu x_0_5 add add n mul idiv INT- 6 INT+ 2 x_0_6 sqr mul n idiv INT- 1 0 n", "tree": "(relu(x_0_5) mul ((n add ((-6 idiv 2) mul x_0_6)) add ((n mul (-10 idiv n)))**2))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 5 + 7 - 4 + 8 - 3 + 9 - 2 + 10 - 1 + 11 + 0 + 12 + 1 + 13", "x2": "sub n sub x_0_1 sub relu n abs add relu INT- 5 n", "tree": "(n sub (x_0_1 sub (relu(n) sub abs((relu(-5) add n)))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 4 + 2 + 8 - 7 - 1 + 9 - 10 - 2 + 16 + 10 + 10 + 6 + 20 - 4 + 19 + 19 + 29 + 32 + 35 + 52 + 31", "x2": "add abs sub x_0_2 idiv x_0_8 x_0_4 x_0_7", "tree": "(abs((x_0_2 sub (x_0_8 idiv x_0_4))) add x_0_7)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 9 - 6 - 1 - 10 + 5 + 7 + 127 + 64 + 18 + 157 + 22 + 38 + 1 5639 + 3859 + 272 + 2 4042 + 418 + 1315", "x2": "add add n sqr mul add INT- 2 x_0_6 sign INT- 9 idiv n x_0_5", "tree": "((n add (((-2 add x_0_6) mul sign(-9)))**2) add (n idiv x_0_5))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 - 6 - 4 + 4 - 1 + 6 + 7 - 8 - 3 - 2 + 11 - 44 + 13 + 2 - 7 - 468 - 555 + 18", "x2": "mod n mul x_0_5 x_0_4", "tree": "(n mod (x_0_5 mul x_0_4))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 9 + 2 - 7 + 9 + 53 + 15 - 55 + 80 + 531 + 166 - 659 + 1039 + 7435 + 2491 - 1 543 + 1 7662", "x2": "add sign add mod x_0_3 x_0_1 INT- 4 mul n x_0_4", "tree": "(sign(((x_0_3 mod x_0_1) add -4)) add (n mul x_0_4))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 1 - 7 - 15 - 25 - 37 - 51 - 67 - 85 - 105 - 127 - 151 - 177 - 205", "x2": "add x_0_1 mul abs add relu n n idiv x_0_1 mul x_0_1 INT- 9", "tree": "(x_0_1 add (abs((relu(n) add n)) mul (x_0_1 idiv (x_0_1 mul -9))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 5 - 7 + 4 - 4 + 8 + 7 + 3 + 8 - 8 - 7 + 9 - 9 - 6 + 9 - 10 - 5 + 9 - 10 - 4 + 9 - 10 - 3 + 9 - 10", "x2": "mul INT+ 1 sub x_0_3 idiv add x_0_1 add x_0_9 sqr idiv x_0_11 sqr n abs n", "tree": "(1 mul (x_0_3 sub ((x_0_1 add (x_0_9 add ((x_0_11 idiv (n)**2))**2)) idiv abs(n))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 0 + 6 + 4 + 1 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 6 + 8", "x2": "abs sub relu add sign mul idiv INT+ 8 sub n add INT+ 2 x_0_2 sub INT+ 2 n n x_0_1", "tree": "abs((relu((sign(((8 idiv (n sub (2 add x_0_2))) mul (2 sub n))) add n)) sub x_0_1))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "mod n INT+ 3", "tree": "(n mod 3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 7 - 2 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "abs abs sqr relu idiv n abs sign sub sign x_0_1 x_0_3", "tree": "abs(abs((relu((n idiv abs(sign((sign(x_0_1) sub x_0_3))))))**2))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 5 - 8 + 0 - 6 + 7 - 3 - 8 + 1 - 5 + 8 + 1 - 7 + 2 - 4 + 8 + 2 - 6", "x2": "add x_0_5 mod sqr idiv x_0_4 sub x_0_5 x_0_4 n", "tree": "(x_0_5 add (((x_0_4 idiv (x_0_5 sub x_0_4)))**2 mod n))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 9 + 9 + 20 + 25 + 30 + 42 + 56 + 63 + 70 + 88 + 108 + 117 + 112 + 135", "x2": "mul sub n idiv x_0_2 mul INT+ 6 INT+ 3 n", "tree": "((n sub (x_0_2 idiv (6 mul 3))) mul n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 + 6 - 10 + 5 + 9 - 4 + 6 + 7 + 19 + 300 + 36 + 138 - 45 - 1710 - 400 - 1331 + 693 + 0 - 11 7600 - 2 280 + 7 7836", "x2": "mul sub relu n x_0_9 sub n x_0_4", "tree": "((relu(n) sub x_0_9) mul (n sub x_0_4))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 8 + 1 + 1 + 3 + 3 + 5 + 5 + 7 + 7 + 9 + 9 + 11 + 11 + 13", "x2": "mod idiv INT+ 3 mul INT+ 1 sub x_0_1 n n", "tree": "((3 idiv (1 mul (x_0_1 sub n))) mod n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 + 7 + 2 + 10 + 54 + 408 + 3372 + 3 756 + 33 7908 + 399 3792 + 5096 6676 + 6 9851 916 + 102 3785 2908 + 1598 5439 1864 + 2 6498 1094 5996 + 46 4854 7560 8708 + 860 5868 5947 708", "x2": "add mul n x_0_1 mul x_0_2 mod INT+ 9 x_0_5", "tree": "((n mul x_0_1) add (x_0_2 mul (9 mod x_0_5)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 3 - 2 - 9 - 5 + 6 + 10 + 4 + 5 - 10 + 11 + 4 - 1 - 8 - 4 + 7 + 11 + 5 + 6 - 9 + 12 + 5 + 0", "x2": "add sign relu mul n add INT- 8 relu INT- 4 x_0_10", "tree": "(sign(relu((n mul (-8 add relu(-4))))) add x_0_10)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 2 + 32 - 512 + 8192 - 13 1072 + 209 7152 - 3355 4432 + 5 3687 912 - 85 8993 4592 + 1374 3895 3472 - 2 1990 2325 5552 + 35 1843 7208 8832 - 562 9499 5342 1312 + 9007 1992 5474 992", "x2": "mul INT- 2 mul INT+ 8 x_0_1", "tree": "(-2 mul (8 mul x_0_1))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 2 + 4 - 9 + 7 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 900 + 2178 + 3888 + 6084 + 8820 + 1 2150 + 1 6128 + 2 808 + 2 6244 + 3 2490 + 3 9600 + 4 7628 + 5 6628", "x2": "mul mul mul n sqr add sub INT+ 1 0 sign n n sign abs n INT+ 9", "tree": "(((n mul (((10 sub sign(n)) add n))**2) mul sign(abs(n))) mul 9)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 6 - 3 - 14 - 13 - 26 - 27 - 42 - 45 - 62 - 67 - 86 - 93 - 114 - 123", "x2": "sub x_0_2 add n n", "tree": "(x_0_2 sub (n add n))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 5 - 10 + 2 + 5 - 21 + 15 + 4 - 34 - 23 + 5 - 6 - 28 + 4 + 5 - 25 + 26 + 4", "x2": "idiv mod INT+ 1 add x_0_1 mul INT- 8 n x_0_5", "tree": "((1 mod (x_0_1 add (-8 mul n))) idiv x_0_5)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 2 - 7 + 9 + 0 + 27 + 21 + 6 + 75 + 57 + 12 + 219 + 165 + 30 + 651 + 489", "x2": "add relu INT- 5 abs mul INT- 3 relu abs sub abs mul idiv n n INT- 2 x_0_3", "tree": "(relu(-5) add abs((-3 mul relu(abs((abs(((n idiv n) mul -2)) sub x_0_3))))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 8 + 4 + 4 + 10 - 5 - 1 + 8 + 12 + 8 + 8 + 14 - 1 + 3 + 12 + 16 + 12 + 12 + 18 + 3", "x2": "add x_0_7 INT+ 4", "tree": "(x_0_7 add 4)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 2 + 0 - 1 + 7 - 3 + 3 - 3 - 3 - 10 - 50 - 110 - 612 - 1339 - 8610 - 2 40 - 13 7808 - 34 731 - 248 724 - 647 4839 - 4961 6680 - 1 3598 4471 - 10 9159 6418", "x2": "mul n idiv add x_0_2 x_0_9 sign abs sign INT- 7", "tree": "(n mul ((x_0_2 add x_0_9) idiv sign(abs(sign(-7)))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 8 + 3 - 10 + 0 + 16 + 6 - 20 + 0 + 32 + 12 - 40 + 0 + 64 + 24 - 80 + 0", "x2": "mul add INT+ 4 INT- 2 x_0_4", "tree": "((4 add -2) mul x_0_4)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 18 + 28 + 40 + 54 + 70 + 88 + 108 + 130 + 154 + 180 + 208 + 238", "x2": "add n relu sqr sub n INT- 2", "tree": "(n add relu(((n sub -2))**2))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 6 + 5 - 10 - 10 + 169 + 169 + 169 + 1 + 0 + 3 2400 + 3 2761 + 3 3124 + 225 + 225 + 10 5079 7056 + 10 7439 7284 + 10 9839 2164", "x2": "sqr add n x_0_5", "tree": "((n add x_0_5))**2", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 8 + 10 - 5 - 2 - 10 + 16 + 0 + 25 + 25 + 16 + 1 + 1 + 9 + 9 + 1 + 1 + 1 + 0", "x2": "sqr sub abs mod INT+ 7 INT+ 2 mod idiv x_0_5 INT+ 6 INT+ 7", "tree": "((abs((7 mod 2)) sub ((x_0_5 idiv 6) mod 7)))**2", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 6 - 8 - 3 + 2 - 2 - 6 + 7 + 0 + 0 + 0 + 3 + 0 + 0 + 8 + 1 + 1 + 1 + 4 + 1 + 1", "x2": "relu add x_0_7 sign x_0_4", "tree": "relu((x_0_7 add sign(x_0_4)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 8 + 4 - 7 + 4 - 7 - 4 - 9 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul sqr idiv INT+ 9 relu x_0_9 INT+ 3", "tree": "sign((((9 idiv relu(x_0_9)))**2 mul 3))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 7 - 3 + 6 + 6 - 2 - 4 + 2 + 2 - 9 - 5 + 10 + 12 - 3 - 4 + 2 + 2 - 11", "x2": "idiv sub n sub abs mod mod abs n x_0_4 x_0_3 n add sub INT+ 7 sub INT+ 9 INT+ 2 x_0_4", "tree": "((n sub (abs(((abs(n) mod x_0_4) mod x_0_3)) sub n)) idiv ((7 sub (9 sub 2)) add x_0_4))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 1 + 1 + 3 + 2 + 2 + 3 + 5 + 8 + 2 + 7 + 1 + 8 + 2", "x2": "mod mod x_0_1 sub INT- 6 n n", "tree": "((x_0_1 mod (-6 sub n)) mod n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 3 + 4 + 6 + 8 + 11 + 14 + 18 + 23 + 29 + 37 + 47 + 59 + 74", "x2": "add mod x_0_1 mul x_0_1 n add sqr sign x_0_1 relu abs idiv relu x_0_1 INT+ 4", "tree": "((x_0_1 mod (x_0_1 mul n)) add ((sign(x_0_1))**2 add relu(abs((relu(x_0_1) idiv 4)))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 1 - 1 - 4 + 6 + 3 + 8 + 2 - 75 - 97 - 136 - 47 - 244 - 293 - 361 - 303 - 728 - 869 - 1090 - 832 - 1817", "x2": "sub x_0_4 sqr sub mod idiv x_0_8 n x_0_7 n", "tree": "(x_0_4 sub ((((x_0_8 idiv n) mod x_0_7) sub n))**2)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 2 + 4 + 0 + 308 - 7956 + 23 1014 - 787 5080 + 2 9985 8076 - 129 1376 4042 + 6206 1668 2176 - 32 9244 6911 854 + 1944 675 169 7932 - 12 4499 7590 4398 5536 + 884 4158 1667 3671 5034 - 6 8129 9565 2339 8853 8376 + 572 5007 9439 1744 2679 4472", "x2": "mul add add add x_0_3 x_0_3 x_0_1 INT- 1 0 add sign INT- 8 idiv sqr add INT+ 8 n INT- 7", "tree": "((((x_0_3 add x_0_3) add x_0_1) add -10) mul (sign(-8) add (((8 add n))**2 idiv -7)))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 3 - 276 + 20 - 356 + 24 - 288 + 12 - 255 + 18 - 246 + 30 - 204 + 12 - 158", "x2": "mul add idiv n INT- 6 INT+ 5 sub mod x_0_2 n mod INT- 4 add sqr INT+ 9 add x_0_1 INT- 4", "tree": "(((n idiv -6) add 5) mul ((x_0_2 mod n) sub (-4 mod ((9)**2 add (x_0_1 add -4)))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 5 - 6 + 0 + 7 + 0 + 1 + 0 + 16 + 0 + 1 + 0 + 81 + 0 + 1 + 0 + 3 8416 + 0", "x2": "sqr sqr idiv x_0_4 INT- 6", "tree": "(((x_0_4 idiv -6))**2)**2", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 10 + 4 + 1 + 9 + 81 + 1 + 1 + 81 + 81 + 1 + 1 + 81 + 81 + 1", "x2": "sqr idiv sub INT- 9 mod INT+ 8 idiv n n add x_0_2 idiv x_0_2 n", "tree": "(((-9 sub (8 mod (n idiv n))) idiv (x_0_2 add (x_0_2 idiv n))))**2", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 4 + 3 + 1 - 3 + 10 + 9 + 105 - 259 + 1029 + 952 + 1 395 - 2 5361 + 10 877 + 9 2666 + 102 635 - 249 2462 + 987 9408 + 900 8636 + 1 19 9897", "x2": "mul INT+ 7 sub sub n x_0_7 mul add INT- 7 INT- 7 x_0_4", "tree": "(7 mul ((n sub x_0_7) sub ((-7 add -7) mul x_0_4)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 4 + 0 + 5 + 7 + 8 - 8 - 6 - 3 + 7 - 3 + 0 - 1024 + 0 - 1600 - 3136 - 4096 - 4096 - 2304 - 576 - 3136 - 576 + 0 - 6710 8864", "x2": "mul INT- 4 sqr mul INT+ 4 x_0_11", "tree": "(-4 mul ((4 mul x_0_11))**2)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 2 + 3 + 1 + 4 + 9 + 1 + 16 + 81 + 1 + 256 + 6561 + 1 + 6 5536 + 4304 6721 + 1", "x2": "sqr mod x_0_3 sqr sqr n", "tree": "((x_0_3 mod ((n)**2)**2))**2", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 + 8 + 10 + 3 + 91 + 84 + 172 + 165 + 253 + 246 + 334 + 309 + 415 + 372 + 496 + 435 + 559", "x2": "sub x_0_2 mul INT+ 9 sub sign sub mul mod add add add n x_0_3 INT+ 1 n x_0_4 n x_0_1 INT+ 8", "tree": "(x_0_2 sub (9 mul (sign(((((((n add x_0_3) add 1) add n) mod x_0_4) mul n) sub x_0_1)) sub 8)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 4 + 0 + 1 - 1 + 1 + 0 + 0 + 1 - 1 + 1 + 2 - 2 + 3 - 1 + 1", "x2": "add idiv x_0_1 sign mod INT- 8 relu idiv sqr n mul mul x_0_2 INT- 8 n relu x_0_3", "tree": "((x_0_1 idiv sign((-8 mod relu(((n)**2 idiv ((x_0_2 mul -8) mul n)))))) add relu(x_0_3))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 8 + 6 - 8 + 9 + 1 + 0 + 5 - 3 - 3 - 3 - 3 - 5 - 7 - 3 - 4 - 4 - 4 - 4 - 3 - 3", "x2": "sub idiv INT- 5 abs sub idiv INT- 4 n abs x_0_7 abs INT+ 2", "tree": "((-5 idiv abs(((-4 idiv n) sub abs(x_0_7)))) sub abs(2))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 8 - 10 - 8 + 2 + 7 + 0 - 1 - 1 - 1 - 71 - 89 - 109 - 156 - 182 - 210 - 209 - 239 - 271 - 206 - 205 - 204 - 174", "x2": "sub relu n sqr add n idiv x_0_9 n", "tree": "(relu(n) sub ((n add (x_0_9 idiv n)))**2)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 8 - 10 - 5 + 7 - 6 + 5 - 11 - 15 - 12 - 15 - 11 - 23 - 16 - 29 - 21 - 27 - 20 - 27 - 38", "x2": "sub sub sign mod n idiv x_0_6 INT+ 7 INT+ 1 add n mod x_0_4 n", "tree": "((sign((n mod (x_0_6 idiv 7))) sub 1) sub (n add (x_0_4 mod n)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 10 - 10 + 3 + 8 + 7 - 3 + 5 + 18 + 23 + 22 + 12 + 20 + 33 + 38 + 37 + 27", "x2": "add mod INT+ 8 n sub x_0_5 INT- 7", "tree": "((8 mod n) add (x_0_5 sub -7))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 1 - 1 - 1 - 2 - 2 - 3 - 3 - 3 - 4 - 4 - 5 - 5", "x2": "idiv add add INT- 3 n n INT- 5", "tree": "(((-3 add n) add n) idiv -5)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 10 - 9 - 9 + 8 + 5 + 6 + 5 - 5 - 3 - 4 + 3 + 2 + 2 + 8 - 3 - 1 + 4 + 0 + 1", "x2": "add x_0_7 x_0_3", "tree": "(x_0_7 add x_0_3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 7 - 4 - 15 - 12 - 23 - 20 - 31 - 28 - 39 - 36 - 47 - 44 - 55 - 52", "x2": "add INT- 8 idiv x_0_2 mod mul sign relu INT- 4 sign INT+ 1 n", "tree": "(-8 add (x_0_2 idiv ((sign(relu(-4)) mul sign(1)) mod n)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 + 2 - 1 + 2 + 0 - 1 - 2 - 1 + 0 - 3 - 3 - 3 + 0 - 3 - 3 - 4 + 0", "x2": "idiv mul add mod relu n n INT+ 1 mod mod x_0_4 n n INT- 4", "tree": "((((relu(n) mod n) add 1) mul ((x_0_4 mod n) mod n)) idiv -4)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 9 + 7 - 10 + 8 + 4 + 48 + 65 + 80 + 101 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360", "x2": "sub sqr n mod sign sub x_0_6 idiv INT+ 2 n x_0_6", "tree": "((n)**2 sub (sign((x_0_6 sub (2 idiv n))) mod x_0_6))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 20 + 68 + 324 + 1092 + 5188 + 1 7476 + 8 3012 + 27 9620 + 132 8196 + 447 3924 + 2125 1140 + 7158 2788 + 3 4001 8244", "x2": "relu add INT+ 4 mul sub relu INT+ 8 INT- 8 x_0_2", "tree": "relu((4 add ((relu(8) sub -8) mul x_0_2)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 + 5 + 9 + 7 + 0 + 4 + 21 - 9 - 29 - 62 - 55 + 1 - 39 - 230 + 109 + 378 + 869 + 826 - 15", "x2": "sub sign add n INT+ 4 mul mod INT- 4 n x_0_7", "tree": "(sign((n add 4)) sub ((-4 mod n) mul x_0_7))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 14 + 30 + 52 + 80 + 114 + 154 + 200 + 252 + 310 + 374 + 444 + 520 + 602", "x2": "add add mul sub INT+ 3 x_0_1 sqr abs n n mul sqr n x_0_1", "tree": "((((3 sub x_0_1) mul (abs(n))**2) add n) add ((n)**2 mul x_0_1))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 5 + 7 + 18 - 7 + 31 + 5 + 7 + 44 - 18 + 47 + 20 - 14 + 86 - 40 + 53", "x2": "add sub add INT+ 6 n x_0_1 add x_0_3 INT+ 5", "tree": "(((6 add n) sub x_0_1) add (x_0_3 add 5))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 2 + 6 - 7 + 7 - 10 - 10 + 9 - 5 - 3 + 1 + 32 + 7 + 445 + 100 + 7110 + 1661 + 12 7965 + 3 1104 + 255 9185 + 64 6056 + 5630 388 + 1473 1332 + 13 5117 8191", "x2": "abs add n sub x_0_5 add mul x_0_2 n abs x_0_11", "tree": "abs((n add (x_0_5 sub ((x_0_2 mul n) add abs(x_0_11)))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 8 - 2 + 11 + 6 - 6 + 0 + 13 + 8 - 4 + 2 + 15 + 10 - 2 + 4 + 17", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 3 + 2 - 8 - 5 - 10 - 4 - 10 + 8 + 30 + 10 + 15 + 35 + 15 + 50 + 25 + 40 + 65 + 50 + 75 + 75 + 75", "x2": "mul INT+ 5 mod x_0_8 n", "tree": "(5 mul (x_0_8 mod n))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 9 + 9 - 2 + 1 + 81 + 81 + 3844 + 1 + 6561 + 6561 + 1 0 + 1 + 8649 + 1296 + 256 + 1", "x2": "sqr mod x_0_4 sqr n", "tree": "((x_0_4 mod (n)**2))**2", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 - 5 + 5 + 0 + 2 + 0 + 3 + 1 + 3 + 2 + 0 + 2 + 1 + 3 + 1 + 0", "x2": "mod add x_0_3 INT- 9 sqr mod INT+ 2 mul INT+ 6 INT+ 8", "tree": "((x_0_3 add -9) mod ((2 mod (6 mul 8)))**2)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 72 + 588 + 3136 + 9680 + 2 6136 + 5 6700 + 11 5200 + 20 7936 + 36 1000 + 58 1900 + 91 4112 + 136 4688", "x2": "idiv mul INT+ 8 mul sqr relu add idiv n INT- 2 sqr n n INT+ 2", "tree": "((8 mul ((relu(((n idiv -2) add (n)**2)))**2 mul n)) idiv 2)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 0 - 9 - 5 + 0 + 5 + 2 + 7 - 5 - 8 + 10 - 23 + 13 + 14 + 15 + 16 - 8 + 2 + 89 + 20 + 21 + 162 + 23 + 232", "x2": "add relu n mul relu x_0_11 x_0_8", "tree": "(relu(n) add (relu(x_0_11) mul x_0_8))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 6 + 4 - 5 + 6 - 6 + 1 - 1 - 5 - 2 + 1 - 16 + 3 - 14 - 2 - 8 - 6 - 11", "x2": "sub sub x_0_3 x_0_1 mod idiv x_0_4 abs INT+ 9 n", "tree": "((x_0_3 sub x_0_1) sub ((x_0_4 idiv abs(9)) mod n))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 9 + 19 + 68 + 69 + 6 + 71 + 72 + 73 + 74 + 11 + 76 + 77 + 78 + 79", "x2": "add n sqr mod add sub x_0_1 mul n x_0_2 mul abs INT+ 9 idiv n abs n INT- 1 0", "tree": "(n add ((((x_0_1 sub (n mul x_0_2)) add (abs(9) mul (n idiv abs(n)))) mod -10))**2)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 48 + 405 - 2454 + 1 4694 - 8 8200 + 52 9158 - 158 7498 + 476 2467 - 1428 7431 + 4286 2260 - 1 2858 6816 + 3 8576 409 - 11 5728 1269", "x2": "mul idiv INT- 8 n mul INT+ 3 add n x_0_1", "tree": "((-8 idiv n) mul (3 mul (n add x_0_1)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 10 + 0 - 1 - 1 - 1 - 2 - 2 - 3 - 4 - 9 + 2 - 2 - 4 - 13", "x2": "idiv sub abs n INT+ 1 sub INT- 5 x_0_1", "tree": "((abs(n) sub 1) idiv (-5 sub x_0_1))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 8 + 9 + 11 + 11 + 12 + 11 + 11 + 9 + 8 + 5 + 3 - 1 - 4 - 9", "x2": "sub INT+ 7 add n sub n add n x_0_2", "tree": "(7 sub (n add (n sub (n add x_0_2))))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 8 + 4 + 4 + 8 - 4 + 5 - 2 + 52 + 11 + 50 - 11 - 7 - 13 + 126 + 95 + 144 - 17 - 18 - 19", "x2": "sub relu mul add sub n n INT- 5 sub x_0_3 add abs idiv x_0_6 n n n", "tree": "(relu((((n sub n) add -5) mul (x_0_3 sub (abs((x_0_6 idiv n)) add n)))) sub n)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 1 - 8 - 3 - 10 - 2 - 4 - 1 - 5 - 3 - 10 - 2 - 4 - 1 - 5 - 3 - 10", "x2": "idiv INT+ 1 0 x_0_3", "tree": "(10 idiv x_0_3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 + 9 - 7 + 0 - 2 + 0 - 3 + 0 - 4 + 0 - 4 + 0 - 5 + 0 - 6 + 0", "x2": "idiv mul n idiv x_0_4 relu mul n mul INT+ 7 n INT+ 3", "tree": "((n mul (x_0_4 idiv relu((n mul (7 mul n))))) idiv 3)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 2 + 9 + 5 + 20 + 9 + 21 + 18 + 34 + 24 + 37 + 35 + 52 + 43 + 57 + 56 + 74", "x2": "add n abs idiv add INT+ 5 x_0_4 relu idiv n n", "tree": "(n add abs(((5 add x_0_4) idiv relu((n idiv n)))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 - 3 - 1 + 1 + 10 + 8 + 2 - 7 - 9 - 13 - 13 - 17 - 17 - 19 - 17 - 21 - 21 - 23 - 21 - 21 - 23", "x2": "sub mod sub add mul INT+ 8 sign x_0_8 x_0_1 n mul sign abs sign n INT- 6 n", "tree": "(((((8 mul sign(x_0_8)) add x_0_1) sub n) mod (sign(abs(sign(n))) mul -6)) sub n)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 10 - 14 + 0 - 7 - 14 + 0 - 7 - 14 + 0 - 7 - 14 + 0 - 7 - 14", "x2": "mul INT+ 7 mod sub x_0_1 INT- 5 INT- 3", "tree": "(7 mul ((x_0_1 sub -5) mod -3))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 + 4 - 4 - 4 - 5 + 8 + 10 + 3 + 5 + 7 + 9 + 10 + 8 + 4 + 7 + 8 + 7 + 4 + 0 + 0", "x2": "mod relu sub x_0_1 sub sign INT- 6 sub INT+ 5 abs x_0_7 n", "tree": "(relu((x_0_1 sub (sign(-6) sub (5 sub abs(x_0_7))))) mod n)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 9 + 0 + 4 - 8 + 6 + 9 - 2 + 10 + 3 + 0 + 4 + 4 + 0 + 3 + 4 + 4 + 3 + 0 + 4 + 4 + 0", "x2": "mod relu sqr add x_0_8 idiv sign mod mul add x_0_8 x_0_5 x_0_2 n INT+ 3 INT+ 6", "tree": "(relu(((x_0_8 add (sign((((x_0_8 add x_0_5) mul x_0_2) mod n)) idiv 3)))**2) mod 6)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 4 + 0 + 4 + 4 + 0 + 4 + 4 + 0 + 4 + 4 + 0 + 4", "x2": "mod relu relu sqr mul mul INT- 2 INT+ 1 0 add abs n INT- 3 INT+ 6", "tree": "(relu(relu((((-2 mul 10) mul (abs(n) add -3)))**2)) mod 6)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 4 + 6 + 4 - 8 + 20 + 48 + 140 + 384 + 1260 + 3840 + 1 3860 + 4 6080 + 18 180 + 64 5120 + 270 2700 + 1032 1920 + 4594 5900", "x2": "mul abs add x_0_2 mod abs sub n sign x_0_4 idiv INT- 1 INT+ 8 n", "tree": "(abs((x_0_2 add (abs((n sub sign(x_0_4))) mod (-1 idiv 8)))) mul n)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr sub INT- 3 n", "tree": "((-3 sub n))**2", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 7 - 10 - 5 + 20 - 36 + 77 + 48 - 171 + 370 - 836 - 564 + 2236 - 5166 + 1 2555 + 9040 - 3 7995", "x2": "sub n mul n x_0_4", "tree": "(n sub (n mul x_0_4))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 + 10 - 10 - 15 - 81 - 473 - 3294 - 2 6270 - 23 5957 - 235 6277 - 2589 2779 - 3 1047 7394 - 40 3384 9849 - 564 4800 5112 - 8464 959 9292 - 13 5385 1973 8830", "x2": "add add mul n x_0_1 INT+ 1 0 sub sub mod INT- 1 x_0_2 x_0_3 sub n relu x_0_1", "tree": "(((n mul x_0_1) add 10) add (((-1 mod x_0_2) sub x_0_3) sub (n sub relu(x_0_1))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 8 + 7 + 6 + 9 + 6 - 8 + 9 + 10 + 9 + 8 + 11 + 8 + 12 + 11 + 12 + 11 + 10 + 13 + 10", "x2": "add INT+ 8 mod x_0_7 abs INT- 6", "tree": "(8 add (x_0_7 mod abs(-6)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 2 + 9 + 9 - 4 + 1 + 14 + 16 - 3 + 3 + 16 + 19 + 1 + 8 + 22 + 26 + 9 + 17", "x2": "add add idiv INT+ 9 n x_0_4 idiv mod INT- 8 relu n sqr sqr sign INT+ 3", "tree": "(((9 idiv n) add x_0_4) add ((-8 mod relu(n)) idiv ((sign(3))**2)**2))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 9 - 7 + 0 + 0 + 8 + 9 - 4 - 9 - 2 - 3 + 1 + 289 + 256 + 24 + 90 + 32 + 27 + 23 + 8 8801 + 6 6565 + 1018 + 8537 + 10 3065 + 8 179", "x2": "add x_0_9 sqr add x_0_7 abs x_0_11", "tree": "(x_0_9 add ((x_0_7 add abs(x_0_11)))**2)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 10 - 7 + 9 + 6 + 3 - 9 + 10 - 10 + 256 + 100 + 0 + 16 + 49 + 7 225 + 8100 + 100 + 5 7600 + 2601 + 49 3155 625 + 6535 1056 + 2601", "x2": "sqr sub abs x_0_5 x_0_8", "tree": "((abs(x_0_5) sub x_0_8))**2", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 8 + 4 + 12 + 9 + 18 + 16 + 18 + 17 + 20 + 20 + 24 + 25 + 30 + 32", "x2": "relu add mod relu n INT+ 8 x_0_2", "tree": "relu(((relu(n) mod 8) add x_0_2))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 0 - 3 + 2 + 2 - 5 + 56 + 67 + 76 + 100 + 128 + 83 + 158 + 187 + 201 + 228 + 334 + 249 + 332", "x2": "sub x_0_6 sub x_0_5 mul n n", "tree": "(x_0_6 sub (x_0_5 sub (n mul n)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 4 - 2 + 2 - 2 - 2 - 4 - 2 - 8 - 4 - 8 - 8 - 10", "x2": "add INT+ 1 sub mod sub INT+ 3 sqr n INT+ 6 n", "tree": "(1 add (((3 sub (n)**2) mod 6) sub n))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 7 - 2 + 1 - 4 + 2 + 9 - 10 + 6 + 21 + 6 - 3 + 12 - 6 - 27 + 30 - 18 - 63 - 18 + 9 - 36 + 18", "x2": "mul x_0_8 sub INT- 1 INT+ 2", "tree": "(x_0_8 mul (-1 sub 2))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 3 + 8 + 14 + 23 + 33 + 45 + 59 + 75 + 93 + 113 + 135 + 159 + 185", "x2": "sub sqr sub relu mul sub n n idiv INT+ 4 sub INT- 6 INT+ 1 0 n idiv x_0_1 n", "tree": "(((relu(((n sub n) mul (4 idiv (-6 sub 10)))) sub n))**2 sub (x_0_1 idiv n))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 - 2 + 8 + 3 - 10 + 2 + 0 + 1 + 2 + 8 + 3 + 10 + 2 + 0 + 1 + 2 + 8 + 3 + 10", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 5 + 8 + 9 - 5 + 10 - 54 - 45 - 72 - 81 - 45 - 90 - 486 - 405 - 648 - 729 - 405 - 810 - 4374", "x2": "mul INT- 9 abs x_0_6", "tree": "(-9 mul abs(x_0_6))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 10 + 8 - 8 - 6 - 4 - 109 + 7 - 5054 + 630 - 24 7600 + 3 1201 - 1213 2098 + 152 3794 - 5 9447 2171 + 7441 8354 - 291 2910 4981 + 36 3436 7541 - 1 4273 2462 225", "x2": "add add x_0_5 mul relu sqr INT- 7 add mod sqr x_0_4 INT+ 1 0 x_0_2 sign x_0_1", "tree": "((x_0_5 add (relu((-7)**2) mul (((x_0_4)**2 mod 10) add x_0_2))) add sign(x_0_1))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 1 - 5 + 7 - 23 + 66 + 148 + 2301 - 6599 - 1 4799 + 7570 5202 - 4 8767 2698 + 147 9901 + 18 4596 7934 4358 5993 + 487 6726 9801 - 1 4799 99 - 1845 9679 3443 5859 9299", "x2": "sub abs sign n mul x_0_3 mod sqr INT+ 1 0 sub mul INT+ 5 x_0_2 INT+ 6", "tree": "(abs(sign(n)) sub (x_0_3 mul ((10)**2 mod ((5 mul x_0_2) sub 6))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 8 - 7 + 2 - 10 + 34 + 46 + 64 + 81 + 100 + 120 + 143 + 168 + 194 + 224 + 254 + 289 + 322", "x2": "sub add sqr n sign mod INT- 5 x_0_2 sub abs mod sub INT+ 8 x_0_5 INT+ 3 INT- 1", "tree": "(((n)**2 add sign((-5 mod x_0_2))) sub (abs(((8 sub x_0_5) mod 3)) sub -1))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 18 + 36 + 72 + 144 + 288 + 576 + 1152 + 2304 + 4608 + 9216 + 1 8432 + 3 6864 + 7 3728", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 676 + 256 + 36 + 16 + 484 + 144 + 4 + 64 + 324 + 64 + 4 + 144 + 196 + 16 + 36 + 256", "x2": "sqr add n mul INT+ 9 mod n INT- 4", "tree": "((n add (9 mul (n mod -4))))**2", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 2 - 9 - 6 + 9 - 1 - 1 + 8 - 53 - 29 + 8 + 8 + 23 + 696 + 413 + 31 + 7 + 7 + 2095 + 1246 + 38 + 14 + 14 + 2102", "x2": "add mul add sqr sign sqr INT+ 7 idiv n x_0_8 x_0_5 abs INT- 7", "tree": "((((sign((7)**2))**2 add (n idiv x_0_8)) mul x_0_5) add abs(-7))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 25 + 101 + 506 + 3037 + 2 1260 + 17 81 + 153 730 + 1530 7301 + 1 6838 312 + 20 2056 3745 + 262 6732 8686 + 3677 4260 1605 + 5 5161 3902 4076 + 88 2582 2438 5217 + 1500 3898 1454 8690 + 2 7007 166 6187 6421", "x2": "add idiv add mod x_0_1 n add mul relu n x_0_1 n n mul x_0_1 n", "tree": "((((x_0_1 mod n) add ((relu(n) mul x_0_1) add n)) idiv n) add (x_0_1 mul n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 9 + 5 - 10 - 6 + 7 + 8 + 8 + 6 + 9 + 9 + 8 + 9 + 9 + 8 + 9 + 9 + 8 + 9 + 9 + 8", "x2": "sub idiv relu x_0_3 x_0_4 INT- 8", "tree": "((relu(x_0_3) idiv x_0_4) sub -8)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 4 + 1 - 2 + 1 - 5 + 3 + 6 + 4 + 17 - 19 - 19 - 71 + 317 - 365 - 1366 + 2 2526 + 11 5724 - 49 8519 + 3077 199 - 26 679 8459 + 576 9061 4122 + 15 3395 2881 2755", "x2": "sub mul idiv x_0_3 INT- 6 mul INT- 5 relu INT- 9 add x_0_6 mul x_0_4 x_0_3", "tree": "(((x_0_3 idiv -6) mul (-5 mul relu(-9))) sub (x_0_6 add (x_0_4 mul x_0_3)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 8 - 8 - 1 - 4 + 10 + 9 + 12 - 9 - 5 - 2 + 18 + 17 + 11 - 13 - 15 + 7 + 30 + 26 + 6 - 15", "x2": "sub abs x_0_5 x_0_3", "tree": "(abs(x_0_5) sub x_0_3)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 8 + 10 - 21 + 34 - 58 + 108 - 167 + 332 - 492 + 1006 - 1465 + 3030 - 4382 + 9104 - 1 3131 + 2 7328 - 3 9376 + 8 2002", "x2": "idiv mul sqr n add add add x_0_2 n x_0_2 x_0_2 mul n n", "tree": "(((n)**2 mul (((x_0_2 add n) add x_0_2) add x_0_2)) idiv (n mul n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 3 - 3 + 3 + 2 + 3 + 0 - 2 - 12 - 10 - 43 + 12 + 102 - 65 - 1002 + 2822 - 1 1995 + 28 8540 + 77 7048 - 2 8910 2079 + 21 9253 2450", "x2": "sub mul x_0_5 sub x_0_2 INT+ 3 x_0_3", "tree": "((x_0_5 mul (x_0_2 sub 3)) sub x_0_3)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 7 + 1 - 9 - 10 - 15 - 35 - 122 - 121 - 100 - 22 + 3 - 9 - 22 - 51 - 66 - 218 - 145 - 106 - 45 - 23", "x2": "add mod sign INT+ 4 sub x_0_1 n mul idiv x_0_3 x_0_5 n", "tree": "((sign(4) mod (x_0_1 sub n)) add ((x_0_3 idiv x_0_5) mul n))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 3 - 7 + 0 + 3 + 5 - 9 + 1 - 10 - 2 - 1 - 3 - 3 - 3 - 33 - 6 - 339 - 23 - 9 - 82 - 11 - 12 - 379 - 86 - 12 8493", "x2": "add sub relu x_0_1 add n INT- 9 mod idiv x_0_1 x_0_4 sub mul abs x_0_2 x_0_8 INT+ 4", "tree": "((relu(x_0_1) sub (n add -9)) add ((x_0_1 idiv x_0_4) mod ((abs(x_0_2) mul x_0_8) sub 4)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 10 - 80 - 262 - 640 - 1322 - 2440 - 4150 - 6632 - 1 90 - 1 4752 - 2 870 - 2 8720 - 3 8602 - 5 840 - 6 5782", "x2": "sub INT+ 9 add abs relu mod sign INT- 4 sqr n sqr mul n abs n", "tree": "(9 sub (abs(relu((sign(-4) mod (n)**2))) add ((n mul abs(n)))**2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 9 + 7 + 3 + 9 + 7 + 10 - 7 - 10 - 91 - 21 + 12 + 120 + 211 + 351 + 246 + 86 - 1461 - 1839 - 1611 + 789 + 5220 + 1 2942 + 1 8600 + 2 664", "x2": "add mul n x_0_8 x_0_1", "tree": "((n mul x_0_8) add x_0_1)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 10 + 8 + 3 - 9 - 14 + 56 - 14 - 14 + 49 + 84 - 14 + 84 + 84 - 14 - 14 + 84 - 14 - 14 + 84 + 84", "x2": "mul INT- 7 mod INT+ 2 x_0_5", "tree": "(-7 mul (2 mod x_0_5))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 4 + 8 - 7 + 4 - 9 + 4 + 4 - 8 + 2 - 8 + 2 - 8 + 2 + 2 - 8 + 2 - 8 + 2 - 8 + 2 + 2 - 8 + 2", "x2": "sub mul sign idiv x_0_7 n INT+ 5 add INT+ 1 0 INT- 7", "tree": "((sign((x_0_7 idiv n)) mul 5) sub (10 add -7))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 2 - 5 - 8 - 5 + 9 + 4 + 13 + 16 + 10 + 8 + 12 + 27 + 23 + 33 + 37 + 32 + 31 + 36 + 52 + 49 + 60 + 65", "x2": "add abs n add INT+ 6 sub x_0_7 sign n", "tree": "(abs(n) add (6 add (x_0_7 sub sign(n))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 - 16 - 81 - 256 - 625 - 1296 - 2401 - 4096 - 6561 - 1 0 - 1 4641 - 2 736 - 2 8561 - 3 8416 - 5 625 - 6 5536", "x2": "idiv sub sqr abs sqr n mod n n INT- 1", "tree": "(((abs((n)**2))**2 sub (n mod n)) idiv -1)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 8 - 6 - 1 + 7 + 2 + 2 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1", "x2": "idiv sub idiv sqr n n x_0_4 abs n", "tree": "((((n)**2 idiv n) sub x_0_4) idiv abs(n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 8 + 8 + 10 - 7 + 5 + 4 + 24 + 72 + 80 + 110 - 84 + 65 + 56 + 360 + 1152 + 1360 + 1980 - 1596 + 1300 + 1176 + 7920 + 2 6496", "x2": "mul add x_0_7 relu mod x_0_1 sqr abs idiv n n relu n", "tree": "((x_0_7 add relu((x_0_1 mod (abs((n idiv n)))**2))) mul relu(n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 1 - 10 + 1 + 0 + 4 + 0 + 0 + 4 - 2 + 1 + 0 + 4 + 0 + 0 + 4 - 2 + 1 + 0 + 4", "x2": "mod INT+ 4 sub mod sign mod mul INT- 6 x_0_3 sub x_0_4 add INT+ 6 n INT+ 6 x_0_1", "tree": "(4 mod ((sign(((-6 mul x_0_3) mod (x_0_4 sub (6 add n)))) mod 6) sub x_0_1))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 5 + 4 - 1 - 9 + 7 - 5 + 10 - 9 + 4 + 85 + 282 + 193 + 438 + 217 + 470 + 1814 + 5330 + 4064 + 8902 + 4798 + 1 496 + 4 372 + 12 3362 + 9 8146 + 22 1911", "x2": "sub mul abs n add x_0_6 add INT- 3 relu add n n x_0_9", "tree": "((abs(n) mul (x_0_6 add (-3 add relu((n add n))))) sub x_0_9)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 9 - 40 - 9 - 38 - 12 - 37 - 11 - 36 - 10 - 35 - 9 - 34 - 8 - 33 - 7 - 32 - 6", "x2": "mod sub mod INT- 5 n x_0_1 sub INT- 1 abs sqr INT- 7", "tree": "(((-5 mod n) sub x_0_1) mod (-1 sub abs((-7)**2)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 5 + 9 - 3 - 2 - 4 - 3 + 29 + 34 + 46 + 95 + 78 + 193 + 296 + 2248 + 6544 + 1 3587 + 21 3483 + 51 373 + 262 2118 + 6319 693 + 11 4731 6278 + 171 5913 3671", "x2": "add abs mul sub sign n x_0_3 x_0_7 n", "tree": "(abs(((sign(n) sub x_0_3) mul x_0_7)) add n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr abs abs n", "tree": "(abs(abs(n)))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 + 9 + 6 + 4 + 9 + 10 - 1 + 1 + 20 + 19 + 19 + 26 + 29 + 20 + 24 + 45 + 46 + 48 + 57 + 62 + 55 + 61 + 84", "x2": "add add add n mod n sqr relu n INT- 7 x_0_7", "tree": "(((n add (n mod (relu(n))**2)) add -7) add x_0_7)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 5 - 2 + 2 + 7 + 13 + 20 + 28 + 37 + 47 + 58 + 70 + 83 + 97 + 112 + 128 + 145 + 163", "x2": "add add idiv n abs n x_0_1 n", "tree": "(((n idiv abs(n)) add x_0_1) add n)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240", "x2": "sub n sqr n", "tree": "(n sub (n)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 8 - 7 + 8 - 8 + 10 + 5 + 3 + 5 - 9 + 27 - 9 + 10 + 9 + 23 + 2 + 23 - 10 + 29 - 10 + 12 + 8 + 25 + 17 + 25 + 5", "x2": "add idiv INT- 8 sign mul sub x_0_4 n x_0_10 add add INT+ 9 x_0_8 sub x_0_9 x_0_1", "tree": "((-8 idiv sign(((x_0_4 sub n) mul x_0_10))) add ((9 add x_0_8) add (x_0_9 sub x_0_1)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 4 - 99 + 1755 - 3 1617 + 56 9079 - 1024 3449 + 1 8438 2055 - 33 1887 7017 + 597 3978 6279 - 1 753 1615 3049 + 19 3556 9075 4855 - 348 4024 3358 7417 + 6271 2438 457 3479 - 11 2882 3884 8232 2649 + 203 1882 9926 8180 7655 - 3657 3893 8682 7253 7817 + 6 5833 89 6289 568 679", "x2": "mul sub sub x_0_1 sub INT- 3 add x_0_1 n n INT- 9", "tree": "(((x_0_1 sub (-3 sub (x_0_1 add n))) sub n) mul -9)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 + 6 + 1 + 0 - 18 - 12 - 2 + 0 - 36 - 24 - 4 + 0 - 72 - 48 - 8 + 0 - 144 - 96 - 16 + 0", "x2": "mul abs x_0_4 idiv INT+ 2 sign INT- 2", "tree": "(abs(x_0_4) mul (2 idiv sign(-2)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 5 - 3 + 5 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign add x_0_5 sub x_0_5 sign add INT+ 1 0 sign abs sub x_0_5 n", "tree": "sign((x_0_5 add (x_0_5 sub sign((10 add sign(abs((x_0_5 sub n))))))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 2 - 9 - 19 - 30 - 49 - 66 - 73 - 72 - 146 - 85 - 177 - 108 - 218 - 121 - 249 - 144 - 290", "x2": "sub mod INT+ 1 0 sub mod x_0_1 x_0_2 mul n abs INT- 9 INT- 6", "tree": "((10 mod ((x_0_1 mod x_0_2) sub (n mul abs(-9)))) sub -6)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 1 + 3 + 4 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1", "x2": "idiv sign sub sqr mod mul n n x_0_3 sub n n INT+ 2", "tree": "(sign(((((n mul n) mod x_0_3))**2 sub (n sub n))) idiv 2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 4 + 5 + 4 - 10 - 1 + 9 + 0 + 1 - 9 + 0 - 1 + 9 + 0 + 1 - 9 + 0 - 1 + 9 + 0 + 1 - 9 + 0 - 1", "x2": "sub sqr mod sub abs relu x_0_8 x_0_7 INT+ 1 x_0_3", "tree": "((((abs(relu(x_0_8)) sub x_0_7) mod 1))**2 sub x_0_3)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 4 - 10 + 2 - 168 + 4704 + 210 - 42 + 4 9392 - 9 8784 - 1 4521 2480 + 426 9246 9120 - 103 7232 + 7172 3348 1216 + 30 4946 2080 - 8965 4185 1520 + 650 9453 2841 5054 8480 - 15 619 310 5536 - 3215 1491 6610 7638 9052 4160 + 2 177 6105 406 5886 3100 4622 9278 4906 2400", "x2": "mul x_0_4 mul sub x_0_1 relu add sub x_0_1 n sub n INT- 3 mod INT- 1 INT+ 8", "tree": "(x_0_4 mul ((x_0_1 sub relu(((x_0_1 sub n) add (n sub -3)))) mul (-1 mod 8)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 9 - 8 + 8 - 9 - 9 - 7 + 9 - 9 - 7 + 16 + 14 - 9 - 7 + 16 + 14 - 9 - 7 + 16 + 14 - 9 - 7 + 16 + 14 - 9 - 7", "x2": "sub mul sign relu abs sub add sub x_0_9 n idiv n n n INT+ 7 x_0_2", "tree": "((sign(relu(abs((((x_0_9 sub n) add (n idiv n)) sub n)))) mul 7) sub x_0_2)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 6 + 7 - 5 - 10 + 49 + 36 + 81 + 64 + 81 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr add n sign sub x_0_5 relu INT+ 1", "tree": "((n add sign((x_0_5 sub relu(1)))))**2", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 18 + 16 + 12 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240", "x2": "add abs sub n add INT- 9 abs mul n n INT+ 9", "tree": "(abs((n sub (-9 add abs((n mul n))))) add 9)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 9 - 2 - 5 - 26 - 38 - 51 - 66 - 83 - 101 - 122 - 145 - 171 - 198 - 227 - 258 - 291 - 326 - 363 - 402", "x2": "sub idiv n idiv add sub sqr mod INT+ 9 n x_0_1 x_0_4 mul n idiv INT+ 3 x_0_1 sqr n", "tree": "((n idiv (((((9 mod n))**2 sub x_0_1) add x_0_4) idiv (n mul (3 idiv x_0_1)))) sub (n)**2)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 8 - 2 + 7 - 8 + 3 + 9 - 1 + 8 - 2 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign idiv n sub x_0_9 x_0_5", "tree": "sign((n idiv (x_0_9 sub x_0_5)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 1 + 265 + 1 4747 + 140 2309 + 2 894 6291 + 449 2345 6021 + 13 1625 7261 9151 + 5041 2653 1314 1745 + 244 5013 6768 7375 5559 + 14 6456 3192 4473 7959 1841 + 1 618 831 4524 3502 409 9971 + 916 3405 7543 4514 2261 3829 3981 + 92 8253 29 1516 2911 780 9182 6075 + 10 9069 7278 4253 1642 516 7578 9566 6349 + 1 4713 5062 8595 7518 5127 7106 4012 5393 8551 + 2258 5232 1489 4479 917 1035 8325 9247 9571 5721 + 391 4020 7314 1213 2265 9340 5097 8827 6709 7539 1311", "x2": "sub mul mul n sub x_0_1 sub sub INT- 8 n abs INT- 2 mul INT+ 6 n x_0_1", "tree": "(((n mul (x_0_1 sub ((-8 sub n) sub abs(-2)))) mul (6 mul n)) sub x_0_1)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 - 5 - 10 - 2 + 6 - 3 - 328 - 260 - 550 - 2 + 60 - 6 - 1 3776 - 1 660 - 4 8400 - 14 + 4200 - 30 - 93 6768 - 141 7780 - 600 1600 - 14", "x2": "mul mod add n sub x_0_6 INT+ 7 mul INT+ 7 n x_0_6", "tree": "(((n add (x_0_6 sub 7)) mod (7 mul n)) mul x_0_6)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 8 - 9 + 4 + 1 - 5 + 7 + 4 + 7 - 1 - 10 - 6 - 5 - 10 - 3 + 1 + 8 + 7 - 3 - 9 - 14 - 24 - 27 - 26 - 18", "x2": "add x_0_8 x_0_1", "tree": "(x_0_8 add x_0_1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 7 - 2 - 2 - 7 + 0 + 49 + 4 + 4 + 49 + 0 + 2401 + 16 + 16 + 2401 + 0 + 576 4801 + 256 + 256 + 576 4801 + 0 + 33 2329 3056 9601", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 1 + 7 + 5 + 12 + 11 + 19 + 19 + 28 + 29 + 39 + 41 + 52 + 55 + 67 + 71 + 84 + 89", "x2": "add n x_0_2", "tree": "(n add x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 1 + 0 - 4 + 20 + 76 + 300 + 1196 + 4780 + 1 9116 + 7 6460 + 30 5836 + 122 3340 + 489 3356 + 1957 3420 + 7829 3676 + 3 1317 4700 + 12 5269 8796", "x2": "mul sub abs x_0_1 sign mul add relu relu x_0_2 sign n x_0_1 relu INT+ 4", "tree": "((abs(x_0_1) sub sign(((relu(relu(x_0_2)) add sign(n)) mul x_0_1))) mul relu(4))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 5 - 9 - 6 + 6 - 9 + 4 - 6 + 8 + 4 + 8 - 15 - 20 - 19 - 7 - 24 - 11 - 23 - 10 - 15 - 11 - 35 - 41 - 41 - 30 - 48 - 36", "x2": "sub add sub x_0_10 idiv x_0_9 sub mod INT- 4 abs mul x_0_3 x_0_6 add INT+ 7 x_0_5 mod n INT- 1 n", "tree": "(((x_0_10 sub (x_0_9 idiv ((-4 mod abs((x_0_3 mul x_0_6))) sub (7 add x_0_5)))) add (n mod -1)) sub n)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 2 + 7 + 5 + 2 + 8 - 9 - 13 + 1 + 7 + 4 - 14 - 73 - 247 - 612 - 1295 - 2394 - 4092 - 6547 - 9927 - 1 4394 - 2 124 - 2 7266", "x2": "mul idiv INT- 3 n sub sqr relu sqr add n INT- 1 0 abs x_0_7", "tree": "((-3 idiv n) mul ((relu(((n add -10))**2))**2 sub abs(x_0_7)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 + 0 - 8 + 1 + 7 - 6 + 5 - 7 - 6 - 1 - 14 - 3 - 15 - 14 - 9 - 22 - 11 - 23 - 22 - 17 - 30 - 19 - 31 - 30 - 25", "x2": "add mul x_0_5 relu sub sign idiv INT- 5 add INT- 1 0 x_0_9 relu INT- 1 0 INT- 8", "tree": "((x_0_5 mul relu((sign((-5 idiv (-10 add x_0_9))) sub relu(-10)))) add -8)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 8 + 4 - 9 - 4 + 3 - 3 - 9 + 4 + 3 + 7 - 3 - 7 + 1 + 7 + 1 + 7 + 11 + 1 + 2 + 17 + 18 + 18 + 3 + 1 + 22 + 24 + 21 + 26", "x2": "mod idiv sub x_0_4 n add mod x_0_6 sub x_0_11 idiv x_0_2 add x_0_3 INT+ 8 x_0_12 n", "tree": "(((x_0_4 sub n) idiv ((x_0_6 mod (x_0_11 sub (x_0_2 idiv (x_0_3 add 8)))) add x_0_12)) mod n)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 9 - 10 - 8 + 3 - 3 + 6 + 3703 + 5000 + 5184 + 1960 + 4851 + 2028 + 1 7633 8357 + 3 4706 6174 + 3 9969 3660 + 6003 1504 + 3 9609 8793 + 7221 6162 + 59 808 9326 1744 5659 + 240 9098 2078 6851 2180 + 335 4854 9886 8837 9904 + 7 9283 1157 9486 3750", "x2": "sub mul n sqr sub n add INT- 7 x_0_6 mul relu INT- 4 x_0_5", "tree": "((n mul ((n sub (-7 add x_0_6)))**2) sub (relu(-4) mul x_0_5))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 6 + 0 + 2 + 8 + 10 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1", "x2": "sign idiv mul INT+ 1 idiv add x_0_6 n sub mod n n n x_0_4", "tree": "sign(((1 mul ((x_0_6 add n) idiv ((n mod n) sub n))) idiv x_0_4))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 - 6 + 0 + 5 + 5 - 8 + 7 + 5 + 0 - 4 - 5 + 10 - 8 - 6 + 1 + 8 + 10 - 17 + 17 + 14 + 0 - 16", "x2": "idiv mul sub x_0_6 mod sign n n add n mul abs sign n sub n n INT- 1 0", "tree": "(((x_0_6 sub (sign(n) mod n)) mul (n add (abs(sign(n)) mul (n sub n)))) idiv -10)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 5 - 9 - 2 + 3 - 2 + 2 - 1 + 6 + 4 + 1 + 9 + 15 + 11 + 16 + 14 + 22 + 21 + 19 + 28 + 35 + 32 + 38 + 37 + 46", "x2": "relu relu add n x_0_8", "tree": "relu(relu((n add x_0_8)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 10 + 4 - 9 - 1 + 8 + 2 - 2 - 3 - 7 - 4 + 8 + 112 + 29 + 95 + 16 + 80 + 21 + 22 + 28 + 69 + 37 + 86 + 1 2567 + 865 + 9050 + 282 + 6427", "x2": "add n sqr x_0_11", "tree": "(n add (x_0_11)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 1 - 10 + 4 + 2 - 6 - 15 - 1 - 3 - 11 - 20 - 6 - 8 - 16 - 25 - 11 - 13 - 21 - 30 - 16 - 18", "x2": "add x_0_4 INT- 5", "tree": "(x_0_4 add -5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 9 + 0 - 9 - 9 - 18 - 27 - 45 - 72 - 117 - 189 - 306 - 495 - 801 - 1296 - 2097 - 3393 - 5490", "x2": "add x_0_1 x_0_2", "tree": "(x_0_1 add x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 2 + 5 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2", "x2": "mod sub n sqr idiv x_0_1 sub x_0_2 INT+ 6 INT+ 3", "tree": "((n sub ((x_0_1 idiv (x_0_2 sub 6)))**2) mod 3)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152", "x2": "relu add n relu x_0_1", "tree": "relu((n add relu(x_0_1)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 - 3 + 10 + 6 + 3 - 5 - 3 - 17 - 69 - 33 - 5 - 3 - 17 - 69 - 33 - 5 - 3 - 17 - 69 - 33 - 5", "x2": "mod x_0_5 mul sqr mul x_0_3 sign INT+ 1 0 idiv add add n n relu mod x_0_5 x_0_5 INT- 6", "tree": "(x_0_5 mod (((x_0_3 mul sign(10)))**2 mul (((n add n) add relu((x_0_5 mod x_0_5))) idiv -6)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 9 + 7 - 7 + 7 - 21 + 7 - 35 + 7 - 49 + 7 - 63 + 7 - 77 + 7 - 91 + 7 - 105", "x2": "add mod INT+ 7 add x_0_1 mul INT- 1 mul n x_0_1 mod abs sub abs x_0_1 n idiv x_0_1 x_0_1", "tree": "((7 mod (x_0_1 add (-1 mul (n mul x_0_1)))) add (abs((abs(x_0_1) sub n)) mod (x_0_1 idiv x_0_1)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 2 + 4 - 1 + 1 + 6 - 12 + 28 - 8 + 9 + 60 - 132 + 336 - 104 + 126 + 900 - 2112 + 5712 - 1872 + 2394 + 1 8000 - 4 4352", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 0 - 6 + 10 + 4 - 6 + 4 - 4 - 10 + 36 + 0 + 36 + 100 + 16 + 36 + 16 + 16 + 100 + 1296 + 0 + 1296 + 1 0 + 256 + 1296 + 256", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 3 + 2 - 6 + 1 - 9 - 10 + 1 + 5 + 23 - 5 + 19 - 16 - 19 + 19 + 33 + 96 - 2 + 82 - 40 - 51 + 82 + 131 + 352", "x2": "sub idiv mul INT+ 7 idiv x_0_7 idiv n n INT+ 2 mul mod INT- 8 INT- 7 sqr INT- 4", "tree": "(((7 mul (x_0_7 idiv (n idiv n))) idiv 2) sub ((-8 mod -7) mul (-4)**2))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 - 10 + 4 + 8 + 0 + 0 + 0 + 0 - 8 - 8 - 8 - 8 + 0 + 0 + 0 + 0 - 8 - 8 - 8 - 8", "x2": "idiv INT- 8 sub sign n sqr x_0_4", "tree": "(-8 idiv (sign(n) sub (x_0_4)**2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 9 + 3 + 3 + 8 + 4 + 4 + 9 + 5 + 5 + 10 + 6 + 6 + 11 + 7 + 7 + 12 + 8 + 8", "x2": "abs sub idiv sub INT- 2 mod INT+ 1 add INT- 1 mod n sign sqr n INT+ 2 x_0_3", "tree": "abs((((-2 sub (1 mod (-1 add (n mod sign((n)**2))))) idiv 2) sub x_0_3))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 2 - 6 + 5 + 5 + 2 - 11 - 54 - 207 - 344 + 77 - 4074 + 91 - 3 1206 - 240 2757 + 112 + 119 - 371 3388 + 133 + 140", "x2": "mul relu sign mul INT- 6 INT- 3 mod mul n INT+ 7 mul x_0_4 x_0_1", "tree": "(relu(sign((-6 mul -3))) mul ((n mul 7) mod (x_0_4 mul x_0_1)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "abs mul n n", "tree": "abs((n mul n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 + 3 - 1 - 9 - 6 + 7 - 8 + 18 + 6 + 11 + 20 + 18 + 6 + 22 + 0 + 10 + 6 + 0 + 1 + 14 + 0 + 22 + 13", "x2": "relu sub n x_0_7", "tree": "relu((n sub x_0_7))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 8 + 11 + 16 + 23 + 32 + 43 + 56 + 71 + 88 + 107 + 128 + 151 + 176 + 203 + 232", "x2": "add add sqr add n INT- 2 mod INT- 1 add INT+ 5 n n", "tree": "((((n add -2))**2 add (-1 mod (5 add n))) add n)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 2 + 9 + 4 + 5 + 2 + 3 + 2 + 5 + 4 + 5 + 2 + 3 + 2 + 5 + 4 + 5 + 2 + 3", "x2": "abs add x_0_3 INT- 7", "tree": "abs((x_0_3 add -7))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 8 - 4 - 5 - 6 - 6 - 9 - 6 - 7 - 43 - 40 - 49 - 266 - 404 - 335 - 1912 - 1 7639 - 1 3805 - 9 4024 - 469 3887 - 559 4860 - 3151 1846 - 89 7480 5969", "x2": "sub sub x_0_4 INT+ 1 relu mul x_0_3 x_0_7", "tree": "((x_0_4 sub 1) sub relu((x_0_3 mul x_0_7)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 - 5 + 5 - 1 - 7 - 7 - 1 + 9 - 4 - 10 + 0 + 0 + 2 + 5 + 11 + 1 + 7 + 7 + 1 + 12 + 4 + 10 + 0 + 0 + 24 + 22 + 17", "x2": "abs abs mod sub sub mul n n x_0_12 n n", "tree": "abs(abs(((((n mul n) sub x_0_12) sub n) mod n)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 4 - 1 + 4 + 11 + 20 + 31 + 44 + 59 + 76 + 95 + 116 + 139 + 164 + 191 + 220 + 251", "x2": "sub sqr n INT+ 5", "tree": "((n)**2 sub 5)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 4 + 13 + 9 + 19 + 15 + 25 + 21 + 31 + 27 + 37 + 33 + 43 + 39 + 49 + 45 + 55 + 51", "x2": "add relu add add INT- 2 INT+ 1 0 sign add INT+ 1 relu n relu add x_0_2 INT- 3", "tree": "(relu(((-2 add 10) add sign((1 add relu(n))))) add relu((x_0_2 add -3)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 0 - 4 - 10 + 9 - 7 - 9 - 7 - 4 + 1 - 19 - 4 - 3 - 6 - 10 - 16 + 1 - 13 - 15 - 13 - 10 - 5", "x2": "sub sign relu x_0_5 relu add x_0_6 n", "tree": "(sign(relu(x_0_5)) sub relu((x_0_6 add n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 9 + 1 - 7 + 5 - 10 + 3 + 8 + 5 + 11 + 5 + 2 + 5 + 21 + 3 + 23 + 2 + 11 + 7 + 8 + 1 + 6 + 1 + 6", "x2": "abs add INT- 3 idiv sub INT- 5 n sub n add INT+ 9 x_0_7", "tree": "abs((-3 add ((-5 sub n) idiv (n sub (9 add x_0_7)))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 8 + 10 - 7 - 3 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3", "x2": "idiv add n abs mod sub INT+ 1 n x_0_5 INT- 9", "tree": "((n add abs(((1 sub n) mod x_0_5))) idiv -9)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 6 + 4 + 7 - 1 + 6 - 5 + 20 + 0 + 40 + 70 + 0 + 60 + 0 + 200 + 0 + 400 + 700 + 0 + 600 + 0 + 2000 + 0", "x2": "mul INT+ 1 0 mod relu x_0_7 sub add x_0_1 x_0_2 INT- 6", "tree": "(10 mul (relu(x_0_7) mod ((x_0_1 add x_0_2) sub -6)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 3 - 10 + 8 + 6 + 1 + 21 + 21 + 18 + 40 + 42 + 41 + 65 + 69 + 70 + 96 + 102 + 105 + 133", "x2": "add sub sqr relu n sqr sub sign n n x_0_3", "tree": "(((relu(n))**2 sub ((sign(n) sub n))**2) add x_0_3)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 5 - 3 - 7 + 2 + 7 - 1 - 5 + 4 + 9 + 1 - 3 + 6 + 11 + 3 - 1 + 8 + 13", "x2": "sub sub n add x_0_2 INT- 3 add sub sign n mul relu INT- 6 mod INT- 5 INT+ 5 INT+ 8", "tree": "((n sub (x_0_2 add -3)) sub ((sign(n) sub (relu(-6) mul (-5 mod 5))) add 8))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 9 - 3 - 3 + 2 + 0 - 6 - 2 - 7 + 10 + 2 + 2 + 3 + 0 + 3 + 3 + 4 + 4 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0", "x2": "idiv n sqr add sign relu n sqr sub mod relu x_0_9 INT- 6 sign n", "tree": "(n idiv ((sign(relu(n)) add (((relu(x_0_9) mod -6) sub sign(n)))**2))**2)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 1 + 2 + 2 + 3 + 4 + 4 + 5 + 6 + 6 + 7 + 8 + 8 + 9 + 10 + 10", "x2": "idiv add n n INT+ 3", "tree": "((n add n) idiv 3)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 3 - 7 - 9 + 4 - 2 + 98 + 360 + 216 - 180 - 3234 + 1 7280 - 26 6760 + 89 7120 + 1023 5610 + 5142 5280 - 146 9767 5720 - 2789 1101 9520 + 51 8803 2543 7710 - 922 6826 5881 6000 + 315 9229 8129 4108 1880 + 3 1554 7626 3933 2308 9920", "x2": "mul x_0_4 mul n sub mod INT- 6 n add x_0_6 INT+ 4", "tree": "(x_0_4 mul (n mul ((-6 mod n) sub (x_0_6 add 4))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 3 + 0 + 8 + 2 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1", "x2": "idiv sub x_0_3 INT+ 9 sub INT- 6 mod idiv x_0_2 add mul INT- 6 INT+ 1 0 INT- 7 n", "tree": "((x_0_3 sub 9) idiv (-6 sub ((x_0_2 idiv ((-6 mul 10) add -7)) mod n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 + 10 + 11 + 7 + 9 + 6 + 9 + 11 + 11 + 14 + 15 + 19 + 21 + 31 + 33 + 50 + 55 + 69", "x2": "abs sub sub mod INT+ 7 sub INT+ 1 0 mod x_0_2 n n x_0_2", "tree": "abs((((7 mod (10 sub (x_0_2 mod n))) sub n) sub x_0_2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 5 - 2 - 8 + 1 - 8 - 7 - 1 + 3 - 11 - 19 - 20 + 12 - 19 - 20 - 23 + 12 - 31 - 51 - 63 + 44 - 20 - 63 - 75", "x2": "sub mul idiv idiv n x_0_1 sign x_0_4 x_0_1 abs x_0_7", "tree": "((((n idiv x_0_1) idiv sign(x_0_4)) mul x_0_1) sub abs(x_0_7))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 10 - 5 - 4 + 10 + 3 + 4 - 25 - 17 - 4 + 18 + 11 - 31 - 45 - 25 + 39 + 46 - 16 - 94 - 81 + 45", "x2": "sub INT- 1 0 sub x_0_3 x_0_5", "tree": "(-10 sub (x_0_3 sub x_0_5))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 9 - 2 - 5 - 3 - 6 - 3 - 6 - 3 - 6 - 5 - 6 - 5 - 6 - 5 - 7 - 5 - 7", "x2": "mul INT+ 1 idiv relu add sub relu add n n mod INT- 1 0 n INT+ 6 x_0_1", "tree": "(1 mul (relu(((relu((n add n)) sub (-10 mod n)) add 6)) idiv x_0_1))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 7 - 5 - 4 - 10 - 15 - 12 - 17 - 28 - 30 - 32 - 48 - 61 - 65 - 83 - 112 - 129 - 151 - 198 - 244 - 283", "x2": "sub add x_0_3 x_0_4 INT+ 3", "tree": "((x_0_3 add x_0_4) sub 3)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 + 2 - 10 - 10 + 1 + 7 - 10 + 0 - 8 - 6 - 8 + 49 + 49 + 81 + 16 + 4 + 121 + 49 + 324 + 49 + 4 + 9 + 196 + 4 + 484 + 1 + 529", "x2": "sqr mod sub sqr mul sign n add sub n x_0_11 sign INT- 8 INT+ 2 n", "tree": "(((((sign(n) mul ((n sub x_0_11) add sign(-8))))**2 sub 2) mod n))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 2 + 1 + 1 - 7 - 2 + 2 - 7 - 10 + 0 + 0 + 0 + 0 + 0 + 225 + 256 + 0 + 324 + 361 + 0 + 0 + 0 + 0 + 0 + 5625 + 6084", "x2": "sqr mul abs n idiv idiv x_0_10 abs INT- 3 n", "tree": "((abs(n) mul ((x_0_10 idiv abs(-3)) idiv n)))**2", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 4 - 2 - 1 - 5 + 27 + 28 + 18 + 21 + 6 + 152 + 160 + 95 + 256 + 189 + 854 + 1055 + 663 + 2133 + 1999 + 4932", "x2": "sub mod sign INT- 8 abs add x_0_3 mul INT+ 6 x_0_5 x_0_5", "tree": "((sign(-8) mod abs((x_0_3 add (6 mul x_0_5)))) sub x_0_5)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 10 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sub sqr add n sub n n mul abs x_0_1 idiv n relu x_0_2", "tree": "(((n add (n sub n)))**2 sub (abs(x_0_1) mul (n idiv relu(x_0_2))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 7 + 2 - 1 + 8 + 1 + 1 + 2 + 2 + 4 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9", "x2": "sub idiv n INT+ 2 sub INT+ 1 idiv x_0_6 mul n idiv n INT- 7", "tree": "((n idiv 2) sub (1 sub (x_0_6 idiv (n mul (n idiv -7)))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 9 - 7 - 10 + 1 + 6 - 63 + 2 + 91 + 71 - 65 + 697 + 608 - 1272 - 2246 - 1135 - 1 1914 - 2 2161 + 2615 + 4 6263 + 6 7852 + 32 8825", "x2": "sub mod x_0_6 x_0_1 mul x_0_5 abs abs n", "tree": "((x_0_6 mod x_0_1) sub (x_0_5 mul abs(abs(n))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 16 + 9 + 4 + 1 + 0 + 16 + 9 + 4 + 1 + 0 + 16 + 9 + 4 + 1 + 0 + 16", "x2": "sqr mod n mod sign sqr n INT- 6", "tree": "((n mod (sign((n)**2) mod -6)))**2", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 4 + 3 + 56 + 32 + 24 + 448 + 256 + 192 + 3584 + 2048 + 1536 + 2 8672 + 1 6384 + 1 2288 + 22 9376 + 13 1072 + 9 8304 + 183 5008", "x2": "abs mul INT+ 8 x_0_3", "tree": "abs((8 mul x_0_3))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 2 + 1 + 25 + 25 + 0 + 16 + 64 + 81 + 16 + 25 + 225 + 256 + 1 + 4 + 289 + 441 + 9", "x2": "relu sqr add sub n idiv x_0_2 n mod x_0_2 add n INT- 6", "tree": "relu((((n sub (x_0_2 idiv n)) add (x_0_2 mod (n add -6))))**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 - 3 - 10 + 9 - 7 - 2 + 2 + 8 + 9 + 1 - 3 - 1 + 1 - 2 - 5 + 4 + 1 + 1 + 9 - 3 - 9 + 9 - 5 - 2", "x2": "mul sign INT+ 2 idiv INT+ 9 x_0_9", "tree": "(sign(2) mul (9 idiv x_0_9))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 6 - 2 + 5 - 6 - 9 - 2 + 0 + 4 - 6 - 4 - 8 + 11 + 21 - 1 + 1 + 10 + 27 + 4 - 2 + 22 + 10 + 47 + 32 + 20 + 28 + 11 + 37", "x2": "add mod x_0_11 add n sub add INT- 9 mod x_0_8 n sub INT- 9 sign sign INT+ 3 x_0_10", "tree": "((x_0_11 mod (n add ((-9 add (x_0_8 mod n)) sub (-9 sub sign(sign(3)))))) add x_0_10)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 10 - 8 + 3 + 7 - 10 + 2 + 7 - 9 + 4 + 10 - 5 + 9 + 16 + 2 + 17 + 25 + 12 + 28", "x2": "sub add x_0_3 n abs INT+ 8", "tree": "((x_0_3 add n) sub abs(8))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 8 + 54 + 49 + 3 + 8 + 54 + 49 + 3 + 8 + 54 + 49 + 3 + 8 + 54 + 49 + 3 + 8", "x2": "sub abs abs mul INT- 7 sub INT- 8 relu INT- 5 sub x_0_2 sign mod INT+ 9 INT+ 9", "tree": "(abs(abs((-7 mul (-8 sub relu(-5))))) sub (x_0_2 sub sign((9 mod 9))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 1 - 6 + 0 - 5 + 1 - 4 + 2 - 3 + 3 - 2 + 4 - 1 + 5 + 0 + 6 + 1 + 7 + 2", "x2": "add sign INT+ 9 x_0_2", "tree": "(sign(9) add x_0_2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 228 + 3786 - 9 1452 + 274 2558 - 9873 3684 + 41 4681 2322 - 1990 4699 4924 + 10 7485 3772 1078 - 644 9122 6327 1172 + 4 2564 2093 7588 8826 - 306 4623 750 6400 6428 + 2 3904 599 8549 9248 7566 - 200 7941 387 8193 6897 2692 + 1 8071 4693 4903 7432 752 1298 - 173 4861 575 759 3479 2206 9964 + 1 7695 5827 8657 7453 4880 5110 6022", "x2": "mul INT- 6 add relu INT+ 2 mul sub add x_0_1 sqr n INT- 8 n", "tree": "(-6 mul (relu(2) add (((x_0_1 add (n)**2) sub -8) mul n)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 1 + 2 + 4 - 5 - 5 + 15 + 10 + 11 + 13 + 4 + 4 + 24 + 19 + 20 + 22 + 13 + 13 + 33 + 28 + 29 + 31", "x2": "add x_0_6 relu INT+ 9", "tree": "(x_0_6 add relu(9))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 9 - 5 - 6 - 2 - 2 + 13 + 23 + 20 + 22 + 19 + 8 - 6 - 15 - 11 - 12 - 8 + 16 + 31 + 41 + 38 + 40", "x2": "add sub n x_0_6 mul sign x_0_5 INT- 6", "tree": "((n sub x_0_6) add (sign(x_0_5) mul -6))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 9 - 1 + 10 + 7 + 4 + 5 + 16 + 6 + 6 + 7 + 9 + 6 + 7 + 7 + 7 + 6 + 7 + 7 + 7 + 6", "x2": "add idiv x_0_4 abs x_0_5 INT+ 6", "tree": "((x_0_4 idiv abs(x_0_5)) add 6)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 4 - 2 - 5 - 8 + 6 - 5 - 10 + 4 + 2 + 5 + 8 + 6 + 5 + 10 + 4 + 2 + 5 + 8 + 6 + 5 + 10 + 4 + 2", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 7 + 7 + 3 - 16 - 12 + 7 + 3 - 16 - 12 + 7 + 3 - 16 - 12 + 7 + 3 - 16 - 12 + 7 + 3", "x2": "sub sub INT- 8 x_0_2 sign abs x_0_4", "tree": "((-8 sub x_0_2) sub sign(abs(x_0_4)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 6 + 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11 - 12 - 12 - 13 - 13 - 14 - 14 - 15", "x2": "add sign INT- 7 idiv x_0_2 idiv sign idiv n add INT+ 4 x_0_2 INT- 1", "tree": "(sign(-7) add (x_0_2 idiv (sign((n idiv (4 add x_0_2))) idiv -1)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 5 - 2 + 5 - 6 + 7 - 42 + 5 + 0 + 15 + 0 + 7 + 0 + 55 + 0 + 45 + 0 + 357 + 0 + 2255 + 0 + 1 5885", "x2": "mul sub x_0_4 sqr INT- 2 relu x_0_6", "tree": "((x_0_4 sub (-2)**2) mul relu(x_0_6))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 3 - 8 + 520 + 2 6150 + 156 9480 + 1 982 7200 + 87 8408 4000 + 7904 2630 6800 + 79 316 4796 0 + 8692 5150 2636 0 + 104 3006 9520 638 4000 + 1 3558 629 6465 9512 0 + 189 8007 1198 4196 2640 0 + 2 8468 5422 8720 1430 240 0 + 455 4749 8369 4479 4251 6480 0 + 7 7427 5206 1595 7770 9415 2800 0 + 1393 6441 2771 1122 9143 7346 800 0 + 26 4783 7302 4042 3158 6218 7942 800 0", "x2": "mul abs mul INT- 1 0 sub x_0_3 x_0_1 n", "tree": "(abs((-10 mul (x_0_3 sub x_0_1))) mul n)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 3600 + 8100 + 8100 + 3600 + 0 + 12 9600 + 9 9225 + 5 7600 + 0 + 0 + 1 4400 + 1 8225 + 1 4400 + 5625 + 0 + 17 6400", "x2": "sqr mul abs mul INT+ 3 mod n INT- 5 mul INT+ 5 mod n INT+ 9", "tree": "((abs((3 mul (n mod -5))) mul (5 mul (n mod 9))))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 8 + 6 - 6 - 5 + 7 + 69 + 29 - 33 - 4 + 82 + 4765 + 759 - 3676 - 743 + 1 400 + 2270 5968 + 56 5681 - 919 2992 - 1 3632 + 1 1735 2992", "x2": "sub sqr x_0_5 x_0_2", "tree": "((x_0_5)**2 sub x_0_2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 7 + 9 + 3 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1", "x2": "sign idiv mul x_0_1 idiv n x_0_3 idiv x_0_3 x_0_3", "tree": "sign(((x_0_1 mul (n idiv x_0_3)) idiv (x_0_3 idiv x_0_3)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 1 - 3 + 8 + 14 + 15 + 7 + 17 + 58 + 74 + 27 + 21 + 134 + 78 + 15 + 16 + 18 + 99 + 343 + 120", "x2": "add sqr mod sub x_0_4 idiv abs sub x_0_2 INT- 6 INT- 8 n n", "tree": "((((x_0_4 sub (abs((x_0_2 sub -6)) idiv -8)) mod n))**2 add n)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 + 2 - 9 + 6 - 8 - 8 - 10 + 7 - 99 + 24 - 135 - 6 - 848 + 128 - 1440 + 112 - 8 5041 - 2784 - 19 6155 + 588 - 7212 7488 + 35 8400 - 2 8248 7680 - 6 3840", "x2": "mul mul sub n add INT+ 6 x_0_4 sign add INT+ 8 INT+ 6 x_0_8", "tree": "(((n sub (6 add x_0_4)) mul sign((8 add 6))) mul x_0_8)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 6 - 9 + 1 + 36 + 1 + 25 + 36 + 36 + 36 + 9 + 36 + 36 + 36 + 25 + 36 + 36 + 36 + 9 + 36", "x2": "sqr mod abs x_0_4 INT- 7", "tree": "((abs(x_0_4) mod -7))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 - 8 + 1 - 1 - 4 + 3 + 6 + 1 + 8 + 6 + 3 + 6 + 1 + 8 + 6 + 3 + 6 + 1 + 8 + 6 + 3", "x2": "mul mod x_0_5 n sign relu idiv INT- 5 mod sign abs sqr x_0_5 INT+ 7", "tree": "((x_0_5 mod n) mul sign(relu((-5 idiv (sign(abs((x_0_5)**2)) mod 7)))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 2 + 7 + 6 + 6 - 26 - 36 - 49 - 64 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401", "x2": "sub idiv INT+ 3 mul add sign idiv INT- 1 0 INT+ 6 sqr x_0_3 x_0_4 sqr n", "tree": "((3 idiv ((sign((-10 idiv 6)) add (x_0_3)**2) mul x_0_4)) sub (n)**2)", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 - 17 - 66 - 327 - 1958 - 1 3701 - 10 9602 - 98 6411 - 986 4102 - 1 850 5113 - 13 206 1346 - 169 2679 7487 - 2369 7516 4806 - 3 5546 2747 2077 - 56 8740 3955 3218 - 966 8586 7240 4691", "x2": "add mul n x_0_1 mod INT- 2 n", "tree": "((n mul x_0_1) add (-2 mod n))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 5 - 8 + 9 - 7 - 3 + 0 + 2 + 8 + 8 - 2 + 8 + 8 + 8 + 8 - 7 - 8 + 8 - 10 - 11 - 12 - 13 + 8 + 8", "x2": "sub mul n sub relu sign INT- 1 relu idiv x_0_7 INT+ 5 INT- 8", "tree": "((n mul (relu(sign(-1)) sub relu((x_0_7 idiv 5)))) sub -8)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 2 - 10 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 - 8 + 7 + 2 - 6 + 5 + 3 + 5 + 0 - 8 - 72 - 56 - 28 - 76 - 72 + 0 - 68 - 40 + 212 + 0 + 112 + 0 + 0 - 288", "x2": "mul mul add INT- 2 INT+ 6 idiv abs x_0_7 sub mul x_0_1 sqr n n add n x_0_8", "tree": "(((-2 add 6) mul (abs(x_0_7) idiv ((x_0_1 mul (n)**2) sub n))) mul (n add x_0_8))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 5 + 0 + 2 - 1 - 7 + 6 - 9 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1", "x2": "sub n add n sign mod n add n idiv add sqr x_0_7 sqr INT- 6 x_0_8", "tree": "(n sub (n add sign((n mod (n add (((x_0_7)**2 add (-6)**2) idiv x_0_8))))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 7 - 3 + 7 + 7 + 7 - 9 - 5 - 6 + 31 + 29 + 21 + 22 + 20 + 35 + 34 + 40 + 4 + 8 + 17 + 18 + 19 + 5 + 7 + 6", "x2": "sub abs INT+ 1 0 sub INT- 8 sub add add add n idiv x_0_4 x_0_7 n mod x_0_8 x_0_8 add n x_0_8", "tree": "(abs(10) sub (-8 sub ((((n add (x_0_4 idiv x_0_7)) add n) add (x_0_8 mod x_0_8)) sub (n add x_0_8))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 5 + 9 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "idiv idiv mod x_0_3 sub x_0_2 INT+ 2 abs INT+ 7 abs n", "tree": "(((x_0_3 mod (x_0_2 sub 2)) idiv abs(7)) idiv abs(n))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 9 - 2 - 3 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0", "x2": "add sub mod x_0_4 sqr sign sign x_0_2 sub n n mod n INT+ 5", "tree": "(((x_0_4 mod (sign(sign(x_0_2)))**2) sub (n sub n)) add (n mod 5))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 3 + 5 - 8 - 8 + 9 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "idiv sign INT+ 9 sign x_0_5", "tree": "(sign(9) idiv sign(x_0_5))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 3 - 16 + 16 + 148 - 208 - 2092 + 3320 + 3 7644 - 6 6416 - 82 8188 + 159 3960 + 2153 2860 - 4463 912 - 6 4598 5836 + 14 2818 9160 + 219 6351 8396 - 514 1480 9792", "x2": "mul INT+ 2 sub sub sub INT+ 4 n mul relu relu n x_0_2 mod n INT+ 8", "tree": "(2 mul (((4 sub n) sub (relu(relu(n)) mul x_0_2)) sub (n mod 8)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 7 - 15 - 23 - 33 - 45 - 59 - 75 - 93 - 113 - 135 - 159 - 185 - 213 - 243 - 275 - 309", "x2": "mod INT+ 1 sub mul idiv relu n add mod n n x_0_1 n add mul n n abs INT- 4", "tree": "(1 mod (((relu(n) idiv ((n mod n) add x_0_1)) mul n) sub ((n mul n) add abs(-4))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 2 + 2 - 5 - 8 + 1 + 3 + 68 + 6 + 9 + 0 + 249 + 101 + 3676 + 1731 + 1 + 2 9467 + 241 + 55 6558 + 3489 + 0", "x2": "mod sub sign x_0_3 x_0_5 sub abs mul add n x_0_2 n sqr sqr INT+ 1", "tree": "((sign(x_0_3) sub x_0_5) mod (abs(((n add x_0_2) mul n)) sub ((1)**2)**2))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 9 + 6 + 1 - 5 + 17 + 1 + 21 + 23 + 100 + 27 + 166 + 205 + 1223 + 295 + 2401 + 3185 + 2 690 + 5203 + 4 5506 + 6 3581", "x2": "abs sub sub INT- 7 n mod n sub INT+ 1 add INT+ 9 mul n sub x_0_4 INT+ 4", "tree": "abs(((-7 sub n) sub (n mod (1 sub (9 add (n mul (x_0_4 sub 4)))))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 121 + 169 + 225 + 289 + 361 + 441 + 529 + 625 + 729 + 841 + 961 + 1089 + 1225 + 1369 + 1521 + 1681", "x2": "sqr add sub n INT- 9 n", "tree": "(((n sub -9) add n))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 16 + 43 + 83 + 138 + 210 + 301 + 413 + 548 + 708 + 895 + 1111 + 1358 + 1638 + 1953 + 2305 + 2696", "x2": "add mul n add relu INT+ 6 n x_0_1", "tree": "((n mul (relu(6) add n)) add x_0_1)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 6 + 3 + 10 + 2 - 7 + 6 + 3 + 9 - 5 + 4 + 2 + 5 + 2 + 9 + 1 + 6 + 5 + 2 + 8 + 4 + 3 + 1 + 4 + 1 + 8 + 0", "x2": "relu relu sub abs x_0_11 sqr abs sign abs abs sqr n", "tree": "relu(relu((abs(x_0_11) sub (abs(sign(abs(abs((n)**2)))))**2)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 9 + 5 + 1 + 3 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "idiv sqr n sqr sign abs idiv INT- 5 add relu x_0_2 idiv x_0_1 idiv x_0_4 INT+ 8", "tree": "((n)**2 idiv (sign(abs((-5 idiv (relu(x_0_2) add (x_0_1 idiv (x_0_4 idiv 8)))))))**2)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 9 - 8 - 9 - 3 - 9 + 4 + 9 + 163 + 1731 + 1 9170 + 23 187 + 4 + 9 + 163 + 1731 + 1 9170 + 23 187 + 4 + 9 + 163 + 1731", "x2": "mod x_0_6 mul n add sign mod add n abs n idiv n n add relu x_0_1 n", "tree": "(x_0_6 mod (n mul (sign(((n add abs(n)) mod (n idiv n))) add (relu(x_0_1) add n))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 3 + 7 + 0 + 0 - 6 + 3 + 3 - 5 - 9 - 1 - 9 - 10 - 7 - 15 - 16 - 23 - 15 - 16 - 25 - 30 - 23 - 32 - 34 - 32 - 41 - 43", "x2": "sub x_0_11 n", "tree": "(x_0_11 sub n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 4 - 5 + 5 - 4 + 6 - 3 + 7 - 2 + 8 - 1 + 9 + 0 + 10 + 1 + 11 + 2 + 12 + 3", "x2": "add INT+ 1 x_0_2", "tree": "(1 add x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 7 + 0 - 2 - 9 + 2 - 1 - 8 - 10 - 17 - 6 - 9 - 16 - 18 - 25 - 14 - 17 - 24 - 26 - 33 - 22", "x2": "sub x_0_5 INT+ 8", "tree": "(x_0_5 sub 8)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 8 - 1 + 6 + 3 + 4 - 10 - 8 - 8 - 6 - 9 - 8 - 20 - 16 - 16 - 18 - 18 - 24 - 20 - 32 - 32 - 36 - 36", "x2": "sub mod n x_0_6 n", "tree": "((n mod x_0_6) sub n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 3 - 10 - 3 + 3 + 10 + 3 - 3 - 10 - 3 + 3 + 10 + 3 - 3 - 10 - 3 + 3 + 10 + 3", "x2": "sub sub idiv mul n relu n n n x_0_3", "tree": "((((n mul relu(n)) idiv n) sub n) sub x_0_3)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 - 3 + 4 - 9 - 7 + 1 + 3 - 4 + 1 + 9 - 9 + 3 + 169 + 196 + 227 + 255 + 288 + 324 + 361 + 399 + 441 + 484 + 528 + 576 + 625 + 676 + 729 + 784", "x2": "add sqr n idiv sub x_0_12 INT- 2 x_0_3", "tree": "((n)**2 add ((x_0_12 sub -2) idiv x_0_3))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "12"}
{"x1": "- 1 - 2 - 3 - 4 - 5 - 6 - 7 + 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 + 0", "x2": "mod mul n INT+ 7 INT- 8", "tree": "((n mul 7) mod -8)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 2 + 3 + 4 + 5 + 6 + 1 + 8 + 1 + 10 + 1 + 1 + 2 + 4 + 7 + 1 + 6", "x2": "mod n add INT+ 7 sub INT+ 5 abs x_0_1", "tree": "(n mod (7 add (5 sub abs(x_0_1))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 5 + 8 - 4 + 1 + 3 + 100 + 1 + 81 + 15 + 1 + 8925 + 15 + 5695 + 85 + 15 + 7955 7475 + 85 + 3237 405 + 6315 + 85", "x2": "abs sub relu x_0_5 sqr sub INT+ 5 x_0_5", "tree": "abs((relu(x_0_5) sub ((5 sub x_0_5))**2))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 8 + 0 + 7 + 13 + 6 + 14 + 21 + 15 + 24 + 32 + 27 + 37 + 46 + 42 + 53 + 63 + 60 + 72", "x2": "add x_0_3 n", "tree": "(x_0_3 add n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 3 - 1 - 5 - 5 - 1 - 6 + 1 - 1 + 5 - 4 - 27 - 27 - 33 - 35 - 33 - 40 - 53 - 58 - 55 - 67 - 93 - 96 - 129 - 135 - 137", "x2": "add x_0_10 mul idiv n INT+ 6 sub mul add n sub INT- 3 x_0_9 relu INT- 3 n", "tree": "(x_0_10 add ((n idiv 6) mul (((n add (-3 sub x_0_9)) mul relu(-3)) sub n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 7 + 3 + 9 - 3 + 3 - 5 + 4 - 6 + 22 + 20 + 25 + 20 + 33 + 28 + 37 + 29 + 40 + 13 + 16 + 12 + 18 + 6 + 12 + 4", "x2": "add abs INT- 1 0 add sub n x_0_9 INT+ 6", "tree": "(abs(-10) add ((n sub x_0_9) add 6))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 8 - 14 - 18 - 20 - 20 - 18 - 14 - 8 + 0 + 10 + 22 + 36 + 52 + 70 + 90 + 112", "x2": "mul add n sub INT- 9 mod sub n n n n", "tree": "((n add (-9 sub ((n sub n) mod n))) mul n)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 3 + 4 - 8 - 10 + 0 - 1 - 2 - 3 - 4 - 25 - 72 - 151 - 268 - 2109 - 7570 - 1 9339 - 4 1016 - 37 9633 - 158 2144 - 464 1375", "x2": "sub mul relu mul sub n relu INT+ 8 n x_0_4 add sign INT- 3 add n INT- 4", "tree": "((relu(((n sub relu(8)) mul n)) mul x_0_4) sub (sign(-3) add (n add -4)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 5 - 7 - 3 + 6 - 3 - 8 - 5 - 1 + 2 - 3 + 5 + 12 + 13 + 14 - 15 - 16 + 17 - 18 - 19 + 20 - 21 - 22 - 23 + 24 - 25 + 26 - 27", "x2": "mul abs relu n sign mul mod INT+ 3 mul n x_0_7 x_0_11", "tree": "(abs(relu(n)) mul sign(((3 mod (n mul x_0_7)) mul x_0_11)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 1 - 16 + 94 - 76 + 674 - 96 + 854 - 116 + 1034 - 136 + 1214 - 156 + 1394 - 176 + 1574 - 196 + 1754", "x2": "sub mul add mod INT+ 4 x_0_1 n mul INT- 1 0 relu INT+ 1 INT- 4", "tree": "((((4 mod x_0_1) add n) mul (-10 mul relu(1))) sub -4)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 + 5 - 1 - 1 + 1 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv mul abs abs sign abs sqr INT+ 5 x_0_3 INT+ 5", "tree": "((abs(abs(sign(abs((5)**2)))) mul x_0_3) idiv 5)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 + 10 + 9 - 9 + 1 + 6 - 8 - 1 + 19 + 19 + 2 + 13 + 19 + 6 + 14 + 35 + 36 + 20 + 32 + 39 + 27 + 36 + 58", "x2": "add x_0_7 n", "tree": "(x_0_7 add n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 2 + 8 + 8 - 1 + 0 + 6 + 6 - 3 - 2 + 4 + 4 - 5 - 4 + 2 + 2 - 7 - 6 + 0 + 0", "x2": "sub x_0_4 sub x_0_3 add x_0_3 INT- 2", "tree": "(x_0_4 sub (x_0_3 sub (x_0_3 add -2)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 10 - 1 - 17 - 9 - 26 - 19 - 37 - 31 - 50 - 45 - 65 - 61 - 82 - 79 - 101 - 99 - 122", "x2": "sub INT- 3 sub n x_0_2", "tree": "(-3 sub (n sub x_0_2))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 + 9 - 9 - 9 + 12 + 145 + 36 + 57 + 292 + 1805 + 684 + 1039 + 4436 + 2 7477 + 1 1404 + 1 8185 + 8 436 + 52 2721 + 22 8812 + 38 2695", "x2": "add sqr n add mul x_0_4 add INT+ 1 n add sqr n INT+ 1 0", "tree": "((n)**2 add ((x_0_4 mul (1 add n)) add ((n)**2 add 10)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 7 + 9 + 9 + 5 - 8 - 10 + 5 + 10 + 10 + 4 + 21 + 22 + 19 + 7 + 6 + 22 + 28 + 29 + 24 + 42 + 44 + 42 + 31 + 31", "x2": "add n x_0_9", "tree": "(n add x_0_9)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 2 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr mul sign x_0_1 add add INT+ 4 n sub INT- 2 idiv INT+ 7 INT- 9", "tree": "((sign(x_0_1) mul ((4 add n) add (-2 sub (7 idiv -9)))))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 6 + 0 + 7 - 8 + 1 - 4 - 7 + 4 + 4 - 1 - 6 + 21 + 12 + 40 + 5 - 24 - 21 - 48 + 280 + 35 - 48 + 63 - 1152 + 4200 + 1505 - 384 - 1323", "x2": "mul sub x_0_11 INT- 3 x_0_5", "tree": "((x_0_11 sub -3) mul x_0_5)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 8 - 1 - 10 - 10 - 6 - 21 - 12 - 19 - 17 - 11 - 24 - 13 - 18 - 14 - 6 - 17 - 4 - 7 - 1 + 9 + 0", "x2": "add n add idiv add sqr INT- 5 abs x_0_5 sign INT- 5 n", "tree": "(n add ((((-5)**2 add abs(x_0_5)) idiv sign(-5)) add n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 5 - 2 - 2 - 6 + 1 + 1 + 5 - 2 - 2 - 6 + 1 + 1 + 5 - 2 - 2 - 6 + 1 + 1", "x2": "sub idiv INT- 1 INT+ 6 x_0_3", "tree": "((-1 idiv 6) sub x_0_3)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 5 + 6 + 0 + 45 + 250 - 1530 + 0 + 225 - 5 7500 - 8796 7350 + 0 - 1125 - 6440 0 - 5665 969 16 3250 + 0 + 5625 + 3625 7200 0 + 2054 55 1331 4315 3635 81 6250 + 0", "x2": "mul x_0_4 mul sign idiv INT+ 6 mul x_0_3 INT+ 8 add INT+ 5 x_0_1", "tree": "(x_0_4 mul (sign((6 idiv (x_0_3 mul 8))) mul (5 add x_0_1)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 4 + 4 + 1 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10", "x2": "sub add mod sign n x_0_1 n x_0_1", "tree": "(((sign(n) mod x_0_1) add n) sub x_0_1)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 8 - 10 - 8 - 44 - 45 - 266 - 352 - 2165 - 3425 - 2 1992 - 3 9829 - 26 7317 - 53 9756 - 378 2253 - 836 3642 - 6105 5788 - 1 4596 4150 - 11 736 7808 - 28 3437 4619", "x2": "sub x_0_3 mul n sub INT- 1 x_0_2", "tree": "(x_0_3 sub (n mul (-1 sub x_0_2)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 8 - 3 + 8 - 2 + 9 - 9 + 4 + 7 - 8 + 2 - 9 + 9 - 4 - 7 + 8 - 2 + 9 - 9 + 4 + 7 - 8 + 2 - 9 + 9", "x2": "idiv sub sqr relu idiv n mul x_0_8 n x_0_6 sign n", "tree": "(((relu((n idiv (x_0_8 mul n))))**2 sub x_0_6) idiv sign(n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49", "x2": "sqr sub INT+ 2 add n INT- 7", "tree": "((2 sub (n add -7)))**2", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 7 + 7 + 4 + 7 - 9 - 5 - 12 - 5 - 1 - 7 - 14 - 10 - 17 - 10 - 6 - 12 - 19 - 15 - 22 - 15 - 11", "x2": "mod relu n sub sub x_0_6 INT+ 5 n", "tree": "(relu(n) mod ((x_0_6 sub 5) sub n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 2 + 7 + 4 + 0 + 5 + 1 + 6 + 2 + 7 + 3 + 8 + 4 + 9 + 5 + 10 + 6 + 11 + 7", "x2": "relu abs sub add mod relu sub INT- 7 INT+ 8 sign idiv INT+ 9 idiv n x_0_2 n x_0_1", "tree": "relu(abs((((relu((-7 sub 8)) mod sign((9 idiv (n idiv x_0_2)))) add n) sub x_0_1)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 6 + 5 + 16 + 0 + 30 + 112 + 0 + 270 + 1120 + 0 + 3240 + 1 4560 + 0 + 4 8600 + 23 2960 + 0 + 87 4800 + 442 6240", "x2": "mul add sub sign n sign relu x_0_3 abs n relu x_0_3", "tree": "(((sign(n) sub sign(relu(x_0_3))) add abs(n)) mul relu(x_0_3))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 4 + 24 + 60 + 112 + 180 + 264 + 364 + 480 + 612 + 760 + 924 + 1104 + 1300 + 1512 + 1740", "x2": "mul INT+ 4 mul add abs relu add INT- 6 INT+ 8 add INT- 3 n sub add n n INT+ 3", "tree": "(4 mul ((abs(relu((-6 add 8))) add (-3 add n)) mul ((n add n) sub 3)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 5 + 1 + 0 + 2 + 3 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "add relu idiv x_0_4 add x_0_6 abs x_0_3 mul sqr n sign mod INT- 2 mul n x_0_1", "tree": "(relu((x_0_4 idiv (x_0_6 add abs(x_0_3)))) add ((n)**2 mul sign((-2 mod (n mul x_0_1)))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 3 - 2 - 10 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0", "x2": "mod x_0_3 add n INT- 1", "tree": "(x_0_3 mod (n add -1))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 + 4 - 2 + 8 + 0 - 10 - 6 + 10 + 9 + 31 - 222 + 3 - 402 - 93 + 32 + 864 + 4 8558 - 813 + 15 9107 - 3 2152 + 451 - 1 3686 6349 + 23 5787 4467 + 65 7836 + 253 1424 7131", "x2": "sub add mul relu x_0_6 idiv relu x_0_3 INT- 1 sub sqr x_0_6 sqr add x_0_9 n INT- 3", "tree": "(((relu(x_0_6) mul (relu(x_0_3) idiv -1)) add ((x_0_6)**2 sub ((x_0_9 add n))**2)) sub -3)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 26 + 211 + 1692 + 1 3541 + 10 8334 + 86 6679 + 693 3440 + 5546 7529 + 4 4374 242 + 35 4992 1947 + 283 9937 5588 + 2271 9500 4717 + 1 8175 6003 7750 + 14 5404 8030 2015 + 116 3238 4241 6136 + 930 5907 3932 9105", "x2": "sub add mul x_0_1 INT+ 8 n sqr mul relu INT- 4 INT- 3", "tree": "(((x_0_1 mul 8) add n) sub ((relu(-4) mul -3))**2)", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 5 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul mul INT+ 9 sub idiv idiv x_0_2 n idiv INT- 1 abs n idiv n n sqr n", "tree": "sign(((9 mul (((x_0_2 idiv n) idiv (-1 idiv abs(n))) sub (n idiv n))) mul (n)**2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 4 - 9 - 6 + 4 + 8 + 17 + 23 + 19 + 11 - 6 - 29 - 48 - 59 - 53 - 24 + 24 + 83 + 136 + 160 + 136", "x2": "sub x_0_1 x_0_4", "tree": "(x_0_1 sub x_0_4)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 2 + 8 + 0 + 6 - 7 - 10 + 3 - 7 + 2 - 2 + 5 + 6 + 3 - 11 - 9 + 3 - 11 + 4 - 12 + 6 + 5 + 2 - 20 - 18 + 2", "x2": "sub idiv x_0_8 INT+ 4 add INT- 5 mod idiv x_0_9 n n", "tree": "((x_0_8 idiv 4) sub (-5 add ((x_0_9 idiv n) mod n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240", "x2": "sub n sqr relu n", "tree": "(n sub (relu(n))**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 + 10 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mul x_0_2 mul mod x_0_2 sub add sqr sub n n n add INT+ 5 n x_0_1", "tree": "sign((x_0_2 mul ((x_0_2 mod ((((n sub n))**2 add n) sub (5 add n))) mul x_0_1)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 3 + 1 + 1 + 4 - 8 + 1 + 61 + 1 + 1 + 4 + 136 + 1 + 61 + 1 + 1 + 4 + 136 + 1 + 61 + 1 + 1", "x2": "mod x_0_6 abs sqr n", "tree": "(x_0_6 mod abs((n)**2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 80 + 6400 + 51 2000 + 4096 0 + 32 7680 0 + 2621 4400 0 + 20 9715 2000 0 + 1677 7216 0 0 + 13 4217 7280 0 0 + 1073 7418 2400 0 0 + 8 5899 3459 2000 0 0 + 687 1947 6736 0 0 0 + 5 4975 5813 8880 0 0 0 + 439 8046 5111 400 0 0 0 + 3 5184 3720 8883 2000 0 0 0 + 281 4749 7671 656 0 0 0 0", "x2": "mul abs mul INT- 8 x_0_1 INT+ 1 0", "tree": "(abs((-8 mul x_0_1)) mul 10)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 - 9 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1", "x2": "add sqr idiv x_0_2 INT+ 1 0 idiv INT- 6 add INT+ 2 INT+ 7", "tree": "(((x_0_2 idiv 10))**2 add (-6 idiv (2 add 7)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 10 - 3 + 1 + 7 + 7 + 6 + 32 + 53 + 101 + 171 + 289 + 477 + 784 + 1281 + 2086 + 3389 + 5498 + 8911 + 1 4433 + 2 3370 + 3 7829 + 6 1227", "x2": "add add add add add x_0_1 n INT- 1 idiv n x_0_4 x_0_2 sub abs INT+ 6 mod x_0_6 INT- 2", "tree": "(((((x_0_1 add n) add -1) add (n idiv x_0_4)) add x_0_2) add (abs(6) sub (x_0_6 mod -2)))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 - 8 + 0 + 2 + 7 + 6 + 2 - 8 + 73 + 92 + 121 + 146 + 176 + 202 + 227 + 248 + 362 + 416 + 482 + 546 + 617 + 686 + 756 + 824", "x2": "add relu mul n n x_0_8", "tree": "(relu((n mul n)) add x_0_8)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 9 - 6 + 4 + 6 + 3 - 7 + 9 + 6 + 4 + 6 + 3 + 7 + 9 + 6 + 4 + 6 + 3 + 7 + 9 + 6 + 4 + 6", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 10 - 1 + 10 - 9 - 8 - 6 + 8 - 7 - 70 + 8 - 710 - 63 + 5688 + 384 + 4 5496 - 2681 - 318 4650 - 2 1456 + 22 6110 2210 + 135 1791 + 12 8611 4936 4792 + 5 1908 7360 + 58 5130 8515 53 1336 - 1 3916 7320 9479", "x2": "mul sub x_0_2 idiv add mul n relu INT- 1 sign n sign add INT- 5 n x_0_8", "tree": "((x_0_2 sub (((n mul relu(-1)) add sign(n)) idiv sign((-5 add n)))) mul x_0_8)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 1 - 2 + 9 - 9 + 5 + 9 - 6 + 8 + 23 + 20 + 10 + 22 + 27 + 16 + 5 + 45 + 46 + 29 + 43 + 72 + 27 + 27 + 52", "x2": "add x_0_8 abs sub sub INT- 7 x_0_7 sub relu n x_0_5", "tree": "(x_0_8 add abs(((-7 sub x_0_7) sub (relu(n) sub x_0_5))))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 6 + 0 + 5 + 6 - 3 + 0 + 49 + 24 + 0 + 90 + 121 + 0 + 182 + 196 + 0 + 368 + 289 + 0 + 551 + 400 + 0", "x2": "relu mul add n idiv x_0_5 mod n x_0_3 add n relu INT- 9", "tree": "relu(((n add (x_0_5 idiv (n mod x_0_3))) mul (n add relu(-9))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 5 + 5 + 5 + 6 + 7 + 6 + 12 + 8 + 9 + 14 + 14 + 10 + 11 + 16 + 16 + 12 + 13", "x2": "add add n INT+ 4 sub relu INT- 1 mod mod INT- 7 x_0_2 sqr x_0_2", "tree": "((n add 4) add (relu(-1) sub ((-7 mod x_0_2) mod (x_0_2)**2)))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 9 - 3 - 6 - 6 + 7 + 0 - 5 + 3 + 1 + 6 + 9 + 5 + 3 + 8 + 11 + 23 + 27 - 6 + 45 + 13 + 65 + 34 + 87 + 57 + 111", "x2": "sub add mul sign mod INT- 8 mod mul n x_0_8 x_0_9 x_0_2 n sign sqr sign INT- 5", "tree": "(((sign((-8 mod ((n mul x_0_8) mod x_0_9))) mul x_0_2) add n) sub sign((sign(-5))**2))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 7 - 7 + 2 + 9 - 10 + 7 + 63 + 8 + 729 + 40 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "mul abs n sqr idiv mod n x_0_2 sign mul x_0_6 x_0_6", "tree": "(abs(n) mul (((n mod x_0_2) idiv sign((x_0_6 mul x_0_6))))**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 21 + 51 + 93 + 147 + 213 + 291 + 381 + 483 + 597 + 723 + 861 + 1011 + 1173 + 1347 + 1533", "x2": "mod INT- 4 add mul n mul n INT+ 6 INT+ 1", "tree": "(-4 mod ((n mul (n mul 6)) add 1))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 1 + 2 + 0 - 1 + 5 + 6 + 8 + 3 + 7 + 10 + 8 + 7 + 13 + 14 + 16 + 11", "x2": "mul sqr sub add INT+ 1 x_0_1 x_0_1 sub n abs add mod x_0_1 INT+ 8 INT- 6", "tree": "((((1 add x_0_1) sub x_0_1))**2 mul (n sub abs(((x_0_1 mod 8) add -6))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 - 6 - 6 - 12 - 24 - 72 - 216 - 864 - 3456 - 1 7280 - 8 6400 - 51 8400 - 311 400 - 2177 2800 - 1 5240 9600 - 12 1927 6800 - 97 5421 4400", "x2": "mul mod idiv n INT+ 2 sub sub INT+ 1 0 add mul abs sqr INT+ 8 INT- 8 n idiv n n x_0_1", "tree": "(((n idiv 2) mod ((10 sub ((abs((8)**2) mul -8) add n)) sub (n idiv n))) mul x_0_1)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 2 - 1 + 10 - 9 - 4 - 4 + 2 + 10 - 70 - 28 - 31 + 14 + 15 - 964 - 403 - 478 + 19 + 20 - 1 8295 - 8038 - 1 15", "x2": "add add n sign abs INT- 3 mod sign abs INT+ 7 mul x_0_5 n", "tree": "((n add sign(abs(-3))) add (sign(abs(7)) mod (x_0_5 mul n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 7 - 4 + 0 - 6 - 7 + 0 + 6 + 9 - 4 + 5 + 1008 + 1183 - 784 + 0 - 1536 - 2023 + 0 + 2166 + 3600 - 1764 + 2420 + 53 3232 + 68 1408 - 49 0 + 0 - 111 9744 - 158 6032 + 0 + 194 9400 + 345 9600 - 180 6336 + 263 5380", "x2": "mul n mul n idiv x_0_11 idiv n n", "tree": "(n mul (n mul (x_0_11 idiv (n idiv n))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 8 + 5 - 9 - 4 - 5 + 0 + 2 - 1 - 15 - 10 - 11 - 6 - 4 - 7 - 21 - 16 - 17 - 12 - 10 - 13 - 27 - 22 - 23 - 18 - 16 - 19 - 33", "x2": "add x_0_6 INT- 6", "tree": "(x_0_6 add -6)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 2 - 1 - 6 + 5 - 10 + 4 + 6 + 2 + 5 + 0 + 4 + 6 + 2 - 5 + 0 + 4 + 6 + 2 - 14 + 0 + 4 + 6 + 2 - 10 + 0 + 4 + 6", "x2": "mul mod x_0_5 n sign sqr mod sqr x_0_5 x_0_4", "tree": "((x_0_5 mod n) mul sign((((x_0_5)**2 mod x_0_4))**2))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 5 + 6 + 8 - 4 - 6 - 8 + 5 + 2 + 2 + 3 + 5 + 1 + 3 + 5 + 2 + 1 + 1 + 0 + 2 + 2 + 0 + 2 + 1 + 2 + 2 + 3 + 1 + 1 + 3", "x2": "abs add idiv INT- 6 mul sign n add INT+ 3 idiv INT- 7 sqr n abs x_0_8", "tree": "abs(((-6 idiv (sign(n) mul (3 add (-7 idiv (n)**2)))) add abs(x_0_8)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 1 - 15 - 79 - 253 - 621 - 1291 - 2395 - 4089 - 6553 - 9991 - 1 4631 - 2 725 - 2 8549 - 3 8403 - 5 611 - 6 5521 - 8 3505 - 10 4959 - 13 303 - 15 9981 - 19 4461 - 23 4235", "x2": "add n sub INT- 1 relu add mod mul abs n INT+ 9 n sqr sqr relu n", "tree": "(n add (-1 sub relu((((abs(n) mul 9) mod n) add ((relu(n))**2)**2))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 1 + 9 + 3 + 3 + 52 + 25 + 28 + 423 + 232 + 287 + 4660 + 2791 + 3738 + 6 5247 + 4 1872 + 5 9815 + 110 9206 + 75 3703 + 113 6492 + 2218 4127 + 1582 7770 + 2500 2831 + 5 1023 4928 + 3 7986 6487 + 6 2507 782", "x2": "sub mul x_0_3 n INT- 7", "tree": "((x_0_3 mul n) sub -7)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 - 5 + 0 + 5 - 53 - 126 - 359 - 1412 - 109 - 76 - 41 - 15 - 237 - 432 - 913 - 2131 - 332 - 235 - 141 - 75 - 554 - 916 - 1713 - 3364 - 677 - 487", "x2": "idiv sub INT- 1 0 sqr sub INT- 1 mul abs n n sub n x_0_4", "tree": "((-10 sub ((-1 sub (abs(n) mul n)))**2) idiv (n sub x_0_4))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485", "x2": "add sign n sqr n", "tree": "(sign(n) add (n)**2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 7 + 9 + 3 - 10 - 9 + 7 - 137 - 140 - 140 - 137 - 60 - 68 - 140 + 956 + 980 + 980 + 956 + 1292 + 1380 + 1956 + 812 + 1148 + 1236 + 1812 + 668 + 1004 + 1092 + 1668", "x2": "sub sub relu mul INT- 8 x_0_7 mod INT+ 5 sub INT- 1 relu x_0_4 mul relu mul INT- 5 INT- 4 INT+ 7", "tree": "((relu((-8 mul x_0_7)) sub (5 mod (-1 sub relu(x_0_4)))) sub (relu((-5 mul -4)) mul 7))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 64 + 256 + 576 + 1024 + 1600 + 2304 + 3136 + 4096 + 5184 + 6400 + 7744 + 9216 + 1 816 + 1 2544 + 1 4400 + 1 6384 + 1 8496 + 2 736 + 2 3104 + 2 5600 + 2 8224 + 3 976", "x2": "sqr mul n INT+ 8", "tree": "((n mul 8))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 - 7 + 13 - 20 + 13 - 33 + 79 - 586 + 4767 - 3 3955 + 7 2677 - 39 7340 + 205 9377 - 1069 4225 + 1 900 1627 - 12 971 2122 + 85 7698 6481 - 1470 1848 2299 + 4496 3243 3378 - 8 2404 228 3103 + 140 5364 7124 6129 - 1835 2145 2848 2780 + 2 3998 3253 4152 2269 - 50 5800 467 45 429", "x2": "sub x_0_2 mul mod x_0_1 n x_0_1", "tree": "(x_0_2 sub ((x_0_1 mod n) mul x_0_1))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 10 + 8 + 6 + 2 + 0 - 2 - 2 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 2 - 2 + 0 - 2 + 0 - 1 + 0 + 0 - 1 - 2 - 2 - 2", "x2": "idiv mod sqr sub x_0_4 n INT- 9 INT+ 4", "tree": "((((x_0_4 sub n))**2 mod -9) idiv 4)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 6 + 1 + 5 + 7 + 6 - 6 - 3 - 8 + 450 + 330 + 12 + 299 + 308 + 270 - 960 + 7055 + 4752 + 5 1167 + 4 5180 + 7539 + 4 4924 + 1 9895 + 20 7624 - 2 5825 + 243 246 + 198 8955 + 880 6364 + 916 3275 + 195 2970 + 1479 1247", "x2": "mul n add mul x_0_9 idiv INT+ 6 relu sign INT+ 5 sub x_0_7 n", "tree": "(n mul ((x_0_9 mul (6 idiv relu(sign(5)))) add (x_0_7 sub n)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 10 - 8 - 7 - 4 - 2 + 2 + 5 + 10 + 14 + 20 + 25 + 32 + 38 + 46 + 53 + 62 + 70 + 80 + 89 + 100 + 110 + 122 + 133 + 146", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 10 - 48 - 15 - 15 - 80 - 840 + 1 - 80 + 0 - 1 1663 + 1 - 15 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1", "x2": "sub sign n sqr mod sqr x_0_2 sqr n", "tree": "(sign(n) sub (((x_0_2)**2 mod (n)**2))**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 4 + 6 + 5 + 0 + 2 + 5 + 5 + 1 + 4 + 8 + 9 + 6 + 10 + 15 + 17 + 15 + 20 + 26 + 29 + 28 + 34 + 41 + 45 + 45 + 52", "x2": "add add x_0_4 add n INT- 8 mod relu n n", "tree": "((x_0_4 add (n add -8)) add (relu(n) mod n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 10 - 2 + 9 + 2 + 3 + 3 - 2 - 10 + 8 - 97 - 116 - 100 - 109 - 114 - 118 - 96 - 220 - 127 - 101 - 127 - 124 - 124 - 99 - 246 - 224 - 104 - 151 - 125 - 127 - 103 - 276", "x2": "sub x_0_7 abs sub add relu n x_0_8 sub relu x_0_9 relu mul sqr INT+ 7 INT+ 2", "tree": "(x_0_7 sub abs(((relu(n) add x_0_8) sub (relu(x_0_9) sub relu(((7)**2 mul 2))))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 - 5 + 4 - 7 + 6 + 4 + 20 + 10 + 20 + 10 + 24 + 23 + 40 + 31 + 42 + 33 + 48 + 48 + 66 + 58 + 70 + 62 + 78 + 79 + 98 + 91 + 104", "x2": "add add INT+ 4 add INT+ 2 n x_0_6", "tree": "((4 add (2 add n)) add x_0_6)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 2 + 1 - 10 + 5 - 9 - 2 + 1 - 2 + 1 + 10 - 5 + 11 + 2 + 1 + 4 - 1 - 8 + 7 - 9 + 0 - 1 - 4 + 3 + 8 - 5 + 9 + 0 + 3", "x2": "sub sign sqr sub mul abs n sub n x_0_6 mul n x_0_7 sub x_0_7 sign x_0_5", "tree": "(sign((((abs(n) mul (n sub x_0_6)) sub (n mul x_0_7)))**2) sub (x_0_7 sub sign(x_0_5)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 0 - 4 + 4 + 3 + 10 + 5 + 20 + 14 + 36 + 25 + 62 + 45 + 104 + 76 + 172 + 127 + 282 + 209 + 460 + 342 + 748 + 557 + 1214 + 905 + 1968", "x2": "add x_0_2 add x_0_4 INT+ 6", "tree": "(x_0_2 add (x_0_4 add 6))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "mod n INT- 3", "tree": "(n mod -3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 4 + 0 + 12 + 0 + 48 + 0 + 112 + 0 + 212 + 0 + 356 + 0 + 552 + 0 + 808 + 0 + 1132 + 0 + 1532 + 0 + 2016 + 0 + 2592", "x2": "add x_0_2 sqr mul abs abs abs add mod n INT+ 2 sign INT- 5 n", "tree": "(x_0_2 add ((abs(abs(abs(((n mod 2) add sign(-5))))) mul n))**2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "mul sqr abs n n", "tree": "((abs(n))**2 mul n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 - 4 - 3 + 6 - 9 - 3 - 5 - 8 + 1 + 3 - 3 + 8 + 4 + 3 - 6 - 9 - 3 + 5 - 8 + 1 + 3 + 3 - 8 - 4 + 3 + 6 - 9 - 3 + 5 + 8 - 1 + 3 + 3", "x2": "mul x_0_11 sign mul x_0_7 n", "tree": "(x_0_11 mul sign((x_0_7 mul n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 8 - 10 + 10 - 10 - 2 - 3 + 8 + 10 + 10 + 10 + 2 + 3 + 8 + 10 + 10 + 10 + 2 + 3 + 8 + 10 + 10 + 10 + 2 + 3 + 8 + 10 + 10 + 10", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 4 - 3 + 3 - 1 + 9 - 6 + 9 + 2 - 2 - 8 - 904 - 2 - 2113 + 40 + 70 - 5 + 0 - 134 - 1671 - 83 + 1 2906 + 0 + 0 + 84 - 35 + 0 - 3807 + 0 + 13 3497 - 5503", "x2": "idiv sqr mod x_0_9 mul n n sub sub x_0_7 x_0_4 n", "tree": "(((x_0_9 mod (n mul n)))**2 idiv ((x_0_7 sub x_0_4) sub n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 0 + 10 + 4 - 4 + 1 + 5 + 40 + 360 + 3500 + 3 8456 + 46 1520 + 599 9747 + 8399 6388 + 12 5994 5220 + 201 5911 7760 + 3427 494 2420 + 6 1686 8827 1352 + 117 2050 6838 6808 + 2344 1012 4774 1220 + 4 9226 1244 3864 1472 + 108 2974 7099 3131 7544 + 2490 8417 8647 6059 5032 + 5 9780 2020 5293 3566 2688 + 149 4505 359 161 8478 3400 + 3885 7130 6287 890 2631 1392 + 10 4914 2520 6460 6700 2139 4644 + 293 7599 440 2567 2763 1708 8816 + 8519 371 9626 8184 4251 8736 6888", "x2": "mul n sub x_0_1 x_0_7", "tree": "(n mul (x_0_1 sub x_0_7))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 8 + 4 + 7 + 7 + 0 - 6 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0", "x2": "idiv x_0_7 mod INT+ 8 add n INT+ 2", "tree": "(x_0_7 idiv (8 mod (n add 2)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 1 - 7 - 7 - 4 - 2 - 10 + 10 + 2 + 9 - 22 + 8 + 38 + 38 + 23 + 13 + 53 - 47 - 7 - 42 + 113 - 37 - 187 - 187 - 112 - 62 - 262 + 238 + 38 + 213 - 562 + 188", "x2": "add mul x_0_10 INT- 5 INT+ 3", "tree": "((x_0_10 mul -5) add 3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 6 - 8 - 1 + 0 + 11 + 11 + 11 + 11 + 0 + 0 + 0 + 0 + 11 + 11 + 11 + 11 + 0 + 0 + 0 + 0 + 11 + 11 + 11 + 11 + 0 + 0", "x2": "relu sub add INT+ 6 abs mod INT- 2 INT+ 7 relu x_0_4", "tree": "relu(((6 add abs((-2 mod 7))) sub relu(x_0_4)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 + 0 + 10 + 0 + 6 - 7 + 64 + 64 + 64 + 100 + 121 + 169 + 81 + 100 + 121 + 100 + 100 + 81 + 225 + 225 + 256 + 324 + 361 + 441 + 256 + 324 + 324 + 289", "x2": "sqr idiv sub x_0_6 sqr mul n INT+ 1 n", "tree": "(((x_0_6 sub ((n mul 1))**2) idiv n))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 4 - 7 - 3 + 3 + 0 + 1 - 5 + 4 + 4 + 7 - 5 - 7 + 6 + 9 + 8 - 3 + 0 + 2 + 8 - 4 - 4 - 3 + 10 + 9 - 5 - 7 - 3 + 4 + 1 - 1 - 7 + 6 + 7 + 5", "x2": "sub mod sub x_0_10 relu sign add INT+ 8 n mod INT- 2 INT+ 8 x_0_12", "tree": "(((x_0_10 sub relu(sign((8 add n)))) mod (-2 mod 8)) sub x_0_12)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 5 - 59 + 6 - 58 + 7 - 57 + 8 - 56 + 9 - 55 + 10 - 54 + 11 - 53 + 12 - 52 + 13 - 51 + 14 - 50 + 15 - 49 + 16", "x2": "sub sub n x_0_1 mod INT- 8 sqr INT- 8", "tree": "((n sub x_0_1) sub (-8 mod (-8)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 4 - 1 - 10 + 8 - 2 - 51 + 6 - 193 - 52 + 5 - 1061 - 1145 + 4 - 1894 - 6396 + 3 - 1 9070 - 1 3929 + 2 - 10 8615 - 7 1107 + 1 - 28 9693 - 28 8316 + 0 - 114 2978", "x2": "sub x_0_3 add relu sub mul sub add sign mul INT- 9 INT+ 5 INT- 9 x_0_4 x_0_5 x_0_5 INT+ 1", "tree": "(x_0_3 sub (relu(((((sign((-9 mul 5)) add -9) sub x_0_4) mul x_0_5) sub x_0_5)) add 1))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr sub add n INT+ 7 mod sign x_0_1 INT+ 1 0", "tree": "(((n add 7) sub (sign(x_0_1) mod 10)))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 0 + 2 - 5 + 5 - 8 + 7 - 2 - 6 + 6 - 3 - 7 + 5 - 4 - 8 + 4 - 5 - 9 + 3 - 6 - 10 + 2 - 7 - 11 + 1 - 8 - 12 + 0 - 9 - 13 - 1", "x2": "sub x_0_3 mod INT+ 1 mul n sub sub sqr n n x_0_9", "tree": "(x_0_3 sub (1 mod (n mul (((n)**2 sub n) sub x_0_9))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 8 + 10 + 3 + 8 + 6 - 8 + 2 + 4 - 48 + 110 + 27 + 88 + 30 - 56 + 102 + 452 - 1440 + 1 10 + 891 + 5192 + 3150 - 2 5480 + 14 7186 + 452 5876 - 128 7360 + 5200 1950 + 280 9323 + 1 3230 7736 + 4 6364 5350 - 1153 1939 6920", "x2": "mul sub relu abs x_0_6 INT- 3 x_0_8", "tree": "((relu(abs(x_0_6)) sub -3) mul x_0_8)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 10 - 7 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11 - 12 - 12 - 13 - 13 - 14 - 14 - 15", "x2": "add INT- 3 idiv add n sign x_0_2 mod INT+ 7 INT- 9", "tree": "(-3 add ((n add sign(x_0_2)) idiv (7 mod -9)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 6 - 1 + 0 - 3 - 1 + 0 - 2 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_3 idiv INT+ 5 INT+ 2", "tree": "(x_0_3 idiv (5 idiv 2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 8 + 7 - 6 - 4 + 4 - 14 + 4 - 15 + 5 - 33 - 11 + 12 - 30 - 5 - 54 - 27 + 1 - 53 - 23 + 8 - 124 - 91 - 57 - 22 + 14 - 76 - 38", "x2": "add n mod add INT+ 1 0 x_0_1 add x_0_6 mod n mul INT- 6 n", "tree": "(n add ((10 add x_0_1) mod (x_0_6 add (n mod (-6 mul n)))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 4 + 4 - 1 + 6 + 76 + 56 + 56 + 6 + 76 + 776 + 576 + 576 + 76 + 776 + 7776 + 5776 + 5776 + 776 + 7776 + 7 7776 + 5 7776 + 5 7776 + 7776 + 7 7776 + 77 7776 + 57 7776", "x2": "add sqr mod abs INT+ 6 INT- 1 0 mul INT+ 1 0 x_0_5", "tree": "(((abs(6) mod -10))**2 add (10 mul x_0_5))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 7 - 4 + 8 - 5 - 1 - 4 - 1 - 5 - 1 - 4 - 1 - 5 - 1 - 4 - 1 - 5 - 1 - 4 - 1 - 5 - 1 - 4 - 1 - 5 - 1 - 4", "x2": "mod x_0_4 idiv INT+ 9 x_0_1", "tree": "(x_0_4 mod (9 idiv x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 1 + 8 - 7 - 9 + 10 + 0 - 2 + 3 + 9 + 9 - 5 + 7 + 1 + 8 + 7 + 9 + 10 + 0 + 2 + 3 + 9 + 9 + 5 + 7 + 1 + 8 + 7 + 9 + 10 + 0 + 2 + 3 + 9", "x2": "abs x_0_12", "tree": "abs(x_0_12)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 9 + 0 + 5 + 6 + 2 - 3 + 4 - 3 - 5 - 1 + 81 + 0 + 25 + 36 + 4 + 9 + 16 + 9 + 25 + 1 + 6561 + 0 + 625 + 1296 + 16 + 81 + 256 + 81 + 625 + 1 + 4304 6721 + 0", "x2": "abs sqr x_0_10", "tree": "abs((x_0_10)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 10 + 2 + 2 + 8 - 10 - 4 - 7 - 2 + 8 + 3 + 8 + 3 + 2 + 2 + 8 + 1 + 15 + 1 + 16 - 3 + 15 + 3 + 14 + 1 + 14 - 1 + 14 - 1 + 14 + 3", "x2": "add idiv x_0_8 sub add add INT- 3 n INT- 1 0 x_0_5 abs sub x_0_2 mod idiv n n relu INT+ 1 0", "tree": "((x_0_8 idiv (((-3 add n) add -10) sub x_0_5)) add abs((x_0_2 sub ((n idiv n) mod relu(10)))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 12 + 15 + 19 + 24 + 30 + 37 + 45 + 54 + 64 + 75 + 87 + 100 + 114 + 129 + 145 + 162 + 180 + 199 + 219 + 240 + 262 + 285", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462", "x2": "sub sqr n n", "tree": "((n)**2 sub n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 5 + 1 + 4 + 0 + 2 + 0 + 2 + 7 + 0 - 6 - 6 - 6 - 6 + 2 - 6 + 2 - 6 - 6 + 2 + 2 + 2 + 2 - 6 - 6 + 2 - 6 + 2 + 2 - 6 - 6 - 6", "x2": "mod INT- 6 mul INT- 8 sign mod n x_0_10", "tree": "(-6 mod (-8 mul sign((n mod x_0_10))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 1 - 1 + 9 - 2 - 4 + 10 - 6 - 9 + 7 + 90 - 3 - 74 + 103 + 110 - 22 - 61 + 8122 + 70 - 2646 + 1 539 + 1 4746 - 1 55 - 1 1025 + 6597 6939 + 1 5925 - 5897 5623 + 1 1105 4596 + 2 7642 139 - 995 1571", "x2": "sub sqr x_0_7 x_0_2", "tree": "((x_0_7)**2 sub x_0_2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 6 + 6 + 3 + 5 + 5 + 7 + 7 + 9 + 9 + 11 + 11 + 13 + 13 + 15 + 15 + 17 + 17 + 19 + 19 + 21 + 21 + 23 + 23 + 25", "x2": "add n idiv idiv sub INT- 1 x_0_2 x_0_1 INT- 2", "tree": "(n add (((-1 sub x_0_2) idiv x_0_1) idiv -2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 - 10 - 1 + 3 - 1 - 3 - 34 - 61 - 5 - 95 - 75 - 18 - 73 - 91 + 9 - 89 + 12 + 4 - 67 - 66 - 425 - 127 + 2 - 45 - 124 - 28", "x2": "add sub mod INT+ 4 INT- 1 0 abs sqr mod x_0_5 n idiv relu n idiv INT+ 9 INT+ 7", "tree": "(((4 mod -10) sub abs(((x_0_5 mod n))**2)) add (relu(n) idiv (9 idiv 7)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 6 - 6 + 9 - 3 - 9 + 6 + 8 - 4 - 4 + 0 + 2700 + 2946 - 4788 + 1719 + 5526 - 3930 - 5568 + 2948 + 3112 + 0 - 232 2000 - 265 4346 + 451 296 - 168 9777 - 565 8624 + 418 5450 + 615 8208 - 338 1356 - 369 7056 + 0 + 29 4894 0 + 34 7984 7606", "x2": "mul sub sign n sub mul add sqr INT+ 6 INT+ 5 n mod n n x_0_10", "tree": "((sign(n) sub ((((6)**2 add 5) mul n) sub (n mod n))) mul x_0_10)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 450 + 2 7000 + 207 9000 + 1 9958 4000 + 233 5132 8000 + 3 2691 8592 0 + 539 4156 7680 0 + 10 3567 8099 4560 0 + 2288 8485 9979 7760 0 + 57 6789 8471 4903 5520 0 + 1 6438 5106 4374 7512 3200 0 + 526 323 4059 9920 3942 4000 0 + 18 7793 5455 9417 1580 7436 8000 0 + 7436 6244 552 9194 5974 4972 8000 0 + 324 9804 8652 1625 8039 855 3113 6000 0 + 15 5990 6335 3038 385 8761 549 4528 0 0 + 8189 5082 6034 4970 2584 9553 8462 7200 0 0 + 468 4398 7249 1732 2987 8594 4800 675 8400 0 0 + 29 901 1608 1736 5757 5460 7172 841 9696 6400 0 0 + 1 9548 5580 692 6978 9070 9601 9640 5803 6142 800 0 0 + 1417 2704 5550 2205 9707 6446 1423 9420 7620 3008 0 0 0 + 110 5470 9552 9172 657 1962 7991 674 8194 3834 6240 0 0 0", "x2": "mul x_0_1 add sqr sub n INT- 5 INT- 4", "tree": "(x_0_1 mul (((n sub -5))**2 add -4))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 5 - 7 - 13 - 29 - 34 - 40 - 47 - 55 - 64 - 104 - 203 - 395 - 720 - 1224 - 2184 - 3784 - 6232 - 9760 - 1 5251 - 2 3251 - 3 4360 - 4 9232 - 6 8575", "x2": "mod sub x_0_1 mul sqr idiv sub INT- 3 sqr sub n INT+ 7 INT+ 9 n mul n x_0_1", "tree": "((x_0_1 sub ((((-3 sub ((n sub 7))**2) idiv 9))**2 mul n)) mod (n mul x_0_1))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 3 + 2 + 10 - 5 + 0 - 10 + 3 + 2 + 10 - 5 + 0 - 10 + 3 + 2 + 10 - 5 + 0 - 10 + 3 + 2 + 10 - 5 + 0 - 10 + 3 + 2 + 10", "x2": "add mod mod INT+ 5 sign n n x_0_6", "tree": "(((5 mod sign(n)) mod n) add x_0_6)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 7 + 8 - 1 + 14 + 5 + 20 + 11 + 26 + 17 + 32 + 23 + 38 + 29 + 44 + 35 + 50 + 41 + 56 + 47 + 62 + 53 + 68 + 59", "x2": "add INT+ 6 x_0_2", "tree": "(6 add x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 + 4 - 4 - 7 + 9 + 5 + 4 + 4 + 7 + 9 + 5 + 4 + 4 + 7 + 9 + 5 + 4 + 4 + 7 + 9 + 5 + 4 + 4 + 7 + 9 + 5 + 4", "x2": "relu abs sub sub x_0_5 sqr sign x_0_4 INT- 1", "tree": "relu(abs(((x_0_5 sub (sign(x_0_4))**2) sub -1)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 3 - 6 - 12 - 24 - 48 - 96 - 192 - 384 - 768 - 1536 - 3072 - 6144 - 1 2288 - 2 4576 - 4 9152 - 9 8304 - 19 6608 - 39 3216 - 78 6432 - 157 2864 - 314 5728 - 629 1456 - 1258 2912", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 810 + 405 + 270 + 202 + 162 + 135 + 115 + 101 + 90 + 81 + 73 + 67 + 62 + 57 + 54 + 50 + 47 + 45 + 42 + 40 + 38 + 36", "x2": "idiv mul INT+ 1 0 abs sqr relu sqr abs INT- 3 n", "tree": "((10 mul abs((relu((abs(-3))**2))**2)) idiv n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 10 + 7 + 0 + 3 + 8 - 3 - 7 + 3 + 5 - 5 + 10 + 10 + 2 + 0 + 15 + 0 - 8 - 2 + 15 - 15 + 8 + 10 + 17 + 0 + 23 + 2", "x2": "sub abs x_0_4 x_0_5", "tree": "(abs(x_0_4) sub x_0_5)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 4 + 8 - 3 + 9 - 2 + 10 - 1 + 11 + 0 + 12 + 1 + 13 + 2 + 14 + 3 + 15 + 4 + 16 + 5 + 17 + 6 + 18 + 7 + 19", "x2": "add sign mul add idiv n n mul n INT+ 1 0 INT+ 6 x_0_2", "tree": "(sign((((n idiv n) add (n mul 10)) mul 6)) add x_0_2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15 - 17 - 18 - 19 - 20 - 21 - 22 - 23 - 24 - 25 - 27 - 28 - 29 - 30", "x2": "sub idiv n INT- 9 sub n INT- 5", "tree": "((n idiv -9) sub (n sub -5))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 5 - 8 - 7 + 2 - 10 - 5 + 3 - 6 + 1 + 12 - 3 + 5 + 9 + 8 + 13 + 15 + 10 + 14 + 17 + 21 + 28 + 25 + 24 + 31 + 38 + 22 + 25", "x2": "add mod relu add n x_0_6 n mul mod abs x_0_5 n sign sign x_0_6", "tree": "((relu((n add x_0_6)) mod n) add ((abs(x_0_5) mod n) mul sign(sign(x_0_6))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 6 + 6 - 4 - 4 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0", "x2": "mod sub relu INT+ 1 0 sqr x_0_5 INT- 2", "tree": "((relu(10) sub (x_0_5)**2) mod -2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 - 7 + 6 + 0 + 6 + 7 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 + 1 + 1 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 + 1 + 1 - 1 - 1 + 0", "x2": "mul sign x_0_8 idiv sub INT+ 8 add INT+ 9 x_0_2 add n n", "tree": "(sign(x_0_8) mul ((8 sub (9 add x_0_2)) idiv (n add n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 8 + 54 + 192 + 500 + 1080 + 2058 + 3584 + 5832 + 9000 + 1 3310 + 1 9008 + 2 6364 + 3 5672 + 4 7250 + 6 1440 + 7 8608 + 9 9144 + 12 3462 + 15 2000 + 18 5220 + 22 3608", "x2": "abs mul n mul mul n relu n sub relu n sign n", "tree": "abs((n mul ((n mul relu(n)) mul (relu(n) sub sign(n)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 6 + 1 + 4 - 2 + 0 - 1 + 7 - 6 + 6 + 1 + 4 + 2 + 0 + 1 + 7 + 6 + 6 + 1 + 4 + 2 + 0 + 1 + 7 + 6 + 6 + 1 + 4 + 2 + 0 + 1", "x2": "abs mul x_0_8 sign n", "tree": "abs((x_0_8 mul sign(n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 5 - 4 + 1 + 8 + 5 - 1301 - 2405 - 4095 - 6554 - 9996 - 1 5943 - 2 3142 - 3 2656 - 4 4970 - 6 622 - 8 1479 - 10 6663 - 13 7632 - 17 5291 - 22 623 - 27 5961 - 34 919 - 41 7474 - 50 7068 - 61 1249 - 73 2938 - 87 2360", "x2": "sub sub x_0_5 mod sqr add x_0_4 abs idiv relu x_0_3 n INT+ 2 sqr sqr n", "tree": "((x_0_5 sub (((x_0_4 add abs((relu(x_0_3) idiv n))))**2 mod 2)) sub ((n)**2)**2)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 2 - 2 - 9 - 69 - 488 - 3427 - 2 4059 - 16 8901 - 118 5733 - 832 4188 - 5843 8214 - 4 1025 3227 - 28 8009 6772 - 202 1911 5612 - 1419 4406 2504 - 9964 8853 4292 - 6 9956 3885 5647 - 49 1114 1605 2023 - 344 7764 89 8442 - 2420 4304 4514 4729 - 1 6992 1245 3206 5113 - 11 9289 6481 2535 4219 - 83 7447 9673 2262 4247 - 587 9127 8957 9043 4826", "x2": "add sub mul INT- 7 mul x_0_1 sub INT+ 3 relu INT+ 4 sub INT+ 9 x_0_3 n", "tree": "(((-7 mul (x_0_1 mul (3 sub relu(4)))) sub (9 sub x_0_3)) add n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 2 - 9 + 6 + 1 - 7 + 11 + 10 + 18 + 16 + 12 + 19 + 24 + 24 + 27 + 32 + 29 + 35 + 33 + 36 + 36 + 34 + 40 + 37 + 42 + 42 + 45 + 50", "x2": "add n abs sub n abs sub n x_0_6", "tree": "(n add abs((n sub abs((n sub x_0_6)))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 0 + 4 + 50 + 59 + 70 + 83 + 98 + 115 + 134 + 155 + 178 + 203 + 230 + 259 + 290 + 323 + 358 + 395 + 434 + 475 + 518 + 563 + 610 + 659", "x2": "sub sqr n mul INT+ 2 add sign x_0_3 add INT- 8 INT- 1 0", "tree": "((n)**2 sub (2 mul (sign(x_0_3) add (-8 add -10))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 + 0 - 1 + 0 - 2 - 2 - 1 + 0 - 1 - 2 - 1 + 0 - 3 - 2 - 1", "x2": "mod n idiv n sub sub sign sqr INT- 7 INT+ 7 x_0_1", "tree": "(n mod (n idiv ((sign((-7)**2) sub 7) sub x_0_1)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 10 - 2 - 4 - 3 + 4 + 3 + 1 - 66 - 7 - 6 - 4 + 63 - 46 - 2961 - 105 - 66 + 43 + 2958 + 102 - 391 7334 - 46 - 2961 - 105 + 391 7331 - 11 3987 - 3128 6179 4280 - 13 1268 - 391 7334 + 11 3984", "x2": "sub idiv abs abs mod INT- 3 mul mul abs x_0_6 n x_0_8 INT- 1 x_0_4", "tree": "((abs(abs((-3 mod ((abs(x_0_6) mul n) mul x_0_8)))) idiv -1) sub x_0_4)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 8 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530", "x2": "add INT+ 1 sqr mul sign relu sign x_0_1 n", "tree": "(1 add ((sign(relu(sign(x_0_1))) mul n))**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 5 + 3 + 7 - 4 + 22 + 11 - 23 + 26 + 6 - 27 + 20 + 5 - 20 + 19 + 5 - 19 + 19 + 5 - 19 + 18 + 4 - 17 + 17 + 4 - 16", "x2": "add mul mod idiv sub x_0_4 mul INT+ 1 0 n sqr relu INT+ 1 0 add x_0_2 INT+ 9 sign x_0_3 INT+ 7", "tree": "(((((x_0_4 sub (10 mul n)) idiv (relu(10))**2) mod (x_0_2 add 9)) mul sign(x_0_3)) add 7)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 7 - 5 + 2 - 3 + 8 + 7 + 2 + 12 + 10 + 10 + 20 + 16 + 13 + 18 + 19 + 16 + 17 + 19 + 23 + 29 + 21 + 23 + 32 + 33 + 26 + 27 + 36", "x2": "mod add abs sqr mod x_0_5 INT+ 4 n add n n", "tree": "((abs(((x_0_5 mod 4))**2) add n) mod (n add n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 5 - 2 + 7 - 5 + 3 + 5 + 2 + 7 + 5 + 3 + 5 + 2 + 7 + 5 + 3 + 5 + 2 + 7 + 5 + 3 + 5 + 2 + 7 + 5 + 3 + 5", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 4 - 1 + 3 + 4 - 5 - 18 + 35 + 40 - 270 - 350 + 55 + 60 - 650 - 770 + 75 + 80 - 1190 - 1350 + 95 + 100 - 1890 - 2090 + 115 + 120", "x2": "mul sub mod mod INT+ 5 x_0_2 x_0_2 x_0_2 relu n", "tree": "((((5 mod x_0_2) mod x_0_2) sub x_0_2) mul relu(n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 1 - 9 - 4 + 5 + 4 + 4 + 4 - 7 - 8 - 7 + 1 + 9 + 4 - 5 - 4 - 4 - 4 + 7 + 8 + 7 - 1 - 9 - 4 + 5 + 4 + 4 + 4 - 7 - 8 - 7 + 1 + 9", "x2": "sub mul relu idiv x_0_3 x_0_6 abs mod mod relu INT- 4 x_0_6 INT- 5 x_0_10", "tree": "((relu((x_0_3 idiv x_0_6)) mul abs(((relu(-4) mod x_0_6) mod -5))) sub x_0_10)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 6 + 3 - 2 - 6 - 2 - 5 - 6 - 2 - 6 - 3 - 2 - 6 - 2 - 5 - 6 - 2 - 6 - 3 - 2 - 6 - 2 - 5 - 6 - 2 - 6 - 3", "x2": "add INT- 8 abs x_0_4", "tree": "(-8 add abs(x_0_4))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 3 - 1 + 4 + 3 + 5 - 5 + 6 - 2 + 0 + 10 - 32 + 18 + 20 - 21 - 7 - 35 + 165 - 527 - 456 - 210 + 760 - 972 + 1 8020 - 7 6194 + 11 2038 - 34 4435 + 20 3775 + 1371 937 + 7398 7287", "x2": "mul add x_0_7 INT+ 1 sub x_0_5 INT+ 3", "tree": "((x_0_7 add 1) mul (x_0_5 sub 3))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 9 + 7 + 7 + 6 - 5 + 9 + 10 + 6 + 9 + 7 10 + 10 2498 + 12 4428 + 13 + 34 5758 + 50 6265 + 39 3232 + 75 1706 + 73 4936 9778 + 133 5764 1877 + 199 848 20 + 252 8274 + 809 9588 6070 + 1416 7370 3888 + 1304 6494 56 + 2936 3515 6275 + 3358 4856 367 1354 + 7098 7985 5675 4784 + 1 2236 8666 9517 3148 + 1 7882 16 3023 + 6 5606 6677 1670 30", "x2": "add relu idiv mul sqr sqr n mul n x_0_8 mod n add x_0_4 n n", "tree": "(relu(((((n)**2)**2 mul (n mul x_0_8)) idiv (n mod (x_0_4 add n)))) add n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 6 - 4 + 8 + 5 - 4 + 12 + 3 + 16 + 14 + 6 + 23 + 15 + 29 + 28 + 21 + 39 + 32 + 47 + 47 + 41 + 60 + 54 + 70 + 71 + 66 + 86 + 81", "x2": "add x_0_5 n", "tree": "(x_0_5 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 6 + 2 + 10 - 10 + 6 + 3 + 0 - 6559 - 1 6 - 1 4639 - 2 726 - 2 8571 - 3 8410 - 5 622 - 6 5536 - 9 80 - 11 4982 - 14 4960 - 18 726 - 22 3052 - 27 2666 - 33 463 - 39 7312 - 48 705 - 57 1958 - 67 6401 - 79 5382 - 93 333 - 108 2666", "x2": "sub x_0_8 abs sqr sqr n", "tree": "(x_0_8 sub abs(((n)**2)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 7 - 5 + 9 - 1 + 623 + 1282 + 2411 + 3472 + 5902 + 8871 + 1 3580 + 1 8306 + 2 5592 + 3 3707 + 4 5899 + 5 8250 + 7 5406 + 9 2784 + 11 7970 + 14 2844 + 17 7103 + 20 9070 + 25 4967 + 29 7517 + 35 8658 + 41 1079", "x2": "add relu sqr sqr n sub x_0_4 x_0_3", "tree": "(relu(((n)**2)**2) add (x_0_4 sub x_0_3))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 7 + 9 + 10 - 9 - 5 + 2 + 1 - 7 + 8 - 4 - 45 - 78 - 105 - 71 - 27 - 47 - 78 - 152 - 133 - 41 - 2070 - 6160 - 1 1175 - 5172 - 768 - 4277 - 1 2242 - 3 4277 - 2 2859 - 2447 - 428 9175 - 3795 7840", "x2": "sub x_0_5 abs mod INT- 2 sqr x_0_10", "tree": "(x_0_5 sub abs((-2 mod (x_0_10)**2)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 5 - 9 + 2 - 1 + 0 + 5 + 3 + 5 + 5 + 0 + 2 + 0 + 0 + 5 + 3 + 5 + 5 + 0 + 2 + 0 + 0 + 5 + 3 + 5 + 5", "x2": "sub INT+ 5 relu x_0_4", "tree": "(5 sub relu(x_0_4))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 8 - 6 - 5 + 1 + 10 - 6 + 6 + 10 + 9 + 2 + 5 + 7 + 1 + 10 + 9 + 6 + 10 + 9 + 2 + 5 + 7 + 1 + 10 + 9 + 6 + 10 + 9 + 2 + 5 + 7 + 1", "x2": "mul sign sub sqr add sqr n n x_0_2 mod x_0_9 n", "tree": "(sign(((((n)**2 add n))**2 sub x_0_2)) mul (x_0_9 mod n))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 6 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506", "x2": "add mul idiv mul n n INT+ 1 sub INT- 1 relu sign x_0_1 n", "tree": "((((n mul n) idiv 1) mul (-1 sub relu(sign(x_0_1)))) add n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 2 + 2 + 0 + 4 - 10 + 18 - 28 + 40 - 54 + 70 - 88 + 108 - 130 + 154 - 180 + 208 - 238 + 270 - 304 + 340 - 378 + 418", "x2": "mul sign mod INT+ 3 x_0_1 mul sub add INT+ 3 sign INT+ 5 n add INT- 1 abs n", "tree": "(sign((3 mod x_0_1)) mul (((3 add sign(5)) sub n) mul (-1 add abs(n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 10 - 9 + 10 - 2 + 8 + 6 + 6 - 10 - 1 - 5 - 8 - 17 + 4 - 8 + 18 + 7 + 11 - 2 + 16 - 9 + 0 - 35 - 3 - 19 + 20 - 9 + 20 - 2 + 51 - 6 + 19", "x2": "sub x_0_10 x_0_7", "tree": "(x_0_10 sub x_0_7)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 1 - 2 - 6 - 10 + 0 + 3 - 8 + 10 + 15 + 20 + 11 - 9 + 21 - 4 + 0 + 4 - 6 + 27 + 2 + 24 + 21 - 18 + 29 + 3 - 23 - 2 - 6 + 46", "x2": "mul sign mod INT+ 1 x_0_6 sub x_0_6 n", "tree": "(sign((1 mod x_0_6)) mul (x_0_6 sub n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 10 - 4 - 5 - 9 - 3 - 4 - 8 - 2 - 3 - 7 - 1 - 2 - 6 + 0 - 1 - 5 + 1 + 0 - 4 + 2 + 1 - 3 + 3 + 2 - 2", "x2": "add add x_0_3 INT- 5 INT+ 6", "tree": "((x_0_3 add -5) add 6)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 6 - 7 + 1 + 0 + 4 + 3 + 1 + 0 + 4 + 3 + 1 + 0 + 4 + 3 + 1 + 0 + 4 + 3 + 1 + 0 + 4 + 3 + 1 + 0 + 4", "x2": "mod x_0_4 abs abs abs INT- 5", "tree": "(x_0_4 mod abs(abs(abs(-5))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 10 - 8 + 11 + 9 - 10 - 8 + 11 + 9 - 10 - 8 + 11 + 9 - 10 - 8 + 11 + 9 - 10 - 8 + 11 + 9 - 10 - 8 + 11 + 9", "x2": "sub sign mod sub INT+ 9 mul x_0_1 idiv INT+ 5 n INT+ 9 x_0_2", "tree": "(sign(((9 sub (x_0_1 mul (5 idiv n))) mod 9)) sub x_0_2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 2 - 1 - 3 - 2 - 4 - 3 - 5 - 4 - 6 - 5 - 7 - 6 - 8 - 7 - 9 - 8 - 10 - 9 - 11 - 10 - 12 - 11", "x2": "sub abs abs x_0_1 abs abs n", "tree": "(abs(abs(x_0_1)) sub abs(abs(n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 12 + 36 + 144 + 720 + 4320 + 3 240 + 24 1920 + 217 7280 + 2177 2800 + 2 3950 800 + 28 7400 9600 + 373 6212 4800 + 5230 6974 7200 + 7 8460 4620 8000 + 125 5367 3932 8000 + 2134 1245 6857 6000 + 3 8414 2422 3436 8000 + 72 9870 6024 5299 2000 + 1459 7412 490 5984 0 + 3 654 5653 302 5664 0 + 67 4400 4366 6656 4608 0 + 1551 1210 433 3098 5984 0", "x2": "mul relu n abs x_0_1", "tree": "(relu(n) mul abs(x_0_1))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 0 - 1 + 45 + 0 - 5 + 225 + 0 - 25 + 1125 + 0 - 125 + 5625 + 0 - 625 + 2 8125 + 0 - 3125 + 14 625 + 0 - 1 5625 + 70 3125 + 0 - 7 8125 + 351 5625", "x2": "mul x_0_3 INT+ 5", "tree": "(x_0_3 mul 5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 - 7 + 8 + 8 + 8 - 6 - 9 - 8 + 7 + 7 + 7 - 7 - 10 - 9 + 6 + 6 + 6 - 8 - 11 - 10 + 5 + 5 + 5 - 9 - 12 - 11 + 4 + 4 + 4", "x2": "add idiv INT- 1 abs add n idiv abs add sqr n INT- 1 0 INT+ 6 x_0_6", "tree": "((-1 idiv abs((n add (abs(((n)**2 add -10)) idiv 6)))) add x_0_6)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 4 + 10 + 9 - 3 + 1 + 7 - 9 - 9 + 5 + 20 + 20 + 9 + 14 + 21 + 6 + 7 + 22 + 38 + 39 + 29 + 35 + 43 + 29 + 31 + 47 + 64 + 66 + 57 + 64 + 73 + 60", "x2": "add x_0_8 n", "tree": "(x_0_8 add n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 3 - 12 - 108 - 1728 - 4 3200 - 155 5200 - 7620 4800 - 48 7710 7200 - 3950 4568 3200 - 39 5045 6832 0 - 4780 527 6672 0 - 68 8327 5984 768 0 - 1 1632 7364 1308 9792 0 - 228 16 3369 6559 9232 0 - 5 1300 3675 8172 5982 7200 0 - 1313 2894 1009 2185 1576 3200 0 - 37 9540 6395 1664 1510 5556 4800 0 - 1 2297 1167 2033 9184 9420 299 5200 0 - 443 9259 1360 4244 5764 630 8126 7200 0 - 17 7570 3654 4169 7830 5625 2325 688 0 0 - 7830 8531 1597 8874 3278 727 5355 3408 0 0 - 379 132 9081 3377 5174 6587 2127 1984 9472 0 0 - 20 498 308 4027 6706 7394 4635 5288 37 688 0 0 - 1 1548 6865 7639 9938 3081 9211 64 5890 1351 6288 0 0", "x2": "mul n mul x_0_1 n", "tree": "(n mul (x_0_1 mul n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 9 - 5 + 1 - 1 + 2 + 1 - 33 - 73 - 39 + 1 + 1 - 14 - 1 - 479 - 1151 - 645 + 1 + 1 - 261 - 1 - 1 515 - 2 6449 - 1 5455 + 1 + 1 - 7021 - 1 - 30 4905 - 79 3439", "x2": "sub sub n sign mul INT+ 3 x_0_2 mul n relu abs x_0_7", "tree": "((n sub sign((3 mul x_0_2))) sub (n mul relu(abs(x_0_7))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 2 - 5 + 8 + 5 + 5 - 4 + 1 + 4 + 9 + 16 + 25 + 36 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 0 + 1 + 4 + 9", "x2": "sqr mod n abs mod INT+ 7 add x_0_8 abs mul n sqr INT- 4", "tree": "((n mod abs((7 mod (x_0_8 add abs((n mul (-4)**2)))))))**2", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 8 - 10 + 8 - 7 - 9 + 9 - 6 - 8 + 10 - 5 - 7 + 11 - 4 - 6 + 12 - 3 - 5 + 13 - 2 - 4 + 14 - 1 - 3 + 15 + 0", "x2": "add x_0_3 sign sqr INT+ 3", "tree": "(x_0_3 add sign((3)**2))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 1 - 10 - 4 + 5 - 2 + 3 - 8 - 2 - 1 + 8 + 11 + 1 + 13 + 1 + 15 + 1 + 1 + 1 + 1 + 1 + 1 + 22 + 1 + 24 + 1 + 26 + 1 + 1 + 1 + 1 + 1 + 1 + 33", "x2": "mod sign sub mul x_0_6 INT+ 2 x_0_11 n", "tree": "(sign(((x_0_6 mul 2) sub x_0_11)) mod n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 10 - 2 + 7 - 2 - 12 - 4 + 5 - 4 - 14 - 6 + 3 - 6 - 16 - 8 + 1 - 8 - 18 - 10 - 1 - 10 - 20 - 12 - 3 - 12 - 22", "x2": "sub mul mod sign n sign sign INT+ 4 INT+ 7 add relu abs n x_0_2", "tree": "(((sign(n) mod sign(sign(4))) mul 7) sub (relu(abs(n)) add x_0_2))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 8 + 5 + 10 - 6 + 0 + 30 + 70 + 0 + 0 + 300 + 770 + 0 + 0 + 4200 + 1 1550 + 0 + 0 + 7 5600 + 21 9450 + 0 + 0 + 166 3200 + 504 7350 + 0 + 0 + 4324 3200 + 1 3627 8450", "x2": "mul relu x_0_4 n", "tree": "(relu(x_0_4) mul n)", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 6 + 9 - 3 - 1 + 7 + 10 - 7 - 6 + 9 - 3 - 1 + 7 + 10 - 7 - 6 + 9 - 3 - 1 + 7 + 10 - 7 - 6 + 9 - 3 - 1 + 7 + 10 - 7 - 6 + 9", "x2": "mul x_0_7 abs sign INT- 5", "tree": "(x_0_7 mul abs(sign(-5)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 7 - 4 + 1 + 8 - 3 + 2 + 9 - 2 + 3 + 10 - 1 + 4 + 11 + 0 + 5 + 12 + 1 + 6 + 13 + 2 + 7 + 14 + 3 + 8", "x2": "sub n add x_0_2 x_0_1", "tree": "(n sub (x_0_2 add x_0_1))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 + 8 - 3 + 6 + 2 - 5 - 5 - 4 + 2 + 4 + 0 + 12 + 1 + 10 + 6 + 0 + 0 + 0 + 6 + 8 + 4 + 16 + 5 + 14 + 10 + 4 + 4 + 4 + 10 + 12 + 8 + 20 + 9", "x2": "relu sub x_0_10 INT- 4", "tree": "relu((x_0_10 sub -4))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 5 - 3 + 4 - 9 - 7 + 1 + 1 + 1 + 5 + 1 + 1 + 2 + 2 + 2 + 6 + 2 + 2 + 3 + 3 + 3 + 7 + 3 + 3 + 4 + 4 + 4 + 8 + 4", "x2": "add idiv relu n n relu add x_0_6 mul relu INT- 1 0 n", "tree": "((relu(n) idiv n) add relu((x_0_6 add (relu(-10) mul n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9 + 10 + 10 + 9", "x2": "mul sign INT+ 9 abs sub n sub n x_0_3", "tree": "(sign(9) mul abs((n sub (n sub x_0_3))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 - 4 - 5 - 6 - 7 - 8 - 10 - 12 - 14 - 16 - 19 - 22 - 26 - 30 - 35 - 40 - 46 - 53 - 61 - 70 - 80 - 92 - 106", "x2": "add x_0_1 idiv x_0_1 INT+ 7", "tree": "(x_0_1 add (x_0_1 idiv 7))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 3 - 8 + 0 - 6 - 10 + 0 + 36 + 49 + 36 + 9 + 100 + 49 + 121 + 81 + 169 + 121 + 225 + 256 + 289 + 324 + 361 + 400 + 484 + 484 + 400 + 576 + 676 + 529", "x2": "sqr sub n add mod x_0_5 mod sub INT+ 9 sign INT+ 8 INT+ 9 sign n", "tree": "((n sub ((x_0_5 mod ((9 sub sign(8)) mod 9)) add sign(n))))**2", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 8 + 2 + 2 - 3 - 9 - 10 + 7 - 1 - 1 + 3 + 5 + 5 - 4 + 0 + 0 - 2 - 2 - 2 + 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv sub INT+ 4 add mul INT+ 7 x_0_6 x_0_4 n", "tree": "((4 sub ((7 mul x_0_6) add x_0_4)) idiv n)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 7 + 10 - 8 + 35 + 48 + 77 + 56 + 324 + 490 + 858 + 684 + 4225 + 6874 + 1 2885 + 1 960 + 7 1842 + 12 3750 + 24 4834 + 21 9220 + 150 8703 + 272 2522 + 563 1205 + 526 1304 + 3771 7600 + 7078 5598 + 1 5204 2562", "x2": "abs add mul n x_0_4 relu mod n x_0_1", "tree": "abs(((n mul x_0_4) add relu((n mod x_0_1))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 3 + 5 + 10 + 4 + 2 + 10 - 5 + 16 - 36 + 130 + 260 + 76 + 52 + 200 - 135 - 48 - 4032 + 5 3170 + 9 2560 + 1 1324 + 1 4248 + 1 7600 + 2 1465 + 19 4640 - 1 9822 9248 + 77 4989 9690 + 96 1809 4720 + 2 8990 5724 + 4 5419 7744 + 6 8808 9600", "x2": "mul x_0_8 add x_0_8 add n x_0_7", "tree": "(x_0_8 mul (x_0_8 add (n add x_0_7)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 3 - 5 - 3 - 2 - 5 - 10 - 13 - 15 - 20 - 30 - 43 - 58 - 78 - 108 - 151 - 209 - 287 - 395 - 546 - 755 - 1042 - 1437 - 1983 - 2738 - 3780 - 5217 - 7200", "x2": "sub n sub sub n x_0_4 x_0_1", "tree": "(n sub ((n sub x_0_4) sub x_0_1))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 1 + 6 - 6 + 1 - 2 + 4 + 5 - 5 + 4 + 3 - 9 + 15 + 12 + 14 + 18 + 4 + 8 + 7 + 4 + 19 + 16 + 18 + 22 + 8 + 12 + 11 + 8 + 23 + 20 + 22 + 26 + 12 + 16 + 15", "x2": "sub n mod mod INT+ 8 INT- 5 add mod mul idiv INT+ 4 INT+ 8 INT+ 8 x_0_12 x_0_4", "tree": "(n sub ((8 mod -5) mod ((((4 idiv 8) mul 8) mod x_0_12) add x_0_4)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 1 + 4 - 8 - 3 + 10 - 1 - 7 + 0 - 10 - 6 - 1 + 1 + 4 + 6 + 12 + 10 + 16 + 11 + 0 + 10 + 15 + 21 + 1 + 4 + 6 + 12 + 10 + 16 + 11 + 0 + 10 + 15 + 21 + 1", "x2": "mod x_0_11 abs add abs n idiv sign add x_0_1 n n", "tree": "(x_0_11 mod abs((abs(n) add (sign((x_0_1 add n)) idiv n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 2 - 6 - 2 - 4 - 4 + 24 + 7 + 72 + 45 + 130 + 429 + 348 + 1534 + 1162 + 3705 + 8272 + 9894 + 3 6198 + 3 2319 + 11 680 + 20 6472 + 32 8812 + 103 9554 + 110 5032 + 380 7175 + 647 3974 + 1268 5815 + 3558 2260", "x2": "mul add idiv abs x_0_2 n add x_0_5 n n", "tree": "(((abs(x_0_2) idiv n) add (x_0_5 add n)) mul n)", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 6 + 7 - 6 + 2 - 1 - 9 - 2 - 4 + 4 + 60 - 77 + 72 - 26 + 14 + 135 + 32 + 68 - 72 - 1140 + 1540 - 1512 + 572 - 322 - 3240 - 800 - 1768 + 1944 + 3 1920 - 4 4660 + 4 5360 - 1 7732 + 1 304", "x2": "mul idiv n idiv idiv INT- 1 n INT+ 9 x_0_9", "tree": "((n idiv ((-1 idiv n) idiv 9)) mul x_0_9)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 10 - 8 - 7 + 1 + 5 + 5 + 2 + 2 + 2 + 2 + 5 + 5 + 5 + 5 + 2 + 2 + 2 + 2 + 5 + 5 + 5 + 5 + 2 + 2 + 2 + 2", "x2": "mod add sqr abs sign sub INT+ 2 n mul x_0_4 x_0_4 INT+ 6", "tree": "(((abs(sign((2 sub n))))**2 add (x_0_4 mul x_0_4)) mod 6)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 8 - 2 - 6 - 4 - 6 - 6 + 7 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign add mod INT- 6 x_0_8 mod add x_0_3 n add sign n INT- 7", "tree": "sign(((-6 mod x_0_8) add ((x_0_3 add n) mod (sign(n) add -7))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 4 - 10 - 8 - 7 + 25 + 144 + 49 + 64 + 2754 + 1 5400 + 7260 + 1 944 + 46 7623 + 302 1144 + 163 6875 + 280 5760 + 1 3514 7960 + 9 7885 6488 + 5 9091 8734 + 11 2231 2000 + 596 25 9621 + 4737 6655 840 + 3125 9602 2453 + 6464 5172 5824 + 37 2501 6227 8750 + 320 2661 8838 5416 + 227 8825 38 7920", "x2": "mul abs add x_0_4 n mul n n", "tree": "(abs((x_0_4 add n)) mul (n mul n))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 + 4 - 7 + 10 + 0 + 4 + 0 + 10 + 0 + 4 + 0 + 10 + 0 + 4 + 0 + 10 + 0 + 4 + 0 + 10 + 0 + 4 + 0 + 10 + 0 + 4 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 26 + 60 + 108 + 170 + 246 + 336 + 440 + 558 + 690 + 836 + 996 + 1170 + 1358 + 1560 + 1776 + 2006 + 2250 + 2508 + 2780 + 3066 + 3366 + 3680", "x2": "mul sign mod n INT+ 1 sub mul sqr n INT+ 7 n", "tree": "(sign((n mod 1)) mul (((n)**2 mul 7) sub n))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506", "x2": "sub abs n mul n n", "tree": "(abs(n) sub (n mul n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 - 120 - 2520 - 5 5440 - 127 5120 - 3060 2880 - 7 6507 2000 - 198 9187 2000 - 5370 8054 4000 - 15 382 5523 2000 - 436 1094 172 8000 - 1 3083 2820 5184 0 - 40 5581 7436 704 0 - 1297 8615 7954 2528 0 - 4 2829 4321 2490 3424 0 - 145 6200 6922 4671 6416 0 - 5096 7024 2286 3507 4560 0 - 18 3481 2872 2308 6268 4160 0 - 678 8807 6272 5419 1931 3920 0 - 2 5797 4689 8356 5929 3392 8960 0 - 100 6101 2903 5907 1244 2322 9440 0 - 4024 4051 6143 6284 9769 2917 7600 0 - 16 5000 6116 1888 7684 540 9628 1600 0 - 693 25 6879 9328 2730 2720 4382 7200 0", "x2": "mul x_0_1 add add relu n INT+ 9 INT+ 9", "tree": "(x_0_1 mul ((relu(n) add 9) add 9))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 + 2 - 4 - 8 + 3 + 7 + 12 - 3 - 6 - 6 + 14 + 9 + 7 - 10 - 5 + 8 + 10 + 16 - 7 + 5 - 14 + 23 + 10 + 23 - 20", "x2": "sub mod sub idiv sqr sub x_0_2 INT+ 1 sign x_0_2 n n x_0_3", "tree": "((((((x_0_2 sub 1))**2 idiv sign(x_0_2)) sub n) mod n) sub x_0_3)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 1 - 9 - 41 - 169 - 681 - 2729 - 1 921 - 4 3689 - 17 4761 - 69 9049 - 279 6201 - 1118 4809 - 4473 9241 - 1 7895 6969 - 7 1582 7881 - 28 6331 1529 - 114 5324 6121 - 458 1298 4489 - 1832 5193 7961 - 7330 775 1849 - 2 9320 3100 7401 - 11 7281 2402 9609 - 46 9124 9611 8441", "x2": "sub INT- 5 mul INT- 4 sub add relu n x_0_1 n", "tree": "(-5 sub (-4 mul ((relu(n) add x_0_1) sub n)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 5 - 1 - 2 - 2 + 1 - 10 + 2 + 2 - 1 + 10 + 2 - 2 - 1 + 10 - 2 - 2 - 1 - 10 + 2 - 2 + 1 + 10 - 2 + 2 + 1 - 10 - 2 + 2 - 1", "x2": "mul sign mul x_0_6 sqr add mod INT- 6 x_0_7 sub sqr x_0_2 INT- 6 x_0_4", "tree": "(sign((x_0_6 mul (((-6 mod x_0_7) add ((x_0_2)**2 sub -6)))**2)) mul x_0_4)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 9 - 4 + 3 + 7 - 7 + 7 - 4 + 1 + 40 - 99 - 48 + 39 + 98 - 105 + 112 - 68 + 18 + 760 - 1980 - 1008 + 858 + 2254 - 2520 + 2800 - 1768 + 486 + 2 1280 - 5 7420 - 3 240 + 2 6598 + 7 2128", "x2": "mul x_0_9 n", "tree": "(x_0_9 mul n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 9 - 8 + 4 - 3 + 3 - 1 - 2 - 24 - 54 - 51 - 111 - 138 - 201 - 261 - 363 - 435 - 513 - 597 - 687 - 783 - 885 - 993 - 1107 - 1227 - 1353 - 1485 - 1623 - 1767 - 1917 - 2073", "x2": "mul sub abs mul n add n INT- 7 mod sign x_0_1 add x_0_7 n INT- 3", "tree": "((abs((n mul (n add -7))) sub (sign(x_0_1) mod (x_0_7 add n))) mul -3)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 7 - 4 + 8 - 12 + 21 - 33 + 58 - 92 + 163 - 257 + 455 - 716 + 1269 - 1996 + 3538 - 5564 + 9863 - 1 5511 + 2 7495 - 4 3240 + 7 6649 - 12 542 + 21 3678 - 33 6040 + 59 5679", "x2": "idiv sub add relu sub INT+ 8 n relu abs x_0_2 mul INT+ 1 0 x_0_1 INT+ 6", "tree": "(((relu((8 sub n)) add relu(abs(x_0_2))) sub (10 mul x_0_1)) idiv 6)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 + 3 + 7 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3", "x2": "mod x_0_3 abs n", "tree": "(x_0_3 mod abs(n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 17 + 83 + 259 + 629 + 1301 + 2407 + 4103 + 6569 + 1 9 + 1 4651 + 2 747 + 2 8573 + 3 8429 + 5 639 + 6 5551 + 8 3537 + 10 4993 + 13 339 + 16 19 + 19 4501 + 23 4277 + 27 9863 + 33 1799", "x2": "add n sqr sqr sub sub sign n n mod INT- 8 INT+ 1 0", "tree": "(n add ((((sign(n) sub n) sub (-8 mod 10)))**2)**2)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 2 - 4 - 9 - 2 - 1 + 7 - 4 + 2 + 2 + 2 + 2 + 2 - 5 + 2 + 0 + 0 + 0 + 0 + 0 + 2 + 0 + 2 + 2 + 2 + 2 + 2 + 0 + 2 + 0 + 0", "x2": "sub INT+ 2 relu x_0_7", "tree": "(2 sub relu(x_0_7))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 3 + 5 + 0 - 3 - 4 - 4 + 1 + 2 + 0 + 9 - 6 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign add x_0_9 idiv x_0_11 sign sign relu INT- 4", "tree": "sign((x_0_9 add (x_0_11 idiv sign(sign(relu(-4))))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "+ 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "abs sqr sub sub abs INT- 6 sub n sign INT+ 9 sign n", "tree": "abs((((abs(-6) sub (n sub sign(9))) sub sign(n)))**2)", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 + 6 - 2 + 16 + 10 + 30 + 26 + 48 + 46 + 70 + 70 + 96 + 98 + 126 + 130 + 160 + 166 + 198 + 206 + 240 + 250 + 286 + 298 + 336", "x2": "add x_0_2 mul INT+ 2 n", "tree": "(x_0_2 add (2 mul n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 4 + 9 + 32 + 155 + 924 + 6461 + 5 1680 + 46 5111 + 465 1100 + 5116 2089 + 6 1394 5056 + 79 8128 5715 + 1117 3799 9996 + 1 6760 6999 9925 + 26 8171 1999 8784 + 455 8910 3997 9311 + 8206 387 1962 7580 + 15 5914 7356 7292 4001 + 311 8294 7134 5848 0 + 6548 4188 9826 2807 9979 + 14 4065 2157 6178 1775 9516 + 331 3499 9625 2098 846 8845 + 7952 3999 1005 354 325 2256", "x2": "mul mod INT- 1 relu x_0_1 n", "tree": "((-1 mod relu(x_0_1)) mul n)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 8 + 10 - 3 + 9 - 3 + 8 - 4 + 7 - 4 + 5 - 4 + 3 - 4 + 0 - 4 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 4 - 5 - 5", "x2": "sub relu x_0_2 abs idiv sub x_0_1 add mul INT- 2 n mod sign INT- 8 n INT- 5", "tree": "(relu(x_0_2) sub abs(((x_0_1 sub ((-2 mul n) add (sign(-8) mod n))) idiv -5)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 9 - 1 - 8 + 266 + 635 + 1306 + 2411 + 4106 + 6571 + 1 10 + 1 4651 + 2 746 + 2 8571 + 3 8426 + 5 635 + 6 5546 + 8 3531 + 10 4986 + 13 331 + 16 10 + 19 4491 + 23 4266 + 27 9851 + 33 1786 + 39 635 + 45 6986", "x2": "add add sign sign mod x_0_3 sqr add sign INT+ 6 INT- 9 INT+ 9 sqr sqr n", "tree": "((sign(sign((x_0_3 mod ((sign(6) add -9))**2))) add 9) add ((n)**2)**2)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 - 3 + 16 - 15 + 66 - 35 + 232 - 63 + 550 - 99 + 1068 - 143 + 1834 - 195 + 2896 - 255 + 4302 - 323 + 6100 - 399 + 8338 - 483 + 1 1064", "x2": "mul sub idiv INT+ 2 sign mod x_0_1 relu n mod n x_0_1 n", "tree": "(((2 idiv sign((x_0_1 mod relu(n)))) sub (n mod x_0_1)) mul n)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 3 - 2 - 1 - 5 - 7 + 155 + 110 + 115 + 120 + 125 + 130 + 910 + 690 + 720 + 750 + 780 + 810 + 4715 + 3620 + 3775 + 3930 + 4085 + 4240 + 2 3770 + 1 8300 + 1 9080 + 1 9860 + 2 640", "x2": "abs mul mul INT+ 5 INT+ 1 add add n relu x_0_6 sub mul INT- 3 INT- 3 INT- 5", "tree": "abs(((5 mul 1) mul ((n add relu(x_0_6)) add ((-3 mul -3) sub -5))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 6 + 10 + 8 + 9 + 5 - 16 + 2 - 1 + 4 + 21 - 18 + 3 - 5 - 17 + 39 - 21 + 8 + 12 - 56 + 60 - 29 - 4 + 68 - 116 + 89 - 25 - 72 + 184", "x2": "sub x_0_5 x_0_4", "tree": "(x_0_5 sub x_0_4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 9 + 6 + 9 - 15 - 3 - 12 - 12 - 15 - 15 - 18 - 18 - 21 - 21 - 24 - 24 - 27 - 27 - 30 - 30 - 33 - 33 - 36 - 36 - 39 - 39 - 42", "x2": "sub sub relu sub x_0_4 add mul n n n n add n mod n x_0_1", "tree": "((relu((x_0_4 sub ((n mul n) add n))) sub n) sub (n add (n mod x_0_1)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 5 - 9 + 4 + 0 + 35 + 72 - 36 + 0 - 385 - 864 + 468 + 0 + 5775 + 1 3824 - 7956 + 0 - 10 9725 - 27 6480 + 16 7076 + 0 + 252 3675 + 663 5520 - 417 6900 + 0 - 6813 9225 - 1 8579 4560", "x2": "sub mul sub sub sub x_0_2 x_0_2 n sign n x_0_4 idiv INT+ 3 sqr n", "tree": "(((((x_0_2 sub x_0_2) sub n) sub sign(n)) mul x_0_4) sub (3 idiv (n)**2))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 2 - 9 + 5 + 0 + 0 + 2 + 2 + 3 + 2 + 7 + 2 + 7 + 0 + 7 + 0 + 3 + 3 + 0 + 0 + 0 + 8 + 9 + 14 + 3 + 6", "x2": "abs mod mul sub x_0_3 INT- 5 add INT- 2 relu n sub INT+ 1 sub x_0_1 sub n x_0_3", "tree": "abs((((x_0_3 sub -5) mul (-2 add relu(n))) mod (1 sub (x_0_1 sub (n sub x_0_3)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 6 - 10 - 2 + 8 + 0 + 6 + 5 + 24 + 8 + 0 + 6 + 5 + 24 + 8 + 0 + 6 + 5 + 24 + 8 + 0 + 6 + 5 + 24 + 8 + 0 + 6 + 5 + 24", "x2": "relu mod x_0_5 add sign sub sub INT+ 1 0 relu x_0_6 n sqr idiv abs n INT- 2", "tree": "relu((x_0_5 mod (sign(((10 sub relu(x_0_6)) sub n)) add ((abs(n) idiv -2))**2)))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 10 - 6 - 7 + 9 - 4 - 8 - 60 - 71 - 94 - 114 - 135 - 165 - 188 - 165 - 185 - 195 - 210 - 226 - 235 - 253 - 319 - 344 - 381 - 415 - 450 - 494 - 531 - 522 - 556", "x2": "sub abs abs x_0_7 sqr n", "tree": "(abs(abs(x_0_7)) sub (n)**2)", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 4 + 8 - 2 - 6 + 10 + 13 + 2 + 5 + 4 + 1 + 3 + 6 + 4 + 1 + 3 + 6 + 4 + 1 + 3 + 6 + 4 + 1 + 3 + 6 + 4 + 1 + 3", "x2": "abs add x_0_2 sub idiv x_0_4 INT+ 1 0 INT+ 7", "tree": "abs((x_0_2 add ((x_0_4 idiv 10) sub 7)))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 - 3 + 36 + 25 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr sub sign x_0_2 sub n mul INT+ 2 idiv n add x_0_1 x_0_2", "tree": "((sign(x_0_2) sub (n sub (2 mul (n idiv (x_0_1 add x_0_2))))))**2", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576 + 209 7152 + 419 4304 + 838 8608 + 1677 7216 + 3355 4432", "x2": "mul x_0_1 sub INT+ 2 idiv mod INT- 2 n sqr n", "tree": "(x_0_1 mul (2 sub ((-2 mod n) idiv (n)**2)))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 4 - 18 - 42 - 76 - 120 - 174 - 238 - 312 - 396 - 490 - 594 - 708 - 832 - 966 - 1110 - 1264 - 1428 - 1602 - 1786 - 1980 - 2184 - 2398 - 2622", "x2": "add n mul sqr n INT- 5", "tree": "(n add ((n)**2 mul -5))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 2 + 3 + 12 + 25 + 42 + 63 + 88 + 117 + 150 + 187 + 228 + 273 + 322 + 375 + 432 + 493 + 558 + 627 + 700 + 777 + 858 + 943", "x2": "mul n add add INT- 5 n n", "tree": "(n mul ((-5 add n) add n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 + 8 + 3 + 5 + 3 + 4 + 8 - 1 + 5 - 5 - 8 - 3 + 10 + 11 + 12 + 13 + 14 + 15 - 2 + 17 + 2 + 5 + 0 + 21 + 22 + 23 + 24 + 25 + 26 - 1 + 28 + 29 + 30 - 3", "x2": "add mod relu n add n x_0_11 mod mod INT+ 5 n INT- 4", "tree": "((relu(n) mod (n add x_0_11)) add ((5 mod n) mod -4))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 7 - 7 - 1 + 5 + 5 - 1 - 7 - 7 - 1 + 5 + 5 - 1 - 7 - 7 - 1 + 5 + 5 - 1 - 7 - 7 - 1 + 5 + 5 - 1 - 7", "x2": "sub x_0_1 add x_0_2 sub sqr sign x_0_1 idiv INT+ 6 INT+ 7", "tree": "(x_0_1 sub (x_0_2 add ((sign(x_0_1))**2 sub (6 idiv 7))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 + 0 + 3 - 3 + 6 + 9 + 6 + 1 + 6 - 6 - 6 + 2 + 2 - 5 + 6 + 9 + 5 - 6 + 8 - 6 - 5 - 12 + 7 - 17 - 5 + 0 + 9 - 9", "x2": "sub INT+ 9 relu add x_0_5 mod x_0_4 n", "tree": "(9 sub relu((x_0_5 add (x_0_4 mod n))))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 0 + 2 - 3 - 1 - 1 - 7 - 9 - 394 - 115 - 138 - 43 - 75 - 75 - 3 - 523 - 15 2875 - 1 2763 - 1 6894 - 1363 - 4755 - 4219 - 619 - 1 134 4483 - 236 1201 238 - 1 9066 858 - 2 8794 6955 - 272 2494 - 2508 58 - 1803 7003 - 40 1276 5126 315", "x2": "sub INT+ 6 sqr add add x_0_8 sub idiv x_0_7 sqr INT- 4 INT- 1 0 INT+ 1", "tree": "(6 sub (((x_0_8 add ((x_0_7 idiv (-4)**2) sub -10)) add 1))**2)", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 2 + 4 + 5 + 8 + 10 + 12 + 7 + 8 + 18 + 30 + 22 + 12 + 13 + 28 + 45 + 32 + 17 + 18 + 38 + 60 + 42 + 22 + 23 + 48 + 75 + 52", "x2": "relu mul n idiv add n sub relu x_0_1 idiv x_0_3 n x_0_2", "tree": "relu((n mul ((n add (relu(x_0_1) sub (x_0_3 idiv n))) idiv x_0_2)))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 4 + 0 + 4 + 4 + 8 + 4 + 12 + 0 + 20 - 12 - 20 - 45 - 29 - 71 - 78 - 115 - 87 - 154 - 129 - 155 - 176 - 184 - 200 - 195 - 219", "x2": "add relu mod INT+ 8 sqr n sub x_0_2 mod x_0_1 add n sqr INT+ 7", "tree": "(relu((8 mod (n)**2)) add (x_0_2 sub (x_0_1 mod (n add (7)**2))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 8 + 2 + 28 + 78 + 18 + 278 + 778 + 178 + 2778 + 7778 + 1778 + 2 7778 + 7 7778 + 1 7778 + 27 7778 + 77 7778 + 17 7778 + 277 7778 + 777 7778 + 177 7778 + 2777 7778 + 7777 7778 + 1777 7778 + 2 7777 7778 + 7 7777 7778", "x2": "sub INT- 2 mul x_0_3 INT- 1 0", "tree": "(-2 sub (x_0_3 mul -10))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 1 + 10 - 8 - 2 + 6 + 9 + 6 - 10 + 1 - 5 - 7 - 2 + 4 + 17 - 10 - 5 + 3 - 4 - 5 - 12 + 6 - 4 - 7 + 8 + 2 + 8 - 17 + 1 + 4 - 14", "x2": "add x_0_7 mul sign add INT+ 8 x_0_1 sub sqr sign relu n x_0_6", "tree": "(x_0_7 add (sign((8 add x_0_1)) mul ((sign(relu(n)))**2 sub x_0_6)))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 1 - 5 - 10 - 4 - 2 - 4 + 4 + 0 + 0 + 1 + 3 + 1 + 4 + 0 + 0 + 2 + 1 + 2 + 3 + 0 + 0 + 1 + 3 + 1 + 4 + 0 + 0 + 4 + 2", "x2": "mod sub mul x_0_6 idiv n idiv sub INT+ 8 INT- 6 INT+ 2 INT+ 5 INT+ 5", "tree": "(((x_0_6 mul (n idiv ((8 sub -6) idiv 2))) sub 5) mod 5)", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 7 - 53 1438 - 1 5735 1932 - 15 9999 9995 - 21 7678 2330 - 1646 4848 1354 - 1677 7215 9992 - 2824 2953 6472 - 2 735 9999 9990 - 17 9034 6809 9990 - 16 5181 7683 3524 - 85 6321 4816 7683 - 96 7173 1157 4002 - 717 2018 7539 610 - 450 8684 8686 4880 - 1952 1029 3804 6864 - 1763 1936 9215 9982 - 7761 807 422 3997 - 5996 9535 9999 9980 - 1 2548 7169 8735 5115 - 1 8206 4978 1827 9914 - 4 8134 3169 6887 8313 - 5 301 7767 7089 1752 - 31 8166 5039 624 9975", "x2": "sub n sqr sqr mul sqr n abs add mod abs x_0_2 n abs n", "tree": "(n sub ((((n)**2 mul abs(((abs(x_0_2) mod n) add abs(n)))))**2)**2)", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 10 - 2 + 7 + 6 + 5 - 6 - 1 + 7 + 4 - 4 - 127 - 143 + 180 + 200 + 221 - 383 - 432 + 504 + 561 - 179 - 824 - 916 + 1033 + 1137 + 446 - 1500 - 1645 + 1817 + 1978 - 454 - 2461 - 2669 + 2906", "x2": "add x_0_5 add mul mul sign x_0_10 n n relu idiv sub n INT- 6 x_0_4", "tree": "(x_0_5 add (((sign(x_0_10) mul n) mul n) add relu(((n sub -6) idiv x_0_4))))", "n_input_points": "23", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 3 - 3 + 8 - 8 - 2 - 9 - 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1", "x2": "sub mod n sign x_0_4 sign x_0_6", "tree": "((n mod sign(x_0_4)) sub sign(x_0_6))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 9 - 7 - 9 - 2 - 5 + 23 + 1 + 21 + 10 + 20 + 40 + 0 + 62 + 9 + 56 + 31 + 18 + 95 + 33 + 78 + 10 + 67 + 89 + 7 + 136 + 59 + 77 + 83", "x2": "abs add n sub add abs n sign INT+ 8 add INT- 6 sub add x_0_1 INT- 8 x_0_5", "tree": "abs((n add ((abs(n) add sign(8)) sub (-6 add ((x_0_1 add -8) sub x_0_5)))))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 1 - 4 + 9 - 4 + 4 + 5 + 6 + 1 + 4 + 9 + 4 + 4 + 5 + 6 + 1 + 4 + 9 + 4 + 4 + 5 + 6 + 1 + 4 + 9 + 4 + 4 + 5 + 6 + 1", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 10 - 9 + 0 + 4 - 7 - 8 - 8 + 0 + 3 - 9 - 11 - 12 - 5 - 3 - 16 - 19 - 21 - 15 - 14 - 28 - 32 - 35 - 30 - 30 - 45 - 50 - 54 - 50", "x2": "sub add x_0_5 INT+ 8 abs n", "tree": "((x_0_5 add 8) sub abs(n))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 3 + 9 + 12 + 15 + 54 + 84 + 120 + 486 + 840 + 1320 + 5832 + 1 920 + 1 8480 + 8 7480 + 17 4720 + 31 4160 + 157 4640 + 331 9680 + 628 3200 + 3306 7440 + 7303 2960 + 1 4451 3600 + 7 9361 8560 + 18 2582 4000 + 37 5735 3600", "x2": "mul sign idiv INT- 1 0 INT- 7 mul n x_0_3", "tree": "(sign((-10 idiv -7)) mul (n mul x_0_3))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 4 + 4 + 3 + 10 + 10 + 0 + 13 + 5 + 14 + 14 + 22 + 23 + 14 + 28 + 21 + 31 + 32 + 41 + 43 + 35 + 50 + 44 + 55 + 57 + 67 + 70 + 63 + 79 + 74", "x2": "add x_0_7 relu n", "tree": "(x_0_7 add relu(n))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 8 + 0 - 9 + 16 - 10 + 30 - 14 + 48 - 18 + 100 - 22 + 168 - 26 + 252 - 30 + 352 - 34 + 468 - 38 + 600 - 42 + 748 - 46 + 912 - 50 + 1092", "x2": "mul n add INT- 2 relu sub sub add INT- 1 0 INT+ 7 INT- 1 x_0_3", "tree": "(n mul (-2 add relu((((-10 add 7) sub -1) sub x_0_3))))", "n_input_points": "23", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 - 4 - 10 - 7 - 1 + 4 - 2 + 1 + 7 + 12 + 6 + 9 + 15 + 20 + 14 + 17 + 23 + 28 + 22 + 25 + 31 + 36 + 30 + 33 + 39 + 44 + 38", "x2": "add INT+ 8 x_0_4", "tree": "(8 add x_0_4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 5 - 4 - 3 + 7 + 16 + 8 + 16 + 9 + 4 + 8 + 5 + 8 + 15 + 12 + 12 + 10 + 9 + 11 + 10 + 14 + 12 + 13 + 14 + 10 + 17 + 10", "x2": "sub idiv INT- 7 n add INT- 9 mod mod mul INT- 5 INT+ 1 x_0_1 sub x_0_4 n", "tree": "((-7 idiv n) sub (-9 add (((-5 mul 1) mod x_0_1) mod (x_0_4 sub n))))", "n_input_points": "23", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 6 + 9 - 5 - 4 - 10 + 2 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign idiv x_0_7 abs INT+ 8", "tree": "sign((x_0_7 idiv abs(8)))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 4 - 1 + 4 + 10 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 2 + 0 + 4 + 0 + 6 + 0 + 8 + 0 + 10 + 0 + 12 + 0 + 14 + 0 + 16 + 0 + 18 + 0 + 20 + 0 + 22 + 0 + 24", "x2": "mod n sqr sub n x_0_1", "tree": "(n mod ((n sub x_0_1))**2)", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 5 - 10 - 5 - 5 - 1 - 1 - 1 - 1 - 5 - 5 - 5 - 5 - 1 - 1 - 1 - 1 - 5 - 5 - 5 - 5 - 1 - 1 - 1 - 1 - 5 - 5", "x2": "idiv INT- 5 abs x_0_4", "tree": "(-5 idiv abs(x_0_4))", "n_input_points": "23", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 9 - 9 - 1 - 6 + 5 - 8 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 0 + 0 + 5", "x2": "mul sqr mod add x_0_2 sign INT+ 9 add x_0_3 n relu add add INT- 2 INT+ 2 x_0_6", "tree": "((((x_0_2 add sign(9)) mod (x_0_3 add n)))**2 mul relu(((-2 add 2) add x_0_6)))", "n_input_points": "23", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 - 8 - 15 - 19 - 29 - 42 - 64 - 98 - 153 - 241 - 383 - 612 - 982 - 1580 - 2547 - 4111 - 6641 - 1 734 - 1 7356 - 2 8070 - 4 5405 - 7 3453 - 11 8835 - 19 2264 - 31 1074", "x2": "add abs n sub x_0_2 idiv x_0_1 sign x_0_2", "tree": "(abs(n) add (x_0_2 sub (x_0_1 idiv sign(x_0_2))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 + 0 + 7 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv mul x_0_3 INT+ 6 mul sqr sub mod mul x_0_3 sign sqr sub x_0_2 x_0_2 INT- 5 n n", "tree": "((x_0_3 mul 6) idiv (((((x_0_3 mul sign(((x_0_2 sub x_0_2))**2)) mod -5) sub n))**2 mul n))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 + 4 + 10 - 4 + 6 + 4 + 10 + 4 + 6 + 4 + 10 + 4 + 6 + 4 + 10 + 4 + 6 + 4 + 10 + 4 + 6 + 4 + 10 + 4 + 6 + 4 + 10", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 + 6 + 2 + 5 + 8 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2", "x2": "sub INT+ 3 mod mul n sub n mod relu x_0_5 sign mul add sign n INT+ 2 n INT+ 3", "tree": "(3 sub ((n mul (n sub (relu(x_0_5) mod sign(((sign(n) add 2) mul n))))) mod 3))", "n_input_points": "23", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 3 + 1 + 4 + 6 - 2 + 5 - 3 + 3 + 1 + 4 + 6 + 2 + 5 + 3 + 3 + 1 + 4 + 6 + 2 + 5 + 3 + 3 + 1 + 4 + 6 + 2 + 5 + 3 + 3 + 1", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 1 + 6 + 3 - 4 - 5 - 10 - 9 - 4 + 1 + 5 + 9 + 14 + 11 + 6 + 5 + 0 + 1 + 6 + 9 + 13 + 17 + 22 + 19 + 14 + 13 + 8 + 9 + 14 + 17 + 21 + 25 + 30", "x2": "sub INT+ 8 sub add INT- 1 sign x_0_10 x_0_10", "tree": "(8 sub ((-1 add sign(x_0_10)) sub x_0_10))", "n_input_points": "23", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 2 - 3 + 16 + 28 + 38 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sub sqr n idiv n x_0_3", "tree": "((n)**2 sub (n idiv x_0_3))", "n_input_points": "23", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 + 10 + 1 + 5 - 3 - 7 + 3 - 7 - 4 - 13 - 18 - 9 - 20 - 18 - 28 - 34 - 26 - 38 - 37 - 48 - 55 - 48 - 61 - 61 - 73 - 81 - 75 - 89", "x2": "sub x_0_5 n", "tree": "(x_0_5 sub n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "23", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 8 + 6 + 0 + 10 - 4 + 6 - 16 - 6 + 4 - 30 - 20 - 10 + 0 + 10 - 44 - 34 - 24 - 14 - 4 + 6 - 72 - 62 - 52", "x2": "add INT+ 1 0 mod x_0_1 sub mul INT- 3 n relu n", "tree": "(10 add (x_0_1 mod ((-3 mul n) sub relu(n))))", "n_input_points": "23", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 4 + 8 - 9 + 724 + 773 - 1 - 1 + 36 4669 2440 - 1 + 21 - 1 - 1 - 1 - 1 + 31 + 33 + 35 - 1 + 63 4279 + 80 435 - 1 - 1 + 772 8549 2317 7954 63 - 1 + 51 - 1 - 1 - 1", "x2": "mod INT- 1 add mul mul mul x_0_4 x_0_3 abs x_0_4 n n", "tree": "(-1 mod ((((x_0_4 mul x_0_3) mul abs(x_0_4)) mul n) add n))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 7 + 5 - 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign sub n mul sub mod n mod add INT- 8 INT+ 1 idiv n INT- 4 sign n x_0_3", "tree": "sign((n sub (((n mod ((-8 add 1) mod (n idiv -4))) sub sign(n)) mul x_0_3)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 2 - 7 + 9 - 1 - 2 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv add mod x_0_3 add INT- 1 0 x_0_3 idiv sign n mul n abs sqr n n", "tree": "(((x_0_3 mod (-10 add x_0_3)) add (sign(n) idiv (n mul abs((n)**2)))) idiv n)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 3 + 5 + 1 + 6 + 10 + 9 - 8 - 3 + 3 - 5 + 101 - 34 - 24 - 68 + 137 + 98 + 308 + 398 - 1689 + 1102 + 2102 + 2642 - 2160 - 238 - 4998 - 8578 + 5 3084 - 2 606 - 1 1250 - 4 7218 + 13 1039 + 9 1010 + 23 7173 + 30 766 - 168 1923", "x2": "add mul n sub abs sub x_0_10 n add INT+ 4 x_0_8 INT+ 2", "tree": "((n mul (abs((x_0_10 sub n)) sub (4 add x_0_8))) add 2)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5", "x2": "mod mul INT+ 2 n INT+ 9", "tree": "((2 mul n) mod 9)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 7 + 135 + 140 + 3375 + 4200 + 11 8125 + 16 8000 + 531 5625 + 840 0 + 2 9235 9375 + 5 400 0 + 190 335 9375 + 352 8000 0 + 1 4252 5195 3125 + 2 8224 0 0 + 121 1464 1601 5625 + 254 160 0 0 + 1 1508 9095 2148 4375 + 2 5401 6000 0 0 + 120 8435 4997 5585 9375 + 279 4176 0 0 0 + 1 3897 82 4719 2382 8125 + 3 3530 1120 0 0 0 + 173 7126 308 9904 7851 5625 + 435 8914 5600 0 0 0 + 2 3451 2014 1713 7145 9960 9375", "x2": "mul n mul x_0_2 INT+ 5", "tree": "(n mul (x_0_2 mul 5))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 12 + 108 + 1296 + 1 9440 + 34 9920 + 734 8320 + 1 7635 9680 + 47 6171 1360 + 1428 5134 800 + 4 7140 9424 6400 + 169 7073 9287 400 + 6618 5883 2194 5600 + 27 7980 7095 2171 5200 + 1250 9131 9284 7718 4000 + 6 43 8332 5669 483 2000 + 306 2235 4960 9121 4643 2000 + 1 6536 716 7889 2559 732 8000 + 94 2556 856 9687 5867 1769 6000 + 5655 3365 1418 1255 2030 6176 0 + 35 6286 2003 9341 9077 7928 9088 0 + 2351 4889 2259 6565 9134 3307 9808 0 + 16 2252 7356 5916 3048 268 8250 6752 0 + 1168 2196 9674 5973 9457 9355 4048 6144 0 + 8 7616 4772 5594 8045 9345 1655 3646 800 0 + 683 4085 2259 6394 7582 8922 9118 4394 2400 0", "x2": "mul relu mul n abs x_0_1 INT+ 3", "tree": "(relu((n mul abs(x_0_1))) mul 3)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 9 - 9 + 6 - 3 + 2 + 6 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign add abs INT+ 1 mul n x_0_6", "tree": "sign((abs(1) add (n mul x_0_6)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 4 + 10 - 8 + 0 + 360 + 0 + 768 + 6 2694 + 0 + 726 + 0 + 0 + 1176 + 0 + 1536 + 44 5638 + 0 + 2166 + 0 + 0 + 2904 + 0 + 3456 + 216 3750 + 0 + 4374 + 0 + 0", "x2": "relu mul mul sub abs n x_0_4 n add INT+ 6 x_0_1", "tree": "relu((((abs(n) sub x_0_4) mul n) mul (6 add x_0_1)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 4 - 1 - 2 + 5 - 5 - 324 - 81 - 162 + 405 - 405 - 2 6244 - 6561 - 1 3122 + 3 2805 - 3 2805 - 212 5764 - 53 1441 - 106 2882 + 265 7205 - 265 7205 - 1 7218 6884 - 4304 6721 - 8609 3442 + 2 1523 3605 - 2 1523 3605 - 139 4713 7604 - 34 8678 4401 - 69 7356 8802 + 174 3392 2005 - 174 3392 2005", "x2": "mul add mul n relu mul x_0_5 sub x_0_1 x_0_1 x_0_5 sqr INT+ 9", "tree": "(((n mul relu((x_0_5 mul (x_0_1 sub x_0_1)))) add x_0_5) mul (9)**2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 7 - 5 + 0 + 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv idiv x_0_3 INT+ 6 sign add relu x_0_1 n", "tree": "((x_0_3 idiv 6) idiv sign((relu(x_0_1) add n)))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 3 - 6 - 3 - 2 + 7 + 4 + 3 - 6 - 3 - 2 + 7 + 4 + 3 - 6 - 3 - 2 + 7 + 4 + 3 - 6 - 3 - 2 + 7 + 4 + 3 - 6 - 3", "x2": "sub abs sign INT+ 2 x_0_3", "tree": "(abs(sign(2)) sub x_0_3)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 6 + 5 + 8 - 7 + 5 - 6 + 2 - 2 + 3 - 1 + 4 + 1 + 15 + 4 + 1 + 16 + 4 + 15 + 7 + 11 + 6 + 10 + 5 + 8 + 6 + 5 + 8 + 7 + 5 + 6 + 2 + 2 + 3 + 1 + 4 + 1 + 3", "x2": "abs add INT- 9 x_0_12", "tree": "abs((-9 add x_0_12))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "+ 0 + 4 + 18 + 48 + 100 + 180 + 294 + 448 + 648 + 900 + 1210 + 1584 + 2028 + 2548 + 3150 + 3840 + 4624 + 5508 + 6498 + 7600 + 8820 + 1 164 + 1 1638 + 1 3248 + 1 5000", "x2": "sub mul sqr n relu abs n sqr abs n", "tree": "(((n)**2 mul relu(abs(n))) sub (abs(n))**2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 2 - 5 - 4 - 7 - 6 - 9 - 8 - 11 - 10 - 13 - 12 - 15 - 14 - 17 - 16 - 19 - 18 - 21 - 20 - 23 - 22 - 25 - 24 - 27 - 26 - 29", "x2": "idiv sqr add INT+ 1 sub n idiv relu mod x_0_1 INT- 6 n x_0_1", "tree": "(((1 add (n sub (relu((x_0_1 mod -6)) idiv n))))**2 idiv x_0_1)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 4 - 5 + 7 + 9 - 5 - 7 + 8 + 8 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "idiv x_0_8 relu add sqr n INT- 9", "tree": "(x_0_8 idiv relu(((n)**2 add -9)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 7 - 3 + 4 - 5 + 6 - 7 + 8 - 9 + 10 - 6 + 12 - 7 + 14 - 8 + 16 - 6 + 18 - 10 + 20 - 6 + 22 - 8 + 24 - 7 + 26 - 9", "x2": "idiv mul sign idiv abs sqr INT- 9 sign x_0_1 n idiv n sub INT- 6 add x_0_2 INT+ 1 0", "tree": "((sign((abs((-9)**2) idiv sign(x_0_1))) mul n) idiv (n idiv (-6 sub (x_0_2 add 10))))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 - 4 + 6 + 3 - 5 - 4 - 11 + 4 - 5 - 1 + 8 + 8 + 16 + 2 + 12 + 9 + 1 + 2 - 5 + 10 + 1 + 5 + 14 + 14 + 22 + 8 + 18 + 15 + 7 + 8", "x2": "sub n sub x_0_6 INT- 9", "tree": "(n sub (x_0_6 sub -9))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 7 + 3 - 8 + 3 + 1 - 4 - 7 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign mul INT- 8 relu sign x_0_8", "tree": "sign((-8 mul relu(sign(x_0_8))))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 1 + 9 + 7 + 3 + 4 + 10 + 4 + 8 - 9 - 9 - 6 - 18 - 7 + 14 + 48 + 16 + 72 + 27 - 80 - 390 - 77 - 726 - 108 + 84 + 4888 + 377 + 9940 + 504 - 405 - 7 2120 - 5824 - 15 7808 - 4794 + 1836 + 129 6648 + 1 6848", "x2": "mul idiv n INT- 2 mod x_0_11 x_0_5", "tree": "((n idiv -2) mul (x_0_11 mod x_0_5))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 7 - 6 + 10 + 0 - 1 - 5 + 8 - 7 - 7 - 8 - 7 + 10 - 1 - 2 - 6 + 7 - 7 - 8 - 9 - 8 + 10 - 2 - 3 - 7 + 6 - 7 - 9 - 10 - 9 + 10 - 3 - 4 - 8 + 5", "x2": "add x_0_9 idiv x_0_5 abs n", "tree": "(x_0_9 add (x_0_5 idiv abs(n)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 6 - 4 + 35 - 157 + 967 - 6747 + 5 4007 - 48 6037 + 486 407 - 5346 4447 + 6 4157 3407 - 83 4045 4257 + 1167 6635 9647 - 1 7514 9539 4667 + 28 239 2631 4727 - 476 4067 4735 317 + 8575 3214 5230 5767 - 16 2931 1075 9380 9527 + 325 8622 1518 7619 607 - 6843 1065 1894 0 2697 + 15 548 3434 1668 5 9407 - 346 2611 8985 8364 136 6307 + 8310 2685 5660 736 3279 1447 - 20 7756 7139 1501 8408 1978 6117 + 540 1674 5617 9047 8613 1443 9127", "x2": "sub relu sign x_0_1 add INT- 7 mul n add idiv n x_0_1 sub x_0_1 INT+ 2", "tree": "(relu(sign(x_0_1)) sub (-7 add (n mul ((n idiv x_0_1) add (x_0_1 sub 2)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 64 + 32 + 21 + 16 + 12 + 10 + 9 + 8 + 7 + 6 + 5 + 5 + 4 + 4 + 4 + 4 + 3 + 3 + 3 + 3 + 3 + 2 + 2 + 2 + 2", "x2": "idiv relu sub sqr abs INT- 8 sqr sub n n n", "tree": "(relu(((abs(-8))**2 sub ((n sub n))**2)) idiv n)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 10 + 9 - 3 - 2 - 4 - 6 - 4 + 0 + 7 + 15 + 22 + 34 + 47 + 62 + 80 + 99 + 120 + 143 + 168 + 195 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sub sqr sub abs INT- 6 n add idiv x_0_1 n add n sign idiv x_0_3 x_0_1", "tree": "(((abs(-6) sub n))**2 sub ((x_0_1 idiv n) add (n add sign((x_0_3 idiv x_0_1)))))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 2 + 9 - 5 + 6 + 9 + 398 - 470 + 839 - 1029 + 1280 - 908 + 1 6841 - 3 5627 + 6 9202 - 11 346 + 16 1563 - 19 7865 + 87 1524 - 229 6584 + 506 4685 - 947 8503 + 1594 1046 - 2385 5622 + 5871 6607 - 1 5057 9941 + 3 5316 7368 - 7 3230 7460 + 13 6994 9329 - 23 2417 4179 + 46 7283 8490", "x2": "sub relu n add x_0_1 mul INT+ 1 0 mul INT- 4 x_0_6", "tree": "(relu(n) sub (x_0_1 add (10 mul (-4 mul x_0_6))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 18 + 54 + 216 + 1080 + 6480 + 4 5360 + 36 2880 + 326 5920 + 3265 9200 + 3 5925 1200 + 43 1101 4400 + 560 4318 7200 + 7846 462 800 + 11 7690 6931 2000 + 188 3051 899 2000 + 3201 1868 5286 4000 + 5 7621 3633 5155 2000 + 109 4805 9036 7948 8000 + 2189 6118 735 8976 0 + 4 5981 8479 5453 8496 0 + 101 1600 6549 9984 6912 0 + 2326 6815 649 9647 8976 0 + 5 5840 3561 5599 1549 5424 0 + 139 6008 9038 9978 8738 5600 0 + 3629 6231 5013 9450 7202 5600 0", "x2": "mul x_0_1 add sign n add sub relu INT- 9 INT+ 1 n", "tree": "(x_0_1 mul (sign(n) add ((relu(-9) sub 1) add n)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600", "x2": "sub n mul n n", "tree": "(n sub (n mul n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 2 + 6 - 3 + 3 - 10 - 3 - 22 - 14 - 47 - 31 - 91 - 74 - 180 - 122 - 319 - 215 - 553 - 358 - 932 - 596 - 1551 - 979 - 2555 - 1602 - 4184", "x2": "sub mod x_0_1 x_0_2 sub n x_0_2", "tree": "((x_0_1 mod x_0_2) sub (n sub x_0_2))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 6 - 5 - 3 + 0 + 6 + 13 + 21 + 30 + 40 + 51 + 63 + 76 + 90 + 105 + 121 + 138 + 156 + 175 + 195 + 216 + 238 + 261 + 285 + 310 + 336 + 363", "x2": "add add sign sub mul x_0_1 mul INT+ 7 INT+ 1 0 INT- 4 n x_0_1", "tree": "((sign(((x_0_1 mul (7 mul 10)) sub -4)) add n) add x_0_1)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 9 + 5 + 1 + 3 + 9 + 5 + 1 + 3 + 9 + 5 + 1 + 3 + 9 + 5 + 1 + 3 + 9 + 5 + 1 + 3 + 9 + 5 + 1 + 3 + 9 + 5 + 1 + 3", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 8 - 6 - 10 - 4 - 12 - 10 - 14 - 8 - 16 - 14 - 18 - 12 - 20 - 18 - 22 - 16 - 24 - 22 - 26 - 20 - 28 - 26 - 30 - 24 - 32", "x2": "sub mod sqr n INT- 8 n", "tree": "(((n)**2 mod -8) sub n)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 - 3 + 8 + 2 - 1 + 0 - 10 - 3 + 1 + 1 + 12 + 6 + 3 + 4 - 6 + 1 + 5 + 5 + 16 + 10 + 7 + 8 - 2 + 5 + 9 + 9 + 20 + 14 + 11", "x2": "add sub INT- 9 x_0_4 n", "tree": "((-9 sub x_0_4) add n)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 4 + 6 + 2 - 5 + 3 - 5 - 5 - 14 - 15 - 25 - 27 - 38 - 41 - 53 - 57 - 70 - 75 - 89 - 95 - 110 - 117 - 133 - 141 - 158 - 167 - 185 - 195 - 214 - 225 - 245 - 257", "x2": "sub x_0_2 mod add n mod sub n n sign add add x_0_7 sign INT+ 1 0 n sqr INT- 6", "tree": "(x_0_2 sub ((n add ((n sub n) mod sign(((x_0_7 add sign(10)) add n)))) mod (-6)**2))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 6 + 6 + 128 + 150 + 216 + 6272 + 9600 + 1 7496 + 62 7200 + 116 1600 + 251 9424 + 1 599 6800 + 2 2767 3600 + 5 6687 400 + 271 3518 800 + 657 9767 400 + 1836 6600 9600 + 9 7958 26 8800 + 26 3190 6816 0 + 80 9967 1023 3600 + 4741 1673 3009 9200 + 1 3922 7870 5664 0 + 4 6654 1050 9455 3600 + 296 3229 5813 1200 0 + 941 1804 502 8864 0 + 3401 842 6139 2957 4400 + 23 2317 1991 7486 800 0", "x2": "relu mul mul x_0_3 n n", "tree": "relu(((x_0_3 mul n) mul n))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 10 + 10 - 5 - 9 + 9 - 10 + 4 + 1 + 54 - 18 + 30 - 76 - 24 - 378 + 486 - 420 + 1368 + 24 + 1 4742 - 486 + 4 1580 - 6 5664 - 9672 - 1 4742 + 21 7242 - 4 1580 + 32 8320 + 9672 + 762 1614 - 21 7242 + 27 3168 1260 - 31 8667 3920 - 1 4292 3144", "x2": "mul mod mod sign abs n INT+ 6 sub INT- 2 relu sub n x_0_9 x_0_5", "tree": "(((sign(abs(n)) mod 6) mod (-2 sub relu((n sub x_0_9)))) mul x_0_5)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 4 - 7 + 0 - 7 - 4 + 9 + 10 + 0 - 10 + 2 + 51 - 2 + 2 + 2 - 2 - 2 + 2 + 150 - 2 - 150 + 17 + 150 - 17 - 150 + 36 + 150 - 36 - 150 + 1953 + 150 - 1953 + 120 + 6716", "x2": "mul sign relu INT- 5 sub relu sub INT- 3 mod n mul mod add x_0_6 n n x_0_9 x_0_2", "tree": "(sign(relu(-5)) mul (relu((-3 sub (n mod (((x_0_6 add n) mod n) mul x_0_9)))) sub x_0_2))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 2 + 0 + 54 + 55 + 56 + 59 + 59 + 58 + 66 + 69 + 66 + 63 + 64 + 75 + 66 + 75 + 80 + 77 + 73 + 86 + 80 + 77 + 85 + 78 + 91 + 90 + 96", "x2": "add mod sqr add x_0_1 add n sign x_0_2 abs n add n mul INT+ 1 0 INT+ 5", "tree": "((((x_0_1 add (n add sign(x_0_2))))**2 mod abs(n)) add (n add (10 mul 5)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 - 189 - 252 - 1 1025 - 1 4931 - 69 3567 - 93 9582 - 4369 3587 - 5919 2469 - 27 5269 4721 - 37 2912 4224 - 1734 1976 6037 - 2349 3482 4663 - 10 9254 4525 8819 - 14 8008 9395 2194 - 688 3030 5130 3959 - 932 4563 1898 6521 - 4 3363 922 3214 7653 - 5 8744 7480 9614 8996 - 273 1874 8106 2530 249 - 370 919 1300 5738 4795 - 1 7210 8113 693 9391 3671 - 2 3315 7905 1936 1524 6 - 108 4281 1123 3718 1655 9131 - 146 8894 8027 1977 6011 8173 - 6830 9710 772 4244 4322 2985", "x2": "mul mul abs sub relu sub INT- 9 x_0_2 n INT- 9 INT+ 7", "tree": "((abs((relu((-9 sub x_0_2)) sub n)) mul -9) mul 7)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 3 + 4 - 3 + 7 + 6 + 8 - 4 - 7 + 2 + 2 + 3 + 16 + 28 + 30 + 15 + 13 + 2 + 2 + 8 + 6 + 44 + 46 + 186 + 146 + 2 + 2 + 32 + 22 + 60 + 62 + 994 + 706 + 2", "x2": "abs sub sub INT- 2 idiv abs relu INT- 1 0 n mod mul x_0_4 n sqr x_0_8", "tree": "abs(((-2 sub (abs(relu(-10)) idiv n)) sub ((x_0_4 mul n) mod (x_0_8)**2)))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 9 - 7 - 1 - 9 - 7 - 5 - 9 + 6 + 90 - 22 + 816 + 208 + 546 - 405 - 128 - 2 7642 - 6120 + 138 4986 - 8 3420 + 935 8944 - 124 5156 - 146 6664 + 2 3544 576 + 2166 9500 - 9956 2169 856 + 138 1794 12 + 362 9362 2068 544 + 3 54 2871 5376 - 411 7934 3736 9480 - 9057 1033 4892 9000 - 1017 4621 9161 6384 - 77 3553 3541 2118 9136 8800 + 1018 444 7524 8483 3216", "x2": "mul abs n sub mul x_0_7 x_0_9 x_0_5", "tree": "(abs(n) mul ((x_0_7 mul x_0_9) sub x_0_5))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 10 - 8 - 7 - 4 + 3 - 10 + 1 - 4 - 2 - 4 + 6 - 7 - 11 - 7 - 5 + 1 + 9 - 11 + 9 + 1 + 5 + 1 + 9 - 5 - 13 - 5 - 1 + 9 + 9 - 13 + 9 + 9 + 9 + 9 + 9 - 1 - 17", "x2": "add x_0_12 sub INT+ 9 abs x_0_12", "tree": "(x_0_12 add (9 sub abs(x_0_12)))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "12"}
{"x1": "+ 6 - 5 + 1 - 7 - 3 + 5 + 7 + 8 + 2 + 10 + 13 + 4 + 6 + 7 + 1 + 9 + 12 + 3 + 5 + 6 + 0 + 8 + 11 + 2 + 4 + 5 + 32 + 7 + 10 + 1 + 3", "x2": "mod sub x_0_6 sign x_0_5 add abs n INT+ 6", "tree": "((x_0_6 sub sign(x_0_5)) mod (abs(n) add 6))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 8 - 7 + 8 - 4 + 7 - 1 + 2 + 4 + 8 + 7 + 8 + 4 + 7 + 1 + 2 + 4 + 8 + 7 + 8 + 4 + 7 + 1 + 2 + 4 + 8 + 7 + 8 + 4 + 7 + 1 + 2 + 4", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 2 + 4 - 4 - 7 - 9 - 2 + 6 - 10 + 9 - 1 + 5 + 2199 + 405 + 1497 + 994 + 21 8292 + 3 8799 + 14 7907 + 9 7491 + 2182 7210 + 387 7800 + 1478 8506 + 974 9000 + 21 8271 9006 + 3 8777 8998 + 14 7884 8995 + 9 7511 5593 + 2182 7193 6600 + 387 7804 4808 + 1478 8499 3992 + 975 3338 3411 + 21 8271 9753 4601 + 3 8778 1926 6007 + 14 7885 914 4801 + 9 7555 2105 6607 + 2182 7201 4123 5499", "x2": "sub add relu mul sqr INT+ 1 0 abs sub relu n x_0_4 x_0_11 idiv n mul INT- 1 0 x_0_1", "tree": "((relu(((10)**2 mul abs((relu(n) sub x_0_4)))) add x_0_11) sub (n idiv (-10 mul x_0_1)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 5 - 6 + 23 + 23 + 31 + 44 + 37 + 45 + 33 + 56 + 34 + 77 + 80 + 78 + 71 + 119 + 67 + 110 + 108 + 111 + 79 + 72 + 120 + 73 + 176 + 184 + 152", "x2": "sub relu abs sub mul add mod x_0_2 n n INT+ 5 sub n sqr idiv INT- 6 x_0_2 n", "tree": "(relu(abs(((((x_0_2 mod n) add n) mul 5) sub (n sub ((-6 idiv x_0_2))**2)))) sub n)", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 + 6 - 3 + 8 + 0 + 9 + 9 - 6 + 12 + 1 - 6 + 3 - 8 + 0 - 9 - 9 + 6 - 12 - 1 + 6 - 3 + 8 + 0 + 9 + 9 - 6 + 12 + 1 - 6 + 3 - 8", "x2": "sub x_0_3 x_0_6", "tree": "(x_0_3 sub x_0_6)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 6 + 6 - 8 + 8 - 2 - 5 - 1 + 2 + 1 + 9 + 1 + 1 + 1 + 3 + 2 + 10 + 2 + 2 + 2 + 4 + 3 + 11 + 3 + 3 + 3 + 5 + 4 + 12 + 4 + 4 + 4 + 6 + 5", "x2": "relu add relu x_0_6 sign mod x_0_9 add mul INT+ 5 x_0_1 sign INT+ 5", "tree": "relu((relu(x_0_6) add sign((x_0_9 mod ((5 mul x_0_1) add sign(5))))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 10 + 9 - 9 + 360 + 1800 + 1942 9200 + 1 3600 4400 + 10 8803 5200 + 97 9231 6800 + 979 2316 8000 + 1 771 5484 8000 + 12 9258 5817 6000 + 168 361 5628 8000 + 2352 5061 8803 2000 + 3 5287 5928 2048 0 + 56 4601 4851 2768 0 + 959 8225 2471 7056 0 + 1 7276 8054 4490 7008 0 + 32 8259 3034 5323 3152 0 + 656 5186 690 6466 3040 0 + 1 3786 8907 4503 5792 3840 0 + 30 3311 5963 9078 7432 4480 0 + 697 6166 7169 8811 946 3040 0 + 1 6742 8001 2077 1466 2711 2960 0 + 41 8570 30 1928 6656 7782 4000 0 + 1088 2820 785 145 3076 2342 4000 0 + 2 9383 6142 1195 3923 3058 3244 8000 0 + 82 2741 1979 3470 9852 5633 854 4000 0", "x2": "abs mul n sub sub mod x_0_3 sqr x_0_1 x_0_3 x_0_1", "tree": "abs((n mul (((x_0_3 mod (x_0_1)**2) sub x_0_3) sub x_0_1)))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 + 7 - 3 + 6 - 8 - 3 + 2 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024", "x2": "sqr mod n add sqr mul x_0_7 x_0_1 abs mul INT- 8 INT+ 7", "tree": "((n mod (((x_0_7 mul x_0_1))**2 add abs((-8 mul 7)))))**2", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 1 - 1 + 2 + 9 - 1 + 6 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0", "x2": "idiv n sub sub mul n mod x_0_2 n n sqr sign x_0_6", "tree": "(n idiv (((n mul (x_0_2 mod n)) sub n) sub (sign(x_0_6))**2))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 5 + 2 - 5 + 2 - 6 - 14 - 4 - 15 - 16 - 14 - 33 - 24 - 33 - 53 - 42 - 70 - 81 - 79 - 127 - 127 - 153 - 212 - 210 - 284 - 343 - 367 - 500 - 557 - 655 - 847", "x2": "sub x_0_5 sub add INT+ 7 abs x_0_3 add sign add n n INT+ 2", "tree": "(x_0_5 sub ((7 add abs(x_0_3)) sub (sign((n add n)) add 2)))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3", "x2": "mod relu n mod idiv add n abs n n INT- 6", "tree": "(relu(n) mod (((n add abs(n)) idiv n) mod -6))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 10 - 1 - 5 + 2 - 4 + 33 - 36 + 80 + 75 + 117 + 128 - 920 - 1100 - 6175 - 5369 - 1 3400 - 1 6060 - 84 6039 - 120 9600 - 3813 184 - 2882 5677 - 1 7955 9471 - 2 5792 3024 - 7157 8198 8896 - 1 4631 3215 9324 - 1453 9109 3187 3127 - 830 9196 5450 7545 - 3 2241 6036 2579 9000 - 6 6524 2863 930 3676 - 5123 4385 5627 9134 6729 7855", "x2": "sub mul n n sqr x_0_6", "tree": "((n mul n) sub (x_0_6)**2)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 9 - 8 - 4 - 7 + 8 + 9 + 8 + 14 + 13 + 19 + 21 + 21 + 14 + 28 + 19 + 21 + 21 + 33 + 28 + 40 + 43 + 44 + 33 + 28 + 40 + 43 + 44 + 33 + 58", "x2": "add mod idiv x_0_5 sign x_0_1 abs n n", "tree": "(((x_0_5 idiv sign(x_0_1)) mod abs(n)) add n)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 7 - 9 - 5 - 1 + 3 + 9 + 3 + 9 + 0 - 8 + 2 - 48 - 13 + 56 - 45 + 64 - 102 - 270 - 114 - 1140 - 525 + 990 - 1357 + 1176 - 2900 - 7462 - 3510 - 3 2452 - 1 5805 + 2 9070 - 4 2749 + 3 6896 - 9 6426 - 25 4558 - 12 3690 - 116 9244", "x2": "mul n sub sub add x_0_8 sign x_0_11 n INT- 1 0", "tree": "(n mul (((x_0_8 add sign(x_0_11)) sub n) sub -10))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 2 - 8 + 8 - 1 + 12 - 56 - 24 - 76 + 188 + 56 + 260 - 800 - 276 - 1096 + 3140 + 1040 + 4316 - 1 2632 - 4236 - 1 7344 + 5 444 + 1 6856 + 6 9284 - 20 1872 - 6 7524 - 27 7240 + 80 7380 + 26 9984 + 110 8844", "x2": "mul sub x_0_3 sub mod x_0_4 sub mod sign sign relu n n INT- 1 n INT- 4", "tree": "((x_0_3 sub ((x_0_4 mod ((sign(sign(relu(n))) mod n) sub -1)) sub n)) mul -4)", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 - 7 - 3 - 7 + 9 + 2 - 7 + 4 + 7 + 8 + 130 + 70 + 11 + 208 + 238 + 270 + 304 + 340 + 378 + 418 + 460 + 504 + 550 + 598 + 648 + 700 + 754 + 810 + 868 + 928 + 990 + 1054 + 1120", "x2": "add n mod INT- 2 mul mod n add add mul x_0_6 mod mod INT+ 5 relu INT+ 1 0 n INT+ 4 x_0_8 n", "tree": "(n add (-2 mod ((n mod (((x_0_6 mul ((5 mod relu(10)) mod n)) add 4) add x_0_8)) mul n)))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 63 + 514 + 4212 + 3 4535 + 28 3184 + 232 2105 + 1904 1258 + 1 5613 8312 + 12 8033 4155 + 104 9874 68 + 860 8966 8554 + 7059 3528 2139 + 5 7886 6931 3536 + 47 4670 8837 992 + 389 2301 2464 2131 + 3191 6870 2206 5471 + 2 6171 8335 8093 6859 + 21 4609 353 6368 2240 + 175 9794 899 8219 4365 + 1443 311 5378 5399 3790 + 1 1832 8554 6104 274 9075 + 9 7029 4147 8053 254 2412 + 79 5641 2012 34 8084 7775 + 652 4257 8498 4285 4295 1752 + 5349 8914 3687 1140 5220 4363", "x2": "mod sub add idiv x_0_1 INT+ 5 INT- 2 add x_0_1 idiv mod INT+ 4 n INT+ 3 mul add INT+ 3 INT+ 6 x_0_1", "tree": "((((x_0_1 idiv 5) add -2) sub (x_0_1 add ((4 mod n) idiv 3))) mod ((3 add 6) mul x_0_1))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 7 + 1 - 9 - 7 + 6 + 8 + 13 + 4 + 2 + 1 + 4 + 3 + 2 + 4 + 13 + 13 + 23 + 37 + 37 + 47 + 56 + 51 + 53 + 48 + 43 + 57 + 65 + 58 + 57 + 77", "x2": "abs sub relu add add add mod x_0_2 n sub x_0_1 abs x_0_2 x_0_2 idiv n x_0_5 INT+ 8", "tree": "abs((relu(((((x_0_2 mod n) add (x_0_1 sub abs(x_0_2))) add x_0_2) add (n idiv x_0_5))) sub 8))", "n_input_points": "25", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 8 + 10 - 6 - 6 - 3 - 10 + 6 - 6 + 10 - 10 + 6 + 6 + 3 + 12 - 6 + 8 - 10 + 12 - 4 - 4 - 1 - 12 + 8 - 8 + 12 - 12 + 4 + 4 + 1 + 14 - 8 + 10", "x2": "sub sign mod x_0_5 relu x_0_7 sub x_0_8 sign sub INT+ 2 idiv x_0_6 n", "tree": "(sign((x_0_5 mod relu(x_0_7))) sub (x_0_8 sub sign((2 sub (x_0_6 idiv n)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 1 + 7 + 5 - 2 + 7 - 8 + 0 - 5 - 2 - 6 - 6 - 3 - 8 - 8 - 7 - 7 - 5 - 1 - 3 - 6 - 4 - 8 - 6 - 4 + 0 + 0 - 8 - 6 - 5 - 3", "x2": "mod add idiv sign add n n n sub x_0_5 x_0_2 INT- 9", "tree": "(((sign((n add n)) idiv n) add (x_0_5 sub x_0_2)) mod -9)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 7 - 2 - 2 + 11 + 14 - 3 - 2 + 14 + 24 - 3 - 2 + 20 + 34 - 3 - 2 + 27 + 44 - 3 - 2 + 34 + 54 - 3 - 2 + 40 + 64 - 3", "x2": "idiv mod abs add abs x_0_2 n mul INT- 6 abs n x_0_2", "tree": "((abs((abs(x_0_2) add n)) mod (-6 mul abs(n))) idiv x_0_2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 7 + 10 - 4 - 4 + 9 + 1 + 16 + 2 + 2 + 15 + 7 + 22 + 8 + 8 + 21 + 13 + 28 + 14 + 14 + 27 + 19 + 34 + 20 + 20 + 33 + 25 + 40 + 26 + 26 + 39", "x2": "abs sub INT- 5 add x_0_5 sign sub INT+ 3 sign add sqr x_0_5 n", "tree": "abs((-5 sub (x_0_5 add sign((3 sub sign(((x_0_5)**2 add n)))))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 8 + 4 + 2 - 6 + 10 + 4 - 7 + 7 - 6 + 66 + 18 + 6 + 38 + 102 + 18 + 51 + 51 + 38 + 4358 + 326 + 38 + 1446 + 1 406 + 326 + 2603 + 2603 + 1446 + 1899 2166 + 10 6278 + 1446 + 209 918 + 1 828 4838 + 10 6278 + 677 5611", "x2": "abs add INT+ 2 relu sqr x_0_9", "tree": "abs((2 add relu((x_0_9)**2)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 3 + 18 + 17 + 18 + 20 + 19 + 22 + 23 + 22 + 19 + 25 + 18 + 22 + 25 + 27 + 28 + 28 + 27 + 25 + 22 + 18 + 35 + 29 + 22 + 39 + 30", "x2": "sub relu sub mod x_0_1 n INT- 1 0 INT- 7", "tree": "(relu(((x_0_1 mod n) sub -10)) sub -7)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 - 87 + 262 + 7 - 5 - 344 + 820 + 19 - 13 - 771 + 1595 + 37 - 25 - 1369 + 2621 + 61 - 41 - 2137 + 3902 + 91 - 61 - 3076 + 5439 + 126 - 85 - 4218", "x2": "idiv add sub INT- 6 sqr sqr n mod INT+ 4 relu INT+ 2 x_0_2", "tree": "(((-6 sub ((n)**2)**2) add (4 mod relu(2))) idiv x_0_2)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 - 12 - 8 - 24 - 16 - 48 - 32 - 96 - 64 - 192 - 128 - 384 - 256 - 768 - 512 - 1536 - 1024 - 3072 - 2048 - 6144 - 4096 - 1 2288 - 8192 - 2 4576 - 1 6384 - 4 9152", "x2": "add x_0_2 x_0_2", "tree": "(x_0_2 add x_0_2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 3 - 6 + 3 + 9 + 6 + 10 + 17 + 28 + 33 + 49 + 62 + 90 + 109 + 154 + 187 + 261 + 314 + 434 + 521 + 716 + 857 + 1173 + 1402 + 1914 + 2285 + 3114 + 3715 + 5057", "x2": "add add relu x_0_2 n x_0_4", "tree": "((relu(x_0_2) add n) add x_0_4)", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 9 - 1 - 13 - 6 - 19 - 13 - 27 - 22 - 37 - 33 - 49 - 46 - 63 - 61 - 79 - 78 - 97 - 97 - 117 - 118 - 139 - 141 - 163 - 166 - 189 - 193", "x2": "sub x_0_2 relu n", "tree": "(x_0_2 sub relu(n))", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 1 + 0 + 8 + 1 + 0 + 8 + 1 + 0 + 8 + 1 + 0 + 8 + 1 + 0 + 8 + 1 + 0 + 8 + 1 + 0 + 8 + 1 + 0 + 8", "x2": "abs mod mul sqr n n INT- 9", "tree": "abs((((n)**2 mul n) mod -9))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 4 - 3 - 24 - 24 - 240 - 288 - 3360 - 4608 - 6 480 - 9 2160 - 133 560 - 221 1840 - 3459 4560 - 6193 1520 - 10 3783 6800 - 19 8180 8640 - 352 8645 1200 - 713 4511 1040 - 1 3408 8514 5600 - 2 8538 444 1600 - 56 3171 7611 5200 - 125 5673 9543 400 - 2590 5901 129 9200 - 6027 2349 8065 9200 - 12 9529 5050 6496 0 - 31 3416 2189 9427 8400 - 699 4593 2735 784 0", "x2": "mul mul n INT+ 2 mul abs INT- 1 x_0_2", "tree": "((n mul 2) mul (abs(-1) mul x_0_2))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 5 + 2 + 24 - 25 + 12 + 168 - 200 + 108 + 1680 - 2200 + 1296 + 2 1840 - 3 800 + 1 9440 + 34 9440 - 52 3600 + 34 9920 + 663 9360 - 1047 2000 + 734 8320 + 1 4606 5920 - 2 4085 6000 + 1 7635 9680 + 36 5164 8000 - 62 6225 6000 + 47 6171 1360 + 1022 4614 4000", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 3 + 1 + 2 + 0 + 4 + 0 + 0 + 0 - 2 + 2 + 0 + 1 + 4 - 2 + 1 + 1 - 4 + 3 + 1 - 1 + 5 - 1 - 1 + 2 - 3 + 1 + 2 + 0", "x2": "sub mod add abs n idiv sqr x_0_4 n INT+ 3 x_0_4", "tree": "(((abs(n) add ((x_0_4)**2 idiv n)) mod 3) sub x_0_4)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 1 + 10 + 5 + 50 + 25 + 250 + 125 + 1250 + 625 + 6250 + 3125 + 3 1250 + 1 5625 + 15 6250 + 7 8125 + 78 1250 + 39 625 + 390 6250 + 195 3125 + 1953 1250 + 976 5625 + 9765 6250 + 4882 8125 + 4 8828 1250 + 2 4414 625 + 24 4140 6250", "x2": "mul abs INT+ 5 x_0_2", "tree": "(abs(5) mul x_0_2)", "n_input_points": "25", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 10 - 8 - 8 + 481 + 601 + 865 + 7 708 + 11 5393 + 21 196 + 2121 2401 + 4188 7660 + 9080 4673 + 107 5468 7308 + 246 2994 4081 + 612 9315 4276 + 8 2595 9985 2545 + 21 3541 6151 8228 + 59 5769 4595 6273 + 8945 1466 4030 6236 + 2 5624 9938 2187 3601 + 7 8820 2995 14 9180 + 1298 8352 9217 2465 4673 + 4066 6865 1953 1340 4788 + 1 3620 1477 5362 5778 3041 + 243 5316 1728 2337 2751 1876 + 824 7240 2616 955 8491 65 + 2978 7263 1371 7957 7151 668 + 57 2786 3638 4805 7271 793 2353", "x2": "add sign relu n mul abs mul x_0_3 abs INT- 3 sqr n", "tree": "(sign(relu(n)) add (abs((x_0_3 mul abs(-3))) mul (n)**2))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 10 + 1 + 6 + 3 + 7 + 11 + 2 + 7 + 4 + 8 + 12 + 3 + 8 + 5 + 9 + 13 + 4 + 9 + 6 + 10 + 14 + 5 + 10 + 7 + 11 + 15 + 6 + 11", "x2": "sub x_0_5 idiv idiv n INT+ 4 INT- 7", "tree": "(x_0_5 sub ((n idiv 4) idiv -7))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 9 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1", "x2": "mod relu x_0_3 abs sqr n", "tree": "(relu(x_0_3) mod abs((n)**2))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 1 + 9 - 8 - 7 + 9 + 0 - 5 - 1225 - 1115 - 2449 - 1809 - 2139 - 6984 - 5203 - 4970 + 34 3332 + 35 1318 + 87 4686 + 106 717 + 128 7470 + 425 1252 + 380 6113 + 414 1308 - 2 1069 234 - 2 3405 3779 - 6 3439 9186 - 10 4337 5063 - 13 1812 7941 - 44 6480 4272 - 47 488 5595 - 55 6300 1445 + 2251 8751 4814", "x2": "add sub INT- 4 mul add idiv n n sqr n add n x_0_8 x_0_3", "tree": "((-4 sub (((n idiv n) add (n)**2) mul (n add x_0_8))) add x_0_3)", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 5 - 10 - 10 + 7 + 2 + 2 + 3 + 10 + 5 + 0 + 0 + 7 + 2 + 2 + 3 + 10 + 5 + 0 + 0 + 7 + 2 + 2 + 3 + 10 + 5 + 0 + 0 + 7 + 2 + 2 + 3 + 10", "x2": "relu x_0_8", "tree": "relu(x_0_8)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 1 + 2 - 5 + 8 - 6 + 0 + 9 + 0 + 1 - 4 + 7 - 5 + 1 + 10 + 1 + 0 - 3 + 6 - 4 + 2 + 11 + 2 - 1 - 2 + 5 - 3 + 3 + 12 + 3 + 0 - 1 + 4", "x2": "add idiv x_0_7 INT+ 1 sign add sqr sign x_0_7 add INT+ 1 x_0_6", "tree": "((x_0_7 idiv 1) add sign(((sign(x_0_7))**2 add (1 add x_0_6))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 7 + 10 - 3 + 7 + 6 - 1 - 6 + 0 + 0 - 8 - 7 + 0 + 0 - 1 + 1 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1", "x2": "mul sub abs x_0_6 sign mod sign sqr sqr INT+ 9 x_0_1 idiv x_0_4 n", "tree": "((abs(x_0_6) sub sign((sign(((9)**2)**2) mod x_0_1))) mul (x_0_4 idiv n))", "n_input_points": "25", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 2 + 10 + 10 - 252 - 280 - 336 - 1666 - 2072 - 2646 - 1 2250 - 1 6632 - 2 2932 - 11 2294 - 16 3856 - 24 1710 - 125 8656 - 195 886 - 304 6680 - 1674 1242 - 2731 3580 - 4478 7519 - 2 5781 6482 - 4 3975 87 - 7 5243 1848 - 45 1178 9975 - 80 345 3094 - 142 2096 3477 - 884 3108 5176", "x2": "mul n mul mul INT+ 7 sub idiv sub INT- 9 x_0_3 abs INT- 1 0 INT- 1 0 INT- 1", "tree": "(n mul ((7 mul (((-9 sub x_0_3) idiv abs(-10)) sub -10)) mul -1))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 + 14 - 32 + 60 - 124 + 244 - 492 + 980 - 1964 + 3924 - 7852 + 1 5700 - 3 1404 + 6 2804 - 12 5612 + 25 1220 - 50 2444 + 100 4884 - 200 9772 + 401 9540 - 803 9084 + 1607 8164 - 3215 6332 + 6431 2660 - 1 2862 5324 + 2 5725 644", "x2": "add sub add mul INT- 2 x_0_1 INT- 4 abs n n", "tree": "((((-2 mul x_0_1) add -4) sub abs(n)) add n)", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 - 2 + 7 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0", "x2": "idiv idiv INT- 6 sign add x_0_2 sign x_0_5 abs INT- 9", "tree": "((-6 idiv sign((x_0_2 add sign(x_0_5)))) idiv abs(-9))", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 10 + 30 + 50 + 80 + 110 + 150 + 190 + 240 + 290 + 350 + 410 + 480 + 550 + 630 + 710 + 800 + 890 + 990 + 1090 + 1200 + 1310 + 1430 + 1550 + 1680 + 1810 + 1950", "x2": "add x_0_2 mul mod n x_0_1 INT+ 1 0", "tree": "(x_0_2 add ((n mod x_0_1) mul 10))", "n_input_points": "25", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 25 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225", "x2": "sqr add INT+ 1 add sub n INT- 1 0 idiv idiv INT- 7 n sqr n", "tree": "((1 add ((n sub -10) add ((-7 idiv n) idiv (n)**2))))**2", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 7 + 10 + 17 + 7 - 10 - 17 - 7 + 10 + 17 + 7 - 10 - 17 - 7 + 10 + 17 + 7 - 10 - 17 - 7 + 10 + 17 + 7 - 10 - 17 - 7 + 10 + 17", "x2": "sub x_0_1 x_0_2", "tree": "(x_0_1 sub x_0_2)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 9 + 22 + 47 + 96 + 193 + 386 + 771 + 1540 + 3077 + 6150 + 1 2295 + 2 4584 + 4 9161 + 9 8314 + 19 6619 + 39 3228 + 78 6445 + 157 2878 + 314 5743 + 629 1472 + 1258 2929 + 2516 5842 + 5033 1667 + 1 66 3316 + 2 132 6613", "x2": "sub x_0_1 sub sub add n sub n n INT+ 7 x_0_1", "tree": "(x_0_1 sub (((n add (n sub n)) sub 7) sub x_0_1))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 - 3 - 5 - 17 - 28 - 41 - 66 - 92 - 122 - 166 - 213 - 266 - 335 - 409 - 491 - 591 - 698 - 815 - 952 - 1098 - 1256 - 1436 - 1627 - 1832 - 2061 - 2303 - 2561 - 2845", "x2": "sub x_0_3 relu relu sqr n", "tree": "(x_0_3 sub relu(relu((n)**2)))", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 16 + 18 + 22 + 28 + 36 + 46 + 58 + 72 + 88 + 106", "x2": "add n sqr mod n sqr INT- 4", "tree": "(n add ((n mod (-4)**2))**2)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 7 + 1 - 5 + 8 + 11 + 3 + 10 + 7 + 13 + 23 + 12 + 25 + 32 + 27 + 50 + 46 + 54 + 84 + 76 + 107 + 133 + 133 + 194 + 212 + 243 + 330 + 348 + 440 + 546", "x2": "add x_0_3 add x_0_5 mul idiv relu add n INT+ 1 0 INT+ 1 0 sign mod INT+ 8 n", "tree": "(x_0_3 add (x_0_5 add ((relu((n add 10)) idiv 10) mul sign((8 mod n)))))", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 8 - 25 - 17 - 50 - 42 - 75 - 67 - 100 - 92 - 125 - 117 - 150 - 142 - 175 - 167 - 200 - 192 - 225 - 217 - 250 - 242 - 275 - 267 - 300 - 292 - 325", "x2": "sub x_0_2 sqr abs relu sub add INT- 7 INT+ 1 0 INT- 2", "tree": "(x_0_2 sub (abs(relu(((-7 add 10) sub -2))))**2)", "n_input_points": "25", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 + 0 - 1 + 7 + 2 + 3 + 3 + 2 + 10 + 10 - 6 - 11 + 14 - 125 + 16 - 97 - 213 + 19 - 2730 + 21 - 3082 + 23 - 223 - 10 6445 + 26 - 13 2499 + 28 - 4 1003 - 521 5775 + 31 - 702 2415 + 33 - 233 7137 - 9 8056 5665 + 36", "x2": "mod n mul x_0_5 mul add x_0_11 n sign x_0_11", "tree": "(n mod (x_0_5 mul ((x_0_11 add n) mul sign(x_0_11))))", "n_input_points": "25", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 3 + 4 - 10 + 3 - 10 + 1 + 9 + 7 + 8 + 10 - 9 - 5 - 6 - 8 + 11 + 17 + 11 + 18 - 2 - 17 - 9 - 13 + 2 + 30 + 24 + 23 + 13 - 24 - 27", "x2": "sub sub idiv sub x_0_1 n INT- 2 x_0_5 x_0_4", "tree": "((((x_0_1 sub n) idiv -2) sub x_0_5) sub x_0_4)", "n_input_points": "25", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 - 2 - 8 + 6 + 55 + 354 + 2513 + 2 136 + 18 1206 + 181 2060 + 1993 2660 + 2 3919 1848 + 31 949 4089 + 435 3291 7302 + 6529 9375 9395 + 10 4479 15 288 + 177 6143 255 4709 + 3197 574 4598 4762 + 6 744 914 7371 497 + 121 4881 8294 7420 9820 + 2551 2518 4189 5840 6178 + 5 6127 5405 2170 8493 5740 + 129 933 4319 9929 5352 1767 + 3098 2402 3679 8308 8452 2456 + 7 7456 59 1995 7721 1306 1000 + 201 3856 1539 1890 749 3958 5792 + 5437 4116 1558 1032 233 6881 5844 + 15 2247 5252 3626 8896 6543 2684 3128 + 441 5178 2318 5179 8002 9754 7845 74", "x2": "mul sub add sub x_0_1 n mod x_0_4 n sub sign INT+ 4 relu INT+ 7 n", "tree": "((((x_0_1 sub n) add (x_0_4 mod n)) sub (sign(4) sub relu(7))) mul n)", "n_input_points": "25", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 5 + 1 + 3 - 10 - 2 + 8 - 2 + 25 + 1 + 9 + 100 + 4 + 64 + 4 + 625 + 1 + 81 + 1 0 + 16 + 4096 + 16 + 39 625 + 1 + 6561 + 1 0 0 + 256 + 1677 7216 + 256 + 1525 8789 625 + 1 + 4304 6721 + 1 0 0 0 0", "x2": "sub sqr x_0_7 idiv sign n abs add sqr n x_0_5", "tree": "((x_0_7)**2 sub (sign(n) idiv abs(((n)**2 add x_0_5))))", "n_input_points": "25", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 3 - 2 + 4 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "25", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 1 + 6 - 8 - 7 + 7 + 3 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1", "x2": "idiv sign sub n n sign idiv x_0_7 x_0_5", "tree": "(sign((n sub n)) idiv sign((x_0_7 idiv x_0_5)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 1 + 3 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3", "x2": "add INT+ 4 idiv add mod n INT+ 9 abs x_0_1 INT- 5", "tree": "(4 add (((n mod 9) add abs(x_0_1)) idiv -5))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 + 9 + 402 + 3 2196 + 402 6510 + 7 2496 4976 + 1776 4460 4690 + 56 8520 7322 608 + 2 3026 6884 5578 8450 + 1151 3912 7486 2643 1080 + 69 6617 506 4920 447 6350 + 5 157 8093 1627 2267 4014 4960 + 4238 4254 4744 1590 9914 8068 3750 + 415 3727 1594 2580 1952 8254 3210 4440 + 46 7300 6630 7357 3882 793 4833 2775 1250 + 5 9815 1494 6976 2965 344 6903 8664 3527 1040 + 8643 3685 3949 3470 9550 4072 9576 2155 3842 4050 + 1400 2364 7012 4846 8520 5030 4395 7738 7680 8183 9720 + 252 7443 2509 7557 3605 5456 1401 1758 424 4829 5075 1550 + 50 5491 4506 6805 4970 8028 2690 2960 4000 3741 2631 3989 4400", "x2": "add mul abs mul mul relu x_0_1 n n relu INT+ 5 mul n x_0_2", "tree": "((abs(((relu(x_0_1) mul n) mul n)) mul relu(5)) add (n mul x_0_2))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 7 + 9 + 6 + 12 + 3 + 1 + 4 + 6 + 9 + 7 + 6 + 4 + 7 + 9 + 12 + 10 + 9 + 7 + 10 + 12", "x2": "abs sub x_0_3 relu abs n", "tree": "abs((x_0_3 sub relu(abs(n))))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342", "x2": "mul sub abs n sign INT- 1 n", "tree": "((abs(n) sub sign(-1)) mul n)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 7 - 9 - 5 - 8 - 10 - 9 - 12 - 12 - 4 - 5 - 14 - 17 - 8 - 9 - 18 - 20 - 12 - 13 - 14", "x2": "sub mod INT+ 1 0 mul x_0_2 sign INT- 1 0 add sqr INT+ 2 n", "tree": "((10 mod (x_0_2 mul sign(-10))) sub ((2)**2 add n))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 5 - 9 - 1 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul sub n sqr mod INT- 3 sign mod relu idiv mod n n INT+ 3 add INT+ 4 x_0_3 n", "tree": "((n sub ((-3 mod sign((relu(((n mod n) idiv 3)) mod (4 add x_0_3)))))**2) mul n)", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 8 - 4 - 2 + 7 + 219 + 292 + 187 + 224 + 333 + 2474 + 3227 + 2202 + 2599 + 3718 + 2 5159 + 3 2722 + 2 2507 + 2 6514 + 3 7743 + 25 2194 + 32 7867 + 22 5762", "x2": "relu add add INT+ 3 sqr n mul sub mul add INT+ 8 INT- 4 INT- 4 x_0_5 INT- 1 0", "tree": "relu(((3 add (n)**2) add ((((8 add -4) mul -4) sub x_0_5) mul -10)))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 3 + 1 + 2 + 8 - 10 - 6 - 6 - 2 + 8 - 7 + 0 - 7 + 49 - 7 - 7 - 7 - 7 + 49 - 7 - 7 - 7 + 336 - 7 - 7 - 7 - 7 + 336", "x2": "add relu mul abs x_0_1 x_0_9 INT- 7", "tree": "(relu((abs(x_0_1) mul x_0_9)) add -7)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 3 + 10 - 34 + 129 - 519 + 2223 - 1 34 + 4 7521 - 23 5085 + 121 489 - 646 8069 + 3577 1671 - 2 430 3368 + 12 261 3071 - 72 8337 5092 + 453 1285 4369 - 2891 9316 8973 + 1 8909 8534 9427 - 12 6540 2738 8401 + 86 5687 4829 1884", "x2": "add x_0_2 add idiv sqr x_0_1 x_0_2 n", "tree": "(x_0_2 add (((x_0_1)**2 idiv x_0_2) add n))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 9 - 10 + 10 - 8 + 6 - 8 + 7 - 6 + 3 + 40 + 39 + 59 + 41 + 55 + 41 + 56 + 43 + 52 + 89 + 88 + 108 + 90 + 104 + 90 + 105 + 92 + 101", "x2": "add x_0_9 relu relu sqr INT+ 7", "tree": "(x_0_9 add relu(relu((7)**2)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 3 - 2 - 1 - 24 - 34 - 34 + 16 + 167 + 513 + 1163 + 2262 + 3982 + 6536 + 1 162 + 1 5139 + 2 1774 + 3 415 + 4 1442 + 5 5271 + 7 2353 + 9 3175", "x2": "sub sqr sqr add sub INT- 1 0 INT- 5 n sub sqr n idiv x_0_4 INT+ 3", "tree": "(((((-10 sub -5) add n))**2)**2 sub ((n)**2 sub (x_0_4 idiv 3)))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 5 - 3 + 8 + 0 + 2 + 5 - 3 + 2 + 3 + 6 + 6 + 11 + 14 + 12 + 11 + 17 + 17 + 15 + 16 + 12 + 10 + 13 + 15 + 10 + 11", "x2": "sub n relu relu abs sub sub x_0_8 sign n sign INT+ 9", "tree": "(n sub relu(relu(abs(((x_0_8 sub sign(n)) sub sign(9))))))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 14 - 28 - 56 - 112 - 224 - 448 - 896 - 1792 - 3584 - 7168 - 1 4336 - 2 8672 - 5 7344 - 11 4688 - 22 9376 - 45 8752 - 91 7504 - 183 5008", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 0 - 56 - 448 - 3192 - 2 2400 - 15 6856 - 109 8048 - 768 6392 - 5380 4800 - 3 7663 3656 - 26 3643 5648 - 184 5504 9592 - 1291 8534 7200 - 9042 9743 456 - 6 3300 8201 3248 - 44 3105 7409 2792 - 310 1740 1864 9600 - 2171 2181 3054 7256", "x2": "mul INT- 7 sub INT+ 8 x_0_1", "tree": "(-7 mul (8 sub x_0_1))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 704 + 8 4708 - 1355 2864 + 27 1057 3460 - 6505 3762 9440 + 182 1505 3624 4516 - 5 8288 1715 9824 3392 + 2098 3741 7753 6762 3316 - 83 9349 6710 1470 4932 3680 + 3 6931 3855 2464 7017 242 2500 - 1772 7065 518 3056 8171 6279 6064 + 92 1807 3826 9518 9544 9246 5395 7908 - 5 1621 2134 3093 614 5157 8062 1642 3104 + 3097 2728 585 5836 8709 4683 7298 5386 8580 - 198 2254 5957 4773 5597 4059 7587 1064 7588 4160 + 13 4793 3125 1084 6020 6236 635 9232 4036 123 6756 - 9705 1185 78 913 4848 9965 7864 7330 5928 9045 5392 + 737 5890 605 9349 4248 5237 3997 7197 1250 5967 4610 7876", "x2": "mul mul sub add mul INT+ 1 0 x_0_1 mul abs abs n INT- 7 INT- 2 n INT- 4", "tree": "(((((10 mul x_0_1) add (abs(abs(n)) mul -7)) sub -2) mul n) mul -4)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 3 + 8 - 7 + 4 + 7 + 15 + 1 + 13 + 17 + 26 + 13 + 26 + 31 + 41 + 29 + 43 + 49 + 60 + 49 + 64 + 71 + 83 + 73", "x2": "add add add INT- 1 sqr sign x_0_6 x_0_4 n", "tree": "(((-1 add (sign(x_0_6))**2) add x_0_4) add n)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 + 7 - 4 + 8 - 3 + 9 - 2 + 10 - 1 + 11 + 0 + 12 + 1 + 13 + 2 + 14 + 3 + 15 + 4", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 3 + 7 - 9 - 1 + 9 + 16 - 15 + 72 - 81 - 2 + 117 + 217 - 201 + 1089 - 1287 - 25 + 2115 + 4132 - 4011 + 2 2878 - 2 8305 - 566 + 5 769", "x2": "sub idiv mul n idiv mul x_0_6 n n sign sqr relu idiv n abs n INT- 9", "tree": "(((n mul ((x_0_6 mul n) idiv n)) idiv sign((relu((n idiv abs(n))))**2)) sub -9)", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 6 + 6 + 7 + 5 - 10 - 7 - 2 - 1 - 30 + 30 - 35 + 25 + 50 + 35 + 10 + 5 + 150 - 150 - 175 + 125 - 250 + 175 - 50 + 25 - 750 - 750", "x2": "mul sign idiv INT+ 4 n mul mul INT- 5 x_0_8 sign x_0_1", "tree": "(sign((4 idiv n)) mul ((-5 mul x_0_8) mul sign(x_0_1)))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 9 - 10 - 13 - 18 - 25 - 34 - 45 - 58 - 73 - 90 - 109 - 130 - 153 - 178 - 205 - 234 - 265 - 298", "x2": "sub relu INT- 1 0 sub sqr mod INT- 1 n sub INT- 8 sub INT+ 2 INT+ 1", "tree": "(relu(-10) sub (((-1 mod n))**2 sub (-8 sub (2 sub 1))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 10 + 6 + 3 - 10 + 9 + 10 - 6 - 3 + 10 - 9 - 10 + 6 + 3 - 10 + 9 + 10 - 6 - 3 + 10 - 9 - 10 + 6 + 3", "x2": "mul x_0_5 idiv idiv INT+ 5 sub INT- 4 abs x_0_2 n", "tree": "(x_0_5 mul ((5 idiv (-4 sub abs(x_0_2))) idiv n))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 4 + 1 + 10 + 25 + 48 + 81 + 126 + 185 + 260 + 353 + 466 + 601 + 760 + 945 + 1158 + 1401 + 1676 + 1985 + 2330", "x2": "add sub sqr n add n INT- 3 sub add x_0_1 x_0_1 x_0_1", "tree": "(((n)**2 sub (n add -3)) add ((x_0_1 add x_0_1) sub x_0_1))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 1 - 10 + 10 + 6 - 6 - 8 + 3 - 1 + 10 - 100 - 13 + 14 + 28 - 33 - 29 + 85 - 289 + 32 - 4 - 31 + 31 + 17 - 17 - 20 + 7 - 3 + 22", "x2": "idiv mul n n x_0_9", "tree": "((n mul n) idiv x_0_9)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 10 + 1 - 10 - 4 - 18 - 65 - 103 - 168 - 222 - 243 - 319 - 502 - 768 - 1049 - 1453 - 2192 - 3430 - 5195 - 7731 - 1 1706 - 1 8116 - 2 8013", "x2": "sub x_0_1 abs add add sqr n add sqr INT+ 3 x_0_4 x_0_4", "tree": "(x_0_1 sub abs((((n)**2 add ((3)**2 add x_0_4)) add x_0_4)))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 9 + 84 + 459 + 1741 + 5190 + 1 3079 + 2 9135 + 5 9058 + 11 1121 + 19 6851 + 33 1788 + 53 6325 + 83 6629 + 126 5640 + 186 4151 + 268 1969 + 377 9154", "x2": "add idiv mul sqr sqr n sqr n sqr INT- 3 n", "tree": "(((((n)**2)**2 mul (n)**2) idiv (-3)**2) add n)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 9 + 16 + 7 + 23 + 30 + 53 + 83 + 136 + 219 + 355 + 574 + 929 + 1503 + 2432 + 3935 + 6367 + 1 302 + 1 6669 + 2 6971", "x2": "add x_0_2 add abs x_0_1 mul INT+ 1 relu sign INT- 2", "tree": "(x_0_2 add (abs(x_0_1) add (1 mul relu(sign(-2)))))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 4 - 5 + 5 + 8 + 3 + 1 + 1 + 1 + 2 + 1 + 5 + 2 + 2 + 2 + 7 + 3 + 9 + 10 + 11 + 12 + 7 + 21 + 7", "x2": "idiv sqr n sqr add INT+ 1 add sub sub idiv INT- 9 x_0_6 n x_0_6 n", "tree": "((n)**2 idiv ((1 add ((((-9 idiv x_0_6) sub n) sub x_0_6) add n)))**2)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 3 + 0 + 1 - 7 - 1 + 10 + 0 + 1 - 10 4973 - 9997 + 3 - 132 7101 - 11 4241 - 311 1693 - 5 622 + 3 - 920 3630 5680 193 - 10 4934 137 9901 - 52 1281 - 28 1791 9549 4463 9997 - 2538 2171 4924 1281 - 226 8216 4103 3953 813 - 717 1452 870 7486 - 132 7101 - 3308 8599 8563 5145 277 5796 2647 156 2497 - 5031 8300 2661 7576 9861 6495 2031 7501", "x2": "add mod n n sub INT+ 3 sqr mul sub n mul n x_0_8 n", "tree": "((n mod n) add (3 sub (((n sub (n mul x_0_8)) mul n))**2))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 + 4 - 2 + 3 + 8 - 8 + 4 + 9 + 4 + 2 + 3 + 8 + 8 + 4 + 9 + 4 + 2 + 3 + 8 + 8 + 4 + 9 + 4 + 2 + 3", "x2": "mul abs x_0_7 sign n", "tree": "(abs(x_0_7) mul sign(n))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 5 - 4 + 16 + 5 + 6 + 119 + 48 + 63 + 1200 + 539 + 768 + 1 5613 + 7560 + 1 1535 + 24 9824 + 12 8537 + 20 7648 + 474 6675 + 257 760 + 436 629", "x2": "mul n add abs abs relu idiv sign n INT+ 1 relu x_0_3", "tree": "(n mul (abs(abs(relu((sign(n) idiv 1)))) add relu(x_0_3)))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 + 6 - 7 - 8 - 10 - 1 - 4 - 8 - 10 - 78 - 12 - 82 - 18 - 83 - 64 - 85 - 96 - 87 - 106 - 93 - 113 - 101 - 119", "x2": "sub idiv mul abs INT- 1 mul INT- 7 x_0_5 x_0_4 abs abs x_0_2", "tree": "(((abs(-1) mul (-7 mul x_0_5)) idiv x_0_4) sub abs(abs(x_0_2)))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 2 + 2 + 8 + 8 + 5 - 9 + 2 + 9 - 1 - 7 - 7 - 4 - 4 - 1 - 8 - 15 - 10 - 11 - 15 - 16 - 20 - 14 - 8 - 14 - 14 - 11", "x2": "sub sign relu x_0_9 relu mod x_0_7 n", "tree": "(sign(relu(x_0_9)) sub relu((x_0_7 mod n)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 1 + 0 + 6 - 4 + 9 + 4 + 16 + 3 + 15 + 12 + 22 + 10 + 20 + 21 + 27 + 17 + 30 + 25 + 37 + 24 + 36 + 33", "x2": "sub x_0_4 sub INT- 4 mod x_0_4 add sub n n INT+ 7", "tree": "(x_0_4 sub (-4 sub (x_0_4 mod ((n sub n) add 7))))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 7 + 4 + 8 - 8 + 9 + 1 + 12 + 16 + 0 + 17 + 9 + 20 + 24 + 8 + 25 + 17 + 28 + 32 + 16 + 33 + 25 + 36", "x2": "add INT+ 8 x_0_5", "tree": "(8 add x_0_5)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 6 + 2 + 0 + 4 - 3 - 8 + 12 + 9 + 6 + 5 + 10 + 4 + 0 + 21 + 19 + 17 + 17 + 23 + 18 + 15 + 37 + 36 + 35 + 36", "x2": "add x_0_7 add INT- 6 n", "tree": "(x_0_7 add (-6 add n))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 8 + 36 + 117 + 314 + 753 + 1686 + 3617 + 7554 + 1 5513 + 3 1526 + 6 3657 + 12 8034 + 25 6913 + 51 4806 + 103 737 + 206 2754 + 412 6953 + 825 5526 + 1651 2857", "x2": "add x_0_1 relu add relu mul INT+ 5 sqr n x_0_1", "tree": "(x_0_1 add relu((relu((5 mul (n)**2)) add x_0_1)))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 4 - 11 - 20 - 31 - 44 - 59 - 76 - 95 - 116 - 139 - 164 - 191 - 220 - 251 - 284 - 319 - 356 - 395", "x2": "sub mod sign n idiv abs add sqr n n n abs mul sub n INT- 4 n", "tree": "((sign(n) mod (abs(((n)**2 add n)) idiv n)) sub abs(((n sub -4) mul n)))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 10 - 8 + 5 - 1 + 5 + 3 + 10 - 5 - 6 - 36 - 51 - 103 - 126 - 186 - 188 - 213 - 129 - 46 + 205 + 456 + 899 + 1257 + 1723", "x2": "sub sub x_0_1 x_0_5 add sub n x_0_2 x_0_3", "tree": "((x_0_1 sub x_0_5) sub ((n sub x_0_2) add x_0_3))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 6 - 4 + 10 - 4 + 2 + 5 + 0 + 7 + 10 + 8 + 14 + 8 + 6 + 9 + 4 + 11 + 14 + 12 + 18 + 12 + 10 + 13", "x2": "relu sub relu n add INT- 3 relu abs x_0_4", "tree": "relu((relu(n) sub (-3 add relu(abs(x_0_4)))))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 6 + 18 + 28 - 85 - 162 + 602 + 1304 - 5409 - 1 3030 + 5 9510 + 15 6372 - 77 3617 - 218 9194 + 1160 4270 + 3502 7120 - 1 9727 2573 - 6 3048 8142 + 37 4817 8906 + 126 976 2860", "x2": "sub n mul n x_0_2", "tree": "(n sub (n mul x_0_2))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 1 + 8 + 0 + 9 - 10 + 8 - 2 + 7 + 5329 + 6724 + 5329 + 6561 + 5184 + 8281 + 5329 + 6889 + 5476 + 2754 1504 + 4412 9449 + 2754 1504 + 4199 400 + 2604 609 + 6724 0 + 2754 1504 + 4634 8864 + 2910 6025", "x2": "sqr sub x_0_9 relu sqr INT+ 9", "tree": "((x_0_9 sub relu((9)**2)))**2", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 7 + 9 + 7 + 10 + 9 + 10 - 8 + 6 + 7 + 9 + 7 + 10 + 9 + 10 + 8 + 6 + 7 + 9 + 7 + 10 + 9 + 10 + 8 + 6 + 7", "x2": "abs mul sign INT+ 7 abs x_0_8", "tree": "abs((sign(7) mul abs(x_0_8)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 6 - 8 + 0 - 8 - 3 - 4 + 9 + 14 + 17 + 10 + 19 + 15 + 17 + 5 + 1 + 1 + 7 + 1 + 4 + 3 + 16 + 21 + 22 + 17 + 24", "x2": "abs sub x_0_7 n", "tree": "abs((x_0_7 sub n))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 9 - 5 - 8 + 7 - 1 - 9 - 1 - 11 - 4 - 1 - 14 - 1 - 1 - 17 - 1 - 1 - 20 - 1 - 1 - 23 - 1 - 1", "x2": "mod sign mul sign x_0_4 add sub x_0_3 INT+ 2 INT+ 9 add mod INT+ 1 0 INT- 7 idiv n x_0_1", "tree": "(sign((sign(x_0_4) mul ((x_0_3 sub 2) add 9))) mod ((10 mod -7) add (n idiv x_0_1)))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 9 + 1 + 9 + 9 + 9 + 1 + 9 + 9 + 9 + 1 + 9 + 9 + 9 + 1 + 9 + 9 + 9 + 1 + 9 + 9 + 9", "x2": "mul x_0_4 sqr sign relu relu n", "tree": "(x_0_4 mul (sign(relu(relu(n))))**2)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 5 + 0 - 4 + 6 - 10 - 9 + 10 + 10 - 20 - 22 + 0 - 26 - 28 - 120 - 128 - 136 - 144 - 608 - 1000 + 0 - 1584 - 1656 - 2 7648 - 3 3800 - 4 768 - 4 5414", "x2": "mul mul n sqr idiv x_0_9 abs INT- 5 INT- 2", "tree": "((n mul ((x_0_9 idiv abs(-5)))**2) mul -2)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 10 + 0 + 10 + 9 - 4 - 3 + 12 + 2 + 12 + 11 - 2 - 1 + 14 + 4 + 14 + 13 + 0 + 1 + 16 + 6 + 16 + 15 + 2 + 3", "x2": "sub x_0_6 INT- 2", "tree": "(x_0_6 sub -2)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 4 + 4 + 4 + 4 + 4 + 4 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 2 + 2 + 2 + 2", "x2": "add add relu INT+ 7 idiv n INT- 7 INT- 2", "tree": "((relu(7) add (n idiv -7)) add -2)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 7 + 11 + 14 + 18 + 23 + 29 + 36 + 44 + 53 + 63 + 74 + 86 + 99 + 113 + 128 + 144 + 161 + 179 + 198", "x2": "add mod x_0_1 sqr sub idiv sqr add mod INT- 6 INT- 1 0 INT+ 5 n sqr n n", "tree": "((x_0_1 mod ((((((-6 mod -10) add 5))**2 idiv n) sub (n)**2))**2) add n)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 9 - 6 - 81 - 96 - 2916 - 6144 - 29 1600 - 88 4736 - 6561 0 - 2 8665 4464 - 289 3401 0 - 1651 1297 1264 - 22 6842 6384 0 - 169 756 8257 4336 - 2 9398 8059 3664 0 - 27 521 921 1893 7600 - 5953 2582 216 9600 0 - 6 7630 2730 2973 4400 0 - 1800 8606 615 6304 0 0 - 2 4346 8982 9070 4384 0 0", "x2": "mul x_0_2 sqr idiv mul n add n INT+ 4 INT- 8", "tree": "(x_0_2 mul (((n mul (n add 4)) idiv -8))**2)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 + 3 + 3 + 10 + 13 + 13 + 14 + 2 + 3 + 1 + 2 + 12 + 19 + 31 + 42 + 34 + 13 + 5 + 20 + 8 + 11 + 23", "x2": "abs abs abs sub add sub n mod x_0_4 x_0_1 x_0_1 x_0_4", "tree": "abs(abs(abs((((n sub (x_0_4 mod x_0_1)) add x_0_1) sub x_0_4))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 8 + 3 + 4 + 1 + 5 + 4 + 6 + 9 + 11 + 9 + 13 + 13 + 8 + 10 + 12 + 3 + 5 + 12 + 1 + 1 + 17 + 4", "x2": "sub sub x_0_3 INT- 8 abs x_0_5", "tree": "((x_0_3 sub -8) sub abs(x_0_5))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 6 + 5 - 10 - 6 + 78 + 33 + 22 + 97 + 33 + 6081 + 1086 + 481 + 9406 + 1086 + 3697 8558 + 117 9393 + 23 1358 + 8847 2833 + 117 9393 + 1367 4137 5175 9361 + 1 3909 6784 8446 + 535 2652 4161", "x2": "mod INT- 3 sqr x_0_5", "tree": "(-3 mod (x_0_5)**2)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 3 - 9 - 2 + 3 - 2 - 8 + 1 + 5 + 30 + 185 + 9255 + 2 7770 + 219 3835 + 1 530 4085 + 11 5834 4940 + 254 8358 8685 + 3058 306 4225 + 13 7611 3789 130 + 220 1782 624 2085 + 3082 4948 8738 9195 + 11 969 8159 4601 1025 + 55 4849 797 3005 5130 + 3495 5492 229 9347 3195 + 9 4379 8284 6208 2377 6270 + 434 1472 1092 5578 9370 8425", "x2": "relu add abs mul mod idiv mul x_0_1 abs x_0_7 n sqr INT+ 9 x_0_1 INT+ 5", "tree": "relu((abs(((((x_0_1 mul abs(x_0_7)) idiv n) mod (9)**2) mul x_0_1)) add 5))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 25 + 400 + 2025 + 6400 + 1 5625 + 3 2400 + 6 25 + 10 2400 + 16 4025 + 25 0 + 36 6025 + 51 8400 + 71 4025 + 96 400 + 126 5625 + 163 8400 + 208 8025 + 262 4400", "x2": "sqr mul INT+ 5 abs sqr n", "tree": "((5 mul abs((n)**2)))**2", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 3 + 0 - 8 - 3 - 3 + 1 + 7 + 5 - 2 - 2 - 2 - 74 + 29 + 8 + 30 + 50 + 44 - 16 - 150 - 15 + 23 + 41 + 57 + 1969 - 742 - 341 - 704 - 1076 - 882", "x2": "sub x_0_7 sub mul relu add mod sqr sub INT- 7 n n INT+ 2 x_0_12 sign add x_0_6 n", "tree": "(x_0_7 sub ((relu(((((-7 sub n))**2 mod n) add 2)) mul x_0_12) sub sign((x_0_6 add n))))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 6 + 6 + 2 + 25 + 33 + 47 + 36 + 42 + 44 + 73 + 87 + 107 + 102 + 114 + 122 + 157 + 177 + 203 + 204 + 222 + 236", "x2": "sub sub mul n n sub add x_0_3 n INT+ 9 INT- 1 0", "tree": "(((n mul n) sub ((x_0_3 add n) sub 9)) sub -10)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 - 1 + 4 - 4 - 4 - 1 + 4 - 4 - 4 - 1 + 4 - 4 - 4 - 1 + 4 - 4 - 4 - 1 + 4 - 4 - 4 - 1", "x2": "mul sign idiv n INT+ 2 x_0_4", "tree": "(sign((n idiv 2)) mul x_0_4)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 7 - 5 + 0 + 4 + 2 + 5 + 12 + 17 + 25 + 40 + 60 + 88 + 131 + 194 + 285 + 419 + 616 + 904 + 1326 + 1945", "x2": "relu add x_0_1 mul sign x_0_2 add INT+ 3 x_0_3", "tree": "relu((x_0_1 add (sign(x_0_2) mul (3 add x_0_3))))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 + 2 - 7 + 3 + 3 - 5 - 5 + 4 - 6 - 6 + 2 + 2 - 7 + 3 + 3 - 5 - 5 + 4 - 6 - 6 + 2 + 2", "x2": "sub idiv INT- 1 0 abs INT+ 4 x_0_5", "tree": "((-10 idiv abs(4)) sub x_0_5)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 5 - 9 + 3 - 10 - 1 - 2 - 4 + 2 + 5 + 25 + 71 - 26 + 76 + 10 + 21 + 57 + 55 - 66 - 124 - 558 + 229 - 551 - 25 - 234 - 580 - 998 + 757", "x2": "add sub x_0_6 x_0_9 mul sub idiv sign n abs x_0_5 INT+ 7 x_0_9", "tree": "((x_0_6 sub x_0_9) add (((sign(n) idiv abs(x_0_5)) sub 7) mul x_0_9))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 2 - 10 - 2 + 9 + 5 - 8 + 12 + 12 + 0 + 8 + 19 + 15 + 2 + 22 + 22 + 10 + 18 + 29 + 25 + 12 + 32 + 32 + 20 + 28", "x2": "add x_0_7 INT+ 1 0", "tree": "(x_0_7 add 10)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 6 - 2 + 6 + 7 - 6 + 42 + 21 - 40 - 54 + 70 - 451 - 240 + 533 + 770 - 1035 + 7232 + 4097 - 9576 - 1 4611 + 2 720 - 15 1851 - 9 112 + 22 271", "x2": "mul add idiv x_0_5 INT- 1 sign mul idiv INT- 2 x_0_2 mod sub n n add n n n", "tree": "(((x_0_5 idiv -1) add sign(((-2 idiv x_0_2) mul ((n sub n) mod (n add n))))) mul n)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 8 + 7 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3", "x2": "mod abs abs x_0_3 sub sign INT- 7 add INT- 6 sign n", "tree": "(abs(abs(x_0_3)) mod (sign(-7) sub (-6 add sign(n))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 5 + 5 + 10 - 5 + 6 - 7 + 8 - 9 + 10 - 11 + 12 - 13 + 14 - 15 + 16 - 17 + 18 - 19 + 20 - 21 + 22", "x2": "mul n sign mul add n idiv x_0_3 n idiv mod x_0_4 x_0_3 INT- 5", "tree": "(n mul sign(((n add (x_0_3 idiv n)) mul ((x_0_4 mod x_0_3) idiv -5))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 1 - 1 + 5 - 3 + 5 + 4 - 1 + 0 + 37 + 22 + 47 + 40 + 5 - 8 + 547 + 344 + 791 + 712 + 87 + 152 + 1 1479 + 7560 + 1 8185", "x2": "add relu mul mod mod sign INT- 4 n n abs abs x_0_6 INT- 8", "tree": "(relu((((sign(-4) mod n) mod n) mul abs(abs(x_0_6)))) add -8)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 2 - 5 + 1 - 1 + 6 + 5 + 13 + 13 + 22 + 23 + 33 + 35 + 46 + 49 + 61 + 65 + 78 + 83 + 97 + 103", "x2": "add x_0_2 mul n sign INT+ 2", "tree": "(x_0_2 add (n mul sign(2)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 7 + 3 - 5 + 2 - 8 + 1 + 1 - 10 + 401 + 1025 + 626 + 728 + 1601 + 13 6160 + 98 2082 + 34 8101 + 47 6099 + 243 6722 + 185 2810 9925 + 9643 9863 3445 + 1211 4228 3026 + 2266 2455 4602 + 5 9373 7043 5585 + 3 4329 855 4659 6007 6130 + 9300 6472 4086 4284 2015 8882 + 146 7545 2723 1835 5202 901", "x2": "add sign x_0_9 sqr sub sub x_0_5 add INT+ 2 relu n n", "tree": "(sign(x_0_9) add (((x_0_5 sub (2 add relu(n))) sub n))**2)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 10 - 5 - 2 + 16 - 108 + 759 - 5307 + 3 7155 - 26 85 + 182 603 - 1274 4216 + 8920 9521 - 6 2446 6646 + 43 7126 6523 - 305 9886 5661 + 2141 9205 9633 - 1 4993 4441 7431 + 10 4954 1092 2027 - 73 4678 7645 4182 + 514 2751 3517 9288 - 3599 9259 4625 5011", "x2": "add mul INT- 7 x_0_1 mod add relu INT+ 8 add n x_0_4 n", "tree": "((-7 mul x_0_1) add ((relu(8) add (n add x_0_4)) mod n))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 5 - 1 - 6 - 8 + 9 + 7 + 514 + 724 + 999 + 1325 + 1720 + 2206 + 2751 + 3889 + 4820 + 5912 + 7157 + 8579 + 1 206 + 1 2012 + 1 4537 + 1 6987 + 1 9736 + 2 2782", "x2": "add mul relu n sqr n x_0_7", "tree": "((relu(n) mul (n)**2) add x_0_7)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 7 + 10 - 6 - 7 - 7 + 10 - 6 - 7 - 7 + 10 - 6 - 7 - 7 + 10 - 6 - 7 - 7 + 10 - 6 - 7 - 7 + 10", "x2": "add mod n abs n x_0_4", "tree": "((n mod abs(n)) add x_0_4)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 4 - 5 - 9 + 8 + 6 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1", "x2": "sign mod INT- 1 0 mul mod abs x_0_3 mul INT- 1 0 x_0_2 idiv sign mul x_0_6 INT- 6 INT- 2", "tree": "sign((-10 mod ((abs(x_0_3) mod (-10 mul x_0_2)) mul (sign((x_0_6 mul -6)) idiv -2))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 1 - 9 + 2 + 7 + 7 + 1 + 22 + 22 + 14 + 23 + 23 + 23 + 63 + 63 + 63 + 63 + 63 + 63 + 119 + 119 + 119", "x2": "abs mod INT+ 9 add relu idiv n x_0_3 mul INT- 8 sqr idiv n INT- 6", "tree": "abs((9 mod (relu((n idiv x_0_3)) add (-8 mul ((n idiv -6))**2))))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 9 + 1 + 10 + 4 - 14 - 16 - 15 - 15 - 12 - 18 - 20 - 19 - 19 - 21 - 22 - 24 - 23 - 28 - 25 - 26 - 28 - 32", "x2": "sub x_0_5 sqr add INT+ 4 idiv x_0_5 relu n", "tree": "(x_0_5 sub ((4 add (x_0_5 idiv relu(n))))**2)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 5 - 5 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv sub x_0_3 x_0_1 add INT+ 7 add x_0_3 n", "tree": "((x_0_3 sub x_0_1) idiv (7 add (x_0_3 add n)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 7 + 9 - 8 - 6 + 0 + 6 + 8 - 7 + 6 + 88 - 24 + 26 - 98 + 180 + 1536 - 442 + 540 - 190 + 3000 + 3 6120 - 1 1880 + 1 3915 + 3 2304 + 5 5400 + 215 1240 - 32 5890 - 132 2636", "x2": "mul n add x_0_8 sub idiv mul idiv relu x_0_10 INT+ 1 x_0_6 sqr INT- 1 0 mul idiv INT- 2 n x_0_5", "tree": "(n mul (x_0_8 add ((((relu(x_0_10) idiv 1) mul x_0_6) idiv (-10)**2) sub ((-2 idiv n) mul x_0_5))))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 3 + 5 + 9 - 5 - 7 - 1 + 6 - 9 + 1 + 9 + 4 + 1 + 9 + 9 + 256 + 4 + 4 + 361 + 4 + 25 + 484 + 4 + 4 + 0 + 36 + 36", "x2": "relu sqr idiv n x_0_9", "tree": "relu(((n idiv x_0_9))**2)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 6 - 4 + 7 - 6 + 3 + 1 - 9 - 62 - 64 - 58 - 71 - 67 - 125 - 125 - 110 - 69 - 64 - 125 - 112 - 102 - 5 - 1 - 74 - 103 - 99", "x2": "idiv sub sub INT- 1 relu mul n sub sqr INT- 8 sub x_0_5 x_0_8 x_0_5 n", "tree": "(((-1 sub relu((n mul ((-8)**2 sub (x_0_5 sub x_0_8))))) sub x_0_5) idiv n)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 4 - 9 - 9 - 7 - 4 - 9 + 3 - 7 - 18 - 19 - 16 - 23 - 18 - 6 + 16 - 27 - 28 - 25 - 32 - 46 - 15 + 7 + 36 - 37 - 34 - 41", "x2": "idiv sub abs add mod idiv INT- 4 x_0_5 n INT+ 9 x_0_7 sign x_0_8", "tree": "((abs((((-4 idiv x_0_5) mod n) add 9)) sub x_0_7) idiv sign(x_0_8))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 8 - 6 - 3 - 1 - 6 - 3 - 1 - 6 - 3 - 1 - 6 - 3 - 1 - 6 - 3 - 1 - 6 - 3 - 1 - 6 - 3 - 1", "x2": "sub x_0_3 mod relu sub x_0_5 sub INT+ 5 sqr INT- 3 sign x_0_4", "tree": "(x_0_3 sub (relu((x_0_5 sub (5 sub (-3)**2))) mod sign(x_0_4)))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 3 - 10 - 10 - 40 - 600 - 3600 - 12 6000 - 604 8000 - 5443 2000 - 5 4432 0 - 59 8752 0 - 5748 192 0 - 7 4724 2496 0 - 836 9115 9552 0 - 1 2553 6739 3280 0 - 20 858 7829 2480 0 - 341 4599 3097 2160 0 - 7 9901 6238 4748 5440 0 - 151 8130 8531 222 3360 0 - 1 8217 5702 3722 6680 3200 0 - 38 2568 9749 8176 286 7200 0", "x2": "mul mul mod sub n x_0_3 add n idiv sign sign INT+ 8 INT- 5 x_0_1 n", "tree": "((((n sub x_0_3) mod (n add (sign(sign(8)) idiv -5))) mul x_0_1) mul n)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 6 - 1 - 1 + 9 + 10 + 5 - 8 + 0 + 4 - 17 + 68 - 267 + 1074 - 4293 + 1 7176 - 6 8699 + 27 4806 - 109 9213 + 439 6864 - 1758 7443 + 7034 9782 - 2 8139 9113 + 11 2559 6464 - 45 238 5839 + 180 954 3370 - 720 3817 3461 + 2881 5269 3860", "x2": "add n sub INT- 8 add mul x_0_1 sqr INT- 2 relu mod add INT+ 5 sign INT- 1 0 x_0_10", "tree": "(n add (-8 sub ((x_0_1 mul (-2)**2) add relu(((5 add sign(-10)) mod x_0_10)))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 9 - 8 + 5 + 0 - 2 + 0 + 0 - 2 + 0 + 0 - 2 + 0 + 0 - 2 + 0 + 0 - 2 + 0 + 0 - 2 + 0", "x2": "mul idiv add x_0_3 x_0_1 sqr sqr INT- 2 mod n INT+ 3", "tree": "(((x_0_3 add x_0_1) idiv ((-2)**2)**2) mul (n mod 3))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 5 - 5 + 5 - 5 - 1 + 8 + 8 + 8 + 8 + 4 + 11 + 11 + 11 + 11 + 7 + 14 + 14 + 14 + 14 + 10 + 17 + 17 + 17", "x2": "relu add abs x_0_5 INT+ 3", "tree": "relu((abs(x_0_5) add 3))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 8 + 2 - 6 + 10 + 6 + 5 - 5 + 4 + 6 + 9 - 9 + 2 + 7 + 15 + 8 + 1 + 10 + 3 + 3 + 4 + 6 + 6 + 2 + 1 + 9 + 6 + 0 + 1 + 3", "x2": "abs sub x_0_3 abs x_0_11", "tree": "abs((x_0_3 sub abs(x_0_11)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 3 + 4 + 2 + 3 + 1 + 2 + 0 + 1 + 9 + 0 + 8 + 9 + 7 + 8 + 6 + 7 + 5 + 6", "x2": "abs mod sub n sub relu INT- 2 x_0_1 INT- 1 0", "tree": "abs(((n sub (relu(-2) sub x_0_1)) mod -10))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 0 + 1 - 5 + 4 - 3 + 5 + 9 + 1 + 800 + 0 + 144 + 0 + 784 + 0 + 1280 + 2601 + 324 + 28 8800 + 0 + 6 3504 + 0 + 41 4736 + 0 + 80 0 + 175 8276 + 23 6196", "x2": "relu mul x_0_9 relu sqr n", "tree": "relu((x_0_9 mul relu((n)**2)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 5 + 5 + 8 + 0 - 112 - 118 - 107 - 114 - 236 - 356 - 353 - 351 - 482 - 726 - 845 - 842 - 973 - 1350 - 1715 - 1833 - 1963 - 2473", "x2": "add sub mul n INT- 3 add sqr INT+ 1 0 sub INT+ 4 x_0_5 add n sub x_0_4 sub n n", "tree": "(((n mul -3) sub ((10)**2 add (4 sub x_0_5))) add (n add (x_0_4 sub (n sub n))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 30 + 180 + 1080 + 6480 + 3 8880 + 23 3280 + 139 9680 + 839 8080 + 5038 8480 + 3 233 880 + 18 1398 5280 + 108 8391 1680 + 653 347 80 + 3918 2082 480 + 2 3509 2492 2880 + 14 1055 4953 7280 + 84 6332 9722 3680 + 507 7997 8334 2080", "x2": "mul mod INT+ 6 mul x_0_1 x_0_1 x_0_1", "tree": "((6 mod (x_0_1 mul x_0_1)) mul x_0_1)", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr abs relu n", "tree": "(abs(relu(n)))**2", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2", "x2": "idiv n sub INT+ 1 0 x_0_1", "tree": "(n idiv (10 sub x_0_1))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 3 - 4 + 9 - 9 - 10 + 2 + 0 + 9 + 16 + 81 + 81 + 100 + 4 + 0 + 81 + 256 + 6561 + 6561 + 1 0 + 16 + 0 + 6561 + 6 5536 + 4304 6721 + 4304 6721", "x2": "sqr abs x_0_7", "tree": "(abs(x_0_7))**2", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4", "x2": "idiv mod n sub sub sqr mul sqr n INT- 2 x_0_1 sub relu x_0_1 idiv n n INT- 5", "tree": "((n mod (((((n)**2 mul -2))**2 sub x_0_1) sub (relu(x_0_1) sub (n idiv n)))) idiv -5)", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 0 + 8 + 3 + 9 - 10 - 4 - 9 - 10 - 2 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1", "x2": "sign idiv n x_0_10", "tree": "sign((n idiv x_0_10))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 7 + 5 - 6 - 6 + 4 + 3 + 5 - 424 + 540 - 440 - 649 + 684 + 611 + 7112 - 10 3275 + 14 5536 - 11 5838 - 22 2264 + 23 5676 + 10 2560 + 530 5608 - 5318 6408 + 7965 3347 - 6138 7776 - 1 4480 6275", "x2": "mul n sub add n mul n x_0_7 x_0_6", "tree": "(n mul ((n add (n mul x_0_7)) sub x_0_6))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 2 - 5 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784", "x2": "sub idiv sign mod INT+ 8 sub sqr n INT+ 7 n sqr n", "tree": "((sign((8 mod ((n)**2 sub 7))) idiv n) sub (n)**2)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 5 + 4 - 3 + 8 - 5 + 2 - 4 + 1 - 8 + 2 - 2 + 2 - 1 + 4 - 2 + 1 - 2 + 0 - 4 + 1 - 1 + 1 + 0 + 4 - 1 + 0 - 1 + 0 - 4 + 0 + 0 + 1 + 0", "x2": "idiv x_0_5 add INT- 1 idiv x_0_1 n", "tree": "(x_0_5 idiv (-1 add (x_0_1 idiv n)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 - 1 + 0 + 0 + 3 + 15 + 24 + 48 + 80 + 120 + 168 + 255 + 323 + 440 + 624 + 783 + 1023 + 1295 + 1599 + 1935 + 2400 + 2808 + 3363 + 4095 + 4760 + 5624 + 6560 + 7568", "x2": "sub sqr idiv sqr n INT+ 9 INT+ 1", "tree": "((((n)**2 idiv 9))**2 sub 1)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 9 + 2 + 6 + 5 - 54 + 14 + 48 + 45 - 540 + 154 + 576 + 585 - 7560 + 2310 + 9216 + 9945 - 13 6080 + 4 3890 + 18 4320 + 20 8845 - 299 3760 + 100 9470 + 442 3680 + 522 1125 - 7783 7760 + 2725 5690 + 1 2386 3040 + 1 5141 2625 - 23 3513 2800 + 8 4492 6390 + 39 6361 7280", "x2": "mul x_0_4 n", "tree": "(x_0_4 mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 10 + 10 + 3 - 4 - 5 + 3 + 4 - 8 + 81 + 1 - 6 + 156 + 182 - 6 - 5 + 272 + 72 - 8 + 385 + 147 + 173 + 514 + 562 + 263 + 63 + 712 + 376 + 138 + 164 + 505 + 553 + 254 + 54 + 703 + 367", "x2": "add INT- 9 mod x_0_8 sqr n", "tree": "(-9 add (x_0_8 mod (n)**2))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 5 + 8 + 11 + 12 + 14 + 15 + 17 + 18 + 20 + 22 + 23 + 25 + 26 + 28 + 30 + 31 + 33 + 34 + 36 + 38 + 39 + 41 + 42 + 44 + 46 + 47 + 49 + 51 + 52", "x2": "sub n sub INT- 7 idiv sqr n x_0_1", "tree": "(n sub (-7 sub ((n)**2 idiv x_0_1)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 6 - 2 + 7 + 10 + 3 - 8 + 8 - 10 - 9 + 10 - 7 + 91 + 84 + 0 + 112 + 170 + 54 + 0 + 160 + 0 + 0 + 230 + 0 + 2275 + 2184 + 0 + 3136 + 4930 + 1620 + 0 + 5120 + 0 + 0 + 8050 + 0 + 8 4175 + 8 2992 + 0 + 12 5440", "x2": "relu mul x_0_12 n", "tree": "relu((x_0_12 mul n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "12"}
{"x1": "- 3 + 7 + 10 + 10 + 1 + 9 - 2 + 8 + 11 + 11 + 2 + 10 - 1 + 9 + 12 + 12 + 3 + 11 + 0 + 10 + 13 + 13 + 4 + 12 + 1 + 11 + 14 + 14 + 5 + 13 + 2 + 12 + 15 + 15", "x2": "add sign idiv relu x_0_4 add INT+ 1 0 sqr n x_0_6", "tree": "(sign((relu(x_0_4) idiv (10 add (n)**2))) add x_0_6)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 2 + 0 + 6 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0", "x2": "idiv sub n x_0_2 add add add n x_0_2 INT- 2 INT+ 1", "tree": "((n sub x_0_2) idiv (((n add x_0_2) add -2) add 1))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 9 - 6 + 32 + 45 + 36 + 224 + 360 + 324 + 2240 + 3960 + 3888 + 2 9120 + 5 5440 + 5 8320 + 46 5920 + 94 2480 + 104 9760 + 885 2480 + 1884 9600 + 2204 4960 + 1 9475 4560 + 4 3354 800 + 5 2907 9040 + 48 6886 4000 + 112 7206 800 + 142 8513 4080 + 1363 2819 2000 + 3268 8976 3200 + 4285 5402 2400 + 4 2261 7395 2000", "x2": "mul abs x_0_3 n", "tree": "(abs(x_0_3) mul n)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 7 + 56 - 385 + 2702 - 1 8907 + 13 2356 - 92 6485 + 648 5402 - 4539 7807 + 3 1778 4656 - 22 2449 2585 + 155 7144 8102 - 1090 13 6707 + 7630 95 6956 - 5 3410 669 8685 + 37 3870 4689 802 - 261 7093 2823 5607 + 1831 9652 9764 9256 - 1 2823 7570 8354 4785 + 8 9766 2995 8481 3502 - 62 8364 970 9369 4507 + 439 8548 6796 5586 1556 - 3078 9840 7575 9103 885 + 2 1552 8885 3031 3721 6202 - 15 870 2197 1219 6051 3407 + 105 6091 5379 8537 2359 3856 - 739 2640 7658 9760 6515 6985 + 5174 8485 3612 8324 5609 8902", "x2": "mul INT+ 7 sub sign INT+ 6 x_0_1", "tree": "(7 mul (sign(6) sub x_0_1))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 + 0 + 31 + 64 + 156 + 280 + 499 + 792 + 1228 + 1792 + 2559 + 3520 + 4756 + 6264 + 8131 + 1 360 + 1 3044 + 1 6192 + 1 9903 + 2 4192 + 2 9164 + 3 4840 + 4 1331 + 4 8664 + 5 6956 + 6 6240 + 7 6639 + 8 8192 + 10 1028 + 11 5192", "x2": "add relu abs x_0_2 relu mul mul n n n", "tree": "(relu(abs(x_0_2)) add relu(((n mul n) mul n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 10 - 2 + 105 + 70 - 460 - 280 + 2375 + 1480 - 1 1790 - 7310 + 5 9045 + 3 6650 - 29 5120 - 18 3140 + 147 5715 + 91 5820 - 737 8450 - 457 8970 + 3689 2385 + 2289 4990 - 1 8446 1780 - 1 1447 4800 + 9 2230 9055 + 5 7237 4160 - 46 1154 5110 - 28 6187 630 + 230 5772 5725 + 143 935 3330 - 1152 8862 8440 - 715 4676 6460", "x2": "mul sub sub x_0_2 INT+ 8 add n idiv idiv x_0_1 mul x_0_1 n add INT- 2 INT+ 4 INT- 5", "tree": "(((x_0_2 sub 8) sub (n add ((x_0_1 idiv (x_0_1 mul n)) idiv (-2 add 4)))) mul -5)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 4 - 9 - 344 - 456 - 568 - 50 - 449 - 8 - 1016 - 638 - 85 - 764 - 8 - 1576 - 953 - 120 - 1079 - 8 - 2136 - 1268 - 155 - 1394 - 8 - 2696 - 1583 - 190 - 1709 - 8 - 3256 - 1898", "x2": "add INT- 8 mul INT- 7 mul sqr mod x_0_2 INT- 5 n", "tree": "(-8 add (-7 mul (((x_0_2 mod -5))**2 mul n)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756", "x2": "mul n mod INT- 1 n", "tree": "(n mul (-1 mod n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 9 - 1 + 8 - 7 - 6 + 3 - 3 - 1 + 1 + 5 + 6 + 9 + 10 + 7 + 7 + 5 + 5 + 9 + 10 + 13 + 14 + 11 + 11 + 9 + 9 + 13 + 14 + 17 + 18 + 15 + 15", "x2": "add sub INT- 3 abs x_0_4 n", "tree": "((-3 sub abs(x_0_4)) add n)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 7 + 8 + 6 + 7 + 5 + 6 + 4 + 5 + 3 + 4 + 2 + 3 + 1 + 2 + 0 + 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1", "x2": "sub abs x_0_2 sqr sign sqr x_0_1", "tree": "(abs(x_0_2) sub (sign((x_0_1)**2))**2)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 1 + 7 - 8 - 5 + 1 + 9 + 0 + 10 + 10 + 0 + 7 + 0 + 0 + 1 + 9 + 0 + 10 + 10 + 0 + 7 + 0 + 0 + 1 + 9 + 0 + 10 + 10 + 0 + 7 + 0 + 0 + 1 + 9 + 0 + 10 + 10 + 0", "x2": "mul idiv n n relu x_0_9", "tree": "((n idiv n) mul relu(x_0_9))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 9 - 4 - 1 - 10 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign idiv sub mul mul sqr x_0_2 x_0_5 mul mod sqr INT+ 6 sqr n INT+ 4 n n", "tree": "sign((((((x_0_2)**2 mul x_0_5) mul (((6)**2 mod (n)**2) mul 4)) sub n) idiv n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 9 - 8 + 16 - 45 - 48 + 112 - 360 - 432 + 1120 - 3960 - 5184 + 1 4560 - 5 5440 - 7 7760 + 23 2960 - 94 2480 - 139 9680 + 442 6240 - 1884 9600 - 2939 3280 + 9737 7280 - 4 3354 800 - 7 543 8720 + 24 3443 2000 - 112 7206 800 - 190 4684 5440 + 681 6409 6000 - 3268 8976 3200 - 5714 536 3200 + 2 1130 8697 6000", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 1 + 9 + 9 - 1 - 2 - 8 + 24 + 39 + 44 + 54 + 68 + 67 + 109 + 139 + 149 + 189 + 223 + 232 + 299 + 354 + 374 + 459 + 528 + 552 + 669 + 769 + 809 + 964 + 1093 + 1142 + 1354 + 1529 + 1599 + 1879", "x2": "add mul relu relu INT+ 5 add n sub INT- 2 idiv x_0_3 INT- 9 x_0_6", "tree": "((relu(relu(5)) mul (n add (-2 sub (x_0_3 idiv -9)))) add x_0_6)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 6 - 8 - 9 - 9 - 12 - 14 - 15 - 15 - 18 - 20 - 21 - 21 - 24 - 26 - 27 - 27 - 30 - 32 - 33 - 33 - 36 - 38 - 39 - 39 - 42 - 44 - 45 - 45 - 48", "x2": "add x_0_1 mod n add sign n INT- 5", "tree": "(x_0_1 add (n mod (sign(n) add -5)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 36 - 359 - 3589 - 3 5886 - 35 8859 - 358 8589 - 3588 5883 - 3 5885 8826 - 35 8858 8259 - 358 8588 2589 - 3588 5882 5883 - 3 5885 8825 8826 - 35 8858 8258 8259 - 358 8588 2588 2589 - 3588 5882 5882 5883 - 3 5885 8825 8825 8826 - 35 8858 8258 8258 8259 - 358 8588 2588 2588 2589 - 3588 5882 5882 5882 5883 - 3 5885 8825 8825 8825 8826 - 35 8858 8258 8258 8258 8259 - 358 8588 2588 2588 2588 2589 - 3588 5882 5882 5882 5882 5883 - 3 5885 8825 8825 8825 8825 8826 - 35 8858 8258 8258 8258 8258 8259 - 358 8588 2588 2588 2588 2588 2589 - 3588 5882 5882 5882 5882 5882 5883 - 3 5885 8825 8825 8825 8825 8825 8826", "x2": "sub add INT+ 9 mod add sqr INT+ 1 mul idiv sub n x_0_1 INT+ 6 INT+ 6 INT- 9 abs mul x_0_1 INT- 1 0", "tree": "((9 add (((1)**2 add (((n sub x_0_1) idiv 6) mul 6)) mod -9)) sub abs((x_0_1 mul -10)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 6 + 2 - 6 + 10 + 7 - 5 + 1 + 8 + 6 + 2 + 6 + 10 + 7 + 5 + 1 + 8 + 6 + 2 + 6 + 10 + 7 + 5 + 1 + 8 + 6 + 2 + 6 + 10 + 7 + 5 + 1 + 8 + 6 + 2 + 6", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 3 + 1 + 5 + 4 - 1 - 8 + 9 - 7 + 6 - 8 - 576 - 312 - 112 - 600 - 512 + 136 + 1152 - 1368 + 1120 - 1008 + 1408 + 10 5984 + 5 9904 + 2 2400 + 12 4800 + 11 592 - 3 464 - 26 7264 + 32 8320 - 27 7760 + 25 8048 - 37 1712 - 2882 7648 - 1677 3120 - 645 1200 - 3694 800 - 3361 9968 + 950 4768", "x2": "mul mul INT- 8 x_0_11 n", "tree": "((-8 mul x_0_11) mul n)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 5 + 5 + 1 - 6 + 9 + 5 + 5 - 6 - 6 + 9 + 5 - 6 - 18 - 6 + 9 - 10 - 22 - 35 - 6 - 10 - 30 - 42 - 57 - 29 - 33 - 54 - 66 - 84 - 56 - 61 - 82 - 95", "x2": "sub x_0_5 mod idiv x_0_4 n mod INT- 1 n", "tree": "(x_0_5 sub ((x_0_4 idiv n) mod (-1 mod n)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 2 - 4 + 4 - 9 - 7 + 4 + 10 + 0 + 9 + 0 + 0 + 0 + 0 + 14 + 15 + 0 + 17 + 18 + 0 + 0 + 0 + 22 + 0 + 0 + 0 + 26 + 0 + 28 + 0 + 30 + 0 + 32 + 33 + 34 + 35", "x2": "mul sqr idiv sign sub idiv n sqr INT- 4 x_0_7 sub mul x_0_5 INT+ 1 0 n n", "tree": "(((sign(((n idiv (-4)**2) sub x_0_7)) idiv ((x_0_5 mul 10) sub n)))**2 mul n)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 9 - 5 - 5 + 7 + 9 - 9 - 1 - 8 - 6 - 1 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1", "x2": "idiv sign idiv x_0_5 add x_0_2 mod n x_0_9 sqr n", "tree": "(sign((x_0_5 idiv (x_0_2 add (n mod x_0_9)))) idiv (n)**2)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 3 - 8 + 8 + 0 - 8 + 5 + 40 + 27 - 80 + 88 + 0 - 104 + 70 + 600 + 432 - 1360 + 1584 + 0 - 2080 + 1470 + 1 3200 + 9936 - 3 2640 + 3 9600 + 0 - 5 6160 + 4 1160 + 38 2800 + 29 8080 - 101 1840 + 126 7200 + 0 - 190 9440 + 144 600", "x2": "mul x_0_7 idiv n INT+ 1", "tree": "(x_0_7 mul (n idiv 1))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 4 + 17 + 84 + 260 + 630 + 1302 + 2408 + 4104 + 6570 + 1 10 + 1 4652 + 2 748 + 2 8574 + 3 8430 + 5 640 + 6 5552 + 8 3538 + 10 4994 + 13 340 + 16 20 + 19 4502 + 23 4278 + 27 9864 + 33 1800 + 39 650 + 45 7002 + 53 1468 + 61 4684 + 70 7310", "x2": "relu add add n sqr sqr n idiv abs n x_0_1", "tree": "relu(((n add ((n)**2)**2) add (abs(n) idiv x_0_1)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 8 - 5 + 0 - 2 - 2 + 0 - 5 - 8 + 0 - 8 - 5 + 0 - 2 - 2 + 0 - 5 - 8 + 0 - 8 - 5 + 0 - 2 - 2 + 0 - 5 - 8 + 0 - 8", "x2": "mod sqr n INT- 9", "tree": "((n)**2 mod -9)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr sub mod sign INT- 1 sign n abs n", "tree": "(((sign(-1) mod sign(n)) sub abs(n)))**2", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 7 + 10 - 3 - 8 - 8 - 7 + 3 + 15 + 31 + 35 + 35 + 36 + 39 + 53 + 80 + 124 + 173 + 223 + 275 + 331 + 402 + 501 + 645 + 839 + 1084 + 1382 + 1737 + 2164 + 2691 + 3363 + 4230 + 5343 + 6755 + 8523", "x2": "add add add n x_0_1 x_0_7 INT- 4", "tree": "(((n add x_0_1) add x_0_7) add -4)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 7 + 9 + 6 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12 + 12 + 13 + 13 + 14 + 14 + 15", "x2": "relu abs sub n x_0_1", "tree": "relu(abs((n sub x_0_1)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 + 874 - 7 721 + 572 8465 - 4 6400 5576 + 375 8445 1720 - 3 443 4058 9207 + 246 5915 8772 5831 - 1 9973 9186 579 2166 + 161 7887 4070 6916 5510 - 1 3104 8879 9726 240 6125 + 106 1495 9277 7807 9489 6189 - 8598 1170 1500 2443 8659 1076 + 69 6447 4782 1519 7953 1387 7220 - 5641 2245 7354 3103 4204 2405 4531 + 45 6939 1904 5699 1377 543 4841 7075 - 3701 2074 4270 1630 1541 4022 2178 2722 + 29 9797 8028 5883 2042 4853 5799 6440 546 - 2428 3622 315 6539 5441 3139 9771 1644 3801 + 19 6697 3384 5567 9703 746 4338 1464 3194 7945 - 1593 2484 4149 1005 5949 461 1389 8609 8778 3040 + 12 9053 1237 6077 1453 1872 7352 2578 7400 1042 6304 - 1045 3303 246 2248 7708 1691 5532 8877 9408 4453 31 + 8 4671 7544 9944 2150 4361 7015 8163 9113 2084 693 2575 - 685 8412 1144 5481 4185 3297 8281 1276 8169 8809 6153 7886 + 5 5553 1381 2708 3994 9011 7124 771 3422 1760 3578 8456 8830 - 449 9804 1882 9380 3586 9948 7050 2478 7196 2588 9886 5007 4437 + 3 6448 4139 2517 9809 546 5845 1070 776 2896 9708 806 5602 9461 - 295 2321 5279 3956 4533 4273 3453 6676 2879 4654 6354 5331 3838 5436", "x2": "add sub sqr INT- 8 mul x_0_1 sqr INT+ 9 relu mod sqr mod n x_0_1 x_0_1", "tree": "(((-8)**2 sub (x_0_1 mul (9)**2)) add relu((((n mod x_0_1))**2 mod x_0_1)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 7 + 6 + 0 - 2 - 1 + 7 + 6 + 0 + 2 + 1 + 7 + 6 + 0 + 2 + 1 + 7 + 6 + 0 + 2 + 1 + 7 + 6 + 0 + 2 + 1 + 7 + 6 + 0 + 2 + 1 + 7 + 6 + 0", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 + 7 - 38 - 29 - 74 - 65 - 110 - 101 - 146 - 137 - 182 - 173 - 218 - 209 - 254 - 245 - 290 - 281 - 326 - 317 - 362 - 353 - 398 - 389 - 434 - 425 - 470 - 461 - 506 - 497", "x2": "add x_0_2 mul idiv INT+ 4 sign sub mod n relu mul INT+ 9 n add n sign n INT+ 9", "tree": "(x_0_2 add ((4 idiv sign(((n mod relu((9 mul n))) sub (n add sign(n))))) mul 9))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 8 + 3 + 4 - 6 - 7 + 9 + 7 + 24 - 12 + 24 - 42 + 63 - 63 - 168 + 288 + 288 + 1008 + 2646 + 3969 - 1 584 + 4 8384 - 8 2944 - 29 304 - 266 7168 - 1050 1974 + 4200 7896 + 5 1209 6256 + 40 1316 2496 - 240 7897 4976 - 7742 8953 9072 - 28 105 2898 9632 + 441 1658 3158 6704 - 2 1512 862 6403 7376 - 205 5125 4889 2121 4976 + 9663 2839 3158 570 96", "x2": "mul x_0_7 sub mod mul mul idiv INT- 7 n n n n x_0_6", "tree": "(x_0_7 mul (((((-7 idiv n) mul n) mul n) mod n) sub x_0_6))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 10 + 5 + 9 + 8 - 4 + 3 + 0 + 6 - 100 + 29 - 12 + 11 - 14 + 3 - 16 + 157 - 18 + 300 - 20 + 12 - 22 + 448 - 24 + 4 7075 - 26 + 3573 - 28 + 5347 - 30 + 2108 9569 - 32 + 1 6819 8942 - 34 + 1910 4796 - 36", "x2": "sub mul x_0_8 relu x_0_6 relu n", "tree": "((x_0_8 mul relu(x_0_6)) sub relu(n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 2 + 4 - 2 + 1 + 4 - 7 - 1 + 4 - 2 + 1 + 4 - 7 - 1 + 4 - 2 + 1 + 4 - 7 - 1 + 4 - 2 + 1 + 4 - 7 - 1 + 4 - 2 + 1 + 4 - 7 - 1 + 4 - 2 + 1", "x2": "add x_0_6 idiv mul INT+ 7 n sqr n", "tree": "(x_0_6 add ((7 mul n) idiv (n)**2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 10 - 8 - 1 - 1 - 1 - 7 - 2 - 5 - 1 - 3 - 1 - 13 - 1 - 15 - 1 - 17 - 1 - 19 - 1 - 21 - 1 - 23 - 1 - 25 - 1 - 27 - 1 - 29 - 1 - 31", "x2": "idiv n mul sqr idiv x_0_3 sign INT- 1 x_0_1", "tree": "(n idiv (((x_0_3 idiv sign(-1)))**2 mul x_0_1))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 8 + 3 + 8 + 7 + 8 + 10 + 16 + 17 + 24 + 27 + 40 + 44 + 64 + 71 + 104 + 115 + 168 + 186 + 272 + 301 + 440 + 487 + 712 + 788 + 1152 + 1275 + 1864 + 2063 + 3016 + 3338 + 4880", "x2": "add relu x_0_4 x_0_2", "tree": "(relu(x_0_4) add x_0_2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 8 + 0 - 3 - 24 + 0 - 9 - 72 + 0 - 27 - 216 + 0 - 81 - 648 + 0 - 243 - 1944 + 0 - 729 - 5832 + 0 - 2187 - 1 7496 + 0 - 6561 - 5 2488 + 0 - 1 9683 - 15 7464 + 0 - 5 9049 - 47 2392", "x2": "mul INT+ 3 x_0_3", "tree": "(3 mul x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 256 + 4096 + 2 736 + 6 5536 + 16 0 + 33 1776 + 61 4656 + 104 8576 + 167 9616 + 256 0 + 374 8096 + 530 8416 + 731 1616 + 983 4496 + 1296 0 + 1677 7216 + 2138 1376 + 2687 3856 + 3336 2176 + 4096 0 + 4978 7136 + 5996 9536 + 7163 9296 + 8493 4656 + 1 0 0 + 1 1698 5856 + 1 3604 8896 + 1 5735 1936", "x2": "sqr sqr mul n INT+ 4", "tree": "(((n mul 4))**2)**2", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 4 + 10 + 10 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1", "x2": "sign mod relu x_0_4 INT- 6", "tree": "sign((relu(x_0_4) mod -6))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 5 - 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2 + 5 + 2 + 2", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 2 - 7 + 10 + 8 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784", "x2": "mul sqr n sign INT- 1 0", "tree": "((n)**2 mul sign(-10))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 10 - 8 + 6 - 2 + 1 + 2 - 10 + 6 + 10 + 28 + 6 + 34 + 1 + 2 + 25 + 6 + 10 + 28 + 6 + 34 + 1 + 2 + 25 + 6 + 10 + 28 + 6 + 34 + 1 + 2 + 25 + 6 + 10 + 28 + 6", "x2": "mod x_0_8 sub relu relu sqr INT+ 6 idiv relu INT+ 1 x_0_2", "tree": "(x_0_8 mod (relu(relu((6)**2)) sub (relu(1) idiv x_0_2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "add mod mod abs relu n add add idiv INT- 4 n x_0_1 INT+ 1 n relu sqr n", "tree": "(((abs(relu(n)) mod (((-4 idiv n) add x_0_1) add 1)) mod n) add relu((n)**2))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 2 + 9 - 3 + 6 - 4 + 1 - 360 + 72 + 324 - 108 + 216 - 144 + 36 - 1 2960 + 2592 + 1 1664 - 3888 + 7776 - 5184 + 1296 - 46 6560 + 9 3312 + 41 9904 - 13 9968 + 27 9936 - 18 6624 + 4 6656 - 1679 6160 + 335 9232 + 1511 6544 - 503 8848 + 1007 7696 - 671 8464 + 167 9616", "x2": "mul x_0_7 sqr INT+ 6", "tree": "(x_0_7 mul (6)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 1 + 9 + 16 + 16 + 24 + 25 + 26 + 28 + 29 + 29 + 36 + 42 + 48 + 56 + 58 + 63 + 69 + 73 + 81 + 83 + 90 + 98 + 104 + 112 + 112 + 115 + 119 + 123 + 124 + 130", "x2": "add INT+ 8 sub x_0_1 mod x_0_3 INT+ 9", "tree": "(8 add (x_0_1 sub (x_0_3 mod 9)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 1 + 0 + 9 - 3 + 24 + 10 + 0 + 108 + 36 + 360 + 120 + 0 + 1512 + 540 + 5760 + 2040 + 0 + 2 8728 + 1 800 + 12 960 + 4 4880 + 0 + 68 9472 + 27 0 + 314 4960 + 121 1760 + 0 + 1999 4688 + 810 0 + 9749 3760 + 3877 6320 + 0", "x2": "mul abs abs mul sub mod mul n add x_0_4 mul x_0_3 sqr INT+ 1 INT- 6 n x_0_5 INT+ 1", "tree": "(abs(abs(((((n mul (x_0_4 add (x_0_3 mul (1)**2))) mod -6) sub n) mul x_0_5))) mul 1)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 8 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6 + 0 + 1 + 6", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 252 - 240 - 220 - 192 - 156 - 112 - 60 + 0 + 68 + 144 + 228 + 320 + 420 + 528 + 644 + 768 + 900 + 1040 + 1188 + 1344 + 1508 + 1680 + 1860 + 2048 + 2244 + 2448 + 2660 + 2880", "x2": "mul mul INT- 4 sub add INT+ 2 INT- 1 0 n add INT- 8 abs abs n", "tree": "((-4 mul ((2 add -10) sub n)) mul (-8 add abs(abs(n))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 2 + 2 + 2 + 10 + 8 - 5 - 9 - 2 - 38 + 15 + 30 + 1 + 148 - 64 - 124 - 11 - 597 + 249 + 488 + 38 + 2384 - 1004 - 1959 - 159 - 9541 + 4009 + 7827 + 628 + 3 8160 - 1 6042 - 3 1313 - 2520 - 15 2649 + 6 4163 + 12 5248 + 1 73", "x2": "add mod sub sub x_0_8 x_0_5 x_0_4 INT- 6 sub INT- 4 mul relu INT+ 4 x_0_4", "tree": "((((x_0_8 sub x_0_5) sub x_0_4) mod -6) add (-4 sub (relu(4) mul x_0_4)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 8 - 9 - 3 + 9 + 14 + 64 + 13 + 44 + 1 + 1386 + 162 + 794 + 149 + 3 7636 + 2 2691 + 6 4516 + 2 2532 + 10 3684 + 12 8881 + 15 8404 + 19 2721 + 23 2324 + 27 7729 + 32 9476 + 38 8129 + 45 4276 + 52 8529 + 61 1524 + 70 3921 + 80 6404 + 91 9681 + 104 4484", "x2": "mod sqr add add sub INT- 2 n mul n n mod n x_0_2 relu add sqr x_0_4 x_0_3", "tree": "(((((-2 sub n) add (n mul n)) add (n mod x_0_2)))**2 mod relu(((x_0_4)**2 add x_0_3)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 5 - 10 + 0 + 0 - 9 - 8 - 10 + 77 + 100 + 110 + 132 + 165 + 190 + 220 + 163 + 172 + 196 + 210 + 215 + 230 + 242 + 343 + 380 + 404 + 440 + 487 + 526 + 570 + 527 + 550 + 588 + 616 + 635 + 664 + 690", "x2": "sub add n mul n n x_0_7", "tree": "((n add (n mul n)) sub x_0_7)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 7 - 10 + 112 + 142 + 172 + 39 + 45 + 52 + 226 + 259 + 290 + 104 + 113 + 124 + 348 + 382 + 413 + 196 + 208 + 222 + 479 + 514 + 547 + 311 + 326 + 342 + 621 + 657 + 692 + 446", "x2": "add abs sub idiv mul mul n n mul INT- 8 n x_0_3 mod n x_0_1 n", "tree": "(abs(((((n mul n) mul (-8 mul n)) idiv x_0_3) sub (n mod x_0_1))) add n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 9 - 2 - 3 + 8 - 3 - 4 + 2 + 0 + 5 + 10 - 3 + 1005 + 1185 + 1378 + 1597 + 1796 + 3028 + 3459 + 3909 + 4406 + 4897 + 6417 + 8171 + 9130 + 1 163 + 1 1230 + 1 3320 + 1 6691 + 1 8480 + 2 376 + 2 2367 + 2 5389 + 3 735 + 3 4747 + 3 8085 + 4 1606 + 4 6206 + 5 4167 + 6 2089", "x2": "sub x_0_11 sub sub INT- 4 abs mul INT+ 7 sqr n abs x_0_5", "tree": "(x_0_11 sub ((-4 sub abs((7 mul (n)**2))) sub abs(x_0_5)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 10 + 7 + 5 + 8 - 3 + 6 - 9 + 3 + 0 + 14 + 12 + 15 + 4 + 13 + 0 + 10 + 7 + 21 + 19 + 22 + 11 + 20 + 7 + 17 + 14 + 28 + 26 + 29 + 18 + 27 + 14 + 24 + 21 + 35 + 33 + 36", "x2": "relu add x_0_8 INT+ 7", "tree": "relu((x_0_8 add 7))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4", "x2": "idiv n INT- 8", "tree": "(n idiv -8)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 + 1 - 8 + 0 - 1 - 89 - 25 - 113 - 41 - 56 - 1120 - 379 - 1643 - 676 - 962 - 1 9112 - 6898 - 3 1295 - 1 3601 - 2 287 - 42 557 - 15 8747 - 75 1177 - 34 130 - 52 7570 - 1135 5151 - 444 5033 - 2178 4250 - 1020 4024 - 1635 4796 - 3 6336 4964 - 1 4668 6225 - 7 4066 4641", "x2": "add x_0_5 sub mul n x_0_5 relu add mul add n sign n abs INT- 4 mod x_0_1 INT+ 6", "tree": "(x_0_5 add ((n mul x_0_5) sub relu((((n add sign(n)) mul abs(-4)) add (x_0_1 mod 6)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 4 + 18 - 76 + 398 - 2464 + 1 7646 - 14 3632 + 131 334 - 1324 6972 + 1 4702 7026 - 17 7757 1284 + 232 5545 3718 - 3273 5392 3336 + 4 9335 6430 3758 - 79 2643 8278 3464 + 1352 4280 7162 2646 - 2 4422 9696 7199 1092 + 46 5388 8518 3945 3394 - 933 2200 64 6105 8972 + 1 9644 1588 9875 2169 1806 - 43 3104 7157 7319 3827 8704 + 998 1052 6216 8221 210 1998 - 2 3997 8367 6361 4623 8872 6656 + 60 944 243 5253 3818 2026 8398 - 1564 8542 4699 2949 3897 1570 5004 + 4 2311 1590 7124 4886 9041 4430 3506 - 118 6277 3082 4184 9782 7057 5620 3172 + 3444 4353 980 8488 8585 3710 7419 5494 - 10 3451 6870 2507 8850 7343 8379 8206 7992", "x2": "sub x_0_2 mul x_0_1 abs n", "tree": "(x_0_2 sub (x_0_1 mul abs(n)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 7 + 6 + 2 + 5 + 7 - 6 + 9 + 2 - 4 - 7 - 6 - 6 - 8 - 12 - 4 - 7 - 6 - 6 - 8 - 12 - 4 - 7 - 6 - 6 - 8 - 12 - 4 - 7 - 6 - 6 - 8 - 12 - 4 - 7 - 6 - 6 - 8", "x2": "mod x_0_6 sub idiv sub sign add sqr mul mul n INT+ 7 INT- 4 n x_0_8 x_0_10 n", "tree": "(x_0_6 mod (((sign(((((n mul 7) mul -4))**2 add n)) sub x_0_8) idiv x_0_10) sub n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 3 + 6 + 10 + 9 - 23 - 22 - 26 - 30 - 31 - 29 - 34 - 34 - 47 - 37 - 40 - 46 - 43 - 60 - 50 - 49 - 56 - 55 - 73 - 59 - 61 - 68 - 64 - 88 - 70 - 69 - 79 - 75", "x2": "mul add add INT+ 6 add n n mod sub idiv mul n x_0_3 x_0_5 n n INT- 1", "tree": "(((6 add (n add n)) add ((((n mul x_0_3) idiv x_0_5) sub n) mod n)) mul -1)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 7 + 3 + 771 + 4220 + 1 9655 + 7 2228 + 25 5577 + 84 416 + 283 2201 + 940 4860 + 3292 6619 + 1 1584 5312 + 4 3287 4039 + 16 2936 5276 + 65 450 2785 + 260 8662 3424 + 1106 68 6937 + 4695 9323 6124 + 2 1014 6010 211 + 9 3919 2872 5280 + 44 1307 4787 3639 + 206 6225 4533 9452 + 1015 73 4913 3289 + 4958 9412 7925 3856 + 2 5375 1839 7247 7225 + 12 8932 4735 6952 764 + 68 5129 9676 4431 667 + 361 109 2604 2847 7184 + 1986 8769 622 7983 8551 + 1 830 3277 8135 8332 1820", "x2": "add mul n x_0_2 mul mul n n add INT+ 7 sqr mul n n", "tree": "((n mul x_0_2) add ((n mul n) mul (7 add ((n mul n))**2)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 7 - 3 - 3 - 13 - 13 - 23 - 23 - 33 - 33 - 43 - 43 - 53 - 53 - 63 - 63 - 73 - 73 - 83 - 83 - 93 - 93 - 103 - 103 - 113 - 113 - 123 - 123 - 133 - 133", "x2": "sub x_0_2 abs INT- 1 0", "tree": "(x_0_2 sub abs(-10))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 6 + 3 - 9 + 8 + 6 - 8 + 8 - 10 - 4 - 2 + 1 - 2 - 4 - 9 + 19 - 10 - 7 - 3 + 1 - 3 - 4 - 9 + 27 - 10 - 11 - 4 + 1 - 4 - 3 - 9 + 35 - 9 - 21 - 5 + 1 - 5 - 2", "x2": "idiv add sub idiv mul relu x_0_2 add x_0_10 x_0_4 relu n INT- 3 relu relu n x_0_4", "tree": "(((((relu(x_0_2) mul (x_0_10 add x_0_4)) idiv relu(n)) sub -3) add relu(relu(n))) idiv x_0_4)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 0 + 10 + 2 - 3 - 3 - 7 - 30 - 250 - 2483 - 2 7294 - 32 7511 - 425 7647 - 5960 7280 - 8 9411 1653 - 143 581 3710 - 2431 9916 547 - 4 3775 8914 7457 - 83 1742 5340 8925 - 1663 4859 6229 113 - 3 4933 2195 1390 6041 - 76 8531 725 509 3405 - 1767 6219 452 629 5726 - 4 2422 9340 2592 450 6301 - 106 573 5169 9660 7494 7588 - 2757 4914 9352 3374 6254 3277 - 7 4452 2780 1044 1839 9376 1830 - 208 4663 9610 5456 1970 3162 6910 - 6045 5259 1128 7569 9731 2168 6633 - 18 1365 7879 4436 2269 1597 2554 6518 - 562 2339 7020 2437 9696 2889 5448 5273 - 1 7991 4877 9100 795 1325 4305 3729 502 - 59 3719 1179 4966 5849 9195 4047 6221 3410", "x2": "mod n add mul x_0_1 n add n x_0_5", "tree": "(n mod ((x_0_1 mul n) add (n add x_0_5)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 8 + 2 + 1 - 4 - 1 - 7 + 9 - 6 - 7 - 29 + 10 - 6 - 23 + 30 - 4 - 21 + 109 - 1 - 20 - 440 + 3 - 19 - 114 + 7 - 19 - 90 + 8 - 21 - 99 + 16 - 20 - 82 + 26 - 19 - 75 + 38 - 18", "x2": "sub INT- 2 add idiv mul n sub n abs relu mod x_0_9 idiv x_0_10 x_0_3 add x_0_1 n INT- 3", "tree": "(-2 sub (((n mul (n sub abs(relu((x_0_9 mod (x_0_10 idiv x_0_3)))))) idiv (x_0_1 add n)) add -3))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 10 - 8 - 5 + 9 + 1 - 6 - 6 - 7 - 9 - 100 - 88 - 60 + 117 + 14 - 90 - 96 - 119 - 162 - 1900 - 1760 - 1260 + 2574 + 322 - 2160 - 2400 - 3094 - 4374 - 5 3200 - 5 1040 - 3 7800 + 7 9794 + 1 304 - 7 1280 - 8 1600 - 10 8290 - 15 7464 - 196 8400", "x2": "mul x_0_9 n", "tree": "(x_0_9 mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 6 - 10 - 7 - 3 + 8 + 5 - 5 + 6 + 5 + 43 + 7 + 28 - 10 + 50 + 165 - 130 + 298 - 248 + 2398 - 1243 + 4883 - 1903 + 1 4303 + 38 1367 - 21 9777 + 167 4911 - 120 2967 + 3550 1561 + 4 3853 7620 + 6 3463 3471 + 25 5272 2162 + 146 5331 4839 + 13 5244 7049 9048 + 82 8560 1201 1692 + 980 985 6953 4389 + 2090 7419 5152 265 + 51 8124 8086 5744 3414", "x2": "sub abs mul x_0_9 x_0_5 x_0_1", "tree": "(abs((x_0_9 mul x_0_5)) sub x_0_1)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 5 - 9 + 5 + 4 + 10 - 10 - 7 + 6 - 5 + 1 + 0 + 9 + 34 + 4 + 25 + 14 + 17 + 9 + 83 + 12 + 54 + 6 + 11 + 6 + 141 + 2 + 81 + 16 + 7 + 18 + 251 + 28 + 129 + 2 + 21 + 0 + 465 + 18 + 219 + 36", "x2": "abs add n mul x_0_6 sub idiv x_0_12 sqr add relu n INT- 3 INT+ 2", "tree": "abs((n add (x_0_6 mul ((x_0_12 idiv ((relu(n) add -3))**2) sub 2))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "+ 10 + 3 - 8 - 6 - 10 - 4 + 10 + 3 - 8 - 6 - 10 - 4 + 10 + 3 - 8 - 6 - 10 - 4 + 10 + 3 - 8 - 6 - 10 - 4 + 10 + 3 - 8 - 6 - 10 - 4 + 10 + 3 - 8 - 6", "x2": "add x_0_6 abs sqr relu INT- 9", "tree": "(x_0_6 add abs((relu(-9))**2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 10 - 2 + 0 - 7 - 8 - 4 - 9 + 6 + 6 + 30 + 12 + 6 + 6 + 18 + 0 + 30 + 24 + 0 + 18 + 6 + 0 + 6 + 24 + 6 + 36 + 6 + 18 + 0 + 30 + 30 + 0 + 18 + 0 + 6 + 12", "x2": "mul INT- 6 mod add n x_0_8 INT- 7", "tree": "(-6 mul ((n add x_0_8) mod -7))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 2 - 8 - 9 + 11 + 13 - 38 - 44 + 109 + 171 - 441 - 689 + 2200 + 3440 - 1 1005 - 2 645 + 6 6025 + 12 3865 - 46 2180 - 86 7060 + 323 5255 + 693 6475 - 2588 2045 - 5549 1805 + 2 3293 8400 + 4 9942 6240 - 20 9644 5605 - 49 9426 2405 + 209 6445 6045 + 499 4262 4045", "x2": "sub INT- 9 sub INT- 4 mul x_0_2 idiv n INT- 3", "tree": "(-9 sub (-4 sub (x_0_2 mul (n idiv -3))))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 - 8 + 9 + 2 + 18 + 3 + 26 + 4 + 33 + 5 + 39 + 6 + 46 + 7 + 53 + 8 + 59 + 9 + 66 + 10 + 72 + 11 + 79 + 12 + 86 + 13 + 92 + 14 + 99 + 15 + 105", "x2": "idiv sub sqr mul INT+ 9 n INT+ 6 sub add mul sqr INT- 7 abs x_0_1 mod x_0_3 n x_0_3", "tree": "((((9 mul n))**2 sub 6) idiv ((((-7)**2 mul abs(x_0_1)) add (x_0_3 mod n)) sub x_0_3))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 7 - 8 + 7 + 0 + 1 - 3 + 6 + 23 + 20 + 22 + 31 + 26 + 29 + 30 + 38 + 57 + 56 + 60 + 71 + 68 + 73 + 76 + 86 + 107 + 108 + 114 + 127 + 126 + 133 + 138 + 150 + 173 + 176 + 184 + 199", "x2": "add add relu x_0_8 n n", "tree": "((relu(x_0_8) add n) add n)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 4 + 4 - 9 - 2 + 5 + 9 + 6 - 3 + 220 - 9 + 41 + 567 + 418 + 391 + 51 + 581 - 4 + 727 + 626 + 423 + 395 + 84 + 779 + 9 + 2491 + 650 + 425 + 406 + 84 + 1090 + 16 + 4668 + 657 + 448 + 501 + 207", "x2": "mul idiv x_0_6 x_0_6 add x_0_7 idiv mul sqr sub n INT- 3 mod x_0_1 n abs x_0_8", "tree": "((x_0_6 idiv x_0_6) mul (x_0_7 add ((((n sub -3))**2 mul (x_0_1 mod n)) idiv abs(x_0_8))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 9 - 6 + 6 + 9 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1", "x2": "mul relu add idiv INT- 3 relu add abs x_0_1 INT+ 1 0 INT+ 2 sign sign x_0_5", "tree": "(relu(((-3 idiv relu((abs(x_0_1) add 10))) add 2)) mul sign(sign(x_0_5)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 2 + 3 - 8 - 10 - 5 + 10 - 9 + 9 - 7 - 9 - 4 + 11 - 8 + 10 - 6 - 8 - 3 + 12 - 7 + 11 - 5 - 7 - 2 + 13 - 6 + 12 - 4 - 6 - 1 + 14 - 5 + 13 - 3 - 5 + 0 + 15", "x2": "add x_0_6 sqr sign idiv add add x_0_4 n INT- 9 x_0_9", "tree": "(x_0_6 add (sign((((x_0_4 add n) add -9) idiv x_0_9)))**2)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 1 - 4 - 8 + 8 - 5 - 3 - 3 + 1 - 71 + 11 + 12 + 13 - 50 + 15 + 16 + 17 - 306 + 19 - 101 - 123 - 147 + 23 - 201 - 231 - 263 + 27 - 333 + 29 + 30 + 31 - 497 + 33 + 34 + 35 - 693 + 37", "x2": "sub n sqr relu mul relu idiv n x_0_9 x_0_9", "tree": "(n sub (relu((relu((n idiv x_0_9)) mul x_0_9)))**2)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 7 - 2 - 6 - 4 - 5 - 76 - 78 - 794 - 1170 - 8341 - 1 5681 - 8 9273 - 19 8529 - 97 1150 - 243 1671 - 1070 4161 - 2917 2477 - 1 1919 9983 - 3 4524 5594 - 13 3786 2236 - 40 4845 5876 - 151 485 352 - 471 7386 9963 - 1712 9078 2924 - 5472 6295 1416 - 1 9487 7717 9082 - 6 3290 8342 8808 - 22 2240 8654 7929 - 73 347 2018 3519 - 253 8862 8262 3361 - 841 4676 3457 4867 - 2904 364 2715 1238 - 9684 1077 5886 5509", "x2": "sub sub mod mod n sub x_0_6 n INT+ 2 mul INT- 5 x_0_3 add n mul x_0_2 INT- 1 0", "tree": "((((n mod (x_0_6 sub n)) mod 2) sub (-5 mul x_0_3)) sub (n add (x_0_2 mul -10)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 3 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7 + 0 - 8 - 8 + 7", "x2": "mul x_0_4 abs abs idiv sub sqr sub n n INT+ 5 add add n x_0_5 n", "tree": "(x_0_4 mul abs(abs(((((n sub n))**2 sub 5) idiv ((n add x_0_5) add n)))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 2 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12 + 14 + 13 + 15 + 14 + 16", "x2": "add x_0_2 sign x_0_1", "tree": "(x_0_2 add sign(x_0_1))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 5 - 7 + 2 + 5 + 2 + 7 + 4 + 2 + 5 + 2 + 7 + 4 + 2 + 5 + 2 + 7 + 4 + 2 + 5 + 2 + 7 + 4 + 2 + 5 + 2 + 7 + 4 + 2 + 5 + 2 + 7 + 4 + 2 + 5 + 2", "x2": "mod x_0_5 sub sub abs add n add mul n INT+ 6 n x_0_8 sign relu n", "tree": "(x_0_5 mod ((abs((n add ((n mul 6) add n))) sub x_0_8) sub sign(relu(n))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 9 + 7 + 8 + 6 + 7 + 5 + 6 + 4 + 5 + 3 + 4 + 2 + 3 + 1 + 2 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1", "x2": "abs sub sign x_0_3 x_0_2", "tree": "abs((sign(x_0_3) sub x_0_2))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr sub n INT+ 7", "tree": "((n sub 7))**2", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 2 + 9 + 6 + 14 + 12 + 21 + 20 + 30 + 30 + 41 + 42 + 54 + 56 + 69 + 72 + 86 + 90 + 105 + 110 + 126 + 132 + 149 + 156 + 174 + 182 + 201 + 210 + 230 + 240", "x2": "add abs n x_0_2", "tree": "(abs(n) add x_0_2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 6 - 7 + 10 - 1 + 0 - 9 - 4 + 4 + 6 + 0 + 10 + 0 + 0 + 0 + 0 + 4 + 6 + 0 + 10 + 0 + 0 + 0 + 0 + 4 + 6 + 0 + 10 + 0 + 0 + 0 + 0 + 4 + 6 + 0 + 10", "x2": "relu mul x_0_8 sign INT+ 1", "tree": "relu((x_0_8 mul sign(1)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 2 - 10 - 9 + 1 + 10 + 6 - 9 - 2 + 28 - 8 - 40 - 36 + 4 + 40 + 24 - 36 - 8 + 112 - 32 - 160 - 144 + 16 + 160 + 96 - 144 - 32 + 448 - 128 - 640 - 576 + 64 + 640 + 384 - 576 - 128 + 1792", "x2": "mul x_0_9 mod abs INT- 4 INT+ 9", "tree": "(x_0_9 mul (abs(-4) mod 9))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 5 + 6 - 7 + 6 - 6 + 6 + 8 + 89 + 95 + 127 + 137 + 175 + 190 + 231 + 264 + 378 + 419 + 488 + 537 + 616 + 674 + 760 + 840 + 1003 + 1095 + 1217 + 1321 + 1457 + 1574 + 1721 + 1864 + 2092 + 2251 + 2442 + 2617", "x2": "add x_0_8 abs sqr idiv n INT- 1", "tree": "(x_0_8 add abs(((n idiv -1))**2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 9 - 6 - 15 - 11 - 16 - 17 - 23 - 20 - 23 - 23 - 26 - 29 - 35 - 34 - 39 - 43 - 42 - 45 - 47 - 52 - 49 - 61 - 50 - 61 - 51 - 62 - 53 - 65 - 58", "x2": "add x_0_2 mod x_0_1 INT- 1 0", "tree": "(x_0_2 add (x_0_1 mod -10))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 - 3 + 81 + 64 + 25 + 144 + 441 + 0 + 81 + 400 + 1089 + 0 + 169 + 784 + 2025 + 0 + 289 + 1296 + 3249 + 0 + 441 + 1936 + 4761 + 0 + 625 + 2704 + 6561 + 0 + 841 + 3600", "x2": "sqr mul mod n add sign INT- 6 idiv INT+ 5 sign x_0_2 n", "tree": "(((n mod (sign(-6) add (5 idiv sign(x_0_2)))) mul n))**2", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 3 + 9 + 1 + 14 + 7 + 21 + 15 + 30 + 25 + 41 + 37 + 54 + 51 + 69 + 67 + 86 + 85 + 105 + 105 + 126 + 127", "x2": "add relu n x_0_2", "tree": "(relu(n) add x_0_2)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 0 - 6 + 9 + 5 - 2 + 0 + 10 + 26 + 52 + 119 + 249 + 502 + 1010 + 2036 + 4104 + 8266 + 1 6657 + 3 3569 + 6 7646 + 13 6308 + 27 4658 + 55 3426 + 111 5124 + 224 6911 + 452 7397 + 912 2446", "x2": "add x_0_1 relu sub x_0_7 sub INT- 6 x_0_1", "tree": "(x_0_1 add relu((x_0_7 sub (-6 sub x_0_1))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 10 - 5 + 9 - 10 - 5 + 7 + 17 + 31 + 42 + 53 + 70 + 88 + 105 + 125 + 145 + 165 + 185 + 206 + 227 + 251 + 278 + 302 + 329 + 354 + 383", "x2": "add x_0_1 add mod add x_0_6 sqr INT- 4 mul INT+ 6 sign sqr n n", "tree": "(x_0_1 add (((x_0_6 add (-4)**2) mod (6 mul sign((n)**2))) add n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 7 + 10 - 1 - 9 - 7 + 49 + 64 + 80 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sub sqr n relu idiv idiv mul n add n INT- 1 0 x_0_6 x_0_5", "tree": "((n)**2 sub relu((((n mul (n add -10)) idiv x_0_6) idiv x_0_5)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 10 + 9 - 5 - 6 + 9 - 2 - 10 - 10 + 8 + 10 + 9 + 5 + 6 + 9 + 2 + 10 + 10 + 8 + 10 + 9 + 5 + 6 + 9 + 2 + 10 + 10 + 8 + 10 + 9", "x2": "abs x_0_9", "tree": "abs(x_0_9)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 1 + 4 + 0 + 5 + 1 + 6 + 2 + 7 + 3 + 8 + 4 + 9 + 5 + 10 + 6 + 11 + 7 + 12 + 8 + 13", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 2 + 7 + 1 - 10 + 2 + 3 + 3 + 1 + 1 + 1 + 2 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3 + 3 + 1 + 3", "x2": "add abs mod add sqr x_0_1 n sub INT+ 1 INT- 2 idiv INT+ 1 sign mul abs x_0_2 x_0_5", "tree": "(abs((((x_0_1)**2 add n) mod (1 sub -2))) add (1 idiv sign((abs(x_0_2) mul x_0_5))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 9 + 4 - 6 - 8 + 5 + 45 + 51 - 87 + 63 - 107 + 75 + 81 - 137 - 147 - 157 - 167 + 111 - 187 + 123 + 129 + 135 - 227 - 237 - 247 + 159", "x2": "add n add sub mul n INT- 3 INT- 5 add mul INT+ 8 mul n sign mul n mul x_0_6 x_0_5 INT- 2", "tree": "(n add (((n mul -3) sub -5) add ((8 mul (n mul sign((n mul (x_0_6 mul x_0_5))))) add -2)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 - 6 - 7 - 2 + 2 + 9 + 7 - 6 - 5 - 4 - 3 - 8 - 10 - 17 - 15 - 2 - 3 - 4 - 5 + 0 + 2 + 9 + 7 - 6 - 7 - 6 - 5 - 10", "x2": "add INT- 9 sub sign abs sub x_0_8 idiv sqr x_0_2 idiv x_0_5 n x_0_8", "tree": "(-9 add (sign(abs((x_0_8 sub ((x_0_2)**2 idiv (x_0_5 idiv n))))) sub x_0_8))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 2 + 6 + 2 + 6 - 6 - 10 - 4 + 2 - 3 - 2 + 6 + 1 + 3 - 3 - 5 - 2 + 1 - 1 - 1 + 2 + 0 + 1 - 1 - 2 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_9 idiv n abs INT+ 6", "tree": "(x_0_9 idiv (n idiv abs(6)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 5 + 4 + 10 + 0 + 0 + 0 + 64 + 36 + 50 + 0 + 0 + 0 + 626 + 150 + 176 + 0 + 0 + 0 + 3116 + 336 + 374 + 0 + 0", "x2": "relu add mul mul add x_0_4 n INT- 1 sub x_0_3 add n INT- 5 x_0_4", "tree": "relu(((((x_0_4 add n) mul -1) mul (x_0_3 sub (n add -5))) add x_0_4))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0", "x2": "mul sign n sub abs idiv n n abs mod abs relu x_0_2 n", "tree": "(sign(n) mul (abs((n idiv n)) sub abs((abs(relu(x_0_2)) mod n))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 10 - 9 - 9 - 1 - 4 + 4 + 4 - 8 - 10 - 11 - 12 - 13 - 14 - 15 - 16 - 16 - 18 - 19 - 20 - 21 - 21 - 23 - 24 - 25 - 26 - 26 - 28", "x2": "idiv abs add sub relu n idiv mod x_0_7 INT- 5 n n INT- 2", "tree": "(abs(((relu(n) sub ((x_0_7 mod -5) idiv n)) add n)) idiv -2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 5 + 9 - 6 - 6 - 10 + 5 + 7 + 11 - 4 - 6 - 10 + 5 + 7 + 11 - 4 - 6 - 10 + 5 + 7 + 11 - 4 - 6 - 10", "x2": "mul sqr sign abs mul n n sub sign mul add x_0_1 n sign n x_0_3", "tree": "((sign(abs((n mul n))))**2 mul (sign(((x_0_1 add n) mul sign(n))) sub x_0_3))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 4 + 9 + 14 + 5 + 18 + 23 + 14 + 27 + 32 + 23 + 36 + 41 + 32 + 45 + 50 + 41 + 54 + 59 + 50 + 63 + 68 + 59", "x2": "relu add INT+ 9 x_0_3", "tree": "relu((9 add x_0_3))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 3 - 7 - 3 - 1 - 10 + 44 + 17 + 57 + 17 + 9 + 108 + 1944 + 297 + 3257 + 297 + 89 + 1 1672 + 377 9144 + 8 8217 + 1060 8057 + 8 8217 + 7929 + 1 3623 5592 + 14 2819 2937 2744 + 77 8223 9097", "x2": "add add INT+ 8 abs add n sub sqr x_0_6 n idiv INT+ 5 n", "tree": "((8 add abs((n add ((x_0_6)**2 sub n)))) add (5 idiv n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 7 - 5 + 1 + 8 + 0 + 0 - 1 + 0 + 1 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv x_0_5 INT+ 8", "tree": "(x_0_5 idiv 8)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 4 + 18 + 14 + 28 + 24 + 38 + 34 + 48 + 44 + 58 + 54 + 68 + 64 + 78 + 74 + 88 + 84 + 98 + 94 + 108 + 104", "x2": "sub relu abs x_0_2 INT- 1 0", "tree": "(relu(abs(x_0_2)) sub -10)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 6 + 8 + 1 + 0 - 4 - 7 - 1 + 0 + 4 + 8 + 3 + 0 - 3 - 7 - 2 + 0 + 5 + 8 + 2 + 0 - 5 - 7 + 0", "x2": "sub mod add INT- 2 x_0_2 INT+ 3 x_0_4", "tree": "(((-2 add x_0_2) mod 3) sub x_0_4)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 2 + 0 + 24 - 5 + 0 + 168 - 32 + 0 + 1680 - 341 + 0 + 2 1840 - 4760 + 0 + 34 9440 - 8 903 + 0 + 663 9360 - 161 8040 + 0 + 1 4606 5920 - 3721 4897", "x2": "mul sub x_0_3 idiv x_0_3 relu add INT+ 3 sqr x_0_3 n", "tree": "((x_0_3 sub (x_0_3 idiv relu((3 add (x_0_3)**2)))) mul n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 3 - 6 + 5 - 3 - 1 - 5 - 3 + 6 + 5 + 0 + 5 + 0 + 14 + 10 - 1 - 2 + 1 - 6 + 16 + 1 + 4 + 14 + 14 + 10 + 16 - 7 + 7", "x2": "add mod add sqr INT- 6 n n sub sign sub INT- 5 idiv relu INT+ 9 INT- 8 x_0_7", "tree": "((((-6)**2 add n) mod n) add (sign((-5 sub (relu(9) idiv -8))) sub x_0_7))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 7 + 4 - 1 + 6 + 7 + 8 + 0 - 10 + 9 - 6 - 9 + 0 + 0 + 0 + 0 + 4 + 2 + 8 + 0 + 8 + 0 + 6 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 4 + 0 + 4", "x2": "relu add mod abs sqr n x_0_12 x_0_2", "tree": "relu(((abs((n)**2) mod x_0_12) add x_0_2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 1 - 3 + 7 + 3 + 13 + 9 + 19 + 15 + 25 + 21 + 31 + 27 + 37 + 33 + 43 + 39 + 49 + 45 + 55 + 51 + 61 + 57", "x2": "relu abs add INT+ 6 x_0_2", "tree": "relu(abs((6 add x_0_2)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 2 - 10 + 1 - 5 + 9 - 7 - 10 + 8 + 2 + 10 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 3 + 0 + 3 + 0 + 0 + 3 + 0 + 0", "x2": "relu mod idiv add x_0_4 add n sub relu idiv n x_0_8 n INT+ 7 n", "tree": "relu((((x_0_4 add (n add (relu((n idiv x_0_8)) sub n))) idiv 7) mod n))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 9 - 4 + 4 - 2 + 10 + 3 + 21 + 16 + 12 + 15 + 22 + 28 + 40 + 54 + 46 + 46 + 57 + 71 + 90 + 117 + 124 + 117 + 129 + 155 + 189 + 236", "x2": "add add add n sign x_0_1 x_0_6 sub x_0_7 sign idiv n INT- 7", "tree": "(((n add sign(x_0_1)) add x_0_6) add (x_0_7 sub sign((n idiv -7))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 9 - 10 + 10 + 4 - 9 - 6 + 4 - 7 - 10 + 9 + 10 + 10 + 4 + 9 + 6 + 4 + 7 + 10 + 9 + 10 + 10 + 4 + 9 + 6 + 4 + 7 + 10 + 9 + 10", "x2": "sub add x_0_8 abs x_0_9 x_0_8", "tree": "((x_0_8 add abs(x_0_9)) sub x_0_8)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 2 + 1 - 2 + 2 + 8 + 7 + 3 - 4 + 5 - 7 + 20 + 1 + 24 + 2 + 8 + 7 + 3 + 32 + 5 + 33 + 20 + 1 + 24 + 2 + 8 + 7 + 3 + 32 + 5 + 33", "x2": "mod x_0_10 relu sub add n n mod sqr mul n INT- 2 n", "tree": "(x_0_10 mod relu(((n add n) sub (((n mul -2))**2 mod n))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 21 + 58 + 193 + 794 + 3995 + 2 3998 + 16 8017 + 134 4170 + 1209 7567 + 1 2097 5710 + 13 3073 2853 + 159 6879 4282 + 2075 9432 5715 + 2 9063 2056 62 + 43 5948 840 985 + 697 5169 3441 5818 + 1 1857 7878 8506 8967 + 21 3440 1819 3124 1470 + 405 5363 4566 9358 7997 + 8110 7269 1338 7176 10", "x2": "add add abs add n mod INT- 2 INT+ 4 sub n x_0_1 add add mul x_0_1 n INT+ 5 relu n", "tree": "((abs((n add (-2 mod 4))) add (n sub x_0_1)) add (((x_0_1 mul n) add 5) add relu(n)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 676 + 5 7456 + 488 3756 + 4 1511 9256 + 352 8513 6756 + 2 9992 3662 4256 + 254 9351 1306 1756 + 2 1669 4846 1024 9256 + 184 1906 1918 7118 6756 + 1 5656 2026 3090 5087 4256 + 133 777 2236 2693 2431 1756 + 1 1311 6064 82 8925 6649 9256 + 96 1486 5440 7045 8681 5243 6756 + 8172 6356 2459 8898 7929 5712 4256 + 69 4674 280 9090 6397 4013 5556 1756 + 5904 7292 3877 2704 3779 1152 2274 9256 + 50 1901 9852 9567 9872 1224 7939 3368 6756 + 4266 1668 7501 3278 9130 4107 4843 6337 4256 + 36 2624 1843 7612 8707 6084 9136 1708 8681 1756 + 3082 3055 6719 7094 146 7217 6574 5253 7899 9256", "x2": "mod INT- 4 mul INT- 5 add mul x_0_1 sub INT- 8 sign abs INT+ 7 mul x_0_1 INT- 8", "tree": "(-4 mod (-5 mul ((x_0_1 mul (-8 sub sign(abs(7)))) add (x_0_1 mul -8))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "sqr sub n mod INT- 2 INT+ 4", "tree": "((n sub (-2 mod 4)))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 3 + 8 - 5 - 5 - 5 - 5 + 15 + 15 + 15 + 15 - 5 - 5 - 5 - 5 + 15 + 15 + 15 + 15 - 5 - 5 - 5 - 5 + 15", "x2": "add INT- 5 mul mod abs x_0_4 abs mod x_0_4 relu relu sqr INT+ 9 INT+ 4", "tree": "(-5 add ((abs(x_0_4) mod abs((x_0_4 mod relu(relu((9)**2))))) mul 4))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1", "x2": "mod add abs n INT- 5 mod INT+ 5 INT- 9", "tree": "((abs(n) add -5) mod (5 mod -9))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3 + 4 + 0 + 1 + 2 + 3", "x2": "mod relu add n INT- 7 INT+ 5", "tree": "(relu((n add -7)) mod 5)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 10 + 4 - 6 - 2 - 5 + 6 - 7 - 10 + 4 - 6 - 2 - 5 + 6 - 7 - 10 + 4 - 6 - 2 - 5 + 6 - 7 - 10 + 4 - 6 - 2 - 5", "x2": "add x_0_7 sqr abs sqr abs mod INT+ 4 sub INT+ 6 INT+ 8", "tree": "(x_0_7 add (abs((abs((4 mod (6 sub 8))))**2))**2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 6 - 8 + 5 + 1 - 2 + 27 + 1 - 8 + 45 + 13 + 4 + 79 + 27 + 10 + 119 + 69 + 30 + 165 + 117 + 60 + 217 + 171 + 116 + 275 + 231", "x2": "mul sign INT+ 4 add add n mod add INT+ 8 n mul x_0_6 INT+ 2 x_0_3", "tree": "(sign(4) mul ((n add ((8 add n) mod (x_0_6 mul 2))) add x_0_3))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 3 + 4 + 5 - 10 + 10 - 8 + 0 - 6 - 1 + 3 + 0 - 4 + 7 - 2 + 7 + 8 + 15 + 20 + 21 + 25 + 33 + 30 + 36 + 33 + 29 + 18 + 3 - 13 - 33", "x2": "sub idiv sub INT- 6 sign n idiv n INT+ 9 add sub INT- 8 x_0_1 x_0_9", "tree": "(((-6 sub sign(n)) idiv (n idiv 9)) sub ((-8 sub x_0_1) add x_0_9))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 7 + 3 - 7 + 2 + 10 - 4 + 22 - 4 + 23 + 15 - 7 + 3 - 7 + 2 + 10 - 4 + 22 - 4 + 23 + 15 - 7 + 3 - 7 + 2 + 10", "x2": "sub sqr INT- 5 mod x_0_5 sqr sub sign INT+ 4 INT- 5", "tree": "((-5)**2 sub (x_0_5 mod ((sign(4) sub -5))**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 3 + 7 - 1 + 8 + 6 - 73 - 1 - 41 + 7 - 57 - 29 - 5322 + 6 - 1674 - 42 - 3242 - 834 - 2832 3677 - 29 - 280 2270 - 1758 - 1051 558 - 69 5550 - 802 2306 7880 323 - 835", "x2": "sub abs add idiv n INT- 1 0 INT+ 9 sqr x_0_6", "tree": "(abs(((n idiv -10) add 9)) sub (x_0_6)**2)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 2 + 7 - 1 + 0 - 7 + 6 + 9 - 4 + 4 + 0 + 1 - 2 + 7 - 1 + 0 - 7 + 6 + 9 - 4 + 4 + 0 + 1 - 2 + 7 - 1 + 0 - 7 + 6 + 9 - 4 + 4", "x2": "add x_0_11 relu mul relu idiv INT+ 2 abs n x_0_10", "tree": "(x_0_11 add relu((relu((2 idiv abs(n))) mul x_0_10)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "- 5 + 10 - 10 - 10 + 3 + 4 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign x_0_6", "tree": "sign(x_0_6)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 7 + 2 + 2 + 7 - 9 + 4 - 10 + 10 - 2 + 7 + 10 + 9 - 25 - 32 - 79 - 137 - 84 - 199 - 244 - 140 - 289 - 371 - 262 - 555 - 667 - 975 - 1744 - 1322 - 2719 - 3779 - 2377 - 5220", "x2": "sub sub n abs mul INT- 9 x_0_11 sub add INT+ 8 n sub x_0_3 add x_0_12 n", "tree": "((n sub abs((-9 mul x_0_11))) sub ((8 add n) sub (x_0_3 sub (x_0_12 add n))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 1 + 10 - 8 - 6 + 9 + 11 - 7 - 9 + 10 + 13 - 7 - 2 + 8 + 10 + 6 - 1 + 5 + 8 + 14 - 2 - 5 + 17 + 27", "x2": "sub add INT+ 1 mod x_0_3 n mul idiv n mod n abs sub sqr n n x_0_2", "tree": "((1 add (x_0_3 mod n)) sub ((n idiv (n mod abs(((n)**2 sub n)))) mul x_0_2))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 20 + 600 + 2 4000 + 120 0 + 7200 0 + 50 4000 0 + 4032 0 0 + 36 2880 0 0 + 3628 8000 0 0 + 39 9168 0 0 0 + 4790 160 0 0 0 + 62 2702 800 0 0 0 + 8717 8291 2000 0 0 0 + 130 7674 3680 0 0 0 0 + 2 922 7898 8800 0 0 0 0 + 355 6874 2809 6000 0 0 0 0 + 6 4023 7370 5728 0 0 0 0 0 + 1216 4510 408 8320 0 0 0 0 0 + 24 3290 2008 1766 4000 0 0 0 0 0 + 5109 942 1717 944 0 0 0 0 0 0", "x2": "mul mul x_0_1 abs INT- 1 0 n", "tree": "((x_0_1 mul abs(-10)) mul n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 1 + 4 + 6 - 10 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "idiv x_0_4 relu sqr INT- 5", "tree": "(x_0_4 idiv relu((-5)**2))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 10 - 4 + 10 + 2 + 16 + 28 + 52 + 74 + 54 + 72 + 118 + 77 + 50 + 70 + 192 + 163 + 114 + 160 + 220 + 163 + 452 + 83 + 548", "x2": "mod idiv mul n sub idiv n INT+ 9 x_0_4 sign n relu add abs INT+ 2 sqr n", "tree": "(((n mul ((n idiv 9) sub x_0_4)) idiv sign(n)) mod relu((abs(2) add (n)**2)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 9 + 9 - 3 - 3 + 10 + 7 - 1 - 4 + 9 - 2 + 432 + 792 + 207 + 108 + 468 + 972 + 225 + 162 + 576 + 270 + 720 + 1 6380 + 2 9376 + 8352 + 4824 + 1 7820 + 3 6000 + 9144 + 6912 + 2 1852", "x2": "abs abs mul mul sub x_0_11 sub add INT- 3 INT+ 3 n sub INT+ 7 INT- 2 mod sign x_0_10 INT- 5", "tree": "abs(abs((((x_0_11 sub ((-3 add 3) sub n)) mul (7 sub -2)) mul (sign(x_0_10) mod -5))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 6 + 1 - 9 - 3 - 2 - 4 + 1 + 47 + 8 - 91 - 34 - 25 - 53 + 13 + 704 + 127 - 1548 - 613 - 476 - 1061 + 272 + 1 5487 + 2920 - 3 7153 - 1 5326 - 1 2377 - 2 8648", "x2": "sub mul n x_0_7 abs idiv mul sub INT- 3 INT+ 2 sign sqr x_0_7 n", "tree": "((n mul x_0_7) sub abs((((-3 sub 2) mul sign((x_0_7)**2)) idiv n)))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 4 - 9 + 5 + 6 - 7 + 2 + 2601 + 25 + 1 + 1 1025 + 1 5876 + 36 + 3 2400 + 7056 + 4 6225 + 7 3441 + 8 8209 + 121 + 11 8336 + 4 5369 + 3 3124 + 9 2416 + 6 9169 + 26 6256 + 27 9841 + 21 5296", "x2": "sqr sub add n mul n add n INT- 2 mod x_0_7 sqr n", "tree": "(((n add (n mul (n add -2))) sub (x_0_7 mod (n)**2)))**2", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 3 - 10 + 3 - 5 + 1 + 4 - 105 - 56 - 99 - 150 + 1034 + 540 + 1118 + 1932 - 1 5690 - 8832 - 1 9159 - 3 4974 + 29 7901 + 17 6420 + 40 2066 + 76 9164 - 685 1999 - 423 4368 - 1005 1900 - 1999 8550", "x2": "mul add n relu INT- 6 sub sub INT- 3 add idiv x_0_2 sub abs x_0_1 x_0_6 INT+ 9 x_0_4", "tree": "((n add relu(-6)) mul ((-3 sub ((x_0_2 idiv (abs(x_0_1) sub x_0_6)) add 9)) sub x_0_4))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 4 + 4 - 1 + 1 - 5 + 6 - 2 + 1 - 5 + 10 - 3 + 1 - 5 + 14 - 3 + 1 - 6 + 18 - 4 + 1 - 6 + 22", "x2": "idiv n x_0_2", "tree": "(n idiv x_0_2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 3 + 10 + 3 - 1 + 0 - 1 + 0 - 1 + 1 - 2 + 2 - 3 + 1 - 2 + 1 - 2 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0", "x2": "sub mod idiv mod x_0_4 INT- 6 INT+ 4 INT- 5 x_0_1", "tree": "((((x_0_4 mod -6) idiv 4) mod -5) sub x_0_1)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 1 - 5 - 8 - 10 - 11 - 11 - 10 - 8 - 5 - 1 + 4 + 10 + 17 + 25 + 34 + 44 + 55 + 67 + 80 + 94", "x2": "sub n add sub INT+ 6 x_0_1 idiv n relu n", "tree": "(n sub ((6 sub x_0_1) add (n idiv relu(n))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399", "x2": "sub sqr n sign sign INT+ 4", "tree": "((n)**2 sub sign(sign(4)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 5 - 2 + 6 - 1 + 7 + 0 + 8 + 1 + 9 + 2 + 10 + 3 + 11 + 4 + 12 + 5 + 13 + 6 + 14 + 7", "x2": "sub relu n x_0_1", "tree": "(relu(n) sub x_0_1)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 10 - 10 + 9 - 1 + 38 - 1 + 40 - 1 + 42 - 1 + 44 - 1 + 46 - 1 + 48 - 1 + 50 - 1 + 52 - 1 + 54 - 1", "x2": "sub relu x_0_2 mod sign abs sub x_0_1 n mul x_0_3 idiv INT+ 3 mod INT+ 1 INT+ 5", "tree": "(relu(x_0_2) sub (sign(abs((x_0_1 sub n))) mod (x_0_3 mul (3 idiv (1 mod 5)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2", "x2": "idiv abs relu n INT+ 1 0", "tree": "(abs(relu(n)) idiv 10)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 0 - 9 - 5 - 10 + 5 + 1 + 729 - 9 - 5 + 215 + 581 + 10 + 38 2653 + 298 5975 + 220 + 303 8264 + 1481 + 4 7971 + 80 2444 2068 8278 + 342 1575 + 23 3028 2749 + 2277 8513 + 207 1095 3050 + 1157 8227 243 2546 1292 + 185 6090 1 3903", "x2": "add mul INT+ 9 sqr mod x_0_5 x_0_3 x_0_6", "tree": "((9 mul ((x_0_5 mod x_0_3))**2) add x_0_6)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 1 - 9 + 15 - 73 + 351 - 2121 + 1 4831 - 11 8665 + 106 7967 - 1067 9689 + 1 1747 6559 - 14 971 8729 + 183 2634 3455 - 2565 6880 8393 + 3 8485 3212 5871 - 61 5765 1401 3961 + 1046 8007 3823 7311 - 1 8842 4132 8827 1625 + 35 8005 8524 7716 847 - 716 117 495 4321 6969 + 1 5036 2458 404 755 6319", "x2": "sub add INT- 1 0 sign relu x_0_1 add n mul n x_0_1", "tree": "((-10 add sign(relu(x_0_1))) sub (n add (n mul x_0_1)))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 + 2 - 18 + 9 - 126 + 9 - 1098 + 9 - 9846 + 9 - 8 8578 + 9 - 79 7166 + 9 - 717 4458 + 9 - 6457 86 + 9 - 5 8113 738 + 9 - 52 3017 6606 + 9", "x2": "mul mod abs sign sub abs INT+ 7 mul x_0_2 sqr INT+ 9 add x_0_2 INT+ 3 INT+ 9", "tree": "((abs(sign((abs(7) sub (x_0_2 mul (9)**2)))) mod (x_0_2 add 3)) mul 9)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 - 3 - 1 - 4 - 1 - 6 - 1 - 8 - 1 - 10 - 1 - 12 - 1 - 14 - 1 - 16 - 1 - 18 - 1 - 20 - 1 - 22", "x2": "idiv sqr mod x_0_1 n sub mod mod n x_0_3 sign INT- 5 n", "tree": "(((x_0_1 mod n))**2 idiv (((n mod x_0_3) mod sign(-5)) sub n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 + 10 - 5 + 1 + 7 + 3 + 18 + 8 + 17 + 11 + 5 + 9 + 6 + 4 + 7 + 1 + 7 + 3 + 6 + 8 + 5 + 11 + 5 + 9", "x2": "abs add add x_0_2 relu INT+ 1 0 sub INT- 4 x_0_4", "tree": "abs(((x_0_2 add relu(10)) add (-4 sub x_0_4)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 6 + 6 - 1 + 11 + 4 + 16 + 9 + 21 + 14 + 26 + 19 + 31 + 24 + 36 + 29 + 41 + 34 + 46 + 39 + 51 + 44", "x2": "add INT+ 5 x_0_2", "tree": "(5 add x_0_2)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 6 + 0 - 5 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 + 16 + 35 + 74 + 153 + 312 + 631 + 1270 + 2549 + 5108 + 1 227 + 2 466 + 4 945 + 8 1904 + 16 3823 + 32 7662 + 65 5341 + 131 700 + 262 1419 + 524 2858 + 1048 5737", "x2": "add relu abs add x_0_1 x_0_1 n", "tree": "(relu(abs((x_0_1 add x_0_1))) add n)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 10 + 10 + 9 + 9 - 7 - 7 - 6 - 6 + 10 + 10 + 9 + 9 - 7 - 7 - 6 - 6 + 10 + 10 + 9 + 9 - 7 - 7 - 6", "x2": "sub INT+ 3 x_0_4", "tree": "(3 sub x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 + 1228 + 1793 + 3828 + 5193 + 8028 + 1 193 + 1 3828 + 1 6793 + 2 1228 + 2 4993 + 3 228 + 3 4793 + 4 828 + 4 6193 + 5 3028 + 5 9193 + 6 6828 + 7 3793 + 8 2228 + 8 9993", "x2": "add sub sub sqr add mul INT+ 1 0 add n n INT- 5 sub mod abs INT+ 6 INT+ 7 INT- 7 x_0_1 INT+ 9", "tree": "((((((10 mul (n add n)) add -5))**2 sub ((abs(6) mod 7) sub -7)) sub x_0_1) add 9)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 9 + 84 + 1566 + 3 7680 + 113 550 + 4070 16 + 17 940 966 + 820 5124 6752 + 4 4307 6732 5094 + 265 8460 3950 6240 + 1 7545 8386 741 2566 + 126 3300 3797 3370 5616 + 9853 7429 6192 2903 9062 + 82 7714 4088 152 3928 2384 + 7449 4296 7921 3715 3541 5910 + 71 5145 2492 451 6673 9992 8896 + 7294 4815 4188 6070 747 9274 9126 + 78 7804 65 2369 5568 776 1690 7552 + 8980 9656 7437 129 4760 8483 2746 3094 + 107 7715 8809 2441 5537 1301 7992 9557 3680 + 1 3579 2200 9964 7635 7678 4026 7112 4228 6326", "x2": "mul abs mul add x_0_1 n INT- 6 n", "tree": "(abs(((x_0_1 add n) mul -6)) mul n)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 8 + 10 - 10 + 0 + 0 + 0 + 0 + 9 + 10 + 11 + 12 + 0 + 0 + 0 + 0 + 17 + 18 + 19 + 20 + 0 + 0 + 0 + 0", "x2": "idiv n add sign abs n sqr x_0_4", "tree": "(n idiv (sign(abs(n)) add (x_0_4)**2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 8 - 5 + 8 + 5 - 8 - 5 + 8 + 5 - 8 - 5 + 8 + 5 - 8 - 5 + 8 + 5 - 8 - 5 + 8 + 5 - 8", "x2": "mul x_0_2 INT- 1", "tree": "(x_0_2 mul -1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 9 + 0 - 9 + 7 + 3 + 5 + 3 + 88 + 189 + 130 + 330 + 324 + 390 + 406 + 1725 + 3472 + 2703 + 6480 + 6745 + 8440 + 9219 + 3 8698 + 8 661 + 6 5736 + 16 2925 + 17 6358 + 22 8933", "x2": "mul add add add INT+ 9 x_0_7 abs add n sign mod mod sign INT+ 6 INT- 1 0 INT+ 4 INT+ 2 n", "tree": "((((9 add x_0_7) add abs((n add sign(((sign(6) mod -10) mod 4))))) add 2) mul n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 6 - 5 + 6 + 5 - 6 - 5 + 6 + 5 - 6 - 5 + 6 + 5 - 3 - 3 + 1 + 1 - 1 - 1 + 0 + 0 + 0 + 0", "x2": "idiv x_0_2 idiv n idiv sub sub mul INT- 1 0 abs n INT+ 9 n n", "tree": "(x_0_2 idiv (n idiv ((((-10 mul abs(n)) sub 9) sub n) idiv n)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 6 + 3 + 3 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign idiv x_0_3 sub mul sub n mul x_0_2 relu n n add sign x_0_3 INT- 9", "tree": "sign((x_0_3 idiv (((n sub (x_0_2 mul relu(n))) mul n) sub (sign(x_0_3) add -9))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 1 - 1 + 8 - 2 - 10 + 9 - 4 + 16 + 0 + 81 + 1 + 256 + 1 + 256 + 81 + 0 + 0 + 16 + 0 + 81 + 1 + 256 + 16 + 0 + 0 + 1 + 0", "x2": "sqr relu sqr mod add mod x_0_3 x_0_8 mul INT+ 7 n add INT- 1 INT- 4", "tree": "(relu(((((x_0_3 mod x_0_8) add (7 mul n)) mod (-1 add -4)))**2))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 9 + 8 - 1 - 10 + 3 + 7 + 12 + 8 + 20 + 11 + 3 + 7 + 12 + 8 + 20 + 11 + 3 + 7 + 12 + 8 + 20 + 11 + 3 + 7 + 12", "x2": "mod x_0_6 abs mul abs INT+ 7 sub mod INT+ 6 INT- 7 INT+ 2", "tree": "(x_0_6 mod abs((abs(7) mul ((6 mod -7) sub 2))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 7 - 7 - 6 + 8 + 10 + 30 + 7 + 16 + 117 + 10 + 55 + 732 + 91 + 252 + 7185 + 48 + 3451 + 6 7194 + 95 + 6 7100 + 1953 + 902 + 152 2531", "x2": "mul abs abs mul mod INT+ 1 n mod sub INT- 1 x_0_1 x_0_3 n", "tree": "(abs(abs(((1 mod n) mul ((-1 sub x_0_1) mod x_0_3)))) mul n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1", "x2": "idiv mod n INT- 3 sub mul abs INT+ 6 abs n sign INT- 3", "tree": "((n mod -3) idiv ((abs(6) mul abs(n)) sub sign(-3)))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5", "x2": "abs idiv n INT- 4", "tree": "abs((n idiv -4))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 4 - 5 - 2 - 1 + 10 + 0 + 8 + 0 + 10 + 0 + 8 + 0 + 34 + 0 + 80 + 0 + 46 + 0 + 920 + 0 + 974 + 0 + 1976 + 0 + 5 1376", "x2": "abs mod mul n x_0_2 add sqr x_0_6 n", "tree": "abs(((n mul x_0_2) mod ((x_0_6)**2 add n)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 7 - 8 - 8 - 2 - 6 - 8 + 23 + 26 + 28 + 24 + 30 + 34 + 5 + 4 + 4 + 10 + 6 + 4 + 35 + 38 + 40 + 36 + 42 + 46 + 17 + 16", "x2": "add add n n sub sub sign sqr relu INT- 9 INT- 1 x_0_6", "tree": "((n add n) add ((sign((relu(-9))**2) sub -1) sub x_0_6))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 9 - 9 - 6 + 4 + 0 - 10 - 2 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 0 + 0 + 0 + 4 + 0 + 0", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 7 - 4 - 1 + 40 + 50 - 10 - 100 + 10 - 4980 - 49 7970 - 4 9796 9960 + 50 - 10 - 4979 7000 - 24 7974 1009 8119 9990 + 20 + 30 + 40 + 50 - 1 10 + 0 + 10 - 4980", "x2": "mul INT- 1 0 sub abs INT+ 9 add mod n INT+ 7 sub INT+ 8 relu mul x_0_1 x_0_4", "tree": "(-10 mul (abs(9) sub ((n mod 7) add (8 sub relu((x_0_1 mul x_0_4))))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 28 + 112 - 448 + 1792 - 7168 + 2 8672 - 11 4688 + 45 8752 - 183 5008 + 734 32 - 2936 128 + 1 1744 512 - 4 6976 2048 + 18 7904 8192 - 75 1619 2768 + 300 6477 1072 - 1202 5908 4288 + 4810 3633 7152 - 1 9241 4534 8608 + 7 6965 8139 4432", "x2": "mul INT- 4 x_0_1", "tree": "(-4 mul x_0_1)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 6 - 2 - 3 + 8 + 12 + 12 + 60 + 80 + 84 + 280 + 364 + 384 + 1172 + 1512 + 1596 + 4752 + 6116 + 6456 + 1 9084 + 2 4544 + 2 5908 + 7 6424 + 9 8268", "x2": "abs mul add x_0_3 n abs INT- 4", "tree": "abs(((x_0_3 add n) mul abs(-4)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0", "x2": "mod n INT+ 4", "tree": "(n mod 4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 4 - 3 - 4 - 6 - 9 - 12 - 16 - 20 - 24 - 29 - 35 - 41 - 48 - 55 - 63 - 71 - 79 - 88 - 98 - 108 - 119 - 130", "x2": "idiv sub sqr n add relu x_0_3 x_0_1 add idiv INT- 1 sign mul n n sub INT+ 3 INT+ 7", "tree": "(((n)**2 sub (relu(x_0_3) add x_0_1)) idiv ((-1 idiv sign((n mul n))) add (3 sub 7)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 9 + 0 - 2 - 8 + 3 + 0 + 1 + 0 + 0 + 0 + 3 + 0 + 0 + 0 + 9 + 0 + 0 + 0 + 8 + 0 + 0 + 0 + 1 + 0", "x2": "mod mul sub x_0_4 n INT+ 3 n", "tree": "(((x_0_4 sub n) mul 3) mod n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 10 - 9 - 9 + 7 + 9 - 10 - 1 + 10 + 15 - 4 - 4 + 12 + 14 - 5 + 4 + 15 + 20 + 1 + 1 + 17 + 19 + 0 + 9 + 20 + 25 + 6 + 6", "x2": "add abs INT- 5 x_0_8", "tree": "(abs(-5) add x_0_8)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 6 + 8 - 5 + 6 + 8 + 5 + 6 + 8 + 5 + 6 + 8 + 5 + 6 + 8 + 5 + 6 + 8 + 5 + 6 + 8 + 5 + 6 + 8", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 + 2 + 1 + 6 + 6 + 12 + 13 + 20 + 22 + 30 + 33 + 42 + 46 + 56 + 61 + 72 + 78 + 90 + 97 + 110 + 118", "x2": "add sign INT- 8 mod relu add x_0_2 n sqr n", "tree": "(sign(-8) add (relu((x_0_2 add n)) mod (n)**2))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 9 - 3 + 3 + 8 + 13 + 26 + 20 + 40 + 40 + 66 + 80 + 101 + 136 + 158 + 220 + 257 + 341 + 414 + 521 + 657 + 802 + 1023 + 1242 + 1571", "x2": "add x_0_5 add add INT- 6 INT+ 8 add n x_0_2", "tree": "(x_0_5 add ((-6 add 8) add (n add x_0_2)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 5 - 35 - 42 - 39 - 34 - 30 - 27 - 24 - 21 - 19 - 16 - 14 - 12 - 9 - 7 - 5 - 3 - 1 + 1 + 4 + 6", "x2": "add mod n sub idiv x_0_1 n sqr abs INT+ 6 n", "tree": "((n mod ((x_0_1 idiv n) sub (abs(6))**2)) add n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5", "x2": "idiv add relu n n INT+ 7", "tree": "((relu(n) add n) idiv 7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 - 8 - 12 - 12 - 15 - 12 - 14 - 8 - 9 + 0 + 0 + 12 + 13 + 28 + 30 + 48 + 51 + 72 + 76 + 100 + 105 + 132", "x2": "mul sub INT- 2 idiv sub n relu INT+ 7 INT- 2 abs n", "tree": "((-2 sub ((n sub relu(7)) idiv -2)) mul abs(n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 8 - 5 + 9 + 9 + 0 + 6 + 3 + 0 + 9 + 0 + 6 + 3 + 0 + 9 + 0 + 6 + 3 + 0 + 9 + 0 + 6 + 3 + 0 + 9 + 0 + 6", "x2": "mod x_0_5 mul INT+ 1 n", "tree": "(x_0_5 mod (1 mul n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 81 + 1134 + 2 1546 + 51 7104 + 1499 6016 + 5 986 4544 + 198 8471 7216 + 8749 2755 7504 + 42 8714 5031 7696 + 2315 583 1715 5584 + 13 6588 4407 1217 9456 + 874 1660 2055 7948 5184 + 6 317 4554 1849 8447 7696 + 446 3491 7009 6888 5134 9504 + 3 5261 5844 3765 4192 5661 816 + 296 1973 927 6295 2175 5530 8544 + 2 6361 5605 2559 274 3624 2246 416 + 247 7986 6894 548 5790 677 1127 9104 + 2 4532 682 2511 4309 3216 7034 1663 1296 + 255 1335 954 1188 8169 4537 1553 2965 4784 + 2 7809 5525 3998 9581 470 4549 9309 3237 1456 + 317 288 9895 5881 2239 3631 8692 1262 9034 5984", "x2": "mul mod mod sign INT+ 2 INT- 2 mul n INT+ 5 x_0_1", "tree": "(((sign(2) mod -2) mod (n mul 5)) mul x_0_1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000 + 6 5383 7184 0 + 104 6139 4944 0 + 1778 4371 4048 0 + 3 2011 8685 2864 0 + 60 8225 5020 4416 0 + 1216 4510 408 8320 0 + 2 5545 4710 8585 4720 0 + 56 2000 3638 8880 3840 0 + 1292 6008 3694 4248 8320 0", "x2": "mul abs x_0_1 abs abs n", "tree": "(abs(x_0_1) mul abs(abs(n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 11 + 24 + 39 + 56 + 75 + 96 + 119 + 144 + 171 + 200 + 231 + 264", "x2": "mul relu sub relu sub n idiv n n INT+ 9 n", "tree": "(relu((relu((n sub (n idiv n))) sub 9)) mul n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 3 + 4 - 9 + 1600 - 2500 - 3600 - 4900 - 6400 - 8100 - 1 0 - 1 2100 - 1 4400 - 1 6900 - 1 9600 - 2 2500 - 2 5600 - 2 8900 - 3 2400 - 3 6100 - 4 0 - 4 4100 - 4 8400 - 5 2900 - 5 7600 - 6 2500", "x2": "mul mul mul sqr INT+ 1 0 n relu n sign idiv x_0_2 mod add x_0_3 x_0_3 n", "tree": "((((10)**2 mul n) mul relu(n)) mul sign((x_0_2 idiv ((x_0_3 add x_0_3) mod n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 1 + 6 + 8 + 2 - 6 + 2 + 0 - 10 + 3 + 1 + 6 + 8 + 2 + 6 + 2 + 0 + 10 + 3 + 1 + 6 + 8 + 2 + 6 + 2 + 0 + 10 + 3 + 1 + 6 + 8", "x2": "abs idiv x_0_9 INT- 1", "tree": "abs((x_0_9 idiv -1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 3 + 3 - 8 + 10 - 5 + 4 - 12 + 16 - 6 + 5 - 15 + 19 - 7 + 5 - 18 + 25 - 8 + 5 - 19 + 32 - 9 + 5 - 21 + 38", "x2": "idiv sub relu mul INT+ 9 relu n n x_0_2", "tree": "((relu((9 mul relu(n))) sub n) idiv x_0_2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 4 + 7 - 6 + 10 - 1 + 2500 + 49 + 2500 + 25 + 121 + 0 + 1 + 0 + 4 + 0 + 36 + 25 + 25 + 16 + 25 + 1 + 4 + 4 + 4 + 4 + 9 + 9", "x2": "sqr relu idiv sqr INT+ 1 0 add n x_0_5", "tree": "(relu(((10)**2 idiv (n add x_0_5))))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 6 + 10 + 30 + 3 - 1 + 46 + 23 - 28 + 42 + 70 - 51 - 9 + 140 - 23 - 130 + 182 + 126 - 293 + 75 + 438 - 349 - 344 + 806 + 14", "x2": "sub x_0_3 add add add INT- 9 INT- 9 INT- 1 x_0_2", "tree": "(x_0_3 sub (((-9 add -9) add -1) add x_0_2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 3 - 6 - 4 + 5 - 7 + 4 + 3 - 4 + 10 + 169 + 169 + 144 + 100 + 169 + 169 + 100 + 121 + 100 + 144 + 169 + 169 + 100 + 100 + 169 + 169 + 100 + 169 + 100 + 100 + 169 + 169", "x2": "sqr add mod x_0_10 mod abs INT- 8 INT- 6 INT- 1 0", "tree": "(((x_0_10 mod (abs(-8) mod -6)) add -10))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 10 + 40 + 90 + 160 + 250 + 360 + 490 + 640 + 810 + 1000 + 1210 + 1440 + 1690 + 1960 + 2250 + 2560 + 2890 + 3240 + 3610 + 4000 + 4410 + 4840", "x2": "mul mul n relu abs INT+ 1 0 n", "tree": "((n mul relu(abs(10))) mul n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 10 + 0 + 8 + 7 + 9 - 10 + 4 + 14 - 20 + 4 + 22 - 13 + 13 + 12 - 9 + 27 - 8 - 5 + 49 - 21 + 8 + 61 - 30 + 35 + 53 - 35 + 84 + 32 - 27", "x2": "add x_0_3 x_0_8", "tree": "(x_0_3 add x_0_8)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 10 - 2 + 4 - 2 - 7 + 0 + 0 + 10 - 6 - 5 + 0 + 2 + 14 + 2 + 7 + 0 + 0 + 19 + 6 + 5 + 0 + 23 + 24 + 25 + 26 + 0 + 0 + 29 + 30 + 31 + 0 + 33 + 34", "x2": "mod n add n add x_0_10 mod abs n sign x_0_12", "tree": "(n mod (n add (x_0_10 add (abs(n) mod sign(x_0_12)))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "+ 7 - 2 - 9 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7 + 0 + 0 + 7", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 1 + 6 - 3 + 24 - 15 + 144 - 105 + 1152 - 945 + 1 1520 - 1 395 + 13 8240 - 13 5135 + 193 5360 - 202 7025 + 3096 5760 - 3445 9425 + 5 5738 3680 - 6 5472 9075 + 111 4767 3600 - 137 4931 575 + 2452 4881 9200 - 3162 3414 3225 + 5 8859 7166 800", "x2": "add n mul sub x_0_2 sign n n", "tree": "(n add ((x_0_2 sub sign(n)) mul n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 18 + 0 + 25 + 72 + 147 + 256 + 405 + 600 + 847 + 1152 + 1521 + 1960 + 2475 + 3072 + 3757 + 4536 + 5415 + 6400 + 7497 + 8712", "x2": "abs mul mul mod INT- 4 n n abs n", "tree": "abs((((-4 mod n) mul n) mul abs(n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 5 + 0 - 10 - 9 + 1 - 9 + 8 + 7 - 18 - 20 - 19 - 21 - 20 - 23 - 25 - 25 - 25 - 28 - 26 - 29 - 31 - 29 - 32 - 33 - 34 - 36 - 35 - 37 - 36 - 39", "x2": "sub INT- 1 0 add n mod x_0_8 sub sign sub relu INT- 8 INT+ 7 INT+ 3", "tree": "(-10 sub (n add (x_0_8 mod (sign((relu(-8) sub 7)) sub 3))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 3 + 4 + 6 + 6 - 10 + 8 - 4 - 112 - 144 - 296 - 1168 - 1048 - 2704 - 9400 - 5856 - 1 8344 - 6 8272 - 1 9000 - 12 1792 - 48 1480 + 7 3392 - 83 4008 - 341 1808 + 105 1544 - 621 6304 - 2437 1704 + 314 3344 - 5149 2104 - 1 7495 7712", "x2": "mul INT+ 8 sub mul INT- 3 x_0_7 sub abs sub n x_0_3 INT- 5", "tree": "(8 mul ((-3 mul x_0_7) sub (abs((n sub x_0_3)) sub -5)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 6 - 1 + 3 - 24 - 5 + 18 - 168 - 40 + 162 - 1680 - 440 + 1944 - 2 1840 - 6160 + 2 9160 - 34 9440 - 10 4720 + 52 4880 - 663 9360 - 209 4400 + 1102 2480 - 1 4606 5920 - 4817 1200 + 2 6453 9520 - 36 5164 8000", "x2": "mul x_0_3 relu abs n", "tree": "(x_0_3 mul relu(abs(n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 4 - 5 + 1 + 2 + 1 - 5 - 62 - 72 - 26 - 44 - 113 - 125 - 139 - 165 - 135 - 159 - 292 - 316 - 235 - 277 - 370 - 396 - 482 - 528 - 411 - 459 - 723 - 757", "x2": "sub x_0_6 add sub relu sqr n sub sign abs x_0_2 add n mod INT+ 9 n x_0_2", "tree": "(x_0_6 sub ((relu((n)**2) sub (sign(abs(x_0_2)) sub (n add (9 mod n)))) add x_0_2))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 9 + 4 + 10 - 75 + 15 + 56 - 540 + 89 + 375 - 3798 + 604 + 2605 - 2 6607 + 4206 + 1 8212 - 18 6273 + 2 9417 + 12 7458 - 130 3938 + 20 5891 + 89 2177 - 912 7596 + 144 1206 + 624 5207 - 6389 3205", "x2": "sub mul add INT+ 8 abs abs n idiv INT- 3 n mul x_0_3 INT- 7", "tree": "(((8 add abs(abs(n))) mul (-3 idiv n)) sub (x_0_3 mul -7))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 4 + 27 + 64 + 675 + 2304 + 3 3075 + 14 7456 + 267 9075 + 1474 5600 + 3 2416 8075 + 21 2336 6400 + 547 8440 4675 + 4161 7981 4400 + 12 3264 9105 1875 + 106 5420 3248 6400 + 3562 3559 1399 1875 + 3 4519 6185 2559 3600 + 128 6010 4849 5106 6875 + 1380 7847 4102 3744 0 + 5 6713 623 8634 2049 1875 + 66 8299 8146 5549 2096 0 + 3000 1210 23 7494 4020 1875 + 3 8494 693 2415 6344 7296 0", "x2": "mul x_0_2 sqr n", "tree": "(x_0_2 mul (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 + 4 - 7 + 10 - 12 - 2 - 14 + 2 - 21 - 12 - 25 - 10 - 34 - 26 - 40 - 26 - 51 - 44 - 59 - 46 - 72 - 66 - 82 - 70 - 97 - 92", "x2": "sub x_0_4 mul n sign mul abs add idiv n INT- 8 x_0_3 relu INT+ 8", "tree": "(x_0_4 sub (n mul sign((abs(((n idiv -8) add x_0_3)) mul relu(8)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 6 + 0 + 0 - 7 - 2 + 2 + 8 - 9 - 7 + 0 + 0 + 6 + 12 - 19 - 12 - 9 - 7 + 0 + 0 + 6 + 12 - 6 + 0 - 9 - 7 + 0 + 0 + 6 + 12 - 1 + 0", "x2": "mod x_0_8 sub n sqr add mul x_0_3 idiv abs x_0_10 sub INT- 4 mul INT+ 1 0 x_0_2 x_0_2", "tree": "(x_0_8 mod (n sub (((x_0_3 mul (abs(x_0_10) idiv (-4 sub (10 mul x_0_2)))) add x_0_2))**2))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 + 148 + 3556 + 8 5348 + 204 8356 + 4916 548 + 11 7985 3156 + 283 1647 5748 + 6795 9541 7956 + 16 3102 9003 948 + 391 4469 6074 2756 + 9394 7270 5782 6148 + 22 5473 4493 8782 7556 + 541 1362 7853 786 1348 + 1 2987 2706 8473 8867 2356 + 31 1694 4964 3373 2813 6548 + 748 667 9144 958 7527 7156 + 1 7953 6029 9458 3010 665 1748 + 43 886 4718 6999 2241 5964 1956 + 1034 1275 3248 7981 3798 3140 6948 + 2 4819 607 7971 1553 1159 5376 6756 + 59 5657 4587 1307 7274 7828 9040 2148 + 1429 5779 91 1385 4594 7893 6965 1556", "x2": "add abs INT+ 4 mul mul mul x_0_1 relu INT+ 8 INT+ 3 sign x_0_1", "tree": "(abs(4) add (((x_0_1 mul relu(8)) mul 3) mul sign(x_0_1)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 32 - 280 - 2272 - 1 8216 - 14 5776 - 116 6264 - 933 176 - 7464 1480 - 5 9713 1920 - 47 7705 5448 - 382 1644 3680 - 3057 3154 9544 - 2 4458 5239 6464 - 19 5668 1917 1832 - 156 5345 5337 4784 - 1252 2764 2699 8408 - 1 18 2114 1598 7408 - 8 145 6913 2789 9416 - 64 1165 5306 2319 5488 - 512 9324 2449 8556 4072 - 4103 4593 9598 8451 2752 - 3 2827 6751 6790 7610 2200", "x2": "mul INT- 8 add n abs x_0_1", "tree": "(-8 mul (n add abs(x_0_1)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign mod abs n INT- 1 0", "tree": "sign((abs(n) mod -10))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 4 - 2 - 10 - 20 - 32 - 46 - 62 - 80 - 100 - 122 - 146 - 172 - 200 - 230 - 262 - 296 - 332 - 370 - 410 - 452 - 496", "x2": "sub INT+ 1 0 idiv add n mul abs n n INT+ 1", "tree": "(10 sub ((n add (abs(n) mul n)) idiv 1))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 9 - 14 - 44 + 28 + 44 - 36 - 184 + 72 + 184 - 80 - 744 + 160 + 744 - 168 - 2984 + 336 + 2984 - 344 - 1 1944 + 688 + 1 1944 - 696", "x2": "add mul mod n INT- 4 x_0_2 mul abs relu add sub INT+ 9 sign INT+ 7 x_0_2 INT- 1", "tree": "(((n mod -4) mul x_0_2) add (abs(relu(((9 sub sign(7)) add x_0_2))) mul -1))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 3 + 7 - 5 + 7 - 1 - 5 + 11 - 13 + 7 + 3 - 17 + 23 - 21 + 3 + 19 - 41 + 43 - 25 - 17 + 59 - 85 + 67 - 9 - 77", "x2": "sub sub x_0_3 x_0_1 sign n", "tree": "((x_0_3 sub x_0_1) sub sign(n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 3 + 10 - 4 - 8 - 7 + 0 + 1 + 8 - 1 - 1 + 9 - 1 - 1 - 1 - 1 + 0 + 7 - 1 - 1 + 8 - 1 - 1 - 1 - 1 - 1 + 6 - 1 - 1 + 7 - 1", "x2": "sub relu x_0_9 sign relu sign add INT- 3 x_0_8", "tree": "(relu(x_0_9) sub sign(relu(sign((-3 add x_0_8)))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 8 - 7 + 9 + 1 + 4 + 2 - 1 - 3 + 1 - 1 - 7 + 9 + 1 + 4 + 2 - 1 - 3 + 1 - 1 - 7 + 9 + 1 + 4 + 2 - 1 - 3 + 1 - 1 - 7 + 9 + 1 + 4", "x2": "add relu sub idiv n mod sign abs INT+ 1 add x_0_10 n relu abs n x_0_9", "tree": "(relu(((n idiv (sign(abs(1)) mod (x_0_10 add n))) sub relu(abs(n)))) add x_0_9)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 7 + 2 - 6 + 7 + 2 + 0 + 7 + 2 + 0 + 7 + 2 + 0 + 7 + 2 + 0 + 7 + 2 + 0 + 7 + 2 + 0 + 7 + 2 + 0 + 7", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 10 - 2 - 1 - 3 - 6 + 7 + 5 + 3 + 30 + 99 + 1020 + 286 + 1064 + 2145 + 2560 + 3689 + 468 + 266 + 6900 + 441 - 1 2870 + 115 + 1584 + 9225 + 5148 + 1458 + 4 7488 + 6235 - 7170 - 10 3013", "x2": "mul n mul sign n mod add x_0_1 sub x_0_9 n sub mul n n mod x_0_5 x_0_6", "tree": "(n mul (sign(n) mul ((x_0_1 add (x_0_9 sub n)) mod ((n mul n) sub (x_0_5 mod x_0_6)))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 10 - 3 + 10 - 2 + 3 - 3 + 3 + 9 - 5 + 0 + 3 - 11 - 4 + 9 - 3 + 2 - 4 + 2 + 8 - 6 - 1 + 2 - 12 - 5 + 8 - 4 + 1 - 5 + 1 + 7 - 7 - 2 + 1", "x2": "sub x_0_11 sign idiv sub relu relu INT+ 6 relu INT- 6 n", "tree": "(x_0_11 sub sign(((relu(relu(6)) sub relu(-6)) idiv n)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 1 - 2 - 7 + 4 + 3 + 29 + 14 + 18 + 33 + 61 + 61 + 437 + 619 + 315 + 4818 + 9297 + 2848 + 6 2648 + 17 6658 + 2 2800 + 50 1201 + 423 9810 + 19 + 1102 6442 + 8055 6411", "x2": "add add INT- 4 sub mul mod x_0_2 sub n INT- 4 abs x_0_3 idiv INT+ 1 0 n n", "tree": "((-4 add (((x_0_2 mod (n sub -4)) mul abs(x_0_3)) sub (10 idiv n))) add n)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "relu mul relu n mod n mul INT+ 4 sqr add n mul n n", "tree": "relu((relu(n) mul (n mod (4 mul ((n add (n mul n)))**2))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 2 + 1 + 2 + 7 - 2 + 0 - 3 + 13 + 7 + 8 - 10 + 0 - 4 + 16 - 11 - 2 - 12 + 20 + 0 + 13 - 4 + 6 - 17 + 9 - 18 + 8 - 24 + 11", "x2": "sub abs sub add INT+ 8 INT+ 1 0 add x_0_7 x_0_3 abs n", "tree": "(abs(((8 add 10) sub (x_0_7 add x_0_3))) sub abs(n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 4 + 8 + 1 + 124 + 8 + 1 + 124 + 8 + 1 + 124 + 8 + 1 + 124 + 8 + 1 + 124 + 8 + 1 + 124 + 8 + 1 + 124 + 8 + 1 + 124", "x2": "mod x_0_3 mul add sqr n abs sqr n n", "tree": "(x_0_3 mod (((n)**2 add abs((n)**2)) mul n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 7 - 4 - 6 - 9 - 3 - 9 - 9 + 17 + 14 + 0 + 0 + 4 + 10 + 6 + 0 + 0 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0", "x2": "relu add sign sqr x_0_3 sub n add add relu abs n x_0_7 x_0_2", "tree": "relu((sign((x_0_3)**2) add (n sub ((relu(abs(n)) add x_0_7) add x_0_2))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 7 - 14 - 28 - 56 - 112 - 224 - 448 - 896 - 1792 - 3584 - 7168 - 1 4336 - 2 8672 - 5 7344 - 11 4688 - 22 9376 - 45 8752 - 91 7504 - 183 5008 - 367 16 - 734 32 - 1468 64 - 2936 128", "x2": "sub sub x_0_1 sign n sub sign sub relu INT- 9 abs INT+ 1 0 x_0_1", "tree": "((x_0_1 sub sign(n)) sub (sign((relu(-9) sub abs(10))) sub x_0_1))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 7 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841", "x2": "sqr relu sqr sub x_0_1 add n x_0_1", "tree": "(relu(((x_0_1 sub (n add x_0_1)))**2))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 4 + 8 - 4 - 8 + 9 - 5 + 0 + 0 + 8 - 8 + 8 + 8 - 8 + 8 - 8 - 8 - 8 + 8 - 8 - 8 + 8 - 8 + 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8", "x2": "mul INT- 8 mul abs sub INT- 1 idiv mod sign add x_0_6 INT+ 5 mod INT+ 5 n n sign x_0_8", "tree": "(-8 mul (abs((-1 sub ((sign((x_0_6 add 5)) mod (5 mod n)) idiv n))) mul sign(x_0_8)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 3 + 6 - 15 + 12 + 1 + 10 + 63 + 13 + 9 + 14 + 17 + 16 + 16 + 17 + 19 + 19 + 20 + 21 + 22 + 23 + 24 + 25 + 26 + 26", "x2": "add n idiv add sqr INT+ 7 n x_0_2", "tree": "(n add (((7)**2 add n) idiv x_0_2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 3 + 6 + 7 + 4 + 3 + 6 + 7 + 4 + 3 + 6 + 7 + 4 + 3 + 6 + 7 + 4 + 3 + 6 + 7 + 4 + 3 + 6 + 7", "x2": "sub INT+ 1 0 x_0_2", "tree": "(10 sub x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign idiv n mul idiv relu sqr relu n n mod n INT+ 5", "tree": "sign((n idiv ((relu((relu(n))**2) idiv n) mul (n mod 5))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 10 + 8 - 8 + 3 + 2 - 6 + 7 - 112 + 5 - 79 + 108 + 38 + 36 - 883 - 1 3744 - 568 - 6100 - 9900 - 529 - 8667 - 91 3828 - 1 8906 7414 - 38 4169 - 3737 2120 - 9813 3372 - 36 3994 - 8344 5138 - 8367 9418 6030 - 3 5746 4893 891 3660", "x2": "sub mul INT+ 9 add n x_0_6 sqr sub INT+ 6 x_0_7", "tree": "((9 mul (n add x_0_6)) sub ((6 sub x_0_7))**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 - 5 - 7 + 7 + 1 + 36 + 25 + 49 + 49 + 1 + 1296 + 625 + 2401 + 2401 + 1 + 167 9616 + 39 625 + 576 4801 + 576 4801 + 1 + 2 8211 990 7456 + 1525 8789 625 + 33 2329 3056 9601 + 33 2329 3056 9601 + 1 + 7 9586 6110 9946 4008 8439 1936 + 232 8306 4365 3869 6289 625", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 0 - 3 + 4 + 5 + 0 + 0 + 8 + 9 + 0 + 0 + 12 + 13 + 0 + 0 + 16 + 17 + 0 + 0 + 20 + 21 + 0 + 0 + 24 + 25 + 0", "x2": "relu mod n mul n add x_0_4 mod sub INT+ 9 sqr sign n sub INT- 2 n", "tree": "relu((n mod (n mul (x_0_4 add ((9 sub (sign(n))**2) mod (-2 sub n))))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 5 + 4 - 4 - 7 + 10 + 9 - 4 - 3 - 1 - 2 - 5 - 6 - 5 - 3 - 3 - 2 - 2 - 4 - 4 - 4 - 3 - 3 - 2 - 2 - 3 - 3 - 3 - 3", "x2": "sub idiv x_0_4 n abs idiv x_0_7 mod INT- 5 INT+ 7", "tree": "((x_0_4 idiv n) sub abs((x_0_7 idiv (-5 mod 7))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 7 - 21 - 49 - 105 - 217 - 441 - 889 - 1785 - 3577 - 7161 - 1 4329 - 2 8665 - 5 7337 - 11 4681 - 22 9369 - 45 8745 - 91 7497 - 183 5001 - 367 9 - 734 25 - 1468 57 - 2936 121", "x2": "add sub INT- 7 abs add relu x_0_1 x_0_1 x_0_1", "tree": "((-7 sub abs((relu(x_0_1) add x_0_1))) add x_0_1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 44 - 342 - 2806 - 2 8120 - 33 7488 - 472 4866 - 7559 7874 - 13 6076 1732 - 272 1523 4620 - 5987 3516 1598 - 14 3696 4387 8286 - 373 6107 4083 5344 - 1 461 1007 4338 9512 - 31 3833 223 168 5210 - 1004 2656 7136 5392 6538 - 3 4145 328 2642 3350 2076 - 122 9221 1817 5124 607 4484 - 4671 404 9065 4714 3083 102 - 18 6841 6196 2618 8572 3320 3750 - 784 7348 242 9992 37 9455 7128 - 3 4528 3313 691 9648 1669 6051 3216 - 158 8303 2401 1830 3815 6801 8360 7474", "x2": "add mul INT+ 1 0 INT- 9 add mul add add n x_0_1 x_0_1 n n", "tree": "((10 mul -9) add ((((n add x_0_1) add x_0_1) mul n) add n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 4 + 1 - 6 + 10 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv x_0_5 sqr sub relu x_0_2 n", "tree": "(x_0_5 idiv ((relu(x_0_2) sub n))**2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 10 - 2 + 7 + 3 + 3 + 0 + 6 - 4 - 5 - 5 - 1 - 1 - 1 - 5 - 1 - 1 - 1 - 5 - 1 - 1 - 1 - 5 - 1 - 1 - 1 - 5 - 1 - 1 - 1 - 5", "x2": "mod sign idiv n sub x_0_7 x_0_8 INT- 6", "tree": "(sign((n idiv (x_0_7 sub x_0_8))) mod -6)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 5 + 7 - 10 + 5 + 1 + 4 - 7 - 4 + 1296 + 6400 + 9801 + 5184 + 676 + 4900 + 8100 + 2304 + 4 8615 8401 + 132 7518 7524 + 346 8459 2644 + 107 5369 0 + 2 212 3089 + 116 2558 3684 + 347 1626 329 + 30 6030 2400 + 1 4771 8744 8969 9600 2500 + 1191 3188 8184 9669 6292 2500 + 8770 228 4906 2497 2200 2225 + 906 6320 9331 8841 8592 784 + 3435 7998 2928 7555 2100 + 1216 3877 6415 2443 6130 2500", "x2": "sqr add mul n x_0_8 n", "tree": "(((n mul x_0_8) add n))**2", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 7 + 2 - 1 + 4 - 4 - 6 + 0 + 10 - 7 - 70 + 22 - 12 + 52 - 56 - 90 + 0 + 170 - 126 - 1330 + 440 - 252 + 1144 - 1288 - 2160 + 0 + 4420 - 3402 - 3 7240 + 1 2760 - 7560 + 3 5464", "x2": "mul n x_0_9", "tree": "(n mul x_0_9)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 5 + 10 - 6 + 21 + 61 + 109 + 259 + 639 + 1495 + 3507 + 8291 + 1 9571 + 4 6155 + 10 8891 + 25 6923 + 60 6155 + 143 91 + 337 4027 + 796 363 + 1878 907 + 4430 9867 + 1 454 459 + 2 4664 2731 + 5 8190 5195 + 13 7289 1307", "x2": "sub mul abs add x_0_1 x_0_3 INT+ 2 sign n", "tree": "((abs((x_0_1 add x_0_3)) mul 2) sub sign(n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 6 + 1 + 4 + 5 + 4 + 1 + 6 + 9 + 0 + 9 + 6 + 1 + 4 + 5 + 4 + 1 + 6 + 9 + 0 + 9 + 6", "x2": "mod sqr mul INT+ 7 n INT+ 1 0", "tree": "(((7 mul n))**2 mod 10)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 72 - 243 - 832 - 1750 - 3240 - 5488 - 8704 - 1 3122 - 1 9000 - 2 6620 - 3 6288 - 4 8334 - 6 3112 - 8 1000 - 10 2400 - 12 7738 - 15 7464 - 19 2052 - 23 2000 - 27 7830 - 33 88", "x2": "mul n mul mul n n sub INT- 6 add mod INT+ 3 mul relu sign n n n", "tree": "(n mul ((n mul n) mul (-6 sub ((3 mod (relu(sign(n)) mul n)) add n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 1 + 61 + 55 + 47 + 37 + 25 + 11 + 59 + 41 + 21 + 63 + 39 + 13 + 49 + 19 + 51 + 17 + 45 + 7 + 31 + 53", "x2": "mod sub n sub sqr n INT+ 3 sqr INT+ 8", "tree": "((n sub ((n)**2 sub 3)) mod (8)**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 8 + 2 - 2 - 10 + 8 + 2 + 6 + 6 + 8 + 7 - 253 + 1596 - 1937 - 5026 + 6855 + 1744 + 5525 + 7 8750 + 73 3267 + 69 8900 - 1 521 3318 + 9 2843 1526 - 9 790 4806 - 4 7260 4808 + 396 356 2900 + 989 9973 6602 + 2775 4471 1952 + 700 8364 7455 5028 + 5 9183 9894 4384 8024 + 5 490 953 9965 8030 - 1370 8914 611 6875 1891 + 36 1076 3885 9991 4638 6080", "x2": "add n mul x_0_10 abs mul mul n add relu n sub x_0_7 x_0_9 INT+ 3", "tree": "(n add (x_0_10 mul abs(((n mul (relu(n) add (x_0_7 sub x_0_9))) mul 3))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 1 - 10 + 5 - 8 + 2 - 2 - 1 - 10 + 5 - 8 + 2 - 2 - 1 - 10 + 5 - 8 + 2 - 2 - 1 - 10 + 5 - 8 + 2 - 2 - 1 - 10 + 5 - 8", "x2": "add idiv mod n n n x_0_6", "tree": "(((n mod n) idiv n) add x_0_6)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 7 + 1 + 0 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign idiv add x_0_2 sqr x_0_2 sub relu sub mod INT- 6 x_0_4 INT+ 9 n", "tree": "sign(((x_0_2 add (x_0_2)**2) idiv (relu(((-6 mod x_0_4) sub 9)) sub n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 9 + 7 + 8 - 1 + 5 - 9 + 8 + 10 + 7 + 9 + 2 - 4 + 10 - 7 - 9 - 6 - 10 - 1 + 5 - 9 + 8 + 10 + 5 + 11 + 0 - 6 + 8 - 9 - 9 - 4 - 12 + 1", "x2": "sub sign add sub idiv n n n add mul sign sign INT+ 1 0 x_0_11 n x_0_7", "tree": "(sign((((n idiv n) sub n) add ((sign(sign(10)) mul x_0_11) add n))) sub x_0_7)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 7 + 9 + 19 + 29 + 49 + 71 + 105 + 143 + 195 + 253 + 327 + 409 + 509 + 619 + 749 + 891 + 1055 + 1233 + 1435 + 1653 + 1897 + 2159 + 2449 + 2759", "x2": "add n add sqr n x_0_2", "tree": "(n add ((n)**2 add x_0_2))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 6 + 12 - 44 + 122 - 378 + 1120 - 3376 + 1 110 - 3 350 + 9 1028 - 27 3108 + 81 9298 - 245 7922 + 737 3736 - 2212 1240 + 6636 3686 - 1 9909 1094 + 5 9727 3244 - 17 9181 9772 + 53 7545 9274 - 161 2637 7866 + 483 7913 3552 - 1451 3740 704", "x2": "sub n mul add n x_0_1 add sqr mod mul n mod mul sqr x_0_2 INT+ 1 0 INT- 5 x_0_1 INT+ 3", "tree": "(n sub ((n add x_0_1) mul ((((n mul (((x_0_2)**2 mul 10) mod -5)) mod x_0_1))**2 add 3)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 8 - 3 + 3 + 4 + 10 + 7 + 2 + 8 + 0 + 3 + 4 + 10 + 7 + 2 + 8 + 0 + 3 + 4 + 10 + 7 + 2 + 8 + 0 + 3 + 4 + 10 + 7 + 2", "x2": "mod relu x_0_7 mul sub n INT- 8 n", "tree": "(relu(x_0_7) mod ((n sub -8) mul n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 4 + 2 - 7 + 10 - 3 + 8 + 1 - 6 + 3 + 7 + 4 + 8 + 5 + 9 + 6 + 10 + 7 + 11 + 8 + 12 + 9 + 13 + 10 + 14 + 11 + 15 + 12 + 16 + 13 + 17", "x2": "abs sub n abs add mod sqr sqr x_0_8 x_0_8 x_0_1", "tree": "abs((n sub abs(((((x_0_8)**2)**2 mod x_0_8) add x_0_1))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3", "x2": "idiv relu n INT- 1 0", "tree": "(relu(n) idiv -10)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 3 + 2 + 1 + 0 + 5 + 2 + 7 + 4 + 1 + 6 + 3 + 0 + 5 + 2 + 7 + 4 + 1 + 6 + 3 + 0 + 5 + 2", "x2": "mod mod sub INT+ 5 n add relu x_0_1 n INT+ 8", "tree": "(((5 sub n) mod (relu(x_0_1) add n)) mod 8)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 3 - 1 - 4 - 5 - 9 - 14 - 23 - 37 - 60 - 97 - 157 - 254 - 411 - 665 - 1076 - 1741 - 2817 - 4558 - 7375 - 1 1933 - 1 9308 - 3 1241 - 5 549 - 8 1790", "x2": "add x_0_2 x_0_1", "tree": "(x_0_2 add x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256 + 279", "x2": "add x_0_1 relu n", "tree": "(x_0_1 add relu(n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 + 5 + 7 + 8 + 7 + 7 + 6 + 7 + 7 + 6 + 7 + 7 + 6 + 7 + 7 + 6 + 7 + 7 + 6 + 7 + 7 + 6 + 7 + 7", "x2": "sub mod sqr add mul n mod x_0_1 INT+ 1 0 relu sqr x_0_2 x_0_1 INT- 6", "tree": "(((((n mul (x_0_1 mod 10)) add relu((x_0_2)**2)))**2 mod x_0_1) sub -6)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 7 + 8 + 18 + 30 + 98 + 200 + 774 + 1790 + 7730 + 1 9680 + 9 2750 + 25 5830 + 129 8490 + 383 7440 + 2077 5830 + 6523 6470 + 3 7396 4930 + 12 3949 2920 + 74 7929 8590 + 260 2935 1310 + 1645 4456 8970 + 5986 7508 120 + 3 9490 6965 5270", "x2": "sub abs mul abs n x_0_2 INT+ 1 0", "tree": "(abs((abs(n) mul x_0_2)) sub 10)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 3 - 6 - 5 + 6 + 1 + 2 - 6 - 16 - 16 - 6 - 12 - 12 - 21 - 32 - 33 - 24 - 31 - 32 - 42 - 54 - 56 - 48 - 56 - 58 - 69 - 82 - 85", "x2": "sub add sub x_0_6 relu add INT+ 8 n sqr INT- 3 INT+ 2", "tree": "(((x_0_6 sub relu((8 add n))) add (-3)**2) sub 2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "mul abs n sqr n", "tree": "(abs(n) mul (n)**2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 8 + 1 + 9 - 8 - 10 - 7 - 4 - 3 + 13 + 3 + 13 + 22 + 6 + 5 + 9 + 13 + 15 + 32 + 23 + 34 + 44 + 29 + 29 + 34 + 39 + 42 + 60 + 52 + 64 + 75", "x2": "add relu n x_0_9", "tree": "(relu(n) add x_0_9)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "relu mul sqr n n", "tree": "relu(((n)**2 mul n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 22 + 60 + 116 + 190 + 282 + 392 + 520 + 666 + 830 + 1012 + 1212 + 1430 + 1666 + 1920 + 2192 + 2482 + 2790 + 3116 + 3460 + 3822 + 4202", "x2": "add n add n mul abs relu abs INT+ 9 sub sqr n n", "tree": "(n add (n add (abs(relu(abs(9))) mul ((n)**2 sub n))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 6 + 2 + 6 - 10 - 7 + 34 + 166 + 294 + 4025 + 7666 + 5 4126 + 24 6342 + 4025 + 723 4402 + 15 1254 + 1 1599 7142 + 484 4921 + 27 9116 6386 + 1307 1102 + 150 221 7990 + 2 8369 5609 + 6428 8580 1650 + 68 2176 6294 + 13 7298 9932 326 + 366 6644 9305 + 586 4519 2346 9874 + 1 2779 2534 2998", "x2": "add mul add INT+ 8 idiv x_0_2 INT+ 3 mul INT+ 8 mod sub x_0_1 sub x_0_6 sqr n n x_0_4", "tree": "(((8 add (x_0_2 idiv 3)) mul (8 mul ((x_0_1 sub (x_0_6 sub (n)**2)) mod n))) add x_0_4)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 + 7 - 4 + 11 + 0 + 15 + 4 + 19 + 8 + 23 + 12 + 27 + 16 + 31 + 20 + 35 + 24 + 39 + 28 + 43 + 32 + 47 + 36 + 51", "x2": "sub x_0_2 INT- 4", "tree": "(x_0_2 sub -4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 7 + 0 + 4 + 1 + 3 + 0 + 2 + 4 + 1 + 3 + 0 + 2 + 4 + 1 + 3 + 0 + 2 + 4 + 1 + 3 + 0 + 2 + 4", "x2": "mod sub sign x_0_1 sub x_0_2 add n sub add n x_0_2 mul INT- 1 mul n INT- 1 0 INT+ 5", "tree": "((sign(x_0_1) sub (x_0_2 sub (n add ((n add x_0_2) sub (-1 mul (n mul -10)))))) mod 5)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 9 + 5 + 9 - 13 + 1 + 5 - 17 - 3 + 1 - 21 - 7 - 3 - 25 - 11 - 7 - 29 - 15 - 11 - 33 - 19 - 15 - 37 - 23 - 19", "x2": "sub x_0_3 mod relu INT+ 4 n", "tree": "(x_0_3 sub (relu(4) mod n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 + 4 + 2 + 8 + 6 + 2 + 0 - 18 - 6 - 9 - 4 - 7 - 12 - 15 - 34 - 23 - 27 - 23 - 27 - 33 - 37 - 57 - 47 - 52 - 49 - 54 - 61 - 66", "x2": "sub x_0_7 n", "tree": "(x_0_7 sub n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 8 - 8 + 0 + 92 + 84 - 10 + 0 + 96 + 82 - 14 + 1 + 98 + 82 - 15 + 3 + 99 + 79 - 14 + 7 + 100 + 76 - 16 + 6 + 99 + 80", "x2": "add add sub relu INT+ 1 x_0_2 sqr INT+ 9 abs mod x_0_3 INT+ 5", "tree": "(((relu(1) sub x_0_2) add (9)**2) add abs((x_0_3 mod 5)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 24 + 120 + 840 + 7560 + 8 3160 + 108 1080 + 1621 6200 + 2 7567 5400 + 52 3783 2600 + 1099 9448 4600 + 2 5298 7314 5800 + 63 2468 2864 5000 + 1707 6643 7341 5000 + 4 9522 2668 2903 5000 + 153 5190 2717 8 5000 + 5066 1278 9661 280 5000 + 17 7314 4763 8135 9817 5000 + 656 635 6261 1031 3247 5000 + 2 5586 4789 4183 221 6652 5000 + 104 9045 6366 1503 9088 2752 5000 + 4510 8962 3744 4668 795 8357 5000 + 20 2990 3306 8501 63 5812 6087 5000", "x2": "mul x_0_1 idiv add mod sign idiv sub relu x_0_1 mul n x_0_1 n n n idiv x_0_1 x_0_1", "tree": "(x_0_1 mul (((sign(((relu(x_0_1) sub (n mul x_0_1)) idiv n)) mod n) add n) idiv (x_0_1 idiv x_0_1)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 14 - 5 + 21 + 4 + 32 + 17 + 47 + 34 + 66 + 55 + 89 + 80 + 116 + 109 + 147 + 142 + 182 + 179 + 221 + 220 + 264 + 265", "x2": "sub sqr n x_0_1", "tree": "((n)**2 sub x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 + 1 + 6 + 7 + 10 + 1 + 6 + 7 + 10 + 1 + 6 + 7 + 10 + 1 + 6 + 7 + 10 + 1 + 6 + 7 + 10 + 1 + 6 + 7 + 10", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 3 - 10 + 252 + 70 - 168 + 1 2691 + 4368 - 1 17 + 88 9070 + 33 7183 - 84 420 + 8090 6553 + 3304 5306 - 8824 2525 + 90 6153 5728 + 39 3239 3437 - 111 1855 5882 + 1 2051 8425 4351 + 5505 3508 3980 - 1 6344 2771 1567 + 185 5983 7517 3442 + 88 6361 4852 4483 - 274 5838 5553 9224 + 3 2479 7156 5535 6725", "x2": "mul INT+ 7 mul mul sign INT+ 2 add n x_0_3 n", "tree": "(7 mul ((sign(2) mul (n add x_0_3)) mul n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 - 1 - 2 - 10 - 5 + 4 - 3 - 7 + 6 + 1 + 5 + 14 + 15 + 15 + 17 + 22 + 19 + 16 + 20 + 25 + 18 + 23 + 23 + 19 + 16 + 24 + 22 + 28 + 30 + 31 + 28 + 11 + 24", "x2": "sub n mod mul sign idiv sign sign sign n sqr sign n x_0_5 x_0_12", "tree": "(n sub ((sign((sign(sign(sign(n))) idiv (sign(n))**2)) mul x_0_5) mod x_0_12))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "12"}
{"x1": "+ 9800 + 2 4200 + 5 7800 + 12 5000 + 24 5000 + 44 1800 + 74 4200 + 118 5800 + 180 5000 + 264 5000 + 375 3800 + 518 4200 + 699 3800 + 924 5000 + 1200 5000 + 1534 5800 + 1934 4200 + 2408 1800 + 2964 5000 + 3612 5000 + 4361 7800 + 5222 4200", "x2": "mul INT+ 2 sqr mul INT+ 1 0 add sub n INT- 5 sqr abs n", "tree": "(2 mul ((10 mul ((n sub -5) add (abs(n))**2)))**2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 7 + 24 + 167 + 1444 + 1 2927 + 11 6264 + 104 6287 + 941 6484 + 8474 8247 + 7 6273 4104 + 68 6460 6807 + 617 8146 1124 + 5560 3314 9967 + 5 42 9834 9544 + 45 386 8514 5727 + 405 3481 6631 1364 + 3648 1334 9680 2087 + 3 2833 2014 7121 8584 + 29 5498 8132 4096 7047 + 265 9489 3191 6870 3204 + 2393 5403 8725 1832 8607 + 2 1541 8634 8526 6495 7224", "x2": "sub INT- 9 sub x_0_1 mul add INT+ 5 INT+ 5 sub x_0_1 n", "tree": "(-9 sub (x_0_1 sub ((5 add 5) mul (x_0_1 sub n))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 + 6 - 1 + 8 + 1 + 8 - 1 + 6 - 1 + 8 + 1 + 8 - 1 + 6 - 1 + 8 + 1 + 8 - 1 + 6 - 1 + 8 + 1 + 8 - 1", "x2": "sub INT+ 7 x_0_3", "tree": "(7 sub x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 5 + 9 + 10 + 14 + 15 + 19 + 20 + 24 + 25 + 29 + 30 + 34 + 35 + 39 + 40 + 44 + 45 + 49 + 50 + 54 + 55 + 59 + 60", "x2": "relu sub x_0_2 INT- 5", "tree": "relu((x_0_2 sub -5))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 5 + 9 + 3 - 5 + 8 + 4 - 72 - 135 - 240 - 132 - 2592 - 5265 - 1 80 - 5940 - 12 4416 - 26 8515 - 54 4320 - 33 8580 - 746 4960 - 1691 6445 - 3592 5120 - 2336 2020 - 5 3747 7120 - 12 6873 3375 - 28 215 9360 - 18 9232 3620 - 451 4807 8080 - 1103 7980 3625", "x2": "mul INT- 3 abs mul mul sign sub x_0_5 mul mul x_0_7 add INT- 5 x_0_7 INT- 7 abs x_0_4 n", "tree": "(-3 mul abs(((sign((x_0_5 sub ((x_0_7 mul (-5 add x_0_7)) mul -7))) mul abs(x_0_4)) mul n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254 + 277", "x2": "abs mul add abs n x_0_1 INT+ 1", "tree": "abs(((abs(n) add x_0_1) mul 1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 8 + 2 - 9 + 3 + 8 + 2 + 0 + 3 + 8 + 2 + 0 + 3 + 8 + 2 + 0 + 3 + 8 + 2 + 0 + 3 + 8 + 2 + 0 + 3 + 8", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 4 + 0 + 8 + 20 + 36 + 56 + 80 + 108 + 140 + 176 + 216 + 260 + 308 + 360 + 416 + 476 + 540 + 608 + 680 + 756 + 836 + 920 + 1008 + 1100 + 1196 + 1296 + 1400", "x2": "abs mul n mul relu INT+ 2 sub INT+ 3 relu n", "tree": "abs((n mul (relu(2) mul (3 sub relu(n)))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 4 + 24 + 16 + 120 + 96 + 840 + 768 + 7560 + 7680 + 8 3160 + 9 2160 + 108 1080 + 129 240 + 1621 6200 + 2064 3840 + 2 7567 5400 + 3 7158 9120 + 52 3783 2600 + 74 3178 2400 + 1099 9448 4600 + 1634 9921 2800 + 2 5298 7314 5800 + 3 9239 8110 7200 + 63 2468 2864 5000 + 102 235 878 7200 + 1707 6643 7341 5000 + 2856 6582 4604 1600 + 4 9522 2668 2903 5000 + 8 5699 7473 8124 8000", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 - 1 + 13 - 40 - 205 - 1388 - 1 1043 - 9 9310 - 99 3005 - 1092 2940 - 1 3107 5143 - 17 397 6698 - 238 5567 3585 - 3578 3510 3560 - 5 7253 6165 6715 - 97 3311 4816 3878 - 1751 9606 6694 9493 - 3 3287 2526 7204 20 - 66 5745 534 4080 15 - 1398 646 1222 5679 9890 - 3 757 4214 6896 4959 7113 - 70 7420 6937 8619 4073 3088 - 1697 8096 6508 6865 7759 3555 - 4 2445 2416 2717 1644 3983 8270 - 110 3576 2823 646 2754 3579 4365 - 2979 6559 6222 7449 4367 6644 7148 - 8 3430 3669 4236 8584 2294 6051 9383 - 241 9480 6413 2868 8942 6543 5506 1290", "x2": "sub sqr n relu add relu n sub mul abs x_0_1 relu n INT+ 5", "tree": "((n)**2 sub relu((relu(n) add ((abs(x_0_1) mul relu(n)) sub 5))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 0 + 1 + 2 + 3", "x2": "mod sub add sub add n n INT+ 2 idiv n n relu n INT+ 8", "tree": "(((((n add n) sub 2) add (n idiv n)) sub relu(n)) mod 8)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 9 - 9 + 2 + 19 - 1 - 16 + 21 + 17 - 20 + 5 + 38 - 4 - 32 + 43 + 33 - 42 + 11 + 76 - 10 - 64 + 87 + 65 - 86 + 23 + 152 - 22 - 128 + 175 + 129 - 174", "x2": "sub relu x_0_3 sub x_0_2 sqr INT- 1", "tree": "(relu(x_0_3) sub (x_0_2 sub (-1)**2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 8 + 54 - 20 + 600 - 162 + 8498 - 2472 + 15 3108 - 4 9270 + 336 8574 - 118 2252 + 8758 3184 - 3310 2762 + 26 2749 5850 - 10 5928 8016 + 893 3485 9308 - 381 3436 8126 + 3 3947 2465 4198 - 1 5253 7472 4500 + 142 5784 3547 6904 - 67 1164 8787 7362 + 6558 6080 3193 8274 - 3221 5914 1811 2632 + 32 7930 4015 9691 4500 - 16 7522 7537 4185 6006 + 1770 8241 6862 3338 3918 - 938 1274 2095 4393 5356 + 10 2707 8017 8015 3626 8288 - 5 6287 6452 5726 3612 250", "x2": "add mul add n add INT+ 7 x_0_2 n mul n x_0_2", "tree": "(((n add (7 add x_0_2)) mul n) add (n mul x_0_2))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 61 + 128 + 207 + 304 + 425 + 576 + 763 + 992 + 1269 + 1600 + 1991 + 2448 + 2977 + 3584 + 4275 + 5056 + 5933 + 6912 + 7999 + 9200 + 1 521 + 1 1968 + 1 3547 + 1 5264 + 1 7125 + 1 9136 + 2 1303 + 2 3632", "x2": "mul sub sqr n sub mul sqr sqr INT- 2 INT- 4 INT- 4 n", "tree": "(((n)**2 sub ((((-2)**2)**2 mul -4) sub -4)) mul n)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 10 + 3 - 5 + 8 + 2 + 3 + 1 + 8 + 2 + 3 + 1 + 8 + 2 + 3 + 1 + 8 + 2 + 3 + 1 + 8 + 2 + 3 + 1 + 8 + 2 + 3 + 1 + 8 + 2 + 3 + 1 + 8", "x2": "mod mul mul x_0_4 n abs n add n sign x_0_4", "tree": "(((x_0_4 mul n) mul abs(n)) mod (n add sign(x_0_4)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 + 3 + 9 + 5 + 2 - 3 + 6 - 9 - 6 + 1 + 5 + 0 + 6 + 12 + 5 + 0 + 15 + 0 + 7 + 0 + 6 + 0 + 14 + 0 + 14 + 0 + 20 + 0 + 7 + 0 + 3 + 0 + 17 + 0 + 26 + 0 + 7", "x2": "mod mul sqr x_0_4 idiv n sub x_0_9 n n", "tree": "(((x_0_4)**2 mul (n idiv (x_0_9 sub n))) mod n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 8 - 7 + 8 - 1 - 3 - 30 - 118 - 294 - 6 - 6 - 3570 - 3894 - 4218 - 6 - 6 - 5190 - 5514 - 5838 - 6 - 6 - 6810 - 7134 - 7458 - 6 - 6 - 8430 - 8754 - 9078 - 6 - 6 - 1 50 - 1 374 - 1 698", "x2": "sub INT- 6 abs mul sqr mod sub sub mod INT+ 3 INT+ 3 abs INT- 9 INT+ 9 x_0_5 n", "tree": "(-6 sub abs(((((((3 mod 3) sub abs(-9)) sub 9) mod x_0_5))**2 mul n)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 2 + 5 + 18 + 37 + 62 + 93 + 130 + 173 + 222 + 277 + 338 + 405 + 478 + 557 + 642 + 733 + 830 + 933 + 1042 + 1157 + 1278 + 1405 + 1538 + 1677 + 1822 + 1973 + 2130 + 2293", "x2": "sub n mul add n sub sign abs n sqr n INT+ 3", "tree": "(n sub ((n add (sign(abs(n)) sub (n)**2)) mul 3))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 10 - 7 + 4 - 6 - 13 - 21 + 0 - 3 - 2 - 31 - 7 - 11 + 19 - 34 - 6 - 40 + 43 - 38 + 24 - 93 + 71 - 72 + 107 - 174 + 133 - 189 + 271 - 317 + 312 - 470 + 578 - 639", "x2": "sub abs sign INT+ 8 add sub INT+ 1 x_0_4 mul sub x_0_3 sub INT- 5 INT+ 5 INT+ 1", "tree": "(abs(sign(8)) sub ((1 sub x_0_4) add ((x_0_3 sub (-5 sub 5)) mul 1)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 3 - 4 + 2 - 10 - 1 - 1 - 2 + 1 + 0 - 15 - 8 + 18 - 10 - 8 - 10 - 14 + 1 + 0 - 210 - 144 + 0 - 60 + 0 - 120 - 14 + 24 + 0 - 4200 + 0 + 0 + 0 + 0 + 0 - 336 + 0 + 0 + 0", "x2": "mul mod idiv add relu x_0_8 mul INT- 5 x_0_2 sign sub INT+ 3 sub INT- 2 sub x_0_2 x_0_9 n x_0_9", "tree": "((((relu(x_0_8) add (-5 mul x_0_2)) idiv sign((3 sub (-2 sub (x_0_2 sub x_0_9))))) mod n) mul x_0_9)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 6 + 10 + 11 + 3 + 10 + 12 + 5 + 11 + 9 + 6 + 4 + 9 + 9 + 5 + 5 + 8 + 8 + 7 + 7 + 12 + 12 + 8 + 8 + 7 + 7 + 12 + 12 + 7 + 7", "x2": "sub add mod mul x_0_2 x_0_2 INT+ 1 0 INT+ 3 mod abs INT+ 8 idiv mul INT+ 5 x_0_2 sub INT- 2 n", "tree": "((((x_0_2 mul x_0_2) mod 10) add 3) sub (abs(8) mod ((5 mul x_0_2) idiv (-2 sub n))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 5 - 8 - 7 - 4 - 6 - 7 + 7 - 9 + 1 - 1 - 6 - 14 - 21 - 25 - 31 - 38 - 45 - 54 - 55 - 56 - 62 - 76 - 97 - 122 - 153 - 191 - 236 - 290 - 345 - 401 - 463 - 539 - 636 - 758 - 911 - 1102 - 1338 - 1628", "x2": "sub x_0_1 abs x_0_10", "tree": "(x_0_1 sub abs(x_0_10))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 2 + 9 + 22 - 1 + 44 + 53 - 64 + 83 + 102 + 117 + 146 + 171 + 198 + 227 + 258 + 291 + 326 + 363 + 402 + 443 + 486 + 531 + 578 + 627 + 678 + 731 + 786 + 843 + 902 + 963", "x2": "sub sqr n mul idiv sqr n x_0_3 INT- 2", "tree": "((n)**2 sub (((n)**2 idiv x_0_3) mul -2))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 8 + 0 + 2 + 0 + 0 + 3 + 2 + 4 + 2 + 3 + 0 + 0 + 10 + 10 + 4 + 3 + 14 + 13 + 4 + 2 + 14 + 12 + 0 + 22 + 10 + 5 + 20 + 15 + 0", "x2": "mod relu add INT+ 1 0 x_0_2 n", "tree": "(relu((10 add x_0_2)) mod n)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0 + 3 + 7 + 0", "x2": "mod abs x_0_3 add x_0_2 relu sqr INT- 1 0", "tree": "(abs(x_0_3) mod (x_0_2 add relu((-10)**2)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 7 - 6 - 8 + 8 - 7 + 13 + 13 + 16 + 1 + 17 - 2 - 1 - 3 + 13 - 2 + 18 + 18 + 21 + 6 + 22 + 3 + 4 + 2 + 18 + 3 + 23 + 23 + 26 + 11 + 27 + 8 + 9 + 7", "x2": "sub n x_0_5", "tree": "(n sub x_0_5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 10 + 7 - 4 - 3 - 1 - 4 + 10 - 8 + 5 + 977 + 535 + 151 + 254 - 91 + 322 + 1 7239 + 1 190 + 3175 + 1814 884 + 572 2687 + 48 5590 + 179 8617 + 42 4840 + 256 4623 + 78 8310 132 + 28 4852 8469 + 2 8528 7812 + 9214 5668 7480 2051 + 949 7252 6081 9468 + 7 740 638 1697 + 100 5300 9259 7458 + 5 8668 173 215 + 217 600 2185 8060 + 21 1318 4396 7724 4946 2157 + 2 8402 7245 7387 5062 22 + 293 263 5485 5664 5483 + 31 4160 4979 5373 7177 3768 9494 7695 190", "x2": "add mul n add sqr x_0_9 x_0_6 INT+ 7", "tree": "((n mul ((x_0_9)**2 add x_0_6)) add 7)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "mod n abs add INT- 2 sign idiv n INT- 6", "tree": "(n mod abs((-2 add sign((n idiv -6)))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 12 + 81 + 480 + 3675 + 3 9852 + 58 6089 + 1125 3120 + 2 7345 1059 + 82 353 2100 + 2977 8821 5593 + 12 8644 5091 4352 + 652 2276 6135 8559 + 3 8350 9864 8788 3916 + 258 8691 5879 3216 5275 + 1 9881 1513 9531 9029 4272 + 172 3695 8259 7415 9851 4943 + 1 6754 3234 2846 8833 7565 4112 + 181 4493 2273 317 4695 8334 2279 + 2 1773 9187 2763 8096 3500 107 4800 + 288 689 4476 6652 147 1051 4219 7363 + 4 1827 6107 8011 7872 5359 6666 4705 9576 + 663 8041 8308 470 6371 4579 968 8835 6933 + 11 4705 3628 3630 5326 987 9267 9423 808 960 + 2150 7255 5318 724 8643 5236 2739 1827 6518 1875 + 43 6167 1421 8505 1002 4906 5916 3506 2647 7888 7292 + 9538 9753 9958 7065 4244 7071 5905 8820 1071 4265 4697 + 224 3567 139 8287 7787 8355 1238 1063 4489 1999 5238 7792 + 5 6605 1957 6278 8006 5870 8997 7374 2308 1625 1479 8744 4463", "x2": "mul abs mul n INT+ 3 sub n mul n idiv x_0_1 INT- 1 0", "tree": "(abs((n mul 3)) mul (n sub (n mul (x_0_1 idiv -10))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 5 + 6 + 1 + 6 + 0 + 1 + 6 + 1 + 6 + 6 + 1 + 6 + 1 + 0 + 6 + 1 + 6 + 5 + 6 + 6 + 1 + 0 + 1 + 6 + 6 + 5 + 6", "x2": "mod sqr idiv sqr add n sub INT- 8 idiv n INT- 5 sign n INT+ 1 0", "tree": "(((((n add (-8 sub (n idiv -5))))**2 idiv sign(n)))**2 mod 10)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 7 - 1 - 10 - 14 - 17 - 20 - 87 - 188 - 129 - 274 - 323 - 1897 - 1413 - 944 - 5167 - 2 3748 - 2 789 - 778 - 1 6059 - 33 7868 - 11 5741 - 1 4351 - 34 5095 - 18 1324 - 170 5625 - 33 317 - 924 9715 - 6 4002 - 192 689 - 834 2533 - 2 6696 2015", "x2": "add mul add INT- 3 mul n idiv mod sub add x_0_1 INT- 2 INT+ 5 x_0_4 n n INT+ 1", "tree": "(((-3 add (n mul ((((x_0_1 add -2) sub 5) mod x_0_4) idiv n))) mul n) add 1)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 5 + 0 + 0 + 2 + 3 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 3 + 3 + 5 + 5 + 1 + 2 + 10 + 8 - 10 - 5 + 39 + 28 - 87 - 60", "x2": "idiv mul n sub INT+ 6 x_0_2 sub INT+ 1 0 INT- 1", "tree": "((n mul (6 sub x_0_2)) idiv (10 sub -1))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 1 + 5 + 16 + 1 + 25 + 13 + 1 + 58 + 7 + 1 + 43 + 49 + 1 + 67 + 52 + 1 + 34 + 31 + 1 + 22 + 70 + 1 + 79 + 40 + 1 + 4 + 61 + 1 + 16 + 76", "x2": "mod sqr x_0_3 sqr INT- 9", "tree": "((x_0_3)**2 mod (-9)**2)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 9 - 1 - 9 + 10 - 8 - 9 + 3 + 110 + 80 + 80 + 40 - 1090 - 800 - 800 + 400 - 1 900 - 7990 - 7990 - 4010 + 10 9000 - 7 9890 - 7 9890 + 4 90 - 109 10 + 79 8900 - 79 8890 + 40 910 + 1090 100 + 798 9010 + 798 8900 - 400 9110 + 1 900 1000 - 7989 100 - 7988 9000 - 4009 1100", "x2": "mul INT- 1 mul mul sign sign sub x_0_7 x_0_5 abs INT+ 1 0 sub idiv INT+ 5 x_0_5 x_0_4", "tree": "(-1 mul ((sign(sign((x_0_7 sub x_0_5))) mul abs(10)) mul ((5 idiv x_0_5) sub x_0_4)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 9 - 3 + 0 + 625 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16 + 256 + 0 + 16", "x2": "sqr sqr mod x_0_3 INT+ 7", "tree": "(((x_0_3 mod 7))**2)**2", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 + 4 + 9 - 6 + 169 - 950 - 1781 - 244 - 2 5619 + 15 414 + 31 1535 + 4 4560 + 532 6065 - 3369 5854 - 7477 1981 - 1141 1436 - 14 4869 4283 + 97 440 790 + 227 3067 6471 + 36 5165 3144 + 4867 6127 2057 - 3 4159 4908 5798 - 8 3648 8894 9765 - 1 4022 3481 6484 - 194 7045 883 2771 + 1421 348 1968 1182 + 3613 6320 2628 6847 + 628 2011 9777 2320 + 9 342 8920 9839 2321 - 68 2096 7134 4698 1726 - 179 2361 4850 3829 1453 - 32 1639 132 5944 4188", "x2": "add add sub n mul mul add x_0_4 n sqr INT+ 4 n mod add INT- 6 abs INT+ 6 n INT+ 4", "tree": "(((n sub (((x_0_4 add n) mul (4)**2) mul n)) add ((-6 add abs(6)) mod n)) add 4)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 4 - 7 + 8 - 8 + 1 - 1 + 10 - 2 - 7 - 8 - 8 - 1 - 1 - 13 - 1 - 7 - 8 - 8 - 1 - 1 - 22 - 1 - 7 - 8 - 8 - 1 - 1 - 61 - 1 - 7 - 8 - 8 - 1 - 1 - 466", "x2": "idiv sqr x_0_7 add sign abs mod abs relu relu n INT+ 3 INT- 9", "tree": "((x_0_7)**2 idiv (sign(abs((abs(relu(relu(n))) mod 3))) add -9))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 2 + 9 - 4 + 7 - 3 - 5 - 112 + 576 - 288 + 560 - 264 - 480 - 1 1648 + 6 4512 - 3 4560 + 7 1680 - 3 5904 - 6 9120 - 177 496 + 1032 1920 - 580 6080 + 1261 5680 - 660 6336 - 1327 1040 - 3 5409 9200 + 21 4695 9360 - 12 5411 3280 + 28 2591 2320 - 15 3266 9952 - 31 8504 9600 - 878 1660 1600 + 5496 2159 6160 - 3310 8590 5920 + 7686 4815 1040", "x2": "mul mul n x_0_6 INT+ 8", "tree": "((n mul x_0_6) mul 8)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 5 + 5 - 9 - 10 + 0 - 3 + 0 + 0 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 5 - 5 - 6 - 6", "x2": "idiv add n x_0_4 INT- 5", "tree": "((n add x_0_4) idiv -5)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2 - 3 + 8 - 2", "x2": "add x_0_3 relu sqr mod INT+ 2 abs sign relu INT- 6", "tree": "(x_0_3 add relu(((2 mod abs(sign(relu(-6)))))**2))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 8 + 13 + 20 + 29 + 40 + 53 + 68 + 85 + 104 + 125 + 148 + 173 + 200 + 229 + 260 + 293 + 328 + 365 + 404 + 445 + 488 + 533 + 580 + 629 + 680 + 733 + 788", "x2": "add INT+ 3 sub sqr n INT- 1", "tree": "(3 add ((n)**2 sub -1))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 - 8 + 1 + 1 + 6 + 6 + 1 + 1 + 6 + 6 + 1 + 1 + 6 + 6 + 1 + 1 + 6 + 6 + 1 + 1 + 6 + 6 + 1 + 1 + 6 + 6 + 1 + 1 + 6 + 6", "x2": "add idiv INT+ 5 relu sqr x_0_2 sign mod x_0_2 n", "tree": "((5 idiv relu((x_0_2)**2)) add sign((x_0_2 mod n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10 - 4 - 9 + 10", "x2": "sub x_0_3 mod sqr x_0_2 x_0_2", "tree": "(x_0_3 sub ((x_0_2)**2 mod x_0_2))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 + 5 - 2 + 6 + 1 - 2 + 7 - 3 + 6 + 0 + 3 + 13 + 0 + 10 + 3 + 5 + 14 + 0 + 9 + 10 + 11 + 19 + 4 + 12 + 12 + 12 + 19 + 3 + 19 + 18 + 17 + 23 + 6", "x2": "mul sub add sign INT+ 1 mod abs sub sign x_0_5 n INT- 9 x_0_5 INT- 1", "tree": "(((sign(1) add (abs((sign(x_0_5) sub n)) mod -9)) sub x_0_5) mul -1)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 1 - 1 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 9 - 11 - 13 - 15 - 17 - 19 - 22 - 25 - 28 - 31 - 34 - 37 - 41 - 45 - 49 - 53 - 57 - 61 - 66", "x2": "idiv sub sqr n sign INT- 3 mul INT+ 4 INT- 3", "tree": "(((n)**2 sub sign(-3)) idiv (4 mul -3))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 4 + 13 + 24 + 37 + 52 + 69 + 88 + 109 + 132 + 157 + 184 + 213 + 244 + 277 + 312 + 349 + 388 + 429 + 472 + 517 + 564 + 613 + 664", "x2": "relu sub abs mul n mod INT- 4 n mul sign INT+ 5 INT+ 8", "tree": "relu((abs((n mul (-4 mod n))) sub (sign(5) mul 8)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 1 + 4 + 1 + 3 + 2 + 5 + 6 + 7 + 7 + 6 + 1 + 2 + 9 + 10 + 11 + 6 + 7 + 8 + 10 + 5 + 6 + 7 + 13 + 15 + 10 + 11 + 12 + 6 + 7 + 8 + 15", "x2": "sub n add sqr idiv n INT- 9 mod INT+ 6 abs x_0_3", "tree": "(n sub (((n idiv -9))**2 add (6 mod abs(x_0_3))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 10 + 5 + 5 + 0 - 7 - 2 + 4 + 8 + 20 + 2222 + 624 + 676 + 28 + 1500 + 160 + 578 + 2340 + 1 5238 + 1 9749 1400 + 1635 3834 + 2010 6988 + 3 6110 + 1 800 48 + 128 50 + 1737 2420 + 2 9568 2454 + 130 301 2120 + 226 2165 4782 8968 58 + 1 6046 8731 8997 3420 + 2 5066 399 1879 2990 + 834 5165 4464 + 76 9824 6842 8815 2130 + 111 4199 417 68 + 2 1126 683 6594 8070 + 629 4824 1794 4927 2424 + 125 1179 5990 2721 5018 5674", "x2": "mul INT+ 2 abs add mul n sqr x_0_9 n", "tree": "(2 mul abs(((n mul (x_0_9)**2) add n)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 5 + 4 - 48 - 32 - 305 - 276 - 2240 - 2336 - 2 313 - 2 3540 - 22 3652 - 28 2720 - 290 7749 - 395 8388 - 4361 6580 - 6333 4592 - 7 4148 2285 - 11 4002 3124 - 140 8816 3928 - 228 46 3040 - 2958 5144 3097 - 5016 1018 7540 - 6 8045 8319 1944 - 12 386 4450 1728 - 170 1145 7979 9425 - 313 47 5704 5812 - 4593 936 5458 5420 - 8764 1331 9728 3744 - 13 3199 7159 8297 8253 - 26 2923 9959 1851 3460", "x2": "mul n sub x_0_2 add abs INT+ 8 n", "tree": "(n mul (x_0_2 sub (abs(8) add n)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 8 - 5 + 3 - 5 - 4 + 7 - 4 + 4 - 47 + 28 - 44 - 1 - 31 - 4 - 71 - 52 - 77 + 73 - 210 + 197 - 232 + 227 - 292 + 409 - 37 + 480 - 160 + 1059 - 751 + 1664 - 1282 + 2762 - 2472 + 2715 - 3369 + 2567", "x2": "sub sub x_0_7 mul sqr INT- 2 x_0_9 add sub mod x_0_6 abs abs x_0_6 x_0_2 n", "tree": "((x_0_7 sub ((-2)**2 mul x_0_9)) sub (((x_0_6 mod abs(abs(x_0_6))) sub x_0_2) add n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 2 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign sub mod mod x_0_2 relu add INT+ 1 n add INT+ 4 n n", "tree": "sign((((x_0_2 mod relu((1 add n))) mod (4 add n)) sub n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 1 - 3 - 6 - 10 - 15 - 21 - 28 - 36 - 45 - 55 - 66 - 78 - 91 - 105 - 120 - 136 - 153 - 171 - 190 - 210 - 231 - 253 - 276 - 300 - 325 - 351 - 378 - 406 - 435", "x2": "sub x_0_1 abs n", "tree": "(x_0_1 sub abs(n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 - 3 - 1 - 9 + 1 + 3 + 1 + 9 - 1 - 3 - 1 - 9 + 1 + 3 + 1 + 9 - 1 - 3 - 1 - 9 + 1 + 3 + 1 + 9 - 1 - 3 - 1 - 9 + 1 + 3 + 1 + 9", "x2": "sub mod n mod sign sign add x_0_1 n INT+ 6 x_0_4", "tree": "((n mod (sign(sign((x_0_1 add n))) mod 6)) sub x_0_4)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 0 - 2 + 2 - 8 + 5 - 6 - 4 + 7 - 172 + 231 + 1288 - 18 + 1777 + 632 + 715 + 1 5144 - 1 8488 - 8 9122 - 1 4841 - 24 7078 - 4 6671 - 19 9853 - 127 5693 + 145 6286 + 597 5340 + 261 2218 + 2721 9131 + 473 7247 + 3615 6674 + 1 691 3646 - 1 304 4670 - 3 7921 2944 - 3 2357 1226 - 26 8613 7594 - 5 6808 5114 - 51 2870 457", "x2": "add mul sqr abs INT- 9 add sub n x_0_7 sub INT- 6 x_0_9 add INT- 1 0 x_0_8", "tree": "(((abs(-9))**2 mul ((n sub x_0_7) add (-6 sub x_0_9))) add (-10 add x_0_8))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 2 + 10 + 5 + 5 + 15 + 20 + 25 + 40 + 60 + 85 + 125 + 185 + 270 + 395 + 580 + 850 + 1245 + 1825 + 2675 + 3920 + 5745 + 8420 + 1 2340 + 1 8085 + 2 6505 + 3 8845 + 5 6930 + 8 3435 + 12 2280 + 17 9210 + 26 2645", "x2": "add relu x_0_3 x_0_1", "tree": "(relu(x_0_3) add x_0_1)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 8 - 10 - 6 - 4 + 0 - 3 + 0 + 1 + 4 + 0 + 2 + 2 + 4 - 1 + 0 - 1 + 0 - 6 - 6 - 8 - 8 - 15 - 16 - 19 - 20 - 28 - 30 - 34 - 36 - 45 - 48 - 53", "x2": "sub sub add INT+ 7 mod INT+ 5 INT- 7 sub INT- 8 x_0_4 n", "tree": "(((7 add (5 mod -7)) sub (-8 sub x_0_4)) sub n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 19 + 20 + 20 + 21 + 21 + 22 + 22 + 23 + 23 + 24 + 24 + 25 + 25 + 26 + 26 + 27 + 27 + 28 + 28 + 29", "x2": "add n mod sub relu INT+ 8 x_0_1 sub INT+ 1 INT- 9", "tree": "(n add ((relu(8) sub x_0_1) mod (1 sub -9)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 - 5 - 1 - 4 - 1 + 10 + 14 + 5 + 13 + 9 + 11 + 30 + 34 + 25 + 33 + 29 + 31 + 50 + 54 + 62 + 71 + 68 + 71 + 91 + 96 + 105 + 115 + 113 + 117 + 138 + 144 + 154 + 165", "x2": "add x_0_6 add mod sqr n sub n sqr INT- 2 n", "tree": "(x_0_6 add (((n)**2 mod (n sub (-2)**2)) add n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 2 + 19 + 105 + 366 + 996 + 2297 + 4703 + 8804 + 1 5370 + 2 5375 + 4 21 + 6 762 + 8 9328 + 12 7749 + 17 8379 + 24 3920 + 32 7446 + 43 2427 + 56 2753 + 72 2758 + 91 7244 + 115 1505 + 143 1351 + 176 3132 + 215 3762 + 261 743 + 314 2189 + 375 6850 + 446 4136", "x2": "add abs add sqr sqr n INT+ 5 x_0_1", "tree": "(abs((((n)**2)**2 add 5)) add x_0_1)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 9 + 9 + 8 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 53 + 901 + 1 1925 + 12 6405 + 111 6551 + 845 3871 + 5600 6849 + 3 2981 8099 + 17 4803 5877 + 84 2235 4656 + 371 9873 3064 + 1516 5637 3212 + 5741 2769 8558 + 2 285 8453 4859 + 6 7196 8627 1684 + 20 9496 1014 1120 + 61 6849 6319 3286 + 172 685 8153 9116 + 455 9817 4107 8615 + 1150 8110 6081 7414 + 2772 4084 6469 6454 + 6388 5934 1864 8339 + 1 4108 1437 9951 5040 + 2 9909 2648 5497 1853 + 6 968 8860 5051 9520 + 11 9679 6652 1027 9046 + 22 6536 5091 4802 8145 + 41 4014 9994 7743 724", "x2": "mul idiv x_0_1 n sub mul INT- 8 INT- 7 INT+ 3", "tree": "((x_0_1 idiv n) mul ((-8 mul -7) sub 3))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 7 + 5 - 6 + 8 - 6 + 6 - 5 - 5 - 1 + 0 - 6720 - 8580 - 8064 - 1 2480 - 1 6128 - 1 2240 - 1 1520 - 6460 - 1440 + 0 + 0 - 371 3149 4400 - 487 914 480 - 771 5635 2000 - 1674 6283 80 - 1776 6604 8000 - 1368 6865 9200 - 776 9364 4800 - 104 1707 5200 + 0 + 0 + 0 - 2 6237 3836 8712 7779 2460 8000 - 5 7876 5816 6278 1865 9840 0 - 21 867 7997 7376 664 3712 0 - 51 3725 7956 4447 7538 3040 0 - 44 3540 5072 5824 630 7840 0 - 20 4594 7928 4871 6883 5584 0", "x2": "mul mod add INT- 2 n n mul sub sub n abs mul mul INT- 4 idiv x_0_11 INT- 3 x_0_10 n n", "tree": "(((-2 add n) mod n) mul (((n sub abs(((-4 mul (x_0_11 idiv -3)) mul x_0_10))) sub n) mul n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 10 + 5 + 8 + 1 + 5 + 4 - 4 - 18 - 4 + 10 + 10 + 10 - 60 - 144 - 95 + 10 + 10 + 10 - 60 - 487 - 2335 + 10 + 10 + 10 - 60 - 1516 - 13 3151 + 10 + 10 + 10 - 60 - 3091 - 1251 6249 + 10", "x2": "sub relu sub x_0_2 n mod INT- 1 0 mul abs INT+ 7 add x_0_3 idiv mul x_0_6 idiv x_0_1 n INT+ 7", "tree": "(relu((x_0_2 sub n)) sub (-10 mod (abs(7) mul (x_0_3 add ((x_0_6 mul (x_0_1 idiv n)) idiv 7)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 2 + 6 - 6 + 22 + 13 + 13 + 13 + 13 + 13 + 13 + 13 + 13 + 10 + 9 + 8 - 5 + 57 + 13 - 14 + 81 + 13 - 26 + 68 + 13 - 41 + 52 + 13 - 131 + 33 + 13 - 317", "x2": "sub sub INT+ 8 mul abs sub n sub x_0_3 INT+ 3 idiv n x_0_1 INT- 5", "tree": "((8 sub (abs((n sub (x_0_3 sub 3))) mul (n idiv x_0_1))) sub -5)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 + 1 + 4 + 7 - 7 + 215 + 344 + 512 + 729 + 999 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683 + 2 1952 + 2 4389 + 2 7000 + 2 9791 + 3 2768 + 3 5937", "x2": "add idiv sign sign INT+ 8 x_0_5 mul sqr n n", "tree": "((sign(sign(8)) idiv x_0_5) add ((n)**2 mul n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 1 + 1 - 8 + 10 - 2 + 2 + 3 - 2 - 2 + 3 + 4 + 3 + 7 + 8 + 6 + 5 + 8 + 3 + 2 + 5 + 7 + 4 + 16 + 28 + 11 + 8 + 17 + 3 + 1 + 6 + 10 + 4", "x2": "add idiv INT+ 9 INT- 8 idiv sub mul n n INT+ 8 abs mul INT+ 1 0 x_0_5", "tree": "((9 idiv -8) add (((n mul n) sub 8) idiv abs((10 mul x_0_5))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 8 - 8 + 2 + 0 + 8 + 12 + 42 + 72 + 240 + 468 + 1722 + 3792 + 1 5552 + 3 7980 + 17 1138 + 45 5832 + 222 4872 + 638 1732 + 3337 3170 + 1 210 7808 + 5 6734 3992 + 18 3794 652 + 107 7953 5962 + 367 5881 3160 + 2263 7025 5328 + 8086 9388 9652 + 5 2065 1587 2682 + 19 4086 5335 1792 + 130 1628 9681 7200 + 504 6249 8714 6748", "x2": "relu mul sub n INT+ 4 sub x_0_2 INT- 6", "tree": "relu(((n sub 4) mul (x_0_2 sub -6)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 10 + 13 + 6 + 18 + 12 + 25 + 20 + 34 + 30 + 45 + 42 + 58 + 56 + 73 + 72 + 90 + 90 + 109 + 110 + 130 + 132 + 153 + 156 + 178 + 182 + 205 + 210 + 234 + 240", "x2": "mul add sign INT+ 6 sub n n relu abs abs add x_0_2 n", "tree": "((sign(6) add (n sub n)) mul relu(abs(abs((x_0_2 add n)))))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 7 - 7 + 2 + 10 - 7 - 3 - 10 - 2 - 5 + 7 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign add mod n sub x_0_10 add n x_0_5 x_0_6", "tree": "sign(((n mod (x_0_10 sub (n add x_0_5))) add x_0_6))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 7 + 63 + 63 + 567 + 567 + 5103 + 5103 + 4 5927 + 4 5927 + 41 3343 + 41 3343 + 372 87 + 372 87 + 3348 783 + 3348 783 + 3 132 7047 + 3 132 7047 + 27 1194 3423 + 27 1194 3423 + 244 749 807 + 244 749 807 + 2196 6741 7263 + 2196 6741 7263 + 1 9770 675 5367 + 1 9770 675 5367 + 17 7930 6079 8303 + 17 7930 6079 8303 + 160 1375 4718 4727 + 160 1375 4718 4727", "x2": "mul relu abs x_0_2 INT+ 9", "tree": "(relu(abs(x_0_2)) mul 9)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000 + 6 5383 7184 0 + 104 6139 4944 0 + 1778 4371 4048 0 + 3 2011 8685 2864 0 + 60 8225 5020 4416 0 + 1216 4510 408 8320 0 + 2 5545 4710 8585 4720 0 + 56 2000 3638 8880 3840 0 + 1292 6008 3694 4248 8320 0 + 3 1022 4200 8666 1971 9680 0 + 77 5560 5021 6654 9299 2000 0 + 2016 4573 563 3028 1779 2000 0 + 5 4444 3472 5209 1760 8038 4000 0 + 152 4441 7230 5856 9302 5075 2000 0 + 4420 8809 9686 9850 9772 7180 8000 0", "x2": "mul x_0_1 n", "tree": "(x_0_1 mul n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 - 5 + 1 - 10 + 4 + 2 + 6 - 8 - 4 + 0 + 11 + 12 + 13 + 4 + 5 + 1 + 17 + 18 + 19 + 20 + 21 + 0 + 23 + 24 + 25 + 26 + 27 + 1 + 29 + 30 + 31 + 32 + 33 + 0 + 35 + 36 + 37", "x2": "abs mod n sub abs add x_0_6 n sign x_0_9", "tree": "abs((n mod (abs((x_0_6 add n)) sub sign(x_0_9))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 8 - 4 + 9 + 25 + 96 - 56 + 136 + 450 + 1920 - 1232 + 3252 + 1 1700 + 5 3760 - 3 6960 + 10 4048 + 39 7800 + 193 5360 - 140 4480 + 416 1900 + 1670 7600 + 8515 5840 - 6460 6080 + 1 9977 1176 + 8 3538 0 + 44 2810 3680 - 34 8872 8320 + 111 8718 5828 + 484 5204 0 + 2656 8622 800 - 2163 115 5840 + 7159 7989 2960", "x2": "mul relu n add add sub x_0_4 INT+ 5 x_0_4 add idiv INT+ 1 idiv x_0_1 add n INT+ 1 abs INT- 5", "tree": "(relu(n) mul (((x_0_4 sub 5) add x_0_4) add ((1 idiv (x_0_1 idiv (n add 1))) add abs(-5))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 9 + 4 + 4 + 3 - 4305 - 3640 - 4680 - 6920 - 4635 + 21 250 + 19 4700 + 27 4800 + 51 1500 + 36 2800 - 3 2225 3651 9750 - 5776 261 2000 - 5 3230 3039 5500 - 11 8468 4468 4000 - 193 5248 8000 + 322 2536 5196 5000 + 60 6482 7424 9500 + 585 5333 4349 4000 + 1480 8555 8548 7500 + 2 5158 2342 7000 - 49 6558 7778 7495 3500 9972 7268 8500 - 22 640 974 3955 4878 7544 574 4000 - 1391 5528 4368 6334 2726 1079 9144 4500 - 886 1114 5243 2247 4936 2386 4000 - 744 1710 7152 8859 3203 9432 9500 + 7448 3816 6812 4302 5149 5909 326 0 + 3419 9215 1031 3100 6206 9328 9030 4500 + 22 2648 4549 8981 3483 6177 2786 3110 4000", "x2": "mul INT- 5 mul add x_0_5 sqr add relu mod x_0_4 x_0_5 mul INT+ 5 INT+ 2 add n sign x_0_3", "tree": "(-5 mul ((x_0_5 add ((relu((x_0_4 mod x_0_5)) add (5 mul 2)))**2) mul (n add sign(x_0_3))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 9 - 2 - 3 + 6 + 1 + 4 + 4 + 6 + 1 + 4 + 4 + 6 + 1 + 4 + 4 + 6 + 1 + 4 + 4 + 6 + 1 + 4 + 4 + 6 + 1 + 4 + 4 + 6 + 1 + 4 + 4 + 6", "x2": "mod x_0_4 n", "tree": "(x_0_4 mod n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 4 - 5 - 9 + 2 + 32 + 43 + 56 + 69 + 56 + 64 + 72 + 82 + 120 + 139 + 160 + 181 + 176 + 192 + 208 + 226 + 272 + 299 + 328 + 357 + 360 + 384 + 408 + 434 + 488 + 523 + 560 + 597", "x2": "sub INT+ 7 add sub relu x_0_4 add sqr n n n", "tree": "(7 sub ((relu(x_0_4) sub ((n)**2 add n)) add n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 - 10 - 21 - 68 - 315 - 1854 - 1 2929 - 10 3368 - 93 231 - 930 2210 - 1 232 4189 - 12 2789 124 - 159 6257 1443 - 2234 7600 6 - 3 3521 3999 9865 - 53 6342 3999 7584 - 911 7820 7995 8639 - 1 6412 774 3925 5178 - 31 1829 4713 4584 8021 - 623 6589 4269 1696 20 - 1 3096 8377 9652 5615 9979 - 28 8130 4315 2356 3551 9054 - 662 6999 9250 4196 1693 7713 - 1 5904 7998 2010 708 650 4536 - 39 7619 9955 251 7701 6261 2775 - 1033 8119 8830 6546 242 2793 1474 - 2 7912 9236 8427 6742 6541 5414 9069 - 78 1561 8631 5974 8794 3163 1617 3148 - 2266 5294 316 3271 5035 1731 6902 451", "x2": "mul mod n x_0_1 n", "tree": "((n mod x_0_1) mul n)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 + 8 - 12 + 2 - 19 - 6 - 28 - 16 - 39 - 28 - 52 - 42 - 67 - 58 - 84 - 76 - 103 - 96 - 124 - 118 - 147 - 142 - 172 - 168 - 199 - 196 - 228 - 226 - 259 - 258", "x2": "idiv sub x_0_2 add mod relu INT+ 1 0 relu INT+ 4 abs n relu INT+ 1", "tree": "((x_0_2 sub ((relu(10) mod relu(4)) add abs(n))) idiv relu(1))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 4 + 0 - 10 + 4 - 3 + 15 + 7 + 0 + 0 + 7 + 0 + 205 + 37 + 0 + 0 + 37 + 0 + 4 1815 + 1327 + 0 + 0 + 1327 + 0 + 17 4845 2405 + 175 9597 + 0 + 0 + 175 9597 + 0 + 305 7085 8108 183 1615 + 3 961 7984 2807 + 0 + 0", "x2": "relu add INT- 5 mul abs x_0_6 mod sign INT- 7 x_0_6", "tree": "relu((-5 add (abs(x_0_6) mul (sign(-7) mod x_0_6))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 1 + 8 - 2 + 3 - 4 + 9 + 9 + 1 + 9 + 1 + 1 + 8 + 2 + 3 + 4 + 9 + 9 + 1 + 9 + 1 + 1 + 8 + 2 + 3 + 4 + 9 + 9 + 1 + 9 + 1 + 1 + 8 + 2 + 3 + 4 + 9 + 9", "x2": "abs x_0_10", "tree": "abs(x_0_10)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 7 + 3 - 9 + 1 + 30 + 3 + 4 - 1 + 5 + 5 + 6 + 6 + 2 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12 + 12 + 13 + 13 + 14 + 14 + 15 + 15 + 16 + 16", "x2": "idiv sub mod INT+ 1 0 mod sign x_0_5 mul add n x_0_2 sub sqr INT+ 5 INT+ 3 n INT- 2", "tree": "(((10 mod (sign(x_0_5) mod ((n add x_0_2) mul ((5)**2 sub 3)))) sub n) idiv -2)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 6 - 7 - 40 - 18 + 14 + 40 + 0 + 14 + 80 + 0 + 56 + 400 + 0 + 392 + 3200 + 0 + 3920 + 3 5200 + 0 + 5 960 + 49 2800 + 0 + 81 5360 + 837 7600 + 0 + 1549 1840 + 1 6755 2000 + 0 + 3 4082 480 + 38 5369 6000", "x2": "mul add n INT- 8 x_0_3", "tree": "((n add -8) mul x_0_3)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 + 10 - 6 + 2 - 3 + 7 + 10 - 2 + 12 - 3 + 12 + 3 + 9 + 13 + 5 + 22 - 1 + 24 + 6 + 21 + 16 + 14 + 35 + 4 + 46 + 7 + 45 + 22 + 35 + 51 + 18 + 81 + 11 + 91 + 29 + 80", "x2": "add x_0_7 abs abs x_0_9", "tree": "(x_0_7 add abs(abs(x_0_9)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 3 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign idiv sub add abs x_0_2 mod n INT- 7 mod x_0_1 x_0_2 sign n", "tree": "sign((((abs(x_0_2) add (n mod -7)) sub (x_0_1 mod x_0_2)) idiv sign(n)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "abs mul n mod relu n add n n", "tree": "abs((n mul (relu(n) mod (n add n))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 + 4 + 9 + 19 + 39 + 79 + 159 + 319 + 639 + 1279 + 2559 + 5119 + 1 239 + 2 479 + 4 959 + 8 1919 + 16 3839 + 32 7679 + 65 5359 + 131 719 + 262 1439 + 524 2879 + 1048 5759 + 2097 1519 + 4194 3039 + 8388 6079 + 1 6777 2159 + 3 3554 4319 + 6 7108 8639 + 13 4217 7279", "x2": "abs add add relu x_0_1 x_0_1 sign x_0_3", "tree": "abs(((relu(x_0_1) add x_0_1) add sign(x_0_3)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 6 + 3 - 24 + 15 - 144 + 105 - 1152 + 945 - 1 1520 + 1 395 - 13 8240 + 13 5135 - 193 5360 + 202 7025 - 3096 5760 + 3445 9425 - 5 5738 3680 + 6 5472 9075 - 111 4767 3600 + 137 4931 575 - 2452 4881 9200 + 3162 3414 3225 - 5 8859 7166 800 + 7 9058 5358 625 - 153 352 6318 800 + 213 4580 4667 6875 - 4284 9873 6906 2400 + 6190 2833 5362 9375 - 12 8549 6210 7187 2000", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 1 - 8 + 10 - 3 + 10 + 1 + 4 - 5 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323 - 360 - 399 - 440 - 483 - 528 - 575 - 624 - 675 - 728 - 783 - 840 - 899 - 960 - 1023 - 1088 - 1155 - 1224 - 1295", "x2": "sub INT+ 2 sub mul n n sign add mod n sqr mod n n mod x_0_1 x_0_8", "tree": "(2 sub ((n mul n) sub sign(((n mod ((n mod n))**2) add (x_0_1 mod x_0_8)))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 9 + 3 + 5 - 5 - 1 - 1 - 1 - 1 - 1 - 3 - 3 - 3 - 3 - 3 - 1 - 1 - 1 - 1 - 1 - 3 - 3 - 3 - 3 - 3 - 1 - 1 - 1 - 1 - 1 - 3 - 3 - 3", "x2": "idiv INT- 3 abs x_0_5", "tree": "(-3 idiv abs(x_0_5))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 1 - 9 - 7 - 6 + 7 + 7 + 8 + 7 + 7 + 9 + 10 + 12 + 12 + 13 + 16 + 18 + 21 + 22 + 24 + 28 + 31 + 35 + 37 + 40 + 45 + 49 + 54 + 57 + 61 + 67 + 72 + 78", "x2": "mod INT- 9 add n abs x_0_5", "tree": "(-9 mod (n add abs(x_0_5)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 7 + 5 - 1 + 0 + 1 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1", "x2": "idiv x_0_4 n", "tree": "(x_0_4 idiv n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 9 - 8 - 5 - 5 + 7 - 6 - 7 - 8 + 3 - 5 + 5 + 11 + 23 + 26 + 65 + 29 + 29 + 29 + 65 + 44 + 77 + 98 + 137 + 149 + 269 + 164 + 167 + 170 + 281 + 221 + 323 + 389 + 509 + 548 + 911 + 599 + 611 + 623", "x2": "sub mul INT+ 3 add x_0_10 abs add n idiv INT+ 9 n INT+ 1", "tree": "((3 mul (x_0_10 add abs((n add (9 idiv n))))) sub 1)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 6 - 9 - 10 - 10 - 10 - 10 - 9 - 9 - 8 - 7 - 6 - 6 - 5 - 4 - 3 - 2 - 1 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 6 + 7 + 8", "x2": "add n idiv mul INT+ 5 add n sub mul INT- 6 n sub INT- 5 n n", "tree": "(n add ((5 mul (n add ((-6 mul n) sub (-5 sub n)))) idiv n))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 45 - 80 - 125 - 180 - 245 - 320 - 405 - 500 - 605 - 720 - 845 - 980 - 1125 - 1280 - 1445 - 1620 - 1805 - 2000 - 2205 - 2420 - 2645 - 2880 - 3125 - 3380 - 3645 - 3920 - 4205 - 4500", "x2": "mul sqr add abs n abs INT+ 2 sub idiv INT- 2 INT+ 3 INT+ 4", "tree": "(((abs(n) add abs(2)))**2 mul ((-2 idiv 3) sub 4))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 7 + 5 - 4 + 40 - 24 + 35 - 312 + 225 - 340 + 3443 - 2688 + 4433 - 4 8188 + 4 335 - 7 912 + 81 9213 - 72 6012 + 134 7347 - 1638 4240 + 1524 6273 - 2964 1612 + 3 7683 7543 - 3 6591 528 + 7 4104 325 - 97 9777 6092 + 98 7958 4283 - 207 4912 9072 + 2841 3550 6697 - 2963 8752 8460 + 6432 2300 1263", "x2": "sub n mul x_0_3 n", "tree": "(n sub (x_0_3 mul n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 9 - 10 + 5 + 13 + 56 + 111 + 195 + 320 + 500 + 1126 + 1637 + 2315 + 3201 + 4339 + 7710 + 1 123 + 1 3122 + 1 6815 + 2 1333 + 3 3531 + 4 1831 + 5 1822 + 6 3803 + 7 8125 + 11 4244 + 13 8636 + 16 7633 + 20 2080 + 24 3000 + 34 244", "x2": "idiv mul mul n n mul sqr n idiv n INT- 5 add idiv x_0_3 x_0_2 add mul INT- 1 0 INT+ 5 n", "tree": "(((n mul n) mul ((n)**2 mul (n idiv -5))) idiv ((x_0_3 idiv x_0_2) add ((-10 mul 5) add n)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 2 + 10 + 2 - 973 - 334 - 2425 - 616 - 39 4042 - 16 6978 - 146 7104 - 44 3500 - 3 3296 5471 - 1 6363 8422 - 16 5049 1983 - 5 6767 9984 - 4811 3510 5580 - 2650 9424 3626 - 2 9791 3802 9302 - 1 1353 5996 7988 - 1060 9029 780 3889 - 641 5280 6957 4910 - 7879 8200 8750 3781 - 3269 8367 780 5432 - 331 5321 5868 8715 3118 - 216 8364 8751 6319 5794 - 2872 1944 2189 5128 1740 - 1281 7759 8945 9729 3436 - 139 4092 7272 8604 7886 1187 - 97 5764 1938 2343 8107 2998 - 1380 894 1972 609 876 699 - 656 2693 660 3381 4239 2320", "x2": "sub sub INT+ 7 n mul mod INT- 5 mul sqr n abs x_0_4 INT+ 5", "tree": "((7 sub n) sub ((-5 mod ((n)**2 mul abs(x_0_4))) mul 5))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 2 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 6 + 6 + 6 + 6 + 7", "x2": "relu idiv abs add n x_0_1 INT+ 5", "tree": "relu((abs((n add x_0_1)) idiv 5))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 2 - 4 + 3 - 8 + 1 - 6 + 8 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "add mod n INT- 3 relu add INT- 1 idiv x_0_9 n", "tree": "((n mod -3) add relu((-1 add (x_0_9 idiv n))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 - 7 - 6 + 8 + 9 + 2 - 3 + 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1", "x2": "sign abs abs sub n mul sub x_0_6 idiv x_0_3 idiv x_0_7 mul INT+ 3 n sqr INT- 1", "tree": "sign(abs(abs((n sub ((x_0_6 sub (x_0_3 idiv (x_0_7 idiv (3 mul n)))) mul (-1)**2)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 3 - 4 - 3 + 1 + 1 + 1 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "sqr mod n add n sign x_0_3", "tree": "((n mod (n add sign(x_0_3))))**2", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 6 + 0 - 5 + 0 + 0 - 2 + 0 + 0 - 5 + 0 + 0 - 2 + 0 + 0 - 5 + 0 + 0 - 2 + 0 + 0 - 5 + 0 + 0 - 2 + 0 + 0 - 5 + 0 + 0 - 2 + 0", "x2": "sub n add n mod x_0_3 sub x_0_1 INT- 7", "tree": "(n sub (n add (x_0_3 mod (x_0_1 sub -7))))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 16 + 64 + 256 + 1024 + 4096 + 1 6384 + 6 5536 + 26 2144 + 104 8576 + 419 4304 + 1677 7216 + 6710 8864 + 2 6843 5456 + 10 7374 1824 + 42 9496 7296 + 171 7986 9184 + 687 1947 6736 + 2748 7790 6944 + 1 995 1162 7776 + 4 3980 4651 1104 + 17 5921 8604 4416 + 70 3687 4417 7664 + 281 4749 7671 656 + 1125 8999 684 2624 + 4503 5996 2737 496 + 1 8014 3985 948 1984 + 7 2057 5940 3792 7936", "x2": "mul relu add x_0_1 x_0_1 relu INT+ 2", "tree": "(relu((x_0_1 add x_0_1)) mul relu(2))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 37 + 76 + 117 + 160 + 205 + 252 + 301 + 352 + 405 + 460 + 517 + 576 + 637 + 700 + 765 + 832 + 901 + 972 + 1045 + 1120 + 1197 + 1276 + 1357 + 1440 + 1525 + 1612 + 1701 + 1792", "x2": "mul n add n relu sqr INT+ 6", "tree": "(n mul (n add relu((6)**2)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 10 + 6 - 5 - 48 + 20 - 42 - 350 + 144 - 396 - 3520 + 1562 - 4776 - 4 5786 + 2 1840 - 7 1670 - 73 2608 + 37 1246 - 129 96 - 1391 9590 + 742 4880 - 2709 2058 - 3 623 1024 + 1 7077 2194 - 6 5020 9440 - 76 5577 5650 + 44 4007 6992 - 175 5565 4934 - 2143 6171 8256 + 1287 6223 2710 - 5266 6964 8080 - 6 6452 1326 5998", "x2": "mul add x_0_3 INT- 2 n", "tree": "((x_0_3 add -2) mul n)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 + 0 - 1 - 5 + 5 + 7 + 4 - 9 + 4 - 12 - 3 - 1 - 6 + 3 + 4 + 4 - 10 + 2 - 15 - 3 - 2 - 8 + 0 + 4 + 3 - 12 - 1", "x2": "sub x_0_9 mod n abs INT- 4", "tree": "(x_0_9 sub (n mod abs(-4)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 7 - 5 - 10 + 7 - 6 - 7 + 8 - 9 - 10 + 11 - 12 - 13 + 14 - 15 - 16 + 17 - 18 - 19 + 20 - 21 - 22 + 23", "x2": "mul n sign add x_0_3 mod idiv x_0_5 sign abs sign sqr x_0_1 INT- 8", "tree": "(n mul sign((x_0_3 add ((x_0_5 idiv sign(abs(sign((x_0_1)**2)))) mod -8))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 2 - 10 + 10 - 2 - 10 - 2 - 6 - 1 - 13 - 13 - 2 - 23 - 12 - 5 - 14 - 11 - 17 - 6 - 7 - 19 + 1 - 11 - 19 - 11 - 15 - 10", "x2": "sub mod abs idiv abs n n sign mod mul x_0_1 n sign INT+ 1 0 add x_0_9 n", "tree": "((abs((abs(n) idiv n)) mod sign(((x_0_1 mul n) mod sign(10)))) sub (x_0_9 add n))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 9 - 4 - 4 + 2 + 3 + 1 - 23 + 0 + 4 + 5 - 25 - 25 + 6 + 37 - 13 - 45 - 13 + 81 + 64 - 47 - 76 + 102 + 213 + 55", "x2": "add sub x_0_5 sub add sqr INT- 5 x_0_7 x_0_4 add n n", "tree": "((x_0_5 sub (((-5)**2 add x_0_7) sub x_0_4)) add (n add n))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 4 + 0 + 5 - 1 - 9 - 9 + 2 + 9 + 728 + 996 + 1323 + 11 + 18 + 730 + 1005 + 2051 + 1007 + 1341 + 741 + 1023 + 2781 + 2012 + 3392 + 1748 + 2364", "x2": "add mod x_0_5 mul abs n sqr n abs x_0_7", "tree": "((x_0_5 mod (abs(n) mul (n)**2)) add abs(x_0_7))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 10 + 9 - 3 + 5 + 6 + 0 + 0 - 3 - 2 + 0 - 1 + 0 - 2 + 0 - 1 - 1 - 3 + 0 - 1 - 1 + 0 - 1 - 1", "x2": "mod mul add relu n x_0_5 abs abs INT+ 9 INT- 4", "tree": "(((relu(n) add x_0_5) mul abs(abs(9))) mod -4)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 71 + 786 + 6490 + 4 2839 + 23 5620 + 111 785 + 458 1994 + 1680 650 + 5544 2150 + 1 6632 6455 + 4 5739 7757 + 11 6108 6619 + 27 3684 7036 + 60 2106 3485 + 124 1844 3443 + 241 639 218 + 441 9504 8738 + 767 5982 1498", "x2": "sub INT+ 6 idiv mod n mul sub mul INT- 3 INT+ 9 sub INT+ 8 INT+ 2 x_0_1 n", "tree": "(6 sub ((n mod (((-3 mul 9) sub (8 sub 2)) mul x_0_1)) idiv n))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 1 + 10 + 6 + 8 + 5 + 9 + 9 + 11 + 13 + 10 + 14 + 14 + 16 + 18 + 15 + 19 + 19 + 21 + 23", "x2": "add mul relu sub n x_0_1 INT+ 2 add mod n mod INT- 1 INT+ 6 abs n", "tree": "((relu((n sub x_0_1)) mul 2) add ((n mod (-1 mod 6)) add abs(n)))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 9 + 8 - 6 - 5 + 7 + 2 - 4 - 6 - 5 - 11 - 11 - 11 - 13 - 7 - 9 - 10 - 9 - 17 - 16 - 17 - 19", "x2": "sub idiv add INT+ 2 sqr x_0_4 n n", "tree": "(((2 add (x_0_4)**2) idiv n) sub n)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 3 + 5 - 2 + 6 - 1 + 7 + 0 + 8 + 1 + 9 + 2 + 10 + 3 + 11 + 4 + 12 + 5 + 13 + 6", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 3 + 6 - 8 + 6 - 10 + 10 - 54 + 23 - 238 + 71 - 978 + 259 - 3941 + 1006 - 1 5797 + 3990 - 6 3225 + 1 5922 - 25 2941 + 6 3646 - 101 1809 + 25 4538 - 404 7285", "x2": "add sub sub idiv n x_0_6 abs n n mul x_0_2 sqr INT- 2", "tree": "((((n idiv x_0_6) sub abs(n)) sub n) add (x_0_2 mul (-2)**2))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 4 + 6 + 5 + 4 + 6 + 5 + 4 + 6 + 5 + 4 + 6 + 5 + 4 + 6 + 5 + 4 + 6 + 5 + 4 + 6", "x2": "abs idiv x_0_3 INT+ 1", "tree": "abs((x_0_3 idiv 1))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 10 - 3 - 2 + 0 - 10 + 1 - 6 + 3 - 5 - 2 - 2 + 1 - 5 - 1 - 3 + 2 - 3 - 2 - 2 + 1 - 3 - 2 - 2 + 1 - 2", "x2": "add sign add x_0_4 x_0_8 idiv x_0_8 mul INT- 3 sign sub x_0_7 n", "tree": "(sign((x_0_4 add x_0_8)) add (x_0_8 idiv (-3 mul sign((x_0_7 sub n)))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 6 + 2 - 4 + 2 - 6 - 9 - 12 - 11 - 8 - 13 - 2 - 4 + 10 + 7 + 18 + 20 + 20 + 24 + 10 + 17 - 8 - 3 - 28 - 27", "x2": "sub x_0_2 x_0_6", "tree": "(x_0_2 sub x_0_6)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 - 2 - 10 + 8 + 10 - 16 + 882 + 28 - 896 + 3556 + 926 - 4450 + 27 4891 + 5378 - 27 9339 + 232 75 + 28 4719 - 259 9412 + 1 8354 7241 + 288 4133 - 1 8614 6651 + 24 4526 9102", "x2": "sub add add relu mul sqr mul n mod INT- 3 INT- 7 idiv x_0_4 INT- 5 x_0_3 INT+ 2 x_0_2", "tree": "(((relu((((n mul (-3 mod -7)))**2 mul (x_0_4 idiv -5))) add x_0_3) add 2) sub x_0_2)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 2 - 5 + 14 - 27 + 52 - 303 + 70 - 551 + 88 - 871 + 106 - 1263 + 124 - 1727 + 142 - 2263 + 160 - 2871 + 178", "x2": "sub sub sign relu add x_0_2 add x_0_2 x_0_2 mul mod INT- 9 x_0_1 n idiv abs INT+ 6 INT+ 2", "tree": "((sign(relu((x_0_2 add (x_0_2 add x_0_2)))) sub ((-9 mod x_0_1) mul n)) sub (abs(6) idiv 2))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 0 + 5 - 4 + 4 + 2 + 6 + 4 - 430 - 550 - 560 + 10 - 690 - 770 - 790 - 870 - 170 - 50 - 990 - 1050 - 550 - 1050 - 950 - 10 - 150 - 450", "x2": "mul add idiv n n mod sub x_0_8 INT- 4 mul n INT- 6 abs INT+ 1 0", "tree": "(((n idiv n) add ((x_0_8 sub -4) mod (n mul -6))) mul abs(10))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 7 + 21 + 52 + 92 + 141 + 199 + 266 + 342 + 427 + 521 + 624 + 736 + 857 + 987 + 1126 + 1274 + 1431 + 1597 + 1772", "x2": "add mul n INT+ 9 abs sub x_0_1 idiv INT+ 7 INT- 2", "tree": "((n mul 9) add abs((x_0_1 sub (7 idiv -2))))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 7 + 0 + 10 + 8 - 1 - 1 + 0 - 2 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0 - 1 - 1 - 1 - 1 + 0", "x2": "idiv idiv abs x_0_5 sign sign INT- 1 n", "tree": "((abs(x_0_5) idiv sign(sign(-1))) idiv n)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 1 + 6 + 10 + 2 - 8 + 2 - 3 + 3 - 10 + 1 + 1 + 36 + 100 + 4 + 64 + 4 + 9 + 9 + 100 + 1 + 1 + 1296 + 1 0 + 16 + 4096 + 16 + 81", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 4 - 5 - 8 - 7 - 8 - 7 - 10 - 7 - 10 - 9 - 10 - 9 - 8 - 9 - 8 - 7 - 8 - 7 - 10 - 7", "x2": "sub sub n n add INT+ 7 mod mul INT- 9 sub x_0_3 idiv mul INT+ 6 idiv INT+ 1 n n add INT+ 2 INT+ 2", "tree": "((n sub n) sub (7 add ((-9 mul (x_0_3 sub ((6 mul (1 idiv n)) idiv n))) mod (2 add 2))))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 3 - 1 - 39 - 22 - 1209 - 880 - 5 9241 - 5 1040 - 396 9147 - 387 9040 - 3 3737 7495 - 3 6462 9760 - 347 4988 1985 - 408 3853 3120 - 4 2047 3572 185 - 5 3090 930 5600 - 584 4582 6510 5715 - 785 7333 7722 8800 - 9 1759 9476 2159 7255 - 13 431 7406 1998 800", "x2": "mul abs sub mul mod sub sqr relu INT- 5 sign n n INT+ 9 INT+ 5 x_0_2", "tree": "(abs((((((relu(-5))**2 sub sign(n)) mod n) mul 9) sub 5)) mul x_0_2)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 49 + 25 + 9 + 1 + 1 + 9 + 25 + 49 + 81 + 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324", "x2": "sqr sub n mod mul INT- 1 0 n INT+ 9", "tree": "((n sub ((-10 mul n) mod 9)))**2", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 7 + 1 - 6 + 8 - 10 - 3 - 9 + 8 - 9 + 0 - 1 + 9 + 0 + 4 + 7 + 15 + 0 + 20 + 16 + 15 + 4 + 27 + 31 + 15 + 24", "x2": "add x_0_4 mod x_0_7 mod mod INT- 1 n sqr n", "tree": "(x_0_4 add (x_0_7 mod ((-1 mod n) mod (n)**2)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 + 4 + 6 + 0 + 21 + 12 + 0 + 3 + 5 + 0 + 32 + 16 + 0 + 2 + 4 + 0 + 64 + 21 + 0 + 1 + 3", "x2": "relu idiv sqr INT+ 8 mod INT- 1 x_0_3", "tree": "relu(((8)**2 idiv (-1 mod x_0_3)))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 + 2 - 1 + 5 - 5 + 8 + 2 + 2 + 8 - 2 + 1 - 5 + 5 - 8 - 2 - 2 - 8 + 2 - 1 + 5 - 5 + 8 + 2 + 2 + 8", "x2": "idiv x_0_8 INT- 1", "tree": "(x_0_8 idiv -1)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 1 + 9 + 0 - 6 - 3 - 9 + 0 - 4 - 4 - 8 - 8 - 18 - 30 - 36 - 51 - 61 - 71 - 77 - 83 - 88 - 89 - 104 - 119 - 133 - 146", "x2": "sub x_0_1 relu relu mod mod INT+ 4 sub mod idiv x_0_1 INT+ 8 add x_0_8 n n n", "tree": "(x_0_1 sub relu(relu(((4 mod (((x_0_1 idiv 8) mod (x_0_8 add n)) sub n)) mod n))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 9 + 4 + 4 - 2 - 36 - 44 - 54 - 59 - 61 - 64 - 74 - 74 - 84 - 89 - 94 - 99 - 104 - 104 - 114 - 119 - 119 - 129", "x2": "add mod sqr x_0_5 sub INT- 8 INT+ 7 mul n INT- 5", "tree": "(((x_0_5)**2 mod (-8 sub 7)) add (n mul -5))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 + 2 + 1 + 3 + 2 + 4 + 0 + 1 + 1 + 4 + 4 + 2 + 4 + 1 + 2 + 1 + 2 + 1 + 4 + 2 + 4", "x2": "mod sub sqr n sub x_0_3 INT- 1 INT+ 5", "tree": "(((n)**2 sub (x_0_3 sub -1)) mod 5)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 - 6 + 17 + 13 - 10 - 6 + 17 + 13 - 10 - 6 + 17 + 13 - 10 - 6 + 17 + 13 - 10 - 6 + 17 + 13", "x2": "sub INT+ 7 x_0_2", "tree": "(7 sub x_0_2)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3", "x2": "mod n INT- 7", "tree": "(n mod -7)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 1 + 10 - 1 + 10 - 4 - 9 - 9 - 81 - 99 - 121 - 143 - 169 - 195 - 224 - 255 - 284 - 318 - 354 - 392 - 432 - 475 - 519 - 565 - 613 - 663", "x2": "sub idiv sqr n INT- 1 idiv x_0_8 n", "tree": "(((n)**2 idiv -1) sub (x_0_8 idiv n))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 7 + 2 - 9 - 3 + 10 - 7 + 3 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 0 + 1", "x2": "mod n add INT+ 3 add sign x_0_7 mul abs INT+ 2 INT+ 1 0", "tree": "(n mod (3 add (sign(x_0_7) add (abs(2) mul 10))))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 3 - 8 + 10 + 717 + 29 + 671 - 672 - 89 - 1267 + 622 + 209 + 1689 - 560 - 430 - 2020 + 480 + 803 + 2270 - 381 - 1467 - 2459", "x2": "sub idiv sqr mul n sqr INT- 5 sub n sub INT- 4 sub x_0_1 n x_0_3", "tree": "((((n mul (-5)**2))**2 idiv (n sub (-4 sub (x_0_1 sub n)))) sub x_0_3)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 5 + 1 - 6 + 3 + 2 + 4 + 4 + 162 + 150 + 132 + 72 + 208 + 224 + 285 + 320 + 3043 + 3024 + 2869 + 1840 + 4809 + 5412 + 7084 + 8256 + 7 6700 + 7 9300", "x2": "mul relu n add add n x_0_8 mul n mul abs n relu INT- 6", "tree": "(relu(n) mul ((n add x_0_8) add (n mul (abs(n) mul relu(-6)))))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 1 - 5 - 8 - 8 - 8 - 8 - 7 - 7 - 7 - 7 - 7 - 7 - 6 - 6 - 6 - 6 - 6 - 6 - 5 - 5", "x2": "add sub INT- 9 idiv idiv n abs sign relu x_0_2 INT- 6 idiv mod mod n INT- 2 n n", "tree": "((-9 sub ((n idiv abs(sign(relu(x_0_2)))) idiv -6)) add (((n mod -2) mod n) idiv n))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 0 + 3 + 3 + 7 + 2 + 9 + 0 + 16 - 5 + 27 - 19 + 50 - 49 + 98 - 116 + 199 - 261 + 415 - 574 + 877", "x2": "sub sub n x_0_3 sub x_0_1 n", "tree": "((n sub x_0_3) sub (x_0_1 sub n))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 + 10 + 7 + 5 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6", "x2": "add INT+ 1 mod n sub n x_0_3", "tree": "(1 add (n mod (n sub x_0_3)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 6 + 21 + 0 + 0 + 10 + 22 + 0 + 13 + 0 + 15 + 0 + 17 + 0", "x2": "mul relu mod abs abs n idiv add add INT+ 9 sqr INT+ 4 n n n", "tree": "(relu((abs(abs(n)) mod (((9 add (4)**2) add n) idiv n))) mul n)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 5 - 3 + 1 - 9 + 2 - 5 + 0 - 5 + 6 + 2 + 6 + 2 - 5 - 4 - 3 - 2 - 8 - 8 - 8 - 2 - 23 - 11 - 21 - 21 - 7 - 15 - 11 - 21 - 2 - 15", "x2": "mod relu add INT+ 4 mul INT+ 9 relu sqr INT- 9 sub n add add n x_0_12 n", "tree": "(relu((4 add (9 mul relu((-9)**2)))) mod (n sub ((n add x_0_12) add n)))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 6 + 10 - 1 - 7 - 9 - 9 - 45 + 67 - 10 - 52 - 66 - 66 - 318 + 466 - 73 - 367 - 465 - 465 - 2229 + 3259 - 514 - 2572 - 3258 - 3258", "x2": "sub mul INT+ 7 x_0_6 abs INT- 3", "tree": "((7 mul x_0_6) sub abs(-3))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 2 - 9 - 4 + 8 + 4 + 8 + 1 + 3 - 8 - 4 - 8 - 1 - 3 + 9 + 4 + 8 + 1 + 3 - 10 - 4 - 8 - 1 - 3 + 11 + 4", "x2": "add n sub idiv sign add mul mod mod abs INT+ 8 n INT+ 1 0 x_0_7 n x_0_7 add n x_0_5", "tree": "(n add ((sign(((((abs(8) mod n) mod 10) mul x_0_7) add n)) idiv x_0_7) sub (n add x_0_5)))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 4 - 5 - 6 - 4 + 0 + 2 + 1 + 0 + 2 + 6 + 4 + 5 + 6 + 4 + 0 + 2 + 1 + 0 + 2 + 6 + 4 + 5", "x2": "sub INT+ 6 abs x_0_5", "tree": "(6 sub abs(x_0_5))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 5 + 5 - 8 - 5 + 5 + 3 - 10 - 3 + 7 - 5 + 5 - 8 - 5 + 5 + 3 - 10 - 3 + 7 - 5 + 5 - 8 - 5 + 5 + 3 - 10 - 3 + 7", "x2": "mul sqr sign add n sub mul x_0_1 sub INT+ 8 sign x_0_2 n x_0_9", "tree": "((sign((n add ((x_0_1 mul (8 sub sign(x_0_2))) sub n))))**2 mul x_0_9)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 7 - 4 - 9 + 9 - 31 + 7 - 50 - 59 - 46 - 92 - 62 - 50 - 141 - 134 - 187 - 163 - 155 - 251 - 134 - 311 - 290 - 288", "x2": "add mod mod sub x_0_3 abs x_0_2 sub INT- 1 INT- 7 mul INT- 6 n x_0_5", "tree": "((((x_0_3 sub abs(x_0_2)) mod (-1 sub -7)) mod (-6 mul n)) add x_0_5)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 1 + 7 + 1 + 8 + 2 + 9 + 3 + 10 + 5 + 12 + 7 + 14 + 9 + 16 + 11 + 18 + 14 + 21 + 17 + 24", "x2": "sub relu x_0_2 idiv n INT- 8", "tree": "(relu(x_0_2) sub (n idiv -8))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 - 6 + 6 + 2 - 3 + 10 - 2 + 11 + 3 + 12 + 10 + 21 + 20 + 31 + 22 + 42 + 31 + 44 + 31 + 54 + 31 + 73 + 38 + 92", "x2": "sub sub x_0_2 mul idiv mul n INT- 1 n mod x_0_6 n sign mul sqr n idiv n INT+ 5", "tree": "((x_0_2 sub (((n mul -1) idiv n) mul (x_0_6 mod n))) sub sign(((n)**2 mul (n idiv 5))))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 8 + 1 - 9 - 9 + 5 + 7 + 8 + 7 + 96 + 121 + 145 + 165 + 191 + 205 + 233 + 264 + 299 + 246 + 259 + 275 + 297 + 315 + 347 + 367 + 386 + 403", "x2": "sub sqr n mod add x_0_9 n add x_0_7 x_0_3", "tree": "((n)**2 sub ((x_0_9 add n) mod (x_0_7 add x_0_3)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189", "x2": "add abs x_0_1 n", "tree": "(abs(x_0_1) add n)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 1 + 8 + 6 + 5 + 4 - 5 - 5 - 3 - 10 - 8 - 7 - 6 + 3 + 3 + 1 + 8 + 6 + 5 + 4 - 5 - 5 - 3 - 10 - 8", "x2": "sub n abs sub abs relu INT+ 4 add add n INT+ 6 x_0_7", "tree": "(n sub abs((abs(relu(4)) sub ((n add 6) add x_0_7))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 3 + 4 + 6 + 10 + 1 + 14 + 12 + 10 + 13 + 22 + 10 + 24 + 24 + 23 + 27 + 37 + 26 + 41 + 42 + 43 + 48 + 59 + 49", "x2": "sub n sub mod INT+ 4 x_0_5 add x_0_6 relu idiv n INT+ 7", "tree": "(n sub ((4 mod x_0_5) sub (x_0_6 add relu((n idiv 7)))))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 9 + 7 - 3 - 6 + 5 + 5 - 4 + 8 - 1 + 5 - 8 + 0 + 11 + 2 + 5 + 8 + 5 - 2 - 7 + 12 + 14 + 8 + 14 + 14 + 4 - 8", "x2": "sub add x_0_8 n add n sub mod idiv INT- 6 INT+ 1 0 INT- 9 x_0_7", "tree": "((x_0_8 add n) sub (n add (((-6 idiv 10) mod -9) sub x_0_7)))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 9 - 4 - 6 + 10 + 5 + 7 + 0 + 4 + 6 + 0 + 4 + 5 + 0 + 4 + 4 + 0 + 4 + 4 + 0 + 4 + 4", "x2": "relu relu abs add x_0_3 idiv idiv x_0_3 INT+ 5 mul INT- 1 0 add INT- 7 n", "tree": "relu(relu(abs((x_0_3 add ((x_0_3 idiv 5) idiv (-10 mul (-7 add n)))))))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 7 + 1 - 4 - 6 - 6 + 42 + 56 + 9 - 40 - 66 - 72 + 546 + 784 + 135 - 640 - 1122 - 1296 + 1 374 + 1 5680 + 2835 - 1 4080 - 2 5806 - 3 1104", "x2": "mul x_0_6 n", "tree": "(x_0_6 mul n)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 7 + 3 + 11 + 2 - 5 + 5 + 13 + 4 - 3 + 7 + 15 + 6 - 1 + 9 + 17 + 8 + 1 + 11 + 19", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 9 + 7 + 3 + 24 + 5 + 96 + 14 + 704 + 54 + 6960 + 506 + 8 3424 + 6474 + 116 7824 + 9 6990 + 1868 5056 + 164 8694 + 3 3633 864 + 3132 5034 + 67 2661 7120", "x2": "add mul relu n mod INT- 9 x_0_2 n", "tree": "((relu(n) mul (-9 mod x_0_2)) add n)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 + 5 + 0 - 4 + 0 + 5 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 5 + 0 + 0 + 0 + 5", "x2": "relu mul x_0_4 sign n", "tree": "relu((x_0_4 mul sign(n)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 8 + 5 - 192 + 180 + 768 - 720 + 1 8432 + 2880 - 7 3728 + 6 9120 + 29 4912 - 27 6480 + 707 7888 + 110 5920 - 2831 1552 + 2654 2080 + 1 1324 6208 - 1 616 8320 + 27 1790 8992 + 4 2467 3280", "x2": "mul mul INT- 4 mod sign n add INT- 7 mod abs x_0_2 mod INT- 4 x_0_1 x_0_2", "tree": "((-4 mul (sign(n) mod (-7 add (abs(x_0_2) mod (-4 mod x_0_1))))) mul x_0_2)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 - 9 + 4 - 6 + 4 + 4 + 10 + 0 + 4 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0", "x2": "mod x_0_3 sub relu n x_0_5", "tree": "(x_0_3 mod (relu(n) sub x_0_5))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 9 + 8 + 3 - 4 + 2 + 2 - 9 + 80 + 99 + 10 + 1001 + 1332 + 299 + 1 4210 + 2 205 + 5040 + 24 1859 + 36 4014 + 9 6121 + 483 7580 + 764 4735 + 211 5146 + 1 1126 4869 + 1 8347 4216 + 5287 9275", "x2": "abs sub mul mod x_0_7 idiv n n relu x_0_4 mul abs add n x_0_3 n", "tree": "abs((((x_0_7 mod (n idiv n)) mul relu(x_0_4)) sub (abs((n add x_0_3)) mul n)))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 3 + 1 + 397 + 627 + 905 + 835 + 981 + 1129 + 1675 + 2055 + 2483 + 2563 + 2859 + 3157 + 3853 + 4383 + 4961 + 5191 + 5637 + 6085", "x2": "add sub n x_0_3 relu sqr mul n INT- 5", "tree": "((n sub x_0_3) add relu(((n mul -5))**2))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 5 - 10 + 2 - 3 - 5 + 11 + 17 + 6 + 12 + 15 + 0 - 5 + 7 + 2 + 0 + 16 + 22 + 11 + 17 + 20 + 5 + 0 + 12", "x2": "sub mul n sqr sign n x_0_5", "tree": "((n mul (sign(n))**2) sub x_0_5)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 - 4 - 10 + 5 + 4 + 0 - 5 - 2 - 20 - 3 - 10 - 2 - 1 + 0 - 2 - 1 - 49 - 2 - 12 - 1 - 1 + 0 - 1 - 1 - 278 - 1", "x2": "idiv mul x_0_8 add INT- 2 x_0_8 sub x_0_4 INT+ 8", "tree": "((x_0_8 mul (-2 add x_0_8)) idiv (x_0_4 sub 8))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 5 + 7 - 8 + 6 - 125 + 252 - 392 + 384 - 1 125 + 2 5200 - 4 7432 + 5 5296 - 171 1125 + 493 9200 - 1067 2200 + 1415 5776 - 4 9451 5125 + 16 30 800 - 38 5266 4200 + 56 6231 400 - 2180 8117 125 + 7745 4558 7200", "x2": "mul x_0_4 sqr n", "tree": "(x_0_4 mul (n)**2)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 4 + 10 + 5 - 1 + 18 + 17 - 46 + 24 + 23 - 48 + 29 + 28 - 54 + 32 + 32 - 64 + 35 + 35 - 78 + 37 + 37", "x2": "add sub sub INT+ 9 INT- 2 sub n x_0_3 idiv mul n n x_0_3", "tree": "(((9 sub -2) sub (n sub x_0_3)) add ((n mul n) idiv x_0_3))", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 6 - 2 + 10 - 2 + 10 - 2 - 10 - 3 - 4 - 7 + 1303 - 369 + 21 1094 + 1 1962 + 3419 7234 - 38 7563 + 55 3995 1913 - 1255 7035 + 5983 1480 6609 - 10 1711 9828 + 27 6934 2819 1624 + 2 5291 3916 + 24 3161 8085 1188 - 38 8180 - 6586 2252 960 + 7 - 5 5060 3889 + 3", "x2": "add add idiv mul mul INT+ 2 INT- 1 0 INT- 4 n mul INT- 4 idiv mul x_0_2 sqr INT+ 9 x_0_11 INT+ 1", "tree": "(((((2 mul -10) mul -4) idiv n) add (-4 mul ((x_0_2 mul (9)**2) idiv x_0_11))) add 1)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 2 + 4 + 6 + 8 + 10 + 12 + 14 + 8 + 10 + 12 + 14 + 16 + 18 + 20 + 22 + 16 + 18 + 20", "x2": "add n mod n INT+ 8", "tree": "(n add (n mod 8))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 6 + 9 - 9 + 4 - 24 + 169 - 1352 + 1 2168 - 12 1678 + 133 8458 - 1606 1496 + 2 879 9448 - 29 2319 2272 + 438 4788 4080 - 7015 6614 5280 + 11 9266 2446 9760 - 214 6792 4045 5680 + 4078 9055 6865 7920 - 8 1578 1113 7315 8400 + 171 3140 3388 3632 6400 - 3768 9087 4543 9918 800 + 8 6684 9011 4511 8115 8400", "x2": "sub relu relu idiv idiv mul x_0_1 sub INT- 3 INT- 2 x_0_2 x_0_5 mul mul x_0_1 INT+ 1 n", "tree": "(relu(relu((((x_0_1 mul (-3 sub -2)) idiv x_0_2) idiv x_0_5))) sub ((x_0_1 mul 1) mul n))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 1 + 2 - 6 - 9 - 1 - 68 - 6 - 9 - 1 - 68 - 6 - 9 - 1 - 68 - 6 - 9 - 1 - 68 - 6 - 9 - 1 - 68", "x2": "mod x_0_4 mul INT+ 1 0 add x_0_1 x_0_3", "tree": "(x_0_4 mod (10 mul (x_0_1 add x_0_3)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 - 4 - 31 - 36 - 11 + 124 + 149 + 24 - 651 - 776 - 151 + 3224 + 3849 + 724 - 1 6151 - 1 9276 - 3651 + 8 724 + 9 6349 + 1 8224", "x2": "add mul add idiv idiv n n n INT- 5 add INT+ 6 x_0_3 INT- 1", "tree": "(((((n idiv n) idiv n) add -5) mul (6 add x_0_3)) add -1)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 + 6 - 7 - 3 + 9 + 0 - 2 - 2 - 1 + 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 + 0", "x2": "idiv x_0_5 sub INT+ 4 mod x_0_7 INT- 3", "tree": "(x_0_5 idiv (4 sub (x_0_7 mod -3)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 7 - 5 - 10 - 9 + 1 + 7 - 8 + 8 - 7 - 5 - 3 + 60 + 104 + 56 + 90 + 272 + 408 + 180 + 513 + 260 + 336 + 418 + 1909 + 3072 + 2025 + 3016 + 8073 + 1 2208 + 6061", "x2": "abs mul add x_0_11 n abs add idiv n sqr INT+ 1 0 n", "tree": "abs(((x_0_11 add n) mul abs(((n idiv (10)**2) add n))))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 5 + 0 - 8 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0", "x2": "mod mul INT- 1 add x_0_3 mod n idiv INT- 4 relu n INT+ 2", "tree": "((-1 mul (x_0_3 add (n mod (-4 idiv relu(n))))) mod 2)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 - 3 + 1 + 0 + 3 - 8 - 8 + 6 - 4 + 0 - 2 + 2 + 1 + 4 - 7 - 7 + 7 - 3 + 1 - 1 + 3 + 2 + 5 - 6 - 6 + 8 - 2", "x2": "add sign n x_0_9", "tree": "(sign(n) add x_0_9)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 2 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign idiv mul INT+ 3 sign INT- 1 x_0_2", "tree": "sign(((3 mul sign(-1)) idiv x_0_2))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 + 6 - 1 + 3 + 0 + 6 + 0 + 3 + 0 + 6 + 0 + 3 + 0 + 6 + 0 + 3 + 0 + 6 + 0 + 3 + 0 + 6", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 3 + 6 + 8 - 3 - 4 - 18 - 13 - 4 + 11 - 6 - 17 - 15 - 26 - 7 + 5 - 2 - 33 - 42 - 41 + 0 + 20 + 11 - 44", "x2": "sub abs add abs n sub x_0_6 x_0_3 add n add n INT+ 5", "tree": "(abs((abs(n) add (x_0_6 sub x_0_3))) sub (n add (n add 5)))", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 6 + 6 - 8 + 10 - 1 + 14 - 3 + 9 - 5 + 13 + 2 + 17 + 0 + 12 - 2 + 16 + 5 + 20 + 3 + 15 + 1", "x2": "sub n x_0_3", "tree": "(n sub x_0_3)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 - 6 - 8 - 7 + 6 - 5 - 7 + 10 + 584 + 682 + 792 + 907 + 1018 + 1161 + 1303 + 1434 + 1016 + 1082 + 1144 + 1209 + 1286 + 1339 + 1401 + 1482 + 2120 + 2282", "x2": "sub sqr relu idiv add INT+ 6 mul INT+ 2 n idiv sign mul INT- 1 0 INT- 1 0 INT+ 1 x_0_8", "tree": "((relu(((6 add (2 mul n)) idiv (sign((-10 mul -10)) idiv 1))))**2 sub x_0_8)", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 1 - 6 - 1 + 9 + 242 + 319 + 382 + 539 + 770 + 3488 + 4814 + 6126 + 8894 + 1 3100 + 5 7574 + 8 3834 + 11 2508 + 17 1484 + 26 4770 + 121 2110 + 184 7704 + 259 1354", "x2": "mod INT- 1 0 sub mul add mul n INT+ 7 x_0_5 n n", "tree": "(-10 mod ((((n mul 7) add x_0_5) mul n) sub n))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 6 + 4 - 9 - 9 + 10 + 4 - 3 + 8 + 10 - 6 - 4 - 16 - 7 - 21 - 22 - 4 - 11 - 19 - 9 - 8 - 25 - 24 - 37 - 29 - 44 - 46 - 29 - 37", "x2": "sub add sub x_0_11 sign sub n sub n mod n n INT+ 4 n", "tree": "(((x_0_11 sub sign((n sub (n sub (n mod n))))) add 4) sub n)", "n_input_points": "18", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 9 + 7 + 8 - 2 - 10 - 4 + 2 + 18 + 19 + 9 + 1 + 7 + 13 + 29 + 30 + 20 + 12 + 18 + 24 + 40 + 41 + 31 + 23 + 29", "x2": "abs add relu add INT+ 1 add mul mod x_0_1 sign mod x_0_5 x_0_1 relu n INT+ 1 0 x_0_6", "tree": "abs((relu((1 add (((x_0_1 mod sign((x_0_5 mod x_0_1))) mul relu(n)) add 10))) add x_0_6))", "n_input_points": "18", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 4 + 6 + 10 + 10 - 14 - 4 + 0 + 0 - 24 - 14 - 10 - 10 - 34 - 24 - 20 - 20 - 44 - 34 - 30 - 30 - 54 - 44", "x2": "sub x_0_4 INT+ 1 0", "tree": "(x_0_4 sub 10)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 7 + 6 - 4 + 6 - 7 - 1 - 3 + 196 + 36 + 0 + 36 + 196 + 9 + 144 + 96 400 + 4 6656 + 0 + 8 2944 + 311 1696 + 8100 + 250 9056 + 132 8210 1504 0 + 3678 7621 4784 + 0 + 1 5479 3410 5600", "x2": "abs sqr mul sub n INT+ 1 0 x_0_7", "tree": "abs((((n sub 10) mul x_0_7))**2)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 6 + 4 + 2 - 5 + 5 + 3 - 4 + 6 + 4 - 3 + 7 + 5 - 2 + 8 + 6 - 1 + 9 + 7 + 0 + 10 + 8", "x2": "add INT+ 1 x_0_3", "tree": "(1 add x_0_3)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 9 - 8 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0 + 5 + 0 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 9 + 81 - 729 + 6561 - 5 9049 + 53 1441 - 478 2969 + 4304 6721 - 3 8742 489 + 34 8678 4401 - 313 8105 9609 + 2824 2953 6481 - 2 5418 6582 8329 + 22 8767 9245 4961 - 205 8911 3209 4649 + 1853 201 8885 1841 - 1 6677 1816 9966 6569 + 15 94 6352 9699 9121", "x2": "mul mod x_0_1 INT- 1 0 x_0_1", "tree": "((x_0_1 mod -10) mul x_0_1)", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 3 + 4 - 2 + 2 + 3 + 4 - 2 + 2 + 3 + 4 - 2 + 2 + 3 + 4 - 2 + 2 + 3 + 4 - 2 + 2 + 3", "x2": "add x_0_4 idiv INT+ 3 INT+ 6", "tree": "(x_0_4 add (3 idiv 6))", "n_input_points": "18", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 2 + 3 + 5 + 1 + 0 + 5 + 7 + 3 + 2 + 7 + 9 + 5 + 4 + 9 + 11 + 7 + 6 + 11 + 13 + 9", "x2": "sub n x_0_2", "tree": "(n sub x_0_2)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 2 + 6 + 2 + 8 + 4 + 10 + 6 + 12 + 8 + 14 + 10 + 16 + 12 + 18 + 14 + 20 + 16 + 22", "x2": "sub add idiv n sign mul sign n sign n n relu x_0_1", "tree": "(((n idiv sign((sign(n) mul sign(n)))) add n) sub relu(x_0_1))", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325", "x2": "add sub sqr n sub INT- 5 sign INT+ 7 INT- 5", "tree": "(((n)**2 sub (-5 sub sign(7))) add -5)", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 2 - 1 - 5 - 10 - 16 - 23 - 31 - 40 - 50 - 61 - 73 - 86 - 100 - 115 - 131 - 148 - 166 - 185", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "18", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 + 0 + 2 + 4 + 6 + 0 + 2 + 4 + 6 + 0 + 2 + 4 + 6 + 0 + 2 + 4 + 6", "x2": "mod add sub add n sqr sqr INT- 1 0 mod INT- 2 INT- 6 relu n INT+ 8", "tree": "((((n add ((-10)**2)**2) sub (-2 mod -6)) add relu(n)) mod 8)", "n_input_points": "18", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211", "x2": "add n sub x_0_1 sign INT- 6", "tree": "(n add (x_0_1 sub sign(-6)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 - 1 + 9 + 1 - 7 - 24 - 39 - 45 - 60 - 84 - 126 - 184 - 249 - 330 - 436 - 585 - 793 - 1067 - 1423 - 1886 - 2499 - 3321 - 4418", "x2": "sub x_0_5 sub n add INT- 7 x_0_1", "tree": "(x_0_5 sub (n sub (-7 add x_0_1)))", "n_input_points": "18", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 10 + 4 - 2 + 5 - 16 + 40 - 16 + 5 - 2 + 12 - 30 + 82 - 16 + 5 - 2 + 12 - 44 + 124 - 23 + 5 - 2", "x2": "sub INT- 2 mul INT+ 7 idiv add n relu n x_0_3", "tree": "(-2 sub (7 mul ((n add relu(n)) idiv x_0_3)))", "n_input_points": "18", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 4 + 10 + 10 - 4 + 0 + 1 + 11 + 9 + 15 + 9 + 14 + 2 + 4 + 13 + 5 + 1 + 3 + 3 + 10 + 2 + 9 + 1", "x2": "abs sub x_0_2 add idiv x_0_5 abs sign x_0_3 abs relu idiv x_0_4 n", "tree": "abs((x_0_2 sub ((x_0_5 idiv abs(sign(x_0_3))) add abs(relu((x_0_4 idiv n))))))", "n_input_points": "18", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 3 + 14 + 19 + 39 + 55 + 88 + 119 + 169 + 219 + 290 + 363 + 459 + 559 + 684 + 815 + 973 + 1139 + 1334 + 1539", "x2": "add sqr relu n relu x_0_2", "tree": "((relu(n))**2 add relu(x_0_2))", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 9 - 10 - 1 - 1 + 2 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3", "x2": "idiv sub sub x_0_3 sign sub add x_0_3 n n n INT- 6", "tree": "(((x_0_3 sub sign(((x_0_3 add n) sub n))) sub n) idiv -6)", "n_input_points": "18", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 5 + 2 - 3 - 3 - 1 + 68 + 450 + 76 + 180 + 189 + 22 + 10 6352 + 486 0 + 14 4400 + 84 2400 + 96 4467 + 1 3552 + 3280 1168 9216 + 708 5880 0 0 + 6463 9216 0 + 22 7084 832 0 + 30 6964 8760 4937 + 62 4432 7936", "x2": "mul add n abs INT- 1 0 sqr x_0_6", "tree": "((n add abs(-10)) mul (x_0_6)**2)", "n_input_points": "18", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 4 - 10 + 1 + 9 + 1 + 4 + 36 + 1 + 25 + 36 + 64 + 25 + 16 + 4 + 36 + 81 + 49 + 196 + 256 + 1 + 81 + 36 + 289 + 289 + 361 + 64 + 225 + 169 + 729 + 576", "x2": "sqr idiv mod add abs INT- 5 x_0_2 n sign mul sign relu abs INT- 3 INT+ 1", "tree": "((((abs(-5) add x_0_2) mod n) idiv sign((sign(relu(abs(-3))) mul 1))))**2", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 - 2 - 2 + 60 + 284 + 778 + 1674 + 3128 + 5320 + 8454 + 1 2758 + 1 8484 + 2 5908 + 3 5330 + 4 7074 + 6 1488 + 7 8944 + 9 9838 + 12 4590 + 15 3644 + 18 7468 + 22 6554 + 27 1418 + 32 2600 + 38 664 + 44 6198 + 51 9814 + 60 2148", "x2": "sub sqr mod INT- 8 sqr n n", "tree": "(((-8 mod (n)**2))**2 sub n)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 9 - 2 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1", "x2": "mod abs n sub INT+ 2 mul INT+ 1 sub mod x_0_3 sub INT- 8 INT- 7 INT- 6", "tree": "(abs(n) mod (2 sub (1 mul ((x_0_3 mod (-8 sub -7)) sub -6))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 1 + 8 + 7 - 1 - 5 - 1 + 10 + 7 + 8 + 7 + 10 + 7 + 12 + 10 + 7 + 8 + 7 + 10 + 7 + 12 + 10 + 7 + 8 + 7 + 10 + 7 + 12 + 10 + 7 + 8 + 7 + 10 + 7 + 12 + 10", "x2": "mod x_0_7 n", "tree": "(x_0_7 mod n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 6 + 7 - 4 + 0 + 10 + 2 + 10 + 7 + 2 + 7 + 0 + 4 + 10 + 6 + 14 + 11 + 6 + 11 + 4 + 8 + 14 + 10 + 18 + 15 + 10 + 15 + 8 + 12 + 18 + 14 + 22", "x2": "abs add n sub INT- 2 x_0_4", "tree": "abs((n add (-2 sub x_0_4)))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 1 - 1 - 2 - 1 - 3 - 1 - 4 - 1 - 5 - 1 - 6 - 1 - 7 - 1 - 8 - 1 - 9 - 1 - 10 - 1 - 11 - 1 - 12 - 1 - 13 - 1 - 14 - 1", "x2": "mul idiv n sub sign idiv relu n n add relu x_0_1 x_0_1 sign x_0_1", "tree": "((n idiv (sign((relu(n) idiv n)) sub (relu(x_0_1) add x_0_1))) mul sign(x_0_1))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 9 + 9 - 1 - 4 - 6 - 4 - 6 - 1 - 6 + 0 - 12 - 13 - 12 - 4 - 11 + 2 - 17 + 7 - 27 + 16 - 25 + 13 - 48 + 35 - 25 + 11 - 52 + 37 - 33 + 17 - 64", "x2": "sub idiv x_0_3 mul n sqr n add mod abs x_0_2 add x_0_3 x_0_1 abs n", "tree": "((x_0_3 idiv (n mul (n)**2)) sub ((abs(x_0_2) mod (x_0_3 add x_0_1)) add abs(n)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 4 - 10 - 3 - 10 - 1 - 6 + 5 + 10 + 5 + 319 + 324 + 455 + 280 + 435 + 352 + 493 + 360 + 323 + 480 + 6468 + 6886 + 1 212 + 6456 + 1 600 + 8866 + 1 3014 + 9772 + 9048 + 1 4070 + 20 167 + 22 0 + 33 6633 + 21 9130 + 37 615 + 31 8780 + 48 1111 + 37 918", "x2": "mul abs sub n sub mod add INT+ 8 INT+ 4 x_0_3 add abs sub n x_0_10 INT+ 1 n", "tree": "(abs((n sub (((8 add 4) mod x_0_3) sub (abs((n sub x_0_10)) add 1)))) mul n)", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 1 + 5 - 2 + 2 - 7 + 7 + 1 - 4 + 15 + 1 + 12 - 1 + 22 + 2 + 3 + 27 - 6 + 19 - 5 + 31 - 12 + 9 + 32 - 25 + 33 - 16 + 44 - 35 + 29 + 31 - 49 + 66 - 41 + 68 - 71 + 72", "x2": "sub idiv INT+ 7 add idiv n INT- 7 n add sub n sub add x_0_7 n INT- 8 x_0_8", "tree": "((7 idiv ((n idiv -7) add n)) sub ((n sub ((x_0_7 add n) sub -8)) add x_0_8))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 2 - 4 + 2 - 3 + 8 - 9 + 10 + 10 + 7 + 5 + 0 + 0 + 336 + 0 + 1792 + 0 + 2880 + 3230 + 2520 + 1995 + 0 + 0 + 17 7408 + 0 + 111 8208 + 0 + 209 6640 + 252 9090 + 211 6800 + 179 3505 + 0 + 0 + 1 9301 9904 + 0 + 13 6868 6592 + 0 + 28 6820 3520 + 36 4947 6870", "x2": "relu mul add mul n n add INT+ 2 INT- 3 x_0_10", "tree": "relu((((n mul n) add (2 add -3)) mul x_0_10))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 7 - 6 + 8 + 4 + 1 - 163 - 168 - 162 + 1478 + 1677 + 1752 - 1 9455 - 2 3746 - 2 6577 + 31 984 + 40 3355 + 47 8026 - 590 9129 - 806 7572 - 1003 9059 + 1 3000 326 + 1 8555 3601 + 2 4093 6816 - 32 5000 8847 - 48 2439 4374 - 65 529 4833 + 910 24 6916 + 1399 743 5991 + 1951 5884 4078 - 2 8210 765 5429 - 4 4770 3795 2808 - 6 4402 4185 5735 + 95 9142 6028 3426", "x2": "add n add mul n sub sub sign x_0_6 n x_0_3 mul INT- 8 INT+ 9", "tree": "(n add ((n mul ((sign(x_0_6) sub n) sub x_0_3)) add (-8 mul 9)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 22 + 75 + 316 + 1605 + 9666 + 6 7711 + 54 1752 + 487 5849 + 4875 8590 + 5 3634 4611 + 64 3613 5476 + 836 6976 1357 + 1 1713 7665 9194 + 17 5706 4988 8135 + 281 1303 9821 416 + 4779 2167 6957 7361 + 8 6025 9018 5239 2822 + 163 4492 1351 9546 3979 + 3268 9842 7039 927 9980 + 6 8648 6696 7820 9488 21 + 151 270 7329 2060 8736 946 + 3473 6226 8571 7400 930 2287 + 8 3366 9444 5721 7602 2325 5464 + 208 4173 6114 3044 55 8138 7225 + 5418 8513 8971 9144 1451 1606 8526 + 14 6308 9875 2241 6891 9181 3385 931 + 409 6651 6506 2767 2973 7077 4782 6852 + 1 1880 2897 8682 251 6237 5246 8697 9549", "x2": "mul n add x_0_1 idiv sqr n n", "tree": "(n mul (x_0_1 add ((n)**2 idiv n)))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 82 + 326 + 732 + 1300 + 2030 + 2922 + 3976 + 5192 + 6570 + 8110 + 9812 + 1 1676 + 1 3702 + 1 5890 + 1 8240 + 2 752 + 2 3426 + 2 6262 + 2 9260 + 3 2420 + 3 5742 + 3 9226 + 4 2872 + 4 6680 + 5 650 + 5 4782 + 5 9076 + 6 3532", "x2": "add sqr mul INT+ 9 n n", "tree": "(((9 mul n))**2 add n)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 7 + 3 + 4 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0", "x2": "abs abs mod relu n sub x_0_2 idiv INT+ 8 INT- 6", "tree": "abs(abs((relu(n) mod (x_0_2 sub (8 idiv -6)))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 16 + 32 + 32 + 72 + 80 + 56 + 72 + 104 + 88 + 120 + 96 + 112 + 144 + 128 + 160 + 136 + 152 + 184 + 168 + 200 + 176 + 192 + 224 + 208 + 240 + 216 + 232 + 264", "x2": "mul INT+ 8 add n abs idiv mod mod sqr x_0_1 INT+ 5 n sign abs n", "tree": "(8 mul (n add abs(((((x_0_1)**2 mod 5) mod n) idiv sign(abs(n))))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 4 + 12 + 48 + 240 + 1440 + 1 80 + 8 640 + 72 5760 + 725 7600 + 7983 3600 + 9 5800 3200 + 124 5404 1600 + 1743 5658 2400 + 2 6153 4873 6000 + 41 8455 7977 6000 + 711 3748 5619 2000 + 1 2804 7474 1145 6000 + 24 3290 2008 1766 4000 + 486 5804 163 5328 0 + 1 218 1884 3434 1888 0 + 22 4800 1455 5552 1536 0 + 517 403 3477 7699 5328 0 + 1 2408 9680 3466 4788 7872 0 + 31 224 2008 6661 9719 6800 0 + 806 5829 2225 3211 2711 6800 0 + 2 1777 7389 83 6704 3215 3600 0 + 60 9776 6892 2342 7721 30 800 0 + 1768 3523 9874 7940 3909 872 3200 0", "x2": "mul mul sign abs mod x_0_1 n x_0_1 n", "tree": "((sign(abs((x_0_1 mod n))) mul x_0_1) mul n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 4 + 9 - 12 + 36 - 60 + 216 - 420 + 1728 - 3780 + 1 7280 - 4 1580 + 20 7360 - 54 540 + 290 3040 - 810 8100 + 4644 8640 - 1 3783 7700 + 8 3607 5520 - 26 1891 6300 + 167 2151 400 - 549 9724 2300 + 3678 7322 8800 - 1 2649 3657 2900 + 8 8289 5749 1200 - 31 6234 1432 2500 + 229 5528 9477 1200 - 853 8321 8670 7500 + 6427 4810 5359 3600 - 2 4761 1334 1451 7500 + 19 2824 4316 780 8000", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 14 + 25 + 37 + 50 + 64 + 79 + 95 + 112 + 130 + 149 + 169 + 190 + 212 + 235 + 259 + 284 + 310 + 337 + 365 + 394 + 424 + 455 + 487 + 520 + 554 + 589 + 625 + 662", "x2": "add add sub INT+ 9 sign add sign n x_0_1 n x_0_1", "tree": "(((9 sub sign((sign(n) add x_0_1))) add n) add x_0_1)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 17 + 25 + 35 + 47 + 60 + 75 + 92 + 111 + 132 + 155 + 179 + 205 + 233 + 263 + 295 + 329 + 365 + 403 + 443 + 485 + 529 + 575 + 622 + 671 + 722 + 775 + 830 + 887", "x2": "add add x_0_1 idiv x_0_1 add INT+ 1 sub n sub INT+ 3 sub sign x_0_1 INT- 1 n", "tree": "((x_0_1 add (x_0_1 idiv (1 add (n sub (3 sub (sign(x_0_1) sub -1)))))) add n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 7 + 8 + 0 - 1 - 3 + 1 + 2 - 7 + 8 + 0 - 1 - 3 + 1 + 2 - 7 + 8 + 0 - 1 - 3 + 1 + 2 - 7 + 8 + 0 - 1 - 3 + 1 + 2 - 7 + 8 + 0 - 1 - 3 + 1", "x2": "mul INT+ 1 x_0_7", "tree": "(1 mul x_0_7)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 6 + 9 - 8 + 4 - 3 - 5 + 1 + 9 - 1 - 5 + 0 + 3 + 10 + 5 + 2 + 16 + 9 + 2 + 0 + 4 + 8 + 10 - 12 + 12 + 19 + 9 + 0 + 14 + 9 + 26 - 22 - 1 + 20 + 21 + 0 + 19 + 4 + 59 - 19 - 5", "x2": "add sub abs x_0_12 idiv INT+ 2 INT- 1 sub x_0_8 x_0_7", "tree": "((abs(x_0_12) sub (2 idiv -1)) add (x_0_8 sub x_0_7))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 6 - 1 + 6 - 6 + 1 - 6 + 6 - 1 + 6 - 6 + 1 - 6 + 6 - 1 + 6 - 6 + 1 - 6 + 6 - 1 + 6 - 6 + 1 - 6 + 6 - 1 + 6 - 6 + 1 - 6 + 6", "x2": "sub add mul sub relu INT+ 7 INT+ 8 x_0_3 sign INT+ 2 INT+ 1", "tree": "((((relu(7) sub 8) mul x_0_3) add sign(2)) sub 1)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 - 7 + 8 + 6 + 1 + 1 + 8 + 16 + 97 + 267 + 410 + 614 + 679 + 721 + 751 + 783 + 817 + 853 + 891 + 931 + 973 + 1017 + 1063 + 1111 + 1161 + 1213 + 1267 + 1323 + 1381 + 1441 + 1503 + 1567", "x2": "add add idiv INT+ 1 add x_0_2 INT+ 3 abs add x_0_1 n mul idiv x_0_2 x_0_4 relu n", "tree": "(((1 idiv (x_0_2 add 3)) add abs((x_0_1 add n))) add ((x_0_2 idiv x_0_4) mul relu(n)))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 9 - 36 - 81 - 144 - 225 - 324 - 441 - 576 - 729 - 900 - 1089 - 1296 - 1521 - 1764 - 2025 - 2304 - 2601 - 2916 - 3249 - 3600 - 3969 - 4356 - 4761 - 5184 - 5625 - 6084 - 6561 - 7056", "x2": "mul sub relu mod sub n n INT+ 4 sqr n INT+ 9", "tree": "((relu(((n sub n) mod 4)) sub (n)**2) mul 9)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 6 - 3 - 5 - 2 - 4 - 1 - 3 + 0 - 2 + 1 - 1 + 2 + 0 + 3 + 1 + 4 + 2 + 5 + 3 + 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11", "x2": "add mod INT+ 1 sub sqr n INT- 8 x_0_2", "tree": "((1 mod ((n)**2 sub -8)) add x_0_2)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 + 9 - 6 + 10 - 10 + 11 - 9 + 12 - 8 + 8 - 7 + 9 - 6 + 10 - 10 + 11 - 9 + 12 - 8 + 8 - 7 + 9 - 6 + 10 - 10 + 11 - 9 + 12 - 8", "x2": "add sub mod n INT+ 5 x_0_1 mod sqr sqr INT+ 5 INT- 1", "tree": "(((n mod 5) sub x_0_1) add (((5)**2)**2 mod -1))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 4 - 6 + 8 + 10 - 9 + 3 + 3 - 5 - 10 - 4 - 9 - 7 - 53 - 264 - 1020 - 4092 - 1 6388 - 6 5545 - 26 2147 - 104 8584 - 419 4310 - 1677 7268 - 6710 9127 - 2 6843 6475 - 10 7374 5915 - 42 9498 3683 - 171 7993 4728 - 687 1973 8882 - 2748 7895 5527 - 1 995 1582 2085 - 4 3980 6328 8371 - 17 5922 5315 3542 - 70 3690 1261 4138 - 281 4760 5045 6570 - 1125 9042 182 6306 - 4503 6168 730 5223 - 1 8014 4672 2922 865 - 7 2057 8689 1688 3462", "x2": "add INT- 3 sub x_0_9 abs mul abs relu sub x_0_10 x_0_1 INT+ 4", "tree": "(-3 add (x_0_9 sub abs((abs(relu((x_0_10 sub x_0_1))) mul 4))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 5 + 3 - 2 - 7 + 5 - 2 + 5 - 8 + 43 - 32 + 19 + 81 - 68 + 25 - 79 + 124 - 735 + 572 - 366 - 1625 + 1423 - 555 + 1811 - 2982 + 1 8369 - 1 4878 + 9875 + 4 5493 - 4 1274 + 1 6643 - 5 6149 + 9 5416 - 60 6185 + 50 5844 - 34 5634 - 163 7757", "x2": "sub idiv mod INT- 2 n INT- 4 mul x_0_8 n", "tree": "(((-2 mod n) idiv -4) sub (x_0_8 mul n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 4 + 10 + 9 + 1 + 2 + 18 + 34 + 43 + 54 + 82 + 127 + 182 + 249 + 345 + 487 + 685 + 951 + 1314 + 1820 + 2525 + 3497 + 4833 + 6676 + 9225 + 1 2747 + 1 7606 + 2 4309 + 3 3562 + 4 6338 + 6 3974 + 8 8314 + 12 1908", "x2": "add x_0_1 add n x_0_4", "tree": "(x_0_1 add (n add x_0_4))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 7 - 9 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2 + 2 + 3 + 2", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 2 + 4 - 7 - 3 - 4 - 24 - 43 - 87 - 108 - 70 - 65 - 220 - 44 - 178 - 349 - 258 - 66 - 335 - 265 - 536 - 614 - 627 - 427 - 711 - 682 - 1185 - 1203 - 1063 - 1388 - 867 - 1355 - 1516 - 1816", "x2": "sub x_0_6 abs sub sign sub INT+ 6 sqr x_0_5 mul n mod x_0_4 sub n INT- 4", "tree": "(x_0_6 sub abs((sign((6 sub (x_0_5)**2)) sub (n mul (x_0_4 mod (n sub -4))))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 4 + 5 + 7 + 6 + 10 - 8 + 5 - 6 + 0 + 12 + 60 - 6 + 50 + 0 + 0 + 0 + 0 - 22 + 9300 + 0 + 0 + 0 + 0 - 222 + 0 + 0 + 0 + 0 + 0 - 294 + 0 + 0 + 0 + 0 + 0 - 122", "x2": "mul relu mod x_0_6 add INT+ 5 x_0_8 sub mul abs mod INT- 9 INT- 5 sub INT+ 7 sub n x_0_8 INT+ 6", "tree": "(relu((x_0_6 mod (5 add x_0_8))) mul ((abs((-9 mod -5)) mul (7 sub (n sub x_0_8))) sub 6))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 10 - 51 - 140 - 295 - 534 - 875 - 1336 - 1935 - 2690 - 3619 - 4740 - 6071 - 7630 - 9435 - 1 1504 - 1 3855 - 1 6506 - 1 9475 - 2 2780 - 2 6439 - 3 470 - 3 4891 - 3 9720 - 4 4975 - 5 674 - 5 6835 - 6 3476", "x2": "add mul mul n mul INT- 3 n add n sign sign INT- 7 n", "tree": "(((n mul (-3 mul n)) mul (n add sign(sign(-7)))) add n)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 6 - 5 + 12 - 3 - 2 + 15 + 0 + 1 + 18 + 3 + 4 + 21 + 6 + 7 + 24 + 9 + 10 + 27 + 12 + 13 + 30 + 15 + 16 + 33 + 18 + 19 + 36 + 21 + 22 + 39", "x2": "add INT+ 3 x_0_3", "tree": "(3 add x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 - 9 - 5 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1", "x2": "sqr mod x_0_3 relu add idiv mul INT- 2 x_0_2 n INT+ 7", "tree": "((x_0_3 mod relu((((-2 mul x_0_2) idiv n) add 7))))**2", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 10 - 1 + 0 + 3 - 7 - 5 - 1 - 10 - 7 - 2 - 10 - 6 + 0 - 7 - 2 + 5 - 1 + 5 + 13 + 8 + 15 + 24 + 20 + 28 + 38 + 35 + 44 + 55 + 53 + 63", "x2": "add sub add mod x_0_1 sign sqr INT- 9 x_0_3 sub INT+ 5 INT- 7 n", "tree": "((((x_0_1 mod sign((-9)**2)) add x_0_3) sub (5 sub -7)) add n)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 4 - 9 + 2 - 3 - 2 + 7 + 5 + 6 + 5 + 41 + 294 + 2063 + 1 4482 + 10 1668 + 71 3736 + 501 616 + 3517 5859 + 2 4694 3946 + 17 3361 2892 + 121 7043 442 + 854 3971 8596 + 5998 1004 5124 + 4 2108 3001 5564 + 29 5611 7763 516 + 207 5275 6687 324 + 1456 9005 1338 8701 + 1 227 8425 6504 288 + 7 1802 2751 9076 2722 + 50 4071 8078 4383 9831 + 353 8723 5820 4941 2462 + 2484 2820 3662 6830 9766 + 1 7440 3494 8361 6036 6031 + 12 2436 1012 1365 9318 5193 + 85 9535 5082 9753 6622 1765 + 603 4178 7989 8013 2437 5196 + 4236 1618 6990 274 8106 2518 + 2 9739 395 1196 6474 9172 4647", "x2": "sub add x_0_3 mul x_0_1 INT+ 7 sub relu n sub n idiv add mod x_0_2 x_0_3 x_0_9 n", "tree": "((x_0_3 add (x_0_1 mul 7)) sub (relu(n) sub (n sub (((x_0_2 mod x_0_3) add x_0_9) idiv n))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 10 - 7 + 16 + 30 + 32 + 16 + 11 + 45 + 74 + 94 + 77 + 92 + 93 + 133 + 143 + 194 + 183 + 204 + 186 + 257 + 273 + 330 + 300 + 352 + 340 + 417 + 414 + 477 + 478 + 536", "x2": "abs sub mod mul n INT+ 6 sqr INT- 5 sub sqr n x_0_3", "tree": "abs((((n mul 6) mod (-5)**2) sub ((n)**2 sub x_0_3)))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 2 + 4 - 10 + 2 - 3 + 340 - 8 + 319 - 10 + 235 - 12 + 5 7451 - 14 + 7 1764 - 16 + 6 7902 - 18 + 2073 9796 - 20 + 3164 7907 - 22 + 3592 139 - 24 + 129 6237 2479 - 26 + 230 7132 4180 - 28 + 302 883 6874 - 30 + 12 4568 3995 2292 - 32 + 25 1246 7203 1991 - 34", "x2": "sub relu add INT+ 4 mul sqr n x_0_6 n", "tree": "(relu((4 add ((n)**2 mul x_0_6))) sub n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 8 - 5 + 4 + 1 + 34 + 43 + 90 + 115 + 150 + 236 + 294 + 405 + 490 + 630 + 746 + 919 + 1070 + 1280 + 1470 + 1721 + 1954 + 2250 + 2530 + 2875 + 3206 + 3604 + 3990 + 4445 + 4890 + 5406 + 5914 + 6495", "x2": "relu add mul n sub abs n abs idiv sqr INT+ 2 x_0_5 x_0_2", "tree": "relu(((n mul (abs(n) sub abs(((2)**2 idiv x_0_5)))) add x_0_2))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 4 + 10 + 6 + 4 - 2 + 10 - 10 - 1 - 5 - 2 - 5 - 2 - 12 - 2 - 10 - 4 + 4 - 4 + 2 - 16 - 14 - 16 - 2 - 6 - 13 - 14 - 3 - 9 - 19 - 10 - 9 - 13 - 21 - 30 - 9 - 20", "x2": "sub idiv INT- 4 x_0_9 mod sqr x_0_4 n", "tree": "((-4 idiv x_0_9) sub ((x_0_4)**2 mod n))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 4 - 7 + 1 - 1 + 2 - 2 + 1 - 3 + 2 - 2 + 2 - 3 + 2 - 3 + 3 - 3 + 2 - 4 + 3 - 3 + 3 - 4 + 3 - 4 + 3 - 4 + 3 - 4 + 4 - 4", "x2": "idiv abs n sub x_0_2 x_0_1", "tree": "(abs(n) idiv (x_0_2 sub x_0_1))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 3 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr add n mod INT+ 3 sqr sign x_0_1", "tree": "((n add (3 mod (sign(x_0_1))**2)))**2", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 5 - 9 + 10 + 8 + 9 + 9 + 7 + 1 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1 + 0", "x2": "idiv x_0_8 abs n", "tree": "(x_0_8 idiv abs(n))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 11 + 14 + 18 + 23 + 29 + 36 + 44 + 53 + 63 + 74 + 86 + 99 + 113 + 128 + 144 + 161 + 179 + 198 + 218 + 239 + 261 + 284 + 308 + 333 + 359 + 386 + 414 + 443", "x2": "add mod n add n add relu x_0_1 n x_0_1", "tree": "((n mod (n add (relu(x_0_1) add n))) add x_0_1)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1", "x2": "idiv n sqr INT- 5", "tree": "(n idiv (-5)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 3 - 1 - 10 - 26 - 51 - 87 - 136 - 200 - 281 - 381 - 502 - 646 - 815 - 1011 - 1236 - 1492 - 1781 - 2105 - 2466 - 2866 - 3307 - 3791 - 4320 - 4896 - 5521 - 6197 - 6926 - 7710 - 8551", "x2": "sub x_0_1 sqr n", "tree": "(x_0_1 sub (n)**2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 3 + 8 + 3 - 205 - 25 - 115 - 3250 - 565 - 1930 - 4 8970 - 8710 - 2 9200 - 73 4815 - 13 930 - 43 8295 - 1102 2535 - 196 4275 - 657 4765 - 1 6533 8380 - 2946 4495 - 9862 1860 - 24 8007 6100 - 4 4196 7840 - 14 7932 8330 - 372 114 1945 - 66 2951 8060 - 221 8992 5425 - 5580 1712 9665 - 994 4277 1405 - 3328 4888 1895 - 8 3702 5694 5510", "x2": "mul add mul INT- 3 add sign x_0_1 add n sub INT+ 3 x_0_3 INT- 8 add sqr idiv n x_0_1 INT+ 4", "tree": "(((-3 mul (sign(x_0_1) add (n add (3 sub x_0_3)))) add -8) mul (((n idiv x_0_1))**2 add 4))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 + 4 + 0 + 4 + 1 + 5 + 2 + 6 + 3 + 7 + 4 + 8 + 5 + 9 + 6 + 10 + 7 + 11 + 8 + 12 + 9 + 13 + 10 + 14 + 11 + 15 + 12 + 16 + 13", "x2": "relu sub n x_0_1", "tree": "relu((n sub x_0_1))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 6 + 0 - 7 + 0 + 0 - 567 + 0 + 0 - 4 5927 + 0 + 0 - 372 87 + 0 + 0 - 3 132 7047 + 0 + 0 - 244 749 807 + 0 + 0 - 1 9770 675 5367 + 0 + 0 - 160 1375 4718 4727 + 0 + 0 - 1 2971 1413 2196 2887 + 0 + 0 - 105 662 4470 7899 3847 + 0 + 0", "x2": "mul sub relu mod idiv add INT- 5 x_0_4 INT- 2 sqr sign INT- 1 sub x_0_4 sqr INT+ 9 x_0_3", "tree": "((relu((((-5 add x_0_4) idiv -2) mod (sign(-1))**2)) sub (x_0_4 sub (9)**2)) mul x_0_3)", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 9 - 8 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign idiv x_0_4 sign mul x_0_2 n", "tree": "sign((x_0_4 idiv sign((x_0_2 mul n))))", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 + 2 + 6 - 7 + 24 + 5 + 56 + 41 + 262 + 81 + 868 + 563 + 4264 + 1687 + 1 7274 + 1 685 + 8 9752 + 4 1041 + 41 7948 + 25 4731 + 230 2730 + 115 7623 + 1191 5524 + 727 1157 + 6948 3764 + 3736 9345 + 3 9120 2902 + 2 4096 1731 + 24 623 2048 + 13 6204 2071 + 145 3352 2000 + 90 7281 7453", "x2": "abs sub INT+ 1 0 abs add x_0_2 mul x_0_4 n", "tree": "abs((10 sub abs((x_0_2 add (x_0_4 mul n)))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 3 - 9 + 8 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 4 + 2 - 5 + 1 - 6 + 0 - 7 - 1 - 8 - 2 - 9 - 3 - 10 - 4 - 11 - 5 - 12 - 6 - 13 - 7 - 14 - 8 - 15 - 9 - 16 - 10 - 17 - 11", "x2": "sub sign n add x_0_1 n", "tree": "(sign(n) sub (x_0_1 add n))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr sub sqr sign n abs n", "tree": "(((sign(n))**2 sub abs(n)))**2", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 197 + 9996 + 9797 + 9600 + 9405 + 9212 + 9021 + 8832 + 8645 + 8460 + 8277 + 8096 + 7917 + 7740 + 7565 + 7392 + 7221 + 7052 + 6885 + 6720 + 6557 + 6396 + 6237 + 6080 + 5925 + 5772 + 5621 + 5472", "x2": "add sqr add sub relu sqr INT- 1 0 n INT+ 2 INT- 4", "tree": "((((relu((-10)**2) sub n) add 2))**2 add -4)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 5 + 2 + 3 - 8 - 6 - 2 + 6 + 11 + 3 - 1 + 8 + 2 - 5 - 18 - 27 - 25 - 26 - 42 - 42 - 43 - 37 - 37 - 47 - 56 - 49 - 60 - 69 - 87 - 98 - 101 - 104 - 125 - 127 - 133", "x2": "idiv sub mul INT- 4 sub x_0_7 mul INT+ 3 n mul n n mod INT+ 4 add n n", "tree": "(((-4 mul (x_0_7 sub (3 mul n))) sub (n mul n)) idiv (4 mod (n add n)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 8 - 7 + 3 - 9 + 1 - 9 + 5 + 8 + 9 + 11 + 12 + 12 + 14 + 14 + 16 + 17 + 17 + 19 + 20 + 20 + 22 + 23 + 24 + 25 + 25 + 27 + 27 + 29 + 30 + 31 + 32 + 32 + 33 + 34 + 35", "x2": "relu sub n mod add x_0_1 add x_0_7 x_0_5 add INT+ 1 INT- 3", "tree": "relu((n sub ((x_0_1 add (x_0_7 add x_0_5)) mod (1 add -3))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 6 - 8 + 5 + 1 + 2 + 0 + 1 + 1 + 2 + 0 + 1 + 1 + 2 + 0 + 1 + 1 + 2 + 0 + 1 + 1 + 2 + 0 + 1 + 1 + 2 + 0 + 1 + 1 + 2 + 0 + 1", "x2": "mod mod x_0_4 INT+ 4 INT+ 8", "tree": "((x_0_4 mod 4) mod 8)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 + 6 + 3 + 4 - 8 + 4 + 8 + 1 + 0 + 0 + 0 + 1 + 3 + 1 + 15 + 0 + 0 + 0 + 0 + 6 + 21 + 1 + 0 + 0 + 0 + 0 + 4 + 1 + 29 + 0 + 0 + 0 + 0 + 8 + 35", "x2": "relu mul add sign mod add n INT- 7 n idiv x_0_6 n idiv n sub abs x_0_7 x_0_4", "tree": "relu(((sign(((n add -7) mod n)) add (x_0_6 idiv n)) mul (n idiv (abs(x_0_7) sub x_0_4))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 2 + 6 + 3 - 7 + 0 - 4 - 15 - 9 - 14 - 26 - 21 - 27 - 40 - 36 - 43 - 57 - 54 - 62 - 77 - 75 - 84 - 100 - 99 - 109 - 126 - 126 - 137 - 155 - 156 - 168", "x2": "sub x_0_3 n", "tree": "(x_0_3 sub n)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 5 - 1 - 1 - 2 - 1 - 3 - 4 - 1 - 4 - 1 - 5 - 2 - 2 - 2 - 3 - 13 - 1 - 9 - 2 - 3 - 18 - 1 - 11 - 1 - 12 - 1 - 13 - 2 - 5", "x2": "idiv sub n mod x_0_1 add n n abs mod sub sqr x_0_1 x_0_1 sub abs INT- 8 x_0_1", "tree": "((n sub (x_0_1 mod (n add n))) idiv abs((((x_0_1)**2 sub x_0_1) mod (abs(-8) sub x_0_1))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 - 1 + 6 + 2 + 2 + 3 - 10 - 6 + 5 + 1 - 7 + 4 + 8 - 1 - 6 - 10 - 1 + 14 + 1 - 22 + 4 + 29 - 4 - 36 - 7 + 36 + 20 - 34 - 41 + 39 + 71 - 42 - 108 + 36 + 145 - 15", "x2": "add sub x_0_9 x_0_2 sign mod n mul INT+ 5 mod mod mul x_0_4 idiv x_0_6 n n sqr x_0_3", "tree": "((x_0_9 sub x_0_2) add sign((n mod (5 mul (((x_0_4 mul (x_0_6 idiv n)) mod n) mod (x_0_3)**2)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 5 - 7 + 2 - 3 + 6 + 2 - 6 + 15 - 2 + 41 + 12 + 7 + 44 + 9 + 180 + 77 + 18 + 63 + 38 + 561 + 330 + 113 + 24 + 63 + 1148 + 1017 + 480 + 149 + 30 + 1179 + 2066 + 1473", "x2": "add mul relu mod n abs INT+ 6 x_0_5 n", "tree": "((relu((n mod abs(6))) mul x_0_5) add n)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 1 + 20 - 6 + 140 - 48 + 1260 - 480 + 1 3860 - 5760 + 18 180 - 8 640 + 270 2700 - 129 240 + 4594 5900 - 2322 4320 + 8 7297 2100 - 4 6448 6400 + 183 3241 4100 - 102 1870 800 + 4216 4552 4300 - 2452 4881 9200 + 10 5411 3810 7500 - 6 3764 6929 9200 + 284 6107 2890 2500 - 178 5411 4037 7600 + 8253 7111 3817 2500 - 5356 2342 1132 8000 + 25 5865 452 8334 7500 - 17 1399 4947 6249 6000", "x2": "mul add INT+ 2 n x_0_2", "tree": "((2 add n) mul x_0_2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 21 + 40 - 83 + 162 - 329 + 652 - 1311 + 2614 - 5237 + 1 464 - 2 939 + 4 1866 - 8 3745 + 16 7476 - 33 4967 + 66 9918 - 133 9853 + 267 9688 - 535 9395 + 1071 8770 - 2143 7561 + 4287 5100 - 8575 223 + 1 7150 422 - 3 4300 869 + 6 8600 1712 - 13 7200 3451 + 27 4400 6874", "x2": "sub sub abs sign n add n x_0_1 x_0_1", "tree": "((abs(sign(n)) sub (n add x_0_1)) sub x_0_1)", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 2 - 8 + 800 + 1600 - 3 3552 - 7 5264 + 215 1680 - 9173 5416 - 5 1621 6400 + 110 9999 5016 - 5597 4002 1696 - 6 4124 886 6032 + 109 7090 4427 448 - 6113 6982 9801 7200 - 13 3146 4221 9427 7376 + 176 6858 8081 2700 856 - 9948 913 1051 9933 6784 - 42 9084 1269 560 4135 6520 + 397 9236 5242 797 3476 0 - 1 7929 994 5415 2899 9354 8256 - 202 150 1610 8801 5050 8067 9824 + 948 4493 6112 4688 4065 8709 5136 + 1 7219 9009 3698 5791 4432 2729 880 - 1321 8719 3575 302 4321 6594 2337 5000 - 1164 653 334 239 5015 6216 4854 240 + 96 3644 6411 6197 473 489 7196 4047 9976 - 1 1515 8303 7365 4380 8194 4023 2752 5633 5808 - 9 2398 6697 9498 7757 2648 5839 7626 3518 5424 + 1036 4247 3362 8894 2737 4962 947 7307 236 7600 - 12 8347 7288 9731 6740 1236 2469 7560 7535 8687 8288", "x2": "mul mul n n sub mul sub mod add sqr sign n n mul n x_0_3 INT- 8 INT+ 4 x_0_2", "tree": "((n mul n) mul ((((((sign(n))**2 add n) mod (n mul x_0_3)) sub -8) mul 4) sub x_0_2))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 7 + 6 + 8 - 5 - 79 - 112 - 122 - 145 - 185 - 288 - 352 - 395 - 453 - 530 - 672 - 777 - 863 - 966 - 1090 - 1281 - 1437 - 1576 - 1734 - 1915 - 2165 - 2382 - 2584 - 2807 - 3055 - 3374 - 3662 - 3937", "x2": "mod n sub x_0_5 mul n sub abs n INT- 9", "tree": "(n mod (x_0_5 sub (n mul (abs(n) sub -9))))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 7 - 2 + 12 + 15 + 5 + 20 + 23 + 13 + 28 + 31 + 21 + 36 + 39 + 29 + 44 + 47 + 37 + 52 + 55 + 45 + 60 + 63 + 53 + 68 + 71 + 61 + 76 + 79 + 69 + 84", "x2": "sub x_0_3 sub INT- 7 relu abs relu sign x_0_3", "tree": "(x_0_3 sub (-7 sub relu(abs(relu(sign(x_0_3))))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 7 - 6 + 4 + 7 + 5 + 0 + 1 + 3 - 12 + 14 + 24 - 16 - 28 - 20 + 0 - 4 - 6 + 48 - 56 - 48 + 32 + 56 + 80 + 0 + 8 + 24 - 96 + 112 + 192 - 128 - 224 - 320 + 0 - 32 - 48 + 384", "x2": "mul sub sign add n sub sub mod INT- 2 INT- 7 x_0_8 n INT+ 3 x_0_9", "tree": "((sign((n add (((-2 mod -7) sub x_0_8) sub n))) sub 3) mul x_0_9)", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 8 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552 - 600 - 650 - 702 - 756 - 812 - 870", "x2": "idiv mul n sub mod INT- 1 mul mul x_0_1 sign n n n sign INT+ 5", "tree": "((n mul ((-1 mod ((x_0_1 mul sign(n)) mul n)) sub n)) idiv sign(5))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 10 - 20 - 60 - 240 - 1200 - 7200 - 5 400 - 40 3200 - 362 8800 - 3628 8000 - 3 9916 8000 - 47 9001 6000 - 622 7020 8000 - 8717 8291 2000 - 13 767 4368 0 - 209 2278 9888 0 - 3556 8742 8096 0 - 6 4023 7370 5728 0 - 121 6451 40 8832 0 - 2432 9020 817 6640 0 - 5 1090 9421 7170 9440 0 - 112 4000 7277 7760 7680 0 - 2585 2016 7388 8497 6640 0 - 6 2044 8401 7332 3943 9360 0 - 155 1121 43 3309 8598 4000 0 - 4032 9146 1126 6056 3558 4000 0 - 10 8888 6945 418 3521 6076 8000 0 - 304 8883 4461 1713 8605 150 4000 0 - 8841 7619 9373 9701 9545 4361 6000 0", "x2": "mul add relu x_0_1 x_0_1 n", "tree": "((relu(x_0_1) add x_0_1) mul n)", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 3 + 4 - 1 + 6 + 1 - 3 - 3 - 6 - 9 + 20 + 8 + 16 + 12 + 20 + 16 + 13 + 14 + 12 + 10 + 40 + 29 + 38 + 35 + 44 + 41 + 39 + 41 + 40 + 39 + 70 + 60 + 70 + 68 + 78 + 76 + 75 + 78", "x2": "sub add n x_0_10 sign relu mul INT- 6 mul n mul n INT- 2", "tree": "((n add x_0_10) sub sign(relu((-6 mul (n mul (n mul -2))))))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 8 + 1 + 0 + 5 + 5 + 11 + 12 + 19 + 21 + 29 + 32 + 41 + 45 + 55 + 60 + 71 + 77 + 89 + 96 + 109 + 117 + 131 + 140 + 155 + 165 + 181 + 192 + 209 + 221 + 239", "x2": "relu add n x_0_2", "tree": "relu((n add x_0_2))", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2", "x2": "mod sub n relu INT+ 1 0 add INT- 6 add INT+ 5 INT- 4", "tree": "((n sub relu(10)) mod (-6 add (5 add -4)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 - 4 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2", "x2": "idiv sub INT+ 9 n mul mul INT- 2 INT- 9 sign add x_0_2 INT+ 4", "tree": "((9 sub n) idiv ((-2 mul -9) mul sign((x_0_2 add 4))))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 4 - 2 + 10 + 0 - 8 + 4 + 3 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign mod INT- 4 sub relu sqr relu x_0_4 mul n mod abs INT+ 6 x_0_8", "tree": "sign((-4 mod (relu((relu(x_0_4))**2) sub (n mul (abs(6) mod x_0_8)))))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 3 + 6 + 3 + 39 + 87 + 58 + 674 + 1701 + 1315 + 1 5571 + 4 3211 + 3 7219 + 45 2888 + 135 5127 + 127 1454 + 1588 8316 + 5059 2605 + 5094 1852 + 6 5269 2430 + 21 9137 352 + 23 4297 5967 + 307 2748 6085 + 1080 2983 9702 + 1216 8314 4694 + 1 6308 9973 8498 + 5 9723 6866 9722 + 7 439 6908 7288 + 96 3447 6771 6105 + 365 9453 8859 1570 + 449 7424 2116 8897 + 6269 4538 7063 4145", "x2": "add x_0_3 add sub x_0_4 mul relu x_0_3 mul INT- 2 n n", "tree": "(x_0_3 add ((x_0_4 sub (relu(x_0_3) mul (-2 mul n))) add n))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 7 + 7 + 10 - 2 + 3 + 8 + 10 + 10 + 12 + 14 + 15 + 17 + 18 + 20 + 21 + 23 + 24 + 26 + 27 + 24 + 25 + 27 + 28 + 29 + 31 + 32 + 33 + 35 + 37 + 38 + 39 + 41", "x2": "sub add idiv mod mod n sub INT+ 1 0 INT- 1 0 x_0_1 INT+ 4 n idiv x_0_4 INT- 6", "tree": "(((((n mod (10 sub -10)) mod x_0_1) idiv 4) add n) sub (x_0_4 idiv -6))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 1 + 3 + 0 + 4 + 2 + 6 + 4 + 2 + 1 + 11 + 3 + 9 + 7 + 3 + 12 + 4 + 2 + 10 + 2 + 12 + 15 + 19 + 22 + 2 + 17 + 23 + 22 + 20", "x2": "mod add add INT- 4 sub relu n INT+ 9 sqr x_0_1 sub sub n sign INT- 9 idiv INT+ 5 INT+ 8", "tree": "(((-4 add (relu(n) sub 9)) add (x_0_1)**2) mod ((n sub sign(-9)) sub (5 idiv 8)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 5 - 6 + 4 - 9 - 13 - 20 - 33 - 58 - 107 - 204 - 397 - 782 - 1551 - 3088 - 6161 - 1 2306 - 2 4595 - 4 9172 - 9 8325 - 19 6630 - 39 3239 - 78 6456 - 157 2889 - 314 5754 - 629 1483 - 1258 2940 - 2516 5853 - 5033 1678 - 1 66 3327 - 2 132 6624 - 4 265 3217 - 8 530 6402", "x2": "sub sub add n x_0_1 abs x_0_1 sign mod x_0_5 n", "tree": "(((n add x_0_1) sub abs(x_0_1)) sub sign((x_0_5 mod n)))", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 4 + 5 - 19 - 5 - 13 + 12 - 1 + 8 - 16 - 2 - 10 + 14 + 0 + 8 - 16 - 2 - 10 + 14 + 0 + 8 - 16 - 2 - 10 + 14 + 0 + 8 - 16 - 2 - 10 + 14", "x2": "sub sub INT- 3 relu sub mul mod INT- 6 INT- 8 INT- 2 mod n sqr n sub x_0_3 sign INT+ 9", "tree": "((-3 sub relu((((-6 mod -8) mul -2) sub (n mod (n)**2)))) sub (x_0_3 sub sign(9)))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 1 - 10 + 8 - 5 - 2 + 1 + 0 + 1 - 2 - 3 + 4 + 5 + 6 - 7 - 8 + 9 + 10 + 11 - 12 - 13 + 14 + 15 + 16 - 17 - 18 + 19 + 20 + 21 - 22 - 23 + 24 + 25", "x2": "mul sign x_0_5 sub mod INT- 9 INT+ 1 0 sub INT+ 9 n", "tree": "(sign(x_0_5) mul ((-9 mod 10) sub (9 sub n)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 29 + 37 + 47 + 57 + 69 + 81 + 95 + 109 + 125 + 141 + 159 + 177 + 197 + 217 + 239 + 261 + 285 + 309 + 335 + 361 + 389 + 417 + 447 + 477 + 509 + 541 + 575 + 609", "x2": "idiv add sqr abs sub INT- 7 n sub INT- 5 INT+ 1 INT+ 2", "tree": "(((abs((-7 sub n)))**2 add (-5 sub 1)) idiv 2)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 8 - 2 + 10 - 12 + 22 - 34 + 56 - 90 + 146 - 236 + 382 - 618 + 1000 - 1618 + 2618 - 4236 + 6854 - 1 1090 + 1 7944 - 2 9034 + 4 6978 - 7 6012 + 12 2990 - 19 9002 + 32 1992 - 52 994 + 84 2986 - 136 3980 + 220 6966", "x2": "sub x_0_2 x_0_1", "tree": "(x_0_2 sub x_0_1)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 11 + 9 + 12 + 18 + 27 + 37 + 50 + 65 + 82 + 101 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "add mul n n idiv relu relu INT+ 1 0 n", "tree": "((n mul n) add (relu(relu(10)) idiv n))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 - 1 + 5 - 5 + 4 - 10 - 1 + 1 + 1 + 0 + 1 + 0 + 1 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 1 + 0 + 1 + 0 + 1 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0", "x2": "relu sign sub relu mod n n x_0_7", "tree": "relu(sign((relu((n mod n)) sub x_0_7)))", "n_input_points": "28", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756", "x2": "sub sqr mul abs INT+ 1 n n", "tree": "(((abs(1) mul n))**2 sub n)", "n_input_points": "28", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 6 + 4 + 50 + 65 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730 + 785 + 842 + 901 + 962", "x2": "add abs sqr mod n sub add INT- 8 x_0_2 INT+ 9 sign mod x_0_3 INT+ 2", "tree": "(abs(((n mod ((-8 add x_0_2) sub 9)))**2) add sign((x_0_3 mod 2)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 5 - 4 - 9 + 0 + 285 + 192 + 92 + 0 + 744 + 728 + 704 + 696 + 688 + 712 + 720 + 664 + 776 + 648 + 784 + 760 + 768 + 728 + 616 + 600 + 616 + 728 + 624 + 568 + 584 + 744 + 624", "x2": "mul mod INT+ 8 n sub add sqr INT+ 1 0 add mod x_0_3 n idiv INT- 1 mod sign x_0_1 n n", "tree": "((8 mod n) mul (((10)**2 add ((x_0_3 mod n) add (-1 idiv (sign(x_0_1) mod n)))) sub n))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 10 + 5 + 0 + 5 + 0 + 7 + 0 + 9 + 0 + 11 + 0 + 13 + 0 + 15 + 0 + 17 + 0 + 19 + 0 + 21 + 0 + 23 + 0 + 25 + 0 + 27 + 0 + 29 + 0 + 31", "x2": "mod mul sqr sub abs abs x_0_3 n mul n n add abs n n", "tree": "((((abs(abs(x_0_3)) sub n))**2 mul (n mul n)) mod (abs(n) add n))", "n_input_points": "28", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 6 + 0 + 80 - 12 + 36 + 602 - 36 + 306 + 4274 - 186 + 2214 + 2 9996 - 1218 + 1 5588 + 21 68 - 8424 + 10 9224 + 147 590 - 5 8848 + 76 4694 + 1029 4262 - 41 1798 + 535 3002 + 7205 9984 - 288 2430 + 3747 1176 + 5 442 56 - 2017 6836 + 2 6229 8412 + 35 3094 578", "x2": "sub mul INT+ 7 add x_0_3 n abs sub mod idiv idiv x_0_1 INT+ 7 n INT+ 1 n", "tree": "((7 mul (x_0_3 add n)) sub abs(((((x_0_1 idiv 7) idiv n) mod 1) sub n)))", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7 + 8 + 8 + 8 + 9 + 9", "x2": "relu idiv relu n INT+ 3", "tree": "relu((relu(n) idiv 3))", "n_input_points": "28", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 + 10 - 7 + 5 - 12 + 0 - 17 - 5 - 22 - 10 - 27 - 15 - 32 - 20 - 37 - 25 - 42 - 30 - 47 - 35 - 52 - 40 - 57 - 45 - 62 - 50 - 67 - 55 - 72 - 60", "x2": "add x_0_2 INT- 5", "tree": "(x_0_2 add -5)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 + 5 - 21 + 20 - 105 + 120 - 735 + 960 - 6615 + 9600 - 7 2765 + 11 5200 - 94 5945 + 161 2800 - 1418 9175 + 2580 4800 - 2 4121 5975 + 4 6448 6400 - 45 8310 3525 + 92 8972 8000 - 962 4517 4025 + 2043 7401 6000 - 2 2136 3900 2575 + 4 9049 7638 4000 - 55 3409 7506 4375 + 127 5293 8598 4000 - 1494 2063 2673 8125 + 3570 8228 755 2000 - 4 3331 9834 7540 5625 + 10 7124 6842 2656 0", "x2": "mul relu n x_0_2", "tree": "(relu(n) mul x_0_2)", "n_input_points": "28", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 4 - 5 + 768 + 15 + 24 + 105 + 1440 + 1539 + 900 + 1397 + 336 + 1027 + 2380 + 825 + 2368 + 2839 + 2772 + 3401 + 2000 + 3507 + 2772 + 3565 + 480 + 4175 + 4108 + 2889 + 3808 + 203 + 1500 + 3441", "x2": "mul mod sub sign abs n sub x_0_3 INT- 2 sqr mul INT+ 7 INT+ 2 n", "tree": "(((sign(abs(n)) sub (x_0_3 sub -2)) mod ((7 mul 2))**2) mul n)", "n_input_points": "28", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 10 + 0 + 4 + 6 + 3 + 1 + 8 + 5 - 10 + 239 + 5 + 3149 + 449 + 4 7375 + 1 397 + 80 5977 + 23 4755 + 1532 3865 + 550 6057 + 3 2204 1044 + 1 3652 6507 + 74 1253 2823 + 35 9982 4988 + 1854 5129 1382 + 1010 2920 8235 + 5 108 1279 2066 + 3 147 476 3322 + 145 4152 424 5887 + 95 4617 8210 4756 + 4510 9002 5197 9900 + 3200 4338 149 6639 + 14 8955 5335 524 9219 + 11 3332 772 4082 2206 + 521 6654 1333 270 5899 + 422 9094 3404 8685 9471 + 1 9312 9831 9535 9048 9825 + 1 6592 7879 4083 4571 5739", "x2": "add mul add abs abs x_0_10 add x_0_9 x_0_2 n x_0_3", "tree": "(((abs(abs(x_0_10)) add (x_0_9 add x_0_2)) mul n) add x_0_3)", "n_input_points": "28", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 4 - 108 - 1667 - 2 5051 - 37 5810 - 563 7194 - 8455 7953 - 12 6836 9337 - 190 2554 96 - 2853 8310 1480 - 4 2807 4652 2239 - 64 2111 9783 3623 - 963 1679 6750 4382 - 1 4447 5195 1256 5766 - 21 6712 7926 8848 6525 - 325 691 8903 2729 7909 - 4876 378 3549 946 8668 - 7 3140 5675 3236 4203 52 - 109 7108 5129 8546 3045 811 - 1645 6627 6947 8194 5676 2195 - 2 4684 9415 4217 2918 5143 2954 - 37 274 1231 3259 3777 7149 4338 - 555 4111 8469 8890 6665 7241 5097 - 8331 1677 7048 3359 9985 8622 6481 - 12 4967 5165 5725 399 9787 9339 7240 - 187 4512 7483 5875 5999 6819 95 8624 - 2811 7691 2253 8133 9995 2285 1437 9383 - 4 2176 5368 3807 2009 9928 4277 1569 767 - 63 2648 525 7108 149 8926 4157 3536 1526", "x2": "sub relu n mul INT- 5 sub add x_0_1 x_0_1 add idiv sub x_0_1 x_0_1 abs n sub INT+ 1 0 x_0_1", "tree": "(relu(n) sub (-5 mul ((x_0_1 add x_0_1) sub (((x_0_1 sub x_0_1) idiv abs(n)) add (10 sub x_0_1)))))", "n_input_points": "28", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 + 10 + 7 + 4 - 7 - 8 + 9 + 0 + 10 + 7 + 4 + 0 + 0 + 9 + 0 + 10 + 7 + 4 + 0 + 0 + 9 + 0 + 10 + 7 + 4 + 0 + 0 + 9 + 0 + 10 + 7 + 4 + 0 + 0 + 9", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "28", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 8 - 4 - 8 + 140 + 170 - 250 - 420 + 490 + 1700 - 2650 - 1790 + 7720 + 1 4160 - 1 0 - 3 7400 + 6 9440 + 5 1530 - 18 8710 - 34 5300 + 25 5550 + 94 5860 - 172 9030 - 127 4990 + 472 6300 + 864 8400 - 637 8460 - 2362 7720 + 4323 7940 + 3189 6650 - 1 1814 3250 - 2 1618 4740", "x2": "mul INT- 5 idiv abs mul x_0_2 add n sub sqr n x_0_3 x_0_2", "tree": "(-5 mul (abs((x_0_2 mul (n add ((n)**2 sub x_0_3)))) idiv x_0_2))", "n_input_points": "28", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 10 + 6 + 3 - 8 - 4356 - 9155 - 7052 - 2 3964 - 13 2020 - 6136 3631 - 1 8470 394 - 1 9747 6505 - 9 701 7236 - 66 831 1155 - 3 9865 4965 1546 - 15 3210 8229 9743 - 20 6177 3177 2218 - 117 6863 9299 8983 - 1053 5630 4680 3930 - 77 3035 8294 7996 6851", "x2": "mul add add sqr sqr n mul sqr INT+ 9 INT- 7 INT- 3 mod n sub x_0_5 sqr INT+ 4", "tree": "(((((n)**2)**2 add ((9)**2 mul -7)) add -3) mul (n mod (x_0_5 sub (4)**2)))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 4 + 10 - 9 - 4 - 2 - 3 - 4 - 2 - 3 - 4 - 2 - 3 - 4 - 2 - 3 - 4 - 2 - 3 - 4", "x2": "mod x_0_3 INT- 6", "tree": "(x_0_3 mod -6)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 4 - 4 + 10 - 8 + 5 - 10 - 8 + 9 + 3 + 3 + 17 - 1 + 12 - 3 - 1 + 16 + 10 + 10 + 24 + 6 + 19 + 4 + 6", "x2": "sub x_0_8 mod idiv n n INT- 8", "tree": "(x_0_8 sub ((n idiv n) mod -8))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 1143 + 9 - 2 727 + 9 - 6 9975 + 9 - 16 5879 + 9 - 32 3991 + 9 - 55 9863 + 9 - 88 9047 + 9 - 132 7095 + 9", "x2": "mod INT+ 9 mul n mul mul INT- 9 x_0_1 sqr add n n", "tree": "(9 mod (n mul ((-9 mul x_0_1) mul ((n add n))**2)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 - 7 - 10 - 13 - 18 - 23 - 30 - 37 - 46 - 55 - 66 - 77 - 90 - 103 - 118 - 133", "x2": "idiv sub INT- 1 0 sqr n abs INT+ 2", "tree": "((-10 sub (n)**2) idiv abs(2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 - 10 + 0 + 5 + 1 + 25 + 324 + 64 + 1 + 81 + 196 + 1 3924 + 841 + 1 + 4900 + 2116 + 1 3919 2804 + 1 7161 + 36 + 2356 1316 + 166 4100", "x2": "sqr sub mod x_0_1 add relu relu INT+ 1 0 sub n x_0_5 n", "tree": "(((x_0_1 mod (relu(relu(10)) add (n sub x_0_5))) sub n))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 10 + 4 + 8 - 14 - 1 + 3 - 16 - 11 - 5 - 25 - 20 - 16 - 37 - 33 - 30 - 52 - 49 - 47 - 70", "x2": "sub x_0_3 add idiv add n idiv x_0_3 abs n x_0_2 n", "tree": "(x_0_3 sub (((n add (x_0_3 idiv abs(n))) idiv x_0_2) add n))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 7 + 8 + 4 + 1 + 5 - 3 + 0 + 10 + 5 + 3 - 6 + 13 + 1 + 1 + 15 + 2 + 3 + 4 + 18 + 4 - 5 + 28 + 3 + 4 + 19 + 20", "x2": "add x_0_10 x_0_7", "tree": "(x_0_10 add x_0_7)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 6 + 7 + 4 + 0 - 5 + 4 - 6 + 1 - 5 - 24 + 15 + 44 + 21 - 28 + 29 + 55 + 15 + 1515 - 358 - 1 949 - 636 + 1 3431 - 2036 - 3 1880", "x2": "sub add n idiv mul add sqr x_0_8 sign INT+ 2 x_0_8 INT- 9 sub sub x_0_2 n INT- 4", "tree": "((n add ((((x_0_8)**2 add sign(2)) mul x_0_8) idiv -9)) sub ((x_0_2 sub n) sub -4))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 4 - 3 + 7 - 4 - 8 - 3 + 9 + 0 - 9 - 724 - 1587 - 1037 + 3389 - 8 - 5673 - 66 279 - 153 7803 - 138 1293 + 476 4210 - 1 6467 - 1108 406 - 16 5597 6343 - 40 3211 9474 - 45 4169 7057 + 163 1675 8971", "x2": "add mul x_0_6 mul n add INT- 7 sqr idiv n relu INT+ 2 x_0_9", "tree": "((x_0_6 mul (n mul (-7 add ((n idiv relu(2)))**2))) add x_0_9)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 7 + 1 - 1 - 6 + 7 + 10 + 5 + 5 + 1062 7600 + 1552 3600 + 2304 0 + 3329 2900 + 4408 9600 + 5913 6100 + 7921 0 + 1 281 9600 + 1 1292 1418 3496 100 + 2 4094 2076 6914 8100 + 5 3077 5292 9507 2100 + 11 831 988 6030 2500 + 19 4373 7724 412 8100 + 34 9684 9943 3205 6100 + 62 7388 9679 8363 2100 + 105 7139 7384 9246 100", "x2": "sqr mul abs INT+ 1 0 sub abs sqr abs add n n add INT+ 5 x_0_8", "tree": "((abs(10) mul (abs((abs((n add n)))**2) sub (5 add x_0_8))))**2", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 5 - 6 + 7 + 4 + 1 + 72 + 84 + 48 + 13 + 551 + 634 + 354 + 98 + 3089 + 3521 + 1924 + 529 + 1 3666 + 1 5467 + 8286 + 2237", "x2": "relu abs idiv add mul mul mul INT+ 3 INT+ 7 INT- 4 x_0_4 sub x_0_6 x_0_1 n", "tree": "relu(abs((((((3 mul 7) mul -4) mul x_0_4) add (x_0_6 sub x_0_1)) idiv n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 8 - 2 + 10 - 350 + 576 + 196 - 1280 + 5 6700 - 11 5200 - 4 7432 + 36 8640 - 1916 4600 + 4515 8400 + 2134 4400 - 1 8874 3680 + 110 7713 8800 - 292 6264 3200 - 154 1065 6800 + 1509 9494 4000", "x2": "add mul mul mul x_0_4 n INT- 2 idiv n INT+ 1 sub n n", "tree": "((((x_0_4 mul n) mul -2) mul (n idiv 1)) add (n sub n))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 8 - 2 - 2 - 9 + 8 + 2 + 71 + 29 + 72 + 55 + 37 + 42 + 27 + 29 + 22 + 22 + 18 + 17 + 16 + 16 + 17 + 19", "x2": "add idiv mul n sub n x_0_4 sub add sub n INT- 3 x_0_6 mod sqr x_0_2 n x_0_2", "tree": "(((n mul (n sub x_0_4)) idiv (((n sub -3) add x_0_6) sub ((x_0_2)**2 mod n))) add x_0_2)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 10 - 1 - 27 + 154 + 65 + 326 - 1483 - 592 - 3201 + 1 4890 + 5981 + 3 2072 - 14 8837 - 5 9746 - 32 655 + 148 8436 + 59 7527 + 320 6618", "x2": "sub sqr INT+ 7 add mul INT+ 9 x_0_3 sub x_0_3 n", "tree": "((7)**2 sub ((9 mul x_0_3) add (x_0_3 sub n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 7 - 5 - 1 - 6 + 2 - 4 + 3 - 2 - 6 + 7 + 3 + 16 + 12 + 26 + 21 + 36 + 30 + 45 + 40 + 55 + 50 + 65 + 61 + 75 + 72", "x2": "relu add x_0_2 sub idiv x_0_9 n INT- 1 0", "tree": "relu((x_0_2 add ((x_0_9 idiv n) sub -10)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 2 + 5 + 78 + 18 + 66 + 510 + 156 + 450 + 3120 + 1002 + 2772 + 1 8798 + 6096 + 1 6722 + 11 2884 + 3 6678 + 10 440 + 67 7418", "x2": "mul INT+ 6 add n x_0_3", "tree": "(6 mul (n add x_0_3))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 - 8 - 8 - 6 + 7 + 5 + 1 + 1 + 3 + 6 + 3 + 10 + 10 + 12 + 0 + 12 + 2 + 1 + 2 + 9 + 0", "x2": "mod sub x_0_5 INT- 9 n", "tree": "((x_0_5 sub -9) mod n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 7 - 5 + 1 + 1 - 2 - 66 - 63 - 24 - 27 - 60 - 770 - 804 - 364 - 434 - 960 - 1 2384 - 1 3736 - 6624 - 8322 - 1 9280 - 26 148", "x2": "mul sub INT+ 4 x_0_5 sub relu idiv INT- 6 mul INT+ 1 mul mod n x_0_4 n n", "tree": "((4 sub x_0_5) mul (relu((-6 idiv (1 mul ((n mod x_0_4) mul n)))) sub n))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 1 + 4 - 3 - 5 - 10 + 2 + 0 + 2 + 1 + 4 + 2 + 0 + 2 + 1 + 4 + 2 + 0 + 2 + 1 + 4 + 2", "x2": "mod x_0_5 mod INT- 3 n", "tree": "(x_0_5 mod (-3 mod n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 1 + 0 + 3 + 3 + 2 + 10 + 0 + 7 + 315 + 380 + 539 + 180 + 676 + 952 + 630 + 1104 + 6545 + 7164 + 1 621 + 4160 + 1 5204 + 2 1648 + 1 5410 + 2 7072", "x2": "mul n add add n mod mul mul n sqr n sign n mul INT- 9 INT- 6 x_0_8", "tree": "(n mul ((n add (((n mul (n)**2) mul sign(n)) mod (-9 mul -6))) add x_0_8))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 1 - 5 + 7 + 8 + 1 - 7 - 7 + 10 + 6 - 3 + 8 + 5 - 7 - 5 - 1 + 7 + 7 - 5 - 5 + 3 - 8 + 0 + 7 + 5 + 9", "x2": "sub mod relu mul idiv idiv idiv sub INT+ 2 mul INT+ 1 x_0_2 abs n INT+ 4 n x_0_4 n x_0_10", "tree": "((relu((((((2 sub (1 mul x_0_2)) idiv abs(n)) idiv 4) idiv n) mul x_0_4)) mod n) sub x_0_10)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 8 - 7 + 1 + 7 - 8 + 6 - 32 + 11 - 73 + 7 - 146 + 0 - 268 - 19 - 471 - 53 - 804 - 114 - 1348 - 217 - 2233", "x2": "add INT- 8 sub add x_0_2 x_0_2 x_0_6", "tree": "(-8 add ((x_0_2 add x_0_2) sub x_0_6))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 10 - 5 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign idiv x_0_1 x_0_2", "tree": "sign((x_0_1 idiv x_0_2))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 14 + 7 + 4 + 3 + 2 + 2 + 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 0 + 0", "x2": "idiv add INT- 2 sqr INT- 4 n", "tree": "((-2 add (-4)**2) idiv n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 + 5 + 1 - 6 - 7 - 2 - 4 + 12 + 16 + 11 + 6 + 14 - 3 + 10 + 20 + 21 + 9 + 35 + 6 + 10 + 20 + 34", "x2": "sub add n x_0_6 x_0_5", "tree": "((n add x_0_6) sub x_0_5)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 8 - 4 - 4 + 9 - 7 + 5 + 3 - 5 - 5 + 5 + 1 + 5 + 5 + 1 + 4 + 2 + 1 + 4 + 3 + 4 + 3 + 3 + 3 + 3", "x2": "sub idiv mul x_0_5 x_0_8 n INT- 3", "tree": "(((x_0_5 mul x_0_8) idiv n) sub -3)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 6 + 10 - 4 - 10 + 10 + 2 + 12 - 30 + 156 + 942 + 5532 + 3 3114 + 19 8540 + 119 1342 + 714 7032 + 4287 6450 + 2 5722 5412 + 15 4315 3686 + 92 5773 768 + 555 3923 6442 + 3331 9253 6340 + 1 9988 9795 9214", "x2": "mul sub add add sign relu n idiv n idiv INT+ 1 INT- 5 abs x_0_1 x_0_6 INT+ 6", "tree": "((((sign(relu(n)) add (n idiv (1 idiv -5))) add abs(x_0_1)) sub x_0_6) mul 6)", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 9 - 10 + 4 - 9 - 5 + 0 - 12 - 14 - 1 - 15 - 12 - 8 - 21 - 24 - 12 - 27 - 25 - 22 - 36 - 40 - 29", "x2": "mod INT+ 5 sub x_0_6 n", "tree": "(5 mod (x_0_6 sub n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 4 + 1 + 7 + 7 + 7 + 36 + 48 + 55 + 323 + 480 + 605 + 3876 + 6240 + 8470 + 5 8140 + 9 9840 + 14 3990 + 104 6520 + 189 6960 + 287 9800", "x2": "sub mul n relu x_0_3 idiv n x_0_4", "tree": "((n mul relu(x_0_3)) sub (n idiv x_0_4))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 + 3 + 6 - 1 - 1 - 3 - 2 - 4 - 114 - 115 - 133 - 161 - 187 - 214 - 132 - 164 - 289 - 297 - 326 - 366 - 515 - 553 - 391 - 462", "x2": "add x_0_8 sub INT- 9 add x_0_6 add INT+ 1 0 sqr n", "tree": "(x_0_8 add (-9 sub (x_0_6 add (10 add (n)**2))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 1 - 10 - 4 - 7 + 2 + 225 + 49 + 49 + 49 + 4 + 100 + 25 + 121 + 36 + 100 + 81 + 121 + 100 + 144 + 100 + 196", "x2": "sqr add idiv INT- 9 x_0_5 sub n add sub n n idiv x_0_1 sqr INT+ 4", "tree": "(((-9 idiv x_0_5) add (n sub ((n sub n) add (x_0_1 idiv (4)**2)))))**2", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 6 + 9 - 7 + 2 + 0 + 2 + 49 - 7 - 10 - 9 + 37 + 149 + 172 + 201 + 21 + 132 + 154 + 182 + 1", "x2": "sub mod x_0_4 mul n n n", "tree": "((x_0_4 mod (n mul n)) sub n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 + 7 - 4 + 3 - 5 + 0 + 10 + 5 + 10 + 10 - 7 - 2 - 2 + 0 - 2 - 2 - 2 + 0 - 2 - 2 + 0 - 2 - 2 + 0 + 0 - 2 + 0", "x2": "mod sqr add n sub x_0_11 sqr INT+ 5 INT- 3", "tree": "(((n add (x_0_11 sub (5)**2)))**2 mod -3)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 5 - 8 - 21 - 80 - 395 - 2364 - 1 6541 - 13 2320 - 119 871 - 1190 8700 - 1 3099 5689 - 15 7194 8256 - 204 3532 7315 - 2860 9458 2396 - 4 2914 1873 5925 - 68 6626 9977 4784 - 1167 2658 9617 1311", "x2": "add n mul n idiv x_0_1 INT+ 1", "tree": "(n add (n mul (x_0_1 idiv 1)))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 6 - 6 - 6 - 6 - 6 - 11 - 11 - 11 - 11 - 11 - 16 - 16 - 16 - 16 - 16 - 21", "x2": "sub INT- 1 abs sub n mod n INT- 5", "tree": "(-1 sub abs((n sub (n mod -5))))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 1 - 11 + 1 - 16 + 1 - 23 + 1 - 32 + 1 - 43 + 1 - 56 + 1 - 71 + 1 - 88 + 1", "x2": "add sub x_0_2 n mul idiv add add INT- 1 n x_0_2 x_0_2 x_0_2", "tree": "((x_0_2 sub n) add ((((-1 add n) add x_0_2) idiv x_0_2) mul x_0_2))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 8 - 6 + 4 + 1 - 4 + 44 - 439 + 3069 - 3 9853 + 59 7356 - 955 4627 + 1 6238 8806 - 29 2240 1152 + 555 1606 7261 - 1 1101 5895 6414 + 23 3104 1568 3542 - 512 7736 2897 663 + 1 1792 6833 736 8835 - 28 3001 889 6116 8498 + 707 4514 4504 24 1787 - 1 8392 5583 270 9891 7627", "x2": "sub x_0_3 mul x_0_1 abs mod INT- 6 add n add idiv x_0_6 x_0_4 INT+ 1 0", "tree": "(x_0_3 sub (x_0_1 mul abs((-6 mod (n add ((x_0_6 idiv x_0_4) add 10))))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 3 + 1 - 8 - 5 - 1 + 10 - 8 - 9 - 6 + 7 + 3 + 1 + 8 + 5 + 1 + 10 + 8 + 9 + 6 + 7 + 3 + 1 + 8 + 5 + 1", "x2": "abs x_0_10", "tree": "abs(x_0_10)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "- 7 - 8 - 70 - 140 - 767 - 2023 - 8921 - 2 7122 - 10 7404 - 35 1494 - 131 8121 - 448 1557 - 1634 4635 - 5667 8636 - 2 378 338 - 7 1388 8048 - 25 4791 1075 - 89 7290 3491", "x2": "add mul x_0_2 INT+ 8 add add mod n x_0_2 sub x_0_1 add mod INT+ 1 INT+ 1 INT- 8 INT- 1 0", "tree": "((x_0_2 mul 8) add (((n mod x_0_2) add (x_0_1 sub ((1 mod 1) add -8))) add -10))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2", "x2": "idiv relu n INT+ 7", "tree": "(relu(n) idiv 7)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 + 2 + 10 + 10 - 10 + 10 - 7 - 4 + 3 + 8 + 10 + 10 + 13 + 14 + 11 + 12 + 15 + 17 + 18 + 19 + 20 + 22 + 23 + 23 + 24", "x2": "relu add INT- 1 add idiv x_0_9 x_0_7 n", "tree": "relu((-1 add ((x_0_9 idiv x_0_7) add n)))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 7 - 7 + 7 + 1 + 8 + 0 - 9 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "idiv sign idiv INT+ 7 idiv n x_0_7 sign n", "tree": "(sign((7 idiv (n idiv x_0_7))) idiv sign(n))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 1 - 5 - 7 - 7 - 5 - 1 + 5 + 13 + 23 + 35 + 49 + 65 + 83 + 103 + 125 + 149", "x2": "add sub add n x_0_1 INT+ 1 0 relu n", "tree": "(((n add x_0_1) sub 10) add relu(n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156", "x2": "relu add x_0_1 n", "tree": "relu((x_0_1 add n))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 + 6 + 2 + 10 + 3 + 0 - 8 + 7 - 5 - 6 + 6 - 6 + 17 - 2 - 6 - 2 + 1 + 12 - 8 + 0 - 8 + 18 + 10 - 14 - 2", "x2": "add x_0_9 x_0_5", "tree": "(x_0_9 add x_0_5)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 3 - 2 + 32 + 75 + 0 + 1568 + 4800 + 0 + 15 6800 + 58 800 + 0 + 2649 9200 + 1 1383 6800 + 0 + 67 8379 5200 + 328 9883 5200 + 0 + 2 4489 5006 7200", "x2": "mul mod n add n INT+ 3 mul mul n relu x_0_3 idiv abs n relu n", "tree": "((n mod (n add 3)) mul ((n mul relu(x_0_3)) mul (abs(n) idiv relu(n))))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 4 - 8 - 24 - 96 - 480 - 2880 - 2 160 - 16 1280 - 145 1520 - 1451 5200 - 1 5966 7200 - 19 1600 6400 - 249 808 3200 - 3487 1316 4800 - 5 2306 9747 2000 - 83 6911 5955 2000 - 1422 7497 1238 4000", "x2": "idiv mul n mul n x_0_1 relu abs n", "tree": "((n mul (n mul x_0_1)) idiv relu(abs(n)))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 4 - 10 - 9 - 7 + 1 + 5 - 1 - 2 - 2 - 2 + 0 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 - 1 - 1 - 1", "x2": "idiv x_0_6 abs INT+ 6", "tree": "(x_0_6 idiv abs(6))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 2 - 27 - 24 + 95 + 96 - 721 - 832 + 6417 + 8240 - 7 675 - 9 8976 + 91 8671 + 138 5552 - 1378 185 - 2216 8960 + 2 3426 3009 + 3 9904 1136", "x2": "mul sub INT- 8 x_0_2 n", "tree": "((-8 sub x_0_2) mul n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 9 - 6 + 8 + 4 + 1 - 1 - 1 - 2 - 3 - 5 - 6 - 7 - 7 - 9 - 10 - 10 - 12 - 13 - 14 - 14", "x2": "sub abs INT+ 7 add n mod x_0_5 mod INT+ 2 relu sqr mul x_0_4 INT- 8", "tree": "(abs(7) sub (n add (x_0_5 mod (2 mod relu(((x_0_4 mul -8))**2)))))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 2 - 7 + 9 - 7 - 7 - 1 - 2 + 8 + 15 + 13 + 5 + 22 + 7 + 8 + 15 + 15 + 26 + 34 + 33 + 26 + 44 + 30 + 32 + 40", "x2": "add x_0_9 n", "tree": "(x_0_9 add n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 5 + 10 + 3 + 10 + 9 + 19 + 47 + 150 + 609 + 3054 + 1 8333 + 12 8340 + 102 6729 + 924 570 + 9240 5709 + 10 1646 2808 + 121 9755 3705 + 1585 6819 8174 + 2 2199 5477 4445", "x2": "sub add add INT+ 8 mul x_0_1 relu add add INT- 6 INT+ 1 n idiv INT+ 7 x_0_1 idiv INT- 4 x_0_3", "tree": "(((8 add (x_0_1 mul relu(((-6 add 1) add n)))) add (7 idiv x_0_1)) sub (-4 idiv x_0_3))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 8 - 7 + 5 - 2 + 5 - 1 - 1 + 1 - 3 + 1 - 5 - 5 + 5 - 2 + 5 - 1 - 1 + 1 - 3 + 1 - 5", "x2": "idiv abs INT+ 5 x_0_5", "tree": "(abs(5) idiv x_0_5)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 9 + 6 + 3 + 0 - 10 - 5 - 8 + 7 + 4 + 1 - 9 - 4 - 7 + 8 + 5 + 2 - 8 - 3 - 6 + 9 + 6 + 3", "x2": "add x_0_6 sign sign idiv add sub add mod INT+ 9 INT+ 1 0 INT+ 5 INT- 1 0 relu idiv n INT+ 1 0 n", "tree": "(x_0_6 add sign(sign((((((9 mod 10) add 5) sub -10) add relu((n idiv 10))) idiv n))))", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8", "x2": "idiv abs n INT- 2", "tree": "(abs(n) idiv -2)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 15 + 34 + 71 + 132 + 223 + 350 + 519 + 736 + 1007 + 1338 + 1735 + 2204 + 2751 + 3382 + 4103", "x2": "add INT+ 7 mul n sqr n", "tree": "(7 add (n mul (n)**2))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 + 3 - 7 + 1 + 5 - 6 - 7 - 8 + 1 - 7 + 2 - 8 + 8 + 18 + 14 + 26 + 19 + 17 + 18 + 19 + 31 + 21 + 28 + 23 + 27 + 27 + 28 + 29", "x2": "sub n idiv idiv INT- 1 0 x_0_12 sign mul n INT+ 8", "tree": "(n sub ((-10 idiv x_0_12) idiv sign((n mul 8))))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 5 + 7 + 2 + 2 + 1 + 1 + 4 + 4 + 1 + 1 + 4 + 4 + 1 + 1 + 4 + 4 + 1 + 1", "x2": "add sqr idiv INT- 2 sqr x_0_2 relu idiv x_0_2 n", "tree": "(((-2 idiv (x_0_2)**2))**2 add relu((x_0_2 idiv n)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 1 + 2 + 5 + 0 + 2 + 5 + 0 + 2 + 5 + 0 + 2 + 5 + 0 + 2 + 5 + 0 + 2 + 5 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 10 - 4 + 9 - 10 + 396 + 147 + 256 + 1458 + 0 + 4 9247 + 2 2896 + 4 5461 + 28 8512 + 3375 + 1261 1328 + 662 1857 + 1473 5196 + 1 415 9691 + 135 8000 + 55 6160 4909", "x2": "abs mul mul add x_0_5 n n n", "tree": "abs((((x_0_5 add n) mul n) mul n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 3 - 9 - 6 - 11 - 3 - 9 + 11 - 15 - 12 + 19 + 7 - 19 + 101 - 21 + 42 - 23 + 57", "x2": "add sub sqr mod add n mul INT+ 8 sub INT+ 1 0 x_0_1 n n INT- 7", "tree": "(((((n add (8 mul (10 sub x_0_1))) mod n))**2 sub n) add -7)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 2 - 9 + 10 - 10 + 2 + 11 + 6 + 16 + 6 + 1 + 6 + 2 + 10 + 17 + 14 + 20 + 14 + 9 + 14 + 10", "x2": "relu abs sub add add mul n sign sign INT- 6 INT+ 1 0 x_0_4 n", "tree": "relu(abs(((((n mul sign(sign(-6))) add 10) add x_0_4) sub n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 + 3 - 9 + 3 - 1 + 3 - 9 + 3 - 1 + 3 - 9 + 3 - 1 + 3 - 9 + 3 - 1 + 3", "x2": "idiv INT+ 9 x_0_2", "tree": "(9 idiv x_0_2)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 1 - 1 + 10 + 2 - 1 - 10 + 1 + 5 + 2 - 10 + 101 + 5 - 13 - 59 + 2 + 26 + 5 - 99 + 1718 + 26 - 129 - 766", "x2": "add sign abs mod mul x_0_2 INT- 1 abs x_0_4 mul mod x_0_8 n x_0_8", "tree": "(sign(abs(((x_0_2 mul -1) mod abs(x_0_4)))) add ((x_0_8 mod n) mul x_0_8))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 9 + 5 - 10 - 5 + 6 - 1 - 2 - 2 - 2 + 0 - 3 + 0 - 1 - 1 + 0 - 3 + 0 - 5 - 6 + 0 - 5", "x2": "mod sqr x_0_5 idiv n INT- 3", "tree": "((x_0_5)**2 mod (n idiv -3))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 7 + 9 - 9 + 2 + 6 - 50 - 64 - 83 - 99 - 122 - 145 - 163 - 188 - 215 - 244 - 274 - 306 - 341 - 377 - 415 - 454", "x2": "sub idiv x_0_6 INT- 8 relu sqr abs n", "tree": "((x_0_6 idiv -8) sub relu((abs(n))**2))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 - 5 - 7 - 31 + 35 + 53 + 229 - 267 - 463 - 2275 + 2953 + 5573 + 2 9593 - 4 1323 - 8 3575 - 47 3467 + 70 2513 + 150 4373 + 899 5897", "x2": "sub n sub mul n x_0_3 INT+ 5", "tree": "(n sub ((n mul x_0_3) sub 5))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 - 6 + 8 - 5 + 8 + 10 + 9 + 61 + 75 + 108 + 116 + 152 + 179 + 205 + 286 + 331 + 397 + 440 + 513 + 579 + 646 + 770 + 860", "x2": "add sqr n x_0_7", "tree": "((n)**2 add x_0_7)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 1 + 0 + 3 + 8 + 15 + 0 + 5 + 12 + 21 + 32 + 45 + 0 + 11 + 24 + 39 + 56", "x2": "mul mod n INT+ 6 add abs n INT- 2", "tree": "((n mod 6) mul (abs(n) add -2))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 9 + 6 + 2 + 10 + 9 + 2 - 8 + 7 - 9 + 6 + 2 + 10 + 9 + 2 - 8 + 7 - 9 + 6 + 2 + 10 + 9 + 2 - 8", "x2": "sub x_0_8 idiv mod n add mul mul INT+ 5 idiv n INT+ 8 n n mul n n", "tree": "(x_0_8 sub ((n mod (((5 mul (n idiv 8)) mul n) add n)) idiv (n mul n)))", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "mul abs relu sign idiv INT- 2 sub INT+ 7 n sqr n", "tree": "(abs(relu(sign((-2 idiv (7 sub n))))) mul (n)**2)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 4 + 2 + 1 + 5 - 75 - 378 - 2597 - 2 456 - 19 179 - 193 9590 - 2164 9727 - 2 6274 2388 - 34 4779 1295 - 486 4923 7770 - 7346 975 5125 - 11 8210 1813 3328 - 201 9537 1995 831 - 3650 9293 1215 2438 - 6 9632 8510 5249 6447 - 139 7385 4283 326 140", "x2": "mul n add mul x_0_4 n x_0_1", "tree": "(n mul ((x_0_4 mul n) add x_0_1))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 1 + 0 + 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7", "x2": "add sign INT- 1 mod idiv n INT- 2 n", "tree": "(sign(-1) add ((n idiv -2) mod n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 + 2 - 4 - 7 + 5 + 9 + 2 + 0 + 13 + 18 + 12 + 11 + 25 + 31 + 26 + 26 + 41 + 48 + 44 + 45", "x2": "add sub n sign add INT- 9 sqr sqr mod INT+ 6 n x_0_4", "tree": "((n sub sign((-9 add (((6 mod n))**2)**2))) add x_0_4)", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 8 + 10 + 8 + 4 + 2 + 1 + 1 + 121 + 64 + 49 + 36 + 16 + 4 + 4 + 1 3924 + 3721 + 2116 + 1156 + 196 + 1 + 1 + 1 9379 4241", "x2": "sqr sub add mod INT- 4 INT- 6 add x_0_7 idiv INT+ 5 x_0_5 idiv INT- 1 INT+ 8", "tree": "((((-4 mod -6) add (x_0_7 add (5 idiv x_0_5))) sub (-1 idiv 8)))**2", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "+ 1 - 10 - 1 + 10 + 1 - 10 - 1 + 10 + 1 - 10 - 1 + 10 + 1 - 10 - 1 + 10 + 1 - 10", "x2": "mul sub idiv INT+ 2 n x_0_2 sub sign INT+ 3 relu INT- 1", "tree": "(((2 idiv n) sub x_0_2) mul (sign(3) sub relu(-1)))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 + 7 + 4 + 1 + 1 - 5 - 4 + 7 - 8 - 5 + 8 + 4 + 0 + 1 - 8 - 6 + 12 - 16 - 9 + 16 + 7 - 1 + 2 - 20 - 15 + 31", "x2": "idiv sub x_0_10 mul idiv n sign n x_0_9 INT- 1 0", "tree": "((x_0_10 sub ((n idiv sign(n)) mul x_0_9)) idiv -10)", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 8 + 1 - 7 + 1 + 1 + 18 + 66 + 72 + 225 + 740 + 792 + 2136 + 8944 + 8232 + 2 1270 + 13 800 + 10 4040 + 22 2318 + 232 9286 + 165 5940 + 192 2466", "x2": "mul abs add sub x_0_3 add INT+ 2 mod INT- 9 x_0_5 n add idiv mod INT- 3 n x_0_2 n", "tree": "(abs(((x_0_3 sub (2 add (-9 mod x_0_5))) add n)) mul (((-3 mod n) idiv x_0_2) add n))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 1 + 5 - 3 + 7 - 2 + 4 - 4 + 6 - 3 + 3 - 5 + 5 - 4 + 2 - 6 + 4 - 5 + 1 - 7", "x2": "add x_0_4 INT- 1", "tree": "(x_0_4 add -1)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 + 10 - 5 + 10 - 4 + 0 + 9 - 8 + 6 + 3 - 2 + 157 + 172 + 215 + 230 + 276 + 306 + 333 + 388 + 414 + 459 + 508 + 395 + 428 + 435 + 472 + 480", "x2": "add mul abs sub sqr n x_0_11 abs INT+ 1 relu n", "tree": "((abs(((n)**2 sub x_0_11)) mul abs(1)) add relu(n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 10 + 2 - 10 + 9 - 143 - 186 - 254 - 10 - 391 - 143 - 186 - 254 - 10 - 391 - 143 - 186 - 254 - 10 - 391 - 143", "x2": "mod x_0_5 mul mul mod abs sub mod n n INT- 4 INT- 8 mod n sqr n n", "tree": "(x_0_5 mod (((abs(((n mod n) sub -4)) mod -8) mul (n mod (n)**2)) mul n))", "n_input_points": "16", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 9 + 0 - 27 + 0 - 135 + 0 - 945 + 0 - 8505 + 0 - 9 3555 + 0 - 121 6215 + 0 - 1824 3225 + 0 - 3 1013 4825 + 0", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 8 - 5 - 2 - 30 - 27 - 94 - 52 - 1183 - 952 - 1 592 - 3977 - 141 7188 - 91 6002 - 1 1367 1213 - 1675 6402 - 2 85 4400 1694 - 8390 8191 6427 - 1 2923 1538 9092 350 - 281 6161 9044 452", "x2": "sub x_0_2 sqr sub INT+ 3 x_0_4", "tree": "(x_0_2 sub ((3 sub x_0_4))**2)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 2 - 2 - 3 - 5 - 5 - 6 - 8 - 8 - 9 - 11 - 11 - 12 - 14 - 14 - 15 - 17", "x2": "sub mod x_0_1 INT+ 3 n", "tree": "((x_0_1 mod 3) sub n)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 - 10 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0", "x2": "relu relu x_0_3", "tree": "relu(relu(x_0_3))", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 1 - 3 - 8 + 8 - 1 + 21 - 8 - 27 - 80 + 88 - 12 + 273 - 112 - 405 - 1280 + 1496 - 216 + 5187 - 2240 - 8505 - 2 8160", "x2": "mul n x_0_6", "tree": "(n mul x_0_6)", "n_input_points": "16", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 9 + 9 - 6 + 45 + 90 + 105 + 288 + 81 + 480 + 693 + 2880 + 351 + 5964 + 9495 + 4 5024 + 4845 + 10 6056 + 17 8923 + 89 8800", "x2": "abs mul sub x_0_4 mul INT+ 6 idiv relu mul INT+ 7 n INT+ 1 0 n", "tree": "abs(((x_0_4 sub (6 mul (relu((7 mul n)) idiv 10))) mul n))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 5 + 10 - 9 - 7 - 1 - 9 + 1 + 44 + 74 + 72 + 93 + 120 + 135 + 170 + 240 + 299 + 328 + 382 + 444 + 496 + 570 + 681 + 783", "x2": "add x_0_7 sqr sub n sign n", "tree": "(x_0_7 add ((n sub sign(n)))**2)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 2 - 9 + 2 + 60 - 48 - 252 + 64 + 2160 - 1920 - 1 1088 + 3072 + 11 2320 - 10 7520 - 66 5280 + 19 6608 + 763 7760 - 774 1440 - 5056 1280 + 1572 8640", "x2": "mul abs n mul INT+ 4 x_0_4", "tree": "(abs(n) mul (4 mul x_0_4))", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 3 - 9 - 1 - 5 + 13 + 5 + 7 + 9 + 11 + 26 + 20 + 24 + 28 + 32 + 49 + 45 + 51 + 57 + 63 + 82", "x2": "add add relu x_0_5 add INT- 1 0 n add n INT+ 1", "tree": "((relu(x_0_5) add (-10 add n)) add (n add 1))", "n_input_points": "16", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 6 + 2 + 10 + 9 - 9 + 3 + 6 - 4 + 10 - 2 - 2 + 26 + 38 + 35 + 28 + 60 + 66 + 38 + 104 + 82 + 55 + 208 + 243 + 200 + 320 + 527", "x2": "add idiv sqr add n x_0_10 n x_0_3", "tree": "((((n add x_0_10))**2 idiv n) add x_0_3)", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 7 - 7 - 5 + 0 + 7 + 9 - 3 - 9 + 1 + 9 + 9 + 781 + 775 + 1 + 9 + 9 + 781 + 775 + 1 + 9 + 9 + 781 + 775 + 1 + 9 + 9", "x2": "mod x_0_5 sqr idiv add sub abs relu x_0_5 add sqr INT- 8 n x_0_10 mod INT- 9 INT+ 4", "tree": "(x_0_5 mod ((((abs(relu(x_0_5)) sub ((-8)**2 add n)) add x_0_10) idiv (-9 mod 4)))**2)", "n_input_points": "16", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 2 - 9 - 7 + 8 + 6 - 4 - 8 - 9 - 2 - 15 - 15 - 15 + 25 + 15 - 15 - 15 - 15 - 15 - 15 - 15 - 15 + 110 + 60 - 15 - 15", "x2": "add INT- 1 0 mul sub relu x_0_9 sign mul n n INT+ 5", "tree": "(-10 add ((relu(x_0_9) sub sign((n mul n))) mul 5))", "n_input_points": "16", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 9 + 1 + 6 - 5 - 4 - 8 - 8 - 6 - 9 - 8 - 5 - 7 - 5 - 1 - 2 - 9 - 4 - 4 + 0", "x2": "mod mod add x_0_3 n INT- 1 0 sub INT- 9 n", "tree": "(((x_0_3 add n) mod -10) mod (-9 sub n))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 5 - 9 - 33 - 152 - 900 - 6276 - 5 183 - 45 1608 - 451 6038 - 4967 6360 - 5 9611 6257 - 77 4951 1260 - 1084 9315 7552 - 1 6273 9736 3172 - 26 383 5781 635 - 442 6520 8278 656 - 7967 7374 9005 1658 - 15 1387 123 1098 1328", "x2": "mul n idiv add add x_0_1 x_0_2 n INT+ 1", "tree": "(n mul (((x_0_1 add x_0_2) add n) idiv 1))", "n_input_points": "16", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 + 1 + 9 + 8 - 3 - 5 - 6 - 9 + 9 - 9 + 9604 + 1764 + 196 + 49 + 4900 + 7056 + 8281 + 1 2544 + 196 + 1 2544 + 45 1301 8041 + 1 5126 5401 + 175 329 + 8 6436 + 11 7313 1001 + 24 3473 1649", "x2": "sqr mul INT+ 7 sub x_0_10 add idiv abs sign INT- 9 mod INT+ 5 INT- 2 INT+ 8", "tree": "((7 mul (x_0_10 sub ((abs(sign(-9)) idiv (5 mod -2)) add 8))))**2", "n_input_points": "16", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240", "x2": "mul abs add n INT- 1 n", "tree": "(abs((n add -1)) mul n)", "n_input_points": "16", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 4 + 9 + 1 + 5 - 9 - 5 + 1 + 33 + 4 + 9 + 15 + 31 + 18 + 11 + 29 + 29 + 32 + 32 + 35 + 35 + 38 + 38 + 41", "x2": "abs add mod add INT+ 7 n mul x_0_8 x_0_4 add n sub n x_0_1", "tree": "abs((((7 add n) mod (x_0_8 mul x_0_4)) add (n add (n sub x_0_1))))", "n_input_points": "16", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 10 - 8 - 4 - 3 - 8 - 6 + 0 + 2 - 1 - 6 - 8 - 4 - 7 - 14 - 17 - 15 - 11 - 10 - 15 - 13 - 7 - 5 - 8", "x2": "mul add x_0_7 n INT- 1", "tree": "((x_0_7 add n) mul -1)", "n_input_points": "16", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 9 - 6 - 3 + 10 + 3 - 11 - 6 + 11 + 9 - 12 - 11 + 13 + 12 - 15 - 14 + 16 + 15 - 18 - 17 + 19 + 18 - 21 - 20 + 22 + 21 - 24 - 23 + 25", "x2": "sub idiv sub relu n sqr idiv mul mod n INT+ 3 mul x_0_5 x_0_2 sqr n x_0_4 x_0_2", "tree": "(((relu(n) sub ((((n mod 3) mul (x_0_5 mul x_0_2)) idiv (n)**2))**2) idiv x_0_4) sub x_0_2)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 7 - 4 - 2 - 5 - 3 - 7 + 22 + 232 + 2386 + 2 6486 + 32 611 + 419 8958 + 5915 6209 + 8 9215 2322 + 143 4162 712 + 2448 1321 43 + 4 4226 9654 9056 + 84 3037 2554 6203 + 1690 9707 7932 3878 + 3 5603 2630 5248 7823 + 78 5126 4700 890 894 + 1809 6801 1524 7079 468 + 4 3517 7706 2173 7188 9027 + 108 9907 821 6072 1629 7081 + 2838 4635 8276 555 8982 2477 + 7 6756 147 3212 3407 4553 4486 + 215 2220 1526 8553 8059 8377 1699 + 6249 6699 8796 3192 4556 4313 1998 + 18 7720 3677 118 8945 441 3078 4988 + 582 6003 2816 4536 170 5709 2314 6324", "x2": "add x_0_7 mul n abs add x_0_1 relu abs x_0_3", "tree": "(x_0_7 add (n mul abs((x_0_1 add relu(abs(x_0_3))))))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 3 - 10 + 8 - 10 + 8 + 4 - 3 - 10 + 8 - 10 + 8 + 4 - 3 - 10 + 8 - 10 + 8 + 4 - 3 - 10 + 8 - 10 + 8 + 4 - 3 - 10 + 8 - 10 + 8", "x2": "add x_0_6 mul idiv INT+ 1 n INT- 1 0", "tree": "(x_0_6 add ((1 idiv n) mul -10))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 3 - 2 + 6 + 5 + 11 + 12 + 10 + 10 + 11 + 11 + 10 + 10 + 11 + 11 + 10 + 10 + 11 + 11 + 10 + 10 + 11 + 11 + 10 + 10 + 11 + 11", "x2": "sub idiv INT+ 1 0 x_0_2 INT- 1 0", "tree": "((10 idiv x_0_2) sub -10)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 7 + 1 - 1 - 1 + 2 + 2 + 72 + 135 + 110 + 132 + 156 + 169 + 210 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 352 + 391 + 432 + 475 + 520 + 567 + 616 + 29 + 30 + 31", "x2": "mul add sub sub INT+ 4 n mod n x_0_7 add n add INT+ 6 relu mod add INT- 1 0 INT+ 1 n n", "tree": "((((4 sub n) sub (n mod x_0_7)) add (n add (6 add relu(((-10 add 1) mod n))))) mul n)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 7 - 8 + 6 + 0 - 2 + 5 + 1 - 10 + 1 - 15 - 2 + 6 + 2 - 3 + 6 + 9 - 9 + 14 - 17 - 4 + 8 + 1 - 3 + 15 + 0 - 5 + 3 - 21 - 4 + 9 + 2 - 12 + 15", "x2": "mul abs add x_0_9 x_0_8 sign x_0_9", "tree": "(abs((x_0_9 add x_0_8)) mul sign(x_0_9))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 4 + 6 + 9 + 11 + 17 + 21 + 33 + 41 + 65 + 81 + 129 + 161 + 257 + 321 + 513 + 641 + 1025 + 1281 + 2049 + 2561 + 4097 + 5121 + 8193 + 1 241 + 1 6385 + 2 481", "x2": "mod add add sign INT- 3 x_0_2 x_0_2 mul x_0_1 mod n x_0_1", "tree": "(((sign(-3) add x_0_2) add x_0_2) mod (x_0_1 mul (n mod x_0_1)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 5 + 2 + 10 + 1 + 1 - 6 + 9 + 6 + 25 + 4 + 100 + 1 + 1 + 36 + 81 + 36 + 625 + 16 + 1 0 + 1 + 1 + 1296 + 6561 + 1296 + 39 625 + 256 + 1 0 0 + 1 + 1 + 167 9616 + 4304 6721 + 167 9616", "x2": "sqr x_0_8", "tree": "(x_0_8)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 6 + 8 - 8 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9 - 1 + 8 + 9", "x2": "add x_0_3 mod x_0_2 sign relu abs mul INT+ 1 0 x_0_7", "tree": "(x_0_3 add (x_0_2 mod sign(relu(abs((10 mul x_0_7))))))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 6 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr sub abs sub sub x_0_1 x_0_1 abs INT+ 8 n", "tree": "((abs(((x_0_1 sub x_0_1) sub abs(8))) sub n))**2", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 5 + 6 - 2 + 0 + 0 + 18 + 0 + 0 + 0 + 142 + 0 + 0 + 0 + 2010 + 0 + 0 + 0 + 3 7974 + 0 + 0 + 0 + 87 3058 + 0 + 0 + 0 + 2357 2062 + 0", "x2": "relu sub mul sub add x_0_4 INT+ 1 0 relu n n mul INT- 5 INT- 9", "tree": "relu(((((x_0_4 add 10) sub relu(n)) mul n) sub (-5 mul -9)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 6 + 6 - 12 + 6 - 18 + 12 - 30 + 18 - 48 + 30 - 78 + 48 - 126 + 78 - 204 + 126 - 330 + 204 - 534 + 330 - 864 + 534 - 1398 + 864 - 2262", "x2": "sub sub sub n abs x_0_2 n x_0_1", "tree": "(((n sub abs(x_0_2)) sub n) sub x_0_1)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 10 - 5 + 1 - 2 + 1 + 10 + 0 + 1 + 0 + 1 + 10 + 0 + 1 + 0 + 1 + 10 + 0 + 1 + 0 + 1 + 10 + 0 + 1 + 0 + 1 + 10 + 0 + 1", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 6 - 4 + 7 + 2 - 8 + 3 - 8 + 6 - 4 + 7 - 2 - 8 - 3 - 8 - 6 - 4 - 7 + 2 + 8 + 3 + 8 + 6 + 4 - 7 + 2 + 8 + 3 + 8 + 6 - 4", "x2": "idiv x_0_7 sign sub x_0_6 mod relu INT+ 8 INT+ 8", "tree": "(x_0_7 idiv sign((x_0_6 sub (relu(8) mod 8))))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 6 + 10 + 3 + 2 + 3 - 4 - 8 - 1 - 6 - 919 - 974 - 1147 - 1176 - 1091 - 347 - 794 - 355 - 1018 - 1914 - 1196 - 2046 - 2816 - 2242 - 803 - 1614 - 3107 - 3381 - 3809 - 4433 - 5495 - 2716 - 3596", "x2": "add sub add x_0_8 INT- 9 mul add INT- 3 mod x_0_4 sqr abs INT+ 1 0 relu n n", "tree": "(((x_0_8 add -9) sub ((-3 add (x_0_4 mod (abs(10))**2)) mul relu(n))) add n)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 4 + 2 - 5 - 10 - 6 - 13 - 18 - 14 - 21 - 26 - 22 - 29 - 34 - 30 - 37 - 42 - 38 - 45 - 50 - 46 - 53 - 58 - 54 - 61 - 66 - 62", "x2": "add sub x_0_3 sign mul add x_0_2 x_0_2 idiv idiv x_0_1 n n INT- 7", "tree": "((x_0_3 sub sign(((x_0_2 add x_0_2) mul ((x_0_1 idiv n) idiv n)))) add -7)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 10 + 40 - 240 + 1920 - 1 9200 + 23 400 - 322 5600 + 5160 9600 - 9 2897 2800 + 185 7945 6000 - 4087 4803 2000 + 9 8099 5276 8000 - 255 587 7196 8000 + 7141 6456 1510 4000 - 21 4249 3684 5312 0 + 685 5979 7904 9984 0 - 2 3310 3312 8769 9456 0 + 83 9171 9263 5718 416 0 - 3188 8533 2015 7285 5808 0 + 12 7554 1328 629 1423 2320 0 - 535 7273 5778 6423 9775 7440 0 + 2 3572 37 4260 2655 132 7360 0 - 108 4312 1721 5972 2130 6105 8560 0 + 5204 6984 2636 6666 2269 3081 880 0 - 26 234 9213 1833 3311 3465 4054 4000 0", "x2": "mul n sub idiv relu idiv INT+ 6 n mul n INT+ 3 mul sub relu sign INT- 9 x_0_1 INT- 2", "tree": "(n mul ((relu((6 idiv n)) idiv (n mul 3)) sub ((relu(sign(-9)) sub x_0_1) mul -2)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 9 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "sqr idiv mul x_0_1 n x_0_1", "tree": "(((x_0_1 mul n) idiv x_0_1))**2", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 1 - 10 - 4 + 3 - 5 + 0 + 0 + 115 + 43 + 0 + 67 + 0 + 0 + 1 3225 + 1849 + 0 + 4489 + 0 + 0 + 1 7490 625 + 341 8801 + 0 + 2015 1121 + 0 + 0 + 3 590 2286 2539 625 + 11 6882 27 7601 + 0 + 406 676 7755 6641", "x2": "relu sub sqr x_0_6 mul add sub INT+ 2 x_0_5 n idiv n x_0_6", "tree": "relu(((x_0_6)**2 sub (((2 sub x_0_5) add n) mul (n idiv x_0_6))))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0", "x2": "mod n INT- 4", "tree": "(n mod -4)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3", "x2": "mod n INT+ 7", "tree": "(n mod 7)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 5 + 24 + 19 + 58 + 57 + 79 + 127 + 102 + 161 + 193 + 187 + 272 + 285 + 286 + 523 + 521 + 843 + 668 + 1017 + 871 + 1317 + 1023 + 1691 + 1437 + 1887", "x2": "relu add abs x_0_2 add add INT+ 9 mod mul n x_0_1 sqr n relu INT+ 5", "tree": "relu((abs(x_0_2) add ((9 add ((n mul x_0_1) mod (n)**2)) add relu(5))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 9 - 6 - 6 + 2 - 11 - 25 - 23 - 24 - 17 - 31 - 46 - 45 - 47 - 41 - 56 - 72 - 72 - 75 - 70 - 86 - 103 - 104 - 108 - 104 - 121 - 139 - 141 - 146", "x2": "add add relu INT- 2 x_0_5 sub INT- 9 n", "tree": "((relu(-2) add x_0_5) add (-9 sub n))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 80 + 224 + 512 + 1088 + 2240 + 4544 + 9152 + 1 8368 + 3 6800 + 7 3664 + 14 7392 + 29 4848 + 58 9760 + 117 9584 + 235 9232 + 471 8528 + 943 7120 + 1887 4304 + 3774 8672 + 7549 7408 + 1 5099 4880 + 3 198 9824 + 6 397 9712 + 12 795 9488", "x2": "sub add add sqr INT+ 8 x_0_1 add x_0_1 x_0_1 x_0_1", "tree": "((((8)**2 add x_0_1) add (x_0_1 add x_0_1)) sub x_0_1)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 1 + 0 - 8 - 8 + 9 - 2 + 3 + 1 + 2 + 3 - 2 + 25 + 24 + 19 + 14 + 18 + 577 + 9 + 382 + 4 + 78 + 2977 + 82 + 66 + 73 + 1745 + 45 + 1723 + 21 + 616 + 8935 + 324 + 3175 + 301 + 5301", "x2": "abs mul sign INT+ 1 0 sub mod x_0_11 mul mul x_0_4 mod INT- 5 n x_0_8 mul INT- 3 x_0_9", "tree": "abs((sign(10) mul ((x_0_11 mod ((x_0_4 mul (-5 mod n)) mul x_0_8)) sub (-3 mul x_0_9))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 3 - 2 + 1 + 5 + 9 + 4 + 7 + 11 + 15 + 10 + 13 + 17 + 21 + 16 + 19 + 23 + 27 + 22 + 25 + 29 + 33 + 28 + 31 + 35 + 39 + 34 + 37 + 41", "x2": "add x_0_4 add INT+ 7 idiv sign n INT- 3", "tree": "(x_0_4 add (7 add (sign(n) idiv -3)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 10 - 4 + 9 - 10 + 5 - 3 - 7 + 8 + 12 - 4 + 31 + 5 + 34 + 25 + 20 + 22 + 25 - 12 + 32 - 30 + 7 - 15 - 6 - 2 + 35 - 10 + 91 + 12 + 98 + 54 + 74 + 30", "x2": "sub add sub n add x_0_7 x_0_9 n INT+ 7", "tree": "(((n sub (x_0_7 add x_0_9)) add n) sub 7)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "- 2 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "mod idiv relu n INT- 8 mul sub mul INT+ 1 sqr INT+ 4 idiv INT- 1 0 x_0_1 INT- 7", "tree": "((relu(n) idiv -8) mod (((1 mul (4)**2) sub (-10 idiv x_0_1)) mul -7))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 + 6 - 8 + 6 - 2 + 7 - 4 + 5 + 8 + 6 + 3 + 4 + 6 - 9 + 6 - 19 + 19 + 8 - 9 + 23 - 9 + 4 - 7 - 14 - 2 - 5 + 23 + 11 - 3 + 52 - 50 - 7 - 7", "x2": "idiv idiv add sqr n n sub x_0_9 relu sign x_0_6 x_0_5", "tree": "((((n)**2 add n) idiv (x_0_9 sub relu(sign(x_0_6)))) idiv x_0_5)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 4 - 5 + 4 + 1 + 0 + 0 + 14 + 96 + 0 + 0 + 11 + 0 + 0 + 0 + 15 + 0 + 0 + 0 + 19 + 0 + 0 + 0 + 23 + 0 + 0 + 0 + 27 + 0", "x2": "abs relu mul n idiv sub add mul abs INT+ 1 n sub n n INT- 4 x_0_4", "tree": "abs(relu((n mul ((((abs(1) mul n) add (n sub n)) sub -4) idiv x_0_4))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 11 + 25 - 45 + 95 - 183 + 373 - 737 + 1483 - 2955 + 5921 - 1 1829 + 2 3671 - 4 7327 + 9 4669 - 18 9321 + 37 8659 - 75 7299 + 151 4617 - 302 9213 + 605 8447 - 1211 6871 + 2423 3765 - 4846 7505 + 9693 5035", "x2": "sub n add x_0_1 add x_0_1 idiv INT- 6 x_0_1", "tree": "(n sub (x_0_1 add (x_0_1 add (-6 idiv x_0_1))))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 7 + 9 - 9 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0 + 0 + 9 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 3 + 10 - 9 - 2 - 1 - 1 - 1 + 0 + 0 + 0 + 1 + 2 + 3 - 8 - 11 - 11 - 7 - 10 - 10 - 6 - 9 - 9 - 5 - 8 - 8 - 4 - 7", "x2": "add add relu x_0_1 mod x_0_3 sub sign x_0_3 n sign n", "tree": "((relu(x_0_1) add (x_0_3 mod (sign(x_0_3) sub n))) add sign(n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 9 - 7 - 5 - 10 + 6 + 4 + 9 - 7 - 5 - 10 + 6 + 4 + 9 - 7 - 5 - 10 + 6 + 4 + 9 - 7 - 5 - 10 + 6 + 4 + 9 - 7", "x2": "sub idiv sign sqr n INT- 1 x_0_3", "tree": "((sign((n)**2) idiv -1) sub x_0_3)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 2 - 3 - 6 + 1 - 6 + 3 + 4 + 4 + 0 + 2 + 10 + 1 + 4 + 2 + 10 + 1 + 6 + 1 + 6 + 1 + 4 + 0 + 0 + 0 + 2 + 1 + 4 + 0 + 2", "x2": "abs abs sub x_0_4 x_0_6", "tree": "abs(abs((x_0_4 sub x_0_6)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 3 + 10 + 9 - 10 + 8 - 1 + 49 + 9 + 100 + 81 + 100 + 64 + 1 + 2401 + 81 + 1 0 + 6561 + 1 0 + 4096 + 1 + 576 4801 + 6561 + 1 0 0 + 4304 6721 + 1 0 0 + 1677 7216 + 1 + 33 2329 3056 9601 + 4304 6721 + 1 0 0 0 0", "x2": "relu sqr x_0_7", "tree": "relu((x_0_7)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 7 + 4 + 8 - 2 + 1 + 8 - 10 - 48 - 8 + 6 - 7 - 32 + 30 - 720 - 424 - 78 + 7 - 384 - 1110 + 1 8000 - 30 7400 - 3 3462 - 581 + 768 - 43 1790 - 2007 0 + 55 3166 3000 - 102 8638 6110 - 1944 4327 - 45 48 + 3 2945 5770", "x2": "mul abs x_0_6 add x_0_7 mod sqr INT- 3 INT- 7", "tree": "(abs(x_0_6) mul (x_0_7 add ((-3)**2 mod -7)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 2 - 5 + 4 + 7 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign add INT- 2 mul n x_0_5", "tree": "sign((-2 add (n mul x_0_5)))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 9 - 8 - 224 + 360 + 384 + 1 2544 - 2 3040 - 2 7648 - 100 3520 + 202 7520 + 265 4208 + 1 436 6080 - 2 2708 2240 - 3 1850 4960 - 133 5885 8240 + 308 8318 4640 + 458 6471 4240 + 2 305 4645 2480 - 4 9413 954 2400 - 7 7052 7199 2320 - 357 3761 7563 6480 + 909 2009 5580 1600 + 1479 4122 2252 5440 + 7 1475 2351 2729 6000 - 18 9113 7988 673 2800 - 31 9553 400 6549 5040", "x2": "mul mul x_0_3 n INT- 8", "tree": "((x_0_3 mul n) mul -8)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 2 + 9 + 8 - 10 - 2 - 1 - 6 - 8 - 6 - 2 - 8 + 0 + 0 + 0 - 6 - 1 - 6 - 6 - 6 - 1 - 4 - 9 - 6 + 0 - 2 - 2 - 4 - 4", "x2": "mod sub mod mul sqr INT- 8 x_0_5 n INT+ 6 INT- 1 0", "tree": "(((((-8)**2 mul x_0_5) mod n) sub 6) mod -10)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 2 - 4 + 2 - 4 - 2 + 4 - 2 - 4 + 2 - 4 - 2 + 4 - 2 - 4 + 2 - 4 - 2 + 4 - 2 - 4 + 2 - 4 - 2 + 4 - 2 - 4", "x2": "idiv mod INT+ 8 sqr INT+ 9 x_0_3", "tree": "((8 mod (9)**2) idiv x_0_3)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 64 + 126 + 187 + 247 + 306 + 364 + 421 + 477 + 532 + 586 + 639 + 691 + 742 + 792 + 841 + 889 + 936 + 982 + 1027 + 1071 + 1114 + 1156 + 1197 + 1237", "x2": "add add sqr INT+ 8 sign n sub sub x_0_1 mod n sign n n", "tree": "(((8)**2 add sign(n)) add ((x_0_1 sub (n mod sign(n))) sub n))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 2 + 12 + 36 + 80 + 150 + 252 + 392 + 576 + 810 + 1100 + 1452 + 1872 + 2366 + 2940 + 3600 + 4352 + 5202 + 6156 + 7220 + 8400 + 9702 + 1 1132 + 1 2696", "x2": "mul n sqr add sign idiv sqr INT- 5 mul INT- 6 idiv n sqr INT+ 8 n", "tree": "(n mul ((sign(((-5)**2 idiv (-6 mul (n idiv (8)**2)))) add n))**2)", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 9 + 10 - 2 + 4 - 1 - 5 - 2 - 9 + 5 - 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 2 - 9 - 4 - 11 - 6 - 13 - 8 - 15 - 10 - 17 - 12 - 19 - 14 - 21 - 16 - 23 - 18 - 25 - 20 - 27 - 22 - 29 - 24 - 31 - 26", "x2": "idiv sub n sub sub sign INT+ 3 add abs INT+ 8 add n relu INT- 2 x_0_1 sign x_0_1", "tree": "((n sub ((sign(3) sub (abs(8) add (n add relu(-2)))) sub x_0_1)) idiv sign(x_0_1))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 7 - 1 + 9 - 3 + 2 - 4 - 10 - 8 - 6 + 6 + 96 - 79 - 2 + 147 - 36 + 46 - 60 - 178 - 148 - 114 + 144 + 2220 - 1884 - 38 + 3834 - 960 + 1300 - 1728 - 5328 - 4576 - 3636 + 4764 + 7 5492 - 6 5928", "x2": "add mul n idiv x_0_11 INT+ 1 abs add INT+ 5 INT+ 7", "tree": "((n mul (x_0_11 idiv 1)) add abs((5 add 7)))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 10 + 9 - 9 - 3 + 1 - 2 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv x_0_3 n", "tree": "(x_0_3 idiv n)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 9 + 7 + 4 + 0 - 5 - 3 - 6 - 4 - 7 - 5 - 8 - 6 - 9 - 7 - 10 - 8 - 11 - 9 - 12 - 10 - 13 - 11 - 14 - 12", "x2": "sub abs add x_0_1 INT+ 1 n", "tree": "(abs((x_0_1 add 1)) sub n)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 + 10 - 2 + 5 + 15 + 40 + 59 + 90 + 148 + 227 + 339 + 511 + 764 + 1131 + 1672 + 2468 + 3633 + 5341 + 7847 + 1 1520 + 1 6903 + 2 4794 + 3 6360 + 5 3311 + 7 8155 + 11 4567 + 16 7932", "x2": "add add add x_0_1 n n mod x_0_3 x_0_1", "tree": "(((x_0_1 add n) add n) add (x_0_3 mod x_0_1))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 6 + 0 + 1 - 1 + 0 + 0 + 1 + 0 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 0 + 1 + 0", "x2": "sqr idiv sub add mod sign mod n x_0_5 add relu INT+ 3 relu INT+ 5 INT+ 2 x_0_3 INT+ 8", "tree": "(((((sign((n mod x_0_5)) mod (relu(3) add relu(5))) add 2) sub x_0_3) idiv 8))**2", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 1 - 4 + 5 - 9 - 3 + 7 - 2 + 5 - 1 - 9 - 20 - 66 - 122 - 385 - 94 - 682 - 20 - 344 - 425 - 729 - 307 - 1631 + 18 - 496 - 494 - 1286 - 920 - 400 + 50 - 495 - 313 - 1458 - 1364 - 4292", "x2": "sub n add n add n mod mul n x_0_2 add mul n mul n mod n INT+ 6 x_0_11", "tree": "(n sub (n add (n add ((n mul x_0_2) mod ((n mul (n mul (n mod 6))) add x_0_11)))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 8 - 48 - 288 - 1728 - 1 368 - 6 2208 - 37 3248 - 223 9488 - 1343 6928 - 8062 1568 - 4 8372 9408 - 29 237 6448 - 174 1425 8688 - 1044 8555 2128 - 6269 1331 2768 - 3 7614 7987 6608 - 22 5688 7925 9648 - 135 4132 7555 7888 - 812 4796 5334 7328 - 4874 8779 2008 3968 - 2 9249 2675 2050 3808 - 17 5495 6051 2302 2848 - 105 2973 6307 3813 7088 - 631 7841 7844 2882 2528 - 3790 7050 7065 7293 5168", "x2": "mul INT+ 6 x_0_1", "tree": "(6 mul x_0_1)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 11 + 14 + 18 + 23 + 29 + 36 + 44 + 53 + 63 + 74 + 86 + 99 + 113 + 128 + 144 + 161 + 179 + 198 + 218 + 239 + 261 + 284 + 308 + 333", "x2": "add n relu x_0_1", "tree": "(n add relu(x_0_1))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 7 + 8 - 5 + 8 + 2 + 2 - 22 - 22 - 36 - 24 - 25 - 26 - 51 - 52 - 67 - 56 - 52 - 54 - 80 - 82 - 98 - 88 - 79 - 82 - 109 - 112 - 129 - 120 - 106 - 110", "x2": "sub add x_0_6 mul relu INT+ 3 INT- 9 mod mod abs n abs INT+ 6 add mod INT- 6 x_0_7 n", "tree": "((x_0_6 add (relu(3) mul -9)) sub ((abs(n) mod abs(6)) mod ((-6 mod x_0_7) add n)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 8 - 1 - 4 - 10 - 5 + 1 + 1 + 1 + 4 + 0 + 5 + 11 + 12 + 13 + 11 + 0 + 12 + 7 + 7 + 7 + 10 + 0 + 11 + 17 + 18 + 19 + 17 + 0 + 18 + 13", "x2": "mod sub idiv idiv INT- 6 INT+ 6 INT- 7 x_0_6 relu n", "tree": "((((-6 idiv 6) idiv -7) sub x_0_6) mod relu(n))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 2 - 9 - 8 + 4 + 5 + 6 + 11 + 13 + 15 + 21 + 24 + 27 + 35 + 39 + 43 + 52 + 58 + 63 + 73 + 80 + 86 + 98 + 106 + 113 + 126 + 135 + 144", "x2": "add n relu add idiv abs mod INT- 5 x_0_3 n x_0_3", "tree": "(n add relu(((abs((-5 mod x_0_3)) idiv n) add x_0_3)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 10 + 3 - 10 + 2 + 3 + 2 + 2 - 10 + 25 + 100 + 9 + 100 + 4 + 9 + 4 + 4 + 100 + 625 + 1 0 + 81 + 1 0 + 16 + 81 + 16 + 16 + 1 0 + 39 625 + 1 0 0 + 6561 + 1 0 0 + 256 + 6561", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 3 - 10 + 5 + 18 - 9 - 33 + 16 + 59 - 29 - 107 + 52 + 192 - 94 - 346 + 169 + 622 - 305 - 1120 + 549 + 2016 - 989 - 3629 + 1780 + 6532 - 3204 - 1 1758", "x2": "idiv mul x_0_2 INT- 9 INT+ 5", "tree": "((x_0_2 mul -9) idiv 5)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552", "x2": "sub sqr n n", "tree": "((n)**2 sub n)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 9 + 9 + 3 - 2 + 7 + 4 + 8 - 10 + 52 + 115 + 206 + 206 + 306 + 414 + 576 + 461 + 1363 + 3825 + 8538 + 1 3913 + 2 1695 + 3 2768 + 4 8684 + 6 3112 + 10 879 + 21 994 + 46 9209 + 91 5403 + 163 5846 + 276 158 + 448 1916 + 680 8063", "x2": "abs add add mul x_0_9 abs INT+ 5 INT- 2 add n add mul x_0_8 n x_0_1", "tree": "abs((((x_0_9 mul abs(5)) add -2) add (n add ((x_0_8 mul n) add x_0_1))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 9 - 5 + 6 + 4 + 8 + 7 + 11 + 9 + 16 + 12 + 20 + 17 + 13 + 21 + 18 + 29 + 22 + 19 + 30 + 23 + 40 + 31 + 24 + 41 + 32 + 50 + 42", "x2": "add n mod x_0_3 sub n sign add add mul INT+ 6 abs INT+ 9 INT+ 1 0 n", "tree": "(n add (x_0_3 mod (n sub sign((((6 mul abs(9)) add 10) add n)))))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 1 + 0 - 3 - 7 + 3 - 2 - 3 + 2 - 3 + 7 + 16 - 1 + 11 + 3 - 17 + 4 - 16 - 10 + 5 + 1 + 1 + 29 - 7 + 16 + 10 - 25 + 21 - 13 - 26 + 32 - 30", "x2": "sub sub mod sqr x_0_4 n relu x_0_4 x_0_7", "tree": "((((x_0_4)**2 mod n) sub relu(x_0_4)) sub x_0_7)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 9 + 8 + 7 + 1 - 35 - 35 - 25 + 45 + 43 + 21 - 121 - 119 - 77 + 205 + 199 + 113 - 453 - 443 - 273 + 857 + 835 + 493 - 1769 - 1727 - 1045 + 3477 + 3391", "x2": "sub mul INT- 2 add x_0_3 n INT+ 9", "tree": "((-2 mul (x_0_3 add n)) sub 9)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 4 - 3 + 0 + 3 + 4 + 3 + 0 + 3 + 4 + 3 + 0 + 3 + 4 + 3 + 0 + 3 + 4 + 3 + 0 + 3 + 4 + 3 + 0 + 3 + 4 + 3 + 0", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 + 6 + 8 + 6 + 6 + 4 - 6 - 14 - 17 - 16 - 17 - 17 - 9 - 2 + 0 - 2 - 2 - 2 - 11 - 19 - 22 - 21 - 22 - 23 - 15 - 8 - 6 - 8 - 8 - 8", "x2": "idiv add sub INT- 3 mul add sub x_0_6 idiv sign INT+ 3 relu n relu n n x_0_5 n", "tree": "(((-3 sub (((x_0_6 sub (sign(3) idiv relu(n))) add relu(n)) mul n)) add x_0_5) idiv n)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 10 + 6 - 5 - 2 + 7 + 4 + 9 + 6 - 3 + 50 + 140 + 120 + 280 + 650 + 2460 + 1330 + 4160 - 1 8990 + 5500 + 1650 + 4800 - 8060 + 1960 + 900 + 1440 + 680 + 900 + 1140 + 1200 + 1260 + 1100 + 1380 + 1680", "x2": "mul INT- 1 0 mul add INT+ 6 idiv x_0_4 x_0_9 sub abs INT- 9 n", "tree": "(-10 mul ((6 add (x_0_4 idiv x_0_9)) mul (abs(-9) sub n)))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 8 + 4 - 7 + 2 - 10 - 3 - 7 + 9 + 10 + 12 + 4 - 5 - 10 + 4 + 13 + 24 + 21 - 2 - 16 - 13 - 1 + 33 + 44 + 18 - 8 - 39 - 38 + 22 + 59 + 64 + 37", "x2": "sub sub x_0_6 mul INT- 7 sign add INT- 8 sub sqr add add n x_0_7 n add INT+ 1 0 n x_0_4", "tree": "((x_0_6 sub (-7 mul sign((-8 add ((((n add x_0_7) add n))**2 sub (10 add n)))))) sub x_0_4)", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 10 - 10 - 12 - 12 - 10 - 6 + 0 + 24 + 36 + 50 + 66 + 84 + 104 + 126 + 150 + 176 + 204 + 234 + 266 + 300 + 336 + 374 + 414 + 456 + 500", "x2": "mul relu n add add sign x_0_1 n INT- 6", "tree": "(relu(n) mul ((sign(x_0_1) add n) add -6))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 2 - 9 - 4 + 9 + 10 + 396 + 294 + 832 + 2268 + 3100 + 5 699 + 4 5936 + 14 5171 + 45 212 + 70 4475 + 1298 7392 + 1328 5619 + 4704 7392 + 1 6254 611 + 2 8180 6400 + 57 2745 8835 + 64 3026 1376 + 248 8809 5231 + 936 2342 160 + 1761 2903 1875 + 3 8717 6220 8288 + 4 6876 6058 3199 + 19 5122 6670 5792 + 78 7372 9640 4179", "x2": "abs mul abs add n add mul x_0_5 n mul add abs n relu n n n", "tree": "abs((abs((n add ((x_0_5 mul n) add ((abs(n) add relu(n)) mul n)))) mul n))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 1 - 2 - 2 + 10 - 5 - 8 - 8 - 6 + 7 - 4 - 10 - 2 + 169 + 196 + 225 + 256 + 289 + 325 + 362 + 400 + 441 + 484 + 530 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225 + 1296", "x2": "add idiv add n sub sign n INT+ 8 add n x_0_12 sqr n", "tree": "(((n add (sign(n) sub 8)) idiv (n add x_0_12)) add (n)**2)", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 0 + 1", "x2": "relu sub abs abs sign idiv n INT+ 7 mod n INT+ 6", "tree": "relu((abs(abs(sign((n idiv 7)))) sub (n mod 6)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 10 + 8 - 9 + 6 + 10 + 38 + 33 + 62 + 82 + 128 + 143 + 194 + 238 + 310 + 353 + 434 + 510 + 616 + 695 + 814 + 930 + 1078 + 1201 + 1366 + 1530 + 1728 + 1903 + 2122", "x2": "add sub sqr n relu n x_0_4", "tree": "(((n)**2 sub relu(n)) add x_0_4)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 2 + 6 + 8 + 3 - 2 + 784 + 0 + 0 + 1 4161 + 3 2400 + 0 + 5 7600 + 12 7449 + 0 + 0 + 14 7456 + 0 + 0 + 26 3169 + 101 6064 + 0 + 43 5600 + 64 9636 + 0 + 0 + 266 3424 + 0 + 0 + 115 1329", "x2": "sqr mul relu add sub mod x_0_4 n sqr x_0_5 n sub INT- 8 n", "tree": "((relu((((x_0_4 mod n) sub (x_0_5)**2) add n)) mul (-8 sub n)))**2", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 3 - 2 - 2 - 9 + 0 - 10 + 0 - 1 - 1 - 2 - 7 + 1 - 10 + 2 + 0 - 1 + 0 - 6 + 1 - 8 + 3 + 0 + 1 + 1 - 6 + 3 - 7 + 3 + 2 + 2", "x2": "sub x_0_7 mod add INT+ 4 n INT- 3", "tree": "(x_0_7 sub ((4 add n) mod -3))", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824", "x2": "relu mul relu sqr abs n n", "tree": "relu((relu((abs(n))**2) mul n))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 5 - 12 + 2 + 0 - 18 - 5 - 8 - 27 - 15 - 19 - 39 - 28 - 33 - 54 - 44 - 50 - 72 - 63 - 70 - 93 - 85 - 93 - 117 - 110 - 119", "x2": "sub x_0_3 sub n idiv abs n n", "tree": "(x_0_3 sub (n sub (abs(n) idiv n)))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 5 + 1 + 2 - 9 + 312 + 715 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783", "x2": "abs sub n sub sqr mod n add mul n x_0_5 abs idiv x_0_3 INT+ 2 relu n", "tree": "abs((n sub (((n mod ((n mul x_0_5) add abs((x_0_3 idiv 2)))))**2 sub relu(n))))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 3 - 7 - 8 - 4 - 7 - 3 + 4 + 1 - 243 - 700 - 968 - 576 - 1183 - 588 + 900 + 256 - 7 227 - 22 6800 - 34 9448 - 23 400 - 52 1703 - 28 4592 + 47 6100 + 14 7456 - 4389 1875 - 1 5331 6800 - 2 5474 7592 - 1 8063 3600 - 4 3875 2223 - 2 5613 2800 + 4 5753 2100 + 1 5099 4944", "x2": "mul x_0_8 mul n n", "tree": "(x_0_8 mul (n mul n))", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 7 - 3 + 5 - 6 + 6 + 3 + 2 + 9 - 2 - 9 - 3 - 6 - 4 + 6 - 7 + 5 + 2 + 1 + 10 - 1 - 8 - 2 - 5 - 5 + 7 - 8 + 4 + 1 + 0 + 11 + 0 - 7 - 1 - 4 - 6", "x2": "sub x_0_11 sign add mod sign n add sqr x_0_1 INT- 3 x_0_10", "tree": "(x_0_11 sub sign(((sign(n) mod ((x_0_1)**2 add -3)) add x_0_10)))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "+ 3 - 5 - 3 - 5 - 3 - 4 - 3 - 4 - 2 - 4 - 2 - 3 - 2 - 3 - 1 - 3 - 1 - 2 - 1 - 2 + 0 - 2 + 0 - 1 + 0", "x2": "sub add INT- 6 abs sub relu add sub n INT+ 3 idiv n INT+ 3 x_0_1 n", "tree": "((-6 add abs((relu(((n sub 3) add (n idiv 3))) sub x_0_1))) sub n)", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 4 - 4 + 9 - 6 + 18 + 0 + 0 + 45 + 0 + 126 + 0 + 0 + 126 + 0 + 126 + 0 + 0 + 126 + 0 + 126 + 0 + 0 + 126 + 0 + 126 + 0 + 0 + 126", "x2": "mul relu mod abs mul INT- 7 INT+ 2 x_0_5 INT+ 9", "tree": "(relu((abs((-7 mul 2)) mod x_0_5)) mul 9)", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 5 - 2 - 8 - 7 - 2 + 0 + 0 + 0 + 0 + 0 - 2 + 0 - 2 - 1 + 0 + 0 - 3 - 2 - 6 + 0 + 0 + 0 + 0 + 0 - 3 - 6 - 8 + 0", "x2": "mod abs add n mul INT- 7 n idiv sub n x_0_2 sub idiv x_0_4 n abs INT- 3", "tree": "(abs((n add (-7 mul n))) mod ((n sub x_0_2) idiv ((x_0_4 idiv n) sub abs(-3))))", "n_input_points": "24", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 5 + 8 - 2 + 5 - 2 - 3 - 7 + 1 + 86 + 10 - 184 - 744 + 58 - 130 + 1681 + 340 - 4068 - 1 4502 - 15 3659 - 4578 - 73 9498 - 1327 6130 - 18 5177 - 81 5778 - 8044 3613 - 336 4202 - 5 135 4699 - 67 752 3122 - 7319 4947 6239 - 6 9676 2562 - 18 489 4527 4274 - 5992 6914 5879 6314", "x2": "sub mul n sub x_0_6 sqr x_0_10 add n sub sub INT+ 2 n sqr n", "tree": "((n mul (x_0_6 sub (x_0_10)**2)) sub (n add ((2 sub n) sub (n)**2)))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "- 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784 - 841 - 900 - 961 - 1024 - 1089", "x2": "sub abs mod n n sqr add abs INT+ 9 n", "tree": "(abs((n mod n)) sub ((abs(9) add n))**2)", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 3 - 24 - 81 - 192 - 375 - 648 - 1029 - 1536 - 2187 - 3000 - 3993 - 5184 - 6591 - 8232 - 1 125 - 1 2288 - 1 4739 - 1 7496 - 2 577 - 2 4000 - 2 7783 - 3 1944 - 3 6501 - 4 1472", "x2": "mul mul sqr n abs n INT- 3", "tree": "(((n)**2 mul abs(n)) mul -3)", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 0 - 9 - 2 + 30 + 0 - 63 - 16 + 270 + 0 - 693 - 192 + 3510 + 0 - 1 395 - 3072 + 5 9670 + 0 - 19 7505 - 6 1440 + 125 3070 + 0 - 454 2615 - 147 4560 + 3132 6750 + 0 - 1 2265 605 - 4128 7680", "x2": "mul abs n x_0_4", "tree": "(abs(n) mul x_0_4)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 6 + 6 - 12 - 12 - 12 + 6 + 6 + 6 - 12 - 12 - 12 + 6 + 6 + 6 - 12 - 12 - 12 + 6 + 6 + 6 - 12 - 12 - 12 + 6 + 6 + 6", "x2": "sub INT- 6 x_0_3", "tree": "(-6 sub x_0_3)", "n_input_points": "24", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 1 + 4 + 8 - 3 - 6 + 1 + 1779 + 1774 + 1770 + 1781 + 1784 + 1777 - 1 + 4 + 8 - 3 - 6 + 1 + 1779 + 1774 + 1770 + 1781 + 1784 + 1777 - 1 + 4 + 8 - 3 - 6 + 1", "x2": "add add sqr mul INT- 7 INT+ 6 INT+ 7 sub INT+ 7 x_0_6", "tree": "((((-7 mul 6))**2 add 7) add (7 sub x_0_6))", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 10 + 6 + 3 + 10 - 2 + 5 + 7 + 4 + 7 + 9 + 6 + 10 + 3 + 13 + 4 + 12 + 15 + 13 + 6 + 16 + 7 + 15 + 21 + 16 + 9 + 22 + 10", "x2": "sub sub sub n mod x_0_3 x_0_1 idiv x_0_2 n mod idiv n n x_0_3", "tree": "(((n sub (x_0_3 mod x_0_1)) sub (x_0_2 idiv n)) sub ((n idiv n) mod x_0_3))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 6 + 7", "x2": "idiv sqr n abs sqr INT+ 9", "tree": "((n)**2 idiv abs((9)**2))", "n_input_points": "24", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 4 + 0 - 3 - 2 + 1 - 2 - 7 + 8 - 2 - 6 + 20 + 49 + 80 + 30 + 0 + 200 + 686 + 960 + 1230 + 0 + 1 3200 + 5488 + 18 4320 + 83 3940 + 0 + 2880 2400 + 4 3904 + 24 3154 9440 + 45 6999 1200 + 0 + 29 3281 140 4800 + 35 1232 + 7 34 4401 3826 480 + 200 6043 3371 5200", "x2": "abs mul sub add x_0_7 relu sub x_0_8 sqr add x_0_6 x_0_11 INT+ 8 x_0_5", "tree": "abs((((x_0_7 add relu((x_0_8 sub ((x_0_6 add x_0_11))**2))) sub 8) mul x_0_5))", "n_input_points": "24", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 1 - 1 - 4 + 1 - 10 - 2 - 7 - 4 - 4 - 40 - 4 - 48 - 52 - 4 - 60 - 4 - 68 - 4 - 4 - 80 - 4 - 88 - 4 - 96 - 100 - 4 - 108 - 4 - 116 - 4 - 4", "x2": "mul INT- 4 mod sign sub idiv x_0_7 sqr x_0_8 sub x_0_6 x_0_8 n", "tree": "(-4 mul (sign(((x_0_7 idiv (x_0_8)**2) sub (x_0_6 sub x_0_8))) mod n))", "n_input_points": "24", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 4 + 110 + 193 + 336 + 496 + 700 + 933 + 1205 + 1511 + 1853 + 2231 + 2645 + 3095 + 3581 + 4103 + 4661 + 5255 + 5885 + 6551 + 7253 + 7991 + 8765 + 9575 + 1 421 + 1 1303", "x2": "idiv add sqr mul INT+ 6 n abs x_0_2 abs INT+ 3", "tree": "((((6 mul n))**2 add abs(x_0_2)) idiv abs(3))", "n_input_points": "24", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 10 + 3 + 5 - 4 + 3 - 1 - 13 - 4 - 8 + 3 - 4 + 0 + 12 + 1 + 7 - 6 + 1 - 3 - 15 - 2 - 10 + 5 - 2 + 2 + 14 - 1 + 9 - 8 - 1", "x2": "sub mod sign x_0_4 INT- 4 x_0_6", "tree": "((sign(x_0_4) mod -4) sub x_0_6)", "n_input_points": "24", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 4 + 9 - 7 - 6 + 5 - 10 - 9 + 0 + 10 + 25 + 9 + 75 + 54 + 26 + 16 + 100 + 91 + 25 + 109 + 700 + 135 + 5651 + 2932 + 776 + 347 + 1 25 + 8390 + 1325 + 1 2016 + 49 5651 + 2 1157 + 3193 4577 + 859 6971", "x2": "add x_0_8 sqr x_0_10", "tree": "(x_0_8 add (x_0_10)**2)", "n_input_points": "24", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 9 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr sub add add idiv n n n x_0_1 x_0_1", "tree": "(((((n idiv n) add n) add x_0_1) sub x_0_1))**2", "n_input_points": "24", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 3 + 1 - 3 - 1 - 6 + 10 - 7 - 6 + 0 - 1 + 0 + 0 + 5 + 0 + 5 + 5 - 1 + 5 - 1 - 1 + 0 - 1 + 0 + 0 + 5 + 0 + 5 + 5 - 1 + 5 - 1 - 1", "x2": "idiv INT+ 5 sub sign abs sign n mul mul sign sqr sqr x_0_9 x_0_4 n", "tree": "(5 idiv (sign(abs(sign(n))) sub ((sign(((x_0_9)**2)**2) mul x_0_4) mul n)))", "n_input_points": "24", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 3 + 1 + 5 - 7 + 1 + 5 + 1 + 7 + 5 + 1 + 7 + 5 + 1 + 7 + 5 + 1 + 7 + 5 + 1 + 7 + 5", "x2": "mod add x_0_3 mul INT+ 6 add sign add INT- 9 add x_0_5 INT- 7 sign x_0_4 n", "tree": "((x_0_3 add (6 mul (sign((-9 add (x_0_5 add -7))) add sign(x_0_4)))) mod n)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 2 + 2 - 2 - 4 - 16 - 22 - 32 - 34 - 44 - 52 - 70 - 82 - 98 - 106 - 122 - 136 - 160 - 178 - 200 - 214", "x2": "sub sub add INT+ 6 n x_0_3 sqr n", "tree": "(((6 add n) sub x_0_3) sub (n)**2)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 + 10 + 1 - 8 - 7 - 6 - 1 - 1288 - 693 - 1050 - 1375 - 1716 - 1 8915 - 1 2418 - 1 9095 - 2 6064 - 3 4051 - 34 6266 - 24 2763 - 38 9860 - 55 6563 - 75 9726 - 797 6239 - 584 88", "x2": "sub mul mul relu x_0_6 mul n x_0_7 sign n mul sub INT- 2 sub x_0_5 mul n n n", "tree": "(((relu(x_0_6) mul (n mul x_0_7)) mul sign(n)) sub ((-2 sub (x_0_5 sub (n mul n))) mul n))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 1 + 1 + 9 + 1 - 4 - 3 - 2 - 1 + 0 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 9 - 8", "x2": "mod mul n sign sqr mul idiv sub x_0_5 x_0_1 sqr INT- 4 INT+ 6 INT- 1 0", "tree": "((n mul sign(((((x_0_5 sub x_0_1) idiv (-4)**2) mul 6))**2)) mod -10)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 2 - 4 + 0 + 2 - 2 - 4 + 0 + 2 - 2 - 4 + 0 + 2 - 2 - 4 + 0 + 2 - 2 - 4", "x2": "sub INT- 2 x_0_2", "tree": "(-2 sub x_0_2)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 9 + 12 + 17 + 24 + 33 + 44 + 57 + 72 + 89 + 108 + 129 + 152 + 177 + 204 + 233 + 264 + 297", "x2": "add x_0_1 sub n sub INT+ 3 n", "tree": "(x_0_1 add (n sub (3 sub n)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 6 + 3 - 6 - 1 + 0 - 1 + 0 + 2 - 2 + 2 - 2 - 1 + 0 - 1 + 0 + 2 - 2 + 2 - 2 - 1", "x2": "idiv INT- 7 add mul x_0_4 INT+ 9 add INT+ 7 INT- 1", "tree": "(-7 idiv ((x_0_4 mul 9) add (7 add -1)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 1 + 10 + 7 - 8 + 6 - 7 + 5 + 51 + 65 + 46 + 56 + 17 + 2607 + 4218 + 2121 + 3187 + 354 + 679 6495 + 1779 1580 + 449 8658 + 1015 9576 + 12 9534 + 46 1923 4428 7146 + 316 5403 1889 9587", "x2": "add x_0_8 sqr x_0_5", "tree": "(x_0_8 add (x_0_5)**2)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 4 - 3 + 10 - 7 + 5 + 9 - 7 + 4 + 16 + 9 + 100 + 49 + 25 + 81 + 49 + 16 + 256 + 81 + 1 0 + 2401 + 625 + 6561 + 2401 + 256", "x2": "relu abs abs sqr x_0_8", "tree": "relu(abs(abs((x_0_8)**2)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 5 + 9 - 10 - 3 - 3 - 5 + 0 + 2 + 6 - 10 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2", "x2": "mod add idiv INT- 8 mod sub idiv n sub relu INT+ 8 x_0_11 INT- 1 0 n add INT+ 1 n INT- 5", "tree": "(((-8 idiv (((n idiv (relu(8) sub x_0_11)) sub -10) mod n)) add (1 add n)) mod -5)", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "relu mul n n", "tree": "relu((n mul n))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 7 + 5 - 7 - 6 + 2 + 8 - 10 + 0 + 10 + 1 - 3 + 4 + 2 + 0 - 7 + 0 + 6 + 0 - 3 - 4 - 2 + 0 - 3 + 0", "x2": "idiv mul x_0_8 add INT+ 1 0 sub x_0_7 abs relu sub INT+ 8 mul sign x_0_1 n n", "tree": "((x_0_8 mul (10 add (x_0_7 sub abs(relu((8 sub (sign(x_0_1) mul n))))))) idiv n)", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 6 - 5 - 7 + 3 - 7 + 3 + 10 + 7 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 - 1", "x2": "idiv x_0_8 mul sqr idiv n INT- 1 sub n sign mod INT+ 3 INT- 1 0", "tree": "(x_0_8 idiv (((n idiv -1))**2 mul (n sub sign((3 mod -10)))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 5 - 5 - 10 - 7 - 10 - 10 - 7 - 10 - 10 - 7 - 10 - 10 - 7 - 10 - 10 - 7 - 10 - 10 - 7 - 10 - 10 - 7", "x2": "sub add mod sign sqr idiv INT+ 8 x_0_1 x_0_3 sign sqr x_0_5 INT+ 2", "tree": "(((sign(((8 idiv x_0_1))**2) mod x_0_3) add sign((x_0_5)**2)) sub 2)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 2 - 4 + 10 - 4 + 7 - 1 - 8 + 6 - 4 + 4 - 1 - 674 - 1252 - 662 - 724 - 1529 - 545 - 2456 - 1514 - 1284 - 1676 - 353 - 2882 - 2596 - 4462 - 4884 - 4121 - 1441", "x2": "sub x_0_11 mul INT+ 8 mul sub mod x_0_7 n sub sign relu n INT+ 1 n", "tree": "(x_0_11 sub (8 mul (((x_0_7 mod n) sub (sign(relu(n)) sub 1)) mul n)))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "- 5 + 40 - 320 + 2560 - 2 480 + 16 3840 - 131 720 + 1048 5760 - 8388 6080 + 6 7108 8640 - 53 6870 9120 + 429 4967 2960 - 3435 9738 3680 + 2 7487 7906 9440 - 21 9902 3255 5520 + 175 9218 6044 4160 - 1407 3748 8355 3280 + 1 1258 9990 6842 6240", "x2": "mul x_0_1 INT- 8", "tree": "(x_0_1 mul -8)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "mul n abs n", "tree": "(n mul abs(n))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 4 + 6 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 4 - 7 - 1566 - 1404 - 6570 - 1 6200 + 189 - 5760 - 1 4580 - 2 7000 - 4 2966 - 6 4800 - 8 9856 - 12 2724 - 16 785 - 20 5632 - 25 9947 - 32 760 - 38 7999", "x2": "mul sub mod x_0_2 n mul INT+ 1 mul INT+ 1 0 mul n mod INT- 7 n mul relu n INT+ 9", "tree": "(((x_0_2 mod n) sub (1 mul (10 mul (n mul (-7 mod n))))) mul (relu(n) mul 9))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 16 + 45 + 96 + 175 + 288 + 441 + 640 + 891 + 1200 + 1573 + 2016 + 2535 + 3136 + 3825 + 4608 + 5491", "x2": "mul add n add n sqr n n", "tree": "((n add (n add (n)**2)) mul n)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 - 6 - 12 - 54 - 192 - 1350 - 6912 - 6 6150 - 44 2368 - 535 8150 - 4423 6800 - 6 4833 6150 - 63 7009 9200 - 1095 6880 9350 - 1 2485 3944 3200 - 24 6529 8210 3750 - 319 6260 9745 9200 - 7124 7118 2798 3750 - 10 3558 8555 7678 800", "x2": "mul sqr sub n sign mul add INT- 1 n mod INT+ 6 INT+ 7 x_0_2", "tree": "(((n sub sign(((-1 add n) mul (6 mod 7)))))**2 mul x_0_2)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 + 3 + 9 + 0 + 2 + 3 + 1 + 2 + 3 + 2 + 3 + 3 + 3 + 4 + 4 + 4 + 5 + 5 + 5 + 6", "x2": "abs idiv add n x_0_3 sqr INT- 2", "tree": "abs(((n add x_0_3) idiv (-2)**2))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 - 10 - 3 - 5 + 4 + 3 + 9 - 6 + 3 - 7 - 32 - 36 - 37 - 38 - 46 - 45 - 42 - 50 - 77 - 83 - 86 - 89 - 99 - 100 - 99 - 109 - 138", "x2": "add sub mul INT- 2 n mod INT+ 6 sub INT+ 9 INT- 2 sub sign add x_0_10 INT- 9 abs x_0_8", "tree": "(((-2 mul n) sub (6 mod (9 sub -2))) add (sign((x_0_10 add -9)) sub abs(x_0_8)))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 16 + 64 + 144 + 256 + 400 + 576 + 784 + 1024 + 1296 + 1600 + 1936 + 2304 + 2704 + 3136 + 3600 + 4096 + 4624", "x2": "abs sqr sub n mul INT- 3 n", "tree": "abs(((n sub (-3 mul n)))**2)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 + 3 + 2 + 6 - 3 - 9 + 7 - 8 + 3 - 2 + 10 + 11 + 1 + 12 + 8 + 15 + 0 + 16 + 6 + 12 + 1 + 1 + 12 + 2 + 7 + 1 + 17", "x2": "mod sub sub INT- 1 0 n mod x_0_10 sub n sqr sub n n n", "tree": "(((-10 sub n) sub (x_0_10 mod (n sub ((n sub n))**2))) mod n)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 4 + 9 - 2 - 4 - 1 - 2 - 4 - 1 - 2 - 4 - 1 - 2 - 4 - 1 - 2 - 4 - 1 - 2 - 4 - 1", "x2": "mod x_0_3 sub x_0_3 sub n sub idiv add mod INT+ 1 INT- 2 n INT- 1 abs n", "tree": "(x_0_3 mod (x_0_3 sub (n sub ((((1 mod -2) add n) idiv -1) sub abs(n)))))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 - 4 + 0 + 5 - 10 + 5 - 4 - 4 + 2 - 2 - 2 - 4 - 2 - 2 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 2", "x2": "add sign sub abs mod n abs abs x_0_9 INT+ 2 INT- 3", "tree": "(sign((abs((n mod abs(abs(x_0_9)))) sub 2)) add -3)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 3 + 10 + 22 + 43 + 74 + 116 + 173 + 246 + 336 + 447 + 580 + 736 + 919 + 1130 + 1370 + 1643", "x2": "idiv mul add sign n sqr abs relu n n INT+ 3", "tree": "(((sign(n) add (abs(relu(n)))**2) mul n) idiv 3)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 4 + 2 - 7 + 13 + 10 + 9 + 1 + 22 + 20 + 20 + 13 + 35 + 34 + 35 + 29 + 52 + 52 + 54 + 49 + 73", "x2": "add x_0_4 relu n", "tree": "(x_0_4 add relu(n))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 5 + 8 - 1 - 7 + 0 + 12 + 42 + 8 + 0 + 20 + 99 + 96 + 0 + 84 + 135 + 0 + 0 + 216 + 38 + 0 + 0", "x2": "mul n mod sub x_0_4 relu n n", "tree": "(n mul ((x_0_4 sub relu(n)) mod n))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 - 7 - 10 - 3 - 1 - 3 - 1 - 9 - 12 - 11 - 14 - 7 - 5 - 7 - 5 - 13 - 16 - 15 - 18 - 11 - 9", "x2": "add INT- 4 sub abs x_0_4 n", "tree": "(-4 add (abs(x_0_4) sub n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 5 - 5 + 2 + 5 - 2 - 5 + 2 + 5 - 2 - 5 + 2 + 5 - 2 - 5 + 2 + 5 - 2 - 5 + 2 + 5", "x2": "sub mod x_0_3 INT- 1 x_0_2", "tree": "((x_0_3 mod -1) sub x_0_2)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 5 + 4 - 1 + 7 + 10 + 4 + 2 - 9 + 6 + 9 + 1 - 5 + 8 + 4 + 8 - 17 + 2 + 6 - 1 + 6 + 16", "x2": "sub abs x_0_5 idiv add sign n n abs x_0_5", "tree": "(abs(x_0_5) sub ((sign(n) add n) idiv abs(x_0_5)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 2 + 6 + 4 + 8 + 6 + 10 + 8 + 12 + 10 + 14 + 12 + 16 + 14 + 18 + 16 + 20", "x2": "sub abs n mod mul n n INT- 4", "tree": "(abs(n) sub ((n mul n) mod -4))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 4 + 15 - 40 + 25 - 120 + 35 - 240 + 45 - 400 + 55 - 600 + 65 - 840 + 75 - 1120 + 85 - 1440", "x2": "sub mul n sub INT+ 6 relu abs relu x_0_1 n", "tree": "((n mul (6 sub relu(abs(relu(x_0_1))))) sub n)", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 5 + 5 - 9 + 8 - 7 + 0 - 30 + 8 - 58 + 10 - 10 + 12 - 90 + 14 - 130 + 16 - 178 + 18 - 234 + 20 - 298 + 22", "x2": "mod n sub mul x_0_5 sub abs INT- 3 n relu add INT+ 1 0 relu n", "tree": "(n mod ((x_0_5 mul (abs(-3) sub n)) sub relu((10 add relu(n)))))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 7 + 1761 - 811 + 1283 - 1071 + 1157 - 1123 + 1143 - 1111 + 1193 - 987 + 1451 - 511 + 2253 + 749 + 4127 + 3417 + 7793", "x2": "sub sub sub sqr sub sqr add INT- 8 n INT- 6 n x_0_1 abs INT+ 8", "tree": "(((((((-8 add n))**2 sub -6))**2 sub n) sub x_0_1) sub abs(8))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 15 - 8 - 5 - 8 - 4 - 3 - 15 - 8 - 5 - 4 - 3 - 3 - 3 - 2 - 2 - 2 - 2", "x2": "add sub n n idiv add INT- 9 INT- 6 sub n mod INT+ 6 n", "tree": "((n sub n) add ((-9 add -6) idiv (n sub (6 mod n))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 5 - 9 - 10 - 7 - 7 - 6 - 2 - 6 - 6 + 1 - 3 - 2 + 9 + 1 + 2 + 20 + 8 + 10 + 39 + 19 + 22 + 69 + 37", "x2": "add sub relu sign n INT- 9 add x_0_6 x_0_3", "tree": "((relu(sign(n)) sub -9) add (x_0_6 add x_0_3))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 - 2 + 8 - 3 + 5 - 9 + 1 + 5 - 5 + 25 + 4 + 64 + 9 + 25 + 81 + 1 + 25 + 25 + 625 + 16 + 4096 + 81 + 625 + 6561 + 1 + 625", "x2": "sqr x_0_9", "tree": "(x_0_9)**2", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 8 - 9 - 1 - 5 - 1 - 3 + 0 - 8 - 2 - 3 - 7 + 40 + 0 + 18 + 0 + 16 + 2 + 21 + 21 - 80 + 0 + 702 + 0 + 272 - 2 + 357 + 21", "x2": "mul x_0_8 add sign idiv x_0_2 x_0_4 x_0_10", "tree": "(x_0_8 mul (sign((x_0_2 idiv x_0_4)) add x_0_10))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 7 + 5 - 2 + 6 - 10 - 6 + 2 + 10 + 7 - 4 + 4 - 3 + 14 + 11 + 4 - 3 + 1 + 13 + 6 + 14 - 2 + 2 + 10 + 18 + 15", "x2": "sub add add n mod INT+ 4 INT- 8 INT- 5 x_0_8", "tree": "(((n add (4 mod -8)) add -5) sub x_0_8)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 7 - 7 + 1 - 4 + 3 + 4 + 7 - 7 + 1 - 4 + 3 + 4 + 7 - 7 + 1 - 4 + 3 + 4 + 7 - 7 + 1 - 4 + 3", "x2": "add x_0_6 idiv sub INT- 2 INT- 2 n", "tree": "(x_0_6 add ((-2 sub -2) idiv n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 8 - 1 - 1 - 8 - 8 + 4 + 4 + 2 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign mod idiv abs n relu mul sign n idiv INT- 4 x_0_8 n", "tree": "sign(((abs(n) idiv relu((sign(n) mul (-4 idiv x_0_8)))) mod n))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 6 + 2 - 2 - 8 + 0 + 2 + 8 + 54 + 20 + 22 + 96 + 0 + 28 + 120 + 864 + 340 + 396 + 1824 + 0 + 588 + 2640 + 1 9872 + 8160", "x2": "mul abs add x_0_7 sub n n n", "tree": "(abs((x_0_7 add (n sub n))) mul n)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 7 + 7 - 10 + 8 + 1 - 4 - 2 - 16 - 16 + 1 - 17 - 10 - 5 - 7 + 7 + 7 - 10 + 8 + 1 - 4 - 2 - 16 - 16 + 1", "x2": "sub INT- 6 add x_0_7 sub INT+ 4 sign INT+ 7", "tree": "(-6 sub (x_0_7 add (4 sub sign(7))))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 6 + 5 + 2 - 3 - 10 - 19 - 30 - 43 - 58 - 75 - 94 - 115 - 138 - 163 - 190 - 219 - 250 - 283", "x2": "add sub sub x_0_1 add abs INT+ 5 n n INT+ 8", "tree": "(((x_0_1 sub (abs(5) add n)) sub n) add 8)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 2 - 1 + 2 + 1 + 6 - 2 + 10 - 7 + 3 + 4 + 4 + 1 + 4 + 1 + 36 + 4 + 100 + 49 + 9 + 16 + 16 + 1 + 16 + 1 + 1296 + 16 + 1 0", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 3 - 1 + 7 + 6 + 1 + 2 + 9 - 10 + 3 + 9 + 8 + 2 + 9 + 9 + 11 + 13 + 7 + 8 + 12 + 9 + 9 + 13 + 10 + 10 + 10 + 9", "x2": "add idiv x_0_9 x_0_10 mod INT+ 9 n", "tree": "((x_0_9 idiv x_0_10) add (9 mod n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 + 8 + 3 + 4 + 2 + 5 + 1 - 8 + 12 + 22 + 18 + 20 + 19 + 23 + 20 + 12 + 33 + 44 + 41 + 44 + 44 + 49 + 47 + 40 + 62", "x2": "add add relu add n INT- 9 add INT+ 9 sqr idiv add INT+ 8 INT- 2 INT+ 3 x_0_8", "tree": "((relu((n add -9)) add (9 add (((8 add -2) idiv 3))**2)) add x_0_8)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "- 3 + 6 - 13 - 5 - 25 - 18 - 39 - 33 - 55 - 50 - 73 - 69 - 93 - 90 - 115 - 113 - 139 - 138 - 165", "x2": "add x_0_2 sub add idiv idiv x_0_1 mul x_0_1 n sign idiv n INT- 1 0 INT- 7 n", "tree": "(x_0_2 add ((((x_0_1 idiv (x_0_1 mul n)) idiv sign((n idiv -10))) add -7) sub n))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 + 0 + 8 - 2 + 6 - 4 + 4 - 6 + 2 - 8 + 0 - 10 - 2 - 12 - 4 - 14 - 6 - 16", "x2": "add mod relu n INT- 1 add x_0_2 INT- 2", "tree": "((relu(n) mod -1) add (x_0_2 add -2))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 + 6 + 3 - 2 + 4 + 7 - 5 + 6 + 13 + 17 + 6 + 18 + 26 + 31 + 21 + 34 + 43 + 49 + 40 + 54 + 64 + 71 + 63 + 78", "x2": "add n sub x_0_4 mul mod n idiv abs x_0_3 x_0_3 x_0_7", "tree": "(n add (x_0_4 sub ((n mod (abs(x_0_3) idiv x_0_3)) mul x_0_7)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 10 - 3 + 3 + 8 + 3 + 7 + 0 - 2 - 3 - 5 - 4 - 5 - 4 - 3 - 3 - 3 - 4 - 4 - 4 - 5 - 5 - 5 - 5", "x2": "idiv add x_0_6 n INT- 4", "tree": "((x_0_6 add n) idiv -4)", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 1 + 1 + 1 + 3 + 1 + 3 + 1 + 1 + 3 + 7 + 1 + 8 + 3 + 13 + 9 + 5 + 1", "x2": "mod add mul INT+ 9 sub abs INT- 9 sign x_0_1 sqr INT+ 1 n", "tree": "(((9 mul (abs(-9) sub sign(x_0_1))) add (1)**2) mod n)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 10 - 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0 + 3 + 1 + 0", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 1 + 1 + 2 + 0 + 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6", "x2": "idiv sub mod INT+ 4 n n INT- 2", "tree": "(((4 mod n) sub n) idiv -2)", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 7 - 4 + 4 + 9 - 1 + 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "mul idiv relu relu n n sign idiv mod n INT- 8 x_0_5", "tree": "((relu(relu(n)) idiv n) mul sign(((n mod -8) idiv x_0_5)))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 30 + 66 + 116 + 180 + 258 + 350 + 456 + 576 + 710 + 858 + 1020 + 1196 + 1386 + 1590 + 1808 + 2040", "x2": "add n abs abs mul relu sqr n INT- 7", "tree": "(n add abs(abs((relu((n)**2) mul -7))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 20 + 45 + 80 + 150 + 252 + 392 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913", "x2": "mul mul n add idiv INT+ 7 n n add n mod mod n n INT- 7", "tree": "((n mul ((7 idiv n) add n)) mul (n add ((n mod n) mod -7)))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 9 - 7 - 3 + 0 + 1 + 8 + 2 5540 + 3 2301 - 1 7744 - 4067 + 1 692 + 1 8613 + 7 960 + 2 689 641 + 2 9770 4932 - 1 8458 7239 - 4741 3584 + 1 3897 9849 + 2 6805 6676 + 11 2659 3441 + 3 6048 6256 4416 + 5 6694 9276 3937 - 3 8276 94 5532", "x2": "add mul add mod INT+ 2 n x_0_7 sqr mul idiv n idiv INT- 2 n INT+ 6 sqr add n INT+ 6", "tree": "((((2 mod n) add x_0_7) mul (((n idiv (-2 idiv n)) mul 6))**2) add ((n add 6))**2)", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "- 4 + 0 - 5 + 0 - 3 + 3 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1", "x2": "sign mul x_0_4 sub mul mod x_0_1 sub INT- 6 n sub mul n x_0_6 INT- 6 n", "tree": "sign((x_0_4 mul (((x_0_1 mod (-6 sub n)) mul ((n mul x_0_6) sub -6)) sub n)))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 1 + 5 - 3 - 4 - 3 - 3 - 4 - 3 - 3 - 4 - 3 - 3 - 4 - 4 - 3 - 3 - 4 - 3 - 3", "x2": "idiv n idiv add n n sub INT- 1 0 x_0_2", "tree": "(n idiv ((n add n) idiv (-10 sub x_0_2)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 6 + 12 + 24 + 48 + 96 + 192 + 384 + 768 + 1536 + 3072 + 6144 + 1 2288 + 2 4576 + 4 9152 + 9 8304 + 19 6608 + 39 3216", "x2": "add x_0_1 x_0_1", "tree": "(x_0_1 add x_0_1)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 1 - 4 - 4 - 7 + 9 + 5 - 3 - 9 - 8 - 1 - 2 + 136 - 5 + 5 + 13 + 8 + 172 + 113 + 18 - 11 + 17 + 5 + 13 + 8 - 10 + 5 + 18 + 250", "x2": "mod x_0_8 add mul n relu x_0_12 mul sign sub sub n x_0_8 INT+ 8 n", "tree": "(x_0_8 mod ((n mul relu(x_0_12)) add (sign(((n sub x_0_8) sub 8)) mul n)))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 1 - 8 - 8 - 6 + 0 + 55 + 71 + 80 + 87 + 90 + 154 + 179 + 197 + 213 + 225 + 298 + 332 + 359 + 384 + 405 + 487 + 530", "x2": "add sub n mul idiv n n mul INT- 8 n abs x_0_5", "tree": "((n sub ((n idiv n) mul (-8 mul n))) add abs(x_0_5))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 8 - 8 - 8 - 5 - 6 - 3 - 2 - 5 - 6 - 3 - 2 - 5 - 6 - 3 - 2 - 5 - 6 - 3", "x2": "sub n sub abs sub mod sub n x_0_2 n add n INT+ 8 relu x_0_1", "tree": "(n sub (abs((((n sub x_0_2) mod n) sub (n add 8))) sub relu(x_0_1)))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 6 - 10 + 0 + 8 + 1 - 12 + 36 + 60 + 0 - 48 - 6 + 72 - 216 - 360 + 0 + 288 + 36 - 432 + 1296 + 2160 + 0 - 1728", "x2": "mul x_0_6 INT- 6", "tree": "(x_0_6 mul -6)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 1 - 4 - 10 + 0 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul INT+ 8 x_0_5", "tree": "sign((8 mul x_0_5))", "n_input_points": "17", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 1 + 1 + 9 + 7 - 4 - 4 + 0 + 2 + 10 + 8 + 0 + 0 + 1 + 3 + 11 + 9 + 1 + 1 + 2 + 4 + 12 + 10 + 2", "x2": "relu add x_0_6 sign abs mul n mod INT+ 1 0 n", "tree": "relu((x_0_6 add sign(abs((n mul (10 mod n))))))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 121 + 225 + 441 + 841 + 1521 + 2601 + 4225 + 6561 + 9801 + 1 4161 + 1 9881 + 2 7225 + 3 6481 + 4 7961 + 6 2001 + 7 8961 + 9 9225", "x2": "relu sqr add mul n n sub n INT- 9", "tree": "relu((((n mul n) add (n sub -9)))**2)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 9 + 5 + 10 + 8 - 9 + 8 + 320 + 405 + 505 + 610 + 725 + 850 + 985 + 1125 + 1280 + 1445 + 1620 + 1805 + 2000 + 2205 + 2420 + 2645 + 2880", "x2": "mul sub idiv mod x_0_7 n sub sub x_0_7 n n sqr n INT- 5", "tree": "((((x_0_7 mod n) idiv ((x_0_7 sub n) sub n)) sub (n)**2) mul -5)", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 5 - 3 + 0 - 1 - 4 - 10 + 1 + 5 + 8 - 5 + 30 + 18 + 0 + 6 + 24 + 60 - 6 - 30 - 48 + 30 - 180 - 108 + 0 - 36 - 144 - 360 + 36", "x2": "mul x_0_10 INT- 6", "tree": "(x_0_10 mul -6)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 3 + 5 - 5 - 4 + 0 - 10 - 9 + 23 + 33 + 6 + 6 + 6 + 6 + 6 + 17 + 59 + 31 + 6 + 6 + 6 + 15 + 26 + 70 + 64", "x2": "abs add INT+ 6 relu sub add x_0_8 add sub abs INT- 2 add x_0_3 relu x_0_2 x_0_7 INT- 7", "tree": "abs((6 add relu(((x_0_8 add ((abs(-2) sub (x_0_3 add relu(x_0_2))) add x_0_7)) sub -7))))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 0 + 5 - 2 - 8 - 4 - 6 + 9 + 9 + 14 + 7 + 1 + 5 + 3 + 18 + 18 + 23 + 16 + 10 + 14 + 12 + 27 + 27 + 32", "x2": "add INT+ 9 x_0_7", "tree": "(9 add x_0_7)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 8 - 7 + 6 - 5 - 9 - 8 + 5 - 6 - 10 - 9 + 4 - 7 - 11 - 10 + 3 - 8 - 12 - 11 + 2 - 9 - 13", "x2": "add x_0_4 idiv idiv INT- 4 relu n relu sub abs n x_0_1", "tree": "(x_0_4 add ((-4 idiv relu(n)) idiv relu((abs(n) sub x_0_1))))", "n_input_points": "17", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 7 - 2 - 7 - 6 + 8 + 10 + 9 - 6 - 1 - 1 + 8 + 2 + 7 + 5 - 7 - 9 - 8 + 6 + 1 + 1 - 7 - 1 - 6 - 4 + 7 + 9", "x2": "idiv sub sub sub n x_0_9 INT- 1 mod mul mod INT+ 9 mod INT+ 4 INT+ 1 0 sub x_0_7 x_0_10 mul x_0_10 n n", "tree": "((((n sub x_0_9) sub -1) sub (((9 mod (4 mod 10)) mul (x_0_7 sub x_0_10)) mod (x_0_10 mul n))) idiv n)", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 64 + 0 + 64 + 256 + 576 + 1024 + 1600 + 2304 + 3136 + 4096 + 5184 + 6400 + 7744 + 9216 + 1 816 + 1 2544", "x2": "abs sqr mul mod INT- 3 n INT+ 8", "tree": "abs((((-3 mod n) mul 8))**2)", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 18 + 54 + 216 + 1080 + 6480 + 4 5360 + 36 2880 + 326 5920 + 3265 9200 + 3 5925 1200 + 43 1101 4400 + 560 4318 7200 + 7846 462 800 + 11 7690 6931 2000 + 188 3051 899 2000 + 3201 1868 5286 4000 + 5 7621 3633 5155 2000", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 + 1 + 9 - 4 + 7 + 1 + 5 + 9 + 8 + 11 + 20 + 8 + 20 + 15 + 20 + 25 + 25 + 29 + 39 + 28 + 41 + 37 + 43 + 49 + 50", "x2": "add x_0_8 n", "tree": "(x_0_8 add n)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "mul relu n relu n", "tree": "(relu(n) mul relu(n))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 + 1 + 2 - 3 + 10 + 11 + 0 + 0 + 41 + 0 + 0 + 4 + 45 + 0 + 4 + 8 + 0 + 0 + 8 + 0 + 0 + 4", "x2": "relu sub x_0_4 sub mul abs n x_0_5 INT+ 4", "tree": "relu((x_0_4 sub ((abs(n) mul x_0_5) sub 4)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 5 + 1 + 8 - 10 + 2 + 5 + 4 - 2 - 6 + 6 + 5 + 1 + 8 + 10 + 2 + 5 + 4 + 2 + 6 + 6 + 5 + 1 + 8 + 10 + 2 + 5", "x2": "abs x_0_10", "tree": "abs(x_0_10)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 3 - 9 - 7 - 2 - 5 - 5 - 4 - 5 - 4 - 2 - 6 - 5 - 2 - 6 - 6 - 5 - 6 - 5", "x2": "add sub sqr idiv mod x_0_1 n n mod mod n add n n x_0_2 INT- 6", "tree": "(((((x_0_1 mod n) idiv n))**2 sub ((n mod (n add n)) mod x_0_2)) add -6)", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 8 + 3 + 0 + 5 + 0 + 7 + 0 + 9 + 0 + 11 + 0 + 13 + 0 + 15 + 0 + 17 + 0 + 19", "x2": "mod n add n sqr idiv relu mul relu x_0_2 add relu n x_0_2 n", "tree": "(n mod (n add ((relu((relu(x_0_2) mul (relu(n) add x_0_2))) idiv n))**2))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 8 + 9 + 86 + 87 + 87 + 11 + 11 + 12 + 89 + 90 + 90 + 14 + 14 + 15 + 92 + 93 + 93 + 17 + 17", "x2": "add relu sub sub x_0_1 n sqr x_0_1 add sub mul INT+ 9 INT+ 1 0 abs x_0_3 n", "tree": "(relu(((x_0_1 sub n) sub (x_0_1)**2)) add (((9 mul 10) sub abs(x_0_3)) add n))", "n_input_points": "17", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 7 + 26 + 40 + 58 + 80 + 106 + 136 + 170 + 208 + 250 + 296 + 346 + 400 + 458 + 520 + 586 + 656 + 730", "x2": "sub INT+ 7 sub idiv INT- 7 abs relu sqr x_0_2 mul INT+ 2 sqr n", "tree": "(7 sub ((-7 idiv abs(relu((x_0_2)**2))) sub (2 mul (n)**2)))", "n_input_points": "17", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 11 + 12 + 13 + 14 + 10 + 11 + 12 + 13 + 14 + 10 + 11 + 12 + 13 + 14 + 10 + 11 + 12", "x2": "add relu mod n abs INT+ 5 relu INT+ 1 0", "tree": "(relu((n mod abs(5))) add relu(10))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 4 - 5 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign idiv x_0_3 add INT- 6 INT+ 5", "tree": "sign((x_0_3 idiv (-6 add 5)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 6 + 5 + 7 + 6 + 5 + 7 + 6 + 5 + 7 + 6 + 5 + 7 + 6 + 5 + 7 + 6 + 5 + 7 + 6", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 + 1 - 4 + 10 - 10 - 2 + 4 - 1 - 10 - 738 - 18 - 685 - 178 - 298 - 234 - 51 4098 - 34 - 195 7210 - 2 9250 - 91 5858 - 14 8234 - 2645 7443 9433 - 5 7130 - 6 1072 1495 3293 - 8 5573 8018", "x2": "sub INT- 9 sqr add add INT+ 6 x_0_8 add x_0_6 n", "tree": "(-9 sub (((6 add x_0_8) add (x_0_6 add n)))**2)", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 2 - 6 - 4 + 1 + 1 + 5 + 4 - 7 + 0 - 20 - 66 - 48 + 13 + 14 + 75 + 64 - 119 + 0 - 380 - 1320 - 1008 + 286 + 322 + 1800 + 1600 - 3094", "x2": "mul n x_0_9", "tree": "(n mul x_0_9)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 9 + 0 - 8 - 9 - 4 - 7 - 8 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 8 + 9 + 7 + 8 + 6 + 7 + 5 + 6 + 4", "x2": "add abs x_0_2 sign sub INT+ 1 x_0_8", "tree": "(abs(x_0_2) add sign((1 sub x_0_8)))", "n_input_points": "17", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 9 - 2 - 5 + 0 + 0 + 7 + 4 + 0 + 0 + 7 + 4 + 0 + 0 + 7 + 4 + 0 + 0 + 7 + 4 + 0 + 0", "x2": "mul mod x_0_4 INT+ 9 abs idiv INT- 7 sqr n", "tree": "((x_0_4 mod 9) mul abs((-7 idiv (n)**2)))", "n_input_points": "17", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 1", "x2": "add sign n mod x_0_1 INT+ 8", "tree": "(sign(n) add (x_0_1 mod 8))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 6 - 8 - 2 - 16 - 10 - 24 - 18 - 32 - 26 - 40 - 34 - 48 - 42 - 56 - 50 - 64 - 58 - 72", "x2": "sub x_0_2 INT+ 8", "tree": "(x_0_2 sub 8)", "n_input_points": "17", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 + 15 + 60 + 300 + 1800 + 1 2600 + 10 800 + 90 7200 + 907 2000 + 9979 2000 + 11 9750 4000 + 155 6755 2000 + 2179 4572 8000 + 3 2691 8592 0 + 52 3069 7472 0 + 889 2185 7024 0 + 1 6005 9342 6432 0 + 30 4112 7510 2208 0", "x2": "abs add x_0_1 mul x_0_1 n", "tree": "abs((x_0_1 add (x_0_1 mul n)))", "n_input_points": "17", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 2 + 0 + 0 + 16 + 30 + 120 + 154 + 448 + 2232 + 8040 + 2 8886 + 11 3568 + 69 8698 + 48 1824 + 1445 4780 + 1540 5504 + 3232 4106 + 5447 304 + 8 4155 4878", "x2": "mul add n n mod add x_0_1 abs INT+ 2 add x_0_2 n", "tree": "((n add n) mul ((x_0_1 add abs(2)) mod (x_0_2 add n)))", "n_input_points": "17", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 4 - 4 + 6 + 6 + 7 + 12 + 12 + 10 + 14 + 19 + 22 + 20 + 24 + 29 + 34 + 37 + 37 + 47 + 51", "x2": "sub mod mod INT- 6 mul INT+ 9 abs add add INT+ 7 add x_0_1 n x_0_3 INT+ 7 idiv sqr n INT- 9", "tree": "(((-6 mod (9 mul abs(((7 add (x_0_1 add n)) add x_0_3)))) mod 7) sub ((n)**2 idiv -9))", "n_input_points": "17", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 9 + 8 - 9 - 2 + 4 + 8 + 9 + 2 + 153 + 3 + 7 + 4 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 5 + 6 + 6 + 6 + 7 + 7 + 7", "x2": "idiv add add mod x_0_8 abs idiv sqr mod x_0_5 mul n x_0_7 INT+ 4 n n INT+ 1 0", "tree": "((((x_0_8 mod abs((((x_0_5 mod (n mul x_0_7)))**2 idiv 4))) add n) add n) idiv 10)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 + 0 - 9 + 3 - 8 + 6 + 0 + 1 - 5 + 3 - 3 - 2 + 6 + 0 - 6 + 2 + 3 - 3 + 5 + 6 + 0 - 6 + 2 - 4 - 3 + 5 + 6 + 0 + 1 + 2 - 4 - 3", "x2": "mod add sub n n n mul sign sub sign x_0_3 x_0_5 INT+ 7", "tree": "(((n sub n) add n) mod (sign((sign(x_0_3) sub x_0_5)) mul 7))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 5 - 7 - 2 - 8 + 8 + 8 + 7 - 8 - 2 + 4 + 13 + 1 + 6 + 1 + 0 + 6 + 11 + 5 + 1 + 10 + 14 + 1 + 12 + 12 + 5 + 7 + 21 + 19 + 2 + 22 + 26 + 6 + 19 + 33 + 24 + 9 + 43", "x2": "abs add x_0_7 x_0_10", "tree": "abs((x_0_7 add x_0_10))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 2 + 8 - 10 - 8 + 5044 + 4227 + 6897 + 1 599 + 1 5617 + 2 7245 + 3 4852 + 4 8106 + 6 4888 + 8 5842 + 11 6646 + 14 7077 + 18 7235 + 23 5457 + 29 2867 + 36 5647 + 44 4102 + 53 8884 + 64 8906 + 77 5892 + 92 6648 + 109 2127 + 128 3653 + 150 835 + 174 6117 + 202 7049 + 233 5352", "x2": "add sqr sub n mul add n INT+ 5 sub n sign mul x_0_1 n x_0_5", "tree": "(((n sub ((n add 5) mul (n sub sign((x_0_1 mul n))))))**2 add x_0_5)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 6 + 9 + 0 - 6 + 7 + 4 - 56 + 54 - 90 + 0 + 72 - 91 - 56 + 840 - 864 + 1530 + 0 - 1368 + 1820 + 1176 - 1 8480 + 1 9872 - 3 6720 + 0 + 3 5568 - 4 9140 - 3 2928 + 53 5920 - 59 6160 + 113 8320 + 0 - 117 3744 + 167 760", "x2": "mul n sub mod n n x_0_7", "tree": "(n mul ((n mod n) sub x_0_7))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 6 - 3 - 8 - 6 + 25 - 36 + 49 - 64 - 81 + 100 + 121 - 144 + 169 + 196 + 225 - 256 - 289 - 324 - 361 + 400 - 441 + 484 - 529 - 576 + 625 + 676 - 729 + 784 + 841 + 900 - 961", "x2": "mul sign idiv x_0_4 x_0_1 sqr n", "tree": "(sign((x_0_4 idiv x_0_1)) mul (n)**2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 1 + 2 - 6 + 9 + 0 - 5 + 7 + 6 - 14 + 7 + 11 - 21 + 1 + 25 - 28 - 10 + 46 - 29 - 35 + 74 - 19 - 81 + 103 + 16 - 155 + 122 + 97 - 258 + 106 + 252 - 380", "x2": "sub x_0_3 x_0_5", "tree": "(x_0_3 sub x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 256 + 2916 + 1 6384 + 6 2500 + 18 6624 + 47 596 + 104 8576 + 212 5764 + 400 0 + 708 6244 + 1194 3936 + 1930 7236 + 3011 8144 + 4556 2500 + 6710 8864 + 9655 276 + 1 3604 8896 + 1 8818 3524 + 2 5600 0 + 3 4306 4484 + 4 5351 9616 + 5 9214 3556 + 7 6441 1904 + 9 7656 2500 + 12 3566 3104 + 15 4968 1956", "x2": "abs sqr mul add n n sqr n", "tree": "abs((((n add n) mul (n)**2))**2)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 6 + 21 + 88 + 445 + 2676 + 1 8739 + 14 9920 + 134 9289 + 1349 2900 + 1 4842 1911 + 17 8106 2944 + 231 5381 8285 + 3241 5345 6004 + 4 8623 184 75 + 77 7968 2944 1216 + 1322 5461 50 689 + 2 3805 8298 901 2420 + 45 2310 7663 7123 5999 + 904 6215 3274 2472 0 + 1 8997 521 8759 1912 21 + 41 7935 1481 2702 2064 484 + 961 2508 4069 2150 7473 1155 + 2 3070 201 7661 1617 9354 7744 + 57 6750 5044 1529 448 3869 3625 + 1499 5513 1147 9755 1658 603 4276 + 4 487 8854 995 3389 4767 6292 5479 + 113 3660 7914 7869 4905 3493 6191 3440", "x2": "add n add mul n x_0_1 sqr sub n n", "tree": "(n add ((n mul x_0_1) add ((n sub n))**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 5 - 4 - 9 - 3 - 5 - 10 - 2 - 6 - 11 - 1 - 7 - 12 + 0 - 8 - 13 + 1 - 9 - 14 + 2 - 10 - 13 + 3 - 11 - 12 + 4 - 12 - 11 + 5 - 13 - 10 + 6", "x2": "sub x_0_3 sign add INT+ 8 x_0_4", "tree": "(x_0_3 sub sign((8 add x_0_4)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "idiv sqr n sign n", "tree": "((n)**2 idiv sign(n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 8 + 8 - 4 + 0 + 5 + 4 + 1 + 3 + 8 + 7 + 4 + 6 + 11 + 10 + 7 + 9 + 14 + 13 + 10 + 12 + 17 + 16 + 13 + 15 + 20 + 19 + 16 + 18 + 23 + 22", "x2": "mod abs add INT+ 3 x_0_4 n", "tree": "(abs((3 add x_0_4)) mod n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 3 + 2 + 7 + 6 + 3 - 5 + 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign add mul INT- 5 x_0_8 mul x_0_4 sub sign n sub n x_0_8", "tree": "sign(((-5 mul x_0_8) add (x_0_4 mul (sign(n) sub (n sub x_0_8)))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 9801 + 9604 + 9409 + 9216 + 9025 + 8836 + 8649 + 8464 + 8281 + 8100 + 7921 + 7744 + 7569 + 7396 + 7225 + 7056 + 6889 + 6724 + 6561 + 6400 + 6241 + 6084 + 5929 + 5776 + 5625 + 5476 + 5329", "x2": "abs relu sqr sub n sqr INT- 1 0", "tree": "abs(relu(((n sub (-10)**2))**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 + 5 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728 + 783", "x2": "add add sub n n mul n n sign sub n x_0_1", "tree": "(((n sub n) add (n mul n)) add sign((n sub x_0_1)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 - 5 - 3 + 7 - 5 - 5 - 7 + 10 - 6 + 7 + 18 + 30 + 43 + 29 + 44 + 60 + 77 + 59 + 78 + 58 + 37 + 15 - 8 - 32 - 57 - 83 - 110 - 138 - 167 - 197 - 228 - 260 - 227 - 193 - 158 - 122 - 85", "x2": "sub x_0_1 mul n sign x_0_10", "tree": "(x_0_1 sub (n mul sign(x_0_10)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 2 + 4 - 4 - 5 + 9 - 7 - 9 + 19 - 6 - 8 + 20 - 5 - 7 + 21 - 4 - 6 + 22 - 3 - 5 + 23 - 2 - 4 + 24 - 1 - 3 + 25 + 0 - 2 + 26 + 1", "x2": "add mul x_0_3 idiv add INT+ 8 n n sign n", "tree": "((x_0_3 mul ((8 add n) idiv n)) add sign(n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 + 2 164 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr mod relu relu n mul abs abs sqr INT- 4 mul INT+ 1 x_0_1", "tree": "((relu(relu(n)) mod (abs(abs((-4)**2)) mul (1 mul x_0_1))))**2", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 7 + 6 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0 - 2 - 2", "x2": "sub sign idiv INT- 7 mul n INT+ 9 sign x_0_3", "tree": "(sign((-7 idiv (n mul 9))) sub sign(x_0_3))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 + 10 - 8 - 8 + 3 + 2 + 0 + 16 + 9 + 16 + 9 + 16 + 1 + 9 + 4 + 9 + 0 + 0 + 1 + 0 + 16 + 9 + 9 + 4 + 1 + 9 + 4 + 16 + 1 + 16 + 9 + 0 + 4", "x2": "sqr mod sub n sub idiv x_0_6 INT+ 5 x_0_1 INT- 5", "tree": "(((n sub ((x_0_6 idiv 5) sub x_0_1)) mod -5))**2", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 7 + 7 + 4 + 9 + 10 + 23 + 33 + 45 + 59 + 75 + 93 + 113 + 135 + 159 + 185 + 213 + 243 + 275 + 309 + 345 + 383 + 423 + 465 + 509 + 555 + 603 + 653 + 705", "x2": "add n sqr sub mod add idiv INT- 4 INT+ 8 idiv n x_0_2 n INT+ 2", "tree": "(n add (((((-4 idiv 8) add (n idiv x_0_2)) mod n) sub 2))**2)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 3 + 3 + 3 + 4 - 1 + 3 + 8 + 3 + 3 + 3 + 4 + 1 + 3 + 8 + 3 + 3 + 3 + 4 + 1 + 3 + 8 + 3 + 3 + 3 + 4 + 1 + 3 + 8 + 3 + 3 + 3 + 4 + 1", "x2": "abs x_0_7", "tree": "abs(x_0_7)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 2 - 8 - 5 - 33 - 26 - 199 - 183 - 1593 - 1648 - 1 5931 - 1 8129 - 19 1173 - 23 5678 - 267 6423 - 353 5171 - 4282 2769 - 6009 7908 - 7 7080 9843 - 11 4186 253 - 154 1619 6861 - 239 7906 5314 - 3391 5633 943 - 5515 1850 2223 - 8 1397 5194 2633 - 13 7879 6255 5576 - 211 6335 5050 8459 - 372 2749 8900 553 - 5925 7394 1423 6853 - 1 795 9746 8101 6038", "x2": "sub mod mod add INT+ 6 relu x_0_1 sqr x_0_2 INT+ 6 sub sub INT+ 2 INT+ 1 mul x_0_2 n", "tree": "((((6 add relu(x_0_1)) mod (x_0_2)**2) mod 6) sub ((2 sub 1) sub (x_0_2 mul n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 + 4 - 10 - 504 + 1980 + 12 7368 - 56 952 - 4289 688 + 2 516 1984 + 180 4774 6080 - 919 5405 1200 - 9 1108 3568 7168 + 48 7991 8776 960 + 5364 8955 2435 5584 - 2 9923 5130 7755 9680 - 360 9894 5143 9200 4608 + 2081 8168 9938 9334 1952 + 27 3231 1992 2927 3192 9088 - 162 137 882 4861 9835 2384 - 2 2976 4025 3805 1620 2146 8160 + 13 9453 3780 7323 9427 2373 7600 + 2125 1581 7547 2457 8860 1909 4528 - 1 3154 1219 6684 9816 3121 6791 5520 - 214 4167 5695 2049 2196 8594 6549 8624 + 1349 3054 3388 7143 8444 8734 4711 6800 + 23 4348 3028 9432 605 315 2345 1931 8528 - 149 5376 8474 178 9146 595 2556 1967 4112 - 2 7582 287 5166 1407 1682 9454 5338 3421 1328 + 17 8059 2395 4317 6739 4625 170 5384 164 4544 + 3478 273 103 4660 5236 6801 9858 6426 4761 3440", "x2": "mul add mul x_0_2 add INT+ 2 INT+ 5 x_0_3 mul INT- 6 n", "tree": "(((x_0_2 mul (2 add 5)) add x_0_3) mul (-6 mul n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 - 1 - 4 - 6 + 8 + 3 - 3 + 17 + 13 + 9 + 30 + 35 + 27 + 46 + 70 + 59 + 75 + 121 + 116 + 126 + 192 + 212 + 212 + 295 + 363 + 359 + 453 + 588 + 605 + 701 + 920 + 1006 + 1099 + 1413", "x2": "abs add idiv add n n INT+ 1 0 add relu x_0_7 abs add x_0_3 n", "tree": "abs((((n add n) idiv 10) add (relu(x_0_7) add abs((x_0_3 add n)))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 9 - 1 + 1 - 9 + 3 + 0 - 9 + 8 + 6 + 8 + 0 + 2 + 8 + 4 + 1 + 8 + 9 + 7 + 9 + 1 + 3 + 9 + 5 + 2 + 9 + 10 + 8 + 10 + 2 + 4 + 10 + 6 + 3 + 10 + 11 + 9", "x2": "mod abs add x_0_9 abs sign idiv INT+ 9 x_0_5 sqr n", "tree": "(abs((x_0_9 add abs(sign((9 idiv x_0_5))))) mod (n)**2)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "- 2 + 9 + 5 - 25 + 5 + 9 - 2 + 9 + 5 - 25 + 5 + 9 - 2 + 9 + 5 - 25 + 5 + 9 - 2 + 9 + 5 - 25 + 5 + 9 - 2 + 9 + 5 - 25 + 5 + 9", "x2": "idiv sqr INT- 7 x_0_3", "tree": "((-7)**2 idiv x_0_3)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 10 + 2 - 2 - 4 - 4 - 2 + 2 + 8 + 16 + 26 + 38 + 52 + 68 + 86 + 106 + 128 + 152 + 178 + 206 + 236 + 268 + 302 + 338 + 376 + 416 + 458 + 502 + 548", "x2": "sub sqr sub INT+ 2 sub mul INT+ 6 abs sign x_0_1 n n", "tree": "(((2 sub ((6 mul abs(sign(x_0_1))) sub n)))**2 sub n)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 10 - 6 + 13 + 10 - 8 - 4 + 15 + 12 - 6 - 2 + 17 + 14 - 4 + 0 + 19 + 16 - 2 + 2 + 21 + 18 + 0 + 4 + 23 + 20 + 2 + 6 + 25 + 22 + 4", "x2": "idiv sub relu n x_0_2 sign n", "tree": "((relu(n) sub x_0_2) idiv sign(n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 7 + 5 - 3 - 2 - 2 - 8 - 7 - 7 + 14 + 31 + 33 - 2 - 1 - 1 - 11 - 9 - 9 + 9 + 16 + 17 - 4 - 3 - 3 - 30 - 21 - 21 + 2 + 4 + 4", "x2": "idiv sub sub INT- 9 n n sub x_0_3 INT- 6", "tree": "(((-9 sub n) sub n) idiv (x_0_3 sub -6))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 7 + 0 - 2 + 6 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign mul n idiv INT+ 5 mul abs x_0_2 x_0_4", "tree": "sign((n mul (5 idiv (abs(x_0_2) mul x_0_4))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 - 7 + 2 + 265 + 66 + 280 + 136 + 1 1979 + 3300 + 1 5477 + 8268 + 77 8661 + 23 1098 + 116 955 + 66 1616 + 6618 6185 + 2079 8982 + 1 1029 763 + 6616 1900 + 69 4954 9551 + 22 8788 8262 + 126 8343 8090 + 79 3942 8216 + 8686 9369 4200 + 2974 2547 4112 + 1 7122 6414 2231 + 1 1115 1995 352 + 125 9605 8565 9464 + 44 6138 2111 7070 + 265 4009 4204 6363", "x2": "mul n add mul INT+ 5 abs x_0_4 mod sub n x_0_3 relu n", "tree": "(n mul ((5 mul abs(x_0_4)) add ((n sub x_0_3) mod relu(n))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 1 + 2 + 6 + 1 + 5 - 9 + 6 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0", "x2": "idiv x_0_8 mul mul add n x_0_5 INT+ 9 n", "tree": "(x_0_8 idiv (((n add x_0_5) mul 9) mul n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 3 - 9 + 1344 + 168 - 84 + 0 - 4872 + 4368 - 504 + 54 4992 - 61 2360 + 8 3664 - 1 681 9608 + 1 3716 7296 - 2108 4840 + 299 948 8560 - 422 4752 9016 + 70 8450 4224 - 10 8870 5383 8024 + 16 5610 3137 1920 - 2 9754 9177 6600 + 4877 4001 1943 2064 - 7883 509 3303 6776 + 1499 6478 5540 3376 - 259 4776 8635 3786 1240 + 441 4508 5225 59 1200 - 88 1792 9389 7718 8616 + 15 9838 2547 9393 2252 144 - 28 4294 3488 4903 8073 6664", "x2": "mul mul sub INT- 6 x_0_3 mul INT- 4 mod idiv INT+ 3 mul INT- 1 0 INT+ 3 INT+ 8 sub mod INT+ 7 sqr n n", "tree": "(((-6 sub x_0_3) mul (-4 mul ((3 idiv (-10 mul 3)) mod 8))) mul ((7 mod (n)**2) sub n))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 33 + 370 - 4433 + 5 7636 - 80 6897 + 1210 3462 - 1 9365 5385 + 32 9214 1552 - 592 5854 7929 + 1 1259 1241 658 - 22 5182 4821 3153 + 472 8832 1247 6220 - 1 403 4306 7447 6833 + 23 9278 9055 1296 7166 - 574 2693 7323 1121 1977 + 1 4356 7343 3077 8029 9432 - 37 3275 926 22 8778 5225 + 1007 8427 5002 617 7020 1082 - 2 8219 5970 57 7295 6563 289 + 81 8368 3130 1674 1574 327 8388 - 2455 1049 3905 224 7220 9835 1633 + 7 6108 2531 1055 6966 3850 4890 630 - 243 5464 995 3782 2924 3215 6482 153 + 8037 315 2847 4815 6502 6116 3906 5056 - 27 3259 719 6814 3732 1088 7957 2821 1897 + 956 4067 5188 8503 623 8107 8504 8741 6402 - 3 4430 6430 6798 6110 2457 1882 6175 4699 465", "x2": "add mul mul x_0_1 sign sub sqr INT+ 2 sqr mul INT+ 5 INT- 9 abs add INT+ 8 n INT+ 7", "tree": "(((x_0_1 mul sign(((2)**2 sub ((5 mul -9))**2))) mul abs((8 add n))) add 7)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 3 + 8 - 7 - 6 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1", "x2": "sign idiv idiv INT- 6 x_0_4 n", "tree": "sign(((-6 idiv x_0_4) idiv n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 2 - 5 + 4 - 1 - 4 + 9 + 6 - 3 + 19 + 3 + 23 + 7 - 1 + 55 + 47 + 15 + 107 + 47 + 131 + 71 + 43 + 271 + 243 + 119 + 491 + 255 + 595 + 359 + 251 + 1167 + 1059 + 567 + 2059 + 1119 + 2483", "x2": "sub mul INT+ 4 mod INT- 9 add n x_0_8 sign INT+ 3", "tree": "((4 mul (-9 mod (n add x_0_8))) sub sign(3))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 4 - 8 - 16 - 26 - 36 - 44 - 48 - 46 - 36 - 16 + 16 + 62 + 124 + 204 + 304 + 426 + 572 + 744 + 944 + 1174 + 1436 + 1732 + 2064 + 2434 + 2844 + 3296 + 3792 + 4334", "x2": "add INT+ 1 0 sub sqr n sub mul INT+ 9 n x_0_1", "tree": "(10 add ((n)**2 sub ((9 mul n) sub x_0_1)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr abs relu n", "tree": "(abs(relu(n)))**2", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 7 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0", "x2": "mul abs idiv sign x_0_2 INT- 6 INT- 1", "tree": "(abs((sign(x_0_2) idiv -6)) mul -1)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 7 - 3 + 3 + 0 + 2 + 0 + 5 + 3 + 0 + 2 + 0 + 5 + 3 + 0 + 2 + 0 + 5 + 3 + 0 + 2 + 0 + 5 + 3 + 0 + 2 + 0 + 5 + 3 + 0 + 2 + 0", "x2": "mod x_0_5 abs abs n", "tree": "(x_0_5 mod abs(abs(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 0 - 10 - 4 - 10 + 0 + 36 + 0 + 270 + 36 + 330 + 0 + 3780 + 0 + 21 7890 + 3780 + 32 5710 + 0 + 4285 3860 + 0 + 1424 2750 2630 + 4285 3860 + 3182 6003 5170 + 0 + 5509 3598 2213 7220 + 0 + 608 5678 515 8286 8824 2810 + 5509 3598 2213 7220 + 3038 6834 9958 2741 3068 1190 + 0 + 9105 9136 9493 3956 4652 6260 6157 3540 + 0", "x2": "mul sub x_0_6 sign x_0_5 mul x_0_6 mod INT+ 3 n", "tree": "((x_0_6 sub sign(x_0_5)) mul (x_0_6 mul (3 mod n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 4 - 30 - 56 - 90 - 132 - 182 - 240 - 306 - 380 - 462 - 552 - 650 - 756 - 870 - 992 - 1122 - 1260 - 1406 - 1560 - 1722 - 1892 - 2070 - 2256 - 2450 - 2652 - 2862 - 3080", "x2": "sub mod relu x_0_1 INT+ 3 mul mod sign x_0_1 add n abs abs n add n n", "tree": "((relu(x_0_1) mod 3) sub ((sign(x_0_1) mod (n add abs(abs(n)))) mul (n add n)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 10 + 6 + 9 + 90 + 106 + 69 + 180 + 1006 + 1129 + 870 + 2806 + 1 1189 + 1 2160 + 1 1506 + 3 9249 + 12 4050 + 13 3106 + 15 4309 + 51 6540 + 137 3606 + 148 5369 + 205 9630 + 653 9006 + 1522 1429 + 1691 3320 + 2713 5306 + 8061 1489 + 1 6912 7610 + 1 9626 8506 + 3 5196 4549", "x2": "add abs mul x_0_4 INT- 1 0 x_0_3", "tree": "(abs((x_0_4 mul -10)) add x_0_3)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 10 - 4 - 9 + 8 + 24 + 16 + 8 + 8 + 16 + 16 + 8 + 8 + 56 + 120 + 16 + 16 + 72 + 24 + 8 + 8 + 24 + 184 + 24 + 24 + 8 + 8 + 8 + 8 + 24 + 24", "x2": "mul idiv n mod x_0_4 n INT+ 8", "tree": "((n idiv (x_0_4 mod n)) mul 8)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 - 2 - 1 - 6 + 3 + 8 + 54 + 64 + 128 + 58 + 30 - 502 - 615 - 1538 - 523 - 172 + 8847 + 1 886 + 2 8962 + 9316 + 3524 - 19 4328 - 24 1008 - 68 3632 - 20 3319 - 8 1638 + 525 1103 + 655 4674 + 1958 5155 + 541 6832 + 232 8414 - 1 6811 5916 - 2 1105 2056", "x2": "add add INT- 6 mul n sub n x_0_5 x_0_6", "tree": "((-6 add (n mul (n sub x_0_5))) add x_0_6)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12 + 12 + 13 + 13 + 14", "x2": "sub n idiv n INT+ 2", "tree": "(n sub (n idiv 2))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 5 - 9 + 5 + 2 - 3 - 4 + 7 + 10 + 2 - 55 - 94 + 83 + 32 - 38 - 52 + 132 + 182 + 37 - 1093 - 1910 + 1929 + 662 - 935 - 1253 + 3493 + 4791 + 863 - 3 1725 - 5 6198 + 6 1718 + 1 9264 - 3 1508 - 4 1658 + 12 3517 + 16 8992 + 2 7149", "x2": "sub sub mul n x_0_9 x_0_10 INT- 9", "tree": "(((n mul x_0_9) sub x_0_10) sub -9)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "- 8 + 6 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 0", "x2": "mod add x_0_2 n add sub sub abs INT+ 1 x_0_2 x_0_1 sign idiv n sign x_0_2", "tree": "((x_0_2 add n) mod (((abs(1) sub x_0_2) sub x_0_1) add sign((n idiv sign(x_0_2)))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 4 + 9 + 48 + 50 + 36 + 0 + 448 + 567 + 700 + 847 + 1008 + 1183 + 1372 + 1575 + 1792 + 2023 + 2268 + 2527 + 2800 + 3087 + 3388 + 3703 + 4032 + 4375 + 4732 + 5103", "x2": "mul mod INT+ 7 n sqr n", "tree": "((7 mod n) mul (n)**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 - 7 + 9 + 16 + 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729 - 784 - 841", "x2": "mul add idiv relu mod n n INT- 1 sign sub x_0_1 add mod INT- 5 x_0_2 x_0_2 sqr n", "tree": "(((relu((n mod n)) idiv -1) add sign((x_0_1 sub ((-5 mod x_0_2) add x_0_2)))) mul (n)**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13 + 11 + 14 + 12 + 15 + 13 + 16 + 14 + 17 + 15 + 18 + 16 + 19 + 17 + 20 + 18 + 21 + 19 + 22 + 20", "x2": "add x_0_2 idiv sign idiv INT- 2 mul n INT- 4 relu sign x_0_2", "tree": "(x_0_2 add (sign((-2 idiv (n mul -4))) idiv relu(sign(x_0_2))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 8 - 6 - 5 - 20 + 8 - 4 - 12 + 44 - 72 - 28 + 0 - 228 + 232 + 52 - 64 + 844 - 1000 - 284 + 176 - 3460 + 3912 + 1044 - 800 + 1 3740 - 1 5752 - 4284 + 3088 - 5 5076 + 6 2888 + 1 7012", "x2": "mul INT- 4 add x_0_4 n", "tree": "(-4 mul (x_0_4 add n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 8 + 2 - 10 - 1 + 204 + 231 + 216 + 225 + 250 + 2519 + 3072 + 3133 + 3500 + 4125 + 4 704 + 5 2649 + 5 6844 + 6 6975 + 8 3000 + 85 5309 + 115 8828 + 130 7987 + 160 8000 + 207 5625 + 2223 8684 + 3128 9031 + 3662 4336 + 4663 2725 + 6226 9500 + 6 8939 9979 + 10 124 9792", "x2": "mul n sub abs add relu x_0_5 sub INT+ 6 INT- 1 0 INT- 9", "tree": "(n mul (abs((relu(x_0_5) add (6 sub -10))) sub -9))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 64 + 216 + 512 + 1000 + 1728 + 2744 + 4096 + 5832 + 8000 + 1 648 + 1 3824 + 1 7576 + 2 1952 + 2 7000 + 3 2768 + 3 9304 + 4 6656 + 5 4872 + 6 4000 + 7 4088 + 8 5184 + 9 7336 + 11 592 + 12 5000 + 14 608 + 15 7464", "x2": "mul mul n sqr n INT+ 8", "tree": "((n mul (n)**2) mul 8)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 5 - 9 - 9 + 8 - 6 - 25 - 100 - 119 - 138 - 174 - 238 + 287 + 1 187 + 2 4248 + 4 3192 + 7 3368 + 12 9912 + 21 2181 + 1 398 7050 + 6 9195 2454 + 25 5750 1218 + 79 4036 4542 + 248 1749 2186 + 698 3826 8847 + 1 813 3764 597 1247 + 48 9611 5750 259 3263 + 703 424 550 7407 6687 + 7007 9813 1149 2494 6351 + 6 8598 7731 5170 9600 4847 + 55 6337 1527 629 4671 4156 + 1 1692 9109 3027 7901 4339 4603 3744 9065 + 2398 3642 3485 8227 8717 7984 6353 5043 6134", "x2": "add sqr x_0_6 sub x_0_1 sqr INT- 1 0", "tree": "((x_0_6)**2 add (x_0_1 sub (-10)**2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 - 5 - 7 + 7 - 7 - 7 + 6 + 0 + 0 + 0 + 7 + 0 + 0 + 6 + 0 + 0 + 0 + 7 + 0 + 0 + 6 + 0 + 0 + 0 + 7 + 0 + 0 + 6 + 0 + 0 + 0 + 7 + 0 + 0", "x2": "relu idiv x_0_7 sign sub x_0_5 INT- 1 0", "tree": "relu((x_0_7 idiv sign((x_0_5 sub -10))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 1 - 9 + 7 + 8 - 3 + 1 - 10 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 0 + 1 + 0 + 0 + 1 + 0", "x2": "idiv sub relu idiv n abs x_0_8 sign INT- 4 n", "tree": "((relu((n idiv abs(x_0_8))) sub sign(-4)) idiv n)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 9 - 36 - 324 - 5184 - 12 9600 - 466 5600 - 2 2861 4400 - 146 3132 1600 - 1 1851 3704 9600 - 118 5137 496 0 - 1 4340 1583 16 0 - 206 4982 7952 2304 0 - 3 4898 2092 3926 9376 0 - 684 49 108 9679 7696 0 - 15 3901 1027 4517 7948 1600 0 - 3939 8682 3027 6555 4728 9600 0 - 113 8621 9185 4992 4531 6669 4400 0 - 3 6891 3501 6101 7554 8260 898 5600 0 - 1331 7777 4081 2733 7292 1892 4380 1600 0 - 53 2711 963 2509 3491 6875 6975 2064 0 0 - 2 3492 5593 4793 6622 9834 2182 6066 224 0 0 - 1137 398 7244 132 5523 9761 6381 5954 8416 0 0 - 60 1494 925 2083 120 2183 3906 5864 111 2064 0 0 - 3 4646 597 2919 9814 9245 7633 193 7670 4054 8864 0 0 - 2165 3787 3307 4988 4327 8602 637 1104 4003 4304 0 0 0 - 146 3796 235 5869 2180 5633 4995 686 6574 6318 9504 0 0 0 - 10 6710 7301 1742 8659 9630 6821 1405 573 2906 6514 8416 0 0 0 - 8366 1212 4120 6406 9411 454 7774 1564 9459 8814 7635 8144 0 0 0", "x2": "mul x_0_1 sqr n", "tree": "(x_0_1 mul (n)**2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 1 + 8 + 3 - 4 + 10 + 7 - 10 + 441 + 160 + 1947 + 1200 + 117 + 2912 + 270 + 1024 + 18 9720 + 10 1160 + 132 2514 + 81 6000 + 1 7010 + 55 9350 + 18 6300 + 59 2224 + 2205 9000 + 7832 8380 + 5 7495 5010 + 9 8980 5096 + 2861 820 + 9376 3980 + 3 1638 6000 + 4856 640 + 360 1332 9000 + 753 3152 5230 + 3249 1796 850", "x2": "mul mod sqr x_0_2 mul sub mod x_0_2 INT- 9 relu x_0_8 sub sub sign INT- 9 n n n", "tree": "(((x_0_2)**2 mod (((x_0_2 mod -9) sub relu(x_0_8)) mul ((sign(-9) sub n) sub n))) mul n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 8 - 7 - 6 + 7 + 9 - 2 - 11 - 10 - 9 + 4 + 6 - 5 - 14 - 13 - 12 + 1 + 3 - 8 - 17 - 16 - 15 - 2 + 0 - 11 - 20 - 19 - 18 - 5 - 3 - 14 - 23 - 22 - 21", "x2": "sub x_0_6 sub abs INT- 3 mod n n", "tree": "(x_0_6 sub (abs(-3) sub (n mod n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 9 + 2 + 6 + 7 - 9 - 324 + 98 + 384 + 567 - 900 - 3 9204 + 1 4112 + 6 4896 + 11 1132 - 20 2500 - 1003 6224 + 407 8368 + 2102 6304 + 4011 8652 - 8100 0 - 44 2597 4784 + 19 7393 112 + 111 2291 4816 + 231 834 3552 - 506 2500 0 - 2 9919 5895 3984 + 1 4389 9505 1648 + 8 7203 6521 5744 + 19 4341 1692 7232 - 45 5625 0 0 - 2875 2725 5477 8624 + 1473 5309 3288 7552", "x2": "mul mul n n x_0_5", "tree": "((n mul n) mul x_0_5)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 1 + 0 + 10 + 6 + 4 - 2 + 6 + 8 + 48 + 0 + 480 + 0 + 1920 + 0 + 1 1520 + 0 + 16 1280 + 0 + 80 6400 + 0 + 725 7600 + 0 + 1 4515 2000 + 0 + 7 2576 0 + 0 + 130 6368 0 + 0 + 261 2736 0 + 0 + 4702 9248 0 + 0 + 4 2326 3232 0 + 0 + 0", "x2": "mul mod x_0_8 n x_0_2", "tree": "((x_0_8 mod n) mul x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "- 9 + 10 + 3 + 1 + 2 + 3 - 3 + 24 4036 + 9025 + 12 2500 + 12 2500 + 17 5561 + 24 4036 + 43 8244 + 33 625 + 57 25 + 72 9316 + 91 9681 + 114 4900 + 140 8969 + 171 6100 + 207 721 + 247 7476 + 294 1225 + 346 7044 + 406 225 + 472 6276 + 547 921 + 630 100 + 721 9969 + 823 6900 + 935 7481 + 1058 8516 + 1193 7025", "x2": "relu sqr add INT+ 2 mul INT+ 3 mod INT- 5 sqr sub idiv x_0_7 x_0_3 n", "tree": "relu(((2 add (3 mul (-5 mod (((x_0_7 idiv x_0_3) sub n))**2))))**2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 2 + 9 + 6 + 16 + 15 + 24 + 28 + 40 + 45 + 60 + 66 + 84 + 91 + 112 + 120 + 144 + 153 + 180 + 190 + 220 + 231 + 264 + 276 + 312 + 325 + 364 + 378 + 420 + 435", "x2": "add n add n mul idiv x_0_2 n n", "tree": "(n add (n add ((x_0_2 idiv n) mul n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 25 + 100 + 225 + 400 + 625 + 900 + 1225 + 1600 + 2025 + 2500 + 3025 + 3600 + 4225 + 4900 + 5625 + 6400 + 7225 + 8100 + 9025 + 1 0 + 1 1025 + 1 2100 + 1 3225 + 1 4400 + 1 5625 + 1 6900", "x2": "sqr mul sub n sign sqr n INT+ 5", "tree": "(((n sub sign((n)**2)) mul 5))**2", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 1 + 5 - 5 - 9 - 5 + 96 + 32 + 1584 + 35 + 5 7132 + 3078 + 462 7935 + 44 3664 + 2 9618 8032 + 7497 9723 + 145 1321 3715 + 60 7335 7806 + 145 1321 3718 + 1 5547 7959 9104 + 2322 1141 9536 + 1 5547 7959 9107 + 28 975 8176 4219 + 13 9930 1639 1990 + 28 975 8176 4222 + 2014 9943 6044 6992 + 1798 2452 3291 400 + 51 5838 5562 7443 720 + 8 8114 164 1260 9747 + 2 7287 8596 2691 7385 2467 + 1489 1268 7737 3104 7750 + 98 2362 9465 6902 5868 8920 + 1489 1268 7737 3104 7753", "x2": "mul sqr mod sub add sign x_0_2 add n x_0_5 n n abs add x_0_2 INT+ 3", "tree": "(((((sign(x_0_2) add (n add x_0_5)) sub n) mod n))**2 mul abs((x_0_2 add 3)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 24 - 108 - 288 - 600 - 1080 - 1764 - 2688 - 3888 - 5400 - 7260 - 9504 - 1 2168 - 1 5288 - 1 8900 - 2 3040 - 2 7744 - 3 3048 - 3 8988 - 4 5600 - 5 2920 - 6 984 - 6 9828 - 7 9488 - 9 0 - 10 1400 - 11 3724", "x2": "mul mul sub INT+ 1 n sqr abs n INT+ 6", "tree": "(((1 sub n) mul (abs(n))**2) mul 6)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 10 + 7 + 15 + 13 + 22 + 21 + 31 + 31 + 42 + 43 + 55 + 57 + 70 + 73 + 87 + 91 + 106 + 111 + 127 + 133 + 150 + 157 + 175 + 183 + 202 + 211 + 231 + 241", "x2": "add n sub x_0_2 INT- 1", "tree": "(n add (x_0_2 sub -1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 29 - 14 + 51 + 226 + 595 + 1266 + 2371 + 4066 + 6531 + 9970 + 1 4611 + 2 706 + 2 8531 + 3 8386 + 5 595 + 6 5506 + 8 3491 + 10 4946 + 13 291 + 15 9970 + 19 4451 + 23 4226 + 27 9811 + 33 1746 + 39 595 + 45 6946 + 53 1411", "x2": "sub add INT- 5 sqr sqr n relu sqr INT+ 5", "tree": "((-5 add ((n)**2)**2) sub relu((5)**2))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 4 - 10 - 6 - 1 + 8 - 10 + 7 + 11 + 7 + 2 + 9 + 11 + 8 + 12 + 8 + 3 + 10 + 12 + 9 + 13 + 9 + 4 + 11 + 13 + 10 + 14 + 10 + 5 + 12 + 14 + 11 + 15 + 11 + 6", "x2": "add abs x_0_6 sign mul x_0_8 idiv INT- 4 sub sub INT- 9 x_0_4 sqr mul INT- 2 x_0_2", "tree": "(abs(x_0_6) add sign((x_0_8 mul (-4 idiv ((-9 sub x_0_4) sub ((-2 mul x_0_2))**2)))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 9 + 1 + 10 - 2 + 7 - 6 - 6 - 10 - 8 - 11 - 6 - 11 - 15 - 18 - 13 - 18 - 10 - 14 - 18 - 25 - 17 - 21 - 15 - 16 - 22 - 26 - 22 - 23 - 14 - 17 - 29 - 30", "x2": "add mod sub add sign mod add x_0_4 abs sign x_0_3 INT- 4 x_0_4 INT- 4 x_0_6 INT- 1 0", "tree": "((((sign(((x_0_4 add abs(sign(x_0_3))) mod -4)) add x_0_4) sub -4) mod x_0_6) add -10)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 4 - 3 - 5 - 4 - 3 + 8 + 6 + 81 + 140 + 143 + 180 + 182 + 182 + 30 + 64 - 1207 - 2340 - 2527 - 3400 - 3612 - 3784 - 460 - 1296 + 3 425 + 6 1100 + 6 8499 + 9 5480 + 10 5038 + 11 3820 + 1 4570 + 4 1792 - 100 3695 - 207 7060 - 239 7115", "x2": "mul n sub abs sub INT- 1 0 n add n x_0_8", "tree": "(n mul (abs((-10 sub n)) sub (n add x_0_8)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 0 - 8 - 6 + 10 + 10 + 4 + 16 + 63 - 30 - 187 - 12 + 65 - 182 - 720 + 1472 + 2652 - 3168 - 1482 + 4920 + 1 1277 - 4 8246 - 2 7163 + 13 9656 - 4 2175 - 16 6478 - 17 1666 + 166 6616 - 61 1436 - 500 4600 + 563 6730 + 397 7664 + 17 1171 - 6250 1622", "x2": "mul sub x_0_7 sub x_0_6 idiv idiv n n sign INT- 8 n", "tree": "((x_0_7 sub (x_0_6 sub ((n idiv n) idiv sign(-8)))) mul n)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n abs n", "tree": "(n mul abs(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 5 - 7 - 28 - 51 - 130 - 260 - 592 - 1234 - 2710 - 5747 - 1 2452 - 2 6606 - 5 7345 - 12 2909 - 26 4362 - 56 7331 - 121 9249 - 261 7904 - 562 4256 - 1207 8619 - 2594 6002 - 5572 6196 - 1 1969 8613 - 2 5709 4579 - 5 5222 1334 - 11 8610 4576 - 25 4764 8023 - 54 7207 68 - 117 5348 2229", "x2": "sub idiv sqr add x_0_2 x_0_1 x_0_1 sub INT+ 4 idiv INT- 3 sqr sign add x_0_1 INT+ 7", "tree": "((((x_0_2 add x_0_1))**2 idiv x_0_1) sub (4 sub (-3 idiv (sign((x_0_1 add 7)))**2)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 3 + 6 - 6 - 8 + 6 + 7 - 6 + 5 + 7 + 7 + 4 + 7 + 7 + 3 + 7 + 7 + 3 + 7 + 7 + 3 + 7 + 7 + 3 + 7 + 7 + 3 + 7 + 7 + 3 + 7 + 7 + 3 + 7 + 7", "x2": "abs add x_0_3 idiv idiv INT+ 3 x_0_7 relu INT+ 7", "tree": "abs((x_0_3 add ((3 idiv x_0_7) idiv relu(7))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 4 - 3 + 24 - 24 - 18 + 144 - 144 - 108 + 864 - 864 - 648 + 5184 - 5184 - 3888 + 3 1104 - 3 1104 - 2 3328 + 18 6624 - 18 6624 - 13 9968 + 111 9744 - 111 9744 - 83 9808 + 671 8464 - 671 8464 - 503 8848 + 4031 784 - 4031 784 - 3023 3088", "x2": "mul mul INT- 6 x_0_3 idiv INT- 8 relu sqr abs sub mod INT+ 1 sub x_0_3 INT+ 1 0 sub n x_0_2", "tree": "((-6 mul x_0_3) mul (-8 idiv relu((abs(((1 mod (x_0_3 sub 10)) sub (n sub x_0_2))))**2)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 7 - 3 + 9 + 25 + 7 + 35 + 35 + 105 + 1155 + 4305 + 11 9805 + 55 305 + 1253 805 + 6756 1305 + 13 2064 1805 + 80 7677 2305 + 1401 4095 2805 + 9478 1818 3305 + 14 9619 1346 3805 + 109 7437 3179 4305 + 1605 9350 7817 4805 + 1 2580 3082 5760 5305 + 17 3173 8160 7508 5805 + 143 1204 6418 3561 6305 + 1874 8586 2493 4419 6805 + 1 6186 9050 4329 582 7305 + 20 3672 7675 3673 2550 7805 + 182 2363 2718 6579 823 8305 + 2218 9640 255 3904 5901 8805 + 2 442 5967 2121 1812 8284 9305", "x2": "sub add mul mod sqr abs INT- 1 0 x_0_3 x_0_2 relu sub x_0_1 relu abs INT+ 1 0 INT- 1 0", "tree": "(((((abs(-10))**2 mod x_0_3) mul x_0_2) add relu((x_0_1 sub relu(abs(10))))) sub -10)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 1 + 0 - 13 - 37 - 73 - 135 - 236 - 390 - 625 - 982 - 1516 - 2310 - 3488 - 5229 - 7795 - 1 1572 - 1 7125 - 2 5281 - 3 7253 - 5 4819 - 8 584 - 11 8366 - 17 3761 - 25 4970 - 37 4012 - 54 8502 - 80 4256 - 117 9109 - 172 8511", "x2": "add x_0_1 sub x_0_3 sqr n", "tree": "(x_0_1 add (x_0_3 sub (n)**2))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 5 + 3 + 8 + 9 + 19 - 14 + 10 + 25 + 28 + 58 - 41 + 31 + 76 + 85 + 175 - 122 + 94 + 229 + 256 + 526 - 365 + 283 + 688 + 769 + 1579 - 1094 + 850 + 2065 + 2308 + 4738 - 3281", "x2": "add mul INT+ 3 x_0_5 sign n", "tree": "((3 mul x_0_5) add sign(n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 6 + 9 - 7 - 14 + 14 - 32 + 20 + 23 - 74 + 29 - 112 - 134 + 38 - 184 + 44 + 47 - 274 + 53 - 344 - 382 + 62 - 464 + 68 + 71 - 602 + 77 - 704 - 758 + 86 - 872", "x2": "add INT- 4 mul n sub INT+ 3 relu mod n add mod x_0_3 mul n x_0_4 idiv n n", "tree": "(-4 add (n mul (3 sub relu((n mod ((x_0_3 mod (n mul x_0_4)) add (n idiv n)))))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 1 + 3 + 8 + 8 + 10 + 10 + 8 + 8 + 10 + 10 + 8 + 8 + 10 + 10 + 8 + 8 + 10 + 10 + 8 + 8 + 10 + 10 + 8 + 8 + 10 + 10 + 8 + 8 + 10", "x2": "sub sqr INT- 3 sign add idiv n mod x_0_2 INT+ 8 abs abs n", "tree": "((-3)**2 sub sign(((n idiv (x_0_2 mod 8)) add abs(abs(n)))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 1 + 1 - 2 + 1 - 7 + 2 - 7 + 5 - 20 + 25 - 79 + 301 - 394 + 301 - 2363 + 3613 - 3 718 + 1 839 - 6 1435 + 3 2518 - 67 5785 + 61 7843 - 473 494 + 1112 1174 - 1 1353 1856 + 1 9 566 - 27 2476 4544 + 24 217 3584", "x2": "sub mul mod x_0_2 relu n x_0_2 mod x_0_1 INT- 2", "tree": "(((x_0_2 mod relu(n)) mul x_0_2) sub (x_0_1 mod -2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 1 - 7 + 3 - 2 + 5 + 8 + 7 - 17 - 12 - 15 - 10 - 17 - 16 - 3 + 2 + 7 + 8 - 7 - 6 - 5 + 12 + 5 + 6 + 11 + 8 + 9 + 2 + 19 + 20 + 1 + 22 + 3 + 16 + 13", "x2": "sub n sub mul INT+ 4 mod mod x_0_8 n INT+ 6 INT- 1 0", "tree": "(n sub ((4 mul ((x_0_8 mod n) mod 6)) sub -10))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 7 + 7 + 21 + 84 + 420 + 2520 + 1 7640 + 14 1120 + 127 80 + 1270 800 + 1 3970 8800 + 16 7650 5600 + 217 9457 2800 + 3051 2401 9200 + 4 5768 6028 8000 + 73 2297 6460 8000 + 1244 9059 9833 6000 + 2 2408 3079 7004 8000 + 42 5757 8514 3091 2000 + 851 5157 286 1824 0 + 1 7881 8297 6009 8304 0 + 39 3400 2547 2216 2688 0 + 904 8205 8586 974 1824 0 + 2 1715 6940 6066 3380 3776 0 + 54 2892 3515 1658 4509 4400 0 + 1411 5201 1394 3119 7245 4400 0 + 3 8111 430 7646 4232 5626 8800 0 + 106 7109 2061 4099 8511 7552 6400 0", "x2": "mul mod x_0_1 sub relu x_0_1 mul sign relu n n x_0_1", "tree": "((x_0_1 mod (relu(x_0_1) sub (sign(relu(n)) mul n))) mul x_0_1)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 10 - 3 - 2 - 9 + 2 - 10 + 3 - 8 + 3 + 2 + 0 + 2 + 0 + 2 + 2 + 10 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2 + 2 + 0 + 2 + 2 + 2", "x2": "mod mod INT+ 2 add x_0_8 mul relu add sign mul sub x_0_5 INT+ 3 mod x_0_9 x_0_5 x_0_5 INT+ 5 n", "tree": "((2 mod (x_0_8 add (relu((sign(((x_0_5 sub 3) mul (x_0_9 mod x_0_5))) add x_0_5)) mul 5))) mod n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 1 + 3 - 10 - 3 + 7 - 5 - 8 - 3 + 9 + 72 + 111 + 144 + 189 + 246 + 297 + 360 + 429 + 510 + 591 + 678 + 771 + 870 + 975 + 1086 + 1203 + 1326 + 1455 + 1590 + 1731 + 1878 + 2031 + 2190 + 2355 + 2526 + 2703 + 2886", "x2": "mul INT+ 3 add sign x_0_9 sqr mod INT- 5 n", "tree": "(3 mul (sign(x_0_9) add ((-5 mod n))**2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 3 - 9 - 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3 + 3 + 9 + 3", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 6 + 10 + 6 - 63 - 245 + 7 + 7 + 3094 + 1 2012 - 15 1599 - 58 8581 + 7 + 7 + 742 8358 + 2884 476 - 3 6398 9535 - 14 1318 3317 + 7 + 7 + 178 3548 7222 + 692 4598 2540 - 8739 3887 3871 - 3 3930 5314 4453 + 7 + 7 + 42 8230 481 9686 + 166 2596 407 8204 - 2098 3272 3616 4607 - 8146 7205 9983 1989 + 7", "x2": "add INT+ 2 sub mul relu x_0_2 mul INT- 7 x_0_4 add INT- 1 INT- 4", "tree": "(2 add ((relu(x_0_2) mul (-7 mul x_0_4)) sub (-1 add -4)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756", "x2": "add relu n sqr n", "tree": "(relu(n) add (n)**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 - 1 + 9 + 4 + 1 + 0 + 8 + 0 + 0 + 2 + 2 + 6 + 6 + 1 + 6 + 3 + 6 + 0 + 1 + 8 + 0 + 4 + 1 + 0 + 8 + 0 + 0 + 2 + 2 + 6", "x2": "mod sub n mul relu add x_0_3 x_0_2 relu n sqr mod INT+ 3 n", "tree": "((n sub (relu((x_0_3 add x_0_2)) mul relu(n))) mod ((3 mod n))**2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 0 + 3 - 3 - 6 - 1 - 10 + 9 - 2 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 8 + 9 + 4 - 2 - 6 + 2 + 0 + 3 - 8 + 5 - 5 + 4 + 19 + 20 + 32 + 14 + 32 + 14 + 29 + 70 + 59 + 93 + 48 + 69 + 32 + 50 + 150 + 110 + 196 + 91 + 92 + 29 + 31 + 276 + 175 + 384 + 156 + 58", "x2": "sub add add sqr INT+ 4 sub x_0_7 INT- 8 x_0_7 x_0_11", "tree": "((((4)**2 add (x_0_7 sub -8)) add x_0_7) sub x_0_11)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 52 + 62 + 73 + 85 + 98 + 112 + 127 + 143 + 160 + 178 + 197 + 217 + 238 + 260 + 283 + 307 + 332 + 358 + 385 + 413", "x2": "abs abs add x_0_1 n", "tree": "abs(abs((x_0_1 add n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 2 + 10 + 2 - 29 - 18 - 6 - 61 - 77 - 27 - 85 - 172 - 87 - 83 - 282 - 230 - 58 - 342 - 497 - 78 - 246 - 861 - 317 + 85 - 1121 - 1028 + 529 - 823 - 2342 + 510 + 618", "x2": "sub relu INT- 7 sub add sqr n relu sign mod INT+ 8 relu n sub x_0_3 x_0_2", "tree": "(relu(-7) sub (((n)**2 add relu(sign((8 mod relu(n))))) sub (x_0_3 sub x_0_2)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 9 + 9 - 3 - 8 + 7 - 3 + 7 + 9 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign mod idiv INT+ 7 idiv mul abs n x_0_8 INT- 2 add INT- 4 mul INT- 2 abs sign INT+ 5", "tree": "sign(((7 idiv ((abs(n) mul x_0_8) idiv -2)) mod (-4 add (-2 mul abs(sign(5))))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 2 + 0 + 26 + 64 + 130 + 226 + 361 + 540 + 769 + 1054 + 1400 + 1815 + 2304 + 2873 + 3528 + 4275 + 5120 + 6069 + 7128 + 8303 + 9600 + 1 1025 + 1 2584 + 1 4283 + 1 6128 + 1 8125 + 2 280 + 2 2599 + 2 5088", "x2": "add mul n relu mul n abs n idiv x_0_2 n", "tree": "((n mul relu((n mul abs(n)))) add (x_0_2 idiv n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2 + 0 - 1 - 2", "x2": "mod sub INT- 4 n INT- 3", "tree": "((-4 sub n) mod -3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 24 + 99 + 436 + 2235 + 1 3482 + 9 4465 + 75 5832 + 680 2623 + 6802 6390 + 7 4829 477 + 89 7948 5940 + 1167 3331 7467 + 1 6342 6644 4818 + 24 5139 9667 2585 + 392 2239 4676 1712 + 6667 8070 9494 9495 + 12 20 5277 909 1342 + 228 390 264 7273 5973 + 4560 7800 5294 5471 9980 + 9 5776 3811 1185 4912 147 + 210 7080 3844 6080 8064 3850 + 4846 2848 8425 9858 5480 9217", "x2": "mul abs n add n add x_0_1 INT+ 6", "tree": "(abs(n) mul (n add (x_0_1 add 6)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 5 - 6 + 7 - 324 - 441 - 576 - 729 - 900 - 1089 - 1296 - 1521 - 1764 - 2025 - 2304 - 2601 - 2916 - 3249 - 3600 - 3969 - 4356 - 4761 - 5184 - 5625 - 6084 - 6561", "x2": "mul mul add n idiv x_0_4 x_0_4 sub n sign INT- 4 sub INT- 1 0 sign INT- 9", "tree": "(((n add (x_0_4 idiv x_0_4)) mul (n sub sign(-4))) mul (-10 sub sign(-9)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 9 + 7 + 10 - 7 - 10 + 2 - 1 + 4 + 12 + 19 + 17 + 20 + 10 + 10 + 12 + 10 + 14 + 22 + 29 + 27 + 30 + 20 + 20 + 22 + 20 + 24 + 32 + 39 + 37 + 40", "x2": "sub abs relu x_0_9 idiv INT- 1 0 sign sign INT+ 1", "tree": "(abs(relu(x_0_9)) sub (-10 idiv sign(sign(1))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 4 - 4 - 8 - 6 + 1 + 38 - 42 - 82 - 62 + 8 + 378 - 422 - 822 - 622 + 78 + 3778 - 4222 - 8222 - 6222 + 778 + 3 7778 - 4 2222 - 8 2222 - 6 2222 + 7778 + 37 7778 - 42 2222", "x2": "add INT- 2 mul INT+ 1 0 x_0_5", "tree": "(-2 add (10 mul x_0_5))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 9 - 2 + 2 - 60 - 315 - 1872 - 1 3517 - 11 640 - 101 2581 - 1026 940 - 1 1408 7325 - 13 8119 8800 - 180 8897 6529 - 2548 4289 3844 - 3 8433 6138 9525 - 61 7832 585 6704 - 1054 6468 2875 9129 - 1 9052 8234 2267 5556 - 36 3177 5259 4211 2693 - 728 4643 4554 1743 6160 - 1 5337 7621 8556 4234 5721 - 33 8229 7586 3948 5808 4756 - 779 6039 1286 5563 3698 677 - 1 8747 3045 3801 8875 383 3120 - 46 9528 1878 4707 590 4794 6425", "x2": "mul n add add idiv sign sign x_0_3 add n n add x_0_3 INT- 5 mod n x_0_1", "tree": "(n mul (((sign(sign(x_0_3)) idiv (n add n)) add (x_0_3 add -5)) add (n mod x_0_1)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 1 + 2 - 3 + 6 - 11 - 6 - 13 + 2 - 15 - 36 - 17 - 6 - 19 - 90 - 21 - 22 - 23 - 96 - 25 - 26 - 27 - 94 - 29 - 30 - 31 - 110", "x2": "add INT- 6 mul n idiv x_0_4 abs x_0_2", "tree": "(-6 add (n mul (x_0_4 idiv abs(x_0_2))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 - 8 - 10 - 2 + 8 + 10 + 2 - 8 - 10 - 2 + 8 + 10 + 2 - 8 - 10 - 2 + 8 + 10 + 2 - 8 - 10 - 2 + 8", "x2": "sub x_0_1 add mod x_0_1 add sign INT- 7 idiv sign n INT- 6 x_0_2", "tree": "(x_0_1 sub ((x_0_1 mod (sign(-7) add (sign(n) idiv -6))) add x_0_2))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 22 + 85 + 369 + 1886 + 1 1370 + 7 9660 + 63 7368 + 573 6420 + 5736 4330 + 6 3100 7784 + 75 7209 3588 + 984 3721 6852 + 1 3781 2103 6166 + 20 6718 1554 2760 + 330 7490 4868 4464 + 5622 7338 2763 6228 + 10 1209 2088 9745 2482 + 192 2974 9690 5159 7576 + 3845 9499 3810 3195 1980 + 8 764 9487 16 7099 2084 + 177 6828 8714 367 6182 6398 + 4086 7064 422 8455 2200 7752", "x2": "add add idiv INT+ 5 n mul add INT+ 3 x_0_1 n mul n n", "tree": "(((5 idiv n) add ((3 add x_0_1) mul n)) add (n mul n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 8 + 10 + 4 + 1 - 1 + 9 + 3 + 0 - 1 + 8 + 2 - 1 - 1 + 7 + 1 - 1 - 1 + 6 + 0 - 1 - 1 + 5 - 1 - 1 - 1 + 4", "x2": "sub relu x_0_4 idiv add n relu add sub n INT+ 5 sign x_0_4 n", "tree": "(relu(x_0_4) sub ((n add relu(((n sub 5) add sign(x_0_4)))) idiv n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 64 + 16 - 16 - 32 - 32 - 16 + 16 + 64 + 128 + 208 + 304 + 416 + 544 + 688 + 848 + 1024 + 1216 + 1424 + 1648 + 1888 + 2144 + 2416", "x2": "mul INT+ 8 sub relu sqr sub n mul sub abs relu INT+ 6 INT+ 4 add n INT- 2 n", "tree": "(8 mul (relu(((n sub ((abs(relu(6)) sub 4) mul (n add -2))))**2) sub n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 1 - 8 + 8 + 0 + 5 + 1 + 8 + 8 + 0 + 5 + 1 + 8 + 8 + 0 + 5 + 1 + 8 + 8 + 0 + 5 + 1 + 8 + 8 + 0 + 5 + 1 + 8", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "add sqr n mod INT- 3 abs mod INT+ 6 INT- 9", "tree": "((n)**2 add (-3 mod abs((6 mod -9))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 7 + 3 - 10 + 1 - 11 + 1 - 10 + 3 - 7 + 7 - 2 + 13 + 5 + 21 + 14 + 31 + 25 + 43 + 38 + 57 + 53 + 73 + 70 + 91", "x2": "add INT- 6 add n x_0_2", "tree": "(-6 add (n add x_0_2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 7 - 4 + 5 + 8 + 9 + 9 + 4 + 4 + 16 + 16 + 16 + 4 + 4 + 64 + 64 + 64 + 4 + 4 + 1024 + 1024 + 1024 + 4 + 4 + 26 2144 + 26 2144 + 26 2144", "x2": "sqr idiv x_0_5 INT+ 2", "tree": "((x_0_5 idiv 2))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 4 + 3 + 2 + 6 + 5 + 9 + 8 + 12 + 11 + 15 + 14 + 18 + 17 + 21 + 20 + 24 + 23 + 27 + 26 + 30 + 29 + 33 + 32", "x2": "mod INT- 4 relu add x_0_2 INT+ 7", "tree": "(-4 mod relu((x_0_2 add 7)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 10 + 9 + 17 + 30 + 39 + 59 + 86 + 111 + 149 + 196 + 243 + 305 + 378 + 453 + 545 + 650 + 759 + 887 + 1030 + 1179 + 1349 + 1536 + 1731 + 1949", "x2": "sub sqr n sub n x_0_3", "tree": "((n)**2 sub (n sub x_0_3))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 9 - 8 + 4 + 336 + 2288 + 2 124 + 20 1600 + 225 908 + 2728 5504 + 3 5758 9336 + 50 4011 9560 + 760 4072 520 + 1 2227 6348 1280 + 20 8781 6446 2508 + 377 2585 1475 8496 + 7192 4729 3313 9460 + 14 4289 6535 1605 80 + 303 8413 1114 5759 2456 + 6701 1082 1985 6077 2360 + 15 4472 8854 9936 412 3552 + 371 4967 7456 9029 7340 7584 + 9304 8902 3961 6624 5085 1900 + 24 2345 2953 8295 1256 4410 2144 + 655 3749 8951 1089 751 7415 5596 + 1 8377 5446 7149 9119 4695 1707 7952", "x2": "mul add INT+ 2 abs n add mul x_0_4 n add sqr idiv INT+ 4 INT- 3 x_0_1", "tree": "((2 add abs(n)) mul ((x_0_4 mul n) add (((4 idiv -3))**2 add x_0_1)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 8 + 2 + 7 - 151 - 818 + 1 8008 + 11 7956 - 308 3450 - 2361 5746 + 7 1287 1207 + 62 3880 3352 - 2132 6874 5452 - 2 972 2978 7614 + 80 78 5874 8804 + 872 7470 5420 8308 - 3 6734 4838 7171 9101 - 43 9977 7657 2951 8402 + 2024 5261 612 6590 6464 + 2 6403 9024 2609 6353 9664 - 131 8197 9223 3680 2341 1444 - 1859 1251 1612 2564 8013 8006 + 10 65 1915 3549 5571 1683 1993 + 151 7236 2028 5348 771 6746 8684 - 8756 6929 779 7615 789 8385 2196 - 14 2027 8097 6299 1556 2342 145 2714", "x2": "sub INT+ 4 add mul mul n add INT+ 1 0 n x_0_2 add n mul mul n INT- 3 mul sign n x_0_4", "tree": "(4 sub (((n mul (10 add n)) mul x_0_2) add (n add ((n mul -3) mul (sign(n) mul x_0_4)))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 4 - 3 - 6 + 8 - 54 + 9 + 0 - 9 - 27 + 9 - 45 - 54 + 9 + 9 - 18 + 0 - 9 - 45 - 54 + 9 - 9 - 9 - 9 - 9 - 45 - 45", "x2": "mul add idiv x_0_5 n mod n INT+ 7 INT- 9", "tree": "(((x_0_5 idiv n) add (n mod 7)) mul -9)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 2 - 4 - 8 - 10 - 4 + 16 + 4 + 16 + 64 + 100 + 16 + 256 + 16 + 256 + 4096 + 1 0 + 256 + 6 5536 + 256 + 6 5536 + 1677 7216 + 1 0 0 + 6 5536 + 42 9496 7296 + 6 5536 + 42 9496 7296 + 281 4749 7671 656", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 + 5 + 8 + 12 + 17 + 23 + 30 + 38 + 47 + 57 + 68 + 80 + 93 + 107 + 122 + 138 + 155 + 173 + 192 + 212 + 233 + 255 + 278", "x2": "add n abs x_0_1", "tree": "(n add abs(x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 + 6 + 0 + 6 - 8 + 3 + 7 - 9 + 4 - 3 - 1 - 6 + 6 + 2 - 7 + 6 - 2 + 2 + 1 + 6 - 6 - 7 + 4 - 5 + 1 - 2 - 1 - 6 + 2 + 8", "x2": "sub mod sub n INT- 9 x_0_1 x_0_8", "tree": "(((n sub -9) mod x_0_1) sub x_0_8)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 10 - 4 + 8 - 1 + 2 + 3 - 2 - 2 - 13 - 2 + 5 - 4 - 1 + 5 + 0 - 5 - 16 + 0 + 7 - 7 - 4 + 7 + 2 - 8 - 19 + 2 + 9 - 10 - 7 + 9", "x2": "sub x_0_8 mod INT- 7 mul sign add x_0_6 relu x_0_2 INT+ 5", "tree": "(x_0_8 sub (-7 mod (sign((x_0_6 add relu(x_0_2))) mul 5)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 7 + 14 - 28 + 56 - 112 + 224 - 448 + 896 - 1792 + 3584 - 7168 + 1 4336 - 2 8672 + 5 7344 - 11 4688 + 22 9376 - 45 8752 + 91 7504 - 183 5008 + 367 16 - 734 32 + 1468 64 - 2936 128", "x2": "mul mul INT+ 1 INT- 2 x_0_1", "tree": "((1 mul -2) mul x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 - 2 + 10 + 9216 + 6400 + 9216 + 0 + 1 6384 + 0 + 0 + 3 976 + 0 + 0 + 5 176 + 0 + 0 + 7 3984 + 0 + 0 + 10 2400 + 0 + 0 + 13 5424 + 0 + 0", "x2": "mul sqr mod x_0_3 INT- 6 sqr mul abs INT- 8 n", "tree": "(((x_0_3 mod -6))**2 mul ((abs(-8) mul n))**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 9 - 4 + 6 + 4 - 4 + 2 + 13 + 12 + 5 + 12 + 24 + 24 + 18 + 26 + 39 + 40 + 35 + 44 + 58 + 60 + 56 + 66 + 81 + 84 + 81", "x2": "add add sign idiv idiv INT+ 5 abs x_0_1 mod INT+ 9 INT- 3 x_0_4 n", "tree": "((sign(((5 idiv abs(x_0_1)) idiv (9 mod -3))) add x_0_4) add n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323 - 360 - 399 - 440 - 483 - 528", "x2": "sub abs sign add INT- 9 x_0_1 sqr n", "tree": "(abs(sign((-9 add x_0_1))) sub (n)**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 3 - 7 - 3 + 7 + 1 + 0 + 7 + 4 - 4 + 3 + 154 + 3604 + 208 + 5492 + 210 + 4650 + 170 + 5050 + 437 + 2 4191 - 2793 + 78 7935 - 4255 + 93 3745 - 4625 + 80 9777 - 3861 + 64 3951 - 1 1832 + 594 1626 + 8 7544 + 2 9411 8402", "x2": "add mul sub n x_0_10 n relu sub idiv sqr x_0_1 abs mod x_0_2 sub INT+ 2 n n", "tree": "(((n sub x_0_10) mul n) add relu((((x_0_1)**2 idiv abs((x_0_2 mod (2 sub n)))) sub n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "- 10 + 9 + 8 - 890 - 909 - 908 - 10 + 9 + 8 - 890 - 909 - 908 - 10 + 9 + 8 - 890 - 909 - 908 - 10 + 9 + 8 - 890 - 909 - 908 - 10", "x2": "sub mul mul INT- 1 0 INT- 9 INT- 1 0 x_0_3", "tree": "(((-10 mul -9) mul -10) sub x_0_3)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 0 + 0 + 1 - 4 + 4 - 4 - 5 + 8 + 1808 - 28 + 16 + 345 + 2000 - 47 5504 - 6832 + 5104 - 18 1815 - 2 3145 2000 - 8 5020 1152 + 704 3792 - 1 1269 6320 + 232 7232 0 - 7043 6046 6409 6000 - 371 7470 5290 7392 - 2 3010 6597 560 - 1311 3500 4430 8480 + 3 4473 1200 3667 8144 0 - 383 2627 7113 5145 8752 8531 2000 + 1675 8457 5167 6951 6355 8400 - 165 9658 6671 5913 8588 5440", "x2": "mul sub mul mul INT- 1 sqr INT+ 8 x_0_9 abs mod x_0_5 sub mod n abs n n x_0_5", "tree": "((((-1 mul (8)**2) mul x_0_9) sub abs((x_0_5 mod ((n mod abs(n)) sub n)))) mul x_0_5)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 5 + 7 + 2 + 8 + 5 + 4 + 12 + 2 + 12 + 11 + 3 + 22 + 3 + 15 + 23 - 3 + 36 + 6 + 11 + 46 - 18 + 52 + 18 - 11", "x2": "sub add x_0_3 n x_0_1", "tree": "((x_0_3 add n) sub x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2 - 1 + 0 - 2", "x2": "mod mul n mul n n idiv sqr INT- 3 INT- 3", "tree": "((n mul (n mul n)) mod ((-3)**2 idiv -3))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 5 + 4 - 3 + 56 + 80 + 522 + 861 + 4640 + 8424 + 4 7340 + 9 3940 + 56 9748 + 122 3339 + 797 9160 + 1835 3370 + 1 2767 560 + 3 1201 2135 + 22 9807 5822 + 59 2823 7310 + 459 6152 4360 + 1244 9299 2645 + 1 111 5354 6480 + 2 8633 3884 2887 + 24 2676 8512 9248", "x2": "mul add x_0_2 sub INT- 1 0 sub sub mod idiv x_0_1 n mod INT- 1 INT+ 4 sqr n INT+ 6 n", "tree": "((x_0_2 add (-10 sub ((((x_0_1 idiv n) mod (-1 mod 4)) sub (n)**2) sub 6))) mul n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 10 + 2 - 2 - 1 + 4 + 7 + 1 - 9 + 2 - 3 - 5 + 1 + 1 - 6 - 15 - 5 - 13 - 16 - 11 - 12 - 20 - 30 - 21 - 30 - 34 - 30 - 32 - 41", "x2": "add sub x_0_7 INT- 9 sub sign x_0_3 n", "tree": "((x_0_7 sub -9) add (sign(x_0_3) sub n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 2 - 7 - 14 - 18 - 23 - 27 - 31 - 36 - 40 - 44 - 49 - 53 - 57 - 62 - 66 - 70 - 75 - 79 - 83 - 88 - 92 - 96 - 101 - 105", "x2": "add idiv sub sub x_0_1 relu x_0_2 n INT- 8 mul INT- 5 n", "tree": "((((x_0_1 sub relu(x_0_2)) sub n) idiv -8) add (-5 mul n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 6 - 10 - 7 - 49 - 49 + 79 + 55 + 391 + 391 - 633 - 441 - 3129 - 3129 + 5063 + 3527 + 2 5031 + 2 5031 - 4 505 - 2 8217 - 20 249 - 20 249 + 32 4039 + 22 5735 + 160 1991 + 160 1991", "x2": "add sign INT- 9 mul x_0_4 INT- 8", "tree": "(sign(-9) add (x_0_4 mul -8))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 35 + 314 + 5023 + 12 5574 + 452 663 + 2 2151 2486 + 141 7679 9103 + 1 1483 2072 7342 + 114 8320 7273 4199 + 1 3894 6808 83 8078 + 200 834 353 2068 3231 + 3 3814 951 9691 9546 6038 + 662 7562 6585 9623 1134 3447 + 14 9120 1598 1841 5200 5227 5574 + 3817 4760 9135 1429 1333 8254 6943 + 110 3250 5904 56 3019 5475 5606 6526 + 3 5745 3191 2897 8241 8333 4081 6555 4423 + 1290 4060 2055 6114 5301 8360 3477 6514 6702 + 51 6162 4082 2244 5812 734 4139 1060 5868 799 + 2 2762 7622 260 9860 3124 3876 5345 7718 7823 2358 + 1101 7176 9060 6317 2391 2203 6242 7353 5890 6446 1271 + 58 2808 6583 3074 1819 4955 5717 2407 48 6151 1 2358", "x2": "sub mul sqr n abs abs x_0_1 sign n", "tree": "(((n)**2 mul abs(abs(x_0_1))) sub sign(n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 6 + 6 - 4 + 7 + 6 + 6 + 0 + 7 + 6 + 6 + 0 + 7 + 6 + 6 + 0 + 7 + 6 + 6 + 0 + 7 + 6 + 6 + 0 + 7 + 6", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 10 - 2 + 0 + 4 + 3 - 5 - 4 + 0 + 2 + 2 + 3 + 4 + 14 - 1 + 15 + 1 + 11 + 4 - 2 + 2 + 1 + 1 + 1", "x2": "idiv sub n sub INT- 7 INT+ 8 sub n mul mul sign x_0_1 x_0_1 x_0_2", "tree": "((n sub (-7 sub 8)) idiv (n sub ((sign(x_0_1) mul x_0_1) mul x_0_2)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 8 + 5 - 2 + 9 + 5 - 4 - 4 + 5 + 16 - 4 - 4 + 3 + 12 + 2 - 4 - 4 + 10 + 19 - 4 - 4 + 3 + 17 + 5 - 4 - 4 + 10", "x2": "mod INT- 4 sub mul x_0_2 INT- 3 sub INT+ 1 x_0_5", "tree": "(-4 mod ((x_0_2 mul -3) sub (1 sub x_0_5)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 10 + 2 + 0 + 3 + 7 + 10 + 2 + 0 + 3 + 7 + 10 + 2 + 0 + 3 + 7 + 10 + 2 + 0 + 3 + 7 + 10 + 2 + 0 + 3 + 7 + 10 + 2", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 8 - 7 - 9 + 9 + 7 + 7 + 5 + 3 + 8 + 7 + 9 + 9 + 7 + 7 + 5 + 3 + 8 + 7 + 9 + 9 + 7 + 7 + 5 + 3 + 8 + 7 + 9 + 9 + 7", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "- 1 - 6 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0 + 0 + 8 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 9 - 4 - 4 + 10 + 6 - 1 - 6 - 9 + 7 - 9 + 9 + 9 + 9 - 9 - 9 + 9 + 9 + 9 - 9 + 9 - 9 - 9 - 9 + 9 + 9 - 9 - 9 - 9 + 9 - 9 + 9", "x2": "idiv INT- 9 sign x_0_10", "tree": "(-9 idiv sign(x_0_10))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "- 4 + 3 - 4 - 1 + 10 + 15 + 24 + 45 + 72 + 109 + 168 + 255 + 380 + 565 + 838 + 1237 + 1822 + 2681 + 3940 + 5785 + 8490 + 1 2455 + 1 8266 + 2 6783 + 3 9266", "x2": "sub sub n sub INT- 4 add x_0_3 x_0_1 sign n", "tree": "((n sub (-4 sub (x_0_3 add x_0_1))) sub sign(n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 9 - 1 - 9 - 2 + 3 + 5 + 0 + 0 + 0 + 0 + 33 + 60 + 0 + 0 + 0 + 0 + 561 + 1080 + 0 + 0 + 0 + 0 + 1 2903 + 2 5920 + 0 + 0 + 0 + 0", "x2": "relu mul n x_0_6", "tree": "relu((n mul x_0_6))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 8 - 512 - 1 2800 - 46 800 - 2257 9200 - 14 4506 8800 - 1170 5057 2800 - 11 7050 5728 0 - 1416 3119 3088 0 - 20 3948 9180 4672 0 - 3446 7367 1498 9568 0 - 67 5560 3961 3795 5328 0 - 1 5200 1089 1310 3994 8800 0 - 389 1227 8817 5462 2689 2800 0 - 11 2456 4857 8270 8595 7201 9200 0 - 3643 5901 3935 9758 5013 3422 800 0 - 131 5336 403 887 2818 9816 5370 8800 0 - 5 2613 4416 1235 4912 7592 6614 8352 0 0 - 2320 2527 7510 4851 6526 8363 7142 3232 0 0 - 112 3002 3431 5074 8199 8988 8037 6884 4288 0 0 - 5 9406 8239 5267 4579 7746 5077 1937 1862 8352 0 0 - 3421 8330 5967 4055 7950 1988 4463 5819 2993 752 0 0 - 213 8645 6622 9628 4871 8874 2778 9738 7062 672 0 0 0", "x2": "mul sqr add add n relu x_0_2 abs INT+ 1 x_0_1", "tree": "((((n add relu(x_0_2)) add abs(1)))**2 mul x_0_1)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 2 - 5 - 2 + 3 + 13 + 13 + 14 + 7 + 11 + 24 + 45 + 56 + 51 + 42 + 56 + 107 + 173 + 211 + 203 + 194 + 264 + 446 + 667 + 801 + 814 + 858", "x2": "sub add add abs x_0_5 x_0_4 sub relu x_0_1 INT- 1 x_0_3", "tree": "(((abs(x_0_5) add x_0_4) add (relu(x_0_1) sub -1)) sub x_0_3)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 6 - 3 - 1 + 14 - 6 + 2 - 27 + 1 - 82 + 2 - 59 + 5 - 30 + 11 - 15 + 24 - 5 + 73 + 5 - 70 + 18 - 14 + 51", "x2": "sub sub mod INT- 5 n idiv relu sqr n x_0_1 INT+ 5", "tree": "(((-5 mod n) sub (relu((n)**2) idiv x_0_1)) sub 5)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 + 10 - 4 - 1 - 1400 - 918 - 1554 - 1264 - 8 9046 - 6 4490 - 11 8976 - 10 4244 - 809 9624 - 631 4406 - 1248 4350 - 1166 4176 - 9 6384 534 - 7 9559 6274 - 16 6039 4876 - 16 3295 5500 - 1416 8452 3176 - 1225 2178 3934 - 2673 2352 5034 - 2743 3646 5416 - 24 7947 9148 7750 - 22 2989 6459 7546", "x2": "mul add n add mul add sub mul sub sqr INT+ 3 n n INT- 7 sub INT+ 9 x_0_4 INT- 7 INT+ 9 n", "tree": "((n add (((((((3)**2 sub n) mul n) sub -7) add (9 sub x_0_4)) mul -7) add 9)) mul n)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 7 + 1 + 3 - 4 + 13 - 3 - 6 - 1 - 4 - 6 - 39 - 94 - 32 - 4 - 4 - 4 - 732 - 3 - 6 - 4 - 9 - 7 6392 - 186 - 15 - 4 - 4", "x2": "add idiv sqr mul idiv n n mod x_0_1 sub abs x_0_5 mul n INT+ 2 x_0_3 INT- 3", "tree": "(((((n idiv n) mul (x_0_1 mod (abs(x_0_5) sub (n mul 2)))))**2 idiv x_0_3) add -3)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600", "x2": "add add x_0_1 n idiv add n relu add sub sign INT- 1 0 x_0_2 INT- 9 relu sign n", "tree": "((x_0_1 add n) add ((n add relu(((sign(-10) sub x_0_2) add -9))) idiv relu(sign(n))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 - 3 - 10 + 3 - 9 - 182 + 8 - 189 - 2020 + 0 - 2520 - 2 8795 - 84 - 4 860 - 49 3296 - 1717 - 78 1164 - 992 90 - 3 6420 - 1726 2945 - 2 2909 4976 - 87 7680 - 4 3305 9192 - 59 7537 7275 - 2376 7276 - 121 5869 8428 - 1737 2522 3812", "x2": "mul add sub x_0_6 n x_0_3 n", "tree": "(((x_0_6 sub n) add x_0_3) mul n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 5 - 1 + 8 + 2 + 5 - 6 + 6 + 8 + 54 + 73 + 486 + 662 + 4374 + 5958 + 3 9364 + 5 3627 + 35 4278 + 48 2662 + 318 8522 + 434 3979 + 2869 6720 + 3909 5834 + 2 5827 504 + 3 5186 2531 + 23 2443 4562 + 31 6676 2806 + 209 1991 1086 + 285 86 5283 + 1882 7919 9804 + 2565 778 7578", "x2": "sub mod n idiv x_0_9 sign relu idiv abs x_0_8 relu INT+ 4 mul INT- 9 x_0_2", "tree": "((n mod (x_0_9 idiv sign(relu((abs(x_0_8) idiv relu(4)))))) sub (-9 mul x_0_2))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 10 + 8 - 4 + 0 + 0 + 1 + 9 - 270 - 410 - 440 + 2832 + 4940 + 5740 - 4 3125 - 7 9600 - 10 2680 + 76 8330 + 150 3470 + 205 3400 - 1613 5119 - 3307 6516 - 4822 765 + 3 8533 1736 + 8 2434 5150 + 12 5373 9786 - 104 395 6953 - 230 8166 4256 - 368 2637 3115 + 3111 2641 2210", "x2": "mul n add sub mod n sub x_0_8 abs n x_0_3 mul INT- 1 0 INT+ 3", "tree": "(n mul (((n mod (x_0_8 sub abs(n))) sub x_0_3) add (-10 mul 3)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 2 + 1 - 5 + 5 - 8 + 2 - 10 - 192 + 0 - 600 + 484 - 1296 + 169 - 2156 - 4 3425 - 256 - 17 3689 + 15 6492 - 46 8217 + 6 7200 - 95 1237 - 2101 8184 - 13 5953 - 1 4 5440 + 9780 6875 - 3 1651 5368 + 4898 8071 - 7 4577 592 - 176 7629 3585", "x2": "mul sqr n sub x_0_7 INT+ 1", "tree": "((n)**2 mul (x_0_7 sub 1))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 2 + 0 + 8 + 0 + 40 + 0 + 280 + 0 + 2520 + 0 + 2 7720 + 0 + 36 360 + 0 + 540 5400 + 0 + 9189 1800 + 0 + 17 4594 4200 + 0 + 366 6482 8200 + 0 + 8432 9104 8600", "x2": "abs sub relu x_0_2 mul mod n add n n x_0_2", "tree": "abs((relu(x_0_2) sub ((n mod (n add n)) mul x_0_2)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 10 - 2 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0 - 1 + 0 + 0 + 0", "x2": "idiv x_0_4 add INT- 3 abs add sqr n INT- 2", "tree": "(x_0_4 idiv (-3 add abs(((n)**2 add -2))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "idiv sqr n sign INT+ 6", "tree": "((n)**2 idiv sign(6))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 3 + 6 - 6 + 3 - 10 + 126 + 0 + 810 + 0 + 693 + 0 + 1 5210 + 0 + 10 9890 + 0 + 10 6641 + 0 + 260 1594 + 0 + 2076 9966 + 0 + 2207 5515 + 0 + 5 8535 9550 + 0 + 50 4710 2710 + 0", "x2": "mul n relu mul add x_0_6 mod INT+ 4 x_0_2 INT+ 9", "tree": "(n mul relu(((x_0_6 add (4 mod x_0_2)) mul 9)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 6 + 4 + 7 + 0 - 2 - 10 + 30 + 30 + 20 + 35 + 0 + 0 + 0 + 150 + 150 + 100 + 175 + 0 + 0 + 0 + 750 + 750 + 500 + 875 + 0 + 0 + 0 + 3750", "x2": "relu mul x_0_7 abs INT+ 5", "tree": "relu((x_0_7 mul abs(5)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462", "x2": "sub abs mul n n add sqr relu idiv mul INT- 8 INT+ 7 n n", "tree": "(abs((n mul n)) sub ((relu(((-8 mul 7) idiv n)))**2 add n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 14 - 25 - 38 - 53 - 70 - 89 - 110 - 133 - 158 - 185 - 214 - 245 - 278 - 313 - 350 - 389 - 430 - 473 - 518 - 565 - 614 - 665", "x2": "add add sub n INT+ 5 relu n mul n sub INT- 1 0 n", "tree": "(((n sub 5) add relu(n)) add (n mul (-10 sub n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 9 - 6 + 9 + 10 + 10 - 10 + 10 + 5 + 10 - 9 + 7 + 2 + 1 + 2 + 2 + 6 + 2 + 5 + 2 + 7 + 7 + 2 + 1 + 2 + 2 + 6 + 2 + 5 + 2 + 7 + 7 + 2", "x2": "abs mod x_0_10 INT+ 8", "tree": "abs((x_0_10 mod 8))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 6 - 8 + 0 - 32 + 50 - 312 - 2052 - 4864 - 3 6774 - 9 7080 - 80 8786 - 232 9632 - 2102 8098 - 6522 9304 - 6 3084 2490 - 20 8733 7216 - 214 4864 4082 - 751 4413 9128 - 8150 4847 4394 - 3 57 6556 4320 - 34 2320 3592 3666 - 132 2536 8482 9112 - 1574 6736 5248 7578 - 6348 1768 7179 6224", "x2": "mul add n x_0_2 sub add n n relu x_0_2", "tree": "((n add x_0_2) mul ((n add n) sub relu(x_0_2)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 9 - 6 + 5 + 0 - 1 + 0 - 4 - 4 + 5 + 2 - 5 - 2 + 1 - 2 + 0 + 0 - 4 - 4 + 1 - 2 - 4 - 4 - 3 - 6 - 2 - 6 - 6 - 9", "x2": "add add x_0_4 x_0_6 abs idiv sqr x_0_1 n", "tree": "((x_0_4 add x_0_6) add abs(((x_0_1)**2 idiv n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 10 4976 + 41 9904 + 94 4784 + 167 9616 + 262 4400 + 377 9136 + 514 3824 + 671 8464 + 850 3056 + 1049 7600 + 1270 2096 + 1511 6544 + 1774 944 + 2057 5296 + 2361 9600 + 2687 3856 + 3033 8064 + 3401 2224 + 3789 6336 + 4199 400 + 4629 4416 + 5080 8384", "x2": "sqr mul n sqr sub INT- 9 INT+ 9", "tree": "((n mul ((-9 sub 9))**2))**2", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 5 + 0 + 16 + 0 - 72 + 0 + 432 + 0 - 2580 + 0 + 1 5480 + 0 - 9 2820 + 0 + 55 6992 + 0 - 334 1952 + 0 + 2005 1760 + 0 - 1 2031 476 + 0 + 7 2186 2928", "x2": "mul n mul add mod INT- 5 n add sub idiv INT- 6 INT+ 4 n sign n idiv x_0_2 n", "tree": "(n mul (((-5 mod n) add (((-6 idiv 4) sub n) add sign(n))) mul (x_0_2 idiv n)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 9 - 8 - 2 - 3 + 8 + 6 - 4 + 0 - 15 + 0 - 5 + 5 - 5 - 10 + 0 - 15 + 10 - 5 + 5 - 10 - 5 + 5 - 15 + 15 - 15 + 5 - 15 + 0 + 5", "x2": "mul idiv sub x_0_8 x_0_7 INT- 7 mul INT+ 5 INT+ 1", "tree": "(((x_0_8 sub x_0_7) idiv -7) mul (5 mul 1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 6 + 2 - 7 - 1 + 6 + 21 + 32 + 81 + 60 + 77 + 36 + 104 + 70 + 45 + 128 + 136 + 216 + 361 + 100 + 525 + 242 + 253 + 240 + 150 + 520 + 621", "x2": "mul add mod mul mul INT+ 1 x_0_5 x_0_4 n idiv n sqr idiv mul INT- 2 n n n", "tree": "(((((1 mul x_0_5) mul x_0_4) mod n) add (n idiv (((-2 mul n) idiv n))**2)) mul n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 6 - 2 + 7 - 6 - 9 - 9 - 9 + 13 - 4 - 16 - 3 + 0 + 22 + 5 - 29 + 1 + 16 + 25 + 5 - 51 - 4 + 45 + 24 - 11 - 76 - 9 + 96 + 28 - 56", "x2": "add x_0_5 sub idiv add abs add INT+ 9 x_0_1 n sub sqr n mul n INT+ 5 x_0_7", "tree": "(x_0_5 add (((abs((9 add x_0_1)) add n) idiv ((n)**2 sub (n mul 5))) sub x_0_7))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 8 - 9 + 48 - 150 - 3672 - 392 - 576 - 810 + 11 4100 - 1452 - 1728 - 2366 + 67 4436 - 3600 - 4096 - 5202 + 264 8052 - 7220 - 8000 - 9702 + 773 2868 - 1 2696 - 1 3824", "x2": "mul sub idiv abs INT+ 8 x_0_2 sub n mul x_0_2 mod x_0_1 INT- 4 mul n n", "tree": "(((abs(8) idiv x_0_2) sub (n sub (x_0_2 mul (x_0_1 mod -4)))) mul (n mul n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 3 - 5 + 8 + 2 + 8 + 1 - 10 - 15 + 0 + 18 + 30 + 42 + 38 + 37 + 63 + 113 + 161 + 204 + 232 + 248 + 295 + 394 + 516 + 632 + 729 + 800 + 891 + 1066 + 1317", "x2": "sub abs n sub sub x_0_8 sub x_0_1 idiv mod add add n x_0_3 x_0_5 n abs n x_0_6", "tree": "(abs(n) sub ((x_0_8 sub (x_0_1 sub ((((n add x_0_3) add x_0_5) mod n) idiv abs(n)))) sub x_0_6))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 8 + 4 + 4 + 5 + 22 + 3 + 8 + 10 + 27 + 0 + 17 + 15 + 31 + 0 + 33 + 15 + 34 + 0 + 53 + 3 + 41 + 0 + 77 + 0 + 64 + 0", "x2": "relu sub add sub n idiv sign sqr INT- 8 idiv sqr n INT+ 8 x_0_4 x_0_5", "tree": "relu((((n sub (sign((-8)**2) idiv ((n)**2 idiv 8))) add x_0_4) sub x_0_5))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "mul relu n n", "tree": "(relu(n) mul n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 5 + 9 - 7 - 6 - 6 + 12 - 5 - 2 - 29 + 61 + 2 - 4 - 45 - 1 + 3 - 12 - 1 + 26 - 12 - 1 - 32 - 58 - 13 + 258 - 16 - 1 - 31", "x2": "idiv add x_0_6 mul x_0_3 n sub add INT- 1 0 relu add n INT+ 7 sub add x_0_4 x_0_3 x_0_2", "tree": "((x_0_6 add (x_0_3 mul n)) idiv ((-10 add relu((n add 7))) sub ((x_0_4 add x_0_3) sub x_0_2)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648", "x2": "mul sub sqr n idiv sign INT+ 1 0 sqr n n", "tree": "(((n)**2 sub (sign(10) idiv (n)**2)) mul n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 0 + 5 - 3 + 4 + 8 + 4 + 5 + 22 + 22 + 18 + 13 + 33 + 31 + 30 + 4 + 21 + 31 + 33 - 4 + 16 + 11 + 59 + 0 + 8 - 8 + 81 + 18 + 34", "x2": "sub sub mod add INT+ 4 x_0_2 n relu idiv mul x_0_7 n abs n sub INT- 1 0 x_0_4", "tree": "((((4 add x_0_2) mod n) sub relu(((x_0_7 mul n) idiv abs(n)))) sub (-10 sub x_0_4))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 6 - 10 - 9 + 4 + 7 - 10 + 9 + 10 + 56 + 165 + 242 + 251 + 310 + 401 + 472 + 516 + 3487 + 3 470 + 8 8783 + 15 1474 + 24 7173 + 40 7502 + 62 9770 + 89 2539 + 1302 1238 + 9 4135 3355 + 88 2362 2970 + 317 6774 8473 + 928 6183 2900 + 2589 1908 3134", "x2": "add sub sqr x_0_8 x_0_7 abs x_0_1", "tree": "(((x_0_8)**2 sub x_0_7) add abs(x_0_1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 5 + 7 + 7 - 4 - 3 + 3 - 10 - 3 + 4 - 8 - 8 + 0 + 0 - 2 + 3 + 3 - 2 + 3 + 4 + 2 + 0 + 0 + 0 + 2 + 3 + 3 + 2 + 3 + 4 + 2 + 0 + 0", "x2": "mod abs x_0_10 add sub mod abs idiv x_0_10 n INT- 9 sub x_0_8 n INT- 9", "tree": "(abs(x_0_10) mod (((abs((x_0_10 idiv n)) mod -9) sub (x_0_8 sub n)) add -9))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "10"}
{"x1": "+ 4 + 9 + 3 - 9 + 140 + 378 + 147 - 504 + 8820 + 2 6460 + 1 1319 - 4 2336 + 80 2620 + 259 3080 + 118 8495 - 474 1632 + 9551 1780 + 3 2672 8080 + 1 5806 9835 - 6 6382 8480 + 140 4023 1660 + 503 1612 4320 + 254 4924 3435 - 1115 2318 4640 + 2 4570 4054 500 + 9 1575 3462 6240", "x2": "mul mul n x_0_4 mul INT+ 7 idiv n n", "tree": "((n mul x_0_4) mul (7 mul (n idiv n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 3 + 10 + 5 + 9 + 7 + 4 + 10 - 3 + 7 + 9 + 8 + 2 + 8 + 5 + 8 + 12 + 7 + 21 + 12 + 11 + 13 + 20 + 15 + 19 + 17 + 14 + 20 + 7 + 17 + 19 + 18", "x2": "sub mod INT- 6 relu relu add INT+ 5 n x_0_10", "tree": "((-6 mod relu(relu((5 add n)))) sub x_0_10)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "- 10 - 5 + 5 + 3 - 8 - 8 - 2 + 9 + 8 - 2 - 1 + 6 + 18 + 18 + 9 + 11 + 19 + 32 + 33 + 25 + 28 + 37 + 51 + 53 + 46 + 50 + 60", "x2": "add add mod INT- 4 INT- 7 x_0_5 n", "tree": "(((-4 mod -7) add x_0_5) add n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 12 + 45 - 164 + 845 - 5034 + 3 5287 - 28 2232 + 254 169 - 2540 1590 + 2 7941 7611 - 33 5301 1188 + 435 8914 5613 - 6102 4803 8386 + 9 1537 2057 6015 - 146 4595 2921 5984 + 2489 8119 9667 2017 - 4 4816 6159 4009 5982 + 85 1515 7028 6182 4019 - 1703 314 572 3647 9980 + 3 5763 6595 2019 6608 21 - 78 6800 5094 4432 5375 9978 + 1809 6411 7172 1948 3648 23", "x2": "mul n sub n x_0_1", "tree": "(n mul (n sub x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 - 9 + 2 + 340 + 510 + 763 + 952 + 1764 + 3410 + 6237 + 8724 + 1 9604 + 4 3694 + 8 8695 + 13 3808 + 32 6468 + 77 8554 + 167 6009 + 266 5580 + 684 3732 + 1711 4438 + 3853 2659 + 6395 6424 + 1 7107 3700 + 4 4495 3522", "x2": "relu mul abs sub sqr add n INT+ 3 x_0_4 abs n", "tree": "relu((abs((((n add 3))**2 sub x_0_4)) mul abs(n)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 + 3 + 1 - 7 + 3 - 7 + 4 + 2 + 31 + 13 + 18 + 44 + 77 + 69 + 292 + 325 + 156 + 9071 + 4245 + 2829 + 39 9146 + 32 6888 + 19 5225 + 1 1655 657 + 1 623 8626 + 3045 5127 + 1 572 3100 9675 + 4509 8296 7399 + 861 5755 4313 + 42 1989 5285 8773 7581", "x2": "abs add mul x_0_3 x_0_9 n", "tree": "abs(((x_0_3 mul x_0_9) add n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 9 - 63 - 288 - 1800 - 1 692 - 8 8641 - 68 4864 - 718 650 - 6848 7300 - 8 6885 9739 - 98 6217 2496 - 1468 3729 7412 - 1 9329 8581 980 - 33 383 9191 9725 - 494 8443 6761 3184 - 9548 952 6480 3126 - 16 329 5751 667 4532 - 344 6862 3905 9393 1735 - 6413 1830 426 6981 6400 - 15 2006 6314 2519 2389 9104 - 310 3980 5740 6521 9114 1956 - 8041 1508 239 2677 4263 777 - 17 8789 2810 6615 6620 9777 1840", "x2": "mul mul add add x_0_2 INT- 1 0 abs idiv INT+ 8 x_0_1 n n", "tree": "((((x_0_2 add -10) add abs((8 idiv x_0_1))) mul n) mul n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 10 - 10 - 9 - 9 - 9 - 8 - 8 - 8 - 7 - 7 - 7 - 6 - 6 - 6 - 5 - 5 - 5 - 4 - 4 - 4 - 3 - 3 - 3 - 2", "x2": "add INT+ 1 sub sqr mod mul relu n x_0_2 n abs x_0_3", "tree": "(1 add ((((relu(n) mul x_0_2) mod n))**2 sub abs(x_0_3)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 10 + 5 + 5 - 2 + 10 - 6 - 1 - 2 + 80 + 110 + 60 + 65 - 28 + 150 - 96 - 17 - 36 + 1520 + 2200 + 1260 + 1430 - 644 + 3600 - 2400 - 442 - 972 + 4 2560 + 6 3800 + 3 7800 + 4 4330", "x2": "mul x_0_9 n", "tree": "(x_0_9 mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 3 + 2 - 10 - 8 - 2 + 15 + 9 + 4 + 105 + 64 + 7 + 226 + 81 + 28 + 1 1028 + 4096 + 49 + 5 1079 + 6561 + 787 + 1 2161 6793 + 1677 7216 + 2401 + 26 906 4244 + 4304 6721 + 61 9387 + 1 4790 6443 3960 4865", "x2": "add mod mul sqr INT- 3 idiv x_0_2 x_0_4 n sqr x_0_6", "tree": "((((-3)**2 mul (x_0_2 idiv x_0_4)) mod n) add (x_0_6)**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 10 - 4 - 7 + 7 - 10 - 4 - 7 + 7 - 10 - 4 - 7 + 7 - 10 - 4 - 7 + 7 - 10 - 4 - 7 + 7 - 10 - 4 - 7 + 7 - 10 - 4", "x2": "idiv x_0_4 idiv abs n abs n", "tree": "(x_0_4 idiv (abs(n) idiv abs(n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 4 - 8 - 6 + 11 + 10 + 15 + 14 + 20 + 20 + 26 + 26 + 33 + 34 + 41 + 42 + 50 + 52 + 60 + 62 + 71 + 74 + 83 + 86 + 96 + 100", "x2": "add n abs abs x_0_4", "tree": "(n add abs(abs(x_0_4)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 8 - 2 + 10 - 6 - 1 - 10 - 1 - 1 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 - 1 - 1 - 1 - 1 - 1 + 0 - 1 + 0 + 0 + 0 + 0", "x2": "idiv mul INT- 4 sign idiv x_0_7 sqr sign sub sqr INT+ 5 x_0_5 sqr n", "tree": "((-4 mul sign((x_0_7 idiv (sign(((5)**2 sub x_0_5)))**2))) idiv (n)**2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462", "x2": "sub n sqr n", "tree": "(n sub (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 10 - 8 - 8 + 3 + 8 + 2 - 16 + 2 + 2 - 9 - 14 - 8 + 10 - 8 - 8 + 3 + 8 + 2 - 16 + 2 + 2 - 9 - 14 - 8 + 10 - 8 - 8", "x2": "add sub idiv INT- 6 n x_0_6 INT- 5", "tree": "(((-6 idiv n) sub x_0_6) add -5)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 10 - 1 + 1 + 15 + 7 + 6 - 7 + 2 + 4 + 18 + 10 + 9 - 4 + 5 + 7 + 21 + 13 + 12 - 1 + 8 + 10 + 24 + 16 + 15", "x2": "sub n x_0_3", "tree": "(n sub x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 1 + 8 - 10 - 6 + 2 - 10 - 3 + 1 - 12 - 8 + 0 - 12 - 5 - 1 - 14 - 10 - 2 - 14 - 7 - 3 - 16 - 12 - 4 - 16 - 9 - 5 - 18 - 14", "x2": "mod INT+ 1 add x_0_6 INT- 3", "tree": "(1 mod (x_0_6 add -3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 9 + 5 + 10 + 6 + 15 + 7 + 25 + 8 + 46 + 9 + 92 + 9 + 204 + 9 + 498 + 9 + 1328 + 9 + 3836 + 9 + 1 1934 + 9 + 3 9780", "x2": "idiv mul add sub INT- 2 sign INT+ 1 add n x_0_1 x_0_2 x_0_1", "tree": "((((-2 sub sign(1)) add (n add x_0_1)) mul x_0_2) idiv x_0_1)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 1 - 6 + 7 + 1 + 31 + 8 + 49 + 64 + 11 + 100 + 97 + 131 + 113 + 166 + 65 + 205 + 91 + 343 + 121 + 43 + 155 + 507 + 169 + 526 + 443 + 541", "x2": "add relu mod mul n relu abs x_0_5 sqr n mod INT+ 1 add sign x_0_3 INT+ 4", "tree": "(relu(((n mul relu(abs(x_0_5))) mod (n)**2)) add (1 mod (sign(x_0_3) add 4)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 7 + 4 + 4 + 3 + 8 + 316 - 115 - 165 - 82 + 2776 - 3 9495 + 1 4559 + 2 6906 + 5 7908 - 125 6295 + 1035 8479 - 372 2954 - 761 6968 - 4603 327 + 7 2004 6459 - 46 4999 3786 + 16 2671 9956 + 29 2464 8753 + 445 1463 403 - 5709 2887 4686 + 3 1873 1723 8824 - 1 1039 8868 2111", "x2": "add mul add sub x_0_4 mul x_0_5 n relu n n x_0_4", "tree": "((((x_0_4 sub (x_0_5 mul n)) add relu(n)) mul n) add x_0_4)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 9 + 2 - 3 + 0 + 8 + 6 + 1 - 6 + 0 + 99 + 24 - 39 + 0 + 0 + 96 + 17 - 108 + 0 + 420 + 504 + 264 + 0 + 0 + 2400 + 442 - 2916 + 0 - 3132 + 1 5120 + 8184", "x2": "mul mod x_0_9 sub x_0_5 x_0_7 n", "tree": "((x_0_9 mod (x_0_5 sub x_0_7)) mul n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 9 - 5 - 27 - 14 - 135 - 66 - 933 - 306 - 8307 - 1818 - 9 1071 - 3606 - 118 3059 + 30 4428 - 1779 1551 + 792 828 - 3 404 535 + 2 1554 4630 - 58 4143 3557 + 51 8710 7628 - 1235 5932 3153 + 1388 2823 2446 - 2 8751 8320 8307 + 4 1944 3254 1194", "x2": "sub mul n x_0_2 mul INT- 6 idiv x_0_1 mul add mod n INT+ 5 INT- 8 INT+ 5", "tree": "((n mul x_0_2) sub (-6 mul (x_0_1 idiv (((n mod 5) add -8) mul 5))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 0 + 21 + 44 + 69 + 96 + 25 + 56 + 89 + 24 + 61 + 0 + 41 + 84", "x2": "mod sqr n sqr INT- 1 0", "tree": "((n)**2 mod (-10)**2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 1 + 9 + 0 + 8 - 1 + 7 - 2 + 6 - 3 + 5 - 4 + 4 - 5 + 3 - 6 + 2 - 7 + 1 - 8 + 0 - 9 - 1 - 10", "x2": "add relu mod mod relu INT+ 6 INT+ 6 INT+ 7 add INT- 1 x_0_2", "tree": "(relu(((relu(6) mod 6) mod 7)) add (-1 add x_0_2))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 8 + 24 + 96 + 480 + 2880 + 2 160 + 16 1280 + 145 1520 + 1451 5200 + 1 5966 7200 + 19 1600 6400 + 249 808 3200 + 3487 1316 4800 + 5 2306 9747 2000 + 83 6911 5955 2000 + 1422 7497 1238 4000 + 2 5609 4948 2291 2000 + 48 6580 4016 3532 8000 + 973 1608 327 656 0 + 2 436 3768 6868 3776 0 + 44 9600 2911 1104 3072 0 + 1034 806 6955 5399 656 0", "x2": "mul n mod x_0_1 mul n mod x_0_1 add n x_0_1", "tree": "(n mul (x_0_1 mod (n mul (x_0_1 mod (n add x_0_1)))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 6 - 7 - 3 + 7 + 5 + 4 - 9 + 9 + 0 + 4 + 0 + 9 + 121 + 324 + 0 + 9 + 0 + 36 + 1 6641 + 6724 + 0 + 1 7956 + 0 + 36 + 40 9600 + 46 5124 + 0 + 3 383 9761 + 0 + 36 + 3 5807 9929", "x2": "relu sqr add mod sqr n x_0_6 add INT+ 6 x_0_9", "tree": "relu(((((n)**2 mod x_0_6) add (6 add x_0_9)))**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 0 - 9 + 5 - 2 + 5 - 2 + 4 + 3 + 5 + 1 + 7 + 2 - 2 + 13 - 3 + 11 + 1 + 9 - 4 + 16 - 14 + 33 - 17 + 26 - 5", "x2": "sub mod mul INT+ 1 mul sub add x_0_1 x_0_4 sign n x_0_2 n x_0_1", "tree": "(((1 mul (((x_0_1 add x_0_4) sub sign(n)) mul x_0_2)) mod n) sub x_0_1)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 9 - 8 - 1 + 7 + 4 + 6 + 7 + 8 + 9 + 8 + 1 + 7 + 4 + 6 + 7 + 8 + 9 + 8 + 1 + 7 + 4 + 6 + 7 + 8 + 9 + 8 + 1 + 7 + 4", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 4 - 2 + 4 + 12 - 9 - 5 + 7 + 16 - 15 - 8 + 9 + 21 - 22 - 11 + 11 + 26 - 30 - 14 + 13 + 31 - 38 - 18 + 15", "x2": "idiv mul n idiv n idiv INT- 8 sub relu mul n n n x_0_2", "tree": "((n mul (n idiv (-8 idiv (relu((n mul n)) sub n)))) idiv x_0_2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 7 - 1 + 10 - 5 - 5 - 1 - 6 - 5 - 5 - 1 - 6 - 5 - 5 - 1 - 6 - 5 - 5 - 1 - 6 - 5 - 5 - 1 - 6 - 5 - 5", "x2": "sub mod x_0_4 n n", "tree": "((x_0_4 mod n) sub n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 1 + 1 - 21 - 30 - 41 - 57 - 74 - 91 - 112 - 135 - 159 - 183 - 211 - 241 - 275 - 309 - 344 - 381 - 422 - 463 - 508 - 555 - 603 - 651", "x2": "sub sub sign add x_0_3 n add sqr n mod x_0_2 INT+ 3 n", "tree": "((sign((x_0_3 add n)) sub ((n)**2 add (x_0_2 mod 3))) sub n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 0 + 0 + 12 - 20 + 18 - 56 + 24 - 108 + 30 - 176 + 36 - 260 + 42 - 360 + 48 - 476 + 54 - 608 + 60 - 756 + 66 - 920", "x2": "mul n mod INT+ 3 sub n x_0_1", "tree": "(n mul (3 mod (n sub x_0_1)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256 + 279", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 2 + 0 + 3 + 196 + 1 2549 + 80 3142 + 5140 1095 + 32 8967 88 + 2105 3888 5641 + 13 4744 8868 1034 + 862 3672 7558 6187 + 5 5191 5056 3751 5980 + 353 2256 3608 102 2733 + 2 2606 4407 912 6545 4926 + 144 6812 2053 8409 8911 5279 + 9259 5981 1445 8233 337 7872 + 59 2614 2793 2532 6914 1618 3825 + 3792 7313 8768 2092 2506 3576 4818 + 24 2734 8088 1165 3904 406 8894 8371 + 1553 5027 7639 4584 9858 6040 9269 5764 + 9 9424 1776 8925 3439 950 6619 3252 8917 + 636 3147 3721 1222 102 842 3636 8185 710 + 4 724 1431 8151 8208 6533 3911 2756 3844 5463", "x2": "relu add mul x_0_1 sqr INT- 8 n", "tree": "relu(((x_0_1 mul (-8)**2) add n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 - 8 - 1 + 1 - 10 - 6 - 7 - 8 - 6 - 6 - 1 + 4 + 1 + 7 + 2 - 3 + 18 - 15 + 11 - 3 + 3 + 37 - 29 + 6 - 8 - 3 + 41", "x2": "add sub mod n add INT+ 3 sqr x_0_5 abs x_0_1 sub n abs sub x_0_5 n", "tree": "(((n mod (3 add (x_0_5)**2)) sub abs(x_0_1)) add (n sub abs((x_0_5 sub n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 8 - 6 - 1 - 19 - 1 - 118 - 1 - 991 - 1 - 8830 - 1 - 7 9363 - 1 - 71 4142 - 1 - 642 7135 - 1 - 5784 4054 - 1 - 5 2059 6307 - 1 - 46 8536 6566 - 1 - 421 6829 8879", "x2": "sub sign x_0_1 relu mul add n x_0_2 mod INT- 9 sub x_0_2 INT+ 9", "tree": "(sign(x_0_1) sub relu(((n add x_0_2) mul (-9 mod (x_0_2 sub 9)))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 + 10 - 9 - 1 + 8 - 1 + 1 + 16 + 841 + 100 + 64 + 1089 + 100 + 289 + 4624 + 903 6036 + 15 5236 + 7 5076 + 2131 6689 + 21 5296 + 187 4161 + 5 1202 6384 + 2132 9809 7621 8849 + 6854 9954 6601 + 1739 8325 4769 + 1 5169 1536 3548 1924 + 1 6687 5499 809 + 135 9899 7585 2676 + 1088 8189 1276 8767 6996", "x2": "sqr add idiv mul abs add n n x_0_7 add INT- 7 add relu INT+ 9 INT+ 7 n", "tree": "((((abs((n add n)) mul x_0_7) idiv (-7 add (relu(9) add 7))) add n))**2", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 3 + 1 - 9 - 11 + 13 + 29 + 10 + 41 + 2 + 63 - 16 + 105 + 154 + 187 + 284 + 349 + 542 + 671 + 1056 + 1313 + 2082 + 2595 + 4132 + 5157", "x2": "add add x_0_2 mod x_0_2 abs mul n x_0_2 sub INT- 9 relu n", "tree": "((x_0_2 add (x_0_2 mod abs((n mul x_0_2)))) add (-9 sub relu(n)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 20 + 484 + 1 5492 + 61 9684 + 2974 4836 + 16 6571 820 + 1066 549 2484 + 7 6755 9545 8852 + 614 476 3670 8164 + 5 4036 1920 3031 8436 + 518 7474 4349 1056 9860 + 5 3949 7341 2306 9926 5444 + 604 2370 2217 8383 1772 9732 + 7 2508 4426 6140 5981 2756 7844 + 928 1080 6606 5996 5603 2868 4036 + 12 6222 6969 8497 5532 2047 102 8900 + 1817 6068 3658 3647 6637 4769 4816 1604 + 27 6276 2391 6071 4444 8896 4961 2056 3812 + 4420 4198 2657 1431 1182 3439 3792 9020 9924 + 74 2630 5308 6400 427 8633 7815 7207 5526 7236 + 1 3070 2973 4320 6407 5303 9545 5566 8529 2703 3540 + 240 4934 7111 4997 8985 5927 6382 4300 9385 7417 1364", "x2": "add mul abs x_0_1 mul INT+ 8 n abs INT+ 4", "tree": "((abs(x_0_1) mul (8 mul n)) add abs(4))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 5 - 5 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign mod sign n idiv INT- 5 x_0_3", "tree": "sign((sign(n) mod (-5 idiv x_0_3)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 - 8 - 15 - 20 - 28 - 34 - 43 - 50 - 60 - 68 - 79 - 88 - 100 - 110 - 123 - 134 - 148 - 160 - 175 - 188 - 204 - 218 - 235 - 250", "x2": "sub x_0_2 add add INT+ 7 n sign INT+ 9", "tree": "(x_0_2 sub ((7 add n) add sign(9)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr add mod idiv n add add n INT+ 1 0 INT+ 3 n relu n", "tree": "((((n idiv ((n add 10) add 3)) mod n) add relu(n)))**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 7 - 7 + 0 - 7 + 7 - 14 + 21 - 35 + 56 - 91 + 147 - 238 + 385 - 623 + 1008 - 1631 + 2639 - 4270 + 6909 - 1 1179 + 1 8088 - 2 9267 + 4 7355 - 7 6622", "x2": "sub sub sub n n x_0_1 mul x_0_2 sign add mod n idiv n INT+ 4 INT- 9", "tree": "(((n sub n) sub x_0_1) sub (x_0_2 mul sign(((n mod (n idiv 4)) add -9))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 3 + 1 + 0 + 0 - 3 + 1 + 0 + 0 - 3 + 1 + 0 + 0 - 3 + 1 + 0 + 0 - 3 + 1 + 0 + 0 - 3 + 1 + 0 + 0 - 3", "x2": "sub x_0_4 mul add INT- 6 INT+ 3 relu mul n INT- 3", "tree": "(x_0_4 sub ((-6 add 3) mul relu((n mul -3))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 312 + 316 + 322 + 206 + 216 + 228 + 242 + 258 + 276 + 296 + 318 + 342 + 368 + 334 + 364 + 396 + 430 + 466 + 504 + 544 + 586 + 630", "x2": "add mul add INT- 2 mul INT- 2 mul INT+ 5 INT+ 6 idiv INT+ 9 idiv sub n INT- 7 INT- 5 add sqr n n", "tree": "(((-2 add (-2 mul (5 mul 6))) mul (9 idiv ((n sub -7) idiv -5))) add ((n)**2 add n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 3 - 3 - 3 - 2 - 2 - 2 - 2 - 1 - 1 - 1 - 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2", "x2": "sub idiv n INT+ 4 INT+ 3", "tree": "((n idiv 4) sub 3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 5 + 8 + 2 - 6 - 5 + 8 + 2 - 6 - 5 + 8 + 2 - 6 - 5 + 8 + 2 - 6 - 5 + 8 + 2 - 6 - 5 + 8 + 2 - 6 - 5", "x2": "sub x_0_4 mod INT- 4 INT- 4", "tree": "(x_0_4 sub (-4 mod -4))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 1 - 9 + 3 + 0 - 8 - 9 - 4 + 0 - 6 - 6 - 5 - 6 - 6 - 6 - 3 - 2 - 6 - 6 + 14 - 6 - 6 - 6 + 2 + 19 - 6 - 6 - 5 - 6 - 6 - 6", "x2": "sub relu idiv n sub x_0_8 x_0_9 mod mul INT+ 6 sqr sign idiv n mul x_0_7 n INT+ 8", "tree": "(relu((n idiv (x_0_8 sub x_0_9))) sub ((6 mul (sign((n idiv (x_0_7 mul n))))**2) mod 8))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 6 - 2 - 5 + 9 + 36 + 12 + 30 + 54 + 216 + 72 + 180 + 324 + 1296 + 432 + 1080 + 1944 + 7776 + 2592 + 6480 + 1 1664 + 4 6656 + 1 5552 + 3 8880 + 6 9984 + 27 9936 + 9 3312", "x2": "abs mul x_0_4 abs mod sub relu INT- 8 INT+ 6 INT- 9", "tree": "abs((x_0_4 mul abs(((relu(-8) sub 6) mod -9))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 66 + 147 + 260 + 405 + 582 + 791 + 1032 + 1305 + 1610 + 1947 + 2316 + 2717 + 3150 + 3615 + 4112 + 4641 + 5202 + 5795 + 6420 + 7077 + 7766 + 8487", "x2": "add n sqr mul mod n relu x_0_1 INT- 4", "tree": "(n add (((n mod relu(x_0_1)) mul -4))**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 8 - 3 + 0 - 7 - 4 + 0 - 10 - 3 + 0 - 13 - 2 + 0 - 16 - 1 + 0 - 19 + 0 + 0 - 22 + 0 + 0 - 25 + 0 + 0", "x2": "idiv sub n relu sqr add x_0_3 INT- 2 n", "tree": "((n sub relu(((x_0_3 add -2))**2)) idiv n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 3 + 1 - 12 - 15 - 37 - 51 - 86 - 115 - 167 - 215 - 288 - 359 - 457 - 555 - 682 - 811 - 971 - 1135 - 1332 - 1535 - 1773 - 2019 - 2302 - 2595", "x2": "sub x_0_2 mul n n", "tree": "(x_0_2 sub (n mul n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 + 6 - 1 - 19 - 7 - 13 - 21 - 31 - 43 - 57 - 73 - 91 - 111 - 133 - 157 - 183 - 211 - 241 - 273 - 307 - 343 - 381 - 421 - 463", "x2": "add mul n sub mul n sub INT- 2 idiv x_0_2 sqr sqr abs INT- 1 0 INT- 5 INT- 7", "tree": "((n mul ((n mul (-2 sub (x_0_2 idiv ((abs(-10))**2)**2))) sub -5)) add -7)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 9 - 10 + 5 - 8 - 4 - 6 - 8 - 9 - 12 - 14 - 16 - 19 - 22 - 25 - 29 - 33 - 36 - 41 - 45 - 49 - 54 - 59 - 64 - 70 - 76 - 81", "x2": "idiv sqr n sub INT- 1 0 sub sqr sign relu mod abs x_0_5 x_0_1 INT+ 2", "tree": "((n)**2 idiv (-10 sub ((sign(relu((abs(x_0_5) mod x_0_1))))**2 sub 2)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 8 + 3 + 7 + 1 + 24 - 56 + 24 + 63 + 10 + 264 - 672 + 312 + 882 + 150 + 4224 - 1 1424 + 5616 + 1 6758 + 3000 + 8 8704 - 25 1328 + 12 9168 + 40 2192 + 7 5000 + 230 6304 - 678 5856", "x2": "mul x_0_5 abs n", "tree": "(x_0_5 mul abs(n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 8 + 9 + 1 + 2 - 10 - 4 - 42 - 48 + 0 - 6 - 42 - 6 - 666 - 816 + 0 - 12 - 534 - 12 - 12 972 - 17 3706 + 0 - 36 - 6 5808 - 36 - 31 3590 5316 - 62 4284 9886 + 0 - 252", "x2": "mul idiv add n abs sqr x_0_6 abs add mod INT+ 3 n n INT- 6", "tree": "(((n add abs((x_0_6)**2)) idiv abs(((3 mod n) add n))) mul -6)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 7 + 9 + 0 - 1 - 1 + 14 + 17 + 11 + 56 + 65 + 47 + 182 + 209 + 155 + 560 + 641 + 479 + 1694 + 1937 + 1451 + 5096 + 5825 + 4367 + 1 5302 + 1 7489", "x2": "mod INT- 1 mul INT+ 3 add INT+ 5 mul x_0_3 sign sub x_0_2 n", "tree": "(-1 mod (3 mul (5 add (x_0_3 mul sign((x_0_2 sub n))))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 - 2 - 4 + 0 - 1 + 4 + 7 + 8 + 10 + 6 + 7 + 2 - 1 - 2 - 4 + 0 - 1 + 4 + 7 + 8 + 10 + 6 + 7 + 2 - 1 - 2 - 4 + 0", "x2": "sub abs INT+ 6 x_0_6", "tree": "(abs(6) sub x_0_6)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 3 - 3 + 3 + 5 + 6 - 3 + 5 + 7 - 8 - 10 - 11 + 12 + 13 + 14 - 15 + 16 + 17 - 18 - 19 - 20 + 21 + 22 + 23 - 24 + 25 + 26 - 27 - 28 - 29 + 30 + 31", "x2": "idiv n sign x_0_9", "tree": "(n idiv sign(x_0_9))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "+ 3 + 6 + 2 + 5 + 1 + 4 + 0 + 3 - 1 + 2 - 2 + 1 - 3 + 0 - 4 - 1 - 5 - 2 - 6 - 3 - 7 - 4 - 8 - 5", "x2": "add x_0_2 sign sign INT- 1", "tree": "(x_0_2 add sign(sign(-1)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 4 - 1 - 3 - 6 + 0 + 0 + 6 + 1 + 0 - 4 + 2 + 5 + 0 + 8 + 4 + 3 + 5 + 8 + 1 + 0 + 6 + 5 + 4 + 1 + 7 + 6 + 9 + 5 + 7 + 3 + 9 + 8", "x2": "mod sub sub n x_0_1 x_0_11 sub mod sqr relu INT- 1 n INT- 1 0", "tree": "(((n sub x_0_1) sub x_0_11) mod (((relu(-1))**2 mod n) sub -10))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "11"}
{"x1": "- 6 - 14 - 18 - 20 - 20 - 18 - 14 - 8 + 0 + 100 + 220 + 360 + 520 + 700 + 900 + 1264 + 1666 + 2106 + 2584 + 3280 + 4032 + 4840 + 5911", "x2": "mul n add n mul INT+ 9 idiv x_0_1 mul n INT+ 8", "tree": "(n mul (n add (9 mul (x_0_1 idiv (n mul 8)))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 5 - 10 - 7 + 9 + 5 - 1 + 70 + 56 - 81 - 50 + 11 - 840 - 728 + 1134 + 750 - 176 + 1 4280 + 1 3104 - 2 1546 - 1 5000 + 3696 - 31 4160 - 30 1392 + 51 7104 + 37 5000 - 9 6096 + 848 2320 + 843 8976", "x2": "mul x_0_5 sub sign sqr mul x_0_6 x_0_7 n", "tree": "(x_0_5 mul (sign(((x_0_6 mul x_0_7))**2) sub n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 1 + 0 + 1 - 2 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 0 + 1 + 2", "x2": "mod idiv abs n sign n sqr abs sub x_0_5 n", "tree": "((abs(n) idiv sign(n)) mod (abs((x_0_5 sub n)))**2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 10 + 10 - 10 + 10 - 5 - 6 - 2 + 0 - 5 - 15 - 10 - 23 - 9 + 0 - 6 + 6 - 9 - 19 - 14 - 15 - 13 - 4 - 10 - 16 - 13 - 23 - 18 - 13 - 17", "x2": "sub sub abs x_0_4 mod relu x_0_8 n n", "tree": "((abs(x_0_4) sub (relu(x_0_8) mod n)) sub n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 0 - 8 - 9 + 4 + 65 - 35 - 464 + 248 + 3311 - 1774 - 2 3645 + 1 2661 + 16 8820 - 9 408 - 120 5393 + 64 5508 + 860 6561 - 460 8975 - 6145 1332 + 3290 8320 + 4 3876 5871 - 2 3496 7230 - 31 3281 2445 + 16 7767 8913 + 223 6845 2968 - 119 7871 9640", "x2": "sub sub x_0_4 mul sub x_0_2 mul sqr sign abs INT- 7 sign n sub INT+ 8 INT+ 1 n", "tree": "((x_0_4 sub ((x_0_2 sub ((sign(abs(-7)))**2 mul sign(n))) mul (8 sub 1))) sub n)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 2 + 7 - 2 + 7 + 6 + 8 - 1 + 7 + 7 + 7 + 9 + 7 + 6 + 8 + 14 + 7 + 7 + 7 + 9 + 7 + 6 + 8 + 14 + 7 + 7 + 7 + 9 + 7 + 6 + 8", "x2": "mod x_0_8 n", "tree": "(x_0_8 mod n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 8 - 28 + 87 - 380 + 1895 - 1 1430 + 7 9989 - 64 8 + 576 27 - 5760 410 + 6 3360 4433 - 76 325 3388 + 988 4229 3927 - 1 3837 9211 5230 + 20 7568 8172 8285 - 332 1101 765 2880 + 5645 8718 3009 8739 - 10 1625 6929 4177 7698 + 193 888 1658 9377 5977 - 3861 7763 3178 7552 20 + 8 1097 3029 6753 8592 63 - 178 4140 6652 8584 9024 1958 + 4103 5235 3015 7452 7556 4597", "x2": "mul mul n sub INT- 4 abs add n x_0_1 sign x_0_1", "tree": "((n mul (-4 sub abs((n add x_0_1)))) mul sign(x_0_1))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 8 - 2 - 8 - 2 - 10 + 0 + 4 - 8 - 8 - 5 - 722 - 2 - 98 - 2 - 98 - 2 - 162 - 338 - 2 - 2 - 32 - 101 6738 - 98 - 1 5842 - 98 - 1 5842 - 98 - 4 6818 - 21 6482 - 98 - 98 - 1058", "x2": "mul INT- 2 sqr add mod relu sqr INT+ 3 n x_0_11", "tree": "(-2 mul (((relu((3)**2) mod n) add x_0_11))**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "11"}
{"x1": "+ 4 + 5 + 61 + 57 - 167 - 151 - 590 - 526 - 2282 - 2026 - 9050 - 8026 - 3 6121 - 3 2025 - 14 4405 - 12 8021 - 57 7541 - 51 2005 - 231 84 - 204 7940 - 924 256 - 819 1680 - 3696 944 - 3276 6640", "x2": "sub mul sub sub sub abs x_0_2 INT+ 4 INT+ 9 INT+ 6 INT- 4 idiv n INT- 6", "tree": "(((((abs(x_0_2) sub 4) sub 9) sub 6) mul -4) sub (n idiv -6))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 8 - 6 - 4 + 3 - 6 + 19 + 10 + 22 + 16 + 36 + 22 + 68 + 46 + 105 + 78 + 158 + 118 + 245 + 184 + 371 + 284 + 552 + 426 + 822 + 636 + 1220 + 948", "x2": "add n add x_0_2 x_0_6", "tree": "(n add (x_0_2 add x_0_6))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 68 + 633 + 5709 + 5 1386 + 46 2474 + 416 2263 + 3746 363 + 3 3714 3312 + 30 3428 9840 + 273 860 8581 + 2457 7747 7241 + 2 2119 9729 5174 + 19 9079 7565 6566 + 179 1717 8090 9091 + 1612 5460 2818 1815 + 1 4512 9142 5363 6380 + 13 616 2282 8272 7452 + 117 5546 545 4454 7089 + 1057 9914 4909 92 3813 + 9521 9230 4181 831 4322 + 8 5697 3073 7629 7482 8898 + 77 1275 7663 8667 7346 79", "x2": "add relu sqr mod n INT- 8 sub mod INT- 4 add x_0_1 relu mul INT+ 9 x_0_1 x_0_1", "tree": "(relu(((n mod -8))**2) add ((-4 mod (x_0_1 add relu((9 mul x_0_1)))) sub x_0_1))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 0 - 27 - 64 - 125 - 216 + 0 - 64 - 162 - 300 - 484 - 720 - 1014 + 0 - 225 - 512 - 867 - 1296 - 1805 - 2400 + 0 - 484 - 1058 - 1728", "x2": "mul n sub sub mul INT+ 1 x_0_2 x_0_2 mul n mod n INT+ 7", "tree": "(n mul (((1 mul x_0_2) sub x_0_2) sub (n mul (n mod 7))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 1 + 2 + 6 - 7 - 8 - 8 - 9 + 2 + 3 + 3 + 3 + 6 + 6 + 6 + 7 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 5 + 6 + 6 + 6 + 6 + 6 + 7", "x2": "relu idiv idiv sub sub n INT- 1 0 x_0_8 INT+ 5 sign sqr INT+ 6", "tree": "relu(((((n sub -10) sub x_0_8) idiv 5) idiv sign((6)**2)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 4 + 10 + 2 + 7 - 8 + 9 + 6 + 6 + 1064 + 1197 + 1840 + 2216 + 2906 + 3246 + 4240 + 5009 - 4700 + 1 8696 + 3 1940 + 1 4661 + 1 8716 + 2 577 + 2 3888 + 4 1481 + 25 1210 - 10 7217 + 28 9920 + 59 8785 + 46 6830 + 42 4794", "x2": "sub mul n add mul n abs n x_0_9 mul x_0_8 mod sqr sqr x_0_2 n", "tree": "((n mul ((n mul abs(n)) add x_0_9)) sub (x_0_8 mul (((x_0_2)**2)**2 mod n)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 5 - 10 + 1 + 1 - 5 + 49 + 64 + 63 + 100 + 121 + 132 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sub n add mul sub mod relu idiv x_0_6 INT- 5 sqr sqr x_0_3 n n n", "tree": "(n sub ((((relu((x_0_6 idiv -5)) mod ((x_0_3)**2)**2) sub n) mul n) add n))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 8 - 6 + 1 - 3 - 5 + 84 + 7 - 51 - 5 - 672 + 7 - 612 - 5 - 672 + 7 - 9792 - 5 - 672 + 7 - 19 5840 - 5 - 672 + 7 - 470 160 - 5 - 672 + 7", "x2": "mul x_0_4 add n mul add sign add x_0_1 x_0_5 n idiv sqr idiv mul INT- 8 INT+ 3 n x_0_1", "tree": "(x_0_4 mul (n add ((sign((x_0_1 add x_0_5)) add n) mul ((((-8 mul 3) idiv n))**2 idiv x_0_1))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 4 + 16 + 256 + 736 + 1264 + 1024 + 112 + 880 + 688 + 304 + 400 + 592 + 544 + 448 + 1120 + 1168 + 832 + 160 + 976 + 16 + 256 + 736", "x2": "relu mod sqr x_0_1 sqr sqr INT+ 6", "tree": "relu(((x_0_1)**2 mod ((6)**2)**2))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 4 + 3 + 4 - 10 + 9 + 9 - 10 - 3 - 5 + 121 + 143 + 169 + 196 + 224 + 256 + 289 + 323 + 360 + 399 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024", "x2": "add idiv INT- 2 mul mul sqr sub relu x_0_1 abs n INT- 3 x_0_10 sqr n", "tree": "((-2 idiv ((((relu(x_0_1) sub abs(n)))**2 mul -3) mul x_0_10)) add (n)**2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 5 + 9 - 10 - 2 - 8 + 0 + 14 + 0 + 0 + 0 + 0 + 36 + 0 + 0 + 0 + 0 + 153 + 0 + 0 + 0 + 0 + 836 + 0 + 0 + 0 + 0 + 5643", "x2": "relu mul n sub idiv x_0_5 INT+ 4 relu x_0_3", "tree": "relu((n mul ((x_0_5 idiv 4) sub relu(x_0_3))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 3 + 0 + 3 - 2 + 6 - 3 + 0 + 10 - 1 - 1 + 14 - 4 + 4 + 10 - 5 + 13 + 8 - 7 + 26 + 3 - 4 + 35 - 3 + 8 + 42 - 11 + 33 + 44 - 16", "x2": "add sub x_0_8 sign mul mod idiv n abs x_0_4 sqr mul INT+ 8 n INT+ 9 x_0_3", "tree": "((x_0_8 sub sign((((n idiv abs(x_0_4)) mod ((8 mul n))**2) mul 9))) add x_0_3)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 8 + 4 + 5 + 132 - 95 - 174 - 6461 + 6088 + 1 4103 + 64 6110 - 73 6637 - 203 820 - 1 919 2577 + 1 4438 866 + 4 5693 4515 + 279 5329 9728 - 417 2607 257 - 1480 4678 2842 - 10 911 4120 1789 + 16 6904 2810 2820 + 65 2886 3123 3343 + 4884 1123 4166 5898 - 8829 2364 6639 1757 - 3 7606 2515 9040 5544 - 305 2570 2135 4118 6225", "x2": "sub n mul mul n idiv n sign INT+ 7 x_0_3", "tree": "(n sub ((n mul (n idiv sign(7))) mul x_0_3))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 4 - 10 + 8 + 3 + 0 - 8 + 10 - 5 + 16 + 100 + 64 + 9 + 0 + 64 + 100 + 25 + 256 + 1 0 + 4096 + 81 + 0 + 4096 + 1 0 + 625 + 6 5536 + 1 0 0 + 1677 7216 + 6561 + 0 + 1677 7216", "x2": "relu sqr x_0_8", "tree": "relu((x_0_8)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 4 - 8 + 1 - 3 + 4 + 28 + 12 + 19 + 7 + 84 + 67 + 52 + 124 + 12 + 228 + 172 + 199 + 292 + 28 + 403 + 364 + 444 + 487 + 52 + 628 + 628 + 679", "x2": "add sqr sub n abs idiv x_0_1 x_0_5 INT+ 3", "tree": "(((n sub abs((x_0_1 idiv x_0_5))))**2 add 3)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 2 - 6 - 8 + 9 + 10 - 10 + 5 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign idiv mod INT- 1 n mul n mul x_0_7 x_0_1", "tree": "sign(((-1 mod n) idiv (n mul (x_0_7 mul x_0_1))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 + 4 - 6 + 5 + 6 + 8 - 7 + 9 + 0 + 13 - 1 + 17 - 7 + 22 - 1 + 30 - 8 + 39 - 8 + 52 - 9 + 69 - 16 + 91 - 17 + 121 - 25 + 160", "x2": "add x_0_6 x_0_4", "tree": "(x_0_6 add x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "mul sqr n idiv n n", "tree": "((n)**2 mul (n idiv n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 4 + 2 + 3 + 3 + 3 - 19 + 0 - 3 - 19 - 2 + 45 - 13 - 14 + 42 - 54 + 73 - 603 - 201 - 608 + 2247 + 3920 + 4 3996 + 12 1179 + 12 2183 - 136 6202 + 880 8213 + 1 7246 4292", "x2": "sub mul sign x_0_3 mul x_0_5 x_0_6 n", "tree": "((sign(x_0_3) mul (x_0_5 mul x_0_6)) sub n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 12 + 27 + 48 + 75 + 108 + 147 + 192 + 243 + 300 + 363 + 432 + 507 + 588 + 675 + 768 + 867 + 972 + 1083 + 1200 + 1323 + 1452", "x2": "add sqr n mul add n n n", "tree": "((n)**2 add ((n add n) mul n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 256 + 6 5536 + 167 9616 + 1677 7216 + 1 0 0 + 4 2998 1696 + 14 7578 9056 + 42 9496 7296 + 110 1996 576 + 256 0 0 + 548 7587 3536 + 1100 7531 4176 + 2088 2706 4576 + 3778 199 8336 + 6561 0 0 + 1 995 1162 7776 + 1 7857 9390 4896 + 2 8211 990 7456 + 4 3477 9213 8496 + 6 5536 0 0 + 9 6826 5199 6416 + 14 482 2362 5216", "x2": "sqr sqr sqr add n abs n", "tree": "((((n add abs(n)))**2)**2)**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 + 7 - 4 - 3 - 7 - 4 - 10 + 5 - 6 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign idiv relu n idiv n x_0_9", "tree": "sign((relu(n) idiv (n idiv x_0_9)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 3 + 10 - 4 - 1 + 9 - 2 - 3 + 1 + 0 + 483 + 439 - 2 + 194 + 9 + 2 + 0 + 3 + 1 + 483 + 443 + 1 + 196 + 10 + 2 + 4 + 6 + 3 + 484 + 443 + 5", "x2": "sub x_0_9 mul abs mod sign x_0_7 mul n n mod n sub relu sign n INT+ 6", "tree": "(x_0_9 sub (abs((sign(x_0_7) mod (n mul n))) mul (n mod (relu(sign(n)) sub 6))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 6 + 2 + 0 + 0 + 0 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "idiv idiv n relu add INT+ 6 idiv n sub mul add n INT+ 1 INT+ 1 sub INT- 3 x_0_2 idiv INT- 1 0 n", "tree": "((n idiv relu((6 add (n idiv (((n add 1) mul 1) sub (-3 sub x_0_2)))))) idiv (-10 idiv n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 7 - 1 + 0 + 49 + 0 + 7 + 0 + 49 + 0 + 7 + 0 + 49 + 0 + 7 + 0 + 49 + 0 + 7 + 0 + 49 + 0 + 7 + 0 + 49", "x2": "mul INT+ 7 mod x_0_2 add relu abs INT- 8 x_0_1", "tree": "(7 mul (x_0_2 mod (relu(abs(-8)) add x_0_1)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 8 + 10 - 3 - 8 + 2 - 10 + 21 + 17 + 19 + 14 + 20 + 21 + 14 + 19 + 16 + 20 + 32 + 27 + 24 + 34 + 27 + 30 + 30 + 31 + 27 + 35 + 48 + 34", "x2": "add abs mod x_0_7 mod add add x_0_4 INT- 5 x_0_1 mul INT- 3 sub n idiv INT- 3 n n", "tree": "(abs((x_0_7 mod (((x_0_4 add -5) add x_0_1) mod (-3 mul (n sub (-3 idiv n)))))) add n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 1 + 1 + 4 - 9 - 1 - 8 + 3 - 6 - 2 + 0 - 6 - 5 - 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 + 1", "x2": "sign add x_0_12 sub idiv INT- 3 sqr n x_0_6", "tree": "sign((x_0_12 add ((-3 idiv (n)**2) sub x_0_6)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "12"}
{"x1": "+ 4 - 6 + 3 - 2 + 1 - 9 + 7 + 5 + 8 - 2 - 1 - 9 - 7 + 5 - 8 - 2 - 1 - 9 + 7 - 5 + 8 + 2 - 1 + 9 - 7 + 5 - 8 + 2 + 1 + 9 - 7", "x2": "mul sign mul INT+ 1 x_0_9 x_0_6", "tree": "(sign((1 mul x_0_9)) mul x_0_6)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 7 + 7 + 2 + 5 + 2 - 8 - 112 - 1680 - 1 8480 - 27 7200 - 360 3600 - 4324 3200 - 5 6216 1600 - 78 7026 2400 - 1180 5393 6000 - 1 8888 6297 6000 - 32 1106 7059 2000 - 577 9920 7065 6000 - 1 981 8493 4246 4000 - 21 9636 9868 4928 0 - 461 2376 7238 3488 0 - 1 147 2287 9243 6736 0 - 23 3386 2622 2604 4928 0 - 560 1270 2934 2507 8272 0 - 1 4003 1757 3356 2695 6800 0 - 36 4082 5690 7263 87 6800 0 - 983 229 3649 6101 2367 3600 0 - 2 7524 6422 2189 834 6286 800 0", "x2": "mul x_0_1 abs add n relu x_0_6", "tree": "(x_0_1 mul abs((n add relu(x_0_6))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 - 8 + 7 + 7 + 3 + 7 + 0 + 4 + 0 + 7 + 3 + 7 + 0 + 4 + 0 + 7 + 3 + 7 + 0 + 4 + 0 + 7 + 3 + 7", "x2": "sub add n INT+ 7 mod INT- 1 sub add n mod x_0_3 n INT- 1", "tree": "((n add 7) sub (-1 mod ((n add (x_0_3 mod n)) sub -1)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 7 + 7 - 9 - 33 - 7 - 51 - 37 - 73 - 39 - 63 - 37 - 81 - 67 - 103 - 69 - 93 - 67 - 111 - 97 - 133 - 99 - 123 - 97 - 141 - 127", "x2": "mod idiv x_0_3 mod INT- 1 sub x_0_1 sqr abs INT+ 9 mul n INT- 1 0", "tree": "((x_0_3 idiv (-1 mod (x_0_1 sub (abs(9))**2))) mod (n mul -10))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 2 + 5 + 9 + 3 + 6 + 15 + 10 + 8 + 16 + 15 + 8 + 15 + 19 + 13 + 16 + 25 + 20 + 18 + 26 + 25 + 18 + 25 + 29 + 23 + 26 + 35 + 30", "x2": "add add idiv n n relu n sub n x_0_5", "tree": "(((n idiv n) add relu(n)) add (n sub x_0_5))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 5 - 10 + 1 - 4 + 21 - 8 + 103 - 30 + 521 - 118 + 2609 - 474 + 1 3029 - 1834 + 6 5043 - 6544 + 32 4759 - 1 9672 + 162 1981 - 3 3296 + 810 3383 + 15 8302 + 4049 7267 + 241 3516 + 2 245 3065 + 2017 990", "x2": "add n add x_0_5 mul x_0_2 sub sign sub mul mod sub INT- 8 x_0_5 INT+ 5 INT+ 1 0 sqr n INT- 6", "tree": "(n add (x_0_5 add (x_0_2 mul (sign(((((-8 sub x_0_5) mod 5) mul 10) sub (n)**2)) sub -6))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 7 + 8 - 7 + 46 - 7 + 368 - 7 + 3682 - 7 + 4 4188 - 7 + 61 8638 - 7 + 989 8216 - 7 + 1 7816 7898 - 7 + 35 6335 7972 - 7 + 783 9387 5398 - 7 + 1 8814 5300 9568 - 7", "x2": "add mod INT- 1 0 add add relu n mul x_0_2 n abs x_0_2 INT+ 3", "tree": "((-10 mod ((relu(n) add (x_0_2 mul n)) add abs(x_0_2))) add 3)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 6 + 5 + 5 - 6 + 6 - 5 + 10 + 9 + 5 + 8 + 2 + 6 + 5 + 5 - 42 + 6 - 5 + 10 - 91 + 5 - 1994 + 2 - 4 7850 + 5 - 124 4095 - 39 - 3483 4654 - 5 - 10 4503 9610 - 91 - 334 4126 7515 - 1994", "x2": "sub n abs sub mod x_0_11 mul n x_0_2 n", "tree": "(n sub abs(((x_0_11 mod (n mul x_0_2)) sub n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 9 + 8 + 9 + 8 - 2 - 6 + 5 - 5 - 2 + 1860 - 550 - 1068 + 130 - 910 + 360 + 50 5808 - 16 7212 - 32 6628 + 4 2370 - 14 4200 + 59 1150 + 2 5592 7936 - 9181 1170 - 1 8031 1664 + 2752 4500 + 1494 1160 + 6 4426 1472 + 2078 1346 1576 - 797 5028 8840 - 1568 7117 3480 + 255 9775 6480", "x2": "mul n sub mul sub sign x_0_5 n sub mod n x_0_9 x_0_6 sub INT- 1 0 idiv INT+ 7 n", "tree": "(n mul (((sign(x_0_5) sub n) mul ((n mod x_0_9) sub x_0_6)) sub (-10 sub (7 idiv n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "- 9 - 16 - 21 - 24 - 25 - 24 - 21 - 16 - 9 + 0 + 11 + 24 + 39 + 56 + 75 + 96 + 119 + 144 + 171 + 200 + 231 + 264", "x2": "mul add abs abs n INT- 1 0 n", "tree": "((abs(abs(n)) add -10) mul n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 - 7 + 7 + 10 + 9 + 7 + 5 - 5 - 1 + 0 + 0 + 4 + 9 + 9 + 16 + 16 + 0 + 0 + 36 + 36 + 49 + 49 + 64 + 64 + 81 + 81 + 100 + 100 + 121 + 121 + 144", "x2": "sqr abs idiv relu add idiv n sign x_0_9 INT- 7 INT+ 2", "tree": "(abs((relu(((n idiv sign(x_0_9)) add -7)) idiv 2)))**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3 - 2 - 1 + 0 - 3", "x2": "mod sub n INT+ 9 INT- 4", "tree": "((n sub 9) mod -4)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 + 0 + 10 + 9 + 19 + 18 + 28 + 27 + 37 + 36 + 46 + 45 + 55 + 54 + 64 + 63 + 73 + 72 + 82 + 81 + 91 + 90 + 100 + 99", "x2": "abs sub INT- 9 abs x_0_2", "tree": "abs((-9 sub abs(x_0_2)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 7 - 8 + 8 + 7 - 7 - 10 - 7 - 4 + 46 + 51 + 73 + 78 + 70 + 73 + 82 + 91 + 147 + 158 + 186 + 197 + 195 + 204 + 219 + 234 + 296 + 313 + 347 + 364 + 368 + 383", "x2": "sub add x_0_8 relu mul INT+ 6 n abs relu sign n", "tree": "((x_0_8 add relu((6 mul n))) sub abs(relu(sign(n))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 8 + 10 + 1 + 2 - 5 + 8 + 57 + 101 + 7 + 0 + 39 + 72 + 3163 + 1 251 + 166 + 8 + 1539 + 5242 + 999 4556 + 1 508 6006 + 3 7829 + 253 + 236 8553 + 2748 128 + 99 8910 4459 4201 + 1 1043 686 6698 9016 + 15 3611 9275 + 10 1867", "x2": "add mod n sub sub abs x_0_4 n abs x_0_5 add sqr x_0_6 x_0_7", "tree": "((n mod ((abs(x_0_4) sub n) sub abs(x_0_5))) add ((x_0_6)**2 add x_0_7))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 - 4 + 5 + 0 + 0 - 6 - 7 + 25 + 16 + 25 + 0 + 0 + 36 + 49 + 625 + 256 + 625 + 0 + 0 + 1296 + 2401 + 39 625 + 6 5536 + 39 625 + 0 + 0 + 167 9616 + 576 4801 + 1525 8789 625", "x2": "sqr x_0_7", "tree": "(x_0_7)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 1 - 10 + 3 - 2 + 3 + 9 - 6 + 39 + 27 + 12 + 207 + 81 + 426 + 891 + 363 + 3348 + 3483 + 5349 + 1 8954 + 1 4079 + 4 9527 + 9 1692 + 9 5727 + 33 8121 + 41 5866 + 78 2451 + 193 1283", "x2": "add mul mul sign INT- 3 INT- 1 0 relu x_0_5 mul x_0_3 INT+ 3", "tree": "(((sign(-3) mul -10) mul relu(x_0_5)) add (x_0_3 mul 3))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 + 9 + 3 + 4 - 6 + 0 + 40 + 73 + 84 + 104 + 0 + 0 + 0 + 0 + 309 + 360 + 289 + 324 + 0 + 0 + 0 + 0 + 818 + 900 + 625 + 676 + 0 + 0", "x2": "sub relu INT- 3 mul INT- 1 relu idiv add x_0_6 mul n relu n sign sub n x_0_4", "tree": "(relu(-3) sub (-1 mul relu(((x_0_6 add (n mul relu(n))) idiv sign((n sub x_0_4))))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 7 - 8 - 10 + 7 - 6 - 6 - 6 + 6 - 6 - 6 - 6 + 6 - 6 - 6 - 6 + 6 - 6 - 6 - 6 + 6 - 6 - 6 - 6 + 6 - 6 - 6", "x2": "mul INT+ 6 sign sign sign x_0_4", "tree": "(6 mul sign(sign(sign(x_0_4))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 6 - 6 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 15 + 80 + 255 + 624 + 1295 + 2400 + 4095 + 6560 + 9999 + 1 4640 + 2 735 + 2 8560 + 3 8415 + 5 624 + 6 5535 + 8 3520 + 10 4975 + 13 320 + 15 9999 + 19 4480 + 23 4255", "x2": "sub sqr sqr n INT+ 1", "tree": "(((n)**2)**2 sub 1)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 2 - 9 - 5 + 2 - 4 + 1 + 9 + 4 + 10 + 19 + 15 + 22 + 32 + 29 + 37 + 48 + 46 + 55 + 67 + 66 + 76 + 89 + 89 + 100 + 114 + 115 + 127 + 142 + 144", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 2 + 2 + 5 - 2 + 11 + 16 + 20 + 14 + 28 + 34 + 39 + 34 + 49 + 56 + 62 + 58 + 74 + 82 + 89 + 86 + 103 + 112 + 120 + 118 + 136 + 146 + 155 + 154 + 173 + 184", "x2": "add add INT+ 8 idiv n sign sign mod n mod sign add mod INT- 9 n x_0_1 n x_0_4", "tree": "((8 add (n idiv sign(sign((n mod (sign(((-9 mod n) add x_0_1)) mod n)))))) add x_0_4)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 6 + 24 + 54 + 96 + 150 + 216 + 294 + 384 + 486 + 600 + 726 + 864 + 1014 + 1176 + 1350 + 1536 + 1734 + 1944 + 2166 + 2400 + 2646 + 2904 + 3174 + 3456 + 3750", "x2": "relu mul sqr mod sign INT- 2 n INT+ 6", "tree": "relu((((sign(-2) mod n))**2 mul 6))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 + 9 + 1 + 1 - 6 + 1 + 3 + 2 + 2 + 5 + 0 + 2 + 1 + 1 + 6 + 15 + 3 + 2 + 0 + 5 + 14 + 2 + 3 + 23 + 4 + 13 + 1 + 2 + 22 + 3 + 14", "x2": "mod add x_0_5 sign sub n mul x_0_4 n n", "tree": "((x_0_5 add sign((n sub (x_0_4 mul n)))) mod n)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 3 - 11 - 20 - 30 - 41 - 53 - 66 - 80 - 95 - 111 - 128 - 146 - 165 - 185 - 206 - 228 - 251 - 275 - 300 - 326 - 353 - 381 - 410 - 440 - 471 - 503 - 536", "x2": "add x_0_1 sub INT- 6 n", "tree": "(x_0_1 add (-6 sub n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 - 7 - 51 - 40 - 485 - 444 - 6741 - 7040 - 12 1257 - 14 700 - 266 7533 - 337 6656 - 6935 5689 - 9454 6172 - 20 8067 445 - 30 2547 7248 - 707 4279 4841 - 1089 1718 604 - 2 6882 2620 3597 - 4 3566 8722 3760 - 112 9055 55 633 - 191 6942 3784 4956 - 5193 6530 2532 8589 - 9201 3234 1655 7312 - 25 9682 6512 6642 8825 - 47 8468 8176 6097 9548 - 1402 2863 1683 8715 5821 - 2679 4253 7890 1485 3904", "x2": "add mul x_0_2 add n abs n sqr n", "tree": "((x_0_2 mul (n add abs(n))) add (n)**2)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 8 + 6 - 7 - 9 - 3 - 2 - 10 + 8 + 2 + 7 + 11 + 18 + 39 + 31 + 50 + 69 + 97 + 12 + 30 + 44 + 55 + 60 + 45 + 39 + 15 - 27 - 22 + 42 + 42 + 29 + 6 - 21 + 24 - 4 + 56", "x2": "add sub mod x_0_1 sub idiv x_0_8 sign mod n n sub idiv INT- 6 n add x_0_2 n x_0_10 n", "tree": "(((x_0_1 mod ((x_0_8 idiv sign((n mod n))) sub ((-6 idiv n) sub (x_0_2 add n)))) sub x_0_10) add n)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 1 - 9 + 0 + 9 + 9 + 18 + 22 + 26 + 42 + 78 + 159 + 195 + 204 + 373 + 454 + 479 + 623 + 744 + 969 + 985 + 994 + 1283 + 1308 + 1429 + 1493 + 2118 + 2182 + 2506", "x2": "relu add x_0_1 sqr abs relu relu relu mod x_0_2 n", "tree": "relu((x_0_1 add (abs(relu(relu(relu((x_0_2 mod n))))))**2))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 - 3 + 2 - 3 - 6 + 2 - 3 + 0 - 9 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 0 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0 + 0 + 0 + 0 + 2 + 0 + 0 + 2 + 0 + 0", "x2": "relu x_0_9", "tree": "relu(x_0_9)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 8 + 8 - 2 - 5 - 8 + 6 + 2 - 547 - 839 - 403 - 943 - 835 + 3 3593 + 5 2217 + 1 3637 + 3 3041 + 2 9117 - 121 327 - 188 827 - 87 4631 - 211 6551 - 186 5479 + 7745 8873 + 1 2037 809 + 3148 5485 + 7619 4569 + 6715 5941 - 27 8852 767 - 43 3335 499 - 20 1507 3543 - 48 7645 4983 - 42 9798 2855 + 1784 6532 6393", "x2": "sub INT- 7 mul add add x_0_5 n INT+ 9 sqr add sign x_0_7 INT+ 7", "tree": "(-7 sub (((x_0_5 add n) add 9) mul ((sign(x_0_7) add 7))**2))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 1 + 0 + 1 + 2 + 3 + 4 + 5 + 6 - 1 + 0 + 1 + 2 + 3 + 4 + 5 + 6 - 1 + 0 + 1 + 2 + 3 + 4 + 5 + 6 - 1 + 0", "x2": "add sign INT- 8 relu sub mod n INT- 8 INT- 7", "tree": "(sign(-8) add relu(((n mod -8) sub -7)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 3 - 4 - 7 + 6 - 9 + 22 - 37 + 68 - 127 + 232 - 427 + 786 - 1445 + 2658 - 4889 + 8992 - 1 6539 + 3 420 - 5 5951 + 10 2910 - 18 9281 + 34 8142 - 64 333 + 117 7756 - 216 6231 + 398 4320 - 732 8307 + 1347 8858", "x2": "sub x_0_2 add x_0_1 x_0_3", "tree": "(x_0_2 sub (x_0_1 add x_0_3))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 5 + 0 + 4 - 1 - 14 - 3 - 2 - 3 - 5 - 5 - 5 - 6 - 7 - 7 - 8 - 9 - 9 - 9 - 10 - 11 - 12 - 12 - 12 - 13 - 14 - 15 - 15", "x2": "mod INT+ 4 idiv sqr n sub x_0_2 n", "tree": "(4 mod ((n)**2 idiv (x_0_2 sub n)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 10 + 6 + 10 + 1 - 9 - 6 + 8 + 4 + 10 + 11 + 0 + 1 + 0 + 2 + 7 + 2 + 2 + 4 + 2 + 1 + 1 + 11 + 3 + 4 + 8 + 6 + 4 + 5 + 14 + 7 + 5 + 7", "x2": "mod n abs add mul x_0_7 sign n INT+ 5", "tree": "(n mod abs(((x_0_7 mul sign(n)) add 5)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "- 1 - 6 - 3 + 5 - 4 + 3 - 5 + 5 + 1 + 1 + 1 + 26 + 1 + 10 + 1 + 26 + 2 + 2 + 2 + 677 + 2 + 101 + 2 + 677 + 5 + 5 + 5 + 45 8330 + 5 + 1 202 + 5 + 45 8330 + 26 + 26", "x2": "add sign mod sub idiv add x_0_3 sign INT- 3 n n n sqr relu x_0_8", "tree": "(sign(((((x_0_3 add sign(-3)) idiv n) sub n) mod n)) add (relu(x_0_8))**2)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 3 + 7 + 2 - 5 + 2 + 5 + 5 + 5 + 6 + 8 + 9 + 9 + 10 + 12 + 13 + 13 + 14 + 16 + 17 + 17 + 18 + 20 + 21 + 21 + 22 + 24 + 25 + 25", "x2": "mul INT+ 1 add idiv INT+ 9 add x_0_2 mul idiv sub INT- 1 abs x_0_2 n abs abs n n", "tree": "(1 mul ((9 idiv (x_0_2 add (((-1 sub abs(x_0_2)) idiv n) mul abs(abs(n))))) add n))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 8 - 6 - 9 - 1 + 0 - 1 - 2 - 2 + 0 - 1 - 2 - 2 + 0 - 1 - 2 - 2 + 0 - 1 - 2 - 2 + 0 - 1 - 2 - 2 + 0 - 1 - 2 - 2 + 0", "x2": "add idiv x_0_1 n sign x_0_4", "tree": "((x_0_1 idiv n) add sign(x_0_4))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 + 2 + 7 + 9 + 4 - 1 - 3 + 2 + 7 + 9 + 4 - 1 - 3 + 2 + 7 + 9 + 4 - 1 - 3 + 2 + 7 + 9 + 4 - 1 - 3 + 2 + 7 + 9 + 4", "x2": "mul sub INT+ 6 x_0_3 sign n", "tree": "((6 sub x_0_3) mul sign(n))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 5 + 6 + 15 - 6 + 61 + 180 - 3 + 852 + 2703 + 0 + 1 4485 + 4 8660 + 11 + 28 9704 + 102 1869 + 256 + 666 3199 + 2452 4868 + 6417 + 1 7324 3184 + 6 6217 1451 + 17 9696 + 50 2405 2349 + 198 6514 3548 + 557 599 + 1607 6967 5184 + 6555 4973 7105 + 1 8940 392", "x2": "add add INT- 6 add INT- 5 n relu sub mul add INT+ 5 n x_0_3 mul INT- 4 mod n abs INT+ 3", "tree": "((-6 add (-5 add n)) add relu((((5 add n) mul x_0_3) sub (-4 mul (n mod abs(3))))))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 + 4 + 5 + 3 - 4 - 6 - 7 - 5 - 6 - 8 - 9 - 7 - 8 - 10 - 11 - 9 - 10 - 12 - 13 - 11 - 12 - 14 - 15 - 13 - 14 - 16 - 17 - 15 - 16 - 18", "x2": "sub INT- 2 abs x_0_4", "tree": "(-2 sub abs(x_0_4))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650", "x2": "abs sub relu sqr n n", "tree": "abs((relu((n)**2) sub n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 5 + 9 + 17 + 29 + 39 + 51 + 65 + 81 + 109 + 130 + 153 + 178 + 205 + 234 + 265 + 298 + 333 + 370 + 409 + 450 + 493 + 538 + 585 + 634 + 685", "x2": "add mod INT+ 9 n relu sqr n", "tree": "((9 mod n) add relu((n)**2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 - 5 - 1 + 10 + 5 - 3 + 7 - 9 + 531 + 330 + 73 + 800 + 435 + 282 + 707 + 972 + 6 1065 + 4 260 + 9417 + 10 8800 + 6 2205 + 4 2300 + 11 999 + 15 9408 + 1044 2115 + 716 6280 + 174 2145 + 2088 9600 + 1237 8795 + 871 3800 + 2364 2787 + 3506 9760 + 23 7036 105 + 16 7690 9520", "x2": "abs mul add add abs mul n INT+ 6 n INT- 4 x_0_8", "tree": "abs((((abs((n mul 6)) add n) add -4) mul x_0_8))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 10 + 6 - 5 + 7 - 10 - 10 - 40 - 125 - 630 - 3150 - 1 5895 - 8 40 - 40 3285 - 203 2105 - 1023 9925 - 5159 9745 - 2 6001 5065 - 13 1023 5760 - 66 237 8330 - 332 6989 275 - 1676 4952 6595 - 8447 9881 1665 - 4 2570 594 9860 - 21 4513 7920 555 - 108 951 4363 5625 - 544 6997 1223 6320 - 2744 7835 9093 765 - 1 3831 1748 5065 6460 - 6 9696 3499 7146 280 - 35 1205 2484 1848 2850", "x2": "mul INT- 5 abs add x_0_1 add n x_0_4", "tree": "(-5 mul abs((x_0_1 add (n add x_0_4))))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 7 + 4 + 10 + 3 + 7 + 2 - 3 + 20 + 40 + 21 + 56 + 18 + 30 + 220 + 440 + 273 + 784 + 270 + 480 + 3740 + 7920 + 5187 + 1 5680 + 5670 + 1 560 + 8 6020 + 19 80 + 12 9675 + 40 7680 + 15 3090 + 29 5680 + 249 4580 + 570 2400", "x2": "abs mul mod sub idiv x_0_8 relu add x_0_4 x_0_2 INT+ 4 n x_0_6", "tree": "abs(((((x_0_8 idiv relu((x_0_4 add x_0_2))) sub 4) mod n) mul x_0_6))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 5 + 2 + 1 + 6 - 6 - 9 + 8 - 10 + 9 - 4 + 0 + 2 - 5 - 4 - 5 + 0 + 0 - 3 - 4 - 4 - 3 - 4 + 0 - 4 - 5 - 4 - 5 + 0 + 0 - 3 - 4 - 4 - 3 - 4 + 0 - 4 - 5 - 4", "x2": "mod x_0_12 INT- 6", "tree": "(x_0_12 mod -6)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 7 - 2 + 8 + 4 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 10 + 1 + 20 + 19 + 48 + 59 + 102 + 129 + 190 + 237 + 320 + 391 + 500 + 599 + 738 + 869 + 1042 + 1209 + 1420 + 1627 + 1880 + 2131 + 2430 + 2729 + 3078 + 3429 + 3832 + 4239", "x2": "add add abs x_0_2 sqr n add INT- 2 n", "tree": "((abs(x_0_2) add (n)**2) add (-2 add n))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 1 + 4 - 4 - 1 - 9 - 5 - 13 - 95 - 62 - 162 - 1156 - 831 - 2376 - 1 7416 - 1 3473 - 4 1564 - 31 4336 - 25 8381 - 84 8715 - 661 4549 - 572 5967 - 1983 4803 - 1 5900 7580 - 1 4399 7914 - 5 2231 9452 - 42 9893 653 - 40 5177 6422 - 153 627 1716 - 1291 1191 7533 - 1261 2738 8564 - 4940 9962 5596 - 4 2647 4505 5043", "x2": "sub sub mul n x_0_3 relu sub abs abs n x_0_5 sign x_0_7", "tree": "(((n mul x_0_3) sub relu((abs(abs(n)) sub x_0_5))) sub sign(x_0_7))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 1 + 3 - 4 + 9 - 9 + 2336 + 3924 + 6513 + 9684 + 1 8315 + 2 2785 + 3 2148 + 4 4538 + 5 9860 + 8 3340 + 10 5729 + 13 6477 + 17 4138 + 21 9061 + 27 6940 + 33 9018 + 41 5261 + 50 4763 + 60 8437 + 73 2565 + 86 9002 + 102 8350 + 121 363 + 141 6638 + 165 4165 + 191 5531", "x2": "add mod mod x_0_5 x_0_3 mul sub n INT- 5 x_0_4 sqr mul n sub n INT- 2", "tree": "(((x_0_5 mod x_0_3) mod ((n sub -5) mul x_0_4)) add ((n mul (n sub -2)))**2)", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 3 - 6 + 3 + 5 + 2 - 9 - 8 + 0 + 0 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_8 n", "tree": "(x_0_8 idiv n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 2 - 5 - 10 + 9 + 7 - 1 - 15 - 10 - 16 - 14 - 15 - 15 - 32 - 17 - 19 - 19 - 20 - 21 - 23 - 21 - 23 - 24 - 24 - 25 - 26 - 25 - 27 - 28 - 28 - 29 - 30 - 29", "x2": "sub sub idiv n INT+ 3 add n idiv x_0_6 x_0_7 INT+ 7", "tree": "(((n idiv 3) sub (n add (x_0_6 idiv x_0_7))) sub 7)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 7 + 10 + 8 - 4 - 2 + 1 - 4 961 + 2 5921 + 1 5999 - 9681 + 4 7187 721 - 3 5045 1919 - 2 5086 4319 + 1 7425 8001 - 9 6639 1236 6081 + 8 1024 4836 7279 + 6 5024 314 8481 - 5 325 7106 8881 + 30 9245 1957 1459 2001 - 28 5854 3783 9760 3119 - 25 1773 499 918 4321 + 21 2978 4076 3504 3921 - 142 5001 8618 5283 9940 6081 + 142 9271 8919 8801 5594 9999 + 136 1588 6539 886 8807 9681 - 124 2090 733 2757 6147 2721 + 893 7611 6775 4101 2107 4940 321 - 961 6141 2892 9536 8923 1593 2719 - 980 3438 3081 4385 5417 3703 2001 + 954 9188 4837 4240 5420 2279 481 - 7321 6914 8624 1597 1184 5908 7429 6321 + 8377 5822 9123 4125 4058 5640 5847 9279", "x2": "add mul relu n mul mul INT- 1 0 mul n INT+ 8 x_0_4 sign sub mod x_0_1 n x_0_7", "tree": "((relu(n) mul ((-10 mul (n mul 8)) mul x_0_4)) add sign(((x_0_1 mod n) sub x_0_7)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 2 - 5 - 8 + 2 + 9 - 4 + 1 + 36 + 95 + 160 + 42 + 198 + 92 + 24 + 900 + 2470 + 4320 + 1176 + 5742 + 2760 + 744 + 2 8800 + 8 1510 + 14 6880 + 4 1160 + 20 6712 + 10 2120 + 2 8272 + 112 3200 + 326 400 + 602 2080 + 172 8720 + 888 8616", "x2": "mul relu abs x_0_7 add INT+ 1 0 n", "tree": "(relu(abs(x_0_7)) mul (10 add n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 4 - 2 - 8 + 1 + 4 + 1 - 13 - 4 - 17 + 1 + 5 + 1 - 25 - 6 - 29 + 1 + 5 + 1 - 37 - 8 - 41 + 1 + 5 + 1 - 49 - 11 - 53 + 1 + 5", "x2": "idiv add sub n mul n INT+ 3 sign INT+ 3 x_0_3", "tree": "(((n sub (n mul 3)) add sign(3)) idiv x_0_3)", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 6 - 2 + 1 + 35 - 30 + 49 - 40 + 63 - 50 + 77 - 60 + 91 - 70 + 105 - 80 + 119 - 90 + 133 - 100 + 147 - 110 + 161 - 120 + 175 - 130 + 189 - 140 + 203 - 150", "x2": "add mul idiv n sign sub INT- 2 mul mul sub x_0_1 x_0_4 INT- 7 INT- 3 abs INT- 6 n", "tree": "(((n idiv sign((-2 sub (((x_0_1 sub x_0_4) mul -7) mul -3)))) mul abs(-6)) add n)", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 - 8 + 0 + 7 + 8 - 1 + 10 - 10 + 3 + 6 + 1 + 8 + 12 + 6 + 5 + 0 + 7 + 12 + 8 + 4 + 12 + 4 + 17 + 0 + 6 + 18 + 10 + 4 + 9 + 2 + 12 + 0 + 15 + 8", "x2": "mod sub mul x_0_8 INT+ 8 idiv idiv x_0_3 abs INT+ 3 n abs n", "tree": "(((x_0_8 mul 8) sub ((x_0_3 idiv abs(3)) idiv n)) mod abs(n))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 24 + 81 + 340 + 1725 + 1 386 + 7 2751 + 58 2072 + 523 8729 + 5238 7390 + 5 7626 1411 + 69 1513 7076 + 898 9678 2157 + 1 2585 5495 394 + 18 8783 2425 6135 + 302 531 8809 8416 + 5134 9041 9767 3361 + 9 2428 2755 5812 822 + 175 6137 2356 429 5979 + 3512 2744 7120 8591 9980 + 7 3757 7638 9538 432 21 + 162 2670 8056 9836 9504 946 + 3732 1428 5310 6249 8594 2287 + 8 9571 4284 7454 9996 6261 5464 + 223 9285 7118 6374 9915 6538 7225 + 5822 1428 5084 5749 7807 6 8526 + 15 7197 8569 7283 5244 789 185 931", "x2": "mul n add n x_0_1", "tree": "(n mul (n add x_0_1))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 + 3 - 2 + 6 + 4 + 1 + 7 + 5 + 2 + 8 + 6 + 3 + 9 + 7 + 4 + 10 + 8 + 5 + 11 + 9 + 6 + 12 + 10 + 7 + 13 + 11 + 8 + 14 + 12", "x2": "abs add x_0_3 add INT+ 1 idiv sign add mul n n INT+ 8 n", "tree": "abs((x_0_3 add (1 add (sign(((n mul n) add 8)) idiv n))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 + 5 - 3 + 6 - 8 - 2 - 3 + 5 + 53 - 40 + 16 - 48 + 61 + 16 + 77 - 40 - 408 + 320 - 67 + 384 - 411 - 128 - 1024 + 320 + 3197 - 2560 + 125 - 3072 + 2264 + 1024 + 1 1389 - 2560 - 2 5451 + 2 480", "x2": "add mul INT- 8 x_0_8 mul x_0_6 mod sqr n sqr INT- 2", "tree": "((-8 mul x_0_8) add (x_0_6 mul ((n)**2 mod (-2)**2)))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 2 - 4 - 8 - 6 - 6 - 2 - 4 + 10 - 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 4 + 8 + 0 + 0 + 1 + 2 + 4 + 6 + 0 + 2 + 7 + 10 + 3 + 6 + 14 + 2 + 10 + 16 + 6 + 12 + 2 + 8 + 21 + 4 + 17 + 0 + 13 + 24", "x2": "mod sub x_0_2 sqr INT- 2 n", "tree": "((x_0_2 sub (-2)**2) mod n)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 4 + 3 - 6 + 6 + 2 + 10 - 3 - 29 + 5 - 41 + 18 - 3 + 36 - 30 - 161 + 8 - 223 + 71 - 35 + 159 - 172 - 828 + 16 - 1140 + 329 - 202 + 767 - 889 - 4170 + 49 - 5732 + 1612", "x2": "sub mul INT+ 5 x_0_7 n", "tree": "((5 mul x_0_7) sub n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 10 - 7 + 6 - 12 - 25 - 42 - 49 - 32 - 27 - 40 - 33 - 48 - 13 - 84 - 15 + 0 - 51 - 36 - 133 - 80 - 21 - 44 - 23 + 0 - 75 - 52 - 189 - 112 - 29", "x2": "mul n mod add x_0_3 add x_0_2 x_0_1 INT- 8", "tree": "(n mul ((x_0_3 add (x_0_2 add x_0_1)) mod -8))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 169 + 676 + 1521 + 2704 + 4225 + 6084 + 8281 + 1 816 + 1 3689 + 1 6900 + 2 449 + 2 4336 + 2 8561 + 3 3124 + 3 8025 + 4 3264 + 4 8841 + 5 4756 + 6 1009 + 6 7600 + 7 4529 + 8 1796 + 8 9401 + 9 7344 + 10 5625 + 11 4244", "x2": "sqr mul n sub INT- 4 mul abs sign INT+ 5 INT+ 9", "tree": "((n mul (-4 sub (abs(sign(5)) mul 9))))**2", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 2 + 7 + 5 - 10 - 6 + 36 + 4 + 49 + 25 + 100 + 36 + 1296 + 16 + 2401 + 625 + 1 0 + 1296 + 167 9616 + 256 + 576 4801 + 39 625 + 1 0 0 + 167 9616 + 2 8211 990 7456 + 6 5536 + 33 2329 3056 9601 + 1525 8789 625 + 1 0 0 0 0 + 2 8211 990 7456 + 7 9586 6110 9946 4008 8439 1936 + 42 9496 7296", "x2": "sub sqr x_0_6 mod INT+ 4 sign n", "tree": "((x_0_6)**2 sub (4 mod sign(n)))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 + 4 + 1 + 9 + 7 + 6 + 11 + 11 + 12 + 11 + 14 + 15 + 16 + 19 + 15 + 19 + 19 + 21 + 23 + 23 + 24 + 23 + 26 + 27 + 28 + 31 + 27 + 31 + 31 + 33 + 35 + 35", "x2": "add n sub mod sub mul relu sqr add x_0_6 n n mul INT+ 5 sqr INT- 8 INT- 6 INT- 5", "tree": "(n add ((((relu(((x_0_6 add n))**2) mul n) sub (5 mul (-8)**2)) mod -6) sub -5))", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 6 - 7 - 10 - 5 + 9 + 2 + 15 + 12 + 4 + 2 + 5 + 17 + 15 + 31 + 28 + 22 + 21 + 25 + 38 + 37 + 54 + 52 + 47 + 47 + 52 + 66 + 66 + 84 + 83 + 79 + 80 + 86", "x2": "add add sign abs INT- 6 x_0_7 sub n idiv idiv n x_0_2 mod sign INT+ 4 INT+ 8", "tree": "((sign(abs(-6)) add x_0_7) add (n sub ((n idiv x_0_2) idiv (sign(4) mod 8))))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 4 - 8 + 1 - 12 - 4 - 18 - 11 - 26 - 20 - 36 - 31 - 48 - 44 - 62 - 59 - 78 - 76 - 96 - 95 - 116 - 116 - 138 - 139 - 162 - 164 - 188 - 191 - 216", "x2": "sub x_0_2 n", "tree": "(x_0_2 sub n)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 10 + 7 + 6 - 9 + 8 + 10 + 384 + 648 + 700 + 726 + 432 + 1352 + 1960 + 2025 + 2048 + 867 + 1944 + 5054 + 4800 + 3087 + 484 + 529 + 1728 + 1 1875 + 6760 + 1 5309 + 5488 + 1 6820 + 1 7100 + 2 2103 + 3072 + 3 492", "x2": "mul mod x_0_7 n idiv sqr mod n x_0_1 relu idiv n n", "tree": "((x_0_7 mod n) mul (((n mod x_0_1))**2 idiv relu((n idiv n))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 3 - 8 - 15 - 24 - 35 - 48 - 63 - 80 - 99 - 120 - 143 - 168 - 195 - 224 - 255 - 288 - 323 - 360 - 399 - 440 - 483 - 528 - 575 - 624 - 675 - 728", "x2": "mul add mul n sign INT- 1 INT- 2 n", "tree": "(((n mul sign(-1)) add -2) mul n)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 10 - 4 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10 + 0 + 1 + 10", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 4 - 2 - 7 + 5 - 8 + 7 + 5 - 8 + 7 - 5 - 8 - 7 + 5 - 8 + 7 + 5 - 8 + 7 - 5 - 8 - 7 + 5 - 8 + 7 + 5 - 8 + 7 - 5 - 8 - 7 + 5 - 8", "x2": "mul sign sub sign x_0_2 x_0_6 x_0_3", "tree": "(sign((sign(x_0_2) sub x_0_6)) mul x_0_3)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 10 + 11 - 6 + 16 + 0 + 23 + 8 + 32 + 18 + 43 + 30 + 56 + 44 + 71 + 60 + 88 + 78 + 107 + 98 + 128 + 120 + 151 + 144 + 176 + 170 + 203 + 198", "x2": "add n x_0_2", "tree": "(n add x_0_2)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 8 - 9 - 13 - 16 - 23 - 28 - 34 - 36 - 44 - 48 - 51 - 58 - 63 - 69 - 71 - 79 - 83 - 86 - 93 - 98 - 104 - 106 - 114 - 118 - 121 - 128 - 133", "x2": "add relu abs mod INT+ 9 mod x_0_1 INT- 7 mod abs sign n mul n INT- 5", "tree": "(relu(abs((9 mod (x_0_1 mod -7)))) add (abs(sign(n)) mod (n mul -5)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 10 - 81 - 1280 - 3 1975 - 115 1064 - 5640 2087 - 36 973 3504 - 2923 8841 3743 - 29 2388 4137 4200 - 3537 8998 627 8079 - 50 9457 5721 404 3232 - 8609 8329 6855 8330 6039 - 168 7527 2618 3743 2798 3448 - 3 7969 3633 9134 2237 9627 5575 - 972 157 281 8361 2918 4654 6944 - 28 912 5381 1450 6413 3436 5206 6527 - 9101 5662 3491 7 7923 3432 6955 4424 - 328 5665 4108 251 2813 326 9203 914 6703 - 13 1426 6164 3210 512 5213 768 1236 5868 800 - 5795 9137 8465 5632 6021 8966 8742 5334 7823 2359 - 280 5222 2717 7332 6179 4597 9967 1386 2034 6446 1272 - 14 8396 2581 7680 8954 8934 2340 2616 3301 6327 1 2359 - 8547 6244 7098 4195 8018 6118 7990 7006 1740 4352 711 8208 - 534 2265 2943 6512 2376 1632 4249 4187 8858 7772 44 4887 9375 - 36 1137 1338 9908 2272 6286 3519 2607 1010 8533 3875 74 4245 6824 - 2 6326 8970 6124 3097 6746 2750 5541 576 6912 839 4880 4255 5102 3967 - 2064 287 2960 1458 8576 9079 6434 4189 2125 9073 8158 6253 6320 278 9344", "x2": "mul relu n mod sub n sqr idiv idiv n x_0_2 x_0_2 mul n x_0_1", "tree": "(relu(n) mul ((n sub (((n idiv x_0_2) idiv x_0_2))**2) mod (n mul x_0_1)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 1 + 3 - 9 + 4 + 8 + 0 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1", "x2": "sign mul x_0_6 n", "tree": "sign((x_0_6 mul n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 8 + 8 - 3 - 8 + 5 - 3 - 8 - 7 - 72 - 77 - 848 - 996 - 1 1872 - 1 4927 - 18 9947 - 25 3759 - 341 9045 - 482 1485 - 6838 969 - 1 125 2025 - 15 438 2306 - 23 2880 8439 - 361 519 263 - 582 2040 914 - 9387 3520 589 - 1 5719 5424 3715 - 26 2845 9043 7969 - 45 5867 4144 8696 - 788 5378 1439 1087 - 1413 1904 8929 1874 - 2 5233 2123 8932 3215 - 4 6635 3222 5182 2097 - 85 7929 2794 5739 216 - 163 2237 2175 4897 3976", "x2": "add add INT+ 8 x_0_9 mul n x_0_2", "tree": "((8 add x_0_9) add (n mul x_0_2))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 2 - 10 + 8 - 4 - 20 + 16 - 8 - 40 + 32 - 16 - 80 + 64 - 32 - 160 + 128 - 64 - 320 + 256 - 128 - 640 + 512 - 256 - 1280 + 1024 - 512 - 2560 + 2048 - 1024 - 5120", "x2": "add x_0_3 x_0_3", "tree": "(x_0_3 add x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 10 - 35 - 1 + 49 - 19 - 119 + 17 + 217 - 55 - 455 + 89 + 889 - 199 - 1799 + 377 + 3577 - 775 - 7175 + 1529 + 1 4329 - 3079 - 2 8679 + 6137 + 5 7337 - 1 2295 - 11 4695 + 2 4569", "x2": "add x_0_2 mul INT+ 3 sub INT- 7 x_0_2", "tree": "(x_0_2 add (3 mul (-7 sub x_0_2)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976", "x2": "sqr sqr n", "tree": "((n)**2)**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 1 + 6 + 6 - 7 + 30 + 50 + 58 + 75 + 107 + 91 + 94 + 111 + 121 + 118 + 165 + 195 + 213 + 240 + 282 + 276 + 289 + 316 + 336 + 343 + 400 + 440 + 468 + 505 + 557 + 561", "x2": "sub mul n n x_0_5", "tree": "((n mul n) sub x_0_5)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 2 + 28 - 175 + 1253 - 8736 + 6 1194 - 42 8309 + 299 8219 - 2098 7470 + 1 4691 2360 - 10 2838 6443 + 71 9870 5185 - 503 9093 6204 + 3527 3655 3526 - 2 4691 5587 4577 + 17 2840 9112 2151 - 120 9886 3785 4938 + 846 9204 6498 4692 - 5928 4432 5489 2711 + 4 1499 1027 8424 9117 - 29 493 7194 8974 3672 + 203 3456 364 2820 5858 - 1423 4192 2549 9744 845 + 9963 9345 7849 8208 6083 - 6 9747 5420 4948 7460 2406 + 48 8232 7943 4641 2221 7024 - 341 7629 5604 2488 5551 8979", "x2": "mul INT+ 7 sub n x_0_1", "tree": "(7 mul (n sub x_0_1))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976", "x2": "sqr abs mul sign INT+ 2 mul n n", "tree": "(abs((sign(2) mul (n mul n))))**2", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 + 9 + 30 - 48 - 171 + 297 + 1034 - 1773 - 6187 + 1 649 + 3 7137 - 6 3880 - 22 2799 + 38 3307 + 133 6818 - 229 9822 - 802 875 + 1379 8967 + 4812 5288 - 8279 3769 - 2 8875 1689 + 4 9676 2656 + 17 3251 173 - 29 8057 5900 - 103 9506 1012 + 178 8345 5439 + 623 7036 6120 - 1073 73 2597", "x2": "add mod x_0_3 n add mul x_0_2 INT- 6 n", "tree": "((x_0_3 mod n) add ((x_0_2 mul -6) add n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "mul n abs n", "tree": "(n mul abs(n))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 8 - 8 - 3 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0", "x2": "relu relu x_0_4", "tree": "relu(relu(x_0_4))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 - 6 + 1 + 10 - 36 - 28 - 80 - 63 - 100 - 176 - 228 - 247 - 238 - 270 - 368 - 544 - 450 - 551 - 660 - 819 - 638 - 805 - 888 - 1375 - 1144 - 1215 - 1204 - 1798 - 1380 - 1364", "x2": "mul sub sub sub idiv x_0_4 relu n mod x_0_5 n sign n mod sub INT- 9 n INT+ 8 n", "tree": "(((((x_0_4 idiv relu(n)) sub (x_0_5 mod n)) sub sign(n)) sub ((-9 sub n) mod 8)) mul n)", "n_input_points": "26", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 4 + 0 + 5 + 13 + 1 + 6 + 12 + 21 + 10 + 16 + 23 + 33 + 23 + 30 + 38 + 49 + 40 + 48 + 57 + 69 + 61 + 70 + 80 + 93 + 86 + 96 + 107 + 121 + 115", "x2": "add sub n idiv n n x_0_4", "tree": "((n sub (n idiv n)) add x_0_4)", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 10 + 7 - 2 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0", "x2": "idiv sqr relu sign x_0_4 INT- 6", "tree": "((relu(sign(x_0_4)))**2 idiv -6)", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 6 - 4 + 7 + 7 + 9 + 3 - 10 + 28 + 34 + 34 + 38 + 41 + 46 + 48 + 48 + 54 + 58 + 61 + 63 + 64 + 67 + 72 + 75 + 79 + 81 + 82 + 87 + 91 + 92 + 95 + 96 + 103 + 103", "x2": "add n add add mod x_0_8 INT+ 5 n abs n", "tree": "(n add (((x_0_8 mod 5) add n) add abs(n)))", "n_input_points": "26", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 8 + 2 - 8 - 3 - 8 - 1 - 10 - 14 - 23 - 25 - 36 - 51 - 75 - 101 - 138 - 190 - 266 - 368 - 507 - 698 - 965 - 1334 - 1842 - 2541 - 3507 - 4842 - 6685 - 9227 - 1 2735 - 1 7578 - 2 4264 - 3 3492", "x2": "add x_0_4 sub x_0_1 sqr sign x_0_6", "tree": "(x_0_4 add (x_0_1 sub (sign(x_0_6))**2))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 + 1 - 27 + 0 - 113 - 6 - 452 - 25 - 1810 - 103 - 7244 - 417 - 2 8982 - 1668 - 11 5929 - 6674 - 46 3719 - 2 6700 - 185 4881 - 10 6806 - 741 9524 - 42 7225 - 2967 8098 - 170 8903 - 1 1871 2396 - 683 5617 - 4 7484 9590 - 2734 2468", "x2": "sub mul x_0_2 sqr abs INT- 2 abs mod n abs INT- 7", "tree": "((x_0_2 mul (abs(-2))**2) sub abs((n mod abs(-7))))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 8 - 4 + 8 + 7 + 10 - 5 + 7 - 2 + 16 + 12 + 0 + 1 - 2 + 13 + 1 + 10 - 8 - 4 + 8 + 7 + 10 - 5 + 7 - 2 + 16 + 12 + 0 + 1 - 2 + 13 + 1 + 10 - 8", "x2": "sub INT+ 4 sub x_0_8 INT+ 4", "tree": "(4 sub (x_0_8 sub 4))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr mod n abs sqr add INT+ 9 mod idiv n sign INT- 9 relu INT+ 2", "tree": "((n mod abs(((9 add ((n idiv sign(-9)) mod relu(2))))**2)))**2", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 9 - 4 + 10 + 14 + 16 + 28 + 30 + 54 + 48 + 42 + 68 + 106 + 118 + 170 + 158 + 82 + 190 + 280 + 252 + 128 + 292 + 426 + 372 + 180 + 420 + 590 + 532 + 224", "x2": "sub sqr n add mod x_0_1 x_0_2 n", "tree": "((n)**2 sub ((x_0_1 mod x_0_2) add n))", "n_input_points": "26", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 7 + 2 - 7 + 5 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900", "x2": "mul n add n idiv mul x_0_4 mod x_0_2 sign mod INT- 1 0 INT+ 3 x_0_1", "tree": "(n mul (n add ((x_0_4 mul (x_0_2 mod sign((-10 mod 3)))) idiv x_0_1)))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 7 + 1 - 3 - 5 + 0 - 10 + 3 + 0 + 1 + 0 + 0 + 0 + 0 + 3 + 0 + 1 + 0 + 0 + 0 + 0 + 3 + 0 + 1 + 0 + 0 + 0 + 0 + 3 + 0 + 1 + 0 + 0 + 0", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 3 - 10 + 4 + 9 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0", "x2": "idiv x_0_5 sub add n INT+ 8 mod add mul idiv INT- 8 INT+ 7 n x_0_5 add INT- 2 n", "tree": "(x_0_5 idiv ((n add 8) sub ((((-8 idiv 7) mul n) add x_0_5) mod (-2 add n))))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 0 - 6 - 8 - 5 + 8 - 6 - 2 + 1 + 5 + 6 + 14 + 15 + 22 + 14 + 22 + 19 + 0 + 20 + 34 + 7 + 0 + 24 + 28 + 3 + 0 + 28 + 46 + 43 + 0 + 32 + 4 + 9 + 0 + 36 + 38", "x2": "mod mul idiv x_0_4 sign n sub x_0_9 sign n add n abs n", "tree": "(((x_0_4 idiv sign(n)) mul (x_0_9 sub sign(n))) mod (n add abs(n)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 10 - 1 + 9 + 10 + 19 + 11 + 28 + 21 + 47 + 32 + 75 + 53 + 122 + 85 + 197 + 138 + 319 + 223 + 516 + 361 + 835 + 584 + 1351 + 945 + 2186 + 1529 + 3537 + 2474 + 5723 + 4003", "x2": "add abs x_0_4 x_0_2", "tree": "(abs(x_0_4) add x_0_2)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 5 - 1 - 7 + 7 + 7 - 7 - 5 + 1 + 9 + 9 + 121 + 121 + 9 + 1 + 25 + 169 + 169 + 1 5625 + 1 5625 + 169 + 25 + 841 + 2 9929 + 2 9929 + 2 4426 5641 + 2 4426 5641 + 2 9929 + 841 + 71 4025 + 8 9598 4489 + 8 9598 4489 + 5 9665 7053 2726 6025 + 5 9665 7053 2726 6025", "x2": "sqr add x_0_7 INT+ 4", "tree": "((x_0_7 add 4))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 5 - 8 + 5 - 3 + 0 - 13 - 5 - 8 + 5 - 3 + 0 - 13 - 5 - 8 + 5 - 3 + 0 - 13 - 5 - 8 + 5 - 3 + 0 - 13 - 5 - 8 + 5 - 3 + 0", "x2": "sub INT- 5 add INT+ 3 x_0_3", "tree": "(-5 sub (3 add x_0_3))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 + 0 - 11 - 1 - 12 - 2 - 13 - 3 - 14 - 4 - 15 - 5 - 16 - 6 - 17 - 7 - 18 - 8 - 19 - 9 - 20 - 10 - 21 - 11 - 22 - 12 - 23 - 13", "x2": "sub x_0_2 sign abs x_0_3", "tree": "(x_0_2 sub sign(abs(x_0_3)))", "n_input_points": "26", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 6 + 3 - 9 + 5 - 6 - 7 + 9 + 144 - 150 - 166 + 225 + 3600 - 3750 - 4007 + 5800 + 9 0 - 9 3750 - 9 6591 + 14 9232 + 225 0 - 234 3750 - 232 5032 + 383 3191 + 5625 0 - 5859 3750 - 5587 8641 + 9830 4039 + 14 625 0 - 14 6484 3750 - 13 4069 7307 + 25 1731 2807 + 351 5625 0 - 366 2109 3750", "x2": "add relu sub x_0_8 x_0_5 mul x_0_4 sqr relu INT+ 5", "tree": "(relu((x_0_8 sub x_0_5)) add (x_0_4 mul (relu(5))**2))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "- 6 - 6 - 2 - 3 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5 + 5 + 5 + 6", "x2": "abs idiv idiv add n relu sign idiv INT+ 9 x_0_4 INT- 6 sign n", "tree": "abs((((n add relu(sign((9 idiv x_0_4)))) idiv -6) idiv sign(n)))", "n_input_points": "26", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 2 - 6 + 0 - 6 + 0 + 0 - 5 + 0 - 3 + 4 - 1 + 6 + 7 + 3 + 9 + 7 + 15 + 11 + 19 + 21 + 18 + 25 + 24 + 33 + 30 + 39 + 42 + 40 + 48 + 48 + 58 + 56 + 66", "x2": "add add x_0_7 INT- 6 n", "tree": "((x_0_7 add -6) add n)", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 7 - 2 - 2 - 10 + 9 - 4 + 0 - 7 - 643 - 636 - 588 - 556 - 585 - 5678 - 5610 - 5225 - 5597 - 5814 - 4 6502 - 4 5918 - 4 2859 - 5 920 - 5 2580 - 37 7691 - 37 3383 - 34 9120 - 45 4288 - 46 6976 - 306 4797 - 303 8386 - 284 5934 - 401 2381 - 410 9569 - 2486 7866", "x2": "sub sub sub x_0_8 INT- 6 abs mul INT+ 8 sub sqr INT- 9 n abs mul INT- 8 x_0_5", "tree": "(((x_0_8 sub -6) sub abs((8 mul ((-9)**2 sub n)))) sub abs((-8 mul x_0_5)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 8 - 2 + 10 + 0 + 0 + 7 - 8 + 4 + 4 - 6 + 4 + 4 - 3 + 4 + 0 + 0 + 4 + 0 + 0 + 4 + 0 + 4 + 4 + 0 + 4 + 4 + 0 + 4 + 0 + 0 + 4 + 0 + 0", "x2": "sub INT+ 4 relu x_0_7", "tree": "(4 sub relu(x_0_7))", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 4 + 6 - 5 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6 + 0 + 0 + 6", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 9 + 3 - 8 + 32 + 43 + 55 + 8 + 87 + 103 + 120 + 150 + 175 + 197 + 220 + 256 + 287 + 333 + 363 + 406 + 444 + 475 + 534 + 584 + 629 + 667 + 733 + 790 + 842 + 887", "x2": "add n mul add sub n sqr n sub n sub mod x_0_4 n INT- 1 0 idiv INT- 3 x_0_4", "tree": "(n add (((n sub (n)**2) add (n sub ((x_0_4 mod n) sub -10))) mul (-3 idiv x_0_4)))", "n_input_points": "26", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 2 - 8 + 8 + 6 - 9 - 8 - 152 - 206 - 216 - 414 - 618 - 657 - 727 + 1343 + 4399 + 7799 + 1 4909 + 2 6271 + 3 8991 + 5 3796 + 2 3744 - 7 7985 - 26 5761 - 63 9136 - 132 2832 - 237 6291 - 388 3335 - 457 2723 - 223 4043 + 600 3618 + 2645 4978 + 7010 7378", "x2": "add x_0_1 mul mul n add add x_0_7 sign x_0_3 n INT- 1", "tree": "(x_0_1 add ((n mul ((x_0_7 add sign(x_0_3)) add n)) mul -1))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 5 - 10 + 4 + 0 + 46 + 51 + 45 + 41 + 87 + 92 + 86 + 82 + 128 + 133 + 127 + 123 + 169 + 174 + 168 + 164 + 210 + 215 + 209 + 205 + 251 + 256 + 250 + 246 + 292 + 297", "x2": "add sub abs x_0_4 sign idiv INT+ 7 INT+ 4 mul mul INT+ 7 INT+ 3 INT+ 2", "tree": "((abs(x_0_4) sub sign((7 idiv 4))) add ((7 mul 3) mul 2))", "n_input_points": "26", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "26", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 12 - 36 - 144 - 720 - 4320 - 3 240 - 24 1920 - 217 7280 - 2177 2800 - 2 3950 800 - 28 7400 9600 - 373 6212 4800 - 5230 6974 7200 - 7 8460 4620 8000 - 125 5367 3932 8000 - 2134 1245 6857 6000 - 3 8414 2422 3436 8000 - 72 9870 6024 5299 2000 - 1459 7412 490 5984 0 - 3 654 5653 302 5664 0 - 67 4400 4366 6656 4608 0 - 1551 1210 433 3098 5984 0 - 3 7226 9041 399 4366 3616 0 - 93 672 6025 9985 9159 400 0 - 2419 7487 6675 9633 8135 400 0 - 6 5333 2167 251 112 9646 800 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "26", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 8 - 9 - 8 - 1 - 5 + 4 + 6 + 7 + 8 + 9 + 10 + 15 + 18 + 20 + 22 + 24 + 26 + 32 + 36 + 39 + 42 + 45 + 48 + 55 + 60 + 64 + 68 + 72 + 76 + 84 + 90 + 95", "x2": "sub add n relu x_0_6 sign mul n sign n", "tree": "((n add relu(x_0_6)) sub sign((n mul sign(n))))", "n_input_points": "26", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 1 + 5 - 6 - 7 - 1 - 12 - 13 - 7 - 18 - 19 - 13 - 24 - 25 - 19 - 30 - 31 - 25 - 36 - 37 - 31 - 42 - 43 - 37", "x2": "sub x_0_3 INT+ 6", "tree": "(x_0_3 sub 6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 - 8 + 6 - 5 + 0 + 0 - 2 - 7 + 4 + 6 - 10 - 10 - 9 - 5 - 8 - 7 - 7 - 7 - 9 - 5 - 5 - 10 - 10 - 10 - 8 - 9 - 9 - 9 - 9 - 10 - 8 - 8", "x2": "sub INT- 7 idiv x_0_11 sub INT- 4 sign idiv add INT+ 1 mod x_0_10 abs n x_0_7", "tree": "(-7 sub (x_0_11 idiv (-4 sub sign(((1 add (x_0_10 mod abs(n))) idiv x_0_7)))))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "11"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 7 + 4 - 8 - 160 - 168 - 112 + 256 + 5760 + 6720 + 4928 - 1 2288 - 29 9520 - 37 6320 - 29 5680 + 78 6432 + 2036 7360 + 2709 5040 + 2247 1680 - 6291 4560 - 17 1085 8240 - 23 8436 3520 - 20 6739 4560 + 60 3979 7760 + 1710 8582 4000", "x2": "mul n add mul x_0_4 INT- 4 relu INT- 1", "tree": "(n mul ((x_0_4 mul -4) add relu(-1)))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 - 2 + 4 + 10 + 7 + 0 - 1 + 0 + 1 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0", "x2": "idiv x_0_5 abs add mod n add n INT- 1 relu n", "tree": "(x_0_5 idiv abs(((n mod (n add -1)) add relu(n))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 8 - 4 + 1 + 3 - 10 + 4 - 10 + 1 - 2 - 1 + 0 + 0 - 2 + 0 - 2 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 + 0 - 1 - 1 + 0 + 0", "x2": "sub idiv x_0_8 mul INT- 2 INT- 3 relu INT- 1 0", "tree": "((x_0_8 idiv (-2 mul -3)) sub relu(-10))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 4 + 7 - 4 - 8 + 0 - 9 - 10 - 4 - 6 - 49 + 49 - 49 - 49 + 49 - 49 - 49 - 49 - 49 - 49 + 49 - 49 - 49 + 49 - 49 - 49 - 49 - 49 - 49 + 49 - 49", "x2": "idiv sqr INT- 7 sign x_0_9", "tree": "((-7)**2 idiv sign(x_0_9))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 2 + 6 - 5 - 3 - 7 - 2 - 6 + 5 + 3 + 7 + 2 + 6 - 5 - 3 - 7 - 2 - 6 + 5 + 3 + 7 + 2 + 6 - 5 - 3 - 7 - 2", "x2": "mul idiv n sub idiv INT- 4 INT+ 1 n x_0_5", "tree": "((n idiv ((-4 idiv 1) sub n)) mul x_0_5)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 8 + 2 + 4 + 0 + 12 + 16 + 14 + 28 + 34 + 34 + 50 + 58 + 60 + 78 + 88 + 92 + 112 + 124 + 130 + 152 + 166 + 174 + 198 + 214", "x2": "add abs relu add idiv sqr n n n x_0_3", "tree": "(abs(relu((((n)**2 idiv n) add n))) add x_0_3)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440", "x2": "sub abs mul n relu n INT+ 1", "tree": "(abs((n mul relu(n))) sub 1)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 1 + 1 + 1 + 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000 + 12 1645 1004 883 2000 + 243 2902 81 7664 0", "x2": "add mul x_0_1 sub INT- 4 sub INT- 1 n relu x_0_1", "tree": "((x_0_1 mul (-4 sub (-1 sub n))) add relu(x_0_1))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 7 + 0 + 3 + 4 + 3 + 12 + 17 + 20 + 21 + 32 + 39 + 44 + 47 + 60 + 69 + 76 + 81 + 96 + 107 + 116 + 123 + 140 + 153 + 164 + 173", "x2": "abs relu add add n add n idiv sign sign abs add n INT- 3 x_0_2 x_0_4", "tree": "abs(relu(((n add (n add (sign(sign(abs((n add -3)))) idiv x_0_2))) add x_0_4)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 4 + 0 + 6 + 10 + 4 + 0 + 6 + 10 + 4 + 0 + 6 + 10 + 4 + 0 + 6 + 10 + 4 + 0 + 6 + 10 + 4 + 0 + 6 + 10", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 6 + 2 - 4 + 8 - 36 + 14 - 32 + 72 - 360 + 154 - 384 + 936 - 5040 + 2310 - 6144 + 1 5912 - 9 720 + 4 3890 - 12 2880 + 33 4152 - 199 5840 + 100 9470 - 294 9120 + 835 3800 - 5189 1840", "x2": "add mul relu n x_0_4 x_0_4", "tree": "((relu(n) mul x_0_4) add x_0_4)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 5 + 2 - 2 + 6 + 1 - 1 + 10 + 10 + 5 + 10 + 5 + 3 + 8 + 16 + 11 + 9 + 20 + 1 + 15 + 20 + 15 + 13 + 18 + 5 + 21 + 19 + 5 + 11 + 25 + 0 + 25", "x2": "mod add INT+ 1 0 x_0_10 add add x_0_3 x_0_6 relu abs INT- 5", "tree": "((10 add x_0_10) mod ((x_0_3 add x_0_6) add relu(abs(-5))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 5 - 2 + 9 + 10 + 10 - 10 - 10 + 68 + 7 + 18 + 18 + 141 + 145 + 53 + 69 + 18 + 28 + 150 + 276 + 187 + 110 + 74 + 32 + 163 + 410 + 446 + 279 + 165", "x2": "add x_0_7 add INT- 1 add INT+ 1 0 sub mod x_0_6 sqr n n", "tree": "(x_0_7 add (-1 add (10 add ((x_0_6 mod (n)**2) sub n))))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 8 - 9 + 6 + 5 - 1 + 3 + 15 + 17 + 3 + 5 + 12 + 9 - 2 - 3 + 12 + 11 + 5 + 9 + 21 + 23 + 9 + 11 + 18 + 15 + 4 + 3 + 18", "x2": "sub n x_0_6", "tree": "(n sub x_0_6)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 3 + 1 + 7 + 1 - 1 - 9 + 0 - 9 - 897 - 891 - 900 - 891 - 1797 - 8919 - 900 - 8919 - 161 2809 - 794 7729 - 81 900 - 794 7729 - 28 9821 8673 - 708 8579 5851 - 7 2981 900 - 708 8579 5851 - 4674 2731 5978 3357 - 56 3381 953 7307 3279 - 591 8036 5881 900 - 56 3381 953 7307 3279 - 13 5470 6575 4386 8378 9202 6161", "x2": "sub mul mul sign mod n x_0_1 x_0_8 x_0_4 sqr mul INT- 6 INT+ 5", "tree": "(((sign((n mod x_0_1)) mul x_0_8) mul x_0_4) sub ((-6 mul 5))**2)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 9 + 8 - 1 - 2 + 9 - 8 + 1 + 2 - 9 + 8 - 1 - 2 + 9 - 8 + 1 + 2 - 9 + 8 - 1 - 2 + 9 - 8 + 1 + 2 - 9", "x2": "idiv x_0_4 INT- 1", "tree": "(x_0_4 idiv -1)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 4 + 8 - 5 - 6 - 4 + 8 - 3 + 0 - 6 + 11 + 59 + 20 + 31 + 11 + 59 + 4 + 5 + 31 + 116 + 3476 + 395 + 956 + 116 + 3476 + 11 + 20 + 956 + 1 3451 + 1208 2571 + 15 6020", "x2": "abs add sqr x_0_9 INT- 5", "tree": "abs(((x_0_9)**2 add -5))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "- 8 + 1 - 8 + 8 + 1 - 4 - 10 + 8 + 19 + 12 + 30 + 25 + 22 + 18 + 38 + 51 + 46 + 66 + 63 + 62 + 60 + 82 + 97 + 94 + 116 + 115 + 116 + 116", "x2": "add add n x_0_7 abs n", "tree": "((n add x_0_7) add abs(n))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 3 - 1 - 5 - 4 + 8 + 8 + 4 + 1 + 1 + 0 + 0 + 0 + 1 + 1 + 8 + 8 + 8 + 1 + 1 + 0 + 0 + 0 + 2 + 1 + 13 + 13", "x2": "abs idiv add n x_0_1 sub sub mul add relu INT+ 1 x_0_5 sub abs n x_0_6 INT- 3 n", "tree": "abs(((n add x_0_1) idiv ((((relu(1) add x_0_5) mul (abs(n) sub x_0_6)) sub -3) sub n)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 3 + 10 - 9 - 3 + 4 - 4 - 3 - 1 - 4 - 3 - 1 - 1 - 3 - 1 - 1 - 3 - 1 - 1 - 3 - 1 - 1 - 3 - 1 - 1", "x2": "sub mod n x_0_3 sign relu idiv x_0_3 INT- 6", "tree": "((n mod x_0_3) sub sign(relu((x_0_3 idiv -6))))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 3 + 2 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "abs sub idiv idiv sqr n n INT- 9 abs idiv x_0_1 n", "tree": "abs(((((n)**2 idiv n) idiv -9) sub abs((x_0_1 idiv n))))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 3 + 5 + 0 + 500 + 0 + 5 0 + 0 + 500 0 + 0 + 5 0 0 + 0 + 500 0 0 + 0 + 5 0 0 0 + 0 + 500 0 0 0 + 0 + 5 0 0 0 0 + 0 + 500 0 0 0 0 + 0 + 5 0 0 0 0 0 + 0", "x2": "relu mul relu sqr INT- 1 0 x_0_2", "tree": "relu((relu((-10)**2) mul x_0_2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 196 + 361 + 576 + 841 + 1156 + 1521 + 1936 + 2401 + 2916 + 3481 + 4096 + 4761 + 5476 + 6241 + 7056 + 7921 + 8836 + 9801 + 1 816 + 1 1881 + 1 2996", "x2": "sqr sub abs sqr INT- 3 mul n INT- 5", "tree": "((abs((-3)**2) sub (n mul -5)))**2", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 5 + 2 + 5 - 5 + 6 - 30 + 14 + 40 - 45 + 60 - 330 + 168 + 520 - 630 + 900 - 5280 + 2856 + 9360 - 1 1970 + 1 8000 - 11 880 + 6 2832 + 21 5280 - 28 7280 + 45 0 - 288 2880", "x2": "mul n x_0_5", "tree": "(n mul x_0_5)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 1 + 7 + 2 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 + 0 - 1 + 0 - 1 - 1", "x2": "idiv sign mod INT- 8 abs idiv x_0_4 relu INT+ 3 relu sqr INT+ 7", "tree": "(sign((-8 mod abs((x_0_4 idiv relu(3))))) idiv relu((7)**2))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 9 + 12 - 162 + 2496 - 6 2550 + 225 1584 - 1 1032 7910 + 70 6098 5856 - 5719 3985 4822 + 57 1939 8548 1600 - 6920 4722 4327 4326 + 99 6548 30 3150 2080 - 1 6841 6612 5123 2385 2534 + 330 965 6052 4154 7509 5488 - 7 4271 7261 1793 4818 9648 6150 + 1901 3561 8861 9131 3655 45 2864 - 54 9491 9385 1092 8964 6296 3087 9430 + 1 7803 5388 775 4098 4540 4 493 3376 - 642 7077 5095 9922 9541 8940 1461 8095 902 + 25 7083 1003 8396 9181 6757 6058 4723 8035 8400 - 1 1337 3647 2693 3040 9119 104 1786 3197 3805 7046 + 548 7284 5278 3559 1801 3601 422 4578 7532 1960 7360", "x2": "mul sub INT- 6 x_0_1 mul sign sub n n sqr n", "tree": "((-6 sub x_0_1) mul (sign((n sub n)) mul (n)**2))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000 + 12 1645 1004 883 2000 + 243 2902 81 7664 0 + 5109 942 1717 944 0 + 11 2400 727 7776 768 0 + 258 5201 6738 8849 7664 0 + 6204 4840 1733 2394 3936 0", "x2": "mul x_0_1 relu add n mod x_0_1 mod idiv INT- 3 add x_0_3 mod x_0_1 sub INT- 8 INT- 6 INT- 7", "tree": "(x_0_1 mul relu((n add (x_0_1 mod ((-3 idiv (x_0_3 add (x_0_1 mod (-8 sub -6)))) mod -7)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 6 + 2 + 3 - 3 + 90 + 108 + 105 + 6480 + 6804 + 8400 + 64 1520 + 81 6480 + 120 1200 + 1 777 5360 + 1 5921 3600 + 2 6906 8800 + 274 8271 6800 + 458 5351 6800 + 869 922 2400 + 9 8937 7804 8000 + 18 2955 5320 3200 + 38 2400 5785 6000 + 4778 6947 9718 4000 + 9660 520 9128 9600 + 2 1988 332 6720 0", "x2": "mul abs mul n x_0_3 sub n mod mod INT+ 2 n x_0_4", "tree": "(abs((n mul x_0_3)) mul (n sub ((2 mod n) mod x_0_4)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 - 8 - 7 + 10 + 7 - 6 + 4 + 1 - 2 - 2 + 1 + 1 - 3 + 3 + 16 - 9 - 9 + 19 + 20 - 7 + 7 + 1 - 3 - 3 + 1 + 1 - 4", "x2": "idiv n x_0_7", "tree": "(n idiv x_0_7)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 0 - 9 + 10 + 0 - 5 + 4 - 10 - 3 - 7 - 5 - 8 - 12 - 8 - 16 - 10 - 21 - 19 - 26 - 32 - 33 - 50 - 49 - 73 - 78 - 103 - 125", "x2": "sub add add x_0_2 idiv add INT+ 1 INT+ 6 n INT+ 3 abs x_0_5", "tree": "(((x_0_2 add ((1 add 6) idiv n)) add 3) sub abs(x_0_5))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 18 + 33 + 52 + 75 + 102 + 133 + 168 + 207 + 250 + 297 + 348 + 403 + 462 + 525 + 592 + 663 + 738 + 817 + 900 + 987", "x2": "mul n add add abs n n INT+ 5", "tree": "(n mul ((abs(n) add n) add 5))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 2 + 6 - 3 - 1 + 1 + 7 + 4 + 3 + 4 + 11 + 15 + 18 + 22 + 33 + 48 + 66 + 88 + 121 + 169 + 235 + 323 + 444 + 613 + 848", "x2": "add x_0_4 add x_0_1 idiv INT- 3 INT- 1 0", "tree": "(x_0_4 add (x_0_1 add (-3 idiv -10)))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 2 + 7 + 13 + 21 + 31 + 43 + 57 + 73 + 91 + 111 + 133 + 157 + 183 + 211 + 241 + 273 + 307 + 343 + 381 + 421 + 463 + 507 + 553", "x2": "add add sqr sqr sign x_0_2 sqr n n", "tree": "((((sign(x_0_2))**2)**2 add (n)**2) add n)", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 4 + 6 + 0 + 0 + 2 + 6 - 10 - 10 - 2 + 9 + 5 + 0 + 299 + 238 + 255 + 304 + 391 + 0 + 0 + 0 + 546 + 484 + 391 + 7584 + 6375 + 7072 + 8667 + 1 1424 + 493 + 510 + 527 + 1 8016", "x2": "relu mul add add sub sub x_0_11 INT- 1 0 n INT+ 8 mul sign x_0_11 sub n idiv n n n", "tree": "relu((((((x_0_11 sub -10) sub n) add 8) add (sign(x_0_11) mul (n sub (n idiv n)))) mul n))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 8 + 19 + 18 + 29 + 28 + 39 + 38 + 49 + 48 + 59 + 58 + 69 + 68 + 79 + 78 + 89 + 88 + 99 + 98 + 109 + 108 + 119", "x2": "add abs INT+ 1 0 x_0_2", "tree": "(abs(10) add x_0_2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 + 11 + 19 - 86 + 96 - 469 + 481 - 6240 + 6254 - 6239 + 6255 - 3 1258 + 3 1276 - 28 1465 + 28 1485 - 365 9284 + 365 9306 - 6220 8179 + 6220 8203 - 13 637 2238 + 13 637 2264 - 326 5930 6573", "x2": "sub sub abs x_0_1 INT- 5 sub mul mod INT- 9 n add abs x_0_1 x_0_1 n", "tree": "((abs(x_0_1) sub -5) sub (((-9 mod n) mul (abs(x_0_1) add x_0_1)) sub n))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "abs sqr sub INT- 1 n", "tree": "abs(((-1 sub n))**2)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 32 + 72 + 128 + 200 + 288 + 392 + 512 + 648 + 800 + 968 + 1152 + 1352 + 1568 + 1800 + 2048 + 2312 + 2592 + 2888 + 3200 + 3528", "x2": "abs mul abs relu sqr n INT+ 8", "tree": "abs((abs(relu((n)**2)) mul 8))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 256 + 6561 + 6 5536 + 39 625 + 167 9616 + 576 4801 + 1677 7216 + 4304 6721 + 1 0 0 + 2 1435 8881 + 4 2998 1696 + 8 1573 721 + 14 7578 9056 + 25 6289 625 + 42 9496 7296 + 69 7575 7441 + 110 1996 576 + 169 8356 3041 + 256 0 0 + 378 2285 9361", "x2": "sqr sqr mul n n", "tree": "(((n mul n))**2)**2", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 10 - 7 - 3 - 1 + 72 + 112 + 112 + 99 + 100 + 902 + 1476 + 1612 + 1568 + 1710 + 1 4672 + 2 5364 + 2 9322 + 3 134 + 3 4580 + 30 8532 + 55 8470 + 67 4912 + 72 3768 + 86 5100 + 802 2482", "x2": "abs mul sub sub idiv INT+ 3 INT+ 3 relu relu abs x_0_5 n n", "tree": "abs(((((3 idiv 3) sub relu(relu(abs(x_0_5)))) sub n) mul n))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 3 - 10 + 6 + 4 - 2 + 3 - 9 + 3 + 7 - 29 + 4 - 47 - 4 + 14 - 141 + 0 - 201 - 64 + 38 - 632 - 28 - 813 - 421 + 125 - 2757 - 205 - 3242 - 2345 + 440", "x2": "sub add INT- 1 add sub x_0_8 sign mul x_0_9 idiv x_0_3 abs n sub mul INT+ 5 x_0_5 n x_0_5", "tree": "((-1 add ((x_0_8 sub sign((x_0_9 mul (x_0_3 idiv abs(n))))) add ((5 mul x_0_5) sub n))) sub x_0_5)", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 + 9 + 10 - 2 - 10 - 9 + 3 - 7 + 7 + 7 - 402 - 1214 - 1586 - 15 - 1226 - 1021 - 269 - 1054 - 2434 - 2870 - 337 6840 - 3237 1348 - 5778 2200 - 4977 - 3751 6683 - 2705 2838 - 194 2122 - 3442 3496 - 2 403 6533 - 3 471 7034 - 353 4942 9059 4532", "x2": "sub x_0_7 add mul n sqr add abs INT- 1 x_0_10 INT+ 4", "tree": "(x_0_7 sub ((n mul ((abs(-1) add x_0_10))**2) add 4))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462", "x2": "add relu sqr relu relu n relu n", "tree": "(relu((relu(relu(n)))**2) add relu(n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 6 + 3 + 8 + 36 + 0 + 784 + 49 + 361 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr mod n sub abs sub n add add INT- 4 x_0_3 relu x_0_1 relu sqr n", "tree": "((n mod (abs((n sub ((-4 add x_0_3) add relu(x_0_1)))) sub relu((n)**2))))**2", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 2 - 5 - 7 - 6 - 4 + 18 + 45 + 63 + 54 + 36 - 162 - 405 - 567 - 486 - 324 + 1458 + 3645 + 5103 + 4374 + 2916 - 1 3122 - 3 2805 - 4 5927 - 3 9366 - 2 6244 + 11 8098", "x2": "mul INT- 9 x_0_5", "tree": "(-9 mul x_0_5)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 8 - 2 - 8 + 9 - 7 - 5 - 5 - 4 + 40 + 44 + 0 + 39 + 56 + 180 + 64 + 0 + 108 + 57 + 320 + 63 + 396 + 483 + 144 + 375 + 364 + 0 + 336 + 406 + 360", "x2": "mul mod mul add mod x_0_3 n x_0_9 INT- 6 n n", "tree": "(((((x_0_3 mod n) add x_0_9) mul -6) mod n) mul n)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 9 + 4 - 4 + 0 + 4 + 4 + 3 + 0 + 4 + 4 + 3 + 0 + 4 + 4 + 3 + 0 + 4 + 4 + 3 + 0 + 4 + 4 + 3 + 0 + 4", "x2": "mod x_0_4 n", "tree": "(x_0_4 mod n)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 5 - 9 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign mul x_0_3 n", "tree": "sign((x_0_3 mul n))", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 9 + 12 + 16 + 21 + 27 + 34 + 42 + 51 + 61 + 72 + 84 + 97 + 111 + 126 + 142 + 159 + 177 + 196 + 216 + 237 + 259", "x2": "sub n sub relu mod idiv x_0_1 INT- 6 sign INT+ 1 x_0_1", "tree": "(n sub (relu(((x_0_1 idiv -6) mod sign(1))) sub x_0_1))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 2 + 8 - 8 - 9 - 2 - 39 - 54 + 6 - 217 - 308 + 91 - 1227 - 1834 + 785 - 7029 - 1 1069 + 5965 - 4 309 - 6 7167 + 4 2853 - 23 748 - 40 8929 + 29 7467 - 131 7278 - 249 6383 + 201 5596", "x2": "add sub INT+ 3 add x_0_5 mul x_0_3 INT- 6 add add n n sub idiv n x_0_4 INT+ 8", "tree": "((3 sub (x_0_5 add (x_0_3 mul -6))) add ((n add n) add ((n idiv x_0_4) sub 8)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 + 7 + 2 - 10 - 8 - 10 + 1 - 3 - 4 + 2 + 8 + 0 + 10 - 11 - 14 - 18 - 16 - 8 + 8 - 18 + 29 - 15 + 33 + 17 - 9 - 1 + 19 + 48", "x2": "idiv add x_0_1 x_0_7 sign x_0_5", "tree": "((x_0_1 add x_0_7) idiv sign(x_0_5))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "- 4 - 3 - 5 + 1 + 1 - 2 - 2 - 3 - 2 - 3 - 5 - 5 - 7 - 10 - 11 - 9 - 13 - 10 - 14 - 14 - 17 - 17 - 18 - 17", "x2": "sub mod x_0_3 INT+ 5 mod sub n mod sub sign n INT- 3 INT+ 7 abs n", "tree": "((x_0_3 mod 5) sub ((n sub ((sign(n) sub -3) mod 7)) mod abs(n)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442", "x2": "add sign INT+ 4 abs sqr n", "tree": "(sign(4) add abs((n)**2))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 6 - 4 - 5 - 4 + 3 + 7 - 9 + 6 + 9 - 10 - 16 - 14 - 15 - 14 - 7 - 3 - 19 - 4 - 1 - 20 - 26 - 24 - 25 - 24 - 17 - 13 - 29 - 14 - 11 - 30 - 36", "x2": "sub x_0_10 INT+ 1 0", "tree": "(x_0_10 sub 10)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144", "x2": "relu abs sqr sub n sqr INT+ 3", "tree": "relu(abs(((n sub (3)**2))**2))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 0 + 0 + 1 + 0 + 1 + 4 + 0 + 6 + 3 + 0 + 10 + 8 + 6 + 4 + 2 + 0 + 17 + 16 + 15", "x2": "abs mod sqr INT+ 6 n", "tree": "abs(((6)**2 mod n))", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 1 + 3 + 4 + 4 + 3 + 1 + 3 + 4 + 4 + 3 + 1 + 3 + 4 + 4 + 3 + 1 + 3 + 4 + 4 + 3 + 1", "x2": "sub sqr sign add n n mod add n sub INT- 4 x_0_1 INT- 5", "tree": "((sign((n add n)))**2 sub ((n add (-4 sub x_0_1)) mod -5))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 8 + 5 - 10 + 8 + 7 - 64 + 45 - 100 + 88 + 84 - 832 + 630 - 1500 + 1408 + 1428 - 1 4976 + 1 1970 - 3 0 + 2 9568 + 3 1416 - 34 4448 + 28 7280 - 75 0 + 76 8768 + 84 8232", "x2": "mul sub add INT- 4 n INT- 5 x_0_5", "tree": "(((-4 add n) sub -5) mul x_0_5)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 3 + 2 - 2 - 5 + 30 + 17 + 33 + 5 - 229 - 48 - 210 + 51 + 3314 + 759 + 1417 - 485 - 5 8223 - 9983 - 1 3286 + 1925 + 131 8506 + 3 6355 + 21 5981 - 4 1609", "x2": "add sub INT- 9 x_0_4 mul mod idiv sub INT+ 8 x_0_1 abs INT- 2 sub abs n x_0_4 relu n", "tree": "((-9 sub x_0_4) add ((((8 sub x_0_1) idiv abs(-2)) mod (abs(n) sub x_0_4)) mul relu(n)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 10 - 9 - 180 - 288 - 9000 - 2 736 - 88 2000 - 265 4208 - 1 4288 4000 - 5 3084 1600 - 345 7792 8000 - 1528 8238 800 - 11 6873 3966 4000 - 59 9298 9327 3600 - 5259 3028 4880 0 - 3 684 1053 5608 3200 - 303 9877 466 640 0 - 1988 3300 2707 4191 3600 - 21 9479 1227 6498 2080 0 - 159 664 216 5935 3088 0 - 1 9358 586 2787 1419 4560 0 - 15 3976 2772 9662 5378 9184 0 - 2048 826 282 8796 1784 4480 0", "x2": "mul add abs mul n n sqr n x_0_2", "tree": "((abs((n mul n)) add (n)**2) mul x_0_2)", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 - 7 + 9 - 4 + 3 + 480 + 833 + 2160 + 684 + 1600 + 4158 + 5016 + 5980 + 7056 + 8250 + 9568 + 1 1016 + 1 2600 + 1 4326 + 1 6200 + 1 8228 + 2 416 + 2 2770 + 2 5296 + 2 8000 + 3 888", "x2": "mul n mul relu add relu INT+ 1 0 n sub mod n x_0_5 INT- 7", "tree": "(n mul (relu((relu(10) add n)) mul ((n mod x_0_5) sub -7)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 - 9 + 4 - 6 + 3 + 5 + 7 + 3 + 4 - 63 - 230 + 33 - 260 - 82 - 1968 + 112 - 4354 - 2709 - 15 4385 - 3717 + 111 4718 - 129 7446 + 2595 6000 - 1156 7496 - 23 389 1370 - 59 5977 6096 - 424 3228 5180 - 1 8027 8977 8546 + 347 1161 7030 4044 + 6672 4886 704 7725", "x2": "mul add x_0_10 sub INT+ 1 0 x_0_9 sub sub x_0_4 mod x_0_5 abs x_0_7 n", "tree": "((x_0_10 add (10 sub x_0_9)) mul ((x_0_4 sub (x_0_5 mod abs(x_0_7))) sub n))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 0 - 144 - 280 - 408 - 528 - 640 - 744 - 840 - 928 - 1008 - 1080 - 1144 - 1200 - 1248 - 1288 - 1320 - 1344 - 1360 - 1368 - 1368 - 1360 - 1344", "x2": "add x_0_1 mul INT+ 8 add INT- 1 0 add n INT- 1 0", "tree": "(x_0_1 add (8 mul (-10 add (n add -10))))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 2 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0", "x2": "idiv abs n add add mul sqr x_0_1 x_0_2 x_0_2 n", "tree": "(abs(n) idiv ((((x_0_1)**2 mul x_0_2) add x_0_2) add n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 7 - 7 + 7 - 8 - 6 - 7 + 14 - 15 - 16 - 17 + 18 - 10 - 10 - 11 + 22 - 23 - 24 - 25 + 26 - 14 - 14 - 15 + 30 - 31 - 32", "x2": "idiv add n relu INT+ 7 idiv x_0_4 mod n sqr mul sign x_0_3 INT+ 9", "tree": "((n add relu(7)) idiv (x_0_4 idiv (n mod ((sign(x_0_3) mul 9))**2)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420", "x2": "add n sub sqr relu INT- 4 sqr n", "tree": "(n add ((relu(-4))**2 sub (n)**2))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 32 + 128 + 288 + 512 + 800 + 1152 + 1568 + 2048 + 2592 + 3200 + 3872 + 4608 + 5408 + 6272 + 7200 + 8192 + 9248 + 1 368 + 1 1552 + 1 2800 + 1 4112", "x2": "add sub mul sqr add n n sub INT+ 6 mod abs INT+ 1 INT- 3 abs n n", "tree": "(((((n add n))**2 mul (6 sub (abs(1) mod -3))) sub abs(n)) add n)", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 9 - 3 - 1 + 1 + 5 + 3 + 4 + 0 + 1 + 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1", "x2": "sign idiv mul x_0_2 x_0_9 idiv sign add INT+ 1 0 idiv INT- 1 0 x_0_3 abs sign n", "tree": "sign(((x_0_2 mul x_0_9) idiv (sign((10 add (-10 idiv x_0_3))) idiv abs(sign(n)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "9"}
{"x1": "+ 3 - 2 - 6 - 10 - 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign mod mod x_0_1 mul x_0_2 n idiv INT+ 9 x_0_5", "tree": "sign(((x_0_1 mod (x_0_2 mul n)) mod (9 idiv x_0_5)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 6 + 9 - 9 + 10 + 0 + 6 - 2 - 10 + 4 - 7 + 252 + 325 + 42 + 540 + 112 + 4709 + 6210 + 1349 + 1 1560 + 2877 + 10 4412 + 13 7747 + 2 5344 + 28 8775 + 6 1646 + 281 7045 + 372 6072 + 55 5959 + 862 3920 + 155 3875 + 9005 4656", "x2": "mul relu n sub add sub x_0_5 x_0_11 n INT- 8", "tree": "(relu(n) mul (((x_0_5 sub x_0_11) add n) sub -8))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 1291 + 2396 + 4091 + 6556 + 9995 + 1 4636 + 2 731 + 2 8556 + 3 8411 + 5 620 + 6 5531 + 8 3516 + 10 4971 + 13 316 + 15 9995 + 19 4476 + 23 4251 + 27 9836 + 33 1771 + 39 620 + 45 6971", "x2": "add sqr sqr add INT+ 5 n add n sub INT- 5 n", "tree": "((((5 add n))**2)**2 add (n add (-5 sub n)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 7 - 6 - 6 - 6 - 4 + 36 + 49 + 36 + 36 + 36 + 16 + 1296 + 2401 + 1296 + 1296 + 1296 + 256 + 167 9616 + 576 4801 + 167 9616 + 167 9616 + 167 9616 + 6 5536 + 2 8211 990 7456 + 33 2329 3056 9601 + 2 8211 990 7456", "x2": "add sqr x_0_6 idiv relu sign sub n n n", "tree": "((x_0_6)**2 add (relu(sign((n sub n))) idiv n))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 2 + 4 - 3 + 4 - 3 + 10 - 10 + 0 - 8 - 3 + 12 + 8 + 14 + 9 + 18 + 4 + 26 + 18 + 25 + 22 + 9 + 12 + 8 + 15 + 5 + 21 + 1 + 8 + 3 + 8 + 20", "x2": "add mod abs n INT- 3 sub n x_0_10", "tree": "((abs(n) mod -3) add (n sub x_0_10))", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 2 - 8 - 18 - 32 - 50 - 72 - 98 - 128 - 162 - 200 - 242 - 288 - 338 - 392 - 450 - 512 - 578 - 648 - 722 - 800 - 882", "x2": "mul INT- 2 sqr n", "tree": "(-2 mul (n)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 + 4 - 14 - 1 - 19 - 6 - 24 - 11 - 29 - 16 - 34 - 21 - 39 - 26 - 44 - 31 - 49 - 36 - 54 - 41 - 59 - 46 - 64", "x2": "add sub x_0_2 add INT+ 5 abs relu relu abs n n", "tree": "((x_0_2 sub (5 add abs(relu(relu(abs(n)))))) add n)", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 9 + 10 - 5 - 4 - 6 - 45 - 88 - 101 - 156 - 198 - 177 - 256 - 437 - 362 - 620 - 909 - 928 - 1589 - 2102 - 2440 - 1701 - 1510 - 3377 - 4847 - 6369 - 7467", "x2": "sub mod sqr mul INT+ 7 n x_0_1 add sqr n abs x_0_5", "tree": "((((7 mul n))**2 mod x_0_1) sub ((n)**2 add abs(x_0_5)))", "n_input_points": "21", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 1 + 5 + 12 + 16 + 19 + 23 + 24 + 24 + 25 + 23 + 20 + 18 + 13 + 7 + 2 - 6 - 15 - 23 - 34 - 46 - 57 - 71", "x2": "add mod x_0_1 x_0_1 add sub sub mod sqr n INT- 3 INT- 1 0 abs n x_0_1", "tree": "((x_0_1 mod x_0_1) add (((((n)**2 mod -3) sub -10) sub abs(n)) add x_0_1))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 10 - 9 - 7 + 9 - 3 + 10 + 10 - 9 + 19 + 19 + 3 + 16 + 4 + 5 + 26 - 1 - 1 + 17 + 5 + 17 + 17 - 2 + 26 + 27 + 9 + 22 + 11 + 13 + 33", "x2": "sub add idiv add x_0_9 INT- 5 mul x_0_5 n abs abs add INT+ 1 n x_0_7", "tree": "((((x_0_9 add -5) idiv (x_0_5 mul n)) add abs(abs((1 add n)))) sub x_0_7)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "- 7 + 2 - 7 + 9 - 5 - 9 + 1 + 1 + 406 - 89 + 397 + 649 + 1 + 1 - 2024 + 1 513 - 2600 - 2915 + 1 + 1 + 37 8568 - 4355 + 53 3440 + 62 4457 + 1 + 1 - 6560", "x2": "sub sqr sign n sub relu n add n mul n mul mod n x_0_6 INT- 9", "tree": "((sign(n))**2 sub (relu(n) sub (n add (n mul ((n mod x_0_6) mul -9)))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 9 + 10 - 7 + 1 - 6 + 6 + 9 + 0 + 3 + 1 + 4 + 6 + 9 + 0 + 3 + 1 + 4 + 6 + 9 + 0 + 3 + 1 + 4 + 6 + 9 + 0", "x2": "sub mod x_0_6 abs INT+ 1 0 mul mod INT+ 7 abs sign add INT- 5 x_0_3 mul n INT+ 7", "tree": "((x_0_6 mod abs(10)) sub ((7 mod abs(sign((-5 add x_0_3)))) mul (n mul 7)))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 5 - 8 + 5 - 8 - 5 + 8 - 5 - 8 + 5 - 8 - 5 + 8 - 5 - 8 + 5 - 8 - 5 + 8 - 5 - 8 + 5 - 8", "x2": "mul x_0_2 sign sub x_0_1 sqr mul sign n idiv INT- 3 mod INT- 3 n", "tree": "(x_0_2 mul sign((x_0_1 sub ((sign(n) mul (-3 idiv (-3 mod n))))**2)))", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 4 - 2 - 10 - 20 - 32 - 46 - 62 - 80 - 100 - 122 - 146 - 172 - 200 - 230 - 262 - 296 - 332 - 370 - 410 - 452", "x2": "sub sub INT+ 1 0 relu n sqr n", "tree": "((10 sub relu(n)) sub (n)**2)", "n_input_points": "21", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 - 3 - 4 + 7 + 8 - 7 + 4 + 8 - 6 + 10 + 4 + 10 + 6 - 7 + 16 + 6 - 3 + 26 + 3 + 10 + 9 + 3 + 24 + 2 + 10 + 23 - 5 + 19 + 13 + 15", "x2": "sub n sub n sub INT- 7 sub sub x_0_9 n mod sign mod abs x_0_2 mul x_0_4 INT+ 5 x_0_8", "tree": "(n sub (n sub (-7 sub ((x_0_9 sub n) sub (sign((abs(x_0_2) mod (x_0_4 mul 5))) mod x_0_8)))))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 6 - 4 + 3 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 + 7 - 7 + 21 - 35 + 77 - 76 - 5 - 5 - 27 - 104 - 445 - 2711 - 2 1741 - 21 7475 - 282 7258 - 4523 6229 - 8 1425 2235 - 179 1354 9307 - 4478 3873 2830 - 12 5394 8451 9413 - 401 2635 462 1413", "x2": "add INT- 5 mul sub sub abs INT- 7 x_0_1 sign n add n idiv sqr n INT- 9", "tree": "(-5 add (((abs(-7) sub x_0_1) sub sign(n)) mul (n add ((n)**2 idiv -9))))", "n_input_points": "21", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 3 + 4 + 11 + 20 + 31 + 44 + 59 + 76 + 95 + 116 + 139 + 164 + 191 + 220 + 251 + 284 + 319 + 356 + 395 + 436", "x2": "mod INT- 5 sqr n", "tree": "(-5 mod (n)**2)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 3 + 9 - 3 - 6 - 4 - 7 + 4 + 3 - 2 - 3 - 5 - 3 - 3 - 4 - 4 - 4 - 3 - 1 - 3 - 7 - 3 - 3 - 4 - 4 - 4 - 3 - 1 - 3 - 13", "x2": "idiv mod abs idiv sqr x_0_9 sign INT+ 5 mul sub n INT+ 5 INT+ 3 INT- 4", "tree": "((abs(((x_0_9)**2 idiv sign(5))) mod ((n sub 5) mul 3)) idiv -4)", "n_input_points": "21", "n_ops": "8", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 2 - 5 - 9 - 14 - 20 - 27 - 35 - 44 - 54 - 65 - 77 - 90 - 104 - 119 - 135 - 152 - 170 - 189 - 209 - 230 - 252", "x2": "sub sub mul INT+ 1 x_0_1 n mod relu n n", "tree": "(((1 mul x_0_1) sub n) sub (relu(n) mod n))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 8 + 9 - 9 + 0 + 0 - 7 + 10 - 8 + 1 + 1 - 6 + 11 - 7 + 2 + 2 - 5 + 12 - 6 + 3 + 3 - 4 + 13 - 5 + 4 + 4 - 3", "x2": "idiv add sign INT+ 2 x_0_5 INT+ 1", "tree": "((sign(2) add x_0_5) idiv 1)", "n_input_points": "21", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 3 + 6 - 5 + 9 + 2 + 5 + 0 - 8 - 4 - 9 + 6 + 1 + 4 + 4 + 4 + 0 + 2 + 1 + 5 + 0 + 1 + 3 + 6 + 6 + 6 + 2 + 4 + 3 + 0 + 2 + 3", "x2": "mod add x_0_10 INT+ 2 idiv INT+ 7 abs sqr abs INT- 1", "tree": "((x_0_10 add 2) mod (7 idiv abs((abs(-1))**2)))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 10 + 6 + 2 - 8 + 0 + 7 + 5 + 5 + 10 + 6 + 2 + 8 + 0 + 7 + 5 + 5 + 10 + 6 + 2 + 8 + 0 + 7 + 5 + 5 + 10 + 6 + 2 + 8 + 0", "x2": "abs x_0_8", "tree": "abs(x_0_8)", "n_input_points": "21", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 4 + 4 + 4 + 4 + 4 + 8 + 8 + 8 + 8 + 8 + 12 + 12 + 12 + 12 + 12 + 16 + 16 + 16 + 16 + 16 + 20", "x2": "mul idiv n INT- 5 INT- 4", "tree": "((n idiv -5) mul -4)", "n_input_points": "21", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 2 + 1 + 7 - 6 + 9 + 7 - 5 - 4 - 1 + 5 - 8 + 7 + 5 - 7 - 6 - 3 + 3 - 10 + 5 + 3 - 9 - 8 - 5 + 1 - 12 + 3 + 1 - 11", "x2": "mul sqr sign idiv mul INT- 9 INT- 8 INT+ 4 add INT- 2 x_0_7", "tree": "((sign(((-9 mul -8) idiv 4)))**2 mul (-2 add x_0_7))", "n_input_points": "21", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 6 + 1 + 9 + 2 + 6 + 5 + 9 + 9 + 4 + 5 + 13 + 6 + 10 + 9 + 13 + 13 + 8 + 9 + 17 + 10 + 14 + 13 + 17 + 17 + 12 + 13 + 21 + 14 + 18", "x2": "abs add sub relu x_0_8 INT- 3 sign n", "tree": "abs(((relu(x_0_8) sub -3) add sign(n)))", "n_input_points": "21", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 2 - 3 + 1 + 6 + 6 - 3 + 2 + 13 - 4 + 6 + 14 - 5 + 4 + 31 - 3 + 2 + 34 - 2 + 1 + 51 - 2 + 0 + 114 - 2 + 0 + 342 - 1 + 0", "x2": "idiv mul add x_0_3 mod n n INT+ 9 sub mod mod x_0_7 relu relu n n add INT+ 7 INT- 9", "tree": "(((x_0_3 add (n mod n)) mul 9) idiv (((x_0_7 mod relu(relu(n))) mod n) sub (7 add -9)))", "n_input_points": "21", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "sqr abs mul mul n relu sign x_0_1 sign relu INT- 9", "tree": "(abs(((n mul relu(sign(x_0_1))) mul sign(relu(-9)))))**2", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 3 - 3 - 3 - 6 - 6 - 6 - 9 - 9 - 9 - 12 - 12 - 12 - 15 - 15 - 15 - 18 - 18 - 18 - 21 - 21", "x2": "sub mod n INT- 3 n", "tree": "((n mod -3) sub n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 7 + 0 - 88 - 72 - 98 + 161 + 108 + 181 - 601 - 447 - 671 + 1670 + 1203 + 1870 - 5158 - 3762 - 5768 + 1 5311 + 1 1118 + 1 7131 - 4 6111 - 3 3537", "x2": "sub mul INT+ 4 sub mod n INT+ 1 add n add INT+ 7 sub x_0_3 INT- 1 0 sub n x_0_3", "tree": "((4 mul ((n mod 1) sub (n add (7 add (x_0_3 sub -10))))) sub (n sub x_0_3))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 3 - 6 + 6 + 3 + 12 - 3 + 9 - 12 + 12 - 9 + 24 - 12 + 33 - 24 + 45 - 33 + 69 - 45 + 102 - 69 + 147 - 102 + 216", "x2": "sub relu x_0_2 x_0_3", "tree": "(relu(x_0_2) sub x_0_3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 9 + 64 + 169 + 324 + 529 + 784 + 1089 + 1444 + 1849 + 2304 + 2809 + 3364 + 3969 + 4624 + 5329 + 6084 + 6889 + 7744 + 8649", "x2": "sqr sub relu mul INT+ 5 n INT+ 7", "tree": "((relu((5 mul n)) sub 7))**2", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 - 2 + 8 - 7 + 3 - 5 + 2 + 9 - 2 - 10 + 0 + 94 - 27 + 62 - 117 - 120 - 23 + 295 + 111 - 1855 + 282 - 1475 + 4452 + 2625 + 1988 - 1 2005 - 5502 + 4 9975 + 3532 + 4 9641 - 18 6132", "x2": "sub sub mul add mul idiv INT- 2 mul sqr INT+ 5 n add n n n x_0_8 x_0_11 x_0_3", "tree": "((((((-2 idiv ((5)**2 mul n)) mul (n add n)) add n) mul x_0_8) sub x_0_11) sub x_0_3)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 8 - 10 + 4 - 10 - 8 - 10 + 4 - 10 - 8 - 10 + 4 - 10 - 8 - 10 + 4 - 10 - 8 - 10 + 4 - 10 - 8 - 10 + 4 - 10", "x2": "idiv x_0_4 sqr sub INT+ 2 sign n", "tree": "(x_0_4 idiv ((2 sub sign(n)))**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 8 + 4 - 2 - 8 - 8 - 5 + 1 + 7 + 7 + 5 - 1 - 7 - 7 - 6 + 0 + 6 + 6 + 6 + 0 - 6 - 6 - 6 - 1", "x2": "sub mul idiv x_0_3 n sqr sign sign INT- 6 x_0_4", "tree": "(((x_0_3 idiv n) mul (sign(sign(-6)))**2) sub x_0_4)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10", "x2": "idiv mul n INT+ 4 INT- 8", "tree": "((n mul 4) idiv -8)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 + 2 + 9 + 0 - 46 - 60 - 76 - 94 - 114 - 136 - 160 - 186 - 214 - 244 - 276 - 310 - 346 - 384 - 424 - 466 - 510 - 556 - 604 - 654", "x2": "sub sub sub INT- 5 add sqr n sign sqr sign x_0_4 add n n n", "tree": "(((-5 sub ((n)**2 add sign((sign(x_0_4))**2))) sub (n add n)) sub n)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 4 - 9 + 7 + 10 + 3 - 6 - 10 + 3 - 5 - 24 - 31 - 17 - 16 - 25 - 36 - 42 - 31 - 41 - 62 - 71 - 59 - 60 - 71 - 84 - 92 - 83 - 95 - 118 - 129", "x2": "sub x_0_9 add n mod n sqr relu n", "tree": "(x_0_9 sub (n add (n mod (relu(n))**2)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 1 + 5 - 1 + 8 - 6 + 9 + 1 + 25 + 1 + 64 + 36 + 81 + 1 + 625 + 1 + 4096 + 1296 + 6561 + 1 + 39 625 + 1 + 1677 7216 + 167 9616 + 4304 6721 + 1 + 1525 8789 625", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 8 - 6 + 5 - 2 - 3 + 0 - 2 - 6 + 8 - 3 + 4 + 5 + 2 + 4 + 8 - 6 + 5 - 2 - 3 + 0 - 2 - 6 + 8 - 3 + 4 + 5", "x2": "sub sub add mod INT+ 2 add sqr n INT- 4 n x_0_7 n", "tree": "((((2 mod ((n)**2 add -4)) add n) sub x_0_7) sub n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 2 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 1 + 0 + 1 + 0 + 2 + 0 + 2 + 0 + 2 + 0 + 3 + 0", "x2": "idiv n idiv sub mul x_0_1 n INT- 7 mul mod abs INT- 1 n sign mod x_0_2 relu n", "tree": "(n idiv (((x_0_1 mul n) sub -7) idiv ((abs(-1) mod n) mul sign((x_0_2 mod relu(n))))))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 1 - 6 + 8 + 8 + 8 + 15 + 8 + 9 + 18 + 11 + 11 + 21 + 11 + 12 + 24 + 14 + 14 + 27 + 14 + 15 + 30 + 17", "x2": "add sign n abs add INT+ 7 mod n x_0_3", "tree": "(sign(n) add abs((7 add (n mod x_0_3))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 144 + 729 + 2304 + 5625 + 1 1664 + 2 1609 + 3 6864 + 5 9049 + 9 0 + 13 1769 + 18 6624 + 25 7049 + 34 5744 + 45 5625 + 58 9824 + 75 1689 + 94 4784 + 117 2889 + 144 0", "x2": "sqr mul sqr n INT- 3", "tree": "(((n)**2 mul -3))**2", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 - 20 - 33 - 48 - 65 - 84 - 105 - 128 - 153 - 180 - 209 - 240 - 273 - 308 - 345 - 384 - 425 - 468 - 513 - 560", "x2": "mul n sub INT- 8 n", "tree": "(n mul (-8 sub n))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 4 + 1 + 3 - 7 - 8 - 6 + 3 + 7 - 2 - 3 + 1 - 7 - 10 - 14 - 13 - 24 - 26 - 25 - 17 - 14 - 24 - 26 - 23 - 32 - 36 - 41 - 41 - 53 - 56 - 56 - 49", "x2": "sub x_0_12 n", "tree": "(x_0_12 sub n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "12"}
{"x1": "- 3 + 5 + 9 - 5 + 0 + 20 + 36 + 0 + 0 + 80 + 144 + 0 + 0 + 320 + 576 + 0 + 0 + 1280 + 2304 + 0 + 0 + 5120 + 9216 + 0", "x2": "mul relu x_0_4 INT+ 4", "tree": "(relu(x_0_4) mul 4)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 10 - 1 + 5 + 9 - 7 - 1 - 6 - 14 - 20 - 10 - 6 - 3 + 5 + 13 + 13 + 9 - 3 - 14 - 24 - 34 - 40 - 34 - 17 + 10 + 27", "x2": "add sub INT- 7 x_0_5 mod INT+ 1 0 x_0_1", "tree": "((-7 sub x_0_5) add (10 mod x_0_1))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 4 - 2 - 8 - 4 + 1 + 7 + 14 + 22 + 31 + 41 + 52 + 64 + 77 + 91 + 106 + 122 + 139 + 157 + 176 + 196 + 217 + 239 + 262", "x2": "add n mul x_0_1 idiv abs sign add INT+ 5 add x_0_3 x_0_3 sign n", "tree": "(n add (x_0_1 mul (abs(sign((5 add (x_0_3 add x_0_3)))) idiv sign(n))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 5 - 8 + 0 + 6 + 18 + 0 + 64 + 81 + 0 + 40 + 36 + 0 + 32 + 32 + 0 + 32 + 32 + 0 + 33 + 33 + 0 + 35", "x2": "relu idiv sqr n mod add sign n INT- 9 add idiv n x_0_3 relu n", "tree": "relu(((n)**2 idiv ((sign(n) add -9) mod ((n idiv x_0_3) add relu(n)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 9 - 3 - 64 - 64 + 32 + 520 + 520 - 248 - 4152 - 4152 + 1992 + 3 3224 + 3 3224 - 1 5928 - 26 5784 - 26 5784 + 12 7432 + 212 6280 + 212 6280 - 101 9448 - 1701 232 - 1701 232", "x2": "idiv add mul INT+ 8 x_0_3 INT- 8 sign sign mod sign n INT- 2", "tree": "(((8 mul x_0_3) add -8) idiv sign(sign((sign(n) mod -2))))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 + 9 + 1 + 5 + 325 + 36 + 441 + 320 - 2 5515 - 2600 - 5 2151 - 4 4640 + 431 3725 + 51 1560 + 1173 6225 + 1143 400 - 12 4666 3635 - 1 6574 2200 - 42 3677 3615 - 45 7215 6000 + 5497 7866 7445 + 802 1922 9640 + 2 2412 5324 7625 + 2 6335 6186 1760", "x2": "mul sub INT+ 1 0 x_0_4 mul mul n sqr relu sign n n", "tree": "((10 sub x_0_4) mul ((n mul (relu(sign(n)))**2) mul n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 9 - 9 + 2 - 6 - 6 - 2 - 7 + 12 + 19 + 2 + 14 + 7 + 8 + 13 + 9 + 29 + 37 + 21 + 34 + 28 + 30 + 36 + 33 + 54 + 63 + 48 + 62", "x2": "abs add n x_0_8", "tree": "abs((n add x_0_8))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 5 + 2025 + 729 + 2025 + 6561 + 6561 + 81 + 6561 + 81 + 2025 + 6561 + 4 2849 + 6561 + 6561 + 81 + 8 8209 + 6561 + 9801 + 81 + 1 8225 + 11 889", "x2": "sqr abs mul mod x_0_2 add abs n n INT+ 9", "tree": "(abs(((x_0_2 mod (abs(n) add n)) mul 9)))**2", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 5 - 9 - 6 + 1 + 8 - 4 - 2 - 4 - 6 - 6 + 1 + 2 + 0 + 1 + 2 + 11 + 0 + 1 + 2 + 1 + 0 + 8 + 4 + 1 + 7 + 0 + 0 + 2 + 6 + 5 + 3", "x2": "mod mul add add idiv sub x_0_4 n n x_0_3 abs x_0_1 sub n INT+ 5 add x_0_11 INT+ 8", "tree": "((((((x_0_4 sub n) idiv n) add x_0_3) add abs(x_0_1)) mul (n sub 5)) mod (x_0_11 add 8))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 9 - 8 - 7 + 10 + 25 + 34 + 7 + 40 + 9 + 14 + 27 + 24 + 29 + 14 + 39 + 44 + 49 + 34 + 23 + 28 + 33 + 38 + 23 + 48", "x2": "add mod mul sqr INT- 2 mod n x_0_4 sqr INT+ 6 n", "tree": "((((-2)**2 mul (n mod x_0_4)) mod (6)**2) add n)", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 4 + 3 - 2 + 3 - 10 + 2 + 1 - 5 + 16 - 20 + 66 - 4 - 18 + 49 - 110 + 136 - 382 + 9 + 208 - 333 + 774 - 1108 + 2190 + 151 - 1916 + 2558 - 6620 + 6600", "x2": "add add sub x_0_8 mul abs INT+ 6 x_0_6 INT+ 5 mod mul mod x_0_2 n n mul x_0_5 INT+ 2", "tree": "(((x_0_8 sub (abs(6) mul x_0_6)) add 5) add (((x_0_2 mod n) mul n) mod (x_0_5 mul 2)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 2 + 6 - 8 + 5 - 8 - 1 + 3 + 96 + 378 - 640 + 495 - 960 - 143 + 504 + 1 8720 + 8 4672 - 16 3200 + 14 2560 - 31 80 - 5 1480 + 20 1096 + 823 6800 + 4089 6576 - 8616 9600 + 8197 2000 - 1 9348 9920 - 3474 9000", "x2": "mul mul add n INT- 2 abs n x_0_7", "tree": "(((n add -2) mul abs(n)) mul x_0_7)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 3 + 2 + 8 - 6 + 10 + 0 + 24 + 18 + 80 + 0 + 120 + 0 + 336 + 270 + 1280 + 0 + 2160 + 0 + 6720 + 5670 + 2 8160 + 0 + 5 1840 + 0 + 17 4720", "x2": "relu mul n x_0_6", "tree": "relu((n mul x_0_6))", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 10 - 243 - 216 + 6615 + 5832 - 17 8605 - 15 7464 + 482 2335 + 425 1690 - 1 3020 3018 - 1 1479 5468 + 35 1548 1567 + 30 9947 7906 - 949 1800 1985 - 836 8590 3408 + 2 5627 8605 3838 + 2 2595 1939 2016 - 69 1952 2345 3221 - 61 70 2358 4000 + 1868 2710 3323 7210 + 1647 1896 3676 8324", "x2": "mul mul INT+ 3 mul n INT- 9 idiv x_0_2 n", "tree": "((3 mul (n mul -9)) mul (x_0_2 idiv n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 5 + 0 - 4 - 7 - 3 - 6 - 2 - 5 - 1 - 4 + 0 - 3 - 7 - 2 - 6 - 1 - 5 + 0 - 4 - 7", "x2": "mod sub n mul sign n x_0_1 INT- 8", "tree": "((n sub (sign(n) mul x_0_1)) mod -8)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 3 + 6 + 8 - 32 + 16 + 8 - 88 + 8 + 8 - 40 + 16 + 8 - 88 + 8 + 8 - 40 + 16 + 8 - 88 + 8 + 8 - 40", "x2": "mul idiv mod INT- 3 mul INT+ 6 x_0_2 x_0_1 INT- 8", "tree": "(((-3 mod (6 mul x_0_2)) idiv x_0_1) mul -8)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 - 3 - 9 + 37 - 16 - 108 + 303 - 46 - 1393 + 3368 + 829 - 2 1490 + 4 6309 + 3 3910 - 39 165 + 75 3326 + 100 527 - 816 6480 + 1406 5973 + 2917 7526 - 1 9372 8555 + 2 9433 9830", "x2": "sub sub add mul x_0_3 n mod INT- 1 idiv INT- 1 0 n abs n x_0_2", "tree": "((((x_0_3 mul n) add (-1 mod (-10 idiv n))) sub abs(n)) sub x_0_2)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "relu sqr sub n INT- 3", "tree": "relu(((n sub -3))**2)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 2 + 1 + 9 + 3 + 3 + 1 + 4 + 1 + 1 + 9 + 9 + 1 + 2 + 1 + 1 + 13 + 9 + 1 + 4 + 1 + 1 + 8 + 9 + 1 + 16", "x2": "mod sqr idiv mul sign x_0_3 x_0_6 sign relu x_0_4 n", "tree": "((((sign(x_0_3) mul x_0_6) idiv sign(relu(x_0_4))))**2 mod n)", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 2 + 6 - 7 - 7 - 1 + 8 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1", "x2": "sub sign sign x_0_5 mul x_0_6 relu INT- 6", "tree": "(sign(sign(x_0_5)) sub (x_0_6 mul relu(-6)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 6 + 9 + 4 - 2 - 7 + 7 - 2 - 3 - 4 + 0 + 2 - 4 - 7 - 3 - 4 - 10 - 10 - 10 - 15 - 14 - 13 - 11 - 16 - 16 - 11 - 12 - 13", "x2": "add mod INT+ 3 sub abs x_0_9 n mod INT+ 3 n", "tree": "((3 mod (abs(x_0_9) sub n)) add (3 mod n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "- 9 + 8 - 3 - 8 + 8 - 4 - 10 + 5 - 8 - 15 - 1 - 15 - 23 - 10 - 25 - 34 - 22 - 38 - 48 - 37 - 54 - 65 - 55", "x2": "add sub x_0_3 relu n INT+ 5", "tree": "((x_0_3 sub relu(n)) add 5)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr add mod INT+ 2 idiv mul sign INT+ 8 sign mul INT+ 9 sign n INT- 2 n", "tree": "(((2 mod ((sign(8) mul sign((9 mul sign(n)))) idiv -2)) add n))**2", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 6 + 81 + 81 + 121 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "relu sqr sub mul INT+ 1 add INT- 1 mod INT- 5 add idiv sub x_0_1 mul n n x_0_1 n INT- 9", "tree": "relu((((1 mul (-1 add (-5 mod (((x_0_1 sub (n mul n)) idiv x_0_1) add n)))) sub -9))**2)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 1 + 10 - 1 - 1 + 38 + 11 + 17 + 116 + 38 + 59 + 359 + 128 + 194 + 1097 + 407 + 608 + 3320 + 1253 + 1859 + 9998 + 3800 + 5621 + 3 41", "x2": "add INT+ 2 mul add mod INT- 8 n x_0_3 INT+ 3", "tree": "(2 add (((-8 mod n) add x_0_3) mul 3))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 - 2 + 5 - 4 - 3 + 1 - 2 - 3 + 9 - 5 - 4 + 1 - 3 - 4 + 15 - 6 - 5 + 1 - 4 - 4 + 21 - 6 - 6", "x2": "idiv abs n x_0_3", "tree": "(abs(n) idiv x_0_3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 - 1 + 6 + 9 - 8 + 3 + 170 + 8 - 102 - 234 + 280 - 132 - 9010 - 496 + 7242 + 0 - 1120 + 1056 + 10 8120 + 7936 - 14 4840 + 0 + 3 1360 - 3 3792 - 389 2320 - 31 7440", "x2": "mul mod add sqr INT- 8 n mul n INT- 5 x_0_6", "tree": "((((-8)**2 add n) mod (n mul -5)) mul x_0_6)", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 7 - 10 + 1 + 7 + 10 + 1 + 7 + 10 + 1 + 7 + 10 + 1 + 7 + 10 + 1 + 7 + 10 + 1 + 7 + 10 + 1 + 7 + 10", "x2": "mod abs abs x_0_3 sqr INT- 7", "tree": "(abs(abs(x_0_3)) mod (-7)**2)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 5 - 8 + 6 - 5 + 100 + 25 + 64 + 36 + 25 + 1 0 + 625 + 4096 + 1296 + 625 + 1 0 0 + 39 625 + 1677 7216 + 167 9616 + 39 625 + 1 0 0 0 0 + 1525 8789 625 + 281 4749 7671 656 + 2 8211 990 7456 + 1525 8789 625", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 4 + 6 + 6 - 9 - 3 - 5 - 5 + 10 + 4 - 4 - 4 - 9 - 3 + 5 + 5 - 8 - 2 - 4 - 4 + 9 + 3 - 3 - 3 - 8", "x2": "sub mul sub x_0_4 mod mul x_0_2 relu mul relu INT+ 4 INT- 2 INT+ 2 sign x_0_2 INT- 1", "tree": "(((x_0_4 sub ((x_0_2 mul relu((relu(4) mul -2))) mod 2)) mul sign(x_0_2)) sub -1)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 4 - 2 + 0 - 5 - 3 - 1 - 6 - 4 - 2 + 0 - 5 - 3 - 1 - 6 - 4 - 2 + 0 - 5 - 3 - 1", "x2": "mod add n add n INT- 6 INT- 7", "tree": "((n add (n add -6)) mod -7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 0 + 14 + 10 + 26 + 24 + 42 + 42 + 62 + 64 + 86 + 90 + 114 + 120 + 146 + 154 + 182 + 192 + 222 + 234 + 266", "x2": "abs abs relu add add n n x_0_2", "tree": "abs(abs(relu(((n add n) add x_0_2))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 10 + 3 - 6 - 8 + 6 + 8 - 5 - 4 + 10 + 2 - 3 + 54 + 38 - 26 + 31 + 156 + 36 - 152 + 83 + 400 - 14 + 538 + 684 - 102 - 61 + 8166 + 1432 - 2768 + 1419 + 6 1376", "x2": "sub INT+ 5 sub sub x_0_2 add x_0_4 INT+ 7 mul n sqr sub idiv x_0_10 INT- 1 0 abs INT+ 1", "tree": "(5 sub ((x_0_2 sub (x_0_4 add 7)) sub (n mul (((x_0_10 idiv -10) sub abs(1)))**2)))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 10 - 7 - 9 + 2 - 4 + 5 + 6 + 6 + 6 + 9 + 6 + 8 + 10 + 9 + 7 + 6 + 14 + 7 + 10 + 12 + 18 + 13 + 11 + 10 + 22", "x2": "sub sub INT+ 4 INT- 2 mod x_0_4 add sub sub INT+ 7 idiv mod INT- 5 INT+ 4 INT+ 6 n sign x_0_5", "tree": "((4 sub -2) sub (x_0_4 mod (((7 sub ((-5 mod 4) idiv 6)) sub n) add sign(x_0_5))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 1 + 10 - 6 + 8 + 4 + 0 + 5 + 0 + 6 + 1 + 0 + 9 + 5 + 7 + 3 - 1 + 4 - 1 + 5 + 0 - 1 + 8 + 6 + 6 + 4 + 0 + 3 + 2 + 4 - 1", "x2": "sub abs x_0_10 sign x_0_7", "tree": "(abs(x_0_10) sub sign(x_0_7))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 9 + 1 + 27 + 21 + 29 + 3 + 9 + 1 + 27 + 21 + 29 + 3 + 9 + 1 + 27 + 21 + 29 + 3 + 9 + 1 + 27 + 21", "x2": "idiv add x_0_3 mul INT+ 6 INT- 5 idiv INT- 6 add n INT+ 8", "tree": "((x_0_3 add (6 mul -5)) idiv (-6 idiv (n add 8)))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 8 + 0 + 9 + 38 + 115 + 296 + 685 + 1464 + 2937 + 5589 + 1 170 + 1 7806 + 3 142 + 4 9528 + 7 9253 + 12 3841 + 18 9412 + 28 4127 + 41 8722 + 60 7155 + 86 7373", "x2": "idiv relu mul add idiv mul sqr INT+ 3 add x_0_1 n n x_0_1 n n", "tree": "(relu((((((3)**2 mul (x_0_1 add n)) idiv n) add x_0_1) mul n)) idiv n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 2 + 0 + 4 + 0 + 6 + 0 + 8 + 0 + 10 + 0 + 12 + 0 + 14 + 0 + 16 + 0 + 18 + 0", "x2": "abs mod idiv mod n INT- 2 abs n n", "tree": "abs((((n mod -2) idiv abs(n)) mod n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 4 - 10 - 7 - 9 - 5 + 0 + 9 + 13 + 19 + 16 + 18 + 14 + 9 + 0 - 4 - 10 - 7 - 9 - 5 + 0 + 9 + 13 + 19 + 16 + 18 + 14 + 9", "x2": "sub abs sub INT- 9 relu add sub sign sign idiv n n n INT+ 5 x_0_7", "tree": "(abs((-9 sub relu(((sign(sign((n idiv n))) sub n) add 5)))) sub x_0_7)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "- 3 + 10 + 2 - 4 + 3 - 1 - 8 - 10 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 - 1 + 0 + 0 - 1", "x2": "idiv sign x_0_8 n", "tree": "(sign(x_0_8) idiv n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 6 + 1 + 10 - 3 - 4 - 7 + 0 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 + 0 - 1 - 1", "x2": "idiv sub mul x_0_7 INT+ 2 x_0_7 add n n", "tree": "(((x_0_7 mul 2) sub x_0_7) idiv (n add n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 8 - 5 - 10 - 4 + 83 + 0 + 17 + 2 + 53 + 1027 + 137 + 383 + 217 + 1013 + 1 6681 + 2611 + 7211 + 4477 + 2 653 + 35 735 + 5 7919 + 16 6375 + 10 8017 + 51 6943", "x2": "mod INT- 7 abs mul n add n x_0_5", "tree": "(-7 mod abs((n mul (n add x_0_5))))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 10 - 7 + 5 + 10 + 7 - 3 + 9 + 18 + 2 + 15 + 21 + 19 + 10 + 23 + 33 + 18 + 32 + 39 + 38 + 30 + 44 + 55 + 41 + 56 + 64 + 64 + 57", "x2": "add x_0_7 n", "tree": "(x_0_7 add n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 8 + 8 - 3 - 12 - 1 - 23 + 31 - 138 + 402 - 1284 + 5003 - 2 573 + 8 675 - 40 9804 + 202 3996 - 1022 2854 + 6085 3065 - 3 6757 7223 + 21 9331 9353 - 154 2479 5458 + 1075 4759 6742 - 7554 621 7764 + 6 257 318 7279", "x2": "add mul idiv relu n abs INT- 3 sub mul abs x_0_4 INT- 1 x_0_1 INT- 9", "tree": "(((relu(n) idiv abs(-3)) mul ((abs(x_0_4) mul -1) sub x_0_1)) add -9)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 + 7 + 0 + 2 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1", "x2": "mod add abs n x_0_2 mod sign mod abs abs add sqr n n INT- 3 n", "tree": "((abs(n) add x_0_2) mod (sign((abs(abs(((n)**2 add n))) mod -3)) mod n))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 3 - 7 + 4 - 6 - 10 + 7 + 158 + 21 + 108 + 83 + 18 + 1513 + 105 + 1 5815 + 1591 + 1097 + 12 4933 + 1765 + 2391 6011 + 16 6236 + 1722 2557 + 1 9875 5698 + 192 7453 + 2 9878 9800 2824 + 2 9339 2446 + 411 8946 7133 2066", "x2": "add relu n abs mul x_0_7 mul sign sign INT+ 3 add x_0_5 INT- 8", "tree": "(relu(n) add abs((x_0_7 mul (sign(sign(3)) mul (x_0_5 add -8)))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 9 + 4 + 3 + 6 + 5 + 8 + 7 + 10 + 9 + 12 + 11 + 14 + 13 + 16 + 15 + 18 + 17 + 20 + 19 + 22 + 21 + 24", "x2": "sub n idiv INT- 2 sub x_0_2 x_0_1", "tree": "(n sub (-2 idiv (x_0_2 sub x_0_1)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 10 + 7 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 25 + 1 + 3 + 28 + 29", "x2": "mod abs add n INT+ 7 sub sqr INT- 7 x_0_2", "tree": "(abs((n add 7)) mod ((-7)**2 sub x_0_2))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 4 + 4 - 4 - 1 + 9 - 6 + 9 + 11 + 25 + 27 + 21 + 33 + 36 + 30 + 44 + 52 + 63 + 82 + 57 + 73 + 93 + 85 + 77 + 122 + 103 + 129 + 154", "x2": "add INT+ 8 add sqr idiv n mod sign sqr relu sign x_0_6 INT- 4 mod x_0_2 x_0_8", "tree": "(8 add (((n idiv (sign((relu(sign(x_0_6)))**2) mod -4)))**2 add (x_0_2 mod x_0_8)))", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "8"}
{"x1": "- 7 + 1 + 0 - 5 + 3 + 63 + 2991 + 19 1296 + 1549 4814 + 15 4948 1200 + 1874 8722 4958 + 26 9981 6039 3664 + 4562 6891 652 8878 + 89 4287 648 7965 9696 + 2 121 4589 5979 2343 1150 + 515 1093 4937 683 9837 3888 + 14 8866 6019 6812 7671 3005 3054 + 4823 2779 376 7336 5501 3718 8848 + 174 1203 3232 6000 8494 5995 2517 3406 + 6 9648 1329 3040 339 7839 8100 6936 1600 + 3071 4826 6223 654 9844 7356 2405 8846 4718", "x2": "idiv add sqr relu mul x_0_1 n INT- 9 add INT+ 1 add x_0_1 idiv n n", "tree": "(((relu((x_0_1 mul n)))**2 add -9) idiv (1 add (x_0_1 add (n idiv n))))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420", "x2": "add sqr abs n n", "tree": "((abs(n))**2 add n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 5 - 5 - 9 - 198 - 175 - 740 - 1225 - 1 7046 - 1 8675 - 9 1490 - 17 9065 - 289 9510 - 368 935 - 2067 8990 - 4602 2265 - 8 4086 790 - 11 9630 7115 - 74 8579 7990 - 184 5493 2265 - 3716 6047 3590 - 5802 895 5615 - 3 9674 7293 9990 - 10 6484 9592 2665", "x2": "add x_0_4 mul mul n add INT- 1 0 x_0_4 n", "tree": "(x_0_4 add ((n mul (-10 add x_0_4)) mul n))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 4 + 2 - 8 - 16 + 10 - 48 - 112 + 80 - 432 - 1120 + 880 - 5184 - 1 4560 + 1 2320 - 7 7760 - 23 2960 + 20 9440 - 139 9680 - 442 6240 + 418 8800 - 2939 3280 - 9737 7280 + 9634 2400", "x2": "mul add x_0_3 relu INT- 1 n", "tree": "((x_0_3 add relu(-1)) mul n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 6 + 0 - 8 - 9 + 9 + 1 + 1 + 3 + 0 + 3 + 0 + 0 + 1 + 1 + 3 + 0 + 3 + 0 + 0 + 1 + 1 + 3 + 0 + 3 + 0 + 0 + 1", "x2": "relu mod idiv x_0_7 relu sign x_0_8 n", "tree": "relu(((x_0_7 idiv relu(sign(x_0_8))) mod n))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 3 + 6 + 18 + 72 + 360 + 2160 + 1 5120 + 12 960 + 108 8640 + 1088 6400 + 1 1975 400 + 14 3700 4800 + 186 8106 2400 + 2615 3487 3600 + 3 9230 2310 4000 + 62 7683 6966 4000 + 1067 622 8428 8000 + 1 9207 1211 1718 4000 + 36 4935 3012 2649 6000 + 729 8706 245 2992 0 + 1 5327 2826 5151 2832 0", "x2": "mul x_0_1 n", "tree": "(x_0_1 mul n)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 5 - 3 - 10 - 9 - 3 - 48 - 65 - 82 - 101 - 122 - 145 - 170 - 197 - 226 - 257 - 290 - 325 - 362 - 401 - 442 - 485 - 530 - 577 - 626 - 677", "x2": "sub sign x_0_6 mul n relu n", "tree": "(sign(x_0_6) sub (n mul relu(n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 1 + 0 + 1 + 1 + 3 + 4 + 1 + 0 + 1 + 4 + 9 + 3 + 11 + 6 + 1 + 13 + 9 + 5 + 1", "x2": "mod sqr INT+ 9 n", "tree": "((9)**2 mod n)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 10 - 10 - 8 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 + 9 + 10 + 2 - 5 + 54 + 70 + 16 - 45 + 540 + 770 + 192 - 585 + 7560 + 1 1550 + 3072 - 9945 + 13 6080 + 21 9450 + 6 1440 - 20 8845 + 299 3760 + 504 7350 + 147 4560", "x2": "mul n x_0_4", "tree": "(n mul x_0_4)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2", "x2": "mod n INT+ 3", "tree": "(n mod 3)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 10 - 8 + 16 - 225 - 252 + 833 - 1 4336 - 2 331 + 8 3400 - 173 4535 - 292 7520 + 1409 4769 - 3 3996 8664 - 6 5869 1775 + 36 826 1120 - 982 5094 3607 - 2134 1613 4776 + 1 3025 8226 4681 - 39 3003 7744 2400 - 94 1165 1543 5775 + 630 4498 1610 6088 - 2 789 8996 6702 9071", "x2": "mul add n mul n x_0_3 n", "tree": "((n add (n mul x_0_3)) mul n)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 7 - 4 + 1 + 4 + 5 + 2 + 1 + 4 + 5 + 2 + 1 + 4 + 5 + 2 + 1 + 4 + 5 + 2 + 1 + 4 + 5 + 2", "x2": "sub mod abs add INT- 6 x_0_2 INT- 6 INT- 6", "tree": "((abs((-6 add x_0_2)) mod -6) sub -6)", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 1 + 8 - 10 + 9 + 5 + 10 - 38 + 15 - 49 + 45 - 55 + 13 - 65 + 239 - 120 + 300 - 238 + 340 - 304 + 445 - 1495 + 838 - 1840 + 1494 - 2145 + 3015", "x2": "sub add sub n add mul INT+ 5 x_0_7 x_0_5 mod INT- 7 idiv idiv INT- 9 INT- 9 INT- 3 n", "tree": "(((n sub ((5 mul x_0_7) add x_0_5)) add (-7 mod ((-9 idiv -9) idiv -3))) sub n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 2 - 2 + 4 - 10 - 1 - 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "mul sign x_0_5 sign idiv x_0_3 mul n n", "tree": "(sign(x_0_5) mul sign((x_0_3 idiv (n mul n))))", "n_input_points": "20", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 - 4 - 7 + 6 - 7 - 5 + 5 - 3 - 14 - 7 - 3 - 5 - 10 - 9 - 5 - 7 - 12 - 11 - 7 - 9 - 14 - 13 - 9 - 11 - 16 - 15 - 11", "x2": "sub mod x_0_7 INT+ 1 abs add x_0_2 n", "tree": "((x_0_7 mod 1) sub abs((x_0_2 add n)))", "n_input_points": "20", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "- 1 + 2 - 3 + 10 + 1 - 10 + 3 + 0 - 2 - 3 - 6 + 4 + 12 + 7 + 60 + 116 + 50 - 27 + 75 + 33 + 77 + 9 - 6 + 137 + 67 + 130 + 531 + 675 + 338 + 25 + 433 + 252", "x2": "add x_0_11 mul sub idiv INT+ 4 INT+ 5 INT- 5 add x_0_12 add relu mod n n mod x_0_6 n", "tree": "(x_0_11 add (((4 idiv 5) sub -5) mul (x_0_12 add (relu((n mod n)) add (x_0_6 mod n)))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "+ 7 - 4 - 10 + 2 - 7 - 9 + 6 + 2 + 1 + 6 + 3 + 5 + 4 + 9 + 6 + 8 + 7 + 12 + 9 + 11 + 10 + 15 + 12 + 14 + 13 + 18", "x2": "mod sub add mod x_0_4 add x_0_3 relu sub relu x_0_6 INT- 4 n INT- 3 n", "tree": "((((x_0_4 mod (x_0_3 add relu((relu(x_0_6) sub -4)))) add n) sub -3) mod n)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 6 + 2 + 5 - 9 - 3 + 2 - 6 - 6 - 9 - 12 - 11 - 17 - 2 - 14 - 4 - 8 + 2 + 1 + 14 + 12 + 31 + 14 + 45 + 18 + 53 + 16 + 52 + 2 + 40", "x2": "sub x_0_2 x_0_9", "tree": "(x_0_2 sub x_0_9)", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "- 6 + 2 - 7 - 4 + 7 + 9 + 1 - 40 - 45 - 132 - 22 - 42 - 100 - 7 + 1 1985 + 1 6184 + 14 8087 + 4338 + 1 1153 - 2 20 - 21 - 19 5052 - 4 697 - 1 2074 1989 - 4 2123 + 10 7804 1519 - 36 720 3627", "x2": "sub idiv idiv relu abs mul sqr x_0_7 n mod idiv n INT- 9 add x_0_6 n INT- 1 n", "tree": "(((relu(abs(((x_0_7)**2 mul n))) idiv ((n idiv -9) mod (x_0_6 add n))) idiv -1) sub n)", "n_input_points": "20", "n_ops": "10", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 7 + 2 - 10 - 1 + 9 + 2 + 9 + 27 + 19 + 9 + 9 + 9 - 5 - 6 + 9 + 9 + 9 + 28 + 29 + 9 + 9 + 9 - 15 - 16", "x2": "add sub INT+ 9 sign idiv INT- 4 idiv INT- 4 INT- 9 sub INT- 1 mul idiv x_0_5 n abs n", "tree": "((9 sub sign((-4 idiv (-4 idiv -9)))) add (-1 sub ((x_0_5 idiv n) mul abs(n))))", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 9 + 10 + 9 - 5 - 9 - 14 + 5 + 4 - 10 - 14 - 19 + 0 - 1 - 15 - 19 - 24 - 5 - 6 - 20 - 24 - 29 - 10 - 11 - 25 - 29", "x2": "add sub x_0_5 mod INT+ 1 0 INT- 3 INT- 7", "tree": "((x_0_5 sub (10 mod -3)) add -7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "20", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 7 - 10 - 5 - 2 - 1 - 2 - 4 - 8 - 5 - 3 - 2 - 3 - 5 - 7 - 5 - 4 - 3 - 4 - 5 - 7 - 6 - 5 - 4 - 4", "x2": "idiv mul mod sign INT+ 4 add INT+ 5 abs idiv mod n add x_0_4 n n n x_0_3", "tree": "(((sign(4) mod (5 add abs(((n mod (x_0_4 add n)) idiv n)))) mul n) idiv x_0_3)", "n_input_points": "20", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 + 1 - 6 + 5 - 5 - 4 - 24 - 2 - 1 + 0 - 5 - 2 - 5 + 4 - 13 + 6 + 7 - 84 - 496 - 3463 + 11 - 5445 + 13", "x2": "add mul mod add INT- 5 n sub mul x_0_3 x_0_1 idiv n n sign n INT- 5", "tree": "((((-5 add n) mod ((x_0_3 mul x_0_1) sub (n idiv n))) mul sign(n)) add -5)", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 3 + 9 - 4 - 6 + 2 - 5 + 0 + 3 + 18 + 18 + 24 + 18 + 0 - 70 + 0 + 72 + 504 + 0 - 1944 - 1296 + 0 - 5 4670 + 0 - 13 9968 + 328 3056 + 0 + 6740 8200 + 6 783 4368", "x2": "mul x_0_8 add x_0_5 idiv x_0_3 INT- 7", "tree": "(x_0_8 mul (x_0_5 add (x_0_3 idiv -7)))", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 5 - 9 + 6 - 8 + 4 + 8 + 8 - 5 - 2 + 0 + 9 + 1 + 8 + 10 + 16 + 4 + 0 + 5 + 4 + 0 + 9 + 1 + 12 + 2 + 6 + 1 + 0 + 5 + 16 + 0", "x2": "mod sqr x_0_10 add INT+ 7 mul sign INT- 4 sub INT- 3 x_0_8", "tree": "((x_0_10)**2 mod (7 add (sign(-4) mul (-3 sub x_0_8))))", "n_input_points": "20", "n_ops": "6", "n_recurrence_degree": "10"}
{"x1": "- 8 + 4 - 2 - 10 - 6 + 2 - 1 + 8 + 4 - 3 + 9 + 22 + 7 + 4 + 32 + 21 + 7 + 39 + 44 + 6 + 39 + 79 + 18 + 24 + 111 + 58 - 2 + 129", "x2": "add sub x_0_4 x_0_8 x_0_3", "tree": "((x_0_4 sub x_0_8) add x_0_3)", "n_input_points": "20", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 10 + 4 + 7 + 9 + 5 - 5 - 6 - 7 + 2 - 7 + 8 + 0 + 12 + 14 + 15 + 12 + 17 + 18 + 18 + 20 + 18 + 20 + 23 + 24 + 25 + 22 + 25 + 26 + 28 + 30 + 27 + 31", "x2": "abs add mod relu mul n add x_0_4 idiv n x_0_12 INT- 5 n", "tree": "abs(((relu((n mul (x_0_4 add (n idiv x_0_12)))) mod -5) add n))", "n_input_points": "20", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "- 4 - 3 - 4 + 0 - 5 - 5 + 0 - 4 - 3 - 4 + 0 - 5 - 5 + 0 - 4 - 3 - 4 + 0 - 5 - 5", "x2": "mod mul n sub INT- 1 0 n INT- 7", "tree": "((n mul (-10 sub n)) mod -7)", "n_input_points": "20", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 - 1 - 6 + 4 - 396 + 6604 + 16 5204 - 4 1796 - 696 - 96 + 4 - 96 + 4 + 104 - 196 - 4896 - 4796 + 2404 - 96 + 4 + 4 - 96 - 1996", "x2": "add INT+ 4 mul idiv add x_0_1 mod mod idiv x_0_1 n n n x_0_3 sqr INT- 1 0", "tree": "(4 add (((x_0_1 add (((x_0_1 idiv n) mod n) mod n)) idiv x_0_3) mul (-10)**2))", "n_input_points": "20", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 10 + 3 - 1 - 6 + 5 + 0 - 1 - 2 + 0 - 7 - 1 + 1 + 0 - 1 + 1 - 6 + 0 - 16", "x2": "add mod n sub x_0_6 n sign mul add INT+ 5 n sub mul INT+ 1 0 mod x_0_1 n x_0_5", "tree": "((n mod (x_0_6 sub n)) add sign(((5 add n) mul ((10 mul (x_0_1 mod n)) sub x_0_5))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 3 + 1 - 9 - 1 - 4 + 3 + 1 - 12 + 0 - 13 + 2 - 3 - 9 + 1 - 25 + 2 - 16 - 7 - 2", "x2": "add x_0_7 x_0_5", "tree": "(x_0_7 add x_0_5)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 9 + 10 + 4 + 6 + 1 - 9 + 10 + 4 + 6 + 1 - 9 + 10 + 4 + 6 + 1 - 9 + 10 + 4", "x2": "mul x_0_5 sign sqr sqr idiv add sub idiv n x_0_3 n mod n n relu n", "tree": "(x_0_5 mul sign(((((((n idiv x_0_3) sub n) add (n mod n)) idiv relu(n)))**2)**2))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 5 - 2 + 4 - 13 - 8 + 3 - 23 - 21 + 2 - 34 - 31 - 1 - 46 - 42 - 4 - 59", "x2": "add sub INT- 2 n add add mod n INT+ 4 add sub sign x_0_3 INT+ 3 x_0_3 add mod INT- 7 x_0_3 n", "tree": "((-2 sub n) add (((n mod 4) add ((sign(x_0_3) sub 3) add x_0_3)) add ((-7 mod x_0_3) add n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 1 - 14 - 51 - 124 - 245 - 426 - 679 - 1016 - 1449 - 1990 - 2651 - 3444 - 4381", "x2": "add mul sqr n sub idiv n idiv n sub n mul n sqr INT- 7 n n", "tree": "(((n)**2 mul ((n idiv (n idiv (n sub (n mul (-7)**2)))) sub n)) add n)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 5 + 1 - 8 - 10 + 1 + 59 + 70 + 74 + 89 + 100 + 158 + 186 + 189 + 218 + 192 + 290 + 353 + 340", "x2": "add mul n INT+ 1 0 mul mod x_0_4 mul sign INT- 8 x_0_5 INT- 1", "tree": "((n mul 10) add ((x_0_4 mod (sign(-8) mul x_0_5)) mul -1))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 7 + 0 - 2 + 3 - 6 + 4 - 6 - 6 + 8 - 6 + 3 - 3 + 1 + 2 - 9 + 13 - 20 + 14 - 6 - 1 + 4 - 8 + 9 - 8", "x2": "sub idiv add sub x_0_11 mul sub n n INT+ 8 x_0_6 mul sub INT- 5 n abs INT- 7 sub x_0_1 x_0_10", "tree": "((((x_0_11 sub ((n sub n) mul 8)) add x_0_6) idiv ((-5 sub n) mul abs(-7))) sub (x_0_1 sub x_0_10))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "11"}
{"x1": "- 4 + 28 - 100 + 420 - 1660 + 6668 - 2 6644 + 10 6612 - 42 6412 + 170 5692 - 682 2724 + 2729 948 - 1 916 3740 + 4 3665 5020", "x2": "mul add INT+ 2 INT- 6 add sub x_0_1 n idiv n x_0_1", "tree": "((2 add -6) mul ((x_0_1 sub n) add (n idiv x_0_1)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 5 + 1 - 9 + 116 - 714 + 4989 - 3 9962 + 35 9590 - 359 5940 + 3955 5436 - 4 7466 6263 + 61 7066 8396 - 863 8941 6290 + 1 2958 4178 7525 - 20 7334 7416 4339 + 352 4691 2323 4674", "x2": "idiv sub n sub sub sqr x_0_1 mul x_0_2 n mul sqr x_0_4 INT- 2 idiv x_0_1 n", "tree": "((n sub (((x_0_1)**2 sub (x_0_2 mul n)) sub ((x_0_4)**2 mul -2))) idiv (x_0_1 idiv n))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 - 9 - 5 + 10 - 11 - 14 - 8 - 6 - 12 - 4 + 2 - 6 - 6 - 4 - 8 - 10 - 8", "x2": "sub INT- 1 0 mod x_0_2 x_0_5", "tree": "(-10 sub (x_0_2 mod x_0_5))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 4 - 9 + 3 + 3 + 10 + 3 - 1 + 12 + 13 + 21 + 15 + 12 + 26 + 28 + 37 + 32 + 30", "x2": "add n x_0_5", "tree": "(n add x_0_5)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 8 + 8 - 6 + 2 + 0 + 54 + 0 + 24 + 9 + 550 + 11 + 300 + 130 + 7714 + 180 + 4816 + 2227", "x2": "relu add n mul n x_0_4", "tree": "relu((n add (n mul x_0_4)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169", "x2": "idiv mul sqr n INT- 3 sub INT+ 4 sign n", "tree": "(((n)**2 mul -3) idiv (4 sub sign(n)))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 10 - 9 + 9 - 4 + 10 + 6 - 10 + 54 6121 + 8464 + 1 2996 + 2 4025 + 2 7889 + 4 3264 + 5 4289 + 6 1504 + 2985 6607 3744 + 7726 4100 + 1 7846 2881 + 5 9667 8329 + 8 270 2224", "x2": "sqr add sub INT+ 6 sqr INT- 2 add x_0_8 mul n abs mod n mul n x_0_1", "tree": "(((6 sub (-2)**2) add (x_0_8 add (n mul abs((n mod (n mul x_0_1)))))))**2", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "- 10 + 10 + 5 + 5 + 9 + 0 + 0 - 1 + 1 - 140 + 55 + 36 - 91 - 84 - 225 - 256 - 2669 + 702 - 2356 - 1140 - 1470 - 7458", "x2": "mul mul sign n n add add x_0_7 sub x_0_9 n sign x_0_6", "tree": "((sign(n) mul n) mul ((x_0_7 add (x_0_9 sub n)) add sign(x_0_6)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "9"}
{"x1": "+ 167 9616 + 187 4161 + 208 5136 + 231 3441 + 256 0 + 282 5761 + 311 1696 + 341 8801 + 374 8096 + 410 625 + 447 7456 + 487 9681 + 530 8416", "x2": "sqr sqr sub sign INT+ 7 add sqr mod sign INT- 7 INT+ 7 n", "tree": "(((sign(7) sub (((sign(-7) mod 7))**2 add n)))**2)**2", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 7 + 0 + 0 + 3 + 1 + 0 + 1 + 2 + 0 + 9 + 8 + 0 + 11 + 0", "x2": "mod mul mod sqr n INT+ 9 sub sqr relu x_0_1 INT- 9 n", "tree": "((((n)**2 mod 9) mul ((relu(x_0_1))**2 sub -9)) mod n)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 9 + 10 - 13 + 4 - 19 - 4 - 27 - 14 - 38 - 26 - 51 - 40 - 66 - 56 - 83", "x2": "add sub x_0_2 abs n idiv x_0_3 sqr mul x_0_1 sub INT- 2 sqr sign n", "tree": "((x_0_2 sub abs(n)) add (x_0_3 idiv ((x_0_1 mul (-2 sub (sign(n))**2)))**2))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 6 + 5 + 3 + 4 + 5 + 3 + 4 + 5 + 3 + 4 + 5 + 3 + 4 + 5 + 3", "x2": "mod x_0_3 n", "tree": "(x_0_3 mod n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 8 + 9 + 8 - 5 - 14 + 2 + 0 - 14 - 24 - 9 - 12 - 27 - 38 - 24 - 28 - 44", "x2": "sub x_0_4 n", "tree": "(x_0_4 sub n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 8 + 8 - 9 + 5 - 8 + 6 + 9 - 1 + 7 + 7 - 8 + 4 - 7 + 5 + 8 + 0 + 6 + 6 - 7 + 3", "x2": "add sign abs add x_0_3 idiv INT- 1 idiv sign INT+ 3 x_0_8 x_0_8", "tree": "(sign(abs((x_0_3 add (-1 idiv (sign(3) idiv x_0_8))))) add x_0_8)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 5 - 9 + 3 + 21 + 32 + 64 + 89 + 137 + 180 + 248 + 313 + 405 + 496 + 616 + 737 + 889", "x2": "add sign x_0_3 add relu x_0_2 add mul abs n n n", "tree": "(sign(x_0_3) add (relu(x_0_2) add ((abs(n) mul n) add n)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 1 + 8 - 12 + 3 - 24 + 36 - 9 + 72 - 108 + 27 - 216 + 324 - 81 + 648 - 972", "x2": "idiv mul relu INT+ 3 x_0_3 sign INT- 9", "tree": "((relu(3) mul x_0_3) idiv sign(-9))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 8 - 9 + 3 - 3 - 9 + 5 - 6 - 6 + 11 + 5 + 5 + 35 + 946 + 165 + 45 + 28 + 85 + 181 + 2 8179", "x2": "sub mod INT- 1 0 sqr add mod x_0_5 x_0_1 idiv n INT+ 6 x_0_7", "tree": "((-10 mod (((x_0_5 mod x_0_1) add (n idiv 6)))**2) sub x_0_7)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "+ 2 - 3 - 9 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_3 add INT+ 1 0 abs mod idiv INT+ 4 add INT+ 3 sqr n INT+ 5", "tree": "(x_0_3 idiv (10 add abs(((4 idiv (3 add (n)**2)) mod 5))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 7 + 7 + 1 + 9 + 0 - 8 + 6 + 0 + 8 - 1 - 9 + 5 - 1 + 7 - 2 - 10 + 4", "x2": "add x_0_5 idiv sign idiv sqr mul INT- 3 n add abs n x_0_4 INT- 7", "tree": "(x_0_5 add (sign((((-3 mul n))**2 idiv (abs(n) add x_0_4))) idiv -7))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 - 1 - 9 - 3 + 6 + 4 + 8 - 4 - 4 + 8 + 2 + 9 + 9 + 14 + 10 + 9 + 8 + 5 + 12 + 9 + 6 + 9 + 5 + 7", "x2": "sub INT+ 9 mod mod sub x_0_11 add INT+ 8 x_0_1 INT+ 6 x_0_11", "tree": "(9 sub (((x_0_11 sub (8 add x_0_1)) mod 6) mod x_0_11))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "+ 0 - 2 - 7 - 3 - 6 + 3 + 9 + 7 + 2 + 6 + 3 + 12 + 18 + 16 + 11 + 15 + 12 + 21 + 27", "x2": "sub add x_0_6 INT+ 6 INT- 3", "tree": "((x_0_6 add 6) sub -3)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 5 - 8 + 10 + 2 - 8 - 3 + 0 + 5 - 6 - 18 - 27 - 24 - 22 - 19 - 32 - 47 - 57 - 56 - 56 - 54 - 67", "x2": "add sub sub add x_0_6 idiv x_0_8 sub x_0_1 x_0_5 abs n n INT+ 4", "tree": "((((x_0_6 add (x_0_8 idiv (x_0_1 sub x_0_5))) sub abs(n)) sub n) add 4)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 3 - 8 + 1 - 7 - 4 - 9 + 1 + 7 + 2 + 2 + 10 + 12 + 8 + 10 + 8 + 2 + 10 + 12 + 1", "x2": "sub n mod mul sub x_0_6 INT- 9 abs x_0_5 n", "tree": "(n sub (((x_0_6 sub -9) mul abs(x_0_5)) mod n))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 + 9 + 0 + 1 - 3 - 4 + 6 + 0 - 9 + 80 - 11 + 0 - 13 - 14 + 75 - 16 - 17 + 1422 - 19 - 20 - 21", "x2": "mul n add relu x_0_8 sign INT- 9", "tree": "(n mul (relu(x_0_8) add sign(-9)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 3 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104", "x2": "add n relu x_0_1", "tree": "(n add relu(x_0_1))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 1 - 7 - 3 + 1 + 1 + 7 + 27 - 8 + 40 + 0 - 8 - 8 + 40 + 720 + 55 + 1591 - 9 + 55 + 55", "x2": "add sqr x_0_7 sub add sign relu x_0_4 INT- 1 0 relu mod n INT- 2", "tree": "((x_0_7)**2 add ((sign(relu(x_0_4)) add -10) sub relu((n mod -2))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 4 + 2 - 5 + 2 + 10 + 100 + 81 + 9 + 121 + 400 + 1 2321 + 8649 + 484 + 1 8225 + 17 2225 + 1 5220 1569 + 7509 9556 + 25 2004", "x2": "sqr abs add n x_0_5", "tree": "(abs((n add x_0_5)))**2", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 4 + 2 - 5 + 0 - 7 + 8 + 45 + 44 + 38 + 25 - 34 - 79 - 4 + 7 + 69 + 161 + 113 + 7", "x2": "sub sub n x_0_4 add mul n mod n INT- 6 add x_0_5 idiv relu x_0_2 n", "tree": "((n sub x_0_4) sub ((n mul (n mod -6)) add (x_0_5 add (relu(x_0_2) idiv n))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 1 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 2 + 3", "x2": "sub relu relu sub x_0_1 x_0_1 mod sub x_0_1 sub sub sign n x_0_1 n INT- 4", "tree": "(relu(relu((x_0_1 sub x_0_1))) sub ((x_0_1 sub ((sign(n) sub x_0_1) sub n)) mod -4))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 4 + 4 + 6 + 5 - 36 + 36 + 54 - 45 + 324 - 324 - 486 + 405 - 2916 + 2916 + 4374 - 3645 + 2 6244", "x2": "idiv mul sub n sub n INT+ 9 x_0_4 sign idiv add n INT- 7 INT- 8", "tree": "(((n sub (n sub 9)) mul x_0_4) idiv sign(((n add -7) idiv -8)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 - 3 - 1 + 1 + 3 + 4 + 5 + 6 + 7 + 9 + 10 + 11 + 12", "x2": "sub n add INT+ 2 idiv sub INT+ 9 n n", "tree": "(n sub (2 add ((9 sub n) idiv n)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 9 + 16 + 25 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr add n sign sub mod mul x_0_1 x_0_1 mod INT- 9 INT+ 8 mod n x_0_1", "tree": "((n add sign((((x_0_1 mul x_0_1) mod (-9 mod 8)) sub (n mod x_0_1)))))**2", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 5 + 5 + 3 - 2 + 22 - 2 + 40 + 10 + 11 + 57 - 62 + 106 - 39 - 34 + 175 - 123 + 394", "x2": "add x_0_5 add x_0_2 add INT+ 5 mul mod sub sub mul abs n n x_0_1 n sub x_0_4 n INT- 4", "tree": "(x_0_5 add (x_0_2 add (5 add (((((abs(n) mul n) sub x_0_1) sub n) mod (x_0_4 sub n)) mul -4))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 5 + 0 + 7 + 5 - 9 + 32 + 10 + 20 + 34 + 30 + 2 + 84 + 40 + 60 + 88 + 80 + 24 + 188", "x2": "abs mul INT- 2 sub x_0_6 INT- 1 0", "tree": "abs((-2 mul (x_0_6 sub -10)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 2 + 2 + 4 - 10 + 9 + 10 + 23 + 108 + 90 + 110 + 540 + 1 1676 + 8113 + 1 2114 + 29 1615 + 1967 3712 + 6582 786", "x2": "abs mod add sqr abs x_0_4 n mul add mul add x_0_1 n INT+ 5 sqr INT+ 6 n", "tree": "abs((((abs(x_0_4))**2 add n) mod ((((x_0_1 add n) mul 5) add (6)**2) mul n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 8 - 5 + 5 - 2 + 22 - 64 - 48 + 37 - 28 + 234 - 776 - 632 + 510 - 428 + 3736 - 1 3200 - 1 1384", "x2": "add INT- 8 mul n x_0_5", "tree": "(-8 add (n mul x_0_5))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 10 + 10 - 5 - 7 + 8 - 9 + 10 + 11 - 12 + 13 + 14 - 15 + 16 + 17 - 18 + 19", "x2": "mul sign mod sub idiv x_0_4 INT- 5 relu n x_0_3 relu add INT+ 2 n", "tree": "(sign((((x_0_4 idiv -5) sub relu(n)) mod x_0_3)) mul relu((2 add n)))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 4 - 10 - 2 + 10 - 2 + 9 + 1 - 9 - 7 - 7 + 9 + 144 + 225 + 256 + 289 + 256 + 361 + 324 + 361 + 484 + 529 + 576 + 529 + 576", "x2": "sqr add abs n sign sub mod INT- 1 0 INT- 2 x_0_12", "tree": "((abs(n) add sign(((-10 mod -2) sub x_0_12))))**2", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "12"}
{"x1": "- 1 - 4 + 6 - 48 - 33 - 45 - 49 - 48 - 24 - 48 - 49 - 49 - 49 - 48 - 48 - 48", "x2": "sub sqr mod x_0_3 INT- 8 sqr INT+ 7", "tree": "(((x_0_3 mod -8))**2 sub (7)**2)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 1 - 9 + 4 + 7 + 4 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1", "x2": "sign mod sign relu INT+ 9 sub x_0_5 relu relu relu sign x_0_3", "tree": "sign((sign(relu(9)) mod (x_0_5 sub relu(relu(relu(sign(x_0_3)))))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 2 + 10 - 1 + 9 + 9 - 9 + 2 - 10 + 1 - 9 - 9 + 9 - 2 + 10 - 1 + 9 + 9 - 9 + 2", "x2": "add mod n n idiv mul x_0_6 INT+ 1 0 INT- 1 0", "tree": "((n mod n) add ((x_0_6 mul 10) idiv -10))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 7 - 49 - 343 - 2401 - 1 6807 - 11 7649 - 82 3543 - 576 4801 - 4035 3607 - 2 8247 5249 - 19 7732 6743 - 138 4128 7201 - 968 8901 407 - 6782 2307 2849", "x2": "idiv add x_0_1 sub x_0_1 mul INT+ 9 x_0_1 sign add x_0_1 n", "tree": "((x_0_1 add (x_0_1 sub (9 mul x_0_1))) idiv sign((x_0_1 add n)))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 - 4 - 8 + 6 + 4 + 8 + 6 + 4 + 8 + 6 + 4 + 8 + 6 + 4 + 8 + 6", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 10 + 7 - 2 - 1 - 4 + 0 + 10 + 10 + 14 + 11 + 2 + 3 + 0 + 4 + 14 + 14", "x2": "sub n x_0_4", "tree": "(n sub x_0_4)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 6 - 10 - 5 - 3 + 0 + 7 - 5 + 7 + 10 + 731 + 1155 + 4056 + 3521 + 5 + 505 + 4614 + 7693 + 2455 - 3256 - 3521 + 1 9355", "x2": "sub mul mul add n n mod mul x_0_9 x_0_9 n n x_0_7", "tree": "((((n add n) mul ((x_0_9 mul x_0_9) mod n)) mul n) sub x_0_7)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 3 - 7 + 4 + 17 + 60 - 15 - 76 - 495 + 44 + 113 + 4004 - 239 + 3100 - 3 2271 + 5012 - 5 7071", "x2": "add mul x_0_3 INT- 8 add idiv INT+ 4 INT+ 9 x_0_2", "tree": "((x_0_3 mul -8) add ((4 idiv 9) add x_0_2))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 5 - 5 + 1 + 3 + 5 + 6 + 4 + 4 + 6 + 8 + 10 + 8 + 6 + 12 + 12", "x2": "sub n mod sub relu INT- 6 n mod x_0_2 abs add x_0_2 x_0_2", "tree": "(n sub ((relu(-6) sub n) mod (x_0_2 mod abs((x_0_2 add x_0_2)))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 + 5 + 5 + 5 + 6 + 5 + 10 + 3 + 5 + 4 - 5 + 8 - 4 - 4 - 6 - 2 - 3 - 3 + 2 - 4 + 1 + 1 + 1 + 0 + 0", "x2": "idiv add mod mul x_0_12 x_0_4 INT+ 3 mul sign n x_0_8 idiv n INT- 1 0", "tree": "((((x_0_12 mul x_0_4) mod 3) add (sign(n) mul x_0_8)) idiv (n idiv -10))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "12"}
{"x1": "+ 0 + 10 - 1 + 9 + 12 + 8 + 11 + 7 + 10 + 6 + 9 + 5 + 8 + 4 + 7", "x2": "add sign INT- 8 mod x_0_2 add sub relu INT+ 1 0 idiv x_0_1 INT+ 7 n", "tree": "(sign(-8) add (x_0_2 mod ((relu(10) sub (x_0_1 idiv 7)) add n)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 0 - 7 - 3 + 3 + 5 + 4 + 3 - 4 + 0 + 6 + 8 + 7 + 6 - 1 + 3 + 9 + 11 + 10", "x2": "add INT+ 3 add idiv INT+ 1 0 sub sqr n relu x_0_1 x_0_6", "tree": "(3 add ((10 idiv ((n)**2 sub relu(x_0_1))) add x_0_6))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 3 + 2 + 0 - 1 - 2 + 10 + 3 - 3 - 5 - 4 - 8 - 4 + 1 - 1 - 2 - 3 + 9 + 2 - 4 - 6 - 5 - 9 - 5 + 0", "x2": "add sign INT- 1 x_0_11", "tree": "(sign(-1) add x_0_11)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000", "x2": "abs mul abs mul mod relu idiv n n abs INT+ 4 n x_0_1", "tree": "abs((abs(((relu((n idiv n)) mod abs(4)) mul n)) mul x_0_1))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 1 + 1 + 1 + 2 + 2 + 2 + 3 + 3 + 3 + 4 + 4", "x2": "idiv n abs INT- 3", "tree": "(n idiv abs(-3))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 + 3 - 8 - 3 - 7 - 275 - 1950 - 1 30 - 16 1525 - 100 6605 - 503 3910 - 2516 9920 - 1 2584 9710 - 6 2924 8555 - 31 4624 2780 - 157 3121 3905 - 786 5606 9530 - 3932 8034 7655", "x2": "mul add idiv mul mul x_0_3 n sqr n abs sqr x_0_5 x_0_1 INT+ 5", "tree": "(((((x_0_3 mul n) mul (n)**2) idiv abs((x_0_5)**2)) add x_0_1) mul 5)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 8 - 2 - 1 + 9 + 0 + 1 - 4 + 8 - 10 + 0 + 96 + 104 + 0 + 0 + 144 + 0 + 18 + 0 + 160 + 0 + 0 + 2208 + 2496", "x2": "sub relu mul x_0_11 n mod relu n n", "tree": "(relu((x_0_11 mul n)) sub (relu(n) mod n))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "11"}
{"x1": "- 3 - 1 - 3 - 2 - 3 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2", "x2": "idiv n x_0_1", "tree": "(n idiv x_0_1)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 9 - 8 + 6 - 10 - 5 + 3 - 11 - 3 + 1 - 12 - 2 - 1 - 13 - 1 - 2 - 15", "x2": "add x_0_3 idiv INT+ 7 sub INT- 8 x_0_1", "tree": "(x_0_3 add (7 idiv (-8 sub x_0_1)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 9 - 8 - 8 + 5 + 3 + 30 + 52 + 1 + 81 + 100 - 545 + 144 + 169 + 333 + 225 + 256", "x2": "add sqr n mul idiv INT+ 9 x_0_3 sub INT+ 3 sub x_0_2 mod relu x_0_2 n", "tree": "((n)**2 add ((9 idiv x_0_3) mul (3 sub (x_0_2 sub (relu(x_0_2) mod n)))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 2 - 6 + 6 - 10 - 12 + 16 + 2 - 28 + 14 + 30 - 43 - 16 + 73 - 26 - 90 + 99 + 64", "x2": "sub add x_0_3 idiv idiv abs n sub n x_0_5 n x_0_2", "tree": "((x_0_3 add ((abs(n) idiv (n sub x_0_5)) idiv n)) sub x_0_2)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 10 + 8 - 4 + 3 + 4 + 7 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 7", "x2": "mod add sign add mod n mul x_0_3 INT- 9 x_0_3 n INT+ 1 0", "tree": "((sign(((n mod (x_0_3 mul -9)) add x_0_3)) add n) mod 10)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 1 + 1 - 1 + 10 - 42 - 8 + 9 - 10 - 110 - 504 - 104 + 126 + 150 + 1760 + 8568 + 1872 - 2394", "x2": "mul add n sign sign INT+ 1 mul x_0_5 sign sub add x_0_4 INT+ 7 x_0_1", "tree": "((n add sign(sign(1))) mul (x_0_5 mul sign(((x_0_4 add 7) sub x_0_1))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 4 + 1 - 2 - 7 - 3 - 4 + 9 - 8 - 8 + 5 + 6 + 76 + 25 + 57 + 11 + 36 + 701 + 63 + 282 + 1192 + 1025 + 4 4263", "x2": "abs add sub INT+ 3 mul x_0_8 add x_0_5 x_0_10 abs mod n x_0_4", "tree": "abs(((3 sub (x_0_8 mul (x_0_5 add x_0_10))) add abs((n mod x_0_4))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 64 + 729 + 4096 + 1 5625 + 4 6656 + 11 7649 + 26 2144 + 53 1441 + 100 0 + 177 1561 + 298 5984 + 482 6809", "x2": "sqr mul n sqr relu relu n", "tree": "((n mul (relu(relu(n)))**2))**2", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 9 + 8 - 2 - 3 + 9 + 15 + 14 + 4 + 3 + 15 + 21 + 20 + 10 + 9 + 21 + 27 + 26", "x2": "sub x_0_5 sub INT- 5 sign INT+ 1 0", "tree": "(x_0_5 sub (-5 sub sign(10)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 3 + 3 + 10 + 10 + 384 + 112 + 72 + 729 + 640 + 159 6771 + 13 9968 + 5 8357 + 731 8206 + 601 335 + 40 7944 3325 704 + 3330 486 8577 + 612 7870 3362", "x2": "mul sqr add add sub INT+ 4 INT- 4 mul n idiv INT+ 7 INT- 7 x_0_5 n", "tree": "(((((4 sub -4) add (n mul (7 idiv -7))) add x_0_5))**2 mul n)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 3 - 6 - 18 - 72 - 360 - 2160 - 1 5120 - 12 960 - 108 8640 - 1088 6400 - 1 1975 400 - 14 3700 4800 - 186 8106 2400 - 2615 3487 3600", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 + 0 - 10 + 3 + 1 + 0 + 1 + 3 + 0 - 5 + 1 + 0 + 0 + 0 + 1 + 0 - 3 + 0 + 0", "x2": "idiv x_0_7 INT+ 2", "tree": "(x_0_7 idiv 2)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 10 - 3 + 8 - 7 - 6 - 1 + 214 + 225 + 420 + 589 + 810 + 1065 + 4 7212 + 5 2461 + 17 8730 + 34 9825 + 65 9664 + 113 8541 + 22 2897 8110", "x2": "add mul sub mul n n INT- 8 add n INT- 5 sqr x_0_6", "tree": "((((n mul n) sub -8) mul (n add -5)) add (x_0_6)**2)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 6 + 6 + 1 - 5 - 30 - 210 - 1680 - 1 5120 - 15 1200 - 166 3200 - 1995 8400 - 2 5945 9200 - 36 3242 8800 - 544 8643 2000 - 8717 8291 2000 - 14 8203 950 4000", "x2": "mul sub relu idiv x_0_4 INT+ 7 idiv n mod x_0_1 add x_0_1 sign n x_0_1", "tree": "((relu((x_0_4 idiv 7)) sub (n idiv (x_0_1 mod (x_0_1 add sign(n))))) mul x_0_1)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 2 + 5 + 8 + 2 - 10 + 0 - 2 + 10 + 24 + 8 - 50 + 0 - 14 + 80 + 216 + 80 - 550 + 0", "x2": "mul sub n INT+ 7 x_0_6", "tree": "((n sub 7) mul x_0_6)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 4 - 6 + 10 + 0 + 11 - 4 + 7 - 3 + 13 + 3 + 14 - 1 + 10 + 0 + 16 + 6", "x2": "sub relu n x_0_3", "tree": "(relu(n) sub x_0_3)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 6 - 8 + 1 + 20 + 25 + 30 + 25 + 30 + 30 + 40 + 40 + 45 + 45 + 50 + 55 + 60", "x2": "abs mul INT- 5 sub n idiv relu x_0_3 idiv INT+ 1 0 sign n", "tree": "abs((-5 mul (n sub (relu(x_0_3) idiv (10 idiv sign(n))))))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 8 + 10 - 1 + 160 - 8 + 2730 - 145 + 5 2030 - 2908 + 109 5360 - 6 4121 + 2524 5310 - 154 1812 + 6 3222 8110 - 4015 1233 + 170 9540 4280", "x2": "add mul add add INT+ 3 INT+ 7 n x_0_2 x_0_4", "tree": "((((3 add 7) add n) mul x_0_2) add x_0_4)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 2 + 1 + 2 + 5 + 1 + 8 + 8 + 1 + 5 + 2 + 1 + 2", "x2": "mod add add mul INT- 6 n mod INT- 4 sqr n mul INT+ 1 0 relu INT+ 5 INT+ 9", "tree": "((((-6 mul n) add (-4 mod (n)**2)) add (10 mul relu(5))) mod 9)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 78 + 100 + 120 + 138 + 154 + 168 + 180 + 190 + 198 + 204 + 208 + 210 + 210", "x2": "mul n sub mod sign n sub INT- 2 n mul mod sign x_0_2 INT- 4 INT+ 1 0", "tree": "(n mul ((sign(n) mod (-2 sub n)) sub ((sign(x_0_2) mod -4) mul 10)))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 0 - 7 - 2 + 0 - 7 + 1 + 169 + 64 + 81 + 0 + 9 + 64 + 256 + 81 + 16 + 121 + 144 + 529 + 324", "x2": "sqr mod add idiv x_0_7 sub INT+ 2 INT+ 1 INT- 1 0 add n mod x_0_4 n", "tree": "((((x_0_7 idiv (2 sub 1)) add -10) mod (n add (x_0_4 mod n))))**2", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "7"}
{"x1": "- 1 - 3 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2", "x2": "mod add sign relu abs INT+ 1 0 sign mul INT- 3 x_0_2 n", "tree": "((sign(relu(abs(10))) add sign((-3 mul x_0_2))) mod n)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 10 - 3 - 3 - 1 - 3 + 4 - 5 - 17 + 23 + 43 - 80 - 151 + 331 + 83 - 791 - 566 + 2563 + 2991", "x2": "sub mod mul INT+ 2 sqr x_0_3 mul x_0_2 INT- 7 abs add INT+ 1 0 x_0_5", "tree": "(((2 mul (x_0_3)**2) mod (x_0_2 mul -7)) sub abs((10 add x_0_5)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 8 + 6 + 192 + 192 + 7680 + 9216 + 43 80 + 58 9824 + 3096 5760 + 4718 5920 + 27 2498 6880 + 45 2984 8320 + 2833 9863 5520 + 5073 4301 1840 + 34 78 3626 2400", "x2": "mul abs n mul abs x_0_2 INT+ 8", "tree": "(abs(n) mul (abs(x_0_2) mul 8))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 4 - 1 + 4 + 13 + 11 + 5 + 10 + 19 + 17 + 11 + 16 + 25 + 23 + 17 + 22 + 31", "x2": "sub add sign add n x_0_3 abs n sub x_0_2 add n mod idiv INT- 3 sqr x_0_1 n", "tree": "((sign((n add x_0_3)) add abs(n)) sub (x_0_2 sub (n add ((-3 idiv (x_0_1)**2) mod n))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 5 + 4 + 5 + 3 + 5 - 7 - 8 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign mul x_0_7 x_0_3", "tree": "sign((x_0_7 mul x_0_3))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "+ 9 + 6 - 7 - 6 - 5 + 10 - 3 - 8 + 6480 + 1940 + 859 8337 + 336 2760 + 188 9058 1606 + 91 9185 1060 + 63 7556 9982 5295 + 37 5793 8436 5184 + 31 3231 7201 9908 4415 + 21 8942 6298 7386 5784 + 21 4845 6242 7515 4379 3002 + 17 5052 947 7936 5429 6800 + 19 8968 5256 8076 2931 5283 9748", "x2": "mul sub mul add mul INT- 2 x_0_5 x_0_2 sqr n x_0_8 relu n", "tree": "(((((-2 mul x_0_5) add x_0_2) mul (n)**2) sub x_0_8) mul relu(n))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "- 5 + 2 - 6 - 1 + 3 + 2 + 5 + 3 - 6 + 5 - 4 + 4 + 6 - 4 + 10 - 1 - 2 + 11 - 8 + 14 + 5", "x2": "add x_0_5 x_0_8", "tree": "(x_0_5 add x_0_8)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 6 + 1 - 10 + 8 + 2 + 49 + 169 + 196 + 100 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "sqr sub n mul idiv idiv x_0_6 INT- 4 add x_0_4 mul n add x_0_3 relu n INT+ 5", "tree": "((n sub (((x_0_6 idiv -4) idiv (x_0_4 add (n mul (x_0_3 add relu(n))))) mul 5)))**2", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 4 + 10 + 7 - 4 + 10 + 7 - 4 + 10 + 7 - 4 + 10 + 7 - 4 + 10 + 7 - 4", "x2": "sub x_0_3 mod sub sqr n sign mod relu INT- 5 sign x_0_2 INT- 1", "tree": "(x_0_3 sub (((n)**2 sub sign((relu(-5) mod sign(x_0_2)))) mod -1))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 4 - 3 + 0 - 8 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0", "x2": "idiv x_0_6 abs sub add n INT+ 1 add sub INT+ 1 0 n INT- 9", "tree": "(x_0_6 idiv abs(((n add 1) sub ((10 sub n) add -9))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 - 3 - 3 + 9 + 3 - 1 + 7 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign x_0_7", "tree": "sign(x_0_7)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "- 3 + 10 + 6 - 1 - 4 + 5 - 7 + 7 + 2 + 17 + 8 + 29 + 14 + 41 + 12 + 49 + 0 + 53", "x2": "sub add x_0_2 add sub n relu x_0_5 n n", "tree": "((x_0_2 add ((n sub relu(x_0_5)) add n)) sub n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 10 - 3 + 9 + 0 + 9 + 3 + 1 + 10 - 1 - 1 + 0 + 0 + 0 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0", "x2": "idiv x_0_8 add mod sub n mod sign mod INT- 5 n n mul sqr n n n", "tree": "(x_0_8 idiv (((n sub (sign((-5 mod n)) mod n)) mod ((n)**2 mul n)) add n))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156", "x2": "abs sub sqr n abs relu n", "tree": "abs(((n)**2 sub abs(relu(n))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 6 - 15 + 64 - 315 + 1896 - 1 3265 + 10 6128 - 95 5143 + 955 1440 - 1 506 5829 + 12 6078 9960 - 163 9026 9467 + 2294 6377 2552", "x2": "mul sub sign n x_0_1 n", "tree": "((sign(n) sub x_0_1) mul n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 5 + 1 + 7 + 7 + 3 + 9 + 9 + 5 + 11 + 11 + 7 + 13 + 13 + 9 + 15", "x2": "add x_0_3 INT+ 2", "tree": "(x_0_3 add 2)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 - 5 + 4 - 4 + 0 + 4 + 1 + 1 + 5 + 1 + 4 + 4 + 0 + 4 + 1 + 1 + 5", "x2": "mod add sign INT+ 1 sub INT+ 4 x_0_4 n", "tree": "((sign(1) add (4 sub x_0_4)) mod n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 6 - 8 - 11 - 15 - 20 - 26 - 33 - 41 - 50 - 60 - 71 - 83 - 96 - 110", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 8 + 9 - 5 + 10 + 4 - 1 - 3 - 1 - 3 - 3 - 3 - 1 - 3 - 1 - 1 - 1 - 3 - 1", "x2": "mod sign mod INT+ 4 x_0_5 INT- 4", "tree": "(sign((4 mod x_0_5)) mod -4)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 4 + 8 - 10 - 1 - 2 + 0 + 6 + 1 - 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign mul sign x_0_4 x_0_7", "tree": "sign((sign(x_0_4) mul x_0_7))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 9 - 7 - 10 - 1 + 10 + 4 + 4 + 0 + 7 + 6 + 10 + 8 + 6 + 4 + 1 + 0 + 15", "x2": "mod mul n idiv sub x_0_4 add x_0_2 n n sqr INT+ 4", "tree": "((n mul ((x_0_4 sub (x_0_2 add n)) idiv n)) mod (4)**2)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 + 4 - 9 - 4 - 2 - 9 + 8 + 3 + 3 + 5 + 7 + 1 + 4 + 9 + 4 + 2 + 9 + 8 + 3 + 3 + 5 + 7 + 1 + 4", "x2": "abs x_0_11", "tree": "abs(x_0_11)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "11"}
{"x1": "+ 8 + 8 - 2 + 10 - 3 - 6 - 3 + 4 + 12 + 2 - 7 + 3 + 2 + 10 + 2 - 6 + 6 + 3 + 7 + 4 - 4", "x2": "sub add mod sqr n x_0_8 x_0_5 idiv x_0_8 INT- 8", "tree": "((((n)**2 mod x_0_8) add x_0_5) sub (x_0_8 idiv -8))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "+ 1 - 7 - 10 - 31 - 12 - 31 - 14 - 23 - 16 - 7 - 18 - 79 - 20 - 63", "x2": "sub mul sub relu x_0_1 mod x_0_1 INT+ 8 n INT+ 7", "tree": "(((relu(x_0_1) sub (x_0_1 mod 8)) mul n) sub 7)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 40 + 160 + 640 + 2560 + 1 240 + 4 960 + 16 3840 + 65 5360 + 262 1440 + 1048 5760 + 4194 3040 + 1 6777 2160 + 6 7108 8640", "x2": "mul abs abs INT+ 4 x_0_1", "tree": "(abs(abs(4)) mul x_0_1)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 6 - 2 - 1 + 7 - 4 - 9 - 2 - 6 - 8 - 8 - 14 - 16 - 22 - 30 - 38 - 52 - 68 - 90 - 120 - 158 - 210 - 278", "x2": "add add x_0_3 mul add add sub mul x_0_3 idiv x_0_7 INT- 8 x_0_9 x_0_1 n idiv n sqr n x_0_2", "tree": "((x_0_3 add (((((x_0_3 mul (x_0_7 idiv -8)) sub x_0_9) add x_0_1) add n) mul (n idiv (n)**2))) add x_0_2)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 0 + 0 + 0 - 4 - 12 - 24 - 40 - 60 - 84 - 112 - 144 - 180", "x2": "mul mod add n INT- 4 n add INT+ 6 mul INT- 2 abs n", "tree": "(((n add -4) mod n) mul (6 add (-2 mul abs(n))))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 3 + 0 - 4 + 5 + 13 - 6 - 18 + 11 + 26 - 11 - 26 + 13 + 26 - 10", "x2": "idiv mul add idiv INT+ 3 INT- 1 INT- 1 0 add x_0_2 INT- 2 n", "tree": "((((3 idiv -1) add -10) mul (x_0_2 add -2)) idiv n)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 9 + 16 + 22 + 30 + 37 + 46 + 54 + 64 + 73 + 84 + 94 + 106 + 117 + 130", "x2": "add add INT+ 9 n x_0_2", "tree": "((9 add n) add x_0_2)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 + 48 + 47 + 1 + 2 + 48 + 47 + 1 + 2 + 48 + 47 + 1 + 2 + 48", "x2": "abs sub sqr INT- 7 x_0_2", "tree": "abs(((-7)**2 sub x_0_2))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 7 - 6 + 2 + 9 + 0 + 8 + 0 + 2 + 11 + 19 + 11 + 20 + 13 + 16 + 26 + 35 + 28 + 38 + 32", "x2": "add sqr mod mul mul n INT+ 1 0 n sub INT+ 6 INT- 4 add x_0_6 n", "tree": "(((((n mul 10) mul n) mod (6 sub -4)))**2 add (x_0_6 add n))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 9 + 4 + 0 + 2 + 10 - 1 - 7 - 7 + 5 + 9 + 4 + 0 + 2 + 10 - 1 - 7 - 7 + 5 + 9 + 4 + 0", "x2": "add mod relu x_0_8 sign sub x_0_9 mul x_0_1 n x_0_9", "tree": "((relu(x_0_8) mod sign((x_0_9 sub (x_0_1 mul n)))) add x_0_9)", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "+ 5 + 3 + 3 - 4 + 2 + 7 - 7 - 2 + 10 + 2402 + 2402 + 1297 + 2402 + 6562 + 1297 + 6562 + 6562 + 6562 + 1297 + 6562 + 4097 + 6562", "x2": "sub sqr sqr add mod sub x_0_4 x_0_9 sqr add INT- 7 mod INT+ 9 n INT- 9 sign INT- 4", "tree": "((((((x_0_4 sub x_0_9) mod ((-7 add (9 mod n)))**2) add -9))**2)**2 sub sign(-4))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "9"}
{"x1": "- 10 - 5 - 7 + 7 - 1 + 4 - 59 - 18 - 66 + 26 + 26 + 25 - 397 - 430 - 447 + 26", "x2": "mod abs sub sqr add abs INT+ 9 INT- 4 idiv n x_0_2 sub INT+ 7 mul n add INT+ 7 x_0_3", "tree": "(abs((((abs(9) add -4))**2 sub (n idiv x_0_2))) mod (7 sub (n mul (7 add x_0_3))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 1 + 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143", "x2": "mul mul sign n add INT- 2 n n", "tree": "((sign(n) mul (-2 add n)) mul n)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 3 - 7 - 4 - 5 - 10 + 9 + 0 + 16 + 25 + 0 + 81 + 0 + 48 + 275 + 0 + 81 + 0 + 576", "x2": "mul mod x_0_5 mul n sign x_0_4 x_0_5", "tree": "((x_0_5 mod (n mul sign(x_0_4))) mul x_0_5)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 6 - 5 + 21 + 31 + 66 + 85 + 129 + 157 + 210 + 247 + 309 + 355 + 426 + 481 + 561", "x2": "abs sub x_0_2 mul n INT- 9", "tree": "abs((x_0_2 sub (n mul -9)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 3 + 5 + 4 + 5 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 5 - 10 - 1 + 2 - 6 + 13 + 3 + 20 + 13 + 12 + 22 + 5 + 17 + 2 + 3 + 6 - 2 + 17", "x2": "mul sign mul sqr n INT- 8 sub sub x_0_6 n mod n INT+ 8", "tree": "(sign(((n)**2 mul -8)) mul ((x_0_6 sub n) sub (n mod 8)))", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 7 + 10 - 7 + 2 - 5 + 3 + 10 + 4 2420 + 8 9984 + 20 5193 + 13 9860 + 5 7105 + 14 1360 + 11 5584 + 48 233 + 324 3237 1613 7762 6153 + 6561 5832 5022 1656 513 + 17 7341 7593 1291 6352 1280 + 3 8284 4573 2943 1676 5225 + 1064 9648 3586 7049 388", "x2": "sub sqr add add n sign n sqr add abs x_0_8 n sqr INT- 4", "tree": "((((n add sign(n)) add ((abs(x_0_8) add n))**2))**2 sub (-4)**2)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 8 - 2 + 5 + 8 + 2 + 5 + 8 + 2 + 5 + 8 + 2 + 5 + 8 + 2 + 5 + 8", "x2": "relu abs sub x_0_3 sqr idiv relu INT- 1 sign sqr x_0_2", "tree": "relu(abs((x_0_3 sub ((relu(-1) idiv sign((x_0_2)**2)))**2)))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 1 - 6 + 3 + 2 + 0 - 30 + 28 + 24 + 9 - 290 + 319 + 300 + 130 - 4046 + 4800 + 4816 + 2227", "x2": "mul n add x_0_4 sign abs mul sub relu n add x_0_1 add n relu INT- 3 INT+ 2", "tree": "(n mul (x_0_4 add sign(abs(((relu(n) sub (x_0_1 add (n add relu(-3)))) mul 2)))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 4 - 5 - 2 + 6 - 6 - 7 - 3 - 6 - 16 - 14 - 7 - 20 - 22 - 19 - 23 - 34 - 33 - 27", "x2": "sub sub x_0_7 idiv INT+ 8 add sign x_0_3 mod x_0_2 mul INT- 2 mul INT+ 7 INT- 1 0 n", "tree": "((x_0_7 sub (8 idiv (sign(x_0_3) add (x_0_2 mod (-2 mul (7 mul -10)))))) sub n)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "+ 6 - 10 + 4 - 2 + 15 + 2 + 9 - 7 + 7 + 1 + 18 + 5 + 12 - 4 + 10 + 4", "x2": "idiv sub n add x_0_3 mod INT- 2 sign sub INT+ 9 relu n mod INT+ 1 INT+ 6", "tree": "((n sub (x_0_3 add (-2 mod sign((9 sub relu(n)))))) idiv (1 mod 6))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 7 - 5 - 7 + 54 + 75 - 534 - 743 + 5348 + 7439 - 5 3470 - 7 4379 + 53 4712 + 74 3803 - 534 7106 - 743 8015 + 5347 1076", "x2": "add mul x_0_2 INT- 1 0 sub n relu mod mod sqr n abs idiv INT+ 8 x_0_3 sign x_0_1", "tree": "((x_0_2 mul -10) add (n sub relu((((n)**2 mod abs((8 idiv x_0_3))) mod sign(x_0_1)))))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 7 + 12 + 23 + 31 + 45 + 61 + 79 + 90 + 111 + 134 + 159 + 186", "x2": "add mod INT- 9 n add sqr n n", "tree": "((-9 mod n) add ((n)**2 add n))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 3 - 6 - 6 - 13 - 10 - 22 - 22 - 23 - 25 - 24 - 25 - 25 - 26 - 28 - 28 - 30", "x2": "add sub idiv abs x_0_2 idiv x_0_4 idiv n idiv n INT+ 2 n INT- 1 0", "tree": "(((abs(x_0_2) idiv (x_0_4 idiv (n idiv (n idiv 2)))) sub n) add -10)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 2 + 0 - 9 + 7 - 1 + 8 + 16 + 10 + 3 + 3 - 13 - 14 + 0 + 8 + 25 + 43 + 31 + 10", "x2": "sub sub n x_0_4 x_0_5", "tree": "((n sub x_0_4) sub x_0_5)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 8 + 9 + 0 - 7 + 69 + 87 + 7 + 57 + 4770 + 7579 + 60 + 3261 + 2275 2913 + 5744 1255 + 3615 + 1063 4137 + 517 6950 4998 5586", "x2": "add sqr x_0_4 n", "tree": "((x_0_4)**2 add n)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 9 + 0 + 10 + 4 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1", "x2": "sign idiv x_0_3 idiv INT- 1 x_0_4", "tree": "sign((x_0_3 idiv (-1 idiv x_0_4)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 10 + 8 - 4 - 2 + 2 - 2 + 7 + 2 + 0 + 8 + 0 + 0 + 2 + 0 + 7 + 2 + 0 + 8 + 0 + 0", "x2": "relu relu x_0_8", "tree": "relu(relu(x_0_8))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 4 - 10 + 8 + 6 + 2 - 3 + 9 - 4 + 6 - 1 + 1 + 3 - 3 - 2 - 1 + 1 - 3 + 1 - 2 + 0 - 1 - 1", "x2": "idiv x_0_10 mod INT- 3 INT- 5", "tree": "(x_0_10 idiv (-3 mod -5))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 2 - 6 + 18 + 14 + 5 + 28 + 23 + 13 + 35 + 29 + 18 + 39 + 32 + 20 + 40", "x2": "sub add INT+ 9 x_0_3 add INT- 8 n", "tree": "((9 add x_0_3) sub (-8 add n))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 10 + 6 - 2 + 3 - 2 - 6 + 7 + 13 + 25 + 33 + 38 + 57 + 83 + 122 + 170 + 224 + 298 + 399", "x2": "add x_0_5 add n x_0_1", "tree": "(x_0_5 add (n add x_0_1))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 2 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8", "x2": "relu sub relu n x_0_1", "tree": "relu((relu(n) sub x_0_1))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 10 + 5 + 2 + 6 + 12 + 22 + 31 + 38 + 45 + 49 + 64 + 77 + 81 + 99 + 103 + 122", "x2": "add x_0_1 add INT+ 4 mod idiv mul x_0_4 idiv mul INT- 6 x_0_4 sign x_0_1 n relu n", "tree": "(x_0_1 add (4 add (((x_0_4 mul ((-6 mul x_0_4) idiv sign(x_0_1))) idiv n) mod relu(n))))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 6 - 6 + 5 + 8 - 7 - 6 - 13 - 13 - 2 + 1 - 14 - 13 - 20 - 20 - 9 - 6 - 21 - 20 - 27", "x2": "add INT- 8 add sub INT+ 1 sub n n x_0_6", "tree": "(-8 add ((1 sub (n sub n)) add x_0_6))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 8 + 2 - 7 + 0 - 11 - 3 - 11 - 1 - 10 - 3 - 14 - 6 - 14 - 4 - 13", "x2": "sub sub sub INT+ 6 n abs INT+ 9 x_0_3", "tree": "(((6 sub n) sub abs(9)) sub x_0_3)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 7 - 5 - 3 + 2 - 5 + 6 + 9 + 3 + 10 - 4 + 4 + 196 + 100 + 36 + 16 + 100 + 144 + 324 + 36 + 400 + 64 + 64 + 15 3664", "x2": "sqr mul x_0_11 INT+ 2", "tree": "((x_0_11 mul 2))**2", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 1 + 10 + 12 + 23 + 25 + 37 + 40 + 54 + 58 + 73 + 77 + 93 + 98 + 116 + 122", "x2": "sub add INT+ 9 relu x_0_2 sub mod x_0_1 abs INT+ 2 n", "tree": "((9 add relu(x_0_2)) sub ((x_0_1 mod abs(2)) sub n))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 10 - 7 - 7 - 4 + 770 + 798 + 882 - 4592 - 5 3424 - 6 1320 - 3 4958 + 76 536 + 529 1741 + 625 5046 - 165 2070 - 1 2222 1008 - 6 7350 1206", "x2": "mul n mul INT+ 7 sub sub INT+ 1 0 x_0_4 idiv x_0_3 n", "tree": "(n mul (7 mul ((10 sub x_0_4) sub (x_0_3 idiv n))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13 + 8 + 14", "x2": "sub n sub x_0_1 INT+ 8", "tree": "(n sub (x_0_1 sub 8))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 + 7 + 4 - 9 + 2 + 12 + 0 + 32 + 0 + 20 + 11 + 0 + 78 + 0 + 75 + 176 + 0 + 108", "x2": "mul mod add x_0_5 n n n", "tree": "(((x_0_5 add n) mod n) mul n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 4 - 1 - 8 + 5 + 4 + 0 + 4 + 0 + 24 + 24 + 15 + 32 + 21 + 180 + 190 + 120 + 300", "x2": "idiv sub INT- 2 sqr abs sub sign relu sqr x_0_2 add n x_0_5 INT- 8", "tree": "((-2 sub (abs((sign(relu((x_0_2)**2)) sub (n add x_0_5))))**2) idiv -8)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100", "x2": "sqr mod mod INT- 3 n n", "tree": "(((-3 mod n) mod n))**2", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 9 + 8 + 11 + 1 + 1 + 1 + 19 + 21 + 23 + 1 + 1 + 1 + 31 + 33 + 35", "x2": "idiv add add n add n INT+ 1 0 add relu sign x_0_3 INT- 8 x_0_3", "tree": "(((n add (n add 10)) add (relu(sign(x_0_3)) add -8)) idiv x_0_3)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 - 3 + 5 - 8 + 3 + 8 - 8 - 3 + 5 - 8 + 3 + 8 - 8 - 3 + 5 - 8 + 3 + 8 - 8", "x2": "sub n sub n x_0_6", "tree": "(n sub (n sub x_0_6))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 4 + 6 + 5 + 3 + 13 + 12 + 10 + 20 + 19 + 17 + 27 + 26 + 24 + 34 + 33 + 31", "x2": "sub add sub sub x_0_3 idiv n add mul n n relu relu INT- 4 INT- 7 INT+ 7 INT+ 7", "tree": "((((x_0_3 sub (n idiv ((n mul n) add relu(relu(-4))))) sub -7) add 7) sub 7)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 2 + 10 + 4 + 9 + 7 - 2 - 7 - 6 + 4 - 11 - 13 - 19 - 18 - 6 - 6 - 8 - 19 - 5 - 4 + 1 - 1", "x2": "sub add relu INT+ 2 sub relu x_0_5 n x_0_8", "tree": "((relu(2) add (relu(x_0_5) sub n)) sub x_0_8)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "8"}
{"x1": "- 2 - 2 - 5 - 4 - 9 - 4 - 16 - 7 - 17 - 10 - 13 - 14 - 16 - 18", "x2": "idiv mul n sub sub n abs idiv n relu n mod INT+ 9 idiv mul x_0_1 x_0_1 x_0_1 x_0_1", "tree": "((n mul ((n sub abs((n idiv relu(n)))) sub (9 mod ((x_0_1 mul x_0_1) idiv x_0_1)))) idiv x_0_1)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 7 - 10 - 9 - 9 - 8 + 4 + 2395 + 4893 + 3961 + 3961 + 3127 + 774 + 2 8106 5214 + 11 7313 989 + 7 6878 6517 + 7 6878 6516 + 4 7912 8307 + 2935 4709 + 387 885 715 2242 3988", "x2": "add mod idiv n relu INT+ 5 sub INT- 1 n add INT+ 1 sqr mul x_0_6 INT- 7", "tree": "(((n idiv relu(5)) mod (-1 sub n)) add (1 add ((x_0_6 mul -7))**2))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 7 - 2 + 10 - 4 + 13 + 11 + 14 + 29 + 30 + 48 + 64 + 83 + 117 + 152 + 205 + 274 + 362", "x2": "sub x_0_1 sub add x_0_4 relu mod x_0_1 abs idiv n sqr x_0_2 x_0_2", "tree": "(x_0_1 sub ((x_0_4 add relu((x_0_1 mod abs((n idiv (x_0_2)**2))))) sub x_0_2))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 1 + 0 - 1 + 0 - 7 + 1 + 1 + 2 + 3 + 3 + 3 + 4 + 5 + 5", "x2": "sub mod relu add n INT- 6 relu sub mul INT+ 3 mod INT- 6 mul n INT+ 8 n mod x_0_2 INT+ 8", "tree": "((relu((n add -6)) mod relu(((3 mul (-6 mod (n mul 8))) sub n))) sub (x_0_2 mod 8))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 4 + 0 + 1 + 2 + 4 + 2 + 3 + 2 + 6 + 4 + 0 + 4 + 5 + 12", "x2": "mod sub mul x_0_1 INT+ 1 0 INT- 4 n", "tree": "(((x_0_1 mul 10) sub -4) mod n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 + 2 + 10 + 5 - 3 + 2 + 10 + 5 - 3 + 2 + 10 + 5 - 3 + 2 + 10", "x2": "sub INT+ 1 sub x_0_2 abs INT+ 6", "tree": "(1 sub (x_0_2 sub abs(6)))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 1 + 1 - 5 - 2 - 4 + 4 - 1 + 9 + 10 + 11 + 36 + 78 + 56 + 60 + 112 + 17 + 36 + 57 + 80 + 126", "x2": "mul mod x_0_8 abs INT- 8 n", "tree": "((x_0_8 mod abs(-8)) mul n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "8"}
{"x1": "- 6 + 5 + 4 + 1 + 1 + 5 + 7 + 7 + 6 + 3 + 6 + 13 + 19 + 3 - 2 + 13 + 31", "x2": "sub n add mod add x_0_4 INT- 5 mul sign INT- 3 x_0_1 x_0_2", "tree": "(n sub (((x_0_4 add -5) mod (sign(-3) mul x_0_1)) add x_0_2))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 3 + 6 - 10 - 4 - 5 - 2 - 26 - 13 - 45 - 13 - 38 - 26 - 59 - 28 - 54 - 43 - 77 - 47 - 74", "x2": "add mul abs n idiv mul INT+ 4 idiv n n add sign x_0_7 x_0_3 x_0_4", "tree": "((abs(n) mul ((4 mul (n idiv n)) idiv (sign(x_0_7) add x_0_3))) add x_0_4)", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "7"}
{"x1": "- 5 + 45 - 405 + 3645 - 3 2805 + 29 5245 - 265 7205 + 2391 4845 - 2 1523 3605 + 19 3710 2445 - 193 7102 4450 + 1937 1024 4500 - 1 9371 244 5000 + 19 3710 2445 0", "x2": "mul sub add INT- 9 sign sign n abs idiv n INT- 1 0 x_0_1", "tree": "(((-9 add sign(sign(n))) sub abs((n idiv -10))) mul x_0_1)", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 4 + 6 + 2 + 6 - 4 - 9 + 6 - 9 + 10 - 49 - 8 - 47 + 14 + 16 - 44 + 17 - 82 + 19 + 23 + 21 - 114 - 99", "x2": "mod add relu add idiv mul x_0_10 x_0_8 add INT- 1 0 INT- 9 sign INT- 5 n mul INT- 1 0 x_0_8", "tree": "((relu((((x_0_10 mul x_0_8) idiv (-10 add -9)) add sign(-5))) add n) mod (-10 mul x_0_8))", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 3 + 7 + 0 + 4 + 5 + 6 + 0 + 8 + 0 + 10 + 0 + 12 + 0 + 14 + 0 + 16", "x2": "add n sub n add mod n mul add n relu idiv abs x_0_1 x_0_3 sign x_0_2 n", "tree": "(n add (n sub ((n mod ((n add relu((abs(x_0_1) idiv x_0_3))) mul sign(x_0_2))) add n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 + 10 - 4 - 1 + 6 + 5 - 8 - 2 + 0 - 6 + 16 + 100 + 16 + 1 + 36 + 25 + 64 + 4 + 0 + 36 + 256 + 1 0 + 256", "x2": "sqr x_0_10", "tree": "(x_0_10)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 5 + 2 - 3 + 7 + 4 + 9 + 8 - 5 + 8 + 20 + 8 - 12 + 28 + 16 + 36 + 32 - 20 + 32 + 80 + 32 - 48 + 112", "x2": "mul x_0_9 add sign INT+ 6 abs INT+ 3", "tree": "(x_0_9 mul (sign(6) add abs(3)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "9"}
{"x1": "+ 7 - 3 + 3 + 7 - 2 - 9 - 4 - 1 + 3 - 1 + 7 + 5 - 1 + 4 + 12 + 0 + 8 + 2 + 16 + 10 + 0", "x2": "add sign x_0_8 mod sub sub idiv n INT- 4 INT+ 6 x_0_4 n", "tree": "(sign(x_0_8) add ((((n idiv -4) sub 6) sub x_0_4) mod n))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "8"}
{"x1": "+ 3 - 2 + 10 + 8 + 6 - 3 + 8 + 4 - 7 + 2 + 8 + 0 + 0 + 2 + 10 + 0 + 2 + 4 + 0 + 0 + 6 + 6", "x2": "mod add x_0_6 relu add n INT+ 2 sub INT+ 9 x_0_9", "tree": "((x_0_6 add relu((n add 2))) mod (9 sub x_0_9))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "9"}
{"x1": "+ 0 + 0 - 1 - 9 - 26 - 54 - 95 - 151 - 224 - 316 - 429 - 565 - 726 - 914", "x2": "sub x_0_1 mod INT- 8 sqr relu add relu x_0_1 n", "tree": "(x_0_1 sub (-8 mod (relu((relu(x_0_1) add n)))**2))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 6 - 3 - 8 - 6 + 9 - 9 + 2 - 9 - 3 + 3 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0", "x2": "abs idiv x_0_10 sub sub x_0_3 INT+ 4 add n INT- 2", "tree": "abs((x_0_10 idiv ((x_0_3 sub 4) sub (n add -2))))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "10"}
{"x1": "+ 8 - 8 + 10 - 4 + 1 + 1 + 1 + 7 - 4 + 3 + 3 + 9 + 4 - 2 + 7 + 13 + 14 + 3", "x2": "add x_0_5 add sign x_0_5 x_0_4", "tree": "(x_0_5 add (sign(x_0_5) add x_0_4))", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 8 - 3 - 6 - 3 - 7 - 10 + 6 + 7 + 3 + 7 + 8 + 10 + 8 + 12 + 9 + 7 + 6 + 7 + 3 + 7 + 8 + 10", "x2": "mod x_0_10 n", "tree": "(x_0_10 mod n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 8 - 10 + 5 + 6 - 8 - 1 - 7 + 7 + 9 - 12 - 31 - 17 - 17 - 32 - 26 - 33 - 20 - 19 - 41 - 61 - 48 - 49", "x2": "add x_0_9 sub INT- 1 0 n", "tree": "(x_0_9 add (-10 sub n))", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "9"}
{"x1": "- 8 - 5 + 5 + 5 + 5 + 11 + 8 + 5 + 14 + 7 + 5 + 7 + 6 + 7 + 6", "x2": "add abs relu idiv sub sqr mod relu INT- 7 mul n INT- 9 n sub x_0_2 n INT+ 5", "tree": "(abs(relu(((((relu(-7) mod (n mul -9)))**2 sub n) idiv (x_0_2 sub n)))) add 5)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 4 + 10 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676", "x2": "sqr mul n INT+ 2", "tree": "((n mul 2))**2", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 4 - 6 - 12 - 12 + 0 - 6 - 14 - 24 - 36 + 50 + 55 + 60 + 65", "x2": "mul add INT- 4 mod INT+ 9 n n", "tree": "((-4 add (9 mod n)) mul n)", "n_input_points": "13", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 9 - 6 - 10 + 1 + 4 + 6 - 7 + 4 - 39 - 116 - 77 - 489 - 1544 - 1135 - 7410 - 2 4713 - 2 734 - 14 6795 - 47 5025 - 65 2297 - 546 5538", "x2": "sub add abs x_0_7 mul n add mul INT- 2 relu idiv n n x_0_3 sqr x_0_8", "tree": "((abs(x_0_7) add (n mul ((-2 mul relu((n idiv n))) add x_0_3))) sub (x_0_8)**2)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "8"}
{"x1": "+ 10 - 1 + 5 + 7 - 2 + 6 + 8 - 1 + 7 + 9 + 0 + 8 + 10 + 1 + 9 + 11 + 2 + 10", "x2": "sub x_0_3 idiv n sub idiv sign sub x_0_5 n sub mul abs x_0_3 INT+ 6 relu n n", "tree": "(x_0_3 sub (n idiv ((sign((x_0_5 sub n)) idiv ((abs(x_0_3) mul 6) sub relu(n))) sub n)))", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 10 - 8 - 4 + 100 - 90 - 221 - 784 + 81 - 90 - 79 - 23 + 408 - 369 - 730 - 2505 + 229", "x2": "idiv sqr mul sub sign mul mod abs INT+ 8 x_0_4 x_0_2 n abs n x_0_4", "tree": "((((sign(((abs(8) mod x_0_4) mul x_0_2)) sub n) mul abs(n)))**2 idiv x_0_4)", "n_input_points": "13", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 5 + 10 + 5 + 10 - 27 + 17 - 8 + 7 - 72 + 53 - 41 + 14 - 159 + 170 - 143 + 61 - 340", "x2": "add sub mul INT+ 2 sub x_0_4 sign n x_0_5 INT- 6", "tree": "(((2 mul (x_0_4 sub sign(n))) sub x_0_5) add -6)", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 6 + 16 + 0 + 16 + 256 + 1296 + 4096 + 1 0 + 2 736 + 3 8416 + 6 5536 + 10 4976 + 16 0 + 23 4256", "x2": "sqr sqr add x_0_1 sub abs add INT- 6 add n n x_0_1", "tree": "(((x_0_1 add (abs((-6 add (n add n))) sub x_0_1)))**2)**2", "n_input_points": "13", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 2 + 7 + 0 + 6 + 12 + 4 + 12 + 21 + 31 + 42 + 54 + 67 + 81 + 96 + 112 + 129 + 147", "x2": "add x_0_1 mod INT- 8 mul sign x_0_5 sub sub add idiv n n n INT- 3 INT- 4", "tree": "(x_0_1 add (-8 mod (sign(x_0_5) mul ((((n idiv n) add n) sub -3) sub -4))))", "n_input_points": "13", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 6 - 3 - 4 - 1 + 4 + 36 + 9 + 16 + 1 + 16 + 1296 + 81 + 256 + 1 + 256 + 167 9616 + 6561", "x2": "sqr x_0_5", "tree": "(x_0_5)**2", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 10 + 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2", "x2": "idiv add x_0_1 n INT- 9", "tree": "((x_0_1 add n) idiv -9)", "n_input_points": "13", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 + 256 + 576 + 1024 + 1600 + 2304 + 3136 + 4096 + 5184 + 6400 + 7744 + 9216 + 1 816 + 1 2544", "x2": "sqr mul INT+ 8 mod n sqr add sub idiv relu INT+ 1 0 x_0_1 INT- 5 sub n mod INT+ 2 x_0_1", "tree": "((8 mul (n mod ((((relu(10) idiv x_0_1) sub -5) add (n sub (2 mod x_0_1))))**2)))**2", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 9 + 0 - 3 + 8 - 5 + 1 + 6 - 9 + 5 + 1 + 8 + 17 + 16 + 10 + 22 - 6 + 0 + 3 + 8 + 21 + 24 + 18", "x2": "add x_0_8 sub idiv add add n n x_0_9 idiv n INT+ 8 n", "tree": "(x_0_8 add ((((n add n) add x_0_9) idiv (n idiv 8)) sub n))", "n_input_points": "13", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 1 - 3 - 6 - 10 - 15 - 21 - 28 - 36 - 45 - 55 - 66 - 78 - 91 - 105", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "13", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 3 - 10 + 3 - 5 - 10 + 8 + 3 - 5 + 7 + 16 + 1 + 9 + 37 + 18 + 19 + 60 + 51 + 38 + 88 + 108", "x2": "add abs idiv n INT+ 1 add x_0_7 x_0_3", "tree": "(abs((n idiv 1)) add (x_0_7 add x_0_3))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "7"}
{"x1": "+ 0 + 0 + 0 + 2 + 3 + 0 + 0 + 2 + 0 + 8 + 4 + 6 + 1", "x2": "mod add mod sqr idiv sqr INT+ 9 sub INT- 3 sign n n mul abs INT+ 7 INT- 9 n", "tree": "((((((9)**2 idiv (-3 sub sign(n))))**2 mod n) add (abs(7) mul -9)) mod n)", "n_input_points": "13", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 4 - 7 + 2 - 4 + 6 + 4 - 6 - 7 + 6 - 6 + 25 - 196 - 367 + 2 + 32 + 510 + 4 + 3 6450 + 174 3243 + 14 1518 - 9 3958 + 3 8785 + 6 5852", "x2": "add x_0_11 mul mul x_0_8 x_0_6 sub x_0_7 INT- 6", "tree": "(x_0_11 add ((x_0_8 mul x_0_6) mul (x_0_7 sub -6)))", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "- 2 - 6 + 4 + 36 + 49 + 0 + 9 + 0 + 36 + 0 + 225 + 0 + 9 + 0 + 144", "x2": "add sqr mod x_0_2 sub INT- 6 n relu INT- 4", "tree": "(((x_0_2 mod (-6 sub n)))**2 add relu(-4))", "n_input_points": "13", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 3 - 34 - 141 - 396 - 895 - 1758 - 3129 - 5176 - 8091 - 1 2090 - 1 7413 - 2 4324 - 3 3111", "x2": "sub n sqr add n sqr n", "tree": "(n sub ((n add (n)**2))**2)", "n_input_points": "13", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 4 - 7 + 1 + 4 - 6 - 6 - 70 + 237 - 6 - 127 - 150 - 175 - 6 - 231 - 262 - 295 - 330 - 367 - 406 - 447 - 490 - 535 - 582 - 631 - 682 - 735 - 790 - 847 - 906 - 967 - 1030 - 1095 - 1162", "x2": "add INT- 6 mul n mul idiv INT+ 3 x_0_5 n", "tree": "(-6 add (n mul ((3 idiv x_0_5) mul n)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 3 + 9 - 1 + 2 - 10 + 1 + 0 - 3 - 4 + 11 + 13 + 11 + 9 + 5 + 2 + 7 + 10 + 13 + 17 + 15 + 13 + 11 + 8 + 11 + 14 + 17 + 21 + 19 + 17 + 15 + 12 + 15 + 18 + 21 + 25 + 23 + 21 + 19", "x2": "add sub n abs x_0_4 sign x_0_10", "tree": "((n sub abs(x_0_4)) add sign(x_0_10))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 9 + 5 - 6 + 9 + 10 - 9 + 0 + 0 + 0 + 0 + 12 + 13 + 14 + 15 + 0 + 0 + 0 + 0 + 20 + 21 + 22 + 23 + 0 + 0 + 0 + 0 + 28 + 29 + 30 + 31 + 0 + 0 + 0 + 0 + 36", "x2": "idiv n abs sub mul n abs x_0_4 sign x_0_7", "tree": "(n idiv abs(((n mul abs(x_0_4)) sub sign(x_0_7))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "7"}
{"x1": "- 3 + 0 + 0 + 0 + 2 + 0 + 0 + 0 + 0 + 1 + 2 + 2 + 3 + 4 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 2 + 2 + 0 + 0 + 0 + 0 + 0 + 0 + 1", "x2": "abs idiv sqr mod mod INT- 6 n relu INT+ 9 add n sign x_0_1", "tree": "abs(((((-6 mod n) mod relu(9)))**2 idiv (n add sign(x_0_1))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 10 + 10 + 10 + 10 + 10 + 10 + 20 + 20 + 20 + 20 + 20 + 20 + 20 + 30 + 30 + 30 + 30 + 30 + 30 + 30 + 40 + 40 + 40 + 40 + 40 + 40 + 40 + 50", "x2": "mul INT- 1 0 idiv n INT- 7", "tree": "(-10 mul (n idiv -7))", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 3 + 18 + 16 - 15 - 14 + 168 + 184 - 1431 - 1750 + 1 5840 + 2 1108 - 20 5803 - 29 5386 + 308 7180 + 472 6320 - 5248 1907 - 8507 3598 + 9 9715 6404 + 17 147 2140 - 209 4028 4295 - 374 3238 6882 + 4816 2653 8992 + 8983 7728 5384 - 12 406 6347 4575 - 23 3578 941 9750 + 325 979 1381 3768 + 654 186 6375 3252 - 9427 8395 59 9011 - 1 9620 5599 1259 7290 + 29 2263 245 1856 9620", "x2": "idiv mul sub x_0_2 INT+ 9 n mod sign sub INT+ 6 n INT- 4", "tree": "(((x_0_2 sub 9) mul n) idiv (sign((6 sub n)) mod -4))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 7 + 7 - 3 + 12 + 3 + 19 + 11 + 28 + 21 + 39 + 33 + 52 + 47 + 67 + 63 + 84 + 81 + 103 + 101 + 124 + 123 + 147 + 147 + 172 + 173 + 199 + 201 + 228 + 231 + 259", "x2": "add x_0_2 n", "tree": "(x_0_2 add n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 7 - 2 - 2 - 7 - 9 - 6 + 7 + 9 - 2 - 2 + 352 + 414 - 7 - 4 + 328 + 361 + 5 + 2 + 1105 + 1251 + 1309 + 1444 + 808 + 836 + 569 + 584 + 2482 + 2765 + 3261 + 3558 + 1207 + 1141 + 573 + 3958 + 4948 + 5510 + 6793 + 3930 + 5381", "x2": "sub x_0_8 mod x_0_4 sub INT+ 3 add mul n mul INT+ 3 n relu sign abs x_0_10", "tree": "(x_0_8 sub (x_0_4 mod (3 sub ((n mul (3 mul n)) add relu(sign(abs(x_0_10)))))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "+ 1 + 0 + 1 - 6 + 6 + 4 + 6 - 8 + 16 + 12 + 16 - 12 + 36 + 28 + 36 - 20 + 76 + 60 + 76 - 36 + 156 + 124 + 156 - 68 + 316 + 252 + 316 - 132 + 636 + 508 + 636 - 260 + 1276", "x2": "mul INT+ 2 sub add mod abs x_0_3 sign relu n sub x_0_4 idiv INT- 1 INT- 6 INT- 2", "tree": "(2 mul (((abs(x_0_3) mod sign(relu(n))) add (x_0_4 sub (-1 idiv -6))) sub -2))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 9 + 3 + 4 - 5760 + 0 - 1 752 - 2 160 + 0 - 7920 + 0 + 0 - 1 7472 + 0 - 2 6880 - 3 2640 + 0 - 4 6512 + 0 + 0 - 7 3920 + 0 - 9 7152 - 11 400 + 0 - 14 400 + 0 + 0 - 19 4880 + 0 - 23 8080 - 26 1888 + 0", "x2": "mul relu mul add mul x_0_4 n n add sqr n mod sign INT- 2 INT- 8 INT- 8", "tree": "(relu((((x_0_4 mul n) add n) mul ((n)**2 add (sign(-2) mod -8)))) mul -8)", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 5 + 1 + 2 + 3 + 2 + 7 + 4 + 5 + 9 + 9 + 6 + 7 + 11 + 11 + 8 + 9 + 13 + 13 + 10 + 11 + 15 + 15 + 12 + 13 + 17 + 17 + 14 + 15 + 19 + 19", "x2": "sub n mod mul INT- 6 sqr INT+ 1 abs add x_0_2 INT+ 3", "tree": "(n sub ((-6 mul (1)**2) mod abs((x_0_2 add 3))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 7 - 2 - 8 - 7 + 4 - 8 - 4 + 29 + 35 + 23 + 22 + 21 + 34 + 32 + 31 + 71 + 87 + 76 + 72 + 63 + 86 + 89 + 87 + 129 + 159 + 146 + 136 + 129 + 167 + 166 + 170 + 195 + 230 + 231 + 232 + 211", "x2": "add n add mod sub sqr x_0_4 sign x_0_5 add n INT- 1 add n x_0_8", "tree": "(n add ((((x_0_4)**2 sub sign(x_0_5)) mod (n add -1)) add (n add x_0_8)))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441 + 61 4656 + 70 7281", "x2": "sqr mul n n", "tree": "((n mul n))**2", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 4 - 10 + 2 - 9 + 2 - 10 + 2 - 23 - 46 - 47 - 87 - 127 - 147 - 208 - 271 - 316 - 404 - 496 - 572 - 693 - 820 - 933 - 1093 - 1261 - 1417 - 1622 - 1837 - 2042 - 2298 - 2566 - 2826 - 3139 - 3466 - 3787 - 4163 - 4555", "x2": "sub x_0_3 sqr sub sub INT+ 4 n mod mul sub INT+ 1 0 INT+ 7 n sign x_0_8", "tree": "(x_0_3 sub (((4 sub n) sub (((10 sub 7) mul n) mod sign(x_0_8))))**2)", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "8"}
{"x1": "+ 0 + 1 + 2 + 3 + 4 + 5 + 6 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 24", "x2": "add idiv n INT- 7 abs n", "tree": "((n idiv -7) add abs(n))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 1 + 3 + 1 - 1 + 0 - 4 + 1 - 1 + 0 - 5 + 0 - 1 + 0 - 5 + 0 - 1 + 0 - 5 + 0 - 1 + 0 - 5 + 0 - 1 + 0 - 5 + 0 - 1 + 0 - 5", "x2": "sub idiv INT+ 1 0 n mod x_0_2 INT+ 6", "tree": "((10 idiv n) sub (x_0_2 mod 6))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683 + 2 1952 + 2 4389", "x2": "mul n sqr n", "tree": "(n mul (n)**2)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 2 + 4 + 30 + 36 + 0 - 58 - 34 + 98 + 132 - 26 - 290 - 198 + 356 + 528 - 120 - 1202 - 896 + 1362 + 2138 - 428 - 4824 - 3808 + 5292 + 8672 - 1446 - 1 9218 - 1 5858 + 2 704 + 3 5116 - 4808 - 7 6486", "x2": "sub sqr INT- 6 add x_0_2 add add x_0_3 add relu x_0_3 INT+ 3 add sub sign x_0_2 INT+ 9 INT+ 3", "tree": "((-6)**2 sub (x_0_2 add ((x_0_3 add (relu(x_0_3) add 3)) add ((sign(x_0_2) sub 9) add 3))))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 6 + 1 - 2 + 10 + 4 - 1 - 1 + 3 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1", "x2": "idiv sub idiv x_0_6 n INT+ 3 x_0_2", "tree": "(((x_0_6 idiv n) sub 3) idiv x_0_2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 5 - 11 - 34 - 137 - 686 - 4117 - 2 8820 - 23 561 - 207 5050 - 2075 501 - 2 2825 5512 - 27 3906 6145 - 356 785 9886 - 4985 1003 8405 - 7 4776 5057 6076 - 119 6424 921 7217 - 2033 9209 5669 2690 - 3 6610 5772 2046 8421 - 69 5600 9671 8890 0 - 1391 2019 3437 7800 1 - 2 9215 2406 2193 3800 22 - 64 2735 2936 8254 3600 485 - 1478 2911 7546 9850 2801 1156 - 3 5478 9882 1127 6406 7226 7745 - 88 6974 7052 8191 168 669 3626 - 2306 1342 3373 2966 4369 7403 4277 - 6 2265 6243 1079 93 7982 9892 5480 - 174 3437 4807 212 2626 3523 6991 3441 - 5055 9686 9403 6155 6164 2187 2748 9790 - 15 1679 608 2108 4668 4926 5618 2469 3701", "x2": "add idiv sign mul idiv INT+ 5 sqr x_0_1 INT+ 1 0 INT- 5 mul x_0_1 n", "tree": "((sign(((5 idiv (x_0_1)**2) mul 10)) idiv -5) add (x_0_1 mul n))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 5 - 8 - 8 + 7 + 10 + 9 - 5 + 9 - 5 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign x_0_9", "tree": "sign(x_0_9)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "9"}
{"x1": "+ 0 - 2 + 0 + 9 - 6 + 2 + 1 + 15 + 10 + 20 - 5 + 15 + 2 + 44 + 11 + 37 - 21 + 34 + 3 + 105 + 12 + 60 - 89 + 59 - 21 + 236 - 14 + 117 - 291 + 120 - 82 + 589 - 79 + 254 - 815", "x2": "add add x_0_6 sign INT+ 8 sub n mul n idiv x_0_3 n", "tree": "((x_0_6 add sign(8)) add (n sub (n mul (x_0_3 idiv n))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 0 + 10 + 9 + 7 + 2 + 7 - 2 - 576 - 474 - 234 - 570 + 72 + 4 8384 + 4 6074 + 2 5320 + 6 3000 - 1512 - 551 4804 - 581 5764 - 346 7196 - 875 8224 - 44 5788 + 7 9398 8928 + 9 507 5424 + 5 7578 6232 + 14 7272 4288 + 1 6233 6312 - 1381 3059 5568 - 1676 2496 544 - 1125 2401 6968 - 2909 8171 4256 - 464 938 8048 + 28 1742 1276 608 + 36 211 8894 1920 + 25 3099 6341 480 + 66 1018 6824 48", "x2": "mul INT- 6 add add x_0_8 x_0_6 mul x_0_5 n", "tree": "(-6 mul ((x_0_8 add x_0_6) add (x_0_5 mul n)))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "8"}
{"x1": "- 1 - 5 + 3 + 9 - 3 + 7 + 5 - 5 + 2 + 8 - 3 + 4 + 3 - 3 + 1 + 4 - 2 + 1 + 1 - 2 + 0 + 1 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv sub mul abs INT+ 8 x_0_6 add INT- 2 sqr INT- 1 add idiv relu x_0_7 INT- 1 0 n", "tree": "(((abs(8) mul x_0_6) sub (-2 add (-1)**2)) idiv ((relu(x_0_7) idiv -10) add n))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "7"}
{"x1": "+ 5 - 5 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0 + 4 + 5 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 + 10 - 7 + 11 - 6 + 12 - 5 + 13 - 4 + 14 - 3 + 15 - 2 + 16 - 1 + 17 + 0 + 18 + 1 + 19 + 2 + 20 + 3 + 21 + 4 + 22 + 5 + 23 + 6 + 24", "x2": "sub n x_0_1", "tree": "(n sub x_0_1)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 + 5 + 4 + 8 + 3 + 10 - 17 - 3 - 5 - 2 - 8 - 2 - 30 - 17 - 20 - 18 - 25 - 20 - 49 - 37 - 41 - 40 - 48 - 44 - 74 - 63 - 68 - 68 - 77 - 74 - 105 - 95 - 101 - 102 - 112", "x2": "sub mul n mod sqr x_0_2 INT- 1 sub n x_0_6", "tree": "((n mul ((x_0_2)**2 mod -1)) sub (n sub x_0_6))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 51 - 96 - 135 - 168 - 195 - 216 - 231 - 240 - 243 - 240 - 231 - 216 - 195 - 168 - 135 - 96 - 51 + 0 + 57 + 120 + 189 + 264 + 345 + 432 + 525 + 624 + 729 + 840 + 957", "x2": "mul sub n sub INT+ 8 INT- 1 0 mul n INT+ 3", "tree": "((n sub (8 sub -10)) mul (n mul 3))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 5 - 3 + 4 + 9 - 9 - 15 - 13 - 6 - 1 - 19 - 25 - 23 - 16 - 11 - 29 - 35 - 33 - 26 - 21 - 39 - 45 - 43 - 36 - 31 - 49 - 55 - 53 - 46 - 41 - 59 - 65 - 63 - 56", "x2": "add INT- 1 0 x_0_5", "tree": "(-10 add x_0_5)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 0 + 1 + 4", "x2": "sqr relu abs mod mul sign n n sqr INT- 3", "tree": "(relu(abs(((sign(n) mul n) mod (-3)**2))))**2", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 3 - 5 + 10 + 5 - 8 - 11 + 3 - 3 - 17 - 21 - 8 - 15 - 30 - 35 - 23 - 31 - 47 - 53 - 42 - 51 - 68 - 75 - 65 - 75 - 93 - 101 - 92 - 103 - 122 - 131 - 123 - 135 - 155", "x2": "sub x_0_4 n", "tree": "(x_0_4 sub n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 - 3 - 10 + 95 + 48 + 35 + 0 + 963 + 620 + 561 + 216 + 1 2779 + 8988 + 8775 + 3872 + 21 7719 + 16 2324 + 16 7333 + 7 8120 + 457 2855 + 357 1964 + 384 9579 + 187 5888 + 1 1432 2475 + 9287 2260 + 1 393 9929 + 5252 6264 + 33 1535 3283 + 27 8616 9420 + 32 2213 9535 + 16 8084 2304 + 1094 666 319", "x2": "mul n add idiv mod INT- 6 n mod INT+ 4 INT+ 3 add x_0_4 n", "tree": "(n mul (((-6 mod n) idiv (4 mod 3)) add (x_0_4 add n)))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 1 + 10 - 8 - 4 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0 + 10 + 0 + 0 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 5 + 10 - 2 + 1 + 8 - 7 + 7 - 3 - 10 + 9 + 121 + 36 + 196 + 4 + 36 + 225 + 36 + 400 + 144 + 25 + 256 + 4 + 4 + 9 + 4 + 784 + 4 + 4 + 36 + 64 + 4 + 900 + 16 + 289 + 4 + 4 + 400 + 961", "x2": "sqr add INT+ 2 mod add mul x_0_8 add n relu add sub INT- 2 x_0_9 x_0_8 mod n x_0_10 n", "tree": "((2 add (((x_0_8 mul (n add relu(((-2 sub x_0_9) add x_0_8)))) add (n mod x_0_10)) mod n)))**2", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "10"}
{"x1": "+ 8 + 6 + 7 + 4 - 5 - 6 - 5 - 1 + 82 + 91 + 100 + 109 + 117 + 126 + 135 + 144 + 159 + 168 + 178 + 188 + 197 + 207 + 216 + 226 + 236 + 246 + 255 + 265 + 275 + 284 + 294 + 304 + 313 + 323 + 333 + 342 + 352", "x2": "add idiv add n x_0_8 sqr sqr INT+ 2 mul n abs INT- 9", "tree": "(((n add x_0_8) idiv ((2)**2)**2) add (n mul abs(-9)))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "8"}
{"x1": "+ 7 + 8 + 9 - 4 - 1 + 2 + 49 + 64 + 81 + 100 + 11 2225 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225", "x2": "sqr abs add sqr mul INT+ 6 idiv INT+ 3 sqr sqr x_0_6 n", "tree": "(abs((((6 mul (3 idiv ((x_0_6)**2)**2)))**2 add n)))**2", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 - 7 + 16 + 15 - 7 - 5 + 18 + 18 - 4 - 3 + 20 + 20 - 2 - 1 + 23 + 23 + 0 + 1 + 25 + 25 + 2 + 4 + 28 + 27 + 4 + 6 + 30 + 29 + 7 + 9 + 32", "x2": "sub add n x_0_2 add add add x_0_2 INT- 3 idiv n INT- 7 x_0_2", "tree": "((n add x_0_2) sub (((x_0_2 add -3) add (n idiv -7)) add x_0_2))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 0 + 0 + 0 + 0 + 5 + 3 + 0 + 5 + 5 + 4 + 2 + 12 + 8 + 8 + 7 + 5 + 2 + 17 + 17 + 16 + 14 + 11 + 7 + 7 + 6 + 4 + 1 + 26 + 26", "x2": "mod sub x_0_1 mod n INT+ 5 n", "tree": "((x_0_1 sub (n mod 5)) mod n)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 - 5 + 6 + 9 + 12 + 3 + 14 + 17 + 20 + 11 + 22 + 25 + 28 + 19 + 30 + 33 + 36 + 27 + 38 + 41 + 44 + 35 + 46 + 49 + 52 + 43 + 54 + 57 + 60 + 51 + 62 + 65", "x2": "add x_0_4 INT+ 8", "tree": "(x_0_4 add 8)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 2 + 5 + 9 + 3 - 4 - 8 - 2 + 5 + 9 + 3 - 4 - 8 - 2 + 5 + 9 + 3 - 4 - 8 - 2 + 5 + 9 + 3 - 4 - 8 - 2 + 5 + 9 + 3 - 4 - 8 - 2 + 5", "x2": "sub abs sign mod n abs n x_0_3", "tree": "(abs(sign((n mod abs(n)))) sub x_0_3)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 2 + 0 - 4 + 9 - 4 - 4 + 10 - 4 - 6 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 - 1 - 1 + 0", "x2": "idiv x_0_9 add n mul idiv x_0_1 INT+ 4 sign abs n", "tree": "(x_0_9 idiv (n add ((x_0_1 idiv 4) mul sign(abs(n)))))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "9"}
{"x1": "- 3 + 3 - 6 - 1 - 5 - 1 - 4 - 1 - 4 - 1 - 5 - 1 - 7 - 1 - 11 - 1 - 20 + 0 - 43 + 0 - 101 + 0 - 259 + 0 - 720 + 0 - 2160 + 0 - 6960 + 0 - 2 3974 + 0", "x2": "idiv mul x_0_2 add add relu x_0_3 x_0_1 n INT+ 9", "tree": "((x_0_2 mul ((relu(x_0_3) add x_0_1) add n)) idiv 9)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 5 + 16 + 11 + 41 + 47 + 90 + 111 + 171 + 211 + 292 + 355 + 461 + 551 + 686 + 807 + 975 + 1131 + 1336 + 1531 + 1777 + 2015 + 2306 + 2591 + 2931 + 3267 + 3660 + 4051 + 4501 + 4951 + 5462", "x2": "add x_0_2 sqr relu n", "tree": "(x_0_2 add (relu(n))**2)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 2 - 9 + 1 - 5 + 10 - 1 + 4 - 4 + 72 - 9 + 14 + 88 - 12 + 2 + 1 + 5168 + 64 + 178 + 7725 + 124 - 17 - 21 + 2670 8201 + 4072 + 3 1659 + 5967 5599 + 1 5349 + 261 + 412 + 713 3280 65 6371 + 1658 1153 + 10 229 2249 + 3561 1771 1600 8768 + 2 3559 1767 + 6 8086 + 16 9708", "x2": "sub sqr x_0_7 n", "tree": "((x_0_7)**2 sub n)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "7"}
{"x1": "- 1 + 6 + 5 + 8 + 8 + 1 + 15 + 8 + 6 + 15 + 10 + 7 + 20 + 11 + 13 + 24 + 21 + 20 + 44 + 32 + 33 + 68 + 53 + 53 + 112 + 85 + 86 + 180 + 138 + 139 + 292 + 223 + 225 + 472 + 361", "x2": "add x_0_3 abs mod mul sign n x_0_6 x_0_2", "tree": "(x_0_3 add abs(((sign(n) mul x_0_6) mod x_0_2)))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 - 9 - 5 + 1 - 9 + 19 - 9 + 45 - 9 + 79 - 9 + 121 - 9 + 171 - 9 + 229 - 9 + 295 - 9 + 369 - 9 + 451 - 9 + 541 - 9 + 639 - 9 + 745 - 9 + 859", "x2": "sub abs mod sign idiv abs x_0_1 x_0_1 mul add n idiv x_0_1 sqr n n INT+ 1 0", "tree": "(abs((sign((abs(x_0_1) idiv x_0_1)) mod ((n add (x_0_1 idiv (n)**2)) mul n))) sub 10)", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 10 - 3 - 5 - 6 + 3 - 1 + 4 + 5 - 10 + 8 + 7 + 11 + 6 + 6 + 6 + 0 + 3 + 0 + 1 + 10 + 3 + 1 + 4 + 3 + 3 + 0 + 1 + 0 + 0 + 2 + 5 + 0 + 1 + 0 + 0 + 0 + 0 + 2 + 0 + 1", "x2": "relu sub abs add x_0_11 INT- 3 relu mod add x_0_10 idiv x_0_12 sign INT- 9 INT+ 5", "tree": "relu((abs((x_0_11 add -3)) sub relu(((x_0_10 add (x_0_12 idiv sign(-9))) mod 5))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "12"}
{"x1": "- 3 + 5 - 2 + 0 + 4 + 5 + 5 + 0 + 4 + 5 + 5 + 0 + 4 + 5 + 5 + 0 + 4 + 5 + 5 + 0 + 4 + 5 + 5 + 0 + 4 + 5 + 5 + 0 + 4 + 5 + 5 + 0 + 4", "x2": "mod x_0_4 sub INT+ 8 abs sign add abs mul INT- 1 0 n n", "tree": "(x_0_4 mod (8 sub abs(sign((abs((-10 mul n)) add n)))))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 0 + 1 + 2", "x2": "mod n sqr INT- 3", "tree": "(n mod (-3)**2)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 3 + 7 + 3 - 3 - 7 - 4 + 10 + 18 + 18 + 18 + 18 + 90 + 220 + 220 + 220 + 220 + 1138 + 4378 + 4378 + 4378 + 4378 + 1 7666 + 9 8948 + 9 8948 + 9 8948 + 9 8948 + 55 6328 + 71 2120 + 71 2120 + 71 2120 + 71 2120 + 1500 2040 + 3722 5032 + 3722 5032 + 3722 5032", "x2": "add x_0_1 relu mul n mod sqr x_0_6 x_0_5", "tree": "(x_0_1 add relu((n mul ((x_0_6)**2 mod x_0_5))))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 4 - 3 - 5 - 6 + 5 + 5 + 5 + 1 + 1 + 1 + 6 + 6 + 6 + 2 + 2 + 2 + 7 + 7 + 7 + 3 + 3 + 3 + 8 + 8 + 8 + 4 + 4 + 4 + 9 + 9 + 9 + 5 + 5", "x2": "sub x_0_4 add idiv add n mod INT- 8 sqr INT+ 4 INT- 3 add mod relu x_0_3 n x_0_4", "tree": "(x_0_4 sub (((n add (-8 mod (4)**2)) idiv -3) add ((relu(x_0_3) mod n) add x_0_4)))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 2 + 7 - 1 + 7 + 1 - 7 - 1 + 10 + 6 - 1 - 3 + 13 - 2 + 13 + 1 - 8 - 2 + 19 + 11 - 2 - 4 + 25 - 3 + 25 + 1 - 9 - 3 + 37 + 21 - 3 - 5 + 49 - 4 + 49 + 1 - 10 - 4 + 73 + 41", "x2": "add add sign INT- 8 x_0_10 relu x_0_10", "tree": "((sign(-8) add x_0_10) add relu(x_0_10))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "10"}
{"x1": "- 4 + 6 + 2 + 0 + 2 - 3 + 9 - 9 + 7 - 4 - 7 - 3 + 7 + 3 + 1 + 3 - 2 + 10 - 8 + 8 - 3 - 6 - 2 + 8 + 4 + 2 + 4 - 1 + 11 - 7 + 9 - 2 - 5 - 1 + 9 + 5 + 3 + 5 + 0 + 12", "x2": "add x_0_11 sign sign n", "tree": "(x_0_11 add sign(sign(n)))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "11"}
{"x1": "- 10 - 10 + 2 + 0 + 0 + 4 + 0 + 0 + 7 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0", "x2": "mod sqr mod relu x_0_3 add n x_0_3 n", "tree": "(((relu(x_0_3) mod (n add x_0_3)))**2 mod n)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 1 + 9 + 3 - 2 + 8 - 72 - 24 + 16 - 64 + 576 + 192 - 128 + 512 - 4608 - 1536 + 1024 - 4096 + 3 6864 + 1 2288 - 8192 + 3 2768 - 29 4912 - 9 8304 + 6 5536 - 26 2144 + 235 9296 + 78 6432 - 52 4288 + 209 7152 - 1887 4368 - 629 1456 + 419 4304 - 1677 7216", "x2": "mul mul x_0_4 INT- 8 sqr sign x_0_3", "tree": "((x_0_4 mul -8) mul (sign(x_0_3))**2)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 + 0 + 1 + 4 + 5 + 4 - 6 + 5 + 2 + 6 + 5 + 5 + 5 + 6 + 5 + 7 + 5 + 6 + 6 + 7 + 6 + 7 + 6 + 8 + 7 + 8 + 7 + 8 + 8 + 9 + 8 + 9 + 8 + 9 + 9 + 9", "x2": "idiv sub idiv abs n INT+ 2 mod x_0_7 INT- 9 INT+ 2", "tree": "(((abs(n) idiv 2) sub (x_0_7 mod -9)) idiv 2)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "7"}
{"x1": "+ 3 + 6 + 11 + 18 + 27 + 38 + 51 + 66 + 83 + 102 + 123 + 146 + 171 + 198 + 227 + 258 + 291 + 326 + 363 + 402 + 443 + 486 + 531 + 578 + 627 + 678 + 731 + 786 + 843", "x2": "add mul n n abs INT- 2", "tree": "((n mul n) add abs(-2))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 4 + 1 - 5 - 9 + 43 + 29 + 9 - 44 - 89 + 474 + 349 + 118 - 615 - 1334 + 7585 + 5934 + 2125 - 1 1684 - 2 6679 + 15 9286 + 13 549 + 4 8876 - 28 415 - 66 6974 + 414 1437 + 352 4824 + 136 8529 - 813 2034 - 2000 9219 + 1 2838 4548 + 1 1279 4369 + 4516 1458 - 2 7648 9155", "x2": "add mul x_0_5 n sign relu add x_0_4 INT+ 7", "tree": "((x_0_5 mul n) add sign(relu((x_0_4 add 7))))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 0 + 9 - 3 + 0 + 3 - 3 - 4 + 3 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign x_0_10", "tree": "sign(x_0_10)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "10"}
{"x1": "+ 0 + 4 - 7 + 6 - 4 - 8 + 3 + 7 - 2 + 8 + 10 - 28 - 28 + 22 - 36 - 38 + 11 + 19 - 35 + 23 + 5 - 46 - 47 + 40 - 45 - 56 + 12 + 31 - 31 + 46 + 36 - 66 - 62 + 44 - 59 - 70 + 7 + 47 - 78", "x2": "sub mod sub x_0_10 x_0_2 x_0_5 sub INT+ 6 mul mul sign x_0_5 n INT- 2", "tree": "(((x_0_10 sub x_0_2) mod x_0_5) sub (6 sub ((sign(x_0_5) mul n) mul -2)))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "10"}
{"x1": "- 7 - 10 - 8 + 10 - 7 + 10 + 1 - 10 + 1 - 5 - 7 - 4 + 15 - 1 + 17 + 9 - 1 + 11 + 6 + 5 + 9 + 29 + 14 + 33 + 26 + 17 + 30 + 26 + 26 + 31 + 52 + 38 + 58 + 52 + 44 + 58 + 55 + 56", "x2": "add add INT- 2 add INT- 6 n x_0_9", "tree": "((-2 add (-6 add n)) add x_0_9)", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "9"}
{"x1": "+ 2 - 6 - 1 + 2 + 2 + 0 - 10 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2", "x2": "relu x_0_7", "tree": "relu(x_0_7)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "7"}
{"x1": "+ 3 - 5 - 7 + 10 - 2 - 5 + 7 - 10 + 2 + 8 - 7 + 10 - 1 - 8 + 7 - 10 + 1 + 10 - 7 + 14 + 0 - 10 + 7 - 14 + 0 + 10 - 7 + 14 + 4 - 10 + 7 - 10 - 4 + 16 - 7", "x2": "sub relu mod n relu sub add sub x_0_6 INT+ 3 idiv n x_0_3 sign add n INT+ 6 x_0_4", "tree": "(relu((n mod relu((((x_0_6 sub 3) add (n idiv x_0_3)) sub sign((n add 6)))))) sub x_0_4)", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 9 + 5 - 2 + 4 - 3 + 6 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156 + 1225", "x2": "sqr mod n mul sub relu x_0_1 x_0_6 add sqr sqr n relu relu n", "tree": "((n mod ((relu(x_0_1) sub x_0_6) mul (((n)**2)**2 add relu(relu(n))))))**2", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 25 + 100 + 225 + 400 + 625 + 900 + 1225 + 1600 + 2025 + 2500 + 3025 + 3600 + 4225 + 4900 + 5625 + 6400 + 7225 + 8100 + 9025 + 1 0 + 1 1025 + 1 2100 + 1 3225 + 1 4400 + 1 5625 + 1 6900 + 1 8225 + 1 9600 + 2 1025", "x2": "sqr relu mul INT+ 5 n", "tree": "(relu((5 mul n)))**2", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 0 + 10 + 11 + 1 + 0 + 10 + 11 + 1 + 0 + 10 + 11 + 1 + 0 + 10 + 11 + 1 + 0 + 10 + 11 + 1 + 0 + 10 + 11 + 1 + 0 + 10 + 11 + 1 + 0 + 10", "x2": "sub mul sub INT+ 9 n idiv n n add INT- 1 sub relu x_0_2 sub n INT- 1", "tree": "(((9 sub n) mul (n idiv n)) sub (-1 add (relu(x_0_2) sub (n sub -1))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 1 + 9 + 5 - 8 - 10 - 7 + 8 + 6 - 10 - 5 + 7 - 11 - 19 - 11 - 15 - 28 - 30 - 27 - 12 - 14 - 30 - 25 - 13 - 31 - 39 - 31 - 35 - 48 - 50 - 47 - 32 - 34 - 50 - 45 - 33 - 51 - 59 - 51 - 55 - 68", "x2": "sub x_0_12 mul INT+ 4 add sqr sign relu sign n abs INT- 4", "tree": "(x_0_12 sub (4 mul ((sign(relu(sign(n))))**2 add abs(-4))))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "12"}
{"x1": "- 1 - 10 + 3 - 4 - 1 + 2 - 2 - 8 + 4 - 5 - 2 + 3 - 3 - 7 + 5 - 6 - 3 + 3 - 4 - 7 + 7 - 6 - 4 + 3 - 5 - 7 + 9 - 6 - 5 + 3 - 6 - 7", "x2": "idiv sqr n mul n x_0_3", "tree": "((n)**2 idiv (n mul x_0_3))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 2 - 13 - 10 + 4 + 0 - 15 - 12 + 2 - 2 - 17 - 14 + 0 - 4 - 19 - 16 - 2 - 6 - 21 - 18 - 4 - 8 - 23 - 20 - 6 - 10 - 25 - 22 - 8 - 12 - 27", "x2": "sub sub INT- 4 x_0_2 n", "tree": "((-4 sub x_0_2) sub n)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 5 + 0 - 2 - 1 + 0 - 2 - 5 - 2 - 5 - 5 + 0 - 2 - 1 - 5 + 0 - 2 - 2 - 5 + 0 - 2 - 1 + 0 - 2 - 5 - 5 - 2 - 5 + 0 - 2 - 1", "x2": "mod add sqr mul x_0_1 sub n idiv n INT+ 5 INT+ 5 INT- 7", "tree": "((((x_0_1 mul (n sub (n idiv 5))))**2 add 5) mod -7)", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 8 - 9 - 7 + 9 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 - 1 - 1", "x2": "sign x_0_5", "tree": "sign(x_0_5)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 8 - 8 - 4 - 7 + 6 - 35 - 42 - 17 - 47 - 43 - 367 - 485 - 201 - 637 - 623 - 5849 - 8221 - 3593 - 1 2077 - 1 2433 - 12 2801 - 18 833 - 8 2609 - 28 9817 - 31 793 - 319 2793 - 488 2457 - 231 3017 - 840 4657 - 932 3753 - 9897 6545 - 1 5623 8585 - 7632 9521 - 2 8575 8297", "x2": "sub sub INT- 1 INT- 8 sub sub abs mul x_0_5 n abs mod n n n", "tree": "((-1 sub -8) sub ((abs((x_0_5 mul n)) sub abs((n mod n))) sub n))", "n_input_points": "29", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 20 + 45 + 80 + 125 + 180 + 245 + 320 + 405 + 500 + 605 + 720 + 845 + 980 + 1125 + 1280 + 1445 + 1620 + 1805 + 2000 + 2205 + 2420 + 2645 + 2880 + 3125 + 3380 + 3645 + 3920 + 4205 + 4500", "x2": "mul mul INT+ 5 idiv x_0_1 x_0_1 sqr n", "tree": "((5 mul (x_0_1 idiv x_0_1)) mul (n)**2)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 + 6 + 6 + 2 + 2 + 2 + 3 + 4 + 4 + 4 + 5 + 0 + 2 + 6 + 5 + 6 + 6 + 2 + 3 + 4 + 4 + 4 + 5 + 0 + 2 + 6 + 5 + 6 + 6 + 2 + 3", "x2": "add mod mod n relu INT+ 6 n abs abs sub x_0_2 INT+ 4", "tree": "(((n mod relu(6)) mod n) add abs(abs((x_0_2 sub 4))))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1 + 6 + 9 - 8 - 1", "x2": "mul idiv n n x_0_4", "tree": "((n idiv n) mul x_0_4)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 4 - 8 + 10 + 14 + 19 + 2 - 1 - 5 + 13 + 17 + 22 + 5 + 2 - 2 + 16 + 20 + 25 + 8 + 5 + 1 + 19 + 23 + 28 + 11 + 8 + 4 + 22 + 26 + 31 + 14 + 11 + 7", "x2": "add idiv n sign INT+ 5 sub INT+ 6 x_0_3", "tree": "((n idiv sign(5)) add (6 sub x_0_3))", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 + 6 - 1 + 25 + 4 + 49 + 1681 + 5776 + 211 4116 + 18 6244 336 + 1 2275 4655 4809 + 4 5167 396 9444 8996 + 4 5644 2030 8669 1294 4049 + 600 6293 857 319 5294 9969 + 23 9407 1394 6888 2078 3689 + 28 1122 6441 + 324 + 361 + 400 + 441 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024 + 1089 + 1156", "x2": "sqr add idiv x_0_1 x_0_4 n", "tree": "(((x_0_1 idiv x_0_4) add n))**2", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 2 + 22 - 2 + 58 - 2 + 110 - 2 + 178 - 2 + 262 - 2 + 362 - 2 + 478 - 2 + 610 - 2 + 758 - 2 + 922 - 2 + 1102 - 2 + 1298 - 2 + 1510 - 2 + 1738 - 2", "x2": "add mul mul mul add idiv x_0_1 n INT- 1 n x_0_1 sub sqr relu INT- 6 idiv n x_0_1 INT- 2", "tree": "((((((x_0_1 idiv n) add -1) mul n) mul x_0_1) mul ((relu(-6))**2 sub (n idiv x_0_1))) add -2)", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 5 - 1 - 5 - 20 - 5 - 30 - 140 - 40 - 270 - 1400 - 440 - 3240 - 1 8200 - 6160 - 4 8600 - 29 1200 - 10 4720 - 87 4800 - 553 2800 - 209 4400 - 1837 800 - 1 2172 1600 - 4817 1200 - 4 4089 9200 - 30 4304 0 - 12 5245 1200 - 119 427 8400 - 852 512 0 - 363 2108 4800 - 3571 2835 2000 - 2 6413 5872 0 - 1 1622 7471 3600", "x2": "mul n idiv x_0_3 sign n", "tree": "(n mul (x_0_3 idiv sign(n)))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 9 - 1 + 6 + 36 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756 + 812 + 870 + 930", "x2": "mul sub sqr n n abs mod sign x_0_2 abs n", "tree": "(((n)**2 sub n) mul abs((sign(x_0_2) mod abs(n))))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 6 + 7 - 2 + 0 - 1 + 7 + 1 - 7 - 5 - 204 - 230 - 232 - 244 - 255 - 268 - 274 - 287 - 309 - 330 - 551 - 799 - 1050 - 1314 - 1590 - 1880 - 2177 - 2488 - 2822 - 3178 - 3756 - 4583 - 5662 - 7006 - 8627 - 1 539 - 1 2749 - 1 5271 - 1 8128", "x2": "sub x_0_10 add mod sub INT+ 5 INT+ 9 abs x_0_1 add n mul mul x_0_10 relu x_0_4 x_0_8", "tree": "(x_0_10 sub (((5 sub 9) mod abs(x_0_1)) add (n add ((x_0_10 mul relu(x_0_4)) mul x_0_8))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "10"}
{"x1": "- 5 - 5 + 10 + 8 - 5 + 2 - 3 - 1 - 1 + 1 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1", "x2": "idiv x_0_7 abs relu n", "tree": "(x_0_7 idiv abs(relu(n)))", "n_input_points": "29", "n_ops": "3", "n_recurrence_degree": "7"}
{"x1": "+ 8 - 4 + 6 + 1 - 11 - 1 - 6 - 18 - 8 - 13 - 25 - 15 - 20 - 32 - 22 - 27 - 39 - 29 - 34 - 46 - 36 - 41 - 53 - 43 - 48 - 60 - 50 - 55 - 67 - 57 - 62 - 74", "x2": "sub x_0_3 INT+ 7", "tree": "(x_0_3 sub 7)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 1 + 5 + 1 + 8 - 6 - 13 + 13 + 16 + 9 - 29 + 18 + 8 - 55 - 141 + 21 - 32 - 135 + 27 + 34 - 24 - 102 + 19 - 75 + 48 - 479 - 309 + 18 - 344 - 138 - 381 - 262 + 0 - 663", "x2": "add sub n sqr mod x_0_4 n n", "tree": "((n sub ((x_0_4 mod n))**2) add n)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 18 + 36 + 72 + 144 + 288 + 576 + 1152 + 2304 + 4608 + 9216 + 1 8432 + 3 6864 + 7 3728 + 14 7456 + 29 4912 + 58 9824 + 117 9648 + 235 9296 + 471 8592 + 943 7184 + 1887 4368 + 3774 8736 + 7549 7472 + 1 5099 4944 + 3 198 9888 + 6 397 9776 + 12 795 9552 + 24 1591 9104 + 48 3183 8208", "x2": "add relu x_0_1 x_0_1", "tree": "(relu(x_0_1) add x_0_1)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 - 3 - 7 - 3 - 12 - 16 - 12 - 21 - 25 - 21 - 30 - 34 - 30 - 39 - 43 - 39 - 48 - 52 - 48 - 57 - 61 - 57 - 66 - 70 - 66 - 75 - 79 - 75 - 84 - 88 - 84", "x2": "add INT- 9 x_0_3", "tree": "(-9 add x_0_3)", "n_input_points": "29", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 8 + 1 + 8 + 24 + 28 + 25 + 36 + 56 + 64 + 65 + 80 + 104 + 116 + 121 + 140 + 168 + 184 + 193 + 216 + 248 + 268 + 281 + 308 + 344 + 368 + 385 + 416 + 456 + 484 + 505", "x2": "abs sub sqr add n mod add n n n x_0_2", "tree": "abs((((n add ((n add n) mod n)))**2 sub x_0_2))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 7 - 5 - 1 - 3 - 7 - 5 + 0 + 0 - 7 - 3 - 2 - 7 - 5 - 5 - 2 - 1 - 4 - 2 - 1 - 4 - 1 - 4 - 2 - 2 + 0 - 2 - 2 - 5 - 1 + 0 - 6 - 5 - 2", "x2": "sub sub n n mod sub n add mul x_0_5 sub sign idiv INT- 2 INT+ 8 INT+ 8 x_0_1 INT+ 8", "tree": "((n sub n) sub ((n sub ((x_0_5 mul (sign((-2 idiv 8)) sub 8)) add x_0_1)) mod 8))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 4 + 7 - 3 - 8 - 1 + 2 + 8 - 5 - 9 + 8 - 6 - 13 - 2 - 12 - 17 - 10 - 7 - 1 - 14 - 18 - 1 - 15 - 22 - 11 - 21 - 26 - 19 - 16 - 10 - 23 - 27 - 10 - 24 - 31 - 20 - 30 - 35 - 28 - 25 - 19", "x2": "sub add INT- 1 0 x_0_11 INT- 1", "tree": "((-10 add x_0_11) sub -1)", "n_input_points": "29", "n_ops": "2", "n_recurrence_degree": "11"}
{"x1": "- 4 + 3 + 9 + 5 - 22 + 16 + 61 + 38 - 200 + 158 + 669 + 454 - 2602 + 2210 + 1 33 + 7262 - 4 4236 + 3 9778 + 19 625 + 14 5238 - 92 8958 + 87 5114 + 438 4373 + 348 5710 - 2322 3952 + 2275 2962 + 1 1837 8069 + 9759 9878 - 6 7349 4610 + 6 8258 8858 + 36 6972 137 + 31 2319 6094 - 222 2532 2132", "x2": "sub add mul abs n x_0_4 INT- 1 mod sqr sign x_0_3 n", "tree": "(((abs(n) mul x_0_4) add -1) sub ((sign(x_0_3))**2 mod n))", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 5 + 0 - 10 - 8 + 9 - 3 - 7 - 6 - 4 - 9 - 20 - 35 - 42 - 61 - 78 - 102 - 105 - 117 - 132 - 151 - 169 - 207 - 251 - 294 - 367 - 458 - 576 - 697 - 833 - 981 - 1157 - 1330 - 1553 - 1833 - 2136 - 2529 - 3010 - 3596 - 4309", "x2": "sub x_0_1 relu add abs abs x_0_11 mod sqr mul add n INT- 1 x_0_1 n", "tree": "(x_0_1 sub relu((abs(abs(x_0_11)) add ((((n add -1) mul x_0_1))**2 mod n))))", "n_input_points": "29", "n_ops": "9", "n_recurrence_degree": "11"}
{"x1": "- 3 - 9 - 6 + 5 + 2 + 15 + 11 - 11 - 3 - 53 - 36 + 45 + 10 + 249 + 177 - 243 - 54 - 1497 - 1124 + 1617 + 375 + 1 975 + 8622 - 1 2939 - 3128 - 9 5111 - 7 7601 + 12 761 + 3 244 + 95 1117 + 80 1874 - 128 8099 - 33 2676", "x2": "sub sub sqr sign n INT+ 4 mul idiv x_0_4 mod mul INT+ 1 0 sign abs x_0_1 INT+ 7 n", "tree": "(((sign(n))**2 sub 4) sub ((x_0_4 idiv ((10 mul sign(abs(x_0_1))) mod 7)) mul n))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 10 - 3 + 2 + 40 + 45 - 20 + 5 + 195 + 225 - 105 + 20 + 970 + 1120 - 525 + 95 + 4845 + 5595 - 2630 + 475 + 2 4220 + 2 7970 - 1 3155 + 2370 + 12 1100 + 13 9845 - 6 5780 + 1 1845 + 60 5495 + 69 9225 - 32 8905 + 5 9220 + 302 7470", "x2": "mul add x_0_4 idiv mod n mod INT+ 5 INT+ 6 INT- 8 abs INT+ 5", "tree": "((x_0_4 add ((n mod (5 mod 6)) idiv -8)) mul abs(5))", "n_input_points": "29", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 9 - 8 - 5 + 3 + 5 + 3 - 1 - 10 - 13 - 12 - 9 - 1 + 1 - 1 - 5 - 14 - 17 - 16 - 13 - 5 - 3 - 5 - 9 - 18 - 21 - 20 - 17 - 9 - 7 - 9 - 13 - 22 - 25", "x2": "sub sub sqr INT+ 1 abs abs n x_0_4", "tree": "(((1)**2 sub abs(abs(n))) sub x_0_4)", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 - 2 + 7 + 8 + 6 - 4 + 10 + 9 + 10 - 9 - 10 + 8 + 8 + 11 + 13 + 13 + 6 + 17 + 11 + 12 + 3 + 3 + 13 + 9 + 12 + 18 + 16 + 9 + 13 + 13 + 18 + 11 + 9 + 21 + 13 + 19 + 11 + 15 + 16 + 14", "x2": "sub mod add relu x_0_5 x_0_9 x_0_11 INT- 9", "tree": "(((relu(x_0_5) add x_0_9) mod x_0_11) sub -9)", "n_input_points": "29", "n_ops": "4", "n_recurrence_degree": "11"}
{"x1": "+ 9 + 10 + 58 + 58 + 11 + 12 + 60 + 60 + 13 + 14 + 62 + 62 + 15 + 16 + 64 + 64 + 17 + 18 + 66 + 66 + 19 + 20 + 68 + 68 + 21 + 22 + 70 + 70 + 23 + 24 + 72", "x2": "relu relu sub sqr INT+ 8 sub x_0_2 n", "tree": "relu(relu(((8)**2 sub (x_0_2 sub n))))", "n_input_points": "29", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 1 - 9 - 2 - 7 - 7 + 1 + 3 - 5 + 8 + 9 - 8 + 2 + 10 - 21 - 13 + 11 - 31 - 32 + 22 - 29 - 55 + 40 - 11 - 92 + 53 + 27 - 150 + 45 + 99 - 224 - 4 + 226 - 293 - 128", "x2": "sub add sub sub sub x_0_3 INT- 1 0 n n add idiv INT- 9 n n x_0_5", "tree": "(((((x_0_3 sub -10) sub n) sub n) add ((-9 idiv n) add n)) sub x_0_5)", "n_input_points": "29", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 2 - 5 - 7 - 8 + 7 + 8 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 1 + 2 + 3", "x2": "add mod n add add relu sign n n sub INT+ 5 sub n INT+ 2 sign sub n x_0_5", "tree": "((n mod ((relu(sign(n)) add n) add (5 sub (n sub 2)))) add sign((n sub x_0_5)))", "n_input_points": "29", "n_ops": "10", "n_recurrence_degree": "5"}
